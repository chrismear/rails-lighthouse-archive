<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-04T12:02:05+01:00</created-at>
  <creator-id type="integer">18670</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">107</number>
  <permalink>level-hooks-for-validations</permalink>
  <priority type="integer">12828</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord enhancement</tag>
  <title>Level hooks for validations</title>
  <updated-at type="datetime">2008-08-20T17:16:31+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">17</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Michael Schuerig</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
  <priority-name nil="true"></priority-name>
  <original-body>This patch adds a :level option to validations. When a validation fails, it adds its failure notice to the  Errors object indicated by the level. At this time only the level :error is supported, i.e., failures are added to the object accessed through my_model.errors.

The idea is to provide minimal support for applications or plugins to add further validation levels as needed.</original-body>
  <latest-body>This patch adds a :level option to validations. When a validation fails, it adds its failure notice to the  Errors object indicated by the level. At this time only the level :error is supported, i.e., failures are added to the object accessed through my_model.errors.

The idea is to provide minimal support for applications or plugins to add further validation levels as needed.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
This patch adds a :level option to validations. When a validation fails, it adds its failure notice to the  Errors object indicated by the level. At this time only the level :error is supported, i.e., failures are added to the object accessed through my_model.errors.
&lt;/p&gt;&lt;p&gt;
The idea is to provide minimal support for applications or plugins to add further validation levels as needed.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch adds a :level option to validations. When a validation fails, it adds its failure notice to the  Errors object indicated by the level. At this time only the level :error is supported, i.e., failures are added to the object accessed through my_model.errors.

The idea is to provide minimal support for applications or plugins to add further validation levels as needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This patch adds a :level option to validations. When a validation fails, it adds its failure notice to the  Errors object indicated by the level. At this time only the level :error is supported, i.e., failures are added to the object accessed through my_model.errors.
&lt;/p&gt;&lt;p&gt;
The idea is to provide minimal support for applications or plugins to add further validation levels as needed.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-04T12:02:05+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-04T12:02:05+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">1</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think I'd find this useful, though please don't build your API around a meta send, it's not really unnecessary and adds overhead.  It's just as easy to implement in a way that's backward compatible and without the send.

@@@ ruby
def errors(level=nil) # in AR::Base

record.errors.add_to_base(&quot;Something is wrong&quot;)
record.errors(:warnings).add_to_base(&quot;Something is wrong&quot;)
@@@

Or something like that. A more generic name for @#errors@ like @#validation_failures@ might make more sense, and make @#errors@ call @validation_failures@ with @:error@ for backward compatibility.

I have some code that could use this feature to clean up a multilevel validation scheme, though it's not edge-compatible yet.  I might try to play around with this approach anyway.  If I've got so many comments on your code I should probably answer it with a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I think I'd find this useful, though please don't build your API around a meta send, it's not really unnecessary and adds overhead.  It's just as easy to implement in a way that's backward compatible and without the send.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def errors(level=nil) # in AR::Base

record.errors.add_to_base(&amp;quot;Something is wrong&amp;quot;)
record.errors(:warnings).add_to_base(&amp;quot;Something is wrong&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Or something like that. A more generic name for &lt;code&gt;#errors&lt;/code&gt; like &lt;code&gt;#validation_failures&lt;/code&gt; might make more sense, and make &lt;code&gt;#errors&lt;/code&gt; call &lt;code&gt;validation_failures&lt;/code&gt; with &lt;code&gt;&lt;/code&gt; for backward compatibility.
&lt;/p&gt;&lt;p&gt;
I have some code that could use this feature to clean up a multilevel validation scheme, though it's not edge-compatible yet.  I might try to play around with this approach anyway.  If I've got so many comments on your code I should probably answer it with a patch.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-04T20:01:55+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-04T20:01:55+01:00</updated-at>
      <user-id type="integer">11372</user-id>
      <version type="integer">2</version>
      <user-name>Josh Susser</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>errors(nil) certainly seems like a reasonable approach, do you have any thoughts michael?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
errors(nil) certainly seems like a reasonable approach, do you have any thoughts michael?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-04T23:12:25+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-04T23:12:25+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think I would find this useful also. 

To DRY it up a little could you not put the level extraction into the validates_each block above the loop so you only need to call it in one place. i.e.

{{{
      def validates_each(*attrs)
        options = attrs.extract_options!.symbolize_keys
        attrs   = attrs.flatten
              
        level = validation_level(options)

        # Declare the validation.
        send(validation_method(options[:on] || :save), options) do |record|
          attrs.each do |attr|
            value = record.send(attr)
            next if (value.nil? &amp;&amp; options[:allow_nil]) || (value.blank? &amp;&amp; options[:allow_blank])
            yield record, attr, value
          end
        end
      end
}}}

If it was tied into save so that as well as false you could pass a symbol or hash so you could be specific as to which error level was to be ignored on save. e.g

{{{
save(false, :allow =&gt; :warnings)
}}}</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I think I would find this useful also.
&lt;/p&gt;&lt;p&gt;
To DRY it up a little could you not put the level extraction into the validates_each block above the loop so you only need to call it in one place. i.e.
&lt;/p&gt;&lt;p&gt;
{{{
&lt;/p&gt;&lt;p&gt;
def validates_each(*attrs)
&lt;/p&gt;&lt;p&gt;
options = attrs.extract_options!.symbolize_keys
&lt;/p&gt;&lt;p&gt;
attrs   = attrs.flatten
&lt;/p&gt;&lt;p&gt;
level = validation_level(options)
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
Declare the validation.
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
send(validation_method(options[:on] || :save), options) do |record|
&lt;/p&gt;&lt;p&gt;
attrs.each do |attr|
&lt;/p&gt;&lt;p&gt;
value = record.send(attr)
&lt;/p&gt;&lt;p&gt;
next if (value.nil? &amp;&amp; options[:allow_nil]) || (value.blank? &amp;&amp; options[:allow_blank])
&lt;/p&gt;&lt;p&gt;
yield record, attr, value
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
}}}
&lt;/p&gt;&lt;p&gt;
If it was tied into save so that as well as false you could pass a symbol or hash so you could be specific as to which error level was to be ignored on save. e.g
&lt;/p&gt;&lt;p&gt;
{{{
&lt;/p&gt;&lt;p&gt;
save(false, :allow =&gt; :warnings)
&lt;/p&gt;&lt;p&gt;
}}}
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-04T23:43:05+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-04T23:43:05+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">4</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry wrong formatting.

I think I would find this useful also.

To DRY it up a little could you not put the level extraction into the validates_each block above the loop so you only need to call it in one place. i.e.

@@@
def validates_each(*attrs)
  options = attrs.extract_options!.symbolize_keys
  attrs   = attrs.flatten

  level = validation_level(options)

  # Declare the validation.
  send(validation_method(options[:on] || :save), options) do |record|
    attrs.each do |attr|
      value = record.send(attr)
      next if (value.nil? &amp;&amp; options[:allow_nil]) || (value.blank? &amp;&amp; options[:allow_blank])
      yield record, attr, value
    end
  end
end
@@@

If it was tied into save so that as well as false you could pass a symbol or hash so you could be specific as to which error level was to be ignored on save. e.g

@@@
save(false, :allow =&gt; :warnings)
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sorry wrong formatting.
&lt;/p&gt;&lt;p&gt;
I think I would find this useful also.
&lt;/p&gt;&lt;p&gt;
To DRY it up a little could you not put the level extraction into the validates_each block above the loop so you only need to call it in one place. i.e.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;def validates_each(*attrs)
  options = attrs.extract_options!.symbolize_keys
  attrs   = attrs.flatten

  level = validation_level(options)

  # Declare the validation.
  send(validation_method(options[:on] || :save), options) do |record|
    attrs.each do |attr|
      value = record.send(attr)
      next if (value.nil? &amp;amp;&amp;amp; options[:allow_nil]) || (value.blank? &amp;amp;&amp;amp; options[:allow_blank])
      yield record, attr, value
    end
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
If it was tied into save so that as well as false you could pass a symbol or hash so you could be specific as to which error level was to be ignored on save. e.g
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;save(false, :allow =&amp;gt; :warnings)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-04T23:46:27+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-04T23:46:27+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">5</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Josh, Koz: I'm fine with

@@@ ruby
def errors(level = nil)
  level ||= :errors
  ...
@@@

Adam: I understand your DRY intention, but not how it's going to work. level isn't even used inside the block.

save with an option to allow validation failures up to a certain level sounds interesting and is something I didn't think of. There are two aspects that make me hesitate:

# The first boolean arg and the latter :allow option are not orthogonal. I think the first arg should be either true/false or a hash.
# The functionality could be added by a plugin and doesn't have to go into core.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Josh, Koz: I'm fine with
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def errors(level = nil)
  level ||= :errors
  ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Adam: I understand your DRY intention, but not how it's going to work. level isn't even used inside the block.
&lt;/p&gt;&lt;p&gt;
save with an option to allow validation failures up to a certain level sounds interesting and is something I didn't think of. There are two aspects that make me hesitate:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
The first boolean arg and the latter :allow option are not orthogonal. I think the first arg should be either true/false or a hash.
&lt;/li&gt;&lt;li&gt;
The functionality could be added by a plugin and doesn't have to go into core.
&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T01:01:12+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-05T01:01:12+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">6</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, I didn't see any use of the level variable outside of the validates_each block in your patch, with the exception of 'validates_presence_of'. 

My example is incomplete as I left out level in the yield. But on seconds thoughts, it would break existing plugins. So perhaps not.

1. Agreed, was just first thought. A hash or boolean might be clearer.

2. It would be useful in some of my work, so a plugin might be on the cards.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ok, I didn't see any use of the level variable outside of the validates_each block in your patch, with the exception of 'validates_presence_of'.
&lt;/p&gt;&lt;p&gt;
My example is incomplete as I left out level in the yield. But on seconds thoughts, it would break existing plugins. So perhaps not.
&lt;/p&gt;&lt;p&gt;
1. Agreed, was just first thought. A hash or boolean might be clearer.
&lt;/p&gt;&lt;p&gt;
2. It would be useful in some of my work, so a plugin might be on the cards.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T01:56:54+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-05T01:56:54+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">7</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Actually a cleaner solution than my first is to just add 
:level =&gt; :errors 
in the default configuration hash for each validation method. No need for an extra method to extract and pluralize it. Then just use configuration[:level] where needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Actually a cleaner solution than my first is to just add
&lt;/p&gt;&lt;p&gt;
:level =&gt; :errors
&lt;/p&gt;&lt;p&gt;
in the default configuration hash for each validation method. No need for an extra method to extract and pluralize it. Then just use configuration[:level] where needed.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T02:19:13+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-05T02:19:13+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">8</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Using :error instead of :errors to designate the level was deliberate. To me :level =&gt; :error, :level =&gt; :warning, sound more natural and more in line with logging levels. However, I'm easily convinced otherwise.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Using :error instead of :errors to designate the level was deliberate. To me :level =&gt; :error, :level =&gt; :warning, sound more natural and more in line with logging levels. However, I'm easily convinced otherwise.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T07:18:46+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-05T07:18:46+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">9</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Your right it does sound more natural. Perhaps just leave the level singular and when a plural symbol is passed to the errors method as per Josh's suggestion then you can singularize it.

Anyway enough of my musings. Lets see what the other guys think.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Your right it does sound more natural. Perhaps just leave the level singular and when a plural symbol is passed to the errors method as per Josh's suggestion then you can singularize it.
&lt;/p&gt;&lt;p&gt;
Anyway enough of my musings. Lets see what the other guys think.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T08:26:07+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-05T08:26:07+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">10</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm very tempted to say &quot;Plugin material&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm very tempted to say &quot;Plugin material&quot;.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T12:17:09+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-14T12:17:09+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">11</version>
      <user-name>Pratik</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Pratik, unfortunately this can't be done in a plugin without copying almost all of the validations -- which would be subject to break with changes in Rails.

The idea is precisely to add these hooks to make them usable by plugins. The proposed changes, in either version, are backward compatible and robust in the face of changes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Pratik, unfortunately this can't be done in a plugin without copying almost all of the validations -- which would be subject to break with changes in Rails.
&lt;/p&gt;&lt;p&gt;
The idea is precisely to add these hooks to make them usable by plugins. The proposed changes, in either version, are backward compatible and robust in the face of changes.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T12:34:42+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-14T12:34:42+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">12</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Errr, I really don't like this either. How could we refactor validations so you could write a plugin easier?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Errr, I really don't like this either. How could we refactor validations so you could write a plugin easier?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T17:20:50+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-14T17:20:50+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">13</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have no better idea at the moment. Put abstractly, there needs to be a way to parameterize where a failed validation add its message.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I have no better idea at the moment. Put abstractly, there needs to be a way to parameterize where a failed validation add its message.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T17:58:55+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-14T17:58:55+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">14</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Removing &quot;patch&quot; keyword. 

Also, I think it's worth noting that very soon we'll be moving validation stuff to ActiveModel, which already has some API changes. Probably, you should try to email core list about this feature request and find out what everyone else thinks.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Removing &quot;patch&quot; keyword.
&lt;/p&gt;&lt;p&gt;
Also, I think it's worth noting that very soon we'll be moving validation stuff to ActiveModel, which already has some API changes. Probably, you should try to email core list about this feature request and find out what everyone else thinks.
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-20T13:31:00+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-20T13:31:00+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">15</version>
      <user-name>Pratik</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I already send a message to rails-core on 2008-05-03, even before writing the patch. Koz advised me to write a patch and so I did.

Regarding ActiveModel: Yes, that would be the right place to put this, however, I have no idea what the current state of ActiveModel is or if anyone is working on it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I already send a message to rails-core on 2008-05-03, even before writing the patch. Koz advised me to write a patch and so I did.
&lt;/p&gt;&lt;p&gt;
Regarding ActiveModel: Yes, that would be the right place to put this, however, I have no idea what the current state of ActiveModel is or if anyone is working on it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-20T13:45:28+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-05-20T13:45:28+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">16</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-20T17:16:31+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">107</number>
      <permalink>level-hooks-for-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord enhancement</tag>
      <title>Level hooks for validations</title>
      <updated-at type="datetime">2008-08-20T17:16:31+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">17</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/107</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f2adde0869ea8d7fc6183c02422f16a7d740159f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-04T12:02:05+01:00</created-at>
      <filename>validation-levels.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21382</id>
      <size type="integer">11132</size>
      <uploader-id type="integer">18670</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21382/validation-levels.diff</url>
    </attachment>
  </attachments>
</ticket>
