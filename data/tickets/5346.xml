<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-10T14:32:22+01:00</created-at>
  <creator-id type="integer">109474</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5346</number>
  <permalink>rails-3000rc-bug-mysql-connection-left-in-unusable-state-after-mysqladapterselect-and-mysqladapterselect_rows-with-patch</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>3.0.0.rc bug connection &quot;mysql adapter&quot; patch</tag>
  <title>Rails 3.0.0.0RC Bug -- MySQL connection left in unusable state after MysqlAdapter.select and MysqlAdapter.select_rows -- with patch</title>
  <updated-at type="datetime">2010-08-18T16:34:10+01:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">6</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Jeff Lawson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5346</url>
  <priority-name>Low</priority-name>
  <original-body>When **MysqlAdapter.select** and **MysqlAdapter.select_rows** are used to call a stored procedure that returns a result set, the connection is left in a state that expects a further call to check for more results and, if necessary, to retrieve the next result, *even though the desired result set has already been returned.* Failure to tidy up the connection results in **Mysql::Error: Commands out of sync** when the connection is next used. Such a failure can be seen by calling **ActiveRecord::Base.connection.active?** which returns false, leading one to suspect that the connection was dropped when in fact the act of calling **ActiveRecord::Base.connection.active?** was itself an out of sync command and was responsible for the dropped connection. This explains why the current **test_multi_results** method in **activerecord/test/cases/adapters/mysql/connection_test.rb** neglects to call **@connection.active?** in the way the preceding tests do. My patch adds this call and the test passes once the problem is fixed.


The bug is easily fixed by adding the single statement that is commented below.

@@@ ruby
  @connection.query_with_result = true
  result = execute(sql, name)
  rows = []
  result.each_hash { |row| rows &lt;&lt; row }
  result.free
  @connection.more_results &amp;&amp; @connection.next_result    # invoking stored procedures with CLIENT_MULTI_RESULTS requires this to tidy up else the connection will be dropped
  rows
@@@

I have provided the fix plus a new test in the attached diff file.

I posted this more than a week ago under [#3151](https://rails.lighthouseapp.com/projects/8994/tickets/3151-mysql-adapter-update-to-enable-use-of-stored-procedures &quot;#3151&quot;) but it has not yet received attention, presumably as it has a milestone for 2.3.9 and most people are focussed on 3.0. I am concerned that this patch should make it to the 3.0 release.</original-body>
  <latest-body>When **MysqlAdapter.select** and **MysqlAdapter.select_rows** are used to call a stored procedure that returns a result set, the connection is left in a state that expects a further call to check for more results and, if necessary, to retrieve the next result, *even though the desired result set has already been returned.* Failure to tidy up the connection results in **Mysql::Error: Commands out of sync** when the connection is next used. Such a failure can be seen by calling **ActiveRecord::Base.connection.active?** which returns false, leading one to suspect that the connection was dropped when in fact the act of calling **ActiveRecord::Base.connection.active?** was itself an out of sync command and was responsible for the dropped connection. This explains why the current **test_multi_results** method in **activerecord/test/cases/adapters/mysql/connection_test.rb** neglects to call **@connection.active?** in the way the preceding tests do. My patch adds this call and the test passes once the problem is fixed.


The bug is easily fixed by adding the single statement that is commented below.

@@@ ruby
  @connection.query_with_result = true
  result = execute(sql, name)
  rows = []
  result.each_hash { |row| rows &lt;&lt; row }
  result.free
  @connection.more_results &amp;&amp; @connection.next_result    # invoking stored procedures with CLIENT_MULTI_RESULTS requires this to tidy up else the connection will be dropped
  rows
@@@

I have provided the fix plus a new test in the attached diff file.

I posted this more than a week ago under [#3151](https://rails.lighthouseapp.com/projects/8994/tickets/3151-mysql-adapter-update-to-enable-use-of-stored-procedures &quot;#3151&quot;) but it has not yet received attention, presumably as it has a milestone for 2.3.9 and most people are focussed on 3.0. I am concerned that this patch should make it to the 3.0 release.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When &lt;strong&gt;MysqlAdapter.select&lt;/strong&gt; and
&lt;strong&gt;MysqlAdapter.select_rows&lt;/strong&gt; are used to call a stored
procedure that returns a result set, the connection is left in a
state that expects a further call to check for more results and, if
necessary, to retrieve the next result, &lt;em&gt;even though the desired
result set has already been returned.&lt;/em&gt; Failure to tidy up the
connection results in &lt;strong&gt;Mysql::Error: Commands out of
sync&lt;/strong&gt; when the connection is next used. Such a failure can
be seen by calling
&lt;strong&gt;ActiveRecord::Base.connection.active?&lt;/strong&gt; which
returns false, leading one to suspect that the connection was
dropped when in fact the act of calling
&lt;strong&gt;ActiveRecord::Base.connection.active?&lt;/strong&gt; was itself
an out of sync command and was responsible for the dropped
connection. This explains why the current
&lt;strong&gt;test_multi_results&lt;/strong&gt; method in
&lt;strong&gt;activerecord/test/cases/adapters/mysql/connection_test.rb&lt;/strong&gt;
neglects to call &lt;strong&gt;@connection.active?&lt;/strong&gt; in the way
the preceding tests do. My patch adds this call and the test passes
once the problem is fixed.&lt;/p&gt;
&lt;p&gt;The bug is easily fixed by adding the single statement that is
commented below.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  @connection.query_with_result = true
  result = execute(sql, name)
  rows = []
  result.each_hash { |row| rows &amp;lt;&amp;lt; row }
  result.free
  @connection.more_results &amp;amp;&amp;amp; @connection.next_result    # invoking stored procedures with CLIENT_MULTI_RESULTS requires this to tidy up else the connection will be dropped
  rows&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have provided the fix plus a new test in the attached diff
file.&lt;/p&gt;
&lt;p&gt;I posted this more than a week ago under &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/3151-mysql-adapter-update-to-enable-use-of-stored-procedures&quot;
title=&quot;#3151&quot;&gt;#3151&lt;/a&gt; but it has not yet received attention,
presumably as it has a milestone for 2.3.9 and most people are
focussed on 3.0. I am concerned that this patch should make it to
the 3.0 release.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When **MysqlAdapter.select** and **MysqlAdapter.select_rows** are used to call a stored procedure that returns a result set, the connection is left in a state that expects a further call to check for more results and, if necessary, to retrieve the next result, *even though the desired result set has already been returned.* Failure to tidy up the connection results in **Mysql::Error: Commands out of sync** when the connection is next used. Such a failure can be seen by calling **ActiveRecord::Base.connection.active?** which returns false, leading one to suspect that the connection was dropped when in fact the act of calling **ActiveRecord::Base.connection.active?** was itself an out of sync command and was responsible for the dropped connection. This explains why the current **test_multi_results** method in **activerecord/test/cases/adapters/mysql/connection_test.rb** neglects to call **@connection.active?** in the way the preceding tests do. My patch adds this call and the test passes once the problem is fixed.


The bug is easily fixed by adding the single statement that is commented below.

@@@ ruby
  @connection.query_with_result = true
  result = execute(sql, name)
  rows = []
  result.each_hash { |row| rows &lt;&lt; row }
  result.free
  @connection.more_results &amp;&amp; @connection.next_result    # invoking stored procedures with CLIENT_MULTI_RESULTS requires this to tidy up else the connection will be dropped
  rows
@@@

I have provided the fix plus a new test in the attached diff file.

I posted this more than a week ago under [#3151](https://rails.lighthouseapp.com/projects/8994/tickets/3151-mysql-adapter-update-to-enable-use-of-stored-procedures &quot;#3151&quot;) but it has not yet received attention, presumably as it has a milestone for 2.3.9 and most people are focussed on 3.0. I am concerned that this patch should make it to the 3.0 release.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When &lt;strong&gt;MysqlAdapter.select&lt;/strong&gt; and
&lt;strong&gt;MysqlAdapter.select_rows&lt;/strong&gt; are used to call a stored
procedure that returns a result set, the connection is left in a
state that expects a further call to check for more results and, if
necessary, to retrieve the next result, &lt;em&gt;even though the desired
result set has already been returned.&lt;/em&gt; Failure to tidy up the
connection results in &lt;strong&gt;Mysql::Error: Commands out of
sync&lt;/strong&gt; when the connection is next used. Such a failure can
be seen by calling
&lt;strong&gt;ActiveRecord::Base.connection.active?&lt;/strong&gt; which
returns false, leading one to suspect that the connection was
dropped when in fact the act of calling
&lt;strong&gt;ActiveRecord::Base.connection.active?&lt;/strong&gt; was itself
an out of sync command and was responsible for the dropped
connection. This explains why the current
&lt;strong&gt;test_multi_results&lt;/strong&gt; method in
&lt;strong&gt;activerecord/test/cases/adapters/mysql/connection_test.rb&lt;/strong&gt;
neglects to call &lt;strong&gt;@connection.active?&lt;/strong&gt; in the way
the preceding tests do. My patch adds this call and the test passes
once the problem is fixed.&lt;/p&gt;
&lt;p&gt;The bug is easily fixed by adding the single statement that is
commented below.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  @connection.query_with_result = true
  result = execute(sql, name)
  rows = []
  result.each_hash { |row| rows &amp;lt;&amp;lt; row }
  result.free
  @connection.more_results &amp;amp;&amp;amp; @connection.next_result    # invoking stored procedures with CLIENT_MULTI_RESULTS requires this to tidy up else the connection will be dropped
  rows&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have provided the fix plus a new test in the attached diff
file.&lt;/p&gt;
&lt;p&gt;I posted this more than a week ago under &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/3151-mysql-adapter-update-to-enable-use-of-stored-procedures&quot;
title=&quot;#3151&quot;&gt;#3151&lt;/a&gt; but it has not yet received attention,
presumably as it has a milestone for 2.3.9 and most people are
focussed on 3.0. I am concerned that this patch should make it to
the 3.0 release.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T14:32:22+01:00</created-at>
      <creator-id type="integer">109474</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5346</number>
      <permalink>rails-3000rc-bug-mysql-connection-left-in-unusable-state-after-mysqladapterselect-and-mysqladapterselect_rows-with-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0.0.rc bug connection &quot;mysql adapter&quot; patch</tag>
      <title>Rails 3.0.0.0RC Bug -- MySQL connection left in unusable state after MysqlAdapter.select and MysqlAdapter.select_rows -- with patch</title>
      <updated-at type="datetime">2010-08-10T14:32:23+01:00</updated-at>
      <user-id type="integer">109474</user-id>
      <version type="integer">1</version>
      <user-name>Jeff Lawson</user-name>
      <creator-name>Jeff Lawson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5346</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Applied to master and 3-0-stable.  Thanks!  If this needs to be applied to the 2-3 branch, let me know.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Applied to master and 3-0-stable. Thanks! If this needs to be
applied to the 2-3 branch, let me know.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-17T21:17:11+01:00</created-at>
      <creator-id type="integer">109474</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5346</number>
      <permalink>rails-3000rc-bug-mysql-connection-left-in-unusable-state-after-mysqladapterselect-and-mysqladapterselect_rows-with-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0.0.rc bug connection &quot;mysql adapter&quot; patch</tag>
      <title>Rails 3.0.0.0RC Bug -- MySQL connection left in unusable state after MysqlAdapter.select and MysqlAdapter.select_rows -- with patch</title>
      <updated-at type="datetime">2010-08-17T21:17:12+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">2</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Jeff Lawson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5346</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thank you, Aaron  :-)

Yes, the same patch does need to be applied to the 2-3 branch too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thank you, Aaron :-)&lt;/p&gt;
&lt;p&gt;Yes, the same patch does need to be applied to the 2-3 branch
too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-17T21:47:37+01:00</created-at>
      <creator-id type="integer">109474</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5346</number>
      <permalink>rails-3000rc-bug-mysql-connection-left-in-unusable-state-after-mysqladapterselect-and-mysqladapterselect_rows-with-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0.0.rc bug connection &quot;mysql adapter&quot; patch</tag>
      <title>Rails 3.0.0.0RC Bug -- MySQL connection left in unusable state after MysqlAdapter.select and MysqlAdapter.select_rows -- with patch</title>
      <updated-at type="datetime">2010-08-17T21:47:41+01:00</updated-at>
      <user-id type="integer">109474</user-id>
      <version type="integer">3</version>
      <user-name>Jeff Lawson</user-name>
      <creator-name>Jeff Lawson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5346</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey Jeff,

I tried applying the patches to 2-3-stable and got conflicts.  Would you mind porting them to 2-3-stable, and I'll apply?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Jeff,&lt;/p&gt;
&lt;p&gt;I tried applying the patches to 2-3-stable and got conflicts.
Would you mind porting them to 2-3-stable, and I'll apply?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-17T21:51:24+01:00</created-at>
      <creator-id type="integer">109474</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5346</number>
      <permalink>rails-3000rc-bug-mysql-connection-left-in-unusable-state-after-mysqladapterselect-and-mysqladapterselect_rows-with-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0.0.rc bug connection &quot;mysql adapter&quot; patch</tag>
      <title>Rails 3.0.0.0RC Bug -- MySQL connection left in unusable state after MysqlAdapter.select and MysqlAdapter.select_rows -- with patch</title>
      <updated-at type="datetime">2010-08-17T21:51:26+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">4</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Jeff Lawson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5346</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Aaron,

Sorry about that problem.

Please find a 2-3-stable version of the patch attached  :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Aaron,&lt;/p&gt;
&lt;p&gt;Sorry about that problem.&lt;/p&gt;
&lt;p&gt;Please find a 2-3-stable version of the patch attached :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-18T15:46:36+01:00</created-at>
      <creator-id type="integer">109474</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5346</number>
      <permalink>rails-3000rc-bug-mysql-connection-left-in-unusable-state-after-mysqladapterselect-and-mysqladapterselect_rows-with-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0.0.rc bug connection &quot;mysql adapter&quot; patch</tag>
      <title>Rails 3.0.0.0RC Bug -- MySQL connection left in unusable state after MysqlAdapter.select and MysqlAdapter.select_rows -- with patch</title>
      <updated-at type="datetime">2010-08-18T15:46:37+01:00</updated-at>
      <user-id type="integer">109474</user-id>
      <version type="integer">5</version>
      <user-name>Jeff Lawson</user-name>
      <creator-name>Jeff Lawson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5346</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>No problem!  I've applied the patch.  Thanks for porting it to 2-3-stable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No problem! I've applied the patch. Thanks for porting it to
2-3-stable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-18T16:34:09+01:00</created-at>
      <creator-id type="integer">109474</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5346</number>
      <permalink>rails-3000rc-bug-mysql-connection-left-in-unusable-state-after-mysqladapterselect-and-mysqladapterselect_rows-with-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0.0.rc bug connection &quot;mysql adapter&quot; patch</tag>
      <title>Rails 3.0.0.0RC Bug -- MySQL connection left in unusable state after MysqlAdapter.select and MysqlAdapter.select_rows -- with patch</title>
      <updated-at type="datetime">2010-08-18T16:34:10+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">6</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Jeff Lawson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5346</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>68bbf6df84b902af6342c76b300e4f078dd22cd2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-10T14:32:22+01:00</created-at>
      <filename>bug_fix_for_3151_clean_up_connection_after_stored_procedure.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">621799</id>
      <size type="integer">4887</size>
      <uploader-id type="integer">109474</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/621799/bug_fix_for_3151_clean_up_connection_after_stored_procedure.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>4c56a331ab7d0bdc693c94a6398985c2c21f3493</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-18T15:46:36+01:00</created-at>
      <filename>bug_fix_for_3151_for_2-3-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">634041</id>
      <size type="integer">3789</size>
      <uploader-id type="integer">109474</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/634041/bug_fix_for_3151_for_2-3-stable.diff</url>
    </attachment>
  </attachments>
</ticket>
