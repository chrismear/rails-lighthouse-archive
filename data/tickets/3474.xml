<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-11-09T18:29:14+00:00</created-at>
  <creator-id type="integer">22589</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3474</number>
  <permalink>_was-doesnt-work-correctly-for-serialized-fields-with-nested-elements</permalink>
  <priority type="integer">176244</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2-3-stable bug dirty serialize</tag>
  <title>_was doesn't work correctly for serialized fields with nested elements</title>
  <updated-at type="datetime">2011-03-26T02:12:16+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">3</version>
  <user-name>bingbing</user-name>
  <creator-name>Matt Jones</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3474</url>
  <priority-name nil="true"></priority-name>
  <original-body>I've been experimenting with dirty tracking for serialized models; the problem I've run into is that _will_change! and _was don't work with nested arrays/hashes.

Example:
@@@ ruby
  # o.some_serialized_field starts with { 'a' =&gt; [1,2], 'b' =&gt; [3,4] }
  o.some_serialized_field_will_change!
  o['a'][0] = 5
  o.some_serialized_field_was # =&gt; gives { 'a' =&gt; [5,2], 'b' =&gt; [3,4] }
@@@

The issue is that attribute_will_change! calls clone_attribute, which only calls Object#clone. For now, I'm planning to work around the issue by defining my own some_serialized_field_will_change! method, but it'd be nice for it to work correctly.

Note that this isn't about partial updates (like #2764) or automatic change detection (like #3464 or #360) - this is a glitch in the manual &quot;mark dirty&quot; functionality.</original-body>
  <latest-body>I've been experimenting with dirty tracking for serialized models; the problem I've run into is that _will_change! and _was don't work with nested arrays/hashes.

Example:
@@@ ruby
  # o.some_serialized_field starts with { 'a' =&gt; [1,2], 'b' =&gt; [3,4] }
  o.some_serialized_field_will_change!
  o['a'][0] = 5
  o.some_serialized_field_was # =&gt; gives { 'a' =&gt; [5,2], 'b' =&gt; [3,4] }
@@@

The issue is that attribute_will_change! calls clone_attribute, which only calls Object#clone. For now, I'm planning to work around the issue by defining my own some_serialized_field_will_change! method, but it'd be nice for it to work correctly.

Note that this isn't about partial updates (like #2764) or automatic change detection (like #3464 or #360) - this is a glitch in the manual &quot;mark dirty&quot; functionality.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've been experimenting with dirty tracking for serialized
models; the problem I've run into is that &lt;em&gt;will_change! and&lt;/em&gt;
was don't work with nested arrays/hashes.&lt;/p&gt;
&lt;p&gt;Example:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  # o.some_serialized_field starts with { 'a' =&amp;gt; [1,2], 'b' =&amp;gt; [3,4] }
  o.some_serialized_field_will_change!
  o['a'][0] = 5
  o.some_serialized_field_was # =&amp;gt; gives { 'a' =&amp;gt; [5,2], 'b' =&amp;gt; [3,4] }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The issue is that attribute_will_change! calls clone_attribute,
which only calls Object#clone. For now, I'm planning to work around
the issue by defining my own some_serialized_field_will_change!
method, but it'd be nice for it to work correctly.&lt;/p&gt;
&lt;p&gt;Note that this isn't about partial updates (like &lt;a href=
&quot;/projects/8994/tickets/2764&quot; title=&quot;Ticket #2764&quot;&gt;#2764&lt;/a&gt;) or
automatic change detection (like &lt;a href=
&quot;/projects/8994/tickets/3464&quot; title=&quot;Ticket #3464&quot;&gt;#3464&lt;/a&gt; or
&lt;a href=&quot;/projects/8994/tickets/360&quot; title=&quot;Ticket #360&quot;&gt;#360&lt;/a&gt;)
- this is a glitch in the manual &quot;mark dirty&quot; functionality.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've been experimenting with dirty tracking for serialized models; the problem I've run into is that _will_change! and _was don't work with nested arrays/hashes.

Example:
@@@ ruby
  # o.some_serialized_field starts with { 'a' =&gt; [1,2], 'b' =&gt; [3,4] }
  o.some_serialized_field_will_change!
  o['a'][0] = 5
  o.some_serialized_field_was # =&gt; gives { 'a' =&gt; [5,2], 'b' =&gt; [3,4] }
@@@

The issue is that attribute_will_change! calls clone_attribute, which only calls Object#clone. For now, I'm planning to work around the issue by defining my own some_serialized_field_will_change! method, but it'd be nice for it to work correctly.

Note that this isn't about partial updates (like #2764) or automatic change detection (like #3464 or #360) - this is a glitch in the manual &quot;mark dirty&quot; functionality.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've been experimenting with dirty tracking for serialized
models; the problem I've run into is that &lt;em&gt;will_change! and&lt;/em&gt;
was don't work with nested arrays/hashes.&lt;/p&gt;
&lt;p&gt;Example:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  # o.some_serialized_field starts with { 'a' =&amp;gt; [1,2], 'b' =&amp;gt; [3,4] }
  o.some_serialized_field_will_change!
  o['a'][0] = 5
  o.some_serialized_field_was # =&amp;gt; gives { 'a' =&amp;gt; [5,2], 'b' =&amp;gt; [3,4] }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The issue is that attribute_will_change! calls clone_attribute,
which only calls Object#clone. For now, I'm planning to work around
the issue by defining my own some_serialized_field_will_change!
method, but it'd be nice for it to work correctly.&lt;/p&gt;
&lt;p&gt;Note that this isn't about partial updates (like &lt;a href=
&quot;/projects/8994/tickets/2764&quot; title=&quot;Ticket #2764&quot;&gt;#2764&lt;/a&gt;) or
automatic change detection (like &lt;a href=
&quot;/projects/8994/tickets/3464&quot; title=&quot;Ticket #3464&quot;&gt;#3464&lt;/a&gt; or
&lt;a href=&quot;/projects/8994/tickets/360&quot; title=&quot;Ticket #360&quot;&gt;#360&lt;/a&gt;)
- this is a glitch in the manual &quot;mark dirty&quot; functionality.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-09T18:29:14+00:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3474</number>
      <permalink>_was-doesnt-work-correctly-for-serialized-fields-with-nested-elements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable bug dirty serialize</tag>
      <title>_was doesn't work correctly for serialized fields with nested elements</title>
      <updated-at type="datetime">2009-11-09T18:29:20+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">1</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Matt Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:32:12+01:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3474</number>
      <permalink>_was-doesnt-work-correctly-for-serialized-fields-with-nested-elements</permalink>
      <priority type="integer">176244</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable bug dirty serialize</tag>
      <title>_was doesn't work correctly for serialized fields with nested elements</title>
      <updated-at type="datetime">2010-10-06T06:32:14+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Matt Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:00:33+00:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3474</number>
      <permalink>_was-doesnt-work-correctly-for-serialized-fields-with-nested-elements</permalink>
      <priority type="integer">176244</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable bug dirty serialize</tag>
      <title>_was doesn't work correctly for serialized fields with nested elements</title>
      <updated-at type="datetime">2011-03-26T02:12:16+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">3</version>
      <user-name>bingbing</user-name>
      <creator-name>Matt Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3474</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
