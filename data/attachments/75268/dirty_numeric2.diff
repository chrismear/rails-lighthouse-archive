From fd94a882b7ef023b20786230fbc4d9bca4f4a7b7 Mon Sep 17 00:00:00 2001
From: Carlos Kozuszko <carlos@insignia4u.com>
Date: Sun, 4 Jan 2009 20:22:53 -0200
Subject: [PATCH] Fixing bug on ActiveRecord::Dirty#field_changed? for nullable numeric columns, NULL gets stored in database for blank (i.e. '') values.
  Only integer columns were considered.

---
 activerecord/lib/active_record/dirty.rb |    4 ++--
 activerecord/test/cases/dirty_test.rb   |    2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/dirty.rb b/activerecord/lib/active_record/dirty.rb
index 4c899f5..4a2510a 100644
--- a/activerecord/lib/active_record/dirty.rb
+++ b/activerecord/lib/active_record/dirty.rb
@@ -151,8 +151,8 @@ module ActiveRecord
 
       def field_changed?(attr, old, value)
         if column = column_for_attribute(attr)
-          if column.type == :integer && column.null && (old.nil? || old == 0) && value.blank?
-            # For nullable integer columns, NULL gets stored in database for blank (i.e. '') values.
+          if column.number? && column.null && (old.nil? || old == 0) && value.blank?
+            # For nullable numeric columns, NULL gets stored in database for blank (i.e. '') values.
             # Hence we don't record it as a change if the value changes from nil to ''.
             # If an old value of 0 is set to '' we want this to get changed to nil as otherwise it'll
             # be typecast back to 0 (''.to_i => 0)
diff --git a/activerecord/test/cases/dirty_test.rb b/activerecord/test/cases/dirty_test.rb
index 10cdbdc..480a332 100644
--- a/activerecord/test/cases/dirty_test.rb
+++ b/activerecord/test/cases/dirty_test.rb
@@ -58,7 +58,7 @@ class DirtyTest < ActiveRecord::TestCase
     assert_equal parrot.name_change, parrot.title_change
   end
 
-  def test_nullable_integer_not_marked_as_changed_if_new_value_is_blank
+  def test_nullable_number_not_marked_as_changed_if_new_value_is_blank
     pirate = Pirate.new
 
     ["", nil].each do |value|
-- 
1.5.6.1.1071.g76fb

