<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-23T05:45:34+01:00</created-at>
  <creator-id type="integer">60834</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4943</number>
  <permalink>patch-activerecord-live-scope-to_json-fix-prevents-the-circularreferenceerror-error</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>activerecord circularreferenceerror patch to_json</tag>
  <title>[PATCH] ActiveRecord live scope #to_json fix.  Prevents the CircularReferenceError error</title>
  <updated-at type="datetime">2010-06-24T15:30:36+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">4</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Jose Fernandez</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4943</url>
  <priority-name>Low</priority-name>
  <original-body>Calling #to_json on a live ActiveRecord scope will always raise the following error:

ActiveSupport::JSON::Encoding::CircularReferenceError: object references itself

This is because entity that gets passed to the JSON encoder is the ActiveRecord::Relation instance instead of the loaded array of records.

Started noticing this error when working on a Rails 3.beta4 app and using the respond_with(@records) call on my controller without firing off the scope:

@@@
respond_to :html, :json

def index
  @users = User.most_recent
  respond_with(@users)
end
@@@

Patch overrides the #to_json method on ActiveRecord::Relation so that it makes sure the scope is loaded and the method is called on the @records collection.

Test is included that fails without the patch.</original-body>
  <latest-body>Calling #to_json on a live ActiveRecord scope will always raise the following error:

ActiveSupport::JSON::Encoding::CircularReferenceError: object references itself

This is because entity that gets passed to the JSON encoder is the ActiveRecord::Relation instance instead of the loaded array of records.

Started noticing this error when working on a Rails 3.beta4 app and using the respond_with(@records) call on my controller without firing off the scope:

@@@
respond_to :html, :json

def index
  @users = User.most_recent
  respond_with(@users)
end
@@@

Patch overrides the #to_json method on ActiveRecord::Relation so that it makes sure the scope is loaded and the method is called on the @records collection.

Test is included that fails without the patch.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Calling #to_json on a live ActiveRecord scope will always raise
the following error:&lt;/p&gt;
&lt;p&gt;ActiveSupport::JSON::Encoding::CircularReferenceError: object
references itself&lt;/p&gt;
&lt;p&gt;This is because entity that gets passed to the JSON encoder is
the ActiveRecord::Relation instance instead of the loaded array of
records.&lt;/p&gt;
&lt;p&gt;Started noticing this error when working on a Rails 3.beta4 app
and using the respond_with(@records) call on my controller without
firing off the scope:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;respond_to :html, :json

def index
  @users = User.most_recent
  respond_with(@users)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Patch overrides the #to_json method on ActiveRecord::Relation so
that it makes sure the scope is loaded and the method is called on
the @records collection.&lt;/p&gt;
&lt;p&gt;Test is included that fails without the patch.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Calling #to_json on a live ActiveRecord scope will always raise the following error:

ActiveSupport::JSON::Encoding::CircularReferenceError: object references itself

This is because entity that gets passed to the JSON encoder is the ActiveRecord::Relation instance instead of the loaded array of records.

Started noticing this error when working on a Rails 3.beta4 app and using the respond_with(@records) call on my controller without firing off the scope:

@@@
respond_to :html, :json

def index
  @users = User.most_recent
  respond_with(@users)
end
@@@

Patch overrides the #to_json method on ActiveRecord::Relation so that it makes sure the scope is loaded and the method is called on the @records collection.

Test is included that fails without the patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Calling #to_json on a live ActiveRecord scope will always raise
the following error:&lt;/p&gt;
&lt;p&gt;ActiveSupport::JSON::Encoding::CircularReferenceError: object
references itself&lt;/p&gt;
&lt;p&gt;This is because entity that gets passed to the JSON encoder is
the ActiveRecord::Relation instance instead of the loaded array of
records.&lt;/p&gt;
&lt;p&gt;Started noticing this error when working on a Rails 3.beta4 app
and using the respond_with(@records) call on my controller without
firing off the scope:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;respond_to :html, :json

def index
  @users = User.most_recent
  respond_with(@users)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Patch overrides the #to_json method on ActiveRecord::Relation so
that it makes sure the scope is loaded and the method is called on
the @records collection.&lt;/p&gt;
&lt;p&gt;Test is included that fails without the patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T05:45:34+01:00</created-at>
      <creator-id type="integer">60834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4943</number>
      <permalink>patch-activerecord-live-scope-to_json-fix-prevents-the-circularreferenceerror-error</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord circularreferenceerror patch to_json</tag>
      <title>[PATCH] ActiveRecord live scope #to_json fix.  Prevents the CircularReferenceError error</title>
      <updated-at type="datetime">2010-06-23T05:48:28+01:00</updated-at>
      <user-id type="integer">60834</user-id>
      <version type="integer">1</version>
      <user-name>Jose Fernandez</user-name>
      <creator-name>Jose Fernandez</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4943</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is duplicate of #4547</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is duplicate of &lt;a href=&quot;/projects/8994/tickets/4547&quot;
title=&quot;Ticket #4547&quot;&gt;#4547&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T10:53:19+01:00</created-at>
      <creator-id type="integer">60834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4943</number>
      <permalink>patch-activerecord-live-scope-to_json-fix-prevents-the-circularreferenceerror-error</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord circularreferenceerror patch to_json</tag>
      <title>[PATCH] ActiveRecord live scope #to_json fix.  Prevents the CircularReferenceError error</title>
      <updated-at type="datetime">2010-06-23T10:53:21+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Jose Fernandez</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4943</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>He's right, ticket can be closed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;He's right, ticket can be closed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T17:24:54+01:00</created-at>
      <creator-id type="integer">60834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4943</number>
      <permalink>patch-activerecord-live-scope-to_json-fix-prevents-the-circularreferenceerror-error</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord circularreferenceerror patch to_json</tag>
      <title>[PATCH] ActiveRecord live scope #to_json fix.  Prevents the CircularReferenceError error</title>
      <updated-at type="datetime">2010-06-23T17:24:59+01:00</updated-at>
      <user-id type="integer">60834</user-id>
      <version type="integer">3</version>
      <user-name>Jose Fernandez</user-name>
      <creator-name>Jose Fernandez</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4943</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-24T15:30:29+01:00</created-at>
      <creator-id type="integer">60834</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4943</number>
      <permalink>patch-activerecord-live-scope-to_json-fix-prevents-the-circularreferenceerror-error</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord circularreferenceerror patch to_json</tag>
      <title>[PATCH] ActiveRecord live scope #to_json fix.  Prevents the CircularReferenceError error</title>
      <updated-at type="datetime">2010-06-24T15:30:36+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">4</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Jose Fernandez</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4943</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>77c2ceae5eaee2b10eee5f8eebfc47ca9f01a34c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-23T05:45:34+01:00</created-at>
      <filename>activerecord_relation_to_json.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">569980</id>
      <size type="integer">1731</size>
      <uploader-id type="integer">60834</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/569980/activerecord_relation_to_json.diff</url>
    </attachment>
  </attachments>
</ticket>
