<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-24T09:45:18+01:00</created-at>
  <creator-id type="integer">39609</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2556</number>
  <permalink>actionmailer-responds_to-failing-to-return-truefalse-bug</permalink>
  <priority type="integer">1698</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>2.3.2 actionmailer base rails respond_to</tag>
  <title>ActionMailer responds_to? failing to return true/false bug</title>
  <updated-at type="datetime">2009-05-07T23:23:09+01:00</updated-at>
  <user-id type="integer">17477</user-id>
  <version type="integer">3</version>
  <user-name>Frederick Cheung</user-name>
  <creator-name>PommyTom</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2556</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,  
Code base - Rails 2.3.2

When testing the action mailer object for an existing and non-existant method the object returned is a MatchData class. I've played around in actionmailer/lib/action_mailer/base.rb but haven't determined exactly why this is happening yet.

To replicate this issue:

&gt;&gt; rails test_mail
&gt;&gt; cd test_mail
&gt;&gt; ruby script/generate mailer Mail

- Add the following method to app/models/mail.rb:
def self.test_method
puts &quot;do nothing&quot;
end

def test_email
puts &quot;this is accessed by Mail.deliver_test_email!&quot;
end

&gt;&gt; ruby script/console
Loading development environment (Rails 2.3.2)

&gt;&gt; Mail.respond_to?(:something)
=&gt; false
&gt;&gt; Mail.respond_to?(:deliver_anything)
=&gt; #&lt;MatchData:0x24509f0&gt;
&gt;&gt; Mail.respond_to?(:create_anything)
=&gt; #&lt;MatchData:0x244e664&gt;

&gt;&gt; Mail.respond_to?(:test_method)
=&gt; true
&gt;&gt; 
&gt;&gt; Mail.respond_to?(:test_email)
=&gt; false
&gt;&gt; 
&gt;&gt; Mail.respond_to?(:deliver_test_email)
=&gt; #&lt;MatchData:0x2450680&gt;
&gt;&gt; Mail.respond_to?(:deliver_test_email!)
=&gt; #&lt;MatchData:0x244e1b4&gt;
&gt;&gt; 


The workaround I'm using at the moment is testing the method name (without deliver/create) is present in the instance_methods:

Mail.instance_method.include?(:test_email)

But i don't think this is the way i should be testing the existance of a dynamic method on the action mailer object.

Please let me know if i'm looking at this all wrong. Any other info required i'd be happy to help.


Best regards,

Tom</original-body>
  <latest-body>Hi,  
Code base - Rails 2.3.2

When testing the action mailer object for an existing and non-existant method the object returned is a MatchData class. I've played around in actionmailer/lib/action_mailer/base.rb but haven't determined exactly why this is happening yet.

To replicate this issue:

&gt;&gt; rails test_mail
&gt;&gt; cd test_mail
&gt;&gt; ruby script/generate mailer Mail

- Add the following method to app/models/mail.rb:
def self.test_method
puts &quot;do nothing&quot;
end

def test_email
puts &quot;this is accessed by Mail.deliver_test_email!&quot;
end

&gt;&gt; ruby script/console
Loading development environment (Rails 2.3.2)

&gt;&gt; Mail.respond_to?(:something)
=&gt; false
&gt;&gt; Mail.respond_to?(:deliver_anything)
=&gt; #&lt;MatchData:0x24509f0&gt;
&gt;&gt; Mail.respond_to?(:create_anything)
=&gt; #&lt;MatchData:0x244e664&gt;

&gt;&gt; Mail.respond_to?(:test_method)
=&gt; true
&gt;&gt; 
&gt;&gt; Mail.respond_to?(:test_email)
=&gt; false
&gt;&gt; 
&gt;&gt; Mail.respond_to?(:deliver_test_email)
=&gt; #&lt;MatchData:0x2450680&gt;
&gt;&gt; Mail.respond_to?(:deliver_test_email!)
=&gt; #&lt;MatchData:0x244e1b4&gt;
&gt;&gt; 


The workaround I'm using at the moment is testing the method name (without deliver/create) is present in the instance_methods:

Mail.instance_method.include?(:test_email)

But i don't think this is the way i should be testing the existance of a dynamic method on the action mailer object.

Please let me know if i'm looking at this all wrong. Any other info required i'd be happy to help.


Best regards,

Tom</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
Code base - Rails 2.3.2&lt;/p&gt;
&lt;p&gt;When testing the action mailer object for an existing and
non-existant method the object returned is a MatchData class. I've
played around in actionmailer/lib/action_mailer/base.rb but haven't
determined exactly why this is happening yet.&lt;/p&gt;
&lt;p&gt;To replicate this issue:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;rails test_mail cd test_mail ruby script/generate mailer
Mail&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Add the following method to app/models/mail.rb: def
self.test_method puts &quot;do nothing&quot; end&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;def test_email puts &quot;this is accessed by
Mail.deliver_test_email!&quot; end&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ruby script/console Loading development environment (Rails
2.3.2)&lt;/p&gt;
&lt;p&gt;Mail.respond_to?(:something) =&amp;gt; false
Mail.respond_to?(:deliver_anything) =&amp;gt; #
Mail.respond_to?(:create_anything) =&amp;gt; #&lt;/p&gt;
&lt;p&gt;Mail.respond_to?(:test_method) =&amp;gt; true&lt;/p&gt;
&lt;p&gt;Mail.respond_to?(:test_email) =&amp;gt; false&lt;/p&gt;
&lt;p&gt;Mail.respond_to?(:deliver_test_email) =&amp;gt; #
Mail.respond_to?(:deliver_test_email!) =&amp;gt; #&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;The workaround I'm using at the moment is testing the method
name (without deliver/create) is present in the
instance_methods:&lt;/p&gt;
&lt;p&gt;Mail.instance_method.include?(:test_email)&lt;/p&gt;
&lt;p&gt;But i don't think this is the way i should be testing the
existance of a dynamic method on the action mailer object.&lt;/p&gt;
&lt;p&gt;Please let me know if i'm looking at this all wrong. Any other
info required i'd be happy to help.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;
&lt;p&gt;Tom&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Wrong section sorry.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Wrong section sorry.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-24T09:45:18+01:00</created-at>
      <creator-id type="integer">39609</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2556</number>
      <permalink>actionmailer-responds_to-failing-to-return-truefalse-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 actionmailer base rails respond_to</tag>
      <title>ActionMailer responds_to? failing to return true/false bug</title>
      <updated-at type="datetime">2009-04-24T09:58:21+01:00</updated-at>
      <user-id type="integer">39609</user-id>
      <version type="integer">1</version>
      <user-name>PommyTom</user-name>
      <creator-name>PommyTom</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2556</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry - I've placed this in the wrong section. I'm unsure how to move this to 2.3 or delete.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry - I've placed this in the wrong section. I'm unsure how to
move this to 2.3 or delete.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-24T09:50:32+01:00</created-at>
      <creator-id type="integer">39609</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2556</number>
      <permalink>actionmailer-responds_to-failing-to-return-truefalse-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 actionmailer base rails respond_to</tag>
      <title>ActionMailer responds_to? failing to return true/false bug</title>
      <updated-at type="datetime">2009-04-24T09:50:34+01:00</updated-at>
      <user-id type="integer">39609</user-id>
      <version type="integer">2</version>
      <user-name>PommyTom</user-name>
      <creator-name>PommyTom</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2556</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>duplicate of #2557</body>
      <body-html>&lt;div&gt;&lt;p&gt;duplicate of &lt;a href=&quot;/projects/8994/tickets/2557&quot; title=&quot;Ticket #2557&quot;&gt;#2557&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-07T23:23:07+01:00</created-at>
      <creator-id type="integer">39609</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2556</number>
      <permalink>actionmailer-responds_to-failing-to-return-truefalse-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>2.3.2 actionmailer base rails respond_to</tag>
      <title>ActionMailer responds_to? failing to return true/false bug</title>
      <updated-at type="datetime">2009-05-07T23:23:09+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>PommyTom</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2556</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
