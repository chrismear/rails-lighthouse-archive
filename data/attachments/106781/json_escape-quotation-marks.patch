From e24da9ccd1938af22faa74988de47acec88afe3b Mon Sep 17 00:00:00 2001
From: Johan Kiviniemi <devel@johan.kiviniemi.name>
Date: Wed, 1 Apr 2009 21:09:45 +0300
Subject: [PATCH] json_escape: Do not delete quotation marks

  puts json_escape ['is a > "0" & a < "10"?'].to_json
would output
  [is a \u003E \0\ \u0026 a \u003C \10\?]
instead of the expected
  ["is a \u003E \"0\" \u0026 a \u003C \"10\"?"]
---
 actionpack/lib/action_view/erb/util.rb    |    2 +-
 actionpack/test/template/erb_util_test.rb |   25 +++++++++++--------------
 2 files changed, 12 insertions(+), 15 deletions(-)

diff --git a/actionpack/lib/action_view/erb/util.rb b/actionpack/lib/action_view/erb/util.rb
index 3c77c5c..77d8244 100644
--- a/actionpack/lib/action_view/erb/util.rb
+++ b/actionpack/lib/action_view/erb/util.rb
@@ -28,7 +28,7 @@ class ERB
     #   puts json_escape("is a > 0 & a < 10?")
     #   # => is a \u003E 0 \u0026 a \u003C 10?
     def json_escape(s)
-      s.to_s.gsub(/[&"><]/) { |special| JSON_ESCAPE[special] }
+      s.to_s.gsub(/[&><]/) { |special| JSON_ESCAPE[special] }
     end
 
     alias j json_escape
diff --git a/actionpack/test/template/erb_util_test.rb b/actionpack/test/template/erb_util_test.rb
index c8c986f..7436155 100644
--- a/actionpack/test/template/erb_util_test.rb
+++ b/actionpack/test/template/erb_util_test.rb
@@ -3,22 +3,19 @@ require 'abstract_unit'
 class ErbUtilTest < Test::Unit::TestCase
   include ERB::Util
 
-  ERB::Util::HTML_ESCAPE.each do |given, expected|
-    define_method "test_html_escape_#{expected.gsub /\W/, ''}" do
-      assert_equal expected, html_escape(given)
-    end
-
-    unless given == '"'
-      define_method "test_json_escape_#{expected.gsub /\W/, ''}" do
-        assert_equal ERB::Util::JSON_ESCAPE[given], json_escape(given)
+  {
+    :html_escape => ERB::Util::HTML_ESCAPE,
+    :json_escape => ERB::Util::JSON_ESCAPE,
+  }.each do |sym, map|
+    map.each do |given, expected|
+      define_method "test_#{sym}_#{expected.gsub /\W/, ''}" do
+        assert_equal expected, send(sym, given)
       end
     end
-  end
-  
-  def test_rest_in_ascii
-    (0..127).to_a.map(&:chr).each do |chr|
-      next if %w(& " < >).include?(chr)
-      assert_equal chr, html_escape(chr)
+
+    define_method "test_#{sym}_with_rest_of_ascii" do
+      str = ((0..127).to_a.map(&:chr) - map.keys).join
+      assert_equal str, send(sym, str)
     end
   end
 end
-- 
1.5.6.3

