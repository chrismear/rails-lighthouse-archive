<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-04T20:23:03+00:00</created-at>
  <creator-id type="integer">46247</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1876</number>
  <permalink>uninitialized-constant-actioncontrollersessionmemorystore</permalink>
  <priority type="integer">1150</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3 memory_store</tag>
  <title>uninitialized constant ActionController::Session::MemoryStore</title>
  <updated-at type="datetime">2009-11-20T14:24:57+00:00</updated-at>
  <user-id type="integer">32480</user-id>
  <version type="integer">5</version>
  <user-name>bshand</user-name>
  <creator-name>bille2</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1876</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have installed the 2.3RC1 and as start an existing projet, that is working on 2.2 the server stop its launch with the error:

** /Library/Ruby/Gems/1.8/gems/activesupport-2.3.0/lib/active_support/dependencies.rb:440:in `load_missing_constant': uninitialized constant ActionController::Session::MemoryStore (NameError) **



My *environment.rb* contains the following line
  * config.action_controller.session_store =  :memory_store *



The error  disappear when I change it to :active_record_store</original-body>
  <latest-body>I have installed the 2.3RC1 and as start an existing projet, that is working on 2.2 the server stop its launch with the error:

** /Library/Ruby/Gems/1.8/gems/activesupport-2.3.0/lib/active_support/dependencies.rb:440:in `load_missing_constant': uninitialized constant ActionController::Session::MemoryStore (NameError) **



My *environment.rb* contains the following line
  * config.action_controller.session_store =  :memory_store *



The error  disappear when I change it to :active_record_store</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have installed the 2.3RC1 and as start an existing projet,
that is working on 2.2 the server stop its launch with the
error:&lt;/p&gt;
&lt;p&gt;**
/Library/Ruby/Gems/1.8/gems/activesupport-2.3.0/lib/active_support/dependencies.rb:440:in
&lt;code&gt;load_missing_constant': uninitialized constant
ActionController::Session::MemoryStore (NameError) **&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;My &lt;em&gt;environment.rb&lt;/em&gt; contains the following line *
config.action_controller.session_store = :memory_store *&lt;/p&gt;
&lt;p&gt;The error disappear when I change it to :active_record_store&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have installed the 2.3RC1 and as start an existing projet, that is working on 2.2 the server stop its launch with the error:

** /Library/Ruby/Gems/1.8/gems/activesupport-2.3.0/lib/active_support/dependencies.rb:440:in `load_missing_constant': uninitialized constant ActionController::Session::MemoryStore (NameError) **



My *environment.rb* contains the following line
  * config.action_controller.session_store =  :memory_store *



The error  disappear when I change it to :active_record_store</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have installed the 2.3RC1 and as start an existing projet,
that is working on 2.2 the server stop its launch with the
error:&lt;/p&gt;
&lt;p&gt;**
/Library/Ruby/Gems/1.8/gems/activesupport-2.3.0/lib/active_support/dependencies.rb:440:in
&lt;code&gt;load_missing_constant': uninitialized constant
ActionController::Session::MemoryStore (NameError) **&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;My &lt;em&gt;environment.rb&lt;/em&gt; contains the following line *
config.action_controller.session_store = :memory_store *&lt;/p&gt;
&lt;p&gt;The error disappear when I change it to :active_record_store&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-04T20:23:03+00:00</created-at>
      <creator-id type="integer">46247</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1876</number>
      <permalink>uninitialized-constant-actioncontrollersessionmemorystore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 memory_store</tag>
      <title>uninitialized constant ActionController::Session::MemoryStore</title>
      <updated-at type="datetime">2009-02-04T20:23:07+00:00</updated-at>
      <user-id type="integer">46247</user-id>
      <version type="integer">1</version>
      <user-name>bille2</user-name>
      <creator-name>bille2</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1876</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The MemoryStore has been killed off. I'd recommend either using active_record_store or, even better, start using the default cookie store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The MemoryStore has been killed off. I'd recommend either using
active_record_store or, even better, start using the default cookie
store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-06T14:01:46+00:00</created-at>
      <creator-id type="integer">46247</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1876</number>
      <permalink>uninitialized-constant-actioncontrollersessionmemorystore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3 memory_store</tag>
      <title>uninitialized constant ActionController::Session::MemoryStore</title>
      <updated-at type="datetime">2009-02-06T14:01:48+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">2</version>
      <user-name>DHH</user-name>
      <creator-name>bille2</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1876</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi all, I can not see a reason to remove memory_store from rails 2.3 sessions.
Sometimes it is too much simple to configure a session as :
config.action_controller.session_store = :memory_store

I do not feel comfortable in use active_record_store or mem_cache_store in my app. My application does not have a database, so I am not using the active_record_store, and I do not want to configure one because all my data comes from Semantic Web endpoints.

Also, I don't want to configure a cache server to store users' sessions because my app is too small to demand such effort.

I thing that :memory_store has its applicability and should be kept in future version.

Regards,
Samur Ara&#250;jo
Msc. Compute Science - PUC-Rio - Brasil</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi all, I can not see a reason to remove memory_store from rails
2.3 sessions. Sometimes it is too much simple to configure a
session as : config.action_controller.session_store =
:memory_store&lt;/p&gt;
&lt;p&gt;I do not feel comfortable in use active_record_store or
mem_cache_store in my app. My application does not have a database,
so I am not using the active_record_store, and I do not want to
configure one because all my data comes from Semantic Web
endpoints.&lt;/p&gt;
&lt;p&gt;Also, I don't want to configure a cache server to store users'
sessions because my app is too small to demand such effort.&lt;/p&gt;
&lt;p&gt;I thing that :memory_store has its applicability and should be
kept in future version.&lt;/p&gt;
&lt;p&gt;Regards, Samur Ara&amp;uacute;jo Msc. Compute Science - PUC-Rio -
Brasil&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-07T19:09:43+01:00</created-at>
      <creator-id type="integer">46247</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1876</number>
      <permalink>uninitialized-constant-actioncontrollersessionmemorystore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3 memory_store</tag>
      <title>uninitialized constant ActionController::Session::MemoryStore</title>
      <updated-at type="datetime">2009-04-07T19:09:45+01:00</updated-at>
      <user-id type="integer">53331</user-id>
      <version type="integer">3</version>
      <user-name>samur araujo</user-name>
      <creator-name>bille2</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1876</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>:memory_store is useful only in very limited circumstances -- very simple servers where session data must be kept secret, or servers which require session fixation for other reasons. But here is a re-implementation for Rails 2.3, in case you really need it. Put the file into  It's not threadsafe, just like the original.

@@@ ruby
# Port of old CGI::Session::MemoryStore to Rails 2.3
module ActionController
  module Session
    # In-memory session storage class.
    #
    # Implements session storage as a global in-memory hash.  Session
    # data will only persist for as long as the ruby interpreter 
    # instance does.
    class MemoryStore &lt; AbstractStore
      GLOBAL_HASH_TABLE = {} #:nodoc:

      private
        def get_session(env, sid)
          sid ||= generate_sid
          session = GLOBAL_HASH_TABLE[sid] || {}
          session = AbstractStore::SessionHash.new(self, env).merge(session)
          [sid, session]
        end

        def set_session(env, sid, session_data)
          GLOBAL_HASH_TABLE[sid] = session_data
          return true
        end
    end
  end
end unless RAILS_GEM_VERSION =~ /^([01]\.|2\.[012]\.)/
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;:memory_store is useful only in very limited circumstances --
very simple servers where session data must be kept secret, or
servers which require session fixation for other reasons. But here
is a re-implementation for Rails 2.3, in case you really need it.
Put the file into It's not threadsafe, just like the original.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# Port of old CGI::Session::MemoryStore to Rails 2.3
module ActionController
  module Session
    # In-memory session storage class.
    #
    # Implements session storage as a global in-memory hash.  Session
    # data will only persist for as long as the ruby interpreter 
    # instance does.
    class MemoryStore &amp;lt; AbstractStore
      GLOBAL_HASH_TABLE = {} #:nodoc:

      private
        def get_session(env, sid)
          sid ||= generate_sid
          session = GLOBAL_HASH_TABLE[sid] || {}
          session = AbstractStore::SessionHash.new(self, env).merge(session)
          [sid, session]
        end

        def set_session(env, sid, session_data)
          GLOBAL_HASH_TABLE[sid] = session_data
          return true
        end
    end
  end
end unless RAILS_GEM_VERSION =~ /^([01]\.|2\.[012]\.)/&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-20T14:21:58+00:00</created-at>
      <creator-id type="integer">46247</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1876</number>
      <permalink>uninitialized-constant-actioncontrollersessionmemorystore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3 memory_store</tag>
      <title>uninitialized constant ActionController::Session::MemoryStore</title>
      <updated-at type="datetime">2009-11-20T14:22:01+00:00</updated-at>
      <user-id type="integer">32480</user-id>
      <version type="integer">4</version>
      <user-name>bshand</user-name>
      <creator-name>bille2</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1876</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Create a file in config/initializers/ containing the above code; then your existing session configuration will continue to work in Rails 2.3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Create a file in config/initializers/ containing the above code;
then your existing session configuration will continue to work in
Rails 2.3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-20T14:24:52+00:00</created-at>
      <creator-id type="integer">46247</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1876</number>
      <permalink>uninitialized-constant-actioncontrollersessionmemorystore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3 memory_store</tag>
      <title>uninitialized constant ActionController::Session::MemoryStore</title>
      <updated-at type="datetime">2009-11-20T14:24:57+00:00</updated-at>
      <user-id type="integer">32480</user-id>
      <version type="integer">5</version>
      <user-name>bshand</user-name>
      <creator-name>bille2</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1876</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
