<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-22T18:13:03+01:00</created-at>
  <creator-id type="integer">14415</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">469</number>
  <permalink>validates_acceptance_of-deep-failure</permalink>
  <priority type="integer">17306</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2.1 activerecord bug validations</tag>
  <title>validates_acceptance_of deep failure ?</title>
  <updated-at type="datetime">2008-09-30T17:50:44+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">9</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>J&#233;r&#244;me</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi

It looks like validates_acceptance_of doesn't work wether it uses a db column or just a regular instance attribute.

@@@ bash
$ rails test ; cd test
$ ./script/generate model User name:string terms_of_service:boolean
$ ./script/generate model Person name:string
$ rake db:migrate
@@@

@@@ ruby
class User &lt; ActiveRecord::Base
  validates_acceptance_of :terms_of_service
end

class Person &lt; ActiveRecord::Base
  attr_accessor :terms_of_service
  validates_acceptance_of :terms_of_service
end

class UserTest &lt; ActiveSupport::TestCase
  def test_nice_user_should_be_valid
    assert_valid User.new(:name =&gt; &quot;Mister Yes&quot;, :terms_of_service =&gt; true)
  end

  def test_new_user_should_not_be_valid
    user = User.create(:name =&gt; &quot;Mister New&quot;)
    assert_equal user.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end

  def test_bad_user_should_not_be_valid
    user = User.create(:name =&gt; &quot;Mister No&quot;, :terms_of_service =&gt; false)
    assert_equal user.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end
end

class PersonTest &lt; ActiveSupport::TestCase
  def test_nice_person_should_be_valid
    assert_valid Person.new(:name =&gt; &quot;Mister Yes&quot;, :terms_of_service =&gt; true)
  end

  def test_new_person_should_not_be_valid
    person = Person.create(:name =&gt; &quot;Mister New&quot;)
    assert_equal person.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end

  def test_bad_person_should_not_be_valid
    person = Person.create(:name =&gt; &quot;Mister No&quot;, :terms_of_service =&gt; false)
    assert_equal person.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end
end
@@@

@@@ bash
$ rake
(in /Users/jerome/tmp/test)
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot; &quot;test/unit/person_test.rb&quot; &quot;test/unit/user_test.rb&quot; 
Loaded suite /opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader
Started
.FF.FF
Finished in 0.043144 seconds.

  1) Failure:
test_new_person_should_not_be_valid(PersonTest)
    [./test/unit/person_test.rb:10:in `test_new_person_should_not_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
&lt;nil&gt; expected but was
&lt;&quot;must be accepted&quot;&gt;.

  2) Failure:
test_nice_person_should_be_valid(PersonTest)
    [./test/unit/person_test.rb:5:in `test_nice_person_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&lt;false&gt; is not true.

  3) Failure:
test_new_user_should_not_be_valid(UserTest)
    [./test/unit/user_test.rb:10:in `test_new_user_should_not_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
&lt;nil&gt; expected but was
&lt;&quot;must be accepted&quot;&gt;.

  4) Failure:
test_nice_user_should_be_valid(UserTest)
    [./test/unit/user_test.rb:5:in `test_nice_user_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&lt;false&gt; is not true.

6 tests, 6 assertions, 4 failures, 0 errors
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot;  
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot; 
@@@</original-body>
  <latest-body>Hi

It looks like validates_acceptance_of doesn't work wether it uses a db column or just a regular instance attribute.

@@@ bash
$ rails test ; cd test
$ ./script/generate model User name:string terms_of_service:boolean
$ ./script/generate model Person name:string
$ rake db:migrate
@@@

@@@ ruby
class User &lt; ActiveRecord::Base
  validates_acceptance_of :terms_of_service
end

class Person &lt; ActiveRecord::Base
  attr_accessor :terms_of_service
  validates_acceptance_of :terms_of_service
end

class UserTest &lt; ActiveSupport::TestCase
  def test_nice_user_should_be_valid
    assert_valid User.new(:name =&gt; &quot;Mister Yes&quot;, :terms_of_service =&gt; true)
  end

  def test_new_user_should_not_be_valid
    user = User.create(:name =&gt; &quot;Mister New&quot;)
    assert_equal user.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end

  def test_bad_user_should_not_be_valid
    user = User.create(:name =&gt; &quot;Mister No&quot;, :terms_of_service =&gt; false)
    assert_equal user.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end
end

class PersonTest &lt; ActiveSupport::TestCase
  def test_nice_person_should_be_valid
    assert_valid Person.new(:name =&gt; &quot;Mister Yes&quot;, :terms_of_service =&gt; true)
  end

  def test_new_person_should_not_be_valid
    person = Person.create(:name =&gt; &quot;Mister New&quot;)
    assert_equal person.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end

  def test_bad_person_should_not_be_valid
    person = Person.create(:name =&gt; &quot;Mister No&quot;, :terms_of_service =&gt; false)
    assert_equal person.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end
end
@@@

@@@ bash
$ rake
(in /Users/jerome/tmp/test)
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot; &quot;test/unit/person_test.rb&quot; &quot;test/unit/user_test.rb&quot; 
Loaded suite /opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader
Started
.FF.FF
Finished in 0.043144 seconds.

  1) Failure:
test_new_person_should_not_be_valid(PersonTest)
    [./test/unit/person_test.rb:10:in `test_new_person_should_not_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
&lt;nil&gt; expected but was
&lt;&quot;must be accepted&quot;&gt;.

  2) Failure:
test_nice_person_should_be_valid(PersonTest)
    [./test/unit/person_test.rb:5:in `test_nice_person_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&lt;false&gt; is not true.

  3) Failure:
test_new_user_should_not_be_valid(UserTest)
    [./test/unit/user_test.rb:10:in `test_new_user_should_not_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
&lt;nil&gt; expected but was
&lt;&quot;must be accepted&quot;&gt;.

  4) Failure:
test_nice_user_should_be_valid(UserTest)
    [./test/unit/user_test.rb:5:in `test_nice_user_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&lt;false&gt; is not true.

6 tests, 6 assertions, 4 failures, 0 errors
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot;  
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot; 
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Hi
&lt;/p&gt;&lt;p&gt;
It looks like validates_acceptance_of doesn't work wether it uses a db column or just a regular instance attribute.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ rails test ; cd test
$ ./script/generate model User name:string terms_of_service:boolean
$ ./script/generate model Person name:string
$ rake db:migrate&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  validates_acceptance_of :terms_of_service
end

class Person &amp;lt; ActiveRecord::Base
  attr_accessor :terms_of_service
  validates_acceptance_of :terms_of_service
end

class UserTest &amp;lt; ActiveSupport::TestCase
  def test_nice_user_should_be_valid
    assert_valid User.new(:name =&amp;gt; &amp;quot;Mister Yes&amp;quot;, :terms_of_service =&amp;gt; true)
  end

  def test_new_user_should_not_be_valid
    user = User.create(:name =&amp;gt; &amp;quot;Mister New&amp;quot;)
    assert_equal user.errors.on(:terms_of_service), &amp;quot;must be accepted&amp;quot;
  end

  def test_bad_user_should_not_be_valid
    user = User.create(:name =&amp;gt; &amp;quot;Mister No&amp;quot;, :terms_of_service =&amp;gt; false)
    assert_equal user.errors.on(:terms_of_service), &amp;quot;must be accepted&amp;quot;
  end
end

class PersonTest &amp;lt; ActiveSupport::TestCase
  def test_nice_person_should_be_valid
    assert_valid Person.new(:name =&amp;gt; &amp;quot;Mister Yes&amp;quot;, :terms_of_service =&amp;gt; true)
  end

  def test_new_person_should_not_be_valid
    person = Person.create(:name =&amp;gt; &amp;quot;Mister New&amp;quot;)
    assert_equal person.errors.on(:terms_of_service), &amp;quot;must be accepted&amp;quot;
  end

  def test_bad_person_should_not_be_valid
    person = Person.create(:name =&amp;gt; &amp;quot;Mister No&amp;quot;, :terms_of_service =&amp;gt; false)
    assert_equal person.errors.on(:terms_of_service), &amp;quot;must be accepted&amp;quot;
  end
end&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ rake
(in /Users/jerome/tmp/test)
/opt/local/bin/ruby -Ilib:test &amp;quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&amp;quot; &amp;quot;test/unit/person_test.rb&amp;quot; &amp;quot;test/unit/user_test.rb&amp;quot; 
Loaded suite /opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader
Started
.FF.FF
Finished in 0.043144 seconds.

  1) Failure:
test_new_person_should_not_be_valid(PersonTest)
    [./test/unit/person_test.rb:10:in `test_new_person_should_not_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
&amp;lt;nil&amp;gt; expected but was
&amp;lt;&amp;quot;must be accepted&amp;quot;&amp;gt;.

  2) Failure:
test_nice_person_should_be_valid(PersonTest)
    [./test/unit/person_test.rb:5:in `test_nice_person_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&amp;lt;false&amp;gt; is not true.

  3) Failure:
test_new_user_should_not_be_valid(UserTest)
    [./test/unit/user_test.rb:10:in `test_new_user_should_not_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
&amp;lt;nil&amp;gt; expected but was
&amp;lt;&amp;quot;must be accepted&amp;quot;&amp;gt;.

  4) Failure:
test_nice_user_should_be_valid(UserTest)
    [./test/unit/user_test.rb:5:in `test_nice_user_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&amp;lt;false&amp;gt; is not true.

6 tests, 6 assertions, 4 failures, 0 errors
/opt/local/bin/ruby -Ilib:test &amp;quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&amp;quot;  
/opt/local/bin/ruby -Ilib:test &amp;quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&amp;quot; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi

It looks like validates_acceptance_of doesn't work wether it uses a db column or just a regular instance attribute.

@@@ bash
$ rails test ; cd test
$ ./script/generate model User name:string terms_of_service:boolean
$ ./script/generate model Person name:string
$ rake db:migrate
@@@

@@@ ruby
class User &lt; ActiveRecord::Base
  validates_acceptance_of :terms_of_service
end

class Person &lt; ActiveRecord::Base
  attr_accessor :terms_of_service
  validates_acceptance_of :terms_of_service
end

class UserTest &lt; ActiveSupport::TestCase
  def test_new_user_be_valid_since_boolean_is_nil
    assert_valid User.new(:name =&gt; &quot;Mister New&quot;)
  end

  def test_nice_user_should_be_valid
    assert_valid User.new(:name =&gt; &quot;Mister Yes&quot;, :terms_of_service =&gt; true)
  end

  def test_bad_user_should_not_be_valid
    user = User.create(:name =&gt; &quot;Mister No&quot;, :terms_of_service =&gt; false)
    assert_equal user.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end
end

class PersonTest &lt; ActiveSupport::TestCase
  def test_new_person_be_valid_since_boolean_is_nil
    assert_valid Person.new(:name =&gt; &quot;Mister New&quot;)
  end

  def test_nice_person_should_be_valid
    assert_valid Person.new(:name =&gt; &quot;Mister Yes&quot;, :terms_of_service =&gt; true)
  end

  def test_bad_person_should_not_be_valid
    person = Person.create(:name =&gt; &quot;Mister No&quot;, :terms_of_service =&gt; false)
    assert_equal person.errors.on(:terms_of_service), &quot;must be accepted&quot;
  end
end
@@@

@@@ bash
$ rake
(in /Users/jerome/tmp/test)
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot; &quot;test/unit/person_test.rb&quot; &quot;test/unit/user_test.rb&quot; 
Loaded suite /opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader
Started
..F..F
Finished in 0.327487 seconds.

  1) Failure:
test_nice_person_should_be_valid(PersonTest)
    [./test/unit/person_test.rb:9:in `test_nice_person_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&lt;false&gt; is not true.

  2) Failure:
test_nice_user_should_be_valid(UserTest)
    [./test/unit/user_test.rb:9:in `test_nice_user_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&lt;false&gt; is not true.

6 tests, 6 assertions, 2 failures, 0 errors
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot;  
/opt/local/bin/ruby -Ilib:test &quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&quot;  
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Hi
&lt;/p&gt;&lt;p&gt;
It looks like validates_acceptance_of doesn't work wether it uses a db column or just a regular instance attribute.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ rails test ; cd test
$ ./script/generate model User name:string terms_of_service:boolean
$ ./script/generate model Person name:string
$ rake db:migrate&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  validates_acceptance_of :terms_of_service
end

class Person &amp;lt; ActiveRecord::Base
  attr_accessor :terms_of_service
  validates_acceptance_of :terms_of_service
end

class UserTest &amp;lt; ActiveSupport::TestCase
  def test_new_user_be_valid_since_boolean_is_nil
    assert_valid User.new(:name =&amp;gt; &amp;quot;Mister New&amp;quot;)
  end

  def test_nice_user_should_be_valid
    assert_valid User.new(:name =&amp;gt; &amp;quot;Mister Yes&amp;quot;, :terms_of_service =&amp;gt; true)
  end

  def test_bad_user_should_not_be_valid
    user = User.create(:name =&amp;gt; &amp;quot;Mister No&amp;quot;, :terms_of_service =&amp;gt; false)
    assert_equal user.errors.on(:terms_of_service), &amp;quot;must be accepted&amp;quot;
  end
end

class PersonTest &amp;lt; ActiveSupport::TestCase
  def test_new_person_be_valid_since_boolean_is_nil
    assert_valid Person.new(:name =&amp;gt; &amp;quot;Mister New&amp;quot;)
  end

  def test_nice_person_should_be_valid
    assert_valid Person.new(:name =&amp;gt; &amp;quot;Mister Yes&amp;quot;, :terms_of_service =&amp;gt; true)
  end

  def test_bad_person_should_not_be_valid
    person = Person.create(:name =&amp;gt; &amp;quot;Mister No&amp;quot;, :terms_of_service =&amp;gt; false)
    assert_equal person.errors.on(:terms_of_service), &amp;quot;must be accepted&amp;quot;
  end
end&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ rake
(in /Users/jerome/tmp/test)
/opt/local/bin/ruby -Ilib:test &amp;quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&amp;quot; &amp;quot;test/unit/person_test.rb&amp;quot; &amp;quot;test/unit/user_test.rb&amp;quot; 
Loaded suite /opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader
Started
..F..F
Finished in 0.327487 seconds.

  1) Failure:
test_nice_person_should_be_valid(PersonTest)
    [./test/unit/person_test.rb:9:in `test_nice_person_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&amp;lt;false&amp;gt; is not true.

  2) Failure:
test_nice_user_should_be_valid(UserTest)
    [./test/unit/user_test.rb:9:in `test_nice_user_should_be_valid'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `__send__'
     /opt/local/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/testing/setup_and_teardown.rb:33:in `run']:
Terms of service must be accepted.
&amp;lt;false&amp;gt; is not true.

6 tests, 6 assertions, 2 failures, 0 errors
/opt/local/bin/ruby -Ilib:test &amp;quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&amp;quot;  
/opt/local/bin/ruby -Ilib:test &amp;quot;/opt/local/lib/ruby/gems/1.8/gems/rake-0.8.1/lib/rake/rake_test_loader.rb&amp;quot;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-22T18:27:16+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-22T18:27:16+01:00</updated-at>
      <user-id type="integer">14415</user-id>
      <version type="integer">1</version>
      <user-name>J&#233;r&#244;me</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think this is because validates_acceptance_of has a default of :allow_nil =&gt; true,

@@@ ruby
      def validates_acceptance_of(*attr_names)
        configuration = { :message =&gt; ActiveRecord::Errors.default_error_messages[:accepted], :on =&gt; :save, :allow_nil =&gt; true, :accept =&gt; &quot;1&quot; }
        configuration.update(attr_names.extract_options!)

        db_cols = begin
          column_names
        rescue ActiveRecord::StatementInvalid
          []
        end
        names = attr_names.reject { |name| db_cols.include?(name.to_s) }
        attr_accessor(*names)

        validates_each(attr_names,configuration) do |record, attr_name, value|
          record.errors.add(attr_name, configuration[:message]) unless value == configuration[:accept]
        end
      end
@@@

but it does seem to default to only accept &quot;1&quot; as a valid value...
should probably be &quot;1&quot; or true?

@@@ ruby
      def validates_acceptance_of(*attr_names)
        configuration = { :message =&gt; ActiveRecord::Errors.default_error_messages[:accepted], :on =&gt; :save, :allow_nil =&gt; true, :accept =&gt; [&quot;1&quot;, true] }
        configuration.update(attr_names.extract_options!)

        db_cols = begin
          column_names
        rescue ActiveRecord::StatementInvalid
          []
        end
        names = attr_names.reject { |name| db_cols.include?(name.to_s) }
        attr_accessor(*names)

        validates_each(attr_names,configuration) do |record, attr_name, value|
          record.errors.add(attr_name, configuration[:message]) unless safe_to_array(configuration[:accept]).include?(value)
        end
      end
@@@
perhaps that works better?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I think this is because validates_acceptance_of has a default of :allow_nil =&gt; true,
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;      def validates_acceptance_of(*attr_names)
        configuration = { :message =&amp;gt; ActiveRecord::Errors.default_error_messages[:accepted], :on =&amp;gt; :save, :allow_nil =&amp;gt; true, :accept =&amp;gt; &amp;quot;1&amp;quot; }
        configuration.update(attr_names.extract_options!)

        db_cols = begin
          column_names
        rescue ActiveRecord::StatementInvalid
          []
        end
        names = attr_names.reject { |name| db_cols.include?(name.to_s) }
        attr_accessor(*names)

        validates_each(attr_names,configuration) do |record, attr_name, value|
          record.errors.add(attr_name, configuration[:message]) unless value == configuration[:accept]
        end
      end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
but it does seem to default to only accept &quot;1&quot; as a valid value...
&lt;/p&gt;&lt;p&gt;
should probably be &quot;1&quot; or true?
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;      def validates_acceptance_of(*attr_names)
        configuration = { :message =&amp;gt; ActiveRecord::Errors.default_error_messages[:accepted], :on =&amp;gt; :save, :allow_nil =&amp;gt; true, :accept =&amp;gt; [&amp;quot;1&amp;quot;, true] }
        configuration.update(attr_names.extract_options!)

        db_cols = begin
          column_names
        rescue ActiveRecord::StatementInvalid
          []
        end
        names = attr_names.reject { |name| db_cols.include?(name.to_s) }
        attr_accessor(*names)

        validates_each(attr_names,configuration) do |record, attr_name, value|
          record.errors.add(attr_name, configuration[:message]) unless safe_to_array(configuration[:accept]).include?(value)
        end
      end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
perhaps that works better?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-22T18:34:26+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-22T18:34:26+01:00</updated-at>
      <user-id type="integer">18469</user-id>
      <version type="integer">2</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>but the documentation says:

@@@ text
:accept - Specifies value that is considered accepted. The default value is a string &quot;1&quot;, which makes it easy to relate to an HTML checkbox. This should be set to true if you are validating a database column, since the attribute is typecast from &quot;1&quot; to true before validation.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
but the documentation says:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;:accept - Specifies value that is considered accepted. The default value is a string &amp;quot;1&amp;quot;, which makes it easy to relate to an HTML checkbox. This should be set to true if you are validating a database column, since the attribute is typecast from &amp;quot;1&amp;quot; to true before validation.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-22T19:20:59+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-22T19:20:59+01:00</updated-at>
      <user-id type="integer">14415</user-id>
      <version type="integer">3</version>
      <user-name>J&#233;r&#244;me</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>great,
so the current functionality is fine, I guess.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
great,
&lt;/p&gt;&lt;p&gt;
so the current functionality is fine, I guess.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-22T19:29:05+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-22T19:29:05+01:00</updated-at>
      <user-id type="integer">18469</user-id>
      <version type="integer">4</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Errrr no, since the tests fail !</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Errrr no, since the tests fail !
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-22T20:12:44+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-22T20:12:44+01:00</updated-at>
      <user-id type="integer">14415</user-id>
      <version type="integer">5</version>
      <user-name>J&#233;r&#244;me</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok so I misunderstanded the doc. The typecasting explanation was unclear for me. Setting :accept =&gt; true is a better option since it validates &quot;1&quot;, 1 and true, while the default :accept =&gt; &quot;1&quot; only validates &quot;1&quot;...

What about changing this default value then ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ok so I misunderstanded the doc. The typecasting explanation was unclear for me. Setting :accept =&gt; true is a better option since it validates &quot;1&quot;, 1 and true, while the default :accept =&gt; &quot;1&quot; only validates &quot;1&quot;...
&lt;/p&gt;&lt;p&gt;
What about changing this default value then ?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-22T20:39:09+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-22T20:39:09+01:00</updated-at>
      <user-id type="integer">14415</user-id>
      <version type="integer">6</version>
      <user-name>J&#233;r&#244;me</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>well, that was my suggestion,
and what my code did was...

default to &quot;1&quot; or true

But, need to get a core team guy on here to decide what &quot;should&quot; be the default.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
well, that was my suggestion,
&lt;/p&gt;&lt;p&gt;
and what my code did was...
&lt;/p&gt;&lt;p&gt;
default to &quot;1&quot; or true
&lt;/p&gt;&lt;p&gt;
But, need to get a core team guy on here to decide what &quot;should&quot; be the default.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-22T21:44:16+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-22T21:44:16+01:00</updated-at>
      <user-id type="integer">18469</user-id>
      <version type="integer">7</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I brought this up last month on the core list. See

http://groups.google.com.au/group/rubyonrails-core/browse_thread/thread/3aace37500090737/030238fe0af495df?hl=en&amp;lnk=gst&amp;q=validates_acceptance_of#030238fe0af495df

It does work, though not as advertised. You do have to add a hidden checkbox with a default value.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I brought this up last month on the core list. See
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://groups.google.com.au/group/rubyonrails-core/browse_thread/thread/3aace37500090737/030238fe0af495df?hl=en&amp;lnk=gst&amp;q=validates_acceptance_of#030238fe0af495df&quot;&gt;http://groups.google.com.au/grou...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
It does work, though not as advertised. You do have to add a hidden checkbox with a default value.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-23T00:40:01+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-06-23T00:40:01+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">8</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T17:50:38+01:00</created-at>
      <creator-id type="integer">14415</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">469</number>
      <permalink>validates_acceptance_of-deep-failure</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;2.1&quot; activerecord bug validations</tag>
      <title>validates_acceptance_of deep failure ?</title>
      <updated-at type="datetime">2008-09-30T17:50:44+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">9</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>J&#233;r&#244;me</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/469</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
