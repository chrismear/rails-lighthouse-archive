<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">80</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-25T10:12:53+01:00</created-at>
  <creator-id type="integer">24408</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">482</number>
  <permalink>activerecord-2-1-0-deletion-callback-wont-work-anymore</permalink>
  <priority type="integer">15081</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.1 activerecord callback delete</tag>
  <title>activerecord 2.1.0 deletion callback wont work anymore</title>
  <updated-at type="datetime">2008-06-26T21:33:41+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">3</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>tophe</creator-name>
  <assigned-user-name>Tobias L&#252;tke</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/482</url>
  <priority-name nil="true"></priority-name>
  <original-body>since the migration from 2.0.2 to 2.1.0. the deletion callback aren't anymore working.

i have a before_destroy, and then a after_destroy callback on a activerecord object.

in 2.0.2 it use to work we have 
begin ... before_destroy ... object deletion ... commit
begin ... after_destroy ... commit

in 2.1.0 we have
begin ... before_destroy ... after_destroy ... commit.

and has in the after_destroy, we call other object destroy which run a before_destroy verifing that they don't belong to other object that dont work.

ex :
class Sale &lt; Base
 belongs_to :address 
   def before_destroy
      raise &quot;can't destroy sale.id = #{self.id} linked lot exist&quot; if Lot.count(:conditions =&gt; ['idsale = ?',self.id]) &gt;0
    end

    def destroyer
      self.address.destroy

    end

end

class Sale &lt; Base
has_many :sale
def before_destroy
		
  raise &quot;can't destroy address.id = #{self.id} linked sale exist&quot; if Sale.count(:conditions =&gt; ['idaddress = ?',self.id]) &gt;0
end

that simple exemple use to work with ar2.0.2 but dont work anymore in ar2.1.0</original-body>
  <latest-body>since the migration from 2.0.2 to 2.1.0. the deletion callback aren't anymore working.

i have a before_destroy, and then a after_destroy callback on a activerecord object.

in 2.0.2 it use to work we have 
begin ... before_destroy ... object deletion ... commit
begin ... after_destroy ... commit

in 2.1.0 we have
begin ... before_destroy ... after_destroy ... commit.

and has in the after_destroy, we call other object destroy which run a before_destroy verifing that they don't belong to other object that dont work.

ex :
class Sale &lt; Base
 belongs_to :address 
   def before_destroy
      raise &quot;can't destroy sale.id = #{self.id} linked lot exist&quot; if Lot.count(:conditions =&gt; ['idsale = ?',self.id]) &gt;0
    end

    def destroyer
      self.address.destroy

    end

end

class Sale &lt; Base
has_many :sale
def before_destroy
		
  raise &quot;can't destroy address.id = #{self.id} linked sale exist&quot; if Sale.count(:conditions =&gt; ['idaddress = ?',self.id]) &gt;0
end

that simple exemple use to work with ar2.0.2 but dont work anymore in ar2.1.0</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
since the migration from 2.0.2 to 2.1.0. the deletion callback aren't anymore working.
&lt;/p&gt;&lt;p&gt;
i have a before_destroy, and then a after_destroy callback on a activerecord object.
&lt;/p&gt;&lt;p&gt;
in 2.0.2 it use to work we have
&lt;/p&gt;&lt;p&gt;
begin ... before_destroy ... object deletion ... commit
&lt;/p&gt;&lt;p&gt;
begin ... after_destroy ... commit
&lt;/p&gt;&lt;p&gt;
in 2.1.0 we have
&lt;/p&gt;&lt;p&gt;
begin ... before_destroy ... after_destroy ... commit.
&lt;/p&gt;&lt;p&gt;
and has in the after_destroy, we call other object destroy which run a before_destroy verifing that they don't belong to other object that dont work.
&lt;/p&gt;&lt;p&gt;
ex :
&lt;/p&gt;&lt;p&gt;
class Sale &amp;lt; Base
&lt;/p&gt;&lt;p&gt;
belongs_to :address
&lt;/p&gt;&lt;p&gt;
def before_destroy
&lt;/p&gt;&lt;p&gt;
raise &quot;can't destroy sale.id = #{self.id} linked lot exist&quot; if Lot.count(:conditions =&gt; ['idsale = ?',self.id]) &gt;0
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
def destroyer
&lt;/p&gt;&lt;p&gt;
self.address.destroy
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Sale &amp;lt; Base
&lt;/p&gt;&lt;p&gt;
has_many :sale
&lt;/p&gt;&lt;p&gt;
def before_destroy
&lt;/p&gt;&lt;p&gt;
raise &quot;can't destroy address.id = #{self.id} linked sale exist&quot; if Sale.count(:conditions =&gt; ['idaddress = ?',self.id]) &gt;0
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
that simple exemple use to work with ar2.0.2 but dont work anymore in ar2.1.0
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">80</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>since the migration from 2.0.2 to 2.1.0. the deletion callback aren't anymore working.

i have a before_destroy, and then a after_destroy callback on a activerecord object.

in 2.0.2 it use to work we have 
begin ... before_destroy ... object deletion ... commit
begin ... after_destroy ... commit

in 2.1.0 we have
begin ... before_destroy ... after_destroy ... commit.

and has in the after_destroy, we call other object destroy which run a before_destroy verifing that they don't belong to other object that dont work.

ex :
class Sale &lt; Base
 belongs_to :address 
   def before_destroy
      raise &quot;can't destroy sale.id = #{self.id} linked lot exist&quot; if Lot.count(:conditions =&gt; ['idsale = ?',self.id]) &gt;0
    end

    def destroyer
      self.address.destroy

    end

end

class Sale &lt; Base
has_many :sale
def before_destroy
		
  raise &quot;can't destroy address.id = #{self.id} linked sale exist&quot; if Sale.count(:conditions =&gt; ['idaddress = ?',self.id]) &gt;0
end

that simple exemple use to work with ar2.0.2 but dont work anymore in ar2.1.0</body>
      <body-html>&lt;div&gt;&lt;p&gt;
since the migration from 2.0.2 to 2.1.0. the deletion callback aren't anymore working.
&lt;/p&gt;&lt;p&gt;
i have a before_destroy, and then a after_destroy callback on a activerecord object.
&lt;/p&gt;&lt;p&gt;
in 2.0.2 it use to work we have
&lt;/p&gt;&lt;p&gt;
begin ... before_destroy ... object deletion ... commit
&lt;/p&gt;&lt;p&gt;
begin ... after_destroy ... commit
&lt;/p&gt;&lt;p&gt;
in 2.1.0 we have
&lt;/p&gt;&lt;p&gt;
begin ... before_destroy ... after_destroy ... commit.
&lt;/p&gt;&lt;p&gt;
and has in the after_destroy, we call other object destroy which run a before_destroy verifing that they don't belong to other object that dont work.
&lt;/p&gt;&lt;p&gt;
ex :
&lt;/p&gt;&lt;p&gt;
class Sale &amp;lt; Base
&lt;/p&gt;&lt;p&gt;
belongs_to :address
&lt;/p&gt;&lt;p&gt;
def before_destroy
&lt;/p&gt;&lt;p&gt;
raise &quot;can't destroy sale.id = #{self.id} linked lot exist&quot; if Lot.count(:conditions =&gt; ['idsale = ?',self.id]) &gt;0
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
def destroyer
&lt;/p&gt;&lt;p&gt;
self.address.destroy
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Sale &amp;lt; Base
&lt;/p&gt;&lt;p&gt;
has_many :sale
&lt;/p&gt;&lt;p&gt;
def before_destroy
&lt;/p&gt;&lt;p&gt;
raise &quot;can't destroy address.id = #{self.id} linked sale exist&quot; if Sale.count(:conditions =&gt; ['idaddress = ?',self.id]) &gt;0
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
that simple exemple use to work with ar2.0.2 but dont work anymore in ar2.1.0
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T10:12:54+01:00</created-at>
      <creator-id type="integer">24408</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">482</number>
      <permalink>activerecord-2-1-0-deletion-callback-wont-work-anymore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>activerecord 2.1.0 deletion callback wont work anymore</title>
      <updated-at type="datetime">2008-06-25T10:12:54+01:00</updated-at>
      <user-id type="integer">24408</user-id>
      <version type="integer">1</version>
      <user-name>tophe</user-name>
      <creator-name>tophe</creator-name>
      <assigned-user-name>Tobias L&#252;tke</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/482</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">80</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>hi guy.

I have just finded were was the probleme. and by the way that's not a bug.

in fact the relation was declared with a dependent =&gt; :destroy.
that functionality wasn't working with rails 2.0.2, and when i do the upgrade to rails 2.1.0, the dependent tag was played before, the deletion happend.
so the older code dont work anymore.

class Sale &lt; Base

belongs_to :address,
:dependent =&gt; :destroy

def before_destroy

raise &quot;can't destroy sale.id = #{self.id} linked lot exist&quot; if Lot.count(:conditions =&gt; ['idsale = ?',self.id]) &gt;0

end 

i have simply remove the depend relation and everything works !</body>
      <body-html>&lt;div&gt;&lt;p&gt;
hi guy.
&lt;/p&gt;&lt;p&gt;
I have just finded were was the probleme. and by the way that's not a bug.
&lt;/p&gt;&lt;p&gt;
in fact the relation was declared with a dependent =&gt; :destroy.
&lt;/p&gt;&lt;p&gt;
that functionality wasn't working with rails 2.0.2, and when i do the upgrade to rails 2.1.0, the dependent tag was played before, the deletion happend.
&lt;/p&gt;&lt;p&gt;
so the older code dont work anymore.
&lt;/p&gt;&lt;p&gt;
class Sale &amp;lt; Base
&lt;/p&gt;&lt;p&gt;
belongs_to :address,
&lt;/p&gt;&lt;p&gt;
:dependent =&gt; :destroy
&lt;/p&gt;&lt;p&gt;
def before_destroy
&lt;/p&gt;&lt;p&gt;
raise &quot;can't destroy sale.id = #{self.id} linked lot exist&quot; if Lot.count(:conditions =&gt; ['idsale = ?',self.id]) &gt;0
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
i have simply remove the depend relation and everything works !
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T12:40:30+01:00</created-at>
      <creator-id type="integer">24408</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">482</number>
      <permalink>activerecord-2-1-0-deletion-callback-wont-work-anymore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord callback delete</tag>
      <title>activerecord 2.1.0 deletion callback wont work anymore</title>
      <updated-at type="datetime">2008-06-26T12:40:30+01:00</updated-at>
      <user-id type="integer">24408</user-id>
      <version type="integer">2</version>
      <user-name>tophe</user-name>
      <creator-name>tophe</creator-name>
      <assigned-user-name>Tobias L&#252;tke</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/482</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">80</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-26T21:33:41+01:00</created-at>
      <creator-id type="integer">24408</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">482</number>
      <permalink>activerecord-2-1-0-deletion-callback-wont-work-anymore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord callback delete</tag>
      <title>activerecord 2.1.0 deletion callback wont work anymore</title>
      <updated-at type="datetime">2008-06-26T21:33:41+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>tophe</creator-name>
      <assigned-user-name>Tobias L&#252;tke</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/482</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
