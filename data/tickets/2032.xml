<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-21T00:16:29+00:00</created-at>
  <creator-id type="integer">16686</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2032</number>
  <permalink>support-for-string-lists-in-mass-assignment-of-associations-via-assocation_ids</permalink>
  <priority type="integer">1269</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord patch</tag>
  <title>Support for String Lists in Mass Assignment of Associations via assocation_ids=</title>
  <updated-at type="datetime">2009-02-22T16:41:08+00:00</updated-at>
  <user-id type="integer">8406</user-id>
  <version type="integer">4</version>
  <user-name>Eloy Duran</user-name>
  <creator-name>jbarket (at sleepunit)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2032</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Currently, ActiveRecord's assocation_name_ids= will eat multiple ids if they're passed in a single string such as [&quot;1,2,3,4&quot;].

When it sees the array, it takes the first position (&quot;1,2,3,4&quot;) and calls to_i. This drops everything after the first noninteger character, which means that only the first id value makes it through.

This can be a desired effect for people who do things like rewrite ids to humanize them (210-United-States) because it will still assassinated the unnecessary parts, but for this particular format for this particular method, it seems appropriate.

When nesting a habtm association inside of another form (object[assocation_ids]), ExtJS and others return the format mentioned above.

This patch looks for that format and translates it into what Rails actually wants.</original-body>
  <latest-body>Currently, ActiveRecord's assocation_name_ids= will eat multiple ids if they're passed in a single string such as [&quot;1,2,3,4&quot;].

When it sees the array, it takes the first position (&quot;1,2,3,4&quot;) and calls to_i. This drops everything after the first noninteger character, which means that only the first id value makes it through.

This can be a desired effect for people who do things like rewrite ids to humanize them (210-United-States) because it will still assassinated the unnecessary parts, but for this particular format for this particular method, it seems appropriate.

When nesting a habtm association inside of another form (object[assocation_ids]), ExtJS and others return the format mentioned above.

This patch looks for that format and translates it into what Rails actually wants.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Currently, ActiveRecord's assocation_name_ids= will eat multiple
ids if they're passed in a single string such as [&quot;1,2,3,4&quot;].&lt;/p&gt;
&lt;p&gt;When it sees the array, it takes the first position (&quot;1,2,3,4&quot;)
and calls to_i. This drops everything after the first noninteger
character, which means that only the first id value makes it
through.&lt;/p&gt;
&lt;p&gt;This can be a desired effect for people who do things like
rewrite ids to humanize them (210-United-States) because it will
still assassinated the unnecessary parts, but for this particular
format for this particular method, it seems appropriate.&lt;/p&gt;
&lt;p&gt;When nesting a habtm association inside of another form
(object[assocation_ids]), ExtJS and others return the format
mentioned above.&lt;/p&gt;
&lt;p&gt;This patch looks for that format and translates it into what
Rails actually wants.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Currently, ActiveRecord's assocation_name_ids= will eat multiple ids if they're passed in a single string such as [&quot;1,2,3,4&quot;].

When it sees the array, it takes the first position (&quot;1,2,3,4&quot;) and calls to_i. This drops everything after the first noninteger character, which means that only the first id value makes it through.

This can be a desired effect for people who do things like rewrite ids to humanize them (210-United-States) because it will still assassinated the unnecessary parts, but for this particular format for this particular method, it seems appropriate.

When nesting a habtm association inside of another form (object[assocation_ids]), ExtJS and others return the format mentioned above.

This patch looks for that format and translates it into what Rails actually wants.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Currently, ActiveRecord's assocation_name_ids= will eat multiple
ids if they're passed in a single string such as [&quot;1,2,3,4&quot;].&lt;/p&gt;
&lt;p&gt;When it sees the array, it takes the first position (&quot;1,2,3,4&quot;)
and calls to_i. This drops everything after the first noninteger
character, which means that only the first id value makes it
through.&lt;/p&gt;
&lt;p&gt;This can be a desired effect for people who do things like
rewrite ids to humanize them (210-United-States) because it will
still assassinated the unnecessary parts, but for this particular
format for this particular method, it seems appropriate.&lt;/p&gt;
&lt;p&gt;When nesting a habtm association inside of another form
(object[assocation_ids]), ExtJS and others return the format
mentioned above.&lt;/p&gt;
&lt;p&gt;This patch looks for that format and translates it into what
Rails actually wants.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-21T00:16:29+00:00</created-at>
      <creator-id type="integer">16686</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2032</number>
      <permalink>support-for-string-lists-in-mass-assignment-of-associations-via-assocation_ids</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch</tag>
      <title>Support for String Lists in Mass Assignment of Associations via assocation_ids=</title>
      <updated-at type="datetime">2009-02-21T00:16:34+00:00</updated-at>
      <user-id type="integer">16686</user-id>
      <version type="integer">1</version>
      <user-name>jbarket (at sleepunit)</user-name>
      <creator-name>jbarket (at sleepunit)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2032</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>-1

This doesn't seems like a standard parameter format, nor one that should be standard. And the patch is tiny, yes, but I'd be disinclined to support non-standard ExtJS formats in core.

Have you considered overriding your own association_ids= setter, or creating an association_ids_for_ext_js= setter? This also seems easily doable as a plugin, if you're concerned about redundant coding.</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1&lt;/p&gt;
&lt;p&gt;This doesn't seems like a standard parameter format, nor one
that should be standard. And the patch is tiny, yes, but I'd be
disinclined to support non-standard ExtJS formats in core.&lt;/p&gt;
&lt;p&gt;Have you considered overriding your own association_ids= setter,
or creating an association_ids_for_ext_js= setter? This also seems
easily doable as a plugin, if you're concerned about redundant
coding.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-21T19:39:17+00:00</created-at>
      <creator-id type="integer">16686</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2032</number>
      <permalink>support-for-string-lists-in-mass-assignment-of-associations-via-assocation_ids</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch</tag>
      <title>Support for String Lists in Mass Assignment of Associations via assocation_ids=</title>
      <updated-at type="datetime">2009-02-21T19:39:22+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">2</version>
      <user-name>cainlevy</user-name>
      <creator-name>jbarket (at sleepunit)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2032</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After discussing this one the mailing list and on IRC, I'm pretty sure you're right. Even though it's harmless, the only other way I see it coming up is stupidity, and I don't want the patch to reward laziness, heh.

I think integrating it into an ExtJS plugin I'm already fond of is probably the way to go. I could even try and simply override it in JavaScript then.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After discussing this one the mailing list and on IRC, I'm
pretty sure you're right. Even though it's harmless, the only other
way I see it coming up is stupidity, and I don't want the patch to
reward laziness, heh.&lt;/p&gt;
&lt;p&gt;I think integrating it into an ExtJS plugin I'm already fond of
is probably the way to go. I could even try and simply override it
in JavaScript then.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-21T20:07:30+00:00</created-at>
      <creator-id type="integer">16686</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2032</number>
      <permalink>support-for-string-lists-in-mass-assignment-of-associations-via-assocation_ids</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch</tag>
      <title>Support for String Lists in Mass Assignment of Associations via assocation_ids=</title>
      <updated-at type="datetime">2009-02-21T20:07:35+00:00</updated-at>
      <user-id type="integer">16686</user-id>
      <version type="integer">3</version>
      <user-name>jbarket (at sleepunit)</user-name>
      <creator-name>jbarket (at sleepunit)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2032</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-22T16:41:06+00:00</created-at>
      <creator-id type="integer">16686</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2032</number>
      <permalink>support-for-string-lists-in-mass-assignment-of-associations-via-assocation_ids</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord patch</tag>
      <title>Support for String Lists in Mass Assignment of Associations via assocation_ids=</title>
      <updated-at type="datetime">2009-02-22T16:41:08+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">4</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>jbarket (at sleepunit)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2032</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a0583ce4a086a9f40aeac695210c9d471486f053</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-21T00:16:29+00:00</created-at>
      <filename>string-list-id-assignment.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">91363</id>
      <size type="integer">1300</size>
      <uploader-id type="integer">16686</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/91363/string-list-id-assignment.diff</url>
    </attachment>
  </attachments>
</ticket>
