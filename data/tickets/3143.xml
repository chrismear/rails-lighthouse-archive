<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-04T03:50:23+01:00</created-at>
  <creator-id type="integer">56431</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3143</number>
  <permalink>url_for-should-remember-paramsformat</permalink>
  <priority type="integer">137512</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>format url_for</tag>
  <title>url_for should remember params[:format]</title>
  <updated-at type="datetime">2010-05-25T12:07:34+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">5</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Colin MacKenzie IV</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3143</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm using Rails 2.3.3.

I'm working with some custom formats (*.rtml.erb) which behave very similarly to HTML. I understand that my use case is, at best, a niche and that the standard way to use non-HTML formats is for XML, JSON, etc.

This may come down to semantics, but I expected Rails to &quot;remember&quot; my params[:format] value when I called url_for(:action =&gt; &quot;some_other_action&quot;). However, instead of ending up with /controller/action/id.rtml, I got the standard /controller/action/id.

For my own project, I've simply extended ActionController::Base#url_for to call super(options.reverse_merge(:format =&gt; params[:format])), which affected ActionView::Helpers::UrlHelpers#url_for due to its reliance on the former, but IMHO it makes more sense for Rails to do this on its own.

I'm familiar with XML, JSON, etc., but I'm not so familiar with the use cases under which these would reference other URLs. So, if this suggestion makes no sense, just say so. :) But from my own point of view, it would have been far more intuitive if Rails had picked up on my format automatically. As I see it (again, I may be naive in this respect), an .html file is more likely to reference another .html file, and an .xml file is more likely to reference another .xml file.</original-body>
  <latest-body>I'm using Rails 2.3.3.

I'm working with some custom formats (*.rtml.erb) which behave very similarly to HTML. I understand that my use case is, at best, a niche and that the standard way to use non-HTML formats is for XML, JSON, etc.

This may come down to semantics, but I expected Rails to &quot;remember&quot; my params[:format] value when I called url_for(:action =&gt; &quot;some_other_action&quot;). However, instead of ending up with /controller/action/id.rtml, I got the standard /controller/action/id.

For my own project, I've simply extended ActionController::Base#url_for to call super(options.reverse_merge(:format =&gt; params[:format])), which affected ActionView::Helpers::UrlHelpers#url_for due to its reliance on the former, but IMHO it makes more sense for Rails to do this on its own.

I'm familiar with XML, JSON, etc., but I'm not so familiar with the use cases under which these would reference other URLs. So, if this suggestion makes no sense, just say so. :) But from my own point of view, it would have been far more intuitive if Rails had picked up on my format automatically. As I see it (again, I may be naive in this respect), an .html file is more likely to reference another .html file, and an .xml file is more likely to reference another .xml file.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm using Rails 2.3.3.&lt;/p&gt;
&lt;p&gt;I'm working with some custom formats (*.rtml.erb) which behave
very similarly to HTML. I understand that my use case is, at best,
a niche and that the standard way to use non-HTML formats is for
XML, JSON, etc.&lt;/p&gt;
&lt;p&gt;This may come down to semantics, but I expected Rails to
&quot;remember&quot; my params[:format] value when I called url_for(:action
=&amp;gt; &quot;some_other_action&quot;). However, instead of ending up with
/controller/action/id.rtml, I got the standard
/controller/action/id.&lt;/p&gt;
&lt;p&gt;For my own project, I've simply extended
ActionController::Base#url_for to call
super(options.reverse_merge(:format =&amp;gt; params[:format])), which
affected ActionView::Helpers::UrlHelpers#url_for due to its
reliance on the former, but IMHO it makes more sense for Rails to
do this on its own.&lt;/p&gt;
&lt;p&gt;I'm familiar with XML, JSON, etc., but I'm not so familiar with
the use cases under which these would reference other URLs. So, if
this suggestion makes no sense, just say so. :) But from my own
point of view, it would have been far more intuitive if Rails had
picked up on my format automatically. As I see it (again, I may be
naive in this respect), an .html file is more likely to reference
another .html file, and an .xml file is more likely to reference
another .xml file.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm using Rails 2.3.3.

I'm working with some custom formats (*.rtml.erb) which behave very similarly to HTML. I understand that my use case is, at best, a niche and that the standard way to use non-HTML formats is for XML, JSON, etc.

This may come down to semantics, but I expected Rails to &quot;remember&quot; my params[:format] value when I called url_for(:action =&gt; &quot;some_other_action&quot;). However, instead of ending up with /controller/action/id.rtml, I got the standard /controller/action/id.

For my own project, I've simply extended ActionController::Base#url_for to call super(options.reverse_merge(:format =&gt; params[:format])), which affected ActionView::Helpers::UrlHelpers#url_for due to its reliance on the former, but IMHO it makes more sense for Rails to do this on its own.

I'm familiar with XML, JSON, etc., but I'm not so familiar with the use cases under which these would reference other URLs. So, if this suggestion makes no sense, just say so. :) But from my own point of view, it would have been far more intuitive if Rails had picked up on my format automatically. As I see it (again, I may be naive in this respect), an .html file is more likely to reference another .html file, and an .xml file is more likely to reference another .xml file.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using Rails 2.3.3.&lt;/p&gt;
&lt;p&gt;I'm working with some custom formats (*.rtml.erb) which behave
very similarly to HTML. I understand that my use case is, at best,
a niche and that the standard way to use non-HTML formats is for
XML, JSON, etc.&lt;/p&gt;
&lt;p&gt;This may come down to semantics, but I expected Rails to
&quot;remember&quot; my params[:format] value when I called url_for(:action
=&amp;gt; &quot;some_other_action&quot;). However, instead of ending up with
/controller/action/id.rtml, I got the standard
/controller/action/id.&lt;/p&gt;
&lt;p&gt;For my own project, I've simply extended
ActionController::Base#url_for to call
super(options.reverse_merge(:format =&amp;gt; params[:format])), which
affected ActionView::Helpers::UrlHelpers#url_for due to its
reliance on the former, but IMHO it makes more sense for Rails to
do this on its own.&lt;/p&gt;
&lt;p&gt;I'm familiar with XML, JSON, etc., but I'm not so familiar with
the use cases under which these would reference other URLs. So, if
this suggestion makes no sense, just say so. :) But from my own
point of view, it would have been far more intuitive if Rails had
picked up on my format automatically. As I see it (again, I may be
naive in this respect), an .html file is more likely to reference
another .html file, and an .xml file is more likely to reference
another .xml file.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-04T03:50:23+01:00</created-at>
      <creator-id type="integer">56431</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3143</number>
      <permalink>url_for-should-remember-paramsformat</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>format url_for</tag>
      <title>url_for should remember params[:format]</title>
      <updated-at type="datetime">2009-09-04T03:50:27+01:00</updated-at>
      <user-id type="integer">56431</user-id>
      <version type="integer">1</version>
      <user-name>Colin MacKenzie IV</user-name>
      <creator-name>Colin MacKenzie IV</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3143</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>-1 Honestly, to me it makes more sense NOT to make the behaviour of url_for specific to the context in which it's executed. But, YMMV.</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 Honestly, to me it makes more sense NOT to make the behaviour
of url_for specific to the context in which it's executed. But,
YMMV.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-08T13:37:47+01:00</created-at>
      <creator-id type="integer">56431</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3143</number>
      <permalink>url_for-should-remember-paramsformat</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>format url_for</tag>
      <title>url_for should remember params[:format]</title>
      <updated-at type="datetime">2010-05-08T13:37:49+01:00</updated-at>
      <user-id type="integer">50736</user-id>
      <version type="integer">2</version>
      <user-name>Jason Gignac</user-name>
      <creator-name>Colin MacKenzie IV</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3143</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This sees like a very narrow use-case, and I'd recommend that those who want this feature do it on their own project.

-1.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This sees like a very narrow use-case, and I'd recommend that
those who want this feature do it on their own project.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-25T11:44:11+01:00</created-at>
      <creator-id type="integer">56431</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3143</number>
      <permalink>url_for-should-remember-paramsformat</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>format url_for</tag>
      <title>url_for should remember params[:format]</title>
      <updated-at type="datetime">2010-05-25T11:44:18+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Colin MacKenzie IV</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3143</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a feature request that'd be used in a limited number of cases. Sorry.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a feature request that'd be used in a limited number of
cases. Sorry.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-25T11:47:57+01:00</created-at>
      <creator-id type="integer">56431</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3143</number>
      <permalink>url_for-should-remember-paramsformat</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>format url_for</tag>
      <title>url_for should remember params[:format]</title>
      <updated-at type="datetime">2010-05-25T11:48:03+01:00</updated-at>
      <user-id type="integer">36817</user-id>
      <version type="integer">4</version>
      <user-name>Andrew Grimm</user-name>
      <creator-name>Colin MacKenzie IV</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3143</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-25T12:07:29+01:00</created-at>
      <creator-id type="integer">56431</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3143</number>
      <permalink>url_for-should-remember-paramsformat</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>format url_for</tag>
      <title>url_for should remember params[:format]</title>
      <updated-at type="datetime">2010-05-25T12:07:34+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Colin MacKenzie IV</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3143</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
