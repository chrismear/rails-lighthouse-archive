<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-20T12:43:19+00:00</created-at>
  <creator-id type="integer">22589</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1123</number>
  <permalink>gemsunpackdependencies-attempting-to-unpack-rails-gems</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bug dependencies railties</tag>
  <title>gems:unpack:dependencies attempting to unpack Rails gems</title>
  <updated-at type="datetime">2010-12-20T12:43:19+00:00</updated-at>
  <user-id type="integer">83</user-id>
  <version type="integer">3</version>
  <user-name>DHH</user-name>
  <creator-name>Matt Jones</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1123</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Running rake gems:unpack:dependencies in an application that sets RAILS_GEM_VERSION to a less-recent version than installed (eg 2.1.0 when 2.1.1 is installed) gives an error when a gem with a dependency on rails is present.

Longer example:

Hobo 0.8.2 gem depends on Rails, &gt;=2.1

Add config.gem 'hobo' to environment.rb

Run rake gems:unpack:dependencies --trace, and get this:

@@@ ruby
** Invoke gems:unpack:dependencies (first_time)
** Invoke gems:unpack (first_time)
** Invoke gems:base (first_time)
** Execute gems:base
** Invoke environment (first_time)
** Execute environment
** Execute gems:unpack
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobo-0.8.2'
** Execute gems:unpack:dependencies
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobosupport-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobofields-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/mislav-will_paginate-2.3.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rake-0.8.1'
rake aborted!
can't activate activesupport (= 2.1.1, runtime), already activated activesupport-2.1.0
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:142:in `activate'
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:49:in `gem'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/rails/gem_dependency.rb:32:in `add_load_paths'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:57
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54
...
@@@


Several issues:

* some gems are getting unpacked more than once. This is a tricky bit involving Array, eql? and friends. I have a patch, will post shortly.

* unpacking rake will not work (at least not without major environment tweaking). Should this be a special case?

* and last but not least, the command grabs rails-2.1.1 from the gems, not the currently active version. Line 106 of gem_dependency.rb (2-1-stable) appears to be the culprit; it assumes that the most recent gem matching the spec is intended, ignoring versions that may already be loaded.


Finally, should gem:unpack *ever* be unpacking Rails? That would seem to be a duplication of the freezing functionality.</original-body>
  <latest-body>Running rake gems:unpack:dependencies in an application that sets RAILS_GEM_VERSION to a less-recent version than installed (eg 2.1.0 when 2.1.1 is installed) gives an error when a gem with a dependency on rails is present.

Longer example:

Hobo 0.8.2 gem depends on Rails, &gt;=2.1

Add config.gem 'hobo' to environment.rb

Run rake gems:unpack:dependencies --trace, and get this:

@@@ ruby
** Invoke gems:unpack:dependencies (first_time)
** Invoke gems:unpack (first_time)
** Invoke gems:base (first_time)
** Execute gems:base
** Invoke environment (first_time)
** Execute environment
** Execute gems:unpack
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobo-0.8.2'
** Execute gems:unpack:dependencies
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobosupport-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobofields-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/mislav-will_paginate-2.3.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rake-0.8.1'
rake aborted!
can't activate activesupport (= 2.1.1, runtime), already activated activesupport-2.1.0
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:142:in `activate'
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:49:in `gem'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/rails/gem_dependency.rb:32:in `add_load_paths'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:57
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54
...
@@@


Several issues:

* some gems are getting unpacked more than once. This is a tricky bit involving Array, eql? and friends. I have a patch, will post shortly.

* unpacking rake will not work (at least not without major environment tweaking). Should this be a special case?

* and last but not least, the command grabs rails-2.1.1 from the gems, not the currently active version. Line 106 of gem_dependency.rb (2-1-stable) appears to be the culprit; it assumes that the most recent gem matching the spec is intended, ignoring versions that may already be loaded.


Finally, should gem:unpack *ever* be unpacking Rails? That would seem to be a duplication of the freezing functionality.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Running rake gems:unpack:dependencies in an application that
sets RAILS_GEM_VERSION to a less-recent version than installed (eg
2.1.0 when 2.1.1 is installed) gives an error when a gem with a
dependency on rails is present.&lt;/p&gt;
&lt;p&gt;Longer example:&lt;/p&gt;
&lt;p&gt;Hobo 0.8.2 gem depends on Rails, &amp;gt;=2.1&lt;/p&gt;
&lt;p&gt;Add config.gem 'hobo' to environment.rb&lt;/p&gt;
&lt;p&gt;Run rake gems:unpack:dependencies --trace, and get this:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
** Invoke gems:unpack:dependencies (first_time)
** Invoke gems:unpack (first_time)
** Invoke gems:base (first_time)
** Execute gems:base
** Invoke environment (first_time)
** Execute environment
** Execute gems:unpack
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobo-0.8.2'
** Execute gems:unpack:dependencies
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobosupport-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobofields-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/mislav-will_paginate-2.3.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rake-0.8.1'
rake aborted!
can't activate activesupport (= 2.1.1, runtime), already activated activesupport-2.1.0
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:142:in `activate'
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:49:in `gem'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/rails/gem_dependency.rb:32:in `add_load_paths'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:57
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Several issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;some gems are getting unpacked more than once. This is a tricky
bit involving Array, eql? and friends. I have a patch, will post
shortly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;unpacking rake will not work (at least not without major
environment tweaking). Should this be a special case?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and last but not least, the command grabs rails-2.1.1 from the
gems, not the currently active version. Line 106 of
gem_dependency.rb (2-1-stable) appears to be the culprit; it
assumes that the most recent gem matching the spec is intended,
ignoring versions that may already be loaded.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, should gem:unpack &lt;em&gt;ever&lt;/em&gt; be unpacking Rails?
That would seem to be a duplication of the freezing
functionality.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Running rake gems:unpack:dependencies in an application that sets RAILS_GEM_VERSION to a less-recent version than installed (eg 2.1.0 when 2.1.1 is installed) gives an error when a gem with a dependency on rails is present.

Longer example:

Hobo 0.8.2 gem depends on Rails, &gt;=2.1

Add config.gem 'hobo' to environment.rb

Run rake gems:unpack:dependencies --trace, and get this:

@@@ ruby
** Invoke gems:unpack:dependencies (first_time)
** Invoke gems:unpack (first_time)
** Invoke gems:base (first_time)
** Execute gems:base
** Invoke environment (first_time)
** Execute environment
** Execute gems:unpack
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobo-0.8.2'
** Execute gems:unpack:dependencies
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobosupport-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobofields-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/mislav-will_paginate-2.3.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rake-0.8.1'
rake aborted!
can't activate activesupport (= 2.1.1, runtime), already activated activesupport-2.1.0
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:142:in `activate'
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:49:in `gem'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/rails/gem_dependency.rb:32:in `add_load_paths'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:57
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54
...
@@@


Several issues:

* some gems are getting unpacked more than once. This is a tricky bit involving Array, eql? and friends. I have a patch, will post shortly.

* unpacking rake will not work (at least not without major environment tweaking). Should this be a special case?

* and last but not least, the command grabs rails-2.1.1 from the gems, not the currently active version. Line 106 of gem_dependency.rb (2-1-stable) appears to be the culprit; it assumes that the most recent gem matching the spec is intended, ignoring versions that may already be loaded.


Finally, should gem:unpack *ever* be unpacking Rails? That would seem to be a duplication of the freezing functionality.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Running rake gems:unpack:dependencies in an application that
sets RAILS_GEM_VERSION to a less-recent version than installed (eg
2.1.0 when 2.1.1 is installed) gives an error when a gem with a
dependency on rails is present.&lt;/p&gt;
&lt;p&gt;Longer example:&lt;/p&gt;
&lt;p&gt;Hobo 0.8.2 gem depends on Rails, &amp;gt;=2.1&lt;/p&gt;
&lt;p&gt;Add config.gem 'hobo' to environment.rb&lt;/p&gt;
&lt;p&gt;Run rake gems:unpack:dependencies --trace, and get this:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
** Invoke gems:unpack:dependencies (first_time)
** Invoke gems:unpack (first_time)
** Invoke gems:base (first_time)
** Execute gems:base
** Invoke environment (first_time)
** Execute environment
** Execute gems:unpack
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobo-0.8.2'
** Execute gems:unpack:dependencies
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobosupport-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/hobofields-0.8.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/mislav-will_paginate-2.3.2'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rails-2.1.1'
Unpacked gem: '/Users/mattjones/hobo/apps/agility0.8/vendor/gems/rake-0.8.1'
rake aborted!
can't activate activesupport (= 2.1.1, runtime), already activated activesupport-2.1.0
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:142:in `activate'
/usr/local/lib/ruby/site_ruby/1.8/rubygems.rb:49:in `gem'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/rails/gem_dependency.rb:32:in `add_load_paths'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:57
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:56
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/tasks/gems.rake:54
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Several issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;some gems are getting unpacked more than once. This is a tricky
bit involving Array, eql? and friends. I have a patch, will post
shortly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;unpacking rake will not work (at least not without major
environment tweaking). Should this be a special case?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and last but not least, the command grabs rails-2.1.1 from the
gems, not the currently active version. Line 106 of
gem_dependency.rb (2-1-stable) appears to be the culprit; it
assumes that the most recent gem matching the spec is intended,
ignoring versions that may already be loaded.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, should gem:unpack &lt;em&gt;ever&lt;/em&gt; be unpacking Rails?
That would seem to be a duplication of the freezing
functionality.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-27T08:53:02+01:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1123</number>
      <permalink>gemsunpackdependencies-attempting-to-unpack-rails-gems</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug dependencies railties</tag>
      <title>gems:unpack:dependencies attempting to unpack Rails gems</title>
      <updated-at type="datetime">2008-09-27T08:53:05+01:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">1</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Matt Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1123</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is completely fixed by the changes in #1128 - this ticket can be closed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is completely fixed by the changes in &lt;a href=&quot;/projects/8994/tickets/1128&quot; title=&quot;Ticket #1128&quot;&gt;#1128&lt;/a&gt; - this
ticket can be closed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-15T07:07:30+00:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1123</number>
      <permalink>gemsunpackdependencies-attempting-to-unpack-rails-gems</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug dependencies railties</tag>
      <title>gems:unpack:dependencies attempting to unpack Rails gems</title>
      <updated-at type="datetime">2008-11-15T07:07:30+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">2</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Matt Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1123</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-15T15:34:06+00:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1123</number>
      <permalink>gemsunpackdependencies-attempting-to-unpack-rails-gems</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug dependencies railties</tag>
      <title>gems:unpack:dependencies attempting to unpack Rails gems</title>
      <updated-at type="datetime">2008-11-15T15:34:09+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">3</version>
      <user-name>DHH</user-name>
      <creator-name>Matt Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1123</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
