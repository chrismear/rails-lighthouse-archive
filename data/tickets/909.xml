<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-26T23:01:34+01:00</created-at>
  <creator-id type="integer">30105</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">909</number>
  <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
  <priority type="integer">361</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>bug builder</tag>
  <title>XML Builder redefines some methods that breaks things </title>
  <updated-at type="datetime">2008-08-27T20:48:23+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">8</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>mt</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have been doing some stuff with the XML Builder, and running into problems whenever I try to debug it with an IDE (trying both Eclipse and Netbeans).  I believe the problem is that the Builder classes remove all the default instance methods from their objects, including such basics as .class and .inspect, which breaks the debugger.  It does this by means of the BlankSlate class, which is also used elsewhere in Rails.

I patched Builder to not inherit from BlankSlate, which fixes my problems but means I can't generate XML tags with common method names.  That's OK, but not a great fix. I wondered if anybody else has encountered this problem and has a better solution. I've heard that 1.9 changes this in some way.

Oh, and the equality checking methods are also gone!  So if you have an xml builder object, you can't do equality checks on it because that will insert &lt;==&gt; tags into your generated XML. Not good.

This bug does not just break IDEs, but it was affecting my code in ways that I can't explain.  Weird stuff was happening and stopped when I took BlankSlate out of the picture.

To explain what I mean:

$ script/console
Loading development environment (Rails 2.1.0)
&gt;&gt; xml = Builder::XmlMarkup.new(:indent =&gt; 1)
=&gt; &lt;inspect/&gt;
&gt;&gt; xml == nil

=&gt; &quot;&lt;inspect/&gt;\n&lt;==&gt;&lt;/==&gt;\n&quot;

Yech.</original-body>
  <latest-body>I have been doing some stuff with the XML Builder, and running into problems whenever I try to debug it with an IDE (trying both Eclipse and Netbeans).  I believe the problem is that the Builder classes remove all the default instance methods from their objects, including such basics as .class and .inspect, which breaks the debugger.  It does this by means of the BlankSlate class, which is also used elsewhere in Rails.

I patched Builder to not inherit from BlankSlate, which fixes my problems but means I can't generate XML tags with common method names.  That's OK, but not a great fix. I wondered if anybody else has encountered this problem and has a better solution. I've heard that 1.9 changes this in some way.

Oh, and the equality checking methods are also gone!  So if you have an xml builder object, you can't do equality checks on it because that will insert &lt;==&gt; tags into your generated XML. Not good.

This bug does not just break IDEs, but it was affecting my code in ways that I can't explain.  Weird stuff was happening and stopped when I took BlankSlate out of the picture.

To explain what I mean:

$ script/console
Loading development environment (Rails 2.1.0)
&gt;&gt; xml = Builder::XmlMarkup.new(:indent =&gt; 1)
=&gt; &lt;inspect/&gt;
&gt;&gt; xml == nil

=&gt; &quot;&lt;inspect/&gt;\n&lt;==&gt;&lt;/==&gt;\n&quot;

Yech.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have been doing some stuff with the XML Builder, and running into problems whenever I try to debug it with an IDE (trying both Eclipse and Netbeans).  I believe the problem is that the Builder classes remove all the default instance methods from their objects, including such basics as .class and .inspect, which breaks the debugger.  It does this by means of the BlankSlate class, which is also used elsewhere in Rails.&lt;/p&gt;

&lt;p&gt;I patched Builder to not inherit from BlankSlate, which fixes my problems but means I can't generate XML tags with common method names.  That's OK, but not a great fix. I wondered if anybody else has encountered this problem and has a better solution. I've heard that 1.9 changes this in some way.&lt;/p&gt;

&lt;p&gt;Oh, and the equality checking methods are also gone!  So if you have an xml builder object, you can't do equality checks on it because that will insert &amp;lt;==&gt; tags into your generated XML. Not good.&lt;/p&gt;

&lt;p&gt;This bug does not just break IDEs, but it was affecting my code in ways that I can't explain.  Weird stuff was happening and stopped when I took BlankSlate out of the picture.&lt;/p&gt;

&lt;p&gt;To explain what I mean:&lt;/p&gt;

&lt;p&gt;$ script/console
Loading development environment (Rails 2.1.0)&lt;/p&gt;

&lt;blockquote&gt;&lt;blockquote&gt;&lt;p&gt;xml = Builder::XmlMarkup.new(:indent =&gt; 1)
=&gt;
xml == nil&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;=&gt; &quot;\n&amp;lt;==&gt;&amp;lt;/==&gt;\n&quot;&lt;/p&gt;

&lt;p&gt;Yech.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have been doing some stuff with the XML Builder, and running into problems whenever I try to debug it with an IDE (trying both Eclipse and Netbeans).  I believe the problem is that the Builder classes remove all the default instance methods from their objects, including such basics as .class and .inspect, which breaks the debugger.  It does this by means of the BlankSlate class, which is also used elsewhere in Rails.

I patched Builder to not inherit from BlankSlate, which fixes my problems but means I can't generate XML tags with common method names.  That's OK, but not a great fix. I wondered if anybody else has encountered this problem and has a better solution. I've heard that 1.9 changes this in some way.

Oh, and the equality checking methods are also gone!  So if you have an xml builder object, you can't do equality checks on it because that will insert &lt;==&gt; tags into your generated XML. Not good.

This bug does not just break IDEs, but it was affecting my code in ways that I can't explain.  Weird stuff was happening and stopped when I took BlankSlate out of the picture.

To explain what I mean:

$ script/console
Loading development environment (Rails 2.1.0)
&gt;&gt; xml = Builder::XmlMarkup.new(:indent =&gt; 1)
=&gt; &lt;inspect/&gt;
&gt;&gt; xml == nil

=&gt; &quot;&lt;inspect/&gt;\n&lt;==&gt;&lt;/==&gt;\n&quot;

Yech.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have been doing some stuff with the XML Builder, and running into problems whenever I try to debug it with an IDE (trying both Eclipse and Netbeans).  I believe the problem is that the Builder classes remove all the default instance methods from their objects, including such basics as .class and .inspect, which breaks the debugger.  It does this by means of the BlankSlate class, which is also used elsewhere in Rails.&lt;/p&gt;

&lt;p&gt;I patched Builder to not inherit from BlankSlate, which fixes my problems but means I can't generate XML tags with common method names.  That's OK, but not a great fix. I wondered if anybody else has encountered this problem and has a better solution. I've heard that 1.9 changes this in some way.&lt;/p&gt;

&lt;p&gt;Oh, and the equality checking methods are also gone!  So if you have an xml builder object, you can't do equality checks on it because that will insert &amp;lt;==&gt; tags into your generated XML. Not good.&lt;/p&gt;

&lt;p&gt;This bug does not just break IDEs, but it was affecting my code in ways that I can't explain.  Weird stuff was happening and stopped when I took BlankSlate out of the picture.&lt;/p&gt;

&lt;p&gt;To explain what I mean:&lt;/p&gt;

&lt;p&gt;$ script/console
Loading development environment (Rails 2.1.0)&lt;/p&gt;

&lt;blockquote&gt;&lt;blockquote&gt;&lt;p&gt;xml = Builder::XmlMarkup.new(:indent =&gt; 1)
=&gt; 
xml == nil&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;=&gt; &quot;\n&amp;lt;==&gt;&amp;lt;/==&gt;\n&quot;&lt;/p&gt;

&lt;p&gt;Yech.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-26T23:01:35+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-26T23:01:35+01:00</updated-at>
      <user-id type="integer">30105</user-id>
      <version type="integer">1</version>
      <user-name>mt</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This feels strange, but it's expected behavior. Contact your IDE vendor with a bug report if its inspector or debugger can't handle these objects.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This feels strange, but it's expected behavior. Contact your IDE vendor with a bug report if its inspector or debugger can't handle these objects.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T00:50:45+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-27T00:50:45+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It can't possibly be valid behavior for an equality operator to cause side effects.

Note that this did not just break the IDE, it broke the application itself.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It can't possibly be valid behavior for an equality operator to cause side effects.&lt;/p&gt;

&lt;p&gt;Note that this did not just break the IDE, it broke the application itself.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T05:49:22+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-27T05:49:22+01:00</updated-at>
      <user-id type="integer">30105</user-id>
      <version type="integer">3</version>
      <user-name>mt</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It can, however, be valid behavior for the absence of an equality operator to confuse and frustrate you ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;It can, however, be valid behavior for the absence of an equality operator to confuse and frustrate you ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T05:54:46+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-27T05:54:46+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>How much sense does it make to sacrifice very basic semantics of objects for the ability to generate a &lt;==&gt; tag, something which nobody will ever want to do?

Oh well, I already patched this so our application can run, so I don't care to debate it further, but this bug wasted a good deal of time of me and my coworkers, and I thought I would try to spare others.</body>
      <body-html>&lt;div&gt;&lt;p&gt;How much sense does it make to sacrifice very basic semantics of objects for the ability to generate a &amp;lt;==&gt; tag, something which nobody will ever want to do?&lt;/p&gt;

&lt;p&gt;Oh well, I already patched this so our application can run, so I don't care to debate it further, but this bug wasted a good deal of time of me and my coworkers, and I thought I would try to spare others.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T06:08:48+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-27T06:08:48+01:00</updated-at>
      <user-id type="integer">30105</user-id>
      <version type="integer">5</version>
      <user-name>mt</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree it's a strange thing to run into. But it's reasonable and, once you consider the design constraints at play, even desirable.

If you think BlankSlate has minimal semantics, wait until you see BasicObject in Ruby 1.9! Both are intended to remove most of the conveniences of Object, but BasicObject goes even further than BlankSlate. Even things like constant resolution fail.

These 'minimal' objects play an interesting role in Ruby. You'll see the pattern elsewhere with objects whose method calls act as proxies in some way. Looking at this pattern as sacrificing something just to generate some crazy (and invalid) xml tag is missing the larger picture of their design and role in Ruby.

I suggest you continue the discussion on the ruby-talk mailing list :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree it's a strange thing to run into. But it's reasonable and, once you consider the design constraints at play, even desirable.&lt;/p&gt;

&lt;p&gt;If you think BlankSlate has minimal semantics, wait until you see BasicObject in Ruby 1.9! Both are intended to remove most of the conveniences of Object, but BasicObject goes even further than BlankSlate. Even things like constant resolution fail.&lt;/p&gt;

&lt;p&gt;These 'minimal' objects play an interesting role in Ruby. You'll see the pattern elsewhere with objects whose method calls act as proxies in some way. Looking at this pattern as sacrificing something just to generate some crazy (and invalid) xml tag is missing the larger picture of their design and role in Ruby.&lt;/p&gt;

&lt;p&gt;I suggest you continue the discussion on the ruby-talk mailing list :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T06:40:02+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-27T06:40:02+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>FWIW, I notice that BasicObject in Ruby 1.9 DOES define == properly.  Nyah.</body>
      <body-html>&lt;div&gt;&lt;p&gt;FWIW, I notice that BasicObject in Ruby 1.9 DOES define == properly.  Nyah.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T19:01:19+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-27T19:01:19+01:00</updated-at>
      <user-id type="integer">30105</user-id>
      <version type="integer">7</version>
      <user-name>mt</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>:)</body>
      <body-html>&lt;div&gt;&lt;p&gt;:)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T20:48:23+01:00</created-at>
      <creator-id type="integer">30105</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">909</number>
      <permalink>xml-builder-redefines-some-methods-that-breaks-things</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug builder</tag>
      <title>XML Builder redefines some methods that breaks things </title>
      <updated-at type="datetime">2008-08-27T20:48:23+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>mt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/909</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
