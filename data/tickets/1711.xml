<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-07T22:36:49+00:00</created-at>
  <creator-id type="integer">42888</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1711</number>
  <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
  <priority type="integer">1024</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
  <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
  <updated-at type="datetime">2010-12-15T19:25:31+00:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">10</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Winky</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>A has_many :through association with an :order option generates SQL which causes PostgreSQL (and possibly others) to report the error:

PGError: ERROR: for SELECT DISTINCT, ORDER BY expressions must appear in select list

Take the following example model:

class Group &lt; ActiveRecord::Base
  has_many :memberships
  has_many :people,
      :through =&gt; :memberships,
      :order =&gt; &quot;memberships.renewal_date&quot;,
      :uniq =&gt; true
end

This causes rails to generate the following SQL which results in the error:

SELECT DISTINCT &quot;people&quot;.* FROM &quot;people&quot; INNER JOIN memberships ON people.id = memberships.person_id WHERE ((&quot;memberships&quot;.group_id = 1)) ORDER BY memberships.renewal_date

The &quot;memberships.renewal_date&quot; column does not appear in the SELECT field list and thus causes the error.

The following diff appears to fix the issue.

--- has_many_through_association.rb.orig	2009-01-07 17:32:59.000000000 -0500
+++ has_many_through_association.rb	2009-01-07 17:32:40.000000000 -0500
@@ -135,5 +135,7 @@
         def construct_select(custom_select = nil)
           distinct = &quot;DISTINCT &quot; if @reflection.options[:uniq]
-          selected = custom_select || @reflection.options[:select] ||  #{distinct}#{@reflection.quoted_table_name}.*&quot;
+          selected = [custom_select || @reflection.options[:select] || &quot;#{distinct}#{@reflection.quoted_table_name}.*&quot;]
+          selected += (@reflection.options[:order] || &quot;&quot;).scan(/([\.a-zA-Z_]+)/).flatten.reject {|e| e.match(/asc|desc/i)}
+          selected.join(&quot;, &quot;)
         end</original-body>
  <latest-body>A has_many :through association with an :order option generates SQL which causes PostgreSQL (and possibly others) to report the error:

PGError: ERROR: for SELECT DISTINCT, ORDER BY expressions must appear in select list

Take the following example model:

class Group &lt; ActiveRecord::Base
  has_many :memberships
  has_many :people,
      :through =&gt; :memberships,
      :order =&gt; &quot;memberships.renewal_date&quot;,
      :uniq =&gt; true
end

This causes rails to generate the following SQL which results in the error:

SELECT DISTINCT &quot;people&quot;.* FROM &quot;people&quot; INNER JOIN memberships ON people.id = memberships.person_id WHERE ((&quot;memberships&quot;.group_id = 1)) ORDER BY memberships.renewal_date

The &quot;memberships.renewal_date&quot; column does not appear in the SELECT field list and thus causes the error.

The following diff appears to fix the issue.

--- has_many_through_association.rb.orig	2009-01-07 17:32:59.000000000 -0500
+++ has_many_through_association.rb	2009-01-07 17:32:40.000000000 -0500
@@ -135,5 +135,7 @@
         def construct_select(custom_select = nil)
           distinct = &quot;DISTINCT &quot; if @reflection.options[:uniq]
-          selected = custom_select || @reflection.options[:select] ||  #{distinct}#{@reflection.quoted_table_name}.*&quot;
+          selected = [custom_select || @reflection.options[:select] || &quot;#{distinct}#{@reflection.quoted_table_name}.*&quot;]
+          selected += (@reflection.options[:order] || &quot;&quot;).scan(/([\.a-zA-Z_]+)/).flatten.reject {|e| e.match(/asc|desc/i)}
+          selected.join(&quot;, &quot;)
         end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;A has_many :through association with an :order option generates
SQL which causes PostgreSQL (and possibly others) to report the
error:&lt;/p&gt;
&lt;p&gt;PGError: ERROR: for SELECT DISTINCT, ORDER BY expressions must
appear in select list&lt;/p&gt;
&lt;p&gt;Take the following example model:&lt;/p&gt;
&lt;p&gt;class Group &amp;lt; ActiveRecord::Base has_many :memberships
has_many :people,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  :through =&amp;gt; :memberships,
  :order =&amp;gt; &quot;memberships.renewal_date&quot;,
  :uniq =&amp;gt; true
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;This causes rails to generate the following SQL which results in
the error:&lt;/p&gt;
&lt;p&gt;SELECT DISTINCT &quot;people&quot;.* FROM &quot;people&quot; INNER JOIN memberships
ON people.id = memberships.person_id WHERE ((&quot;memberships&quot;.group_id
= 1)) ORDER BY memberships.renewal_date&lt;/p&gt;
&lt;p&gt;The &quot;memberships.renewal_date&quot; column does not appear in the
SELECT field list and thus causes the error.&lt;/p&gt;
&lt;p&gt;The following diff appears to fix the issue.&lt;/p&gt;
&lt;p&gt;--- has_many_through_association.rb.orig 2009-01-07
17:32:59.000000000 -0500 +++ has_many_through_association.rb
2009-01-07 17:32:40.000000000 -0500 @@ -135,5 +135,7 @@&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     def construct_select(custom_select = nil)
       distinct = &quot;DISTINCT &quot; if @reflection.options[:uniq]
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;   selected = custom_select || @reflection.options[:select] ||  #{distinct}#{@reflection.quoted_table_name}.*&quot;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;   selected = [custom_select || @reflection.options[:select] || &quot;#{distinct}#{@reflection.quoted_table_name}.*&quot;]
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;   selected += (@reflection.options[:order] || &quot;&quot;).scan(/([\.a-zA-Z_]+)/).flatten.reject {|e| e.match(/asc|desc/i)}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;   selected.join(&quot;, &quot;)
 end
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A has_many :through association with an :order option generates SQL which causes PostgreSQL (and possibly others) to report the error:

PGError: ERROR: for SELECT DISTINCT, ORDER BY expressions must appear in select list

Take the following example model:

@@@ ruby
class Group &lt; ActiveRecord::Base
  has_many :memberships
  has_many :people, :through =&gt; :memberships, :order =&gt; &quot;memberships.renewal_date&quot;, :uniq =&gt; true
end
@@@

I then load a fixture for some People and the Group with id=1.  Using the console, I can run:

@@@ ruby
Group.find(1).people
@@@

Which results in the following SQL being generated:

@@@ sql
SELECT DISTINCT &quot;people&quot;.* FROM &quot;people&quot; INNER JOIN memberships ON people.id = memberships.person_id WHERE ((&quot;memberships&quot;.group_id = 1)) ORDER BY memberships.renewal_date
@@@

The &quot;memberships.renewal_date&quot; column does not appear in the SELECT field list and thus causes the error.

The attached diff appears to fix the issue.  Whether or not it does so correctly, I leave to the experts.</body>
      <body-html>&lt;div&gt;&lt;p&gt;A has_many :through association with an :order option generates
SQL which causes PostgreSQL (and possibly others) to report the
error:&lt;/p&gt;
&lt;p&gt;PGError: ERROR: for SELECT DISTINCT, ORDER BY expressions must
appear in select list&lt;/p&gt;
&lt;p&gt;Take the following example model:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Group &amp;lt; ActiveRecord::Base
  has_many :memberships
  has_many :people, :through =&amp;gt; :memberships, :order =&amp;gt; &amp;quot;memberships.renewal_date&amp;quot;, :uniq =&amp;gt; true
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then load a fixture for some People and the Group with id=1.
Using the console, I can run:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Group.find(1).people
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which results in the following SQL being generated:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
SELECT DISTINCT &amp;quot;people&amp;quot;.* FROM &amp;quot;people&amp;quot; INNER JOIN memberships ON people.id = memberships.person_id WHERE ((&amp;quot;memberships&amp;quot;.group_id = 1)) ORDER BY memberships.renewal_date
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &quot;memberships.renewal_date&quot; column does not appear in the
SELECT field list and thus causes the error.&lt;/p&gt;
&lt;p&gt;The attached diff appears to fix the issue. Whether or not it
does so correctly, I leave to the experts.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-07T22:36:50+00:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2009-01-07T22:40:57+00:00</updated-at>
      <user-id type="integer">42888</user-id>
      <version type="integer">1</version>
      <user-name>Winky</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Won't this cause the column use for ordering to appear (piggy backed) in the person objects thus loaded ? Probably relatively harmless usually but could cause grief if it ends up shadowing a column (at least for users of other databases).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Won't this cause the column use for ordering to appear (piggy
backed) in the person objects thus loaded ? Probably relatively
harmless usually but could cause grief if it ends up shadowing a
column (at least for users of other databases).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-08T14:28:56+00:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2009-01-08T14:28:59+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm not familiar with rails internals and attribute processing, but definitely a risk.  Might consider skipping attribute processing for fields not from the primary table in this case, but then the SQL building will have to be altered to ensure that all ORDER BY fields on the association table are fully qualified with the table name.

I also found that removing the :order option to the association fixes the problem, but I'm not sure that solution is any better if you're dealing with an order-sensitive association.

I defer to you guys to determine the best and most elegant solution.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not familiar with rails internals and attribute processing,
but definitely a risk. Might consider skipping attribute processing
for fields not from the primary table in this case, but then the
SQL building will have to be altered to ensure that all ORDER BY
fields on the association table are fully qualified with the table
name.&lt;/p&gt;
&lt;p&gt;I also found that removing the :order option to the association
fixes the problem, but I'm not sure that solution is any better if
you're dealing with an order-sensitive association.&lt;/p&gt;
&lt;p&gt;I defer to you guys to determine the best and most elegant
solution.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-08T16:15:17+00:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2009-01-08T16:15:22+00:00</updated-at>
      <user-id type="integer">42888</user-id>
      <version type="integer">3</version>
      <user-name>Winky</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Patch needs tests.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch needs tests.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-08T16:45:13+00:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2009-03-08T16:45:17+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Is anyone working on this patch? The error is very annoying as it also occurs if the associated model defines a default_scope with ordering.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is anyone working on this patch? The error is very annoying as
it also occurs if the associated model defines a default_scope with
ordering.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T16:49:40+01:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2009-07-02T16:49:45+01:00</updated-at>
      <user-id type="integer">7654</user-id>
      <version type="integer">5</version>
      <user-name>Bj&#248;rn Arild M&#230;land</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 
I fell into this problem today.
I'm using a :select =&gt; &quot;DISTINCT column_thing&quot; and the generated SQL is failing because of the default order by not part of the selected rows (which I don't want of course).

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 I fell into this problem today.&lt;br&gt;
I'm using a :select =&amp;gt; &quot;DISTINCT column_thing&quot; and the generated
SQL is failing because of the default order by not part of the
selected rows (which I don't want of course).&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-17T14:51:26+01:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2009-10-17T14:51:32+01:00</updated-at>
      <user-id type="integer">19160</user-id>
      <version type="integer">6</version>
      <user-name>Gravis</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 experiencing the same problem. In my case, removing DISTINCT from the SQL statement (or :uniq from the AR command) solves the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 experiencing the same problem. In my case, removing DISTINCT
from the SQL statement (or :uniq from the AR command) solves the
problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-11T17:56:35+00:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2009-11-11T17:56:41+00:00</updated-at>
      <user-id type="integer">40656</user-id>
      <version type="integer">7</version>
      <user-name>Sean</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:37+01:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2010-05-04T18:48:37+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It's not clear what the expected result should be, which is why postgres throws an error.

Due to the use of DISINCT, for any given `Person` in the output, there may be many different `renewal_date` values. Which is the correct one to use for the sort? The answer is ambiguous, hence why postgres gives an error.

I'm not in favour of Active Record trying to magically resolve this ambiguity by making an assumption, so I'd say we should close the ticket.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's not clear what the expected result should be, which is why
postgres throws an error.&lt;/p&gt;
&lt;p&gt;Due to the use of DISINCT, for any given &lt;code&gt;Person&lt;/code&gt; in
the output, there may be many different &lt;code&gt;renewal_date&lt;/code&gt;
values. Which is the correct one to use for the sort? The answer is
ambiguous, hence why postgres gives an error.&lt;/p&gt;
&lt;p&gt;I'm not in favour of Active Record trying to magically resolve
this ambiguity by making an assumption, so I'd say we should close
the ticket.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-12T13:29:52+00:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">1024</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2010-12-12T13:30:01+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">9</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I agree with Jon.  Closing this ticket as invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with Jon. Closing this ticket as invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-15T19:25:16+00:00</created-at>
      <creator-id type="integer">42888</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1711</number>
      <permalink>has-many-through-association-with-order-causes-a-sql-error-with-postgresql</permalink>
      <priority type="integer">1024</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.2 2.2.2 :order activerecord associations has_many_through postgres postgresql sql</tag>
      <title>Has many through association with :order causes a SQL error with PostgreSQL</title>
      <updated-at type="datetime">2010-12-15T19:25:31+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">10</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Winky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1711</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>49a413e3e15b921fe77c685be1b0e51cf262bd04</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-07T22:39:09+00:00</created-at>
      <filename>has_many_through_with_order.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">76243</id>
      <size type="integer">692</size>
      <uploader-id type="integer">42888</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/76243/has_many_through_with_order.diff</url>
    </attachment>
  </attachments>
</ticket>
