<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-25T00:45:46+00:00</created-at>
  <creator-id type="integer">114890</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6467</number>
  <permalink>active-model-range-validator</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>activemodel patch validations</tag>
  <title>active model range validator</title>
  <updated-at type="datetime">2011-02-25T00:46:00+00:00</updated-at>
  <user-id type="integer">114890</user-id>
  <version type="integer">1</version>
  <user-name>Chris Baker</user-name>
  <creator-name>Chris Baker</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6467</url>
  <priority-name nil="true"></priority-name>
  <original-body>This patch creates a range validator for active model. In the simplest case, it validates that a field is a range, e.g.

  validates :field, :range =&gt; true

It is also capable of validating that the range does or does not overlap with other ranges in other models, e.g.

  validates :field, :range =&gt; { :not_overlapping =&gt; Proc.new{ |record| record.other_records } }
  validates :field, :range =&gt; { :overlapping =&gt; :other_records }

I provided some more examples of usage on the github page where I maintain this code as a gem: https://github.com/chrisb87/range_validator</original-body>
  <latest-body>This patch creates a range validator for active model. In the simplest case, it validates that a field is a range, e.g.

  validates :field, :range =&gt; true

It is also capable of validating that the range does or does not overlap with other ranges in other models, e.g.

  validates :field, :range =&gt; { :not_overlapping =&gt; Proc.new{ |record| record.other_records } }
  validates :field, :range =&gt; { :overlapping =&gt; :other_records }

I provided some more examples of usage on the github page where I maintain this code as a gem: https://github.com/chrisb87/range_validator</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch creates a range validator for active model. In the
simplest case, it validates that a field is a range, e.g.&lt;/p&gt;
&lt;p&gt;validates :field, :range =&amp;gt; true&lt;/p&gt;
&lt;p&gt;It is also capable of validating that the range does or does not
overlap with other ranges in other models, e.g.&lt;/p&gt;
&lt;p&gt;validates :field, :range =&amp;gt; { :not_overlapping =&amp;gt;
Proc.new{ |record| record.other_records } } validates :field,
:range =&amp;gt; { :overlapping =&amp;gt; :other_records }&lt;/p&gt;
&lt;p&gt;I provided some more examples of usage on the github page where
I maintain this code as a gem: &lt;a href=
&quot;https://github.com/chrisb87/range_validator&quot;&gt;https://github.com/chrisb87/range_validator&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch creates a range validator for active model. In the simplest case, it validates that a field is a range, e.g.

  validates :field, :range =&gt; true

It is also capable of validating that the range does or does not overlap with other ranges in other models, e.g.

  validates :field, :range =&gt; { :not_overlapping =&gt; Proc.new{ |record| record.other_records } }
  validates :field, :range =&gt; { :overlapping =&gt; :other_records }

I provided some more examples of usage on the github page where I maintain this code as a gem: https://github.com/chrisb87/range_validator</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch creates a range validator for active model. In the
simplest case, it validates that a field is a range, e.g.&lt;/p&gt;
&lt;p&gt;validates :field, :range =&amp;gt; true&lt;/p&gt;
&lt;p&gt;It is also capable of validating that the range does or does not
overlap with other ranges in other models, e.g.&lt;/p&gt;
&lt;p&gt;validates :field, :range =&amp;gt; { :not_overlapping =&amp;gt;
Proc.new{ |record| record.other_records } } validates :field,
:range =&amp;gt; { :overlapping =&amp;gt; :other_records }&lt;/p&gt;
&lt;p&gt;I provided some more examples of usage on the github page where
I maintain this code as a gem: &lt;a href=
&quot;https://github.com/chrisb87/range_validator&quot;&gt;https://github.com/chrisb87/range_validator&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-25T00:45:46+00:00</created-at>
      <creator-id type="integer">114890</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6467</number>
      <permalink>active-model-range-validator</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel patch validations</tag>
      <title>active model range validator</title>
      <updated-at type="datetime">2011-02-25T00:46:00+00:00</updated-at>
      <user-id type="integer">114890</user-id>
      <version type="integer">1</version>
      <user-name>Chris Baker</user-name>
      <creator-name>Chris Baker</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6467</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>6c8b3b75c9b1d366554b02fadf94c7d06867eac6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-25T00:45:46+00:00</created-at>
      <filename>range_validator.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">930140</id>
      <size type="integer">6628</size>
      <uploader-id type="integer">114890</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/930140/range_validator.diff</url>
    </attachment>
  </attachments>
</ticket>
