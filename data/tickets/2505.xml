<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-16T01:03:37+01:00</created-at>
  <creator-id type="integer">13680</creator-id>
  <milestone-due-on type="datetime">2009-01-31T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2505</number>
  <permalink>stock-mongrel-or-thin-will-rebuild-dispatcher-every-request</permalink>
  <priority type="integer">7</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.3.2 deployment documentation metal mongrel performance rack thin</tag>
  <title>Stock mongrel or thin will rebuild dispatcher every request</title>
  <updated-at type="datetime">2009-05-17T18:39:56+01:00</updated-at>
  <user-id type="integer">13680</user-id>
  <version type="integer">4</version>
  <user-name>Tim Connor</user-name>
  <creator-name>Tim Connor</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2505</url>
  <priority-name nil="true"></priority-name>
  <original-body>As I noted [this blog post](http://www.timocracy.com/articles/2009/04/15/problems-with-mongrel_cluster-and-rails-2-3-dispatcher-reloading-your-metal-every-request &quot;timocracy.com&quot;) if you are running stock thin or mongrel clusters they will route through the old deprecated dispatch call, which will cause all of your metal (and middleware?) to be re-required every request.

As people with metal are probably those who most need performance, this may be a big hit for them.  Since there are already handlers in the custom vendorized rack that work perfectly fine to avoid this, perhaps there just need to be some docs on this?</original-body>
  <latest-body>As I noted [this blog post](http://www.timocracy.com/articles/2009/04/15/problems-with-mongrel_cluster-and-rails-2-3-dispatcher-reloading-your-metal-every-request &quot;timocracy.com&quot;) if you are running stock thin or mongrel clusters they will route through the old deprecated dispatch call, which will cause all of your metal (and middleware?) to be re-required every request.

As people with metal are probably those who most need performance, this may be a big hit for them.  Since there are already handlers in the custom vendorized rack that work perfectly fine to avoid this, perhaps there just need to be some docs on this?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As I noted &lt;a href=&quot;http://www.timocracy.com/articles/2009/04/15/problems-with-mongrel_cluster-and-rails-2-3-dispatcher-reloading-your-metal-every-request&quot; title=&quot;timocracy.com&quot;&gt;this blog post&lt;/a&gt; if you are running stock
thin or mongrel clusters they will route through the old deprecated
dispatch call, which will cause all of your metal (and middleware?)
to be re-required every request.&lt;/p&gt;
&lt;p&gt;As people with metal are probably those who most need
performance, this may be a big hit for them. Since there are
already handlers in the custom vendorized rack that work perfectly
fine to avoid this, perhaps there just need to be some docs on
this?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As I noted [this blog post](http://www.timocracy.com/articles/2009/04/15/problems-with-mongrel_cluster-and-rails-2-3-dispatcher-reloading-your-metal-every-request &quot;timocracy.com&quot;) if you are running stock thin or mongrel clusters they will route through the old deprecated dispatch call, which will cause all of your metal (and middleware?) to be re-required every request.

As people with metal are probably those who most need performance, this may be a big hit for them.  Since there are already handlers in the custom vendorized rack that work perfectly fine to avoid this, perhaps there just need to be some docs on this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;As I noted &lt;a href=&quot;http://www.timocracy.com/articles/2009/04/15/problems-with-mongrel_cluster-and-rails-2-3-dispatcher-reloading-your-metal-every-request&quot; title=&quot;timocracy.com&quot;&gt;this blog post&lt;/a&gt; if you are running stock
thin or mongrel clusters they will route through the old deprecated
dispatch call, which will cause all of your metal (and middleware?)
to be re-required every request.&lt;/p&gt;
&lt;p&gt;As people with metal are probably those who most need
performance, this may be a big hit for them. Since there are
already handlers in the custom vendorized rack that work perfectly
fine to avoid this, perhaps there just need to be some docs on
this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-16T01:03:37+01:00</created-at>
      <creator-id type="integer">13680</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2505</number>
      <permalink>stock-mongrel-or-thin-will-rebuild-dispatcher-every-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 deployment documentation metal mongrel performance rack thin</tag>
      <title>Stock mongrel or thin will rebuild dispatcher every request</title>
      <updated-at type="datetime">2009-04-16T01:03:43+01:00</updated-at>
      <user-id type="integer">13680</user-id>
      <version type="integer">1</version>
      <user-name>Tim Connor</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2505</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>So as per the discussion on [4a3afe0b](http://github.com/rails/rails/commit/4a3afe0b4f4193d8f35827c5550727f98c6b63e9 &quot;4a3afe0b&quot;) what do you think a good solution is, Josh?</body>
      <body-html>&lt;div&gt;&lt;p&gt;So as per the discussion on &lt;a href=&quot;http://github.com/rails/rails/commit/4a3afe0b4f4193d8f35827c5550727f98c6b63e9&quot; title=&quot;4a3afe0b&quot;&gt;4a3afe0b&lt;/a&gt; what do you think a good solution is,
Josh?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-28T22:27:08+01:00</created-at>
      <creator-id type="integer">13680</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2505</number>
      <permalink>stock-mongrel-or-thin-will-rebuild-dispatcher-every-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 deployment documentation metal mongrel performance rack thin</tag>
      <title>Stock mongrel or thin will rebuild dispatcher every request</title>
      <updated-at type="datetime">2009-04-28T22:27:11+01:00</updated-at>
      <user-id type="integer">13680</user-id>
      <version type="integer">2</version>
      <user-name>Tim Connor</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2505</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I really hate the way mongrel wraps around Rails. I'm surprised we even have this working at all.

I'll totally out of ideas, sorry man.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I really hate the way mongrel wraps around Rails. I'm surprised
we even have this working at all.&lt;/p&gt;
&lt;p&gt;I'll totally out of ideas, sorry man.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-17T16:49:34+01:00</created-at>
      <creator-id type="integer">13680</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2505</number>
      <permalink>stock-mongrel-or-thin-will-rebuild-dispatcher-every-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.2 deployment documentation metal mongrel performance rack thin</tag>
      <title>Stock mongrel or thin will rebuild dispatcher every request</title>
      <updated-at type="datetime">2009-05-17T16:49:38+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2505</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>No worries.  If I had any bright ideas, I would have done it myself.  We're using thin with a config.ru, anyways, just trying to watch out for other people who might hit this oops.  At least this way maybe it is googleable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No worries. If I had any bright ideas, I would have done it
myself. We're using thin with a config.ru, anyways, just trying to
watch out for other people who might hit this oops. At least this
way maybe it is googleable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-17T18:39:53+01:00</created-at>
      <creator-id type="integer">13680</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2505</number>
      <permalink>stock-mongrel-or-thin-will-rebuild-dispatcher-every-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.2 deployment documentation metal mongrel performance rack thin</tag>
      <title>Stock mongrel or thin will rebuild dispatcher every request</title>
      <updated-at type="datetime">2009-05-17T18:39:56+01:00</updated-at>
      <user-id type="integer">13680</user-id>
      <version type="integer">4</version>
      <user-name>Tim Connor</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2505</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
</ticket>
