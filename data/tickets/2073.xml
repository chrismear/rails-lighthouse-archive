<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-25T15:41:25+00:00</created-at>
  <creator-id type="integer">46865</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2073</number>
  <permalink>attr_accessible-nil-breaks-ar-session-store</permalink>
  <priority type="integer">24</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>:attr_accessible nil breaks AR session store</title>
  <updated-at type="datetime">2009-07-10T17:57:41+01:00</updated-at>
  <user-id type="integer">48823</user-id>
  <version type="integer">6</version>
  <user-name>keith_shetler (at hotmail)</user-name>
  <creator-name>Peter Nash</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2073</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm not sure if this is a bug as such but it's a change that's arisen in edge but wasn't in 2.3 RC1 and earlier.

If you configure your session store as :active_record_store and also include  

ActiveRecord::Base.send(:attr_accessible, nil)

in your initializers then sessions break.

Specifically, the session records in the database are stored with a blank &quot;session_id&quot; column and &quot;session&quot; in the controller is empty.

To reproduce, build a trivial Rails application (or use an existing one) with Active Record session store, add ActiveRecord::Base.send(:attr_accessible, nil) to the initializers and clear any existing sessions from the browser and db.  On each request one more session records will be generated with an empty session_id column.</original-body>
  <latest-body>I'm not sure if this is a bug as such but it's a change that's arisen in edge but wasn't in 2.3 RC1 and earlier.

If you configure your session store as :active_record_store and also include  

ActiveRecord::Base.send(:attr_accessible, nil)

in your initializers then sessions break.

Specifically, the session records in the database are stored with a blank &quot;session_id&quot; column and &quot;session&quot; in the controller is empty.

To reproduce, build a trivial Rails application (or use an existing one) with Active Record session store, add ActiveRecord::Base.send(:attr_accessible, nil) to the initializers and clear any existing sessions from the browser and db.  On each request one more session records will be generated with an empty session_id column.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm not sure if this is a bug as such but it's a change that's
arisen in edge but wasn't in 2.3 RC1 and earlier.&lt;/p&gt;
&lt;p&gt;If you configure your session store as :active_record_store and
also include&lt;br&gt;&lt;/p&gt;
&lt;p&gt;ActiveRecord::Base.send(:attr_accessible, nil)&lt;/p&gt;
&lt;p&gt;in your initializers then sessions break.&lt;/p&gt;
&lt;p&gt;Specifically, the session records in the database are stored
with a blank &quot;session_id&quot; column and &quot;session&quot; in the controller is
empty.&lt;/p&gt;
&lt;p&gt;To reproduce, build a trivial Rails application (or use an
existing one) with Active Record session store, add
ActiveRecord::Base.send(:attr_accessible, nil) to the initializers
and clear any existing sessions from the browser and db. On each
request one more session records will be generated with an empty
session_id column.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure if this is a bug as such but it's a change that's arisen in edge but wasn't in 2.3 RC1 and earlier.

If you configure your session store as :active_record_store and also include  

ActiveRecord::Base.send(:attr_accessible, nil)

in your initializers then sessions break.

Specifically, the session records in the database are stored with a blank &quot;session_id&quot; column and &quot;session&quot; in the controller is empty.

To reproduce, build a trivial Rails application (or use an existing one) with Active Record session store, add ActiveRecord::Base.send(:attr_accessible, nil) to the initializers and clear any existing sessions from the browser and db.  On each request one more session records will be generated with an empty session_id column.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure if this is a bug as such but it's a change that's
arisen in edge but wasn't in 2.3 RC1 and earlier.&lt;/p&gt;
&lt;p&gt;If you configure your session store as :active_record_store and
also include&lt;br&gt;&lt;/p&gt;
&lt;p&gt;ActiveRecord::Base.send(:attr_accessible, nil)&lt;/p&gt;
&lt;p&gt;in your initializers then sessions break.&lt;/p&gt;
&lt;p&gt;Specifically, the session records in the database are stored
with a blank &quot;session_id&quot; column and &quot;session&quot; in the controller is
empty.&lt;/p&gt;
&lt;p&gt;To reproduce, build a trivial Rails application (or use an
existing one) with Active Record session store, add
ActiveRecord::Base.send(:attr_accessible, nil) to the initializers
and clear any existing sessions from the browser and db. On each
request one more session records will be generated with an empty
session_id column.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-25T15:41:25+00:00</created-at>
      <creator-id type="integer">46865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2073</number>
      <permalink>attr_accessible-nil-breaks-ar-session-store</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>:attr_accessible nil breaks AR session store</title>
      <updated-at type="datetime">2009-02-25T15:41:26+00:00</updated-at>
      <user-id type="integer">46865</user-id>
      <version type="integer">1</version>
      <user-name>Peter Nash</user-name>
      <creator-name>Peter Nash</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2073</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-25T18:23:35+00:00</created-at>
      <creator-id type="integer">46865</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2073</number>
      <permalink>attr_accessible-nil-breaks-ar-session-store</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>:attr_accessible nil breaks AR session store</title>
      <updated-at type="datetime">2009-02-25T18:23:41+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Peter Nash</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2073</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure this is a good idea in general. If you add ActiveRecord::Base.send(:attr_accessible, nil) to base no AR attributes will be able to be saved on any model.

I would think the same issue would have existed in any version of Rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure this is a good idea in general. If you add
ActiveRecord::Base.send(:attr_accessible, nil) to base no AR
attributes will be able to be saved on any model.&lt;/p&gt;
&lt;p&gt;I would think the same issue would have existed in any version
of Rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-25T18:34:19+00:00</created-at>
      <creator-id type="integer">46865</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2073</number>
      <permalink>attr_accessible-nil-breaks-ar-session-store</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>:attr_accessible nil breaks AR session store</title>
      <updated-at type="datetime">2009-02-25T18:34:23+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Peter Nash</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2073</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The reason for adding ActiveRecord::Base.send(:attr_accessible, nil) is so that the default behaviour of all application model classes is to NOT allow updates to to attributes from params unless access is specifically allowed with :attr_accessible in each model.  This way it relies on the programmer to explicitly declare which attributes can be updated from parameter hashes.  I know that there are varying opinions about whether that's a good thing to enforce but in the past setting this did not break any of the core Rails classes.  For background on why I prefer to &quot;whitelist&quot; attr_accessible see http://railscasts.com/episodes/26</body>
      <body-html>&lt;div&gt;&lt;p&gt;The reason for adding ActiveRecord::Base.send(:attr_accessible,
nil) is so that the default behaviour of all application model
classes is to NOT allow updates to to attributes from params unless
access is specifically allowed with :attr_accessible in each model.
This way it relies on the programmer to explicitly declare which
attributes can be updated from parameter hashes. I know that there
are varying opinions about whether that's a good thing to enforce
but in the past setting this did not break any of the core Rails
classes. For background on why I prefer to &quot;whitelist&quot;
attr_accessible see &lt;a href=&quot;http://railscasts.com/episodes/26&quot;&gt;http://railscasts.com/episodes/26&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-25T22:29:40+00:00</created-at>
      <creator-id type="integer">46865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2073</number>
      <permalink>attr_accessible-nil-breaks-ar-session-store</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>:attr_accessible nil breaks AR session store</title>
      <updated-at type="datetime">2009-02-25T22:29:43+00:00</updated-at>
      <user-id type="integer">46865</user-id>
      <version type="integer">4</version>
      <user-name>Peter Nash</user-name>
      <creator-name>Peter Nash</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2073</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I meant to add that using ActiveRecord::Base.send(:attr_accessible, nil) to enforce the use of attr_accessible in models used to work fine in 2.1, 2.2 and 2.3RC1 - it's only on Edge that it breaks AR sessions.   However, if anyone else is affected by this, an alternative strategy of auditing for the use of attr_accessible in models instead of enforcing it is detailed here 
http://blog.insoshi.com/2008/09/21/finding-and-fixing-mass-assignment-problems-in-rails-applications/</body>
      <body-html>&lt;div&gt;&lt;p&gt;I meant to add that using
ActiveRecord::Base.send(:attr_accessible, nil) to enforce the use
of attr_accessible in models used to work fine in 2.1, 2.2 and
2.3RC1 - it's only on Edge that it breaks AR sessions. However, if
anyone else is affected by this, an alternative strategy of
auditing for the use of attr_accessible in models instead of
enforcing it is detailed here &lt;a href=&quot;http://blog.insoshi.com/2008/09/21/finding-and-fixing-mass-assignment-problems-in-rails-applications/&quot;&gt;
http://blog.insoshi.com/2008/09/...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-26T00:01:27+00:00</created-at>
      <creator-id type="integer">46865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2073</number>
      <permalink>attr_accessible-nil-breaks-ar-session-store</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>:attr_accessible nil breaks AR session store</title>
      <updated-at type="datetime">2009-02-26T00:01:30+00:00</updated-at>
      <user-id type="integer">46865</user-id>
      <version type="integer">5</version>
      <user-name>Peter Nash</user-name>
      <creator-name>Peter Nash</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2073</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This appears in 2.3.2. The work-around:

ActiveRecord::Base.send(:attr_accessible, nil)
ActiveRecord::Base.send(:attr_accessible, :session_id)

This correctly allows they system to set the :session_id attribute.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This appears in 2.3.2. The work-around:&lt;/p&gt;
&lt;p&gt;ActiveRecord::Base.send(:attr_accessible, nil)&lt;br&gt;
ActiveRecord::Base.send(:attr_accessible, :session_id)&lt;/p&gt;
&lt;p&gt;This correctly allows they system to set the :session_id
attribute.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-10T17:57:36+01:00</created-at>
      <creator-id type="integer">46865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2073</number>
      <permalink>attr_accessible-nil-breaks-ar-session-store</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>:attr_accessible nil breaks AR session store</title>
      <updated-at type="datetime">2009-07-10T17:57:41+01:00</updated-at>
      <user-id type="integer">48823</user-id>
      <version type="integer">6</version>
      <user-name>keith_shetler (at hotmail)</user-name>
      <creator-name>Peter Nash</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2073</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
</ticket>
