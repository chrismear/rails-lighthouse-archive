<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-05T17:12:05+01:00</created-at>
  <creator-id type="integer">19095</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">115</number>
  <permalink>validates_confirmation_of-does-not-confirm-with-decimal-column-type</permalink>
  <priority type="integer">11098</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>validates_confirmation_of does not confirm with decimal column type</title>
  <updated-at type="datetime">2008-07-17T01:09:12+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Brad Sumersford</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/115</url>
  <priority-name nil="true"></priority-name>
  <original-body>This may fall under the &quot;why would you want to&quot; category, but the validates_confirmation_of validation does not properly validate decimal (BigDecimal) columns.  Example:

create_table :payments do |t|
  t.decimal  :amount, :precision =&gt; 10, :scale =&gt; 2
end

class Payment &lt; ActiveRecord::Base

 validates_confirmation_of :amount

end

# Lets make believe this is string form data
script/console
&gt;&gt; p = Payment.new(:amount =&gt; &quot;0.25&quot;, :amount_confirmation =&gt; &quot;0.25&quot;)
&gt;&gt; p.save
=&gt; false
&gt;&gt; p.errors.full_messages
=&gt; [&quot;Amount doesn't match confirmation&quot;]

--------------------------------------

This appears to be due to the fact that the amount_confirmation value is not being cast to a BigDecimal like the amount value is.  Adding this hack to the Payment model fixes the issue

def amount_confirmation
  column_for_attribute(:amount).type_cast(@amount_confirmation)
end</original-body>
  <latest-body>This may fall under the &quot;why would you want to&quot; category, but the validates_confirmation_of validation does not properly validate decimal (BigDecimal) columns.  Example:

create_table :payments do |t|
  t.decimal  :amount, :precision =&gt; 10, :scale =&gt; 2
end

class Payment &lt; ActiveRecord::Base

 validates_confirmation_of :amount

end

# Lets make believe this is string form data
script/console
&gt;&gt; p = Payment.new(:amount =&gt; &quot;0.25&quot;, :amount_confirmation =&gt; &quot;0.25&quot;)
&gt;&gt; p.save
=&gt; false
&gt;&gt; p.errors.full_messages
=&gt; [&quot;Amount doesn't match confirmation&quot;]

--------------------------------------

This appears to be due to the fact that the amount_confirmation value is not being cast to a BigDecimal like the amount value is.  Adding this hack to the Payment model fixes the issue

def amount_confirmation
  column_for_attribute(:amount).type_cast(@amount_confirmation)
end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
This may fall under the &quot;why would you want to&quot; category, but the validates_confirmation_of validation does not properly validate decimal (BigDecimal) columns.  Example:
&lt;/p&gt;&lt;p&gt;
create_table :payments do |t|
&lt;/p&gt;&lt;p&gt;
t.decimal  :amount, :precision =&gt; 10, :scale =&gt; 2
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Payment &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
validates_confirmation_of :amount
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
Lets make believe this is string form data
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
script/console
&lt;/p&gt;&lt;p&gt;
&gt;&gt; p = Payment.new(:amount =&gt; &quot;0.25&quot;, :amount_confirmation =&gt; &quot;0.25&quot;)
&lt;/p&gt;&lt;p&gt;
&gt;&gt; p.save
&lt;/p&gt;&lt;p&gt;
=&gt; false
&lt;/p&gt;&lt;p&gt;
&gt;&gt; p.errors.full_messages
&lt;/p&gt;&lt;p&gt;
=&gt; [&quot;Amount doesn't match confirmation&quot;]
&lt;/p&gt;&lt;p&gt;
--------------------------------------
&lt;/p&gt;&lt;p&gt;
This appears to be due to the fact that the amount_confirmation value is not being cast to a BigDecimal like the amount value is.  Adding this hack to the Payment model fixes the issue
&lt;/p&gt;&lt;p&gt;
def amount_confirmation
&lt;/p&gt;&lt;p&gt;
column_for_attribute(:amount).type_cast(@amount_confirmation)
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This may fall under the &quot;why would you want to&quot; category, but the validates_confirmation_of validation does not properly validate decimal (BigDecimal) columns.  Example:

create_table :payments do |t|
  t.decimal  :amount, :precision =&gt; 10, :scale =&gt; 2
end

class Payment &lt; ActiveRecord::Base

 validates_confirmation_of :amount

end

# Lets make believe this is string form data
script/console
&gt;&gt; p = Payment.new(:amount =&gt; &quot;0.25&quot;, :amount_confirmation =&gt; &quot;0.25&quot;)
&gt;&gt; p.save
=&gt; false
&gt;&gt; p.errors.full_messages
=&gt; [&quot;Amount doesn't match confirmation&quot;]

--------------------------------------

This appears to be due to the fact that the amount_confirmation value is not being cast to a BigDecimal like the amount value is.  Adding this hack to the Payment model fixes the issue

def amount_confirmation
  column_for_attribute(:amount).type_cast(@amount_confirmation)
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This may fall under the &quot;why would you want to&quot; category, but the validates_confirmation_of validation does not properly validate decimal (BigDecimal) columns.  Example:
&lt;/p&gt;&lt;p&gt;
create_table :payments do |t|
&lt;/p&gt;&lt;p&gt;
t.decimal  :amount, :precision =&gt; 10, :scale =&gt; 2
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Payment &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
validates_confirmation_of :amount
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
Lets make believe this is string form data
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
script/console
&lt;/p&gt;&lt;p&gt;
&gt;&gt; p = Payment.new(:amount =&gt; &quot;0.25&quot;, :amount_confirmation =&gt; &quot;0.25&quot;)
&lt;/p&gt;&lt;p&gt;
&gt;&gt; p.save
&lt;/p&gt;&lt;p&gt;
=&gt; false
&lt;/p&gt;&lt;p&gt;
&gt;&gt; p.errors.full_messages
&lt;/p&gt;&lt;p&gt;
=&gt; [&quot;Amount doesn't match confirmation&quot;]
&lt;/p&gt;&lt;p&gt;
--------------------------------------
&lt;/p&gt;&lt;p&gt;
This appears to be due to the fact that the amount_confirmation value is not being cast to a BigDecimal like the amount value is.  Adding this hack to the Payment model fixes the issue
&lt;/p&gt;&lt;p&gt;
def amount_confirmation
&lt;/p&gt;&lt;p&gt;
column_for_attribute(:amount).type_cast(@amount_confirmation)
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T17:12:05+01:00</created-at>
      <creator-id type="integer">19095</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">115</number>
      <permalink>validates_confirmation_of-does-not-confirm-with-decimal-column-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_confirmation_of does not confirm with decimal column type</title>
      <updated-at type="datetime">2008-05-05T17:12:05+01:00</updated-at>
      <user-id type="integer">19095</user-id>
      <version type="integer">1</version>
      <user-name>Brad Sumersford</user-name>
      <creator-name>Brad Sumersford</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/115</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Closing this ticket as stale. If this is still an issue for you, feel free to reopen this ticket or create a new one with an updated description. Remember those unit tests too ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Closing this ticket as stale. If this is still an issue for you, feel free to reopen this ticket or create a new one with an updated description. Remember those unit tests too ;)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-17T01:09:12+01:00</created-at>
      <creator-id type="integer">19095</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">115</number>
      <permalink>validates_confirmation_of-does-not-confirm-with-decimal-column-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>validates_confirmation_of does not confirm with decimal column type</title>
      <updated-at type="datetime">2008-07-17T01:09:12+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Brad Sumersford</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/115</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
