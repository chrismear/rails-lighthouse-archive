<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-31T15:46:14+00:00</created-at>
  <creator-id type="integer">18068</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1676</number>
  <permalink>orderedhash-mishandles-keys</permalink>
  <priority type="integer">998</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activesupport hash patch</tag>
  <title>OrderedHash mishandles keys</title>
  <updated-at type="datetime">2009-01-16T17:40:29+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">7</version>
  <user-name>Repository</user-name>
  <creator-name>Brandon Keepers</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The latest implementation of OrderedHash does not behave as expected when it comes to managing keys in several situations.  For example, @#merge!@ doesn't work:

&lt;pre&gt;
&gt;&gt; h = ActiveSupport::OrderedHash.new
&gt;&gt; h.merge! :a =&gt; 1, :b =&gt; 2
=&gt; {:a=&gt;1, :b=&gt;2}
&gt;&gt; h.keys
=&gt; []
&gt;&gt; h.inspect
=&gt; &quot;{:a=&gt;1, :b=&gt;2}&quot;
&lt;/pre&gt;

Also, when calling non-destructive methods like @#reject@ it mangles the keys:

&lt;pre&gt;
&gt;&gt; h = ActiveSupport::OrderedHash.new
&gt;&gt; h[:a] = 1
&gt;&gt; h[:b] = 2
&gt;&gt; h2 = h.reject {|k,v| k == :a }
=&gt; {:b=&gt;2}
&gt;&gt; h.inspect
=&gt; &quot;{:a=&gt;1, :b=&gt;2}&quot;
&gt;&gt; h.keys
=&gt; [:b]
&lt;/pre&gt;</original-body>
  <latest-body>The latest implementation of OrderedHash does not behave as expected when it comes to managing keys in several situations.  For example, @#merge!@ doesn't work:

&lt;pre&gt;
&gt;&gt; h = ActiveSupport::OrderedHash.new
&gt;&gt; h.merge! :a =&gt; 1, :b =&gt; 2
=&gt; {:a=&gt;1, :b=&gt;2}
&gt;&gt; h.keys
=&gt; []
&gt;&gt; h.inspect
=&gt; &quot;{:a=&gt;1, :b=&gt;2}&quot;
&lt;/pre&gt;

Also, when calling non-destructive methods like @#reject@ it mangles the keys:

&lt;pre&gt;
&gt;&gt; h = ActiveSupport::OrderedHash.new
&gt;&gt; h[:a] = 1
&gt;&gt; h[:b] = 2
&gt;&gt; h2 = h.reject {|k,v| k == :a }
=&gt; {:b=&gt;2}
&gt;&gt; h.inspect
=&gt; &quot;{:a=&gt;1, :b=&gt;2}&quot;
&gt;&gt; h.keys
=&gt; [:b]
&lt;/pre&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The latest implementation of OrderedHash does not behave as
expected when it comes to managing keys in several situations. For
example, &lt;code&gt;#merge!&lt;/code&gt; doesn't work:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;h = ActiveSupport::OrderedHash.new h.merge! :a =&amp;gt; 1, :b =&amp;gt;
2 =&amp;gt; {:a=&amp;gt;1, :b=&amp;gt;2} h.keys =&amp;gt; [] h.inspect =&amp;gt;
&quot;{:a=&amp;gt;1, :b=&amp;gt;2}&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also, when calling non-destructive methods like
&lt;code&gt;#reject&lt;/code&gt; it mangles the keys:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;h = ActiveSupport::OrderedHash.new h[:a] = 1 h[:b] = 2 h2 =
h.reject {|k,v| k == :a } =&amp;gt; {:b=&amp;gt;2} h.inspect =&amp;gt;
&quot;{:a=&amp;gt;1, :b=&amp;gt;2}&quot; h.keys =&amp;gt; [:b]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The latest implementation of OrderedHash does not behave as expected when it comes to managing keys in several situations.  For example, @#merge!@ doesn't work:

&lt;pre&gt;
&gt;&gt; h = ActiveSupport::OrderedHash.new
&gt;&gt; h.merge! :a =&gt; 1, :b =&gt; 2
=&gt; {:a=&gt;1, :b=&gt;2}
&gt;&gt; h.keys
=&gt; []
&gt;&gt; h.inspect
=&gt; &quot;{:a=&gt;1, :b=&gt;2}&quot;
&lt;/pre&gt;

Also, when calling non-destructive methods like @#reject@ it mangles the keys:

&lt;pre&gt;
&gt;&gt; h = ActiveSupport::OrderedHash.new
&gt;&gt; h[:a] = 1
&gt;&gt; h[:b] = 2
&gt;&gt; h2 = h.reject {|k,v| k == :a }
=&gt; {:b=&gt;2}
&gt;&gt; h.inspect
=&gt; &quot;{:a=&gt;1, :b=&gt;2}&quot;
&gt;&gt; h.keys
=&gt; [:b]
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;The latest implementation of OrderedHash does not behave as
expected when it comes to managing keys in several situations. For
example, &lt;code&gt;#merge!&lt;/code&gt; doesn't work:&lt;/p&gt;
&lt;pre&gt;
&amp;gt;&amp;gt; h = ActiveSupport::OrderedHash.new
&amp;gt;&amp;gt; h.merge! :a =&amp;gt; 1, :b =&amp;gt; 2
=&amp;gt; {:a=&amp;gt;1, :b=&amp;gt;2}
&amp;gt;&amp;gt; h.keys
=&amp;gt; []
&amp;gt;&amp;gt; h.inspect
=&amp;gt; &quot;{:a=&amp;gt;1, :b=&amp;gt;2}&quot;
&lt;/pre&gt;
&lt;p&gt;Also, when calling non-destructive methods like
&lt;code&gt;#reject&lt;/code&gt; it mangles the keys:&lt;/p&gt;
&lt;pre&gt;
&amp;gt;&amp;gt; h = ActiveSupport::OrderedHash.new
&amp;gt;&amp;gt; h[:a] = 1
&amp;gt;&amp;gt; h[:b] = 2
&amp;gt;&amp;gt; h2 = h.reject {|k,v| k == :a }
=&amp;gt; {:b=&amp;gt;2}
&amp;gt;&amp;gt; h.inspect
=&amp;gt; &quot;{:a=&amp;gt;1, :b=&amp;gt;2}&quot;
&amp;gt;&amp;gt; h.keys
=&amp;gt; [:b]
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-31T15:46:14+00:00</created-at>
      <creator-id type="integer">18068</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1676</number>
      <permalink>orderedhash-mishandles-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport hash</tag>
      <title>OrderedHash mishandles keys</title>
      <updated-at type="datetime">2008-12-31T15:46:19+00:00</updated-at>
      <user-id type="integer">18068</user-id>
      <version type="integer">1</version>
      <user-name>Brandon Keepers</user-name>
      <creator-name>Brandon Keepers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is a patch that fixes these two issues, and probably a few more.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a patch that fixes these two issues, and probably a
few more.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-31T15:49:58+00:00</created-at>
      <creator-id type="integer">18068</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1676</number>
      <permalink>orderedhash-mishandles-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport hash</tag>
      <title>OrderedHash mishandles keys</title>
      <updated-at type="datetime">2008-12-31T15:50:03+00:00</updated-at>
      <user-id type="integer">18068</user-id>
      <version type="integer">2</version>
      <user-name>Brandon Keepers</user-name>
      <creator-name>Brandon Keepers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Is the dup in initialize_copy not redundant given that keys already does a dup? Other than that looks sane to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is the dup in initialize_copy not redundant given that keys
already does a dup? Other than that looks sane to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-31T16:01:03+00:00</created-at>
      <creator-id type="integer">18068</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport hash
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1676</number>
      <permalink>orderedhash-mishandles-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport hash patch</tag>
      <title>OrderedHash mishandles keys</title>
      <updated-at type="datetime">2008-12-31T16:01:04+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Brandon Keepers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah, it is redundant, but I thought it more clearly communicated the intent. I'm ok with removing it, I just didn't want people to be confused about it's just setting the instance variable to the value of keys.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, it is redundant, but I thought it more clearly
communicated the intent. I'm ok with removing it, I just didn't
want people to be confused about it's just setting the instance
variable to the value of keys.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-31T17:10:20+00:00</created-at>
      <creator-id type="integer">18068</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1676</number>
      <permalink>orderedhash-mishandles-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport hash patch</tag>
      <title>OrderedHash mishandles keys</title>
      <updated-at type="datetime">2008-12-31T17:10:24+00:00</updated-at>
      <user-id type="integer">18068</user-id>
      <version type="integer">4</version>
      <user-name>Brandon Keepers</user-name>
      <creator-name>Brandon Keepers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'd remove it. If anything (for me at least) it adds confusion (' I thought the return value of keys was safe to mess around with but it's dup-ing it here, should I always dup it myself ? ').

There might be other bugs like this. When I rewrote OrderedHash a few weeks ago I was mostly worried about backwards compatibility with the existing implementation (when it was an array with knobs on) so I didn't worry to much about methods that didn't exist on the old OrderedHash.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'd remove it. If anything (for me at least) it adds confusion
(' I thought the return value of keys was safe to mess around with
but it's dup-ing it here, should I always dup it myself ? ').&lt;/p&gt;
&lt;p&gt;There might be other bugs like this. When I rewrote OrderedHash
a few weeks ago I was mostly worried about backwards compatibility
with the existing implementation (when it was an array with knobs
on) so I didn't worry to much about methods that didn't exist on
the old OrderedHash.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-31T17:22:47+00:00</created-at>
      <creator-id type="integer">18068</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1676</number>
      <permalink>orderedhash-mishandles-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport hash patch</tag>
      <title>OrderedHash mishandles keys</title>
      <updated-at type="datetime">2008-12-31T17:22:51+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">5</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Brandon Keepers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Updated patch that removes the unnecessary dup</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch that removes the unnecessary dup&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-01T19:13:58+00:00</created-at>
      <creator-id type="integer">18068</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1676</number>
      <permalink>orderedhash-mishandles-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport hash patch</tag>
      <title>OrderedHash mishandles keys</title>
      <updated-at type="datetime">2009-01-01T19:13:59+00:00</updated-at>
      <user-id type="integer">18068</user-id>
      <version type="integer">6</version>
      <user-name>Brandon Keepers</user-name>
      <creator-name>Brandon Keepers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [452cd74d81ecfa38d0c7d3a4dc83d2b731de9e73]) Dup keys in OrderedHash to prevent them from being modified [#1676 state:resolved]

Signed-off-by: Frederick Cheung &lt;frederick.cheung@gmail.com&gt;
http://github.com/rails/rails/commit/452cd74d81ecfa38d0c7d3a4dc83d2b731de9e73</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [452cd74d81ecfa38d0c7d3a4dc83d2b731de9e73]) Dup keys in
OrderedHash to prevent them from being modified [&lt;a href=&quot;/projects/8994/tickets/1676&quot; title=&quot;Ticket #1676&quot;&gt;#1676&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Frederick Cheung &lt;a href=&quot;mailto:frederick.cheung@gmail.com&quot;&gt;frederick.cheung@gmail.com&lt;/a&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/452cd74d81ecfa38d0c7d3a4dc83d2b731de9e73&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-16T17:40:26+00:00</created-at>
      <creator-id type="integer">18068</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1676</number>
      <permalink>orderedhash-mishandles-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport hash patch</tag>
      <title>OrderedHash mishandles keys</title>
      <updated-at type="datetime">2009-01-16T17:40:29+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Brandon Keepers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1676</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a07858bfbd2436b0e9a245647eaede221fed7558</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-31T15:49:58+00:00</created-at>
      <filename>ordered_hash.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74691</id>
      <size type="integer">3266</size>
      <uploader-id type="integer">18068</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74691/ordered_hash.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>aabccd6cf3fee69aefbb8749b9b90965de5ba4f7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-01T19:13:58+00:00</created-at>
      <filename>ordered_hash.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74826</id>
      <size type="integer">3262</size>
      <uploader-id type="integer">18068</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74826/ordered_hash.patch</url>
    </attachment>
  </attachments>
</ticket>
