<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-07T17:44:57+01:00</created-at>
  <creator-id type="integer">33356</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5573</number>
  <permalink>rake-routes-gives-different-results-rails-300rc1-rails-300rc2</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>rake routes gives different results (rails 3.0.0.rc1, rails 3.0.0.rc2)</title>
  <updated-at type="datetime">2010-09-08T07:29:23+01:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">3</version>
  <user-name>Andrew White</user-name>
  <creator-name>gummybears</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5573</url>
  <priority-name>Low</priority-name>
  <original-body>OS : Ubuntu 10.04

Using rvm with 2 gemsets (rails 3.0.0.rc1 and 3.0.0.rc2)
given the following config/initializers/inflections.rb and config/routes.rb
&lt;code&gt;
ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'export','exports'
end
MyApp::Application.routes.draw do
root :to =&gt; 'user_sessions#new'
resources :export do
collection do
get :db
get :audit
end
end
end
&lt;code&gt;
In one of my views I am using 
&lt;code&gt;
&lt;%= link_to &quot;Offline-export&quot;, db_exports_url %&gt;
&lt;code&gt;
When doing the following (my rails application is located in ~/rails/myapp)
&lt;code&gt;
$ cd rails/myapp

$ rvm use 1.9.2@rails3rc1 

$ rake routes | grep db

db_exports GET    /export/db(.:format)      {:controller=&gt;&quot;export&quot;, :action=&gt;&quot;db&quot;}
&lt;code&gt;
All my tests passes

&lt;code&gt;
$ rvm use 1.9.2@rails3rc2

$ rake routes | grep db

db_export_index GET    /export/db(.:format) {:controller=&gt;&quot;export&quot;, :action=&gt;&quot;db&quot;}
&lt;code&gt;
Some of my tests fail, especially complaining 

undefined local variable or method `db_exports_url' for #&lt;#&lt;Class:0x89b6240&gt;:0x91d8e3c&gt; (ActionView::Template::Error)</original-body>
  <latest-body>OS : Ubuntu 10.04

Using rvm with 2 gemsets (rails 3.0.0.rc1 and 3.0.0.rc2)
given the following config/initializers/inflections.rb and config/routes.rb
&lt;code&gt;
ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'export','exports'
end
MyApp::Application.routes.draw do
root :to =&gt; 'user_sessions#new'
resources :export do
collection do
get :db
get :audit
end
end
end
&lt;code&gt;
In one of my views I am using 
&lt;code&gt;
&lt;%= link_to &quot;Offline-export&quot;, db_exports_url %&gt;
&lt;code&gt;
When doing the following (my rails application is located in ~/rails/myapp)
&lt;code&gt;
$ cd rails/myapp

$ rvm use 1.9.2@rails3rc1 

$ rake routes | grep db

db_exports GET    /export/db(.:format)      {:controller=&gt;&quot;export&quot;, :action=&gt;&quot;db&quot;}
&lt;code&gt;
All my tests passes

&lt;code&gt;
$ rvm use 1.9.2@rails3rc2

$ rake routes | grep db

db_export_index GET    /export/db(.:format) {:controller=&gt;&quot;export&quot;, :action=&gt;&quot;db&quot;}
&lt;code&gt;
Some of my tests fail, especially complaining 

undefined local variable or method `db_exports_url' for #&lt;#&lt;Class:0x89b6240&gt;:0x91d8e3c&gt; (ActionView::Template::Error)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;OS : Ubuntu 10.04&lt;/p&gt;
&lt;p&gt;Using rvm with 2 gemsets (rails 3.0.0.rc1 and 3.0.0.rc2)&lt;br&gt;
given the following config/initializers/inflections.rb and
config/routes.rb&lt;br&gt;
&lt;code&gt;&lt;br&gt;
ActiveSupport::Inflector.inflections do |inflect|&lt;br&gt;
inflect.irregular 'export','exports' end&lt;br&gt;
MyApp::Application.routes.draw do&lt;br&gt;
root :to =&amp;gt; 'user_sessions#new'&lt;br&gt;
resources :export do&lt;br&gt;
collection do&lt;br&gt;
get :db&lt;br&gt;
get :audit&lt;br&gt;
end&lt;br&gt;
end&lt;br&gt;
end&lt;br&gt;&lt;/code&gt;&lt;br&gt;
In one of my views I am using&lt;br&gt;
&lt;code&gt;&lt;br&gt;
&amp;lt;%= link_to &quot;Offline-export&quot;, db_exports_url
%&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;br&gt;
When doing the following (my rails application is located in
~/rails/myapp)&lt;br&gt;
&lt;code&gt;&lt;br&gt;
$ cd rails/myapp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;$ rvm use 1.9.2@rails3rc1&lt;/p&gt;
&lt;p&gt;$ rake routes | grep db&lt;/p&gt;
&lt;p&gt;db_exports GET /export/db(.:format) {:controller=&amp;gt;&quot;export&quot;,
:action=&amp;gt;&quot;db&quot;}&lt;br&gt;
&lt;code&gt;&lt;br&gt;
All my tests passes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
$ rvm use 1.9.2@rails3rc2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;$ rake routes | grep db&lt;/p&gt;
&lt;p&gt;db_export_index GET /export/db(.:format)
{:controller=&amp;gt;&quot;export&quot;, :action=&amp;gt;&quot;db&quot;}&lt;br&gt;
&lt;code&gt;&lt;br&gt;
Some of my tests fail, especially complaining&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;undefined local variable or method &lt;code&gt;db_exports_url' for
#&amp;lt;#&amp;lt;Class:0x89b6240&amp;gt;:0x91d8e3c&amp;gt;
(ActionView::Template::Error)&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OS : Ubuntu 10.04

Using rvm with 2 gemsets (rails 3.0.0.rc1 and 3.0.0.rc2)
given the following config/initializers/inflections.rb and config/routes.rb
&lt;code&gt;
ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'export','exports'
end
MyApp::Application.routes.draw do
root :to =&gt; 'user_sessions#new'
resources :export do
collection do
get :db
get :audit
end
end
end
&lt;code&gt;
In one of my views I am using 
&lt;code&gt;
&lt;%= link_to &quot;Offline-export&quot;, db_exports_url %&gt;
&lt;code&gt;
When doing the following (my rails application is located in ~/rails/myapp)
&lt;code&gt;
$ cd rails/myapp

$ rvm use 1.9.2@rails3rc1 

$ rake routes | grep db

db_exports GET    /export/db(.:format)      {:controller=&gt;&quot;export&quot;, :action=&gt;&quot;db&quot;}
&lt;code&gt;
All my tests passes

&lt;code&gt;
$ rvm use 1.9.2@rails3rc2

$ rake routes | grep db

db_export_index GET    /export/db(.:format) {:controller=&gt;&quot;export&quot;, :action=&gt;&quot;db&quot;}
&lt;code&gt;
Some of my tests fail, especially complaining 

undefined local variable or method `db_exports_url' for #&lt;#&lt;Class:0x89b6240&gt;:0x91d8e3c&gt; (ActionView::Template::Error)</body>
      <body-html>&lt;div&gt;&lt;p&gt;OS : Ubuntu 10.04&lt;/p&gt;
&lt;p&gt;Using rvm with 2 gemsets (rails 3.0.0.rc1 and 3.0.0.rc2)&lt;br&gt;
given the following config/initializers/inflections.rb and
config/routes.rb&lt;br&gt;
&lt;code&gt;&lt;br&gt;
ActiveSupport::Inflector.inflections do |inflect|&lt;br&gt;
inflect.irregular 'export','exports' end&lt;br&gt;
MyApp::Application.routes.draw do&lt;br&gt;
root :to =&amp;gt; 'user_sessions#new'&lt;br&gt;
resources :export do&lt;br&gt;
collection do&lt;br&gt;
get :db&lt;br&gt;
get :audit&lt;br&gt;
end&lt;br&gt;
end&lt;br&gt;
end&lt;br&gt;&lt;/code&gt;&lt;br&gt;
In one of my views I am using&lt;br&gt;
&lt;code&gt;&lt;br&gt;
&amp;lt;%= link_to &quot;Offline-export&quot;, db_exports_url
%&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;br&gt;
When doing the following (my rails application is located in
~/rails/myapp)&lt;br&gt;
&lt;code&gt;&lt;br&gt;
$ cd rails/myapp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;$ rvm use 1.9.2@rails3rc1&lt;/p&gt;
&lt;p&gt;$ rake routes | grep db&lt;/p&gt;
&lt;p&gt;db_exports GET /export/db(.:format) {:controller=&amp;gt;&quot;export&quot;,
:action=&amp;gt;&quot;db&quot;}&lt;br&gt;
&lt;code&gt;&lt;br&gt;
All my tests passes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
$ rvm use 1.9.2@rails3rc2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;$ rake routes | grep db&lt;/p&gt;
&lt;p&gt;db_export_index GET /export/db(.:format)
{:controller=&amp;gt;&quot;export&quot;, :action=&amp;gt;&quot;db&quot;}&lt;br&gt;
&lt;code&gt;&lt;br&gt;
Some of my tests fail, especially complaining&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;undefined local variable or method &lt;code&gt;db_exports_url' for
#&amp;lt;#&amp;lt;Class:0x89b6240&amp;gt;:0x91d8e3c&amp;gt;
(ActionView::Template::Error)&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-07T17:44:57+01:00</created-at>
      <creator-id type="integer">33356</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5573</number>
      <permalink>rake-routes-gives-different-results-rails-300rc1-rails-300rc2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rake routes gives different results (rails 3.0.0.rc1, rails 3.0.0.rc2)</title>
      <updated-at type="datetime">2010-09-07T17:52:23+01:00</updated-at>
      <user-id type="integer">33356</user-id>
      <version type="integer">1</version>
      <user-name>gummybears</user-name>
      <creator-name>gummybears</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5573</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In rc1 the resource name was forced to be a plural but since this broke some peoples apps starting from rc2 we assume that you pass the plural in the resources call (similarly a resource call assumes a singular). Since you pass in export to the resources call the singular name matches the resource name and it thinks the resource is uncountable and appends _index to the index route.

If you update to the 3.0.0 final release and change your routes to this then it should work:

@@@ ruby
  resources :exports do
    collection do
      get :db
      get :audit
    end
  end
@@@

You shouldn't need the export custom inflection.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In rc1 the resource name was forced to be a plural but since
this broke some peoples apps starting from rc2 we assume that you
pass the plural in the resources call (similarly a resource call
assumes a singular). Since you pass in export to the resources call
the singular name matches the resource name and it thinks the
resource is uncountable and appends _index to the index route.&lt;/p&gt;
&lt;p&gt;If you update to the 3.0.0 final release and change your routes
to this then it should work:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  resources :exports do
    collection do
      get :db
      get :audit
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You shouldn't need the export custom inflection.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-08T07:29:05+01:00</created-at>
      <creator-id type="integer">33356</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5573</number>
      <permalink>rake-routes-gives-different-results-rails-300rc1-rails-300rc2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rake routes gives different results (rails 3.0.0.rc1, rails 3.0.0.rc2)</title>
      <updated-at type="datetime">2010-09-08T07:29:08+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>gummybears</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5573</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-08T07:29:21+01:00</created-at>
      <creator-id type="integer">33356</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5573</number>
      <permalink>rake-routes-gives-different-results-rails-300rc1-rails-300rc2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>rake routes gives different results (rails 3.0.0.rc1, rails 3.0.0.rc2)</title>
      <updated-at type="datetime">2010-09-08T07:29:23+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>gummybears</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5573</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
