<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-15T05:06:42+00:00</created-at>
  <creator-id type="integer">36417</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3961</number>
  <permalink>rails3-breaks-base64-stdlib</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>1.9.1 base64 stdlib</tag>
  <title>rails3 breaks base64 stdlib?</title>
  <updated-at type="datetime">2010-03-27T02:02:14+00:00</updated-at>
  <user-id type="integer">36417</user-id>
  <version type="integer">6</version>
  <user-name>eydaimon</user-name>
  <creator-name>eydaimon</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3961</url>
  <priority-name>Low</priority-name>
  <original-body>Rails 3.0.0.beta seems to break the base64 in the stdlib. See below.

I'm aware of ActiveSupport::Base64.encode64 in the meantime.

        $ irb
        ruby-1.9.1-p378 &gt; require 'base64'
        =&gt; true 
        ruby-1.9.1-p378 &gt; Base64.b64encode('blah')
        YmxhaA==
        =&gt; &quot;YmxhaA==\n&quot; 


        $ rails console
        Loading development environment (Rails 3.0.0.beta)
        ruby-1.9.1-p378 &gt; require 'base64'
        =&gt; [] 
        ruby-1.9.1-p378 &gt; Base64.b64encode('blah')
        NoMethodError: undefined method `b64encode' for Base64:Module
                from (irb):1
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:47:in `start'
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:8:in `start'
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
                from /Users/daniel/km/survey/srails/script/rails:10:in `require'
                from /Users/daniel/km/survey/srails/script/rails:10:in `&lt;main&gt;'</original-body>
  <latest-body>Rails 3.0.0.beta seems to break the base64 in the stdlib. See below.

I'm aware of ActiveSupport::Base64.encode64 in the meantime.

        $ irb
        ruby-1.9.1-p378 &gt; require 'base64'
        =&gt; true 
        ruby-1.9.1-p378 &gt; Base64.b64encode('blah')
        YmxhaA==
        =&gt; &quot;YmxhaA==\n&quot; 


        $ rails console
        Loading development environment (Rails 3.0.0.beta)
        ruby-1.9.1-p378 &gt; require 'base64'
        =&gt; [] 
        ruby-1.9.1-p378 &gt; Base64.b64encode('blah')
        NoMethodError: undefined method `b64encode' for Base64:Module
                from (irb):1
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:47:in `start'
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:8:in `start'
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
                from /Users/daniel/km/survey/srails/script/rails:10:in `require'
                from /Users/daniel/km/survey/srails/script/rails:10:in `&lt;main&gt;'</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails 3.0.0.beta seems to break the base64 in the stdlib. See
below.&lt;/p&gt;
&lt;p&gt;I'm aware of ActiveSupport::Base64.encode64 in the meantime.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    $ irb
    ruby-1.9.1-p378 &amp;gt; require 'base64'
    =&amp;gt; true 
    ruby-1.9.1-p378 &amp;gt; Base64.b64encode('blah')
    YmxhaA==
    =&amp;gt; &quot;YmxhaA==\n&quot; 


    $ rails console
    Loading development environment (Rails 3.0.0.beta)
    ruby-1.9.1-p378 &amp;gt; require 'base64'
    =&amp;gt; [] 
    ruby-1.9.1-p378 &amp;gt; Base64.b64encode('blah')
    NoMethodError: undefined method `b64encode' for Base64:Module
            from (irb):1
            from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:47:in `start'
            from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:8:in `start'
            from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands.rb:34:in `&amp;lt;top (required)&amp;gt;'
            from /Users/daniel/km/survey/srails/script/rails:10:in `require'
            from /Users/daniel/km/survey/srails/script/rails:10:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 3.0.0.beta seems to break the base64 in the stdlib. See below.

I'm aware of ActiveSupport::Base64.encode64 in the meantime.

        $ irb
        ruby-1.9.1-p378 &gt; require 'base64'
        =&gt; true 
        ruby-1.9.1-p378 &gt; Base64.b64encode('blah')
        YmxhaA==
        =&gt; &quot;YmxhaA==\n&quot; 


        $ rails console
        Loading development environment (Rails 3.0.0.beta)
        ruby-1.9.1-p378 &gt; require 'base64'
        =&gt; [] 
        ruby-1.9.1-p378 &gt; Base64.b64encode('blah')
        NoMethodError: undefined method `b64encode' for Base64:Module
                from (irb):1
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:47:in `start'
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:8:in `start'
                from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
                from /Users/daniel/km/survey/srails/script/rails:10:in `require'
                from /Users/daniel/km/survey/srails/script/rails:10:in `&lt;main&gt;'</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails 3.0.0.beta seems to break the base64 in the stdlib. See
below.&lt;/p&gt;
&lt;p&gt;I'm aware of ActiveSupport::Base64.encode64 in the meantime.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    $ irb
    ruby-1.9.1-p378 &amp;gt; require 'base64'
    =&amp;gt; true 
    ruby-1.9.1-p378 &amp;gt; Base64.b64encode('blah')
    YmxhaA==
    =&amp;gt; &quot;YmxhaA==\n&quot; 


    $ rails console
    Loading development environment (Rails 3.0.0.beta)
    ruby-1.9.1-p378 &amp;gt; require 'base64'
    =&amp;gt; [] 
    ruby-1.9.1-p378 &amp;gt; Base64.b64encode('blah')
    NoMethodError: undefined method `b64encode' for Base64:Module
            from (irb):1
            from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:47:in `start'
            from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands/console.rb:8:in `start'
            from /Users/daniel/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta/lib/rails/commands.rb:34:in `&amp;lt;top (required)&amp;gt;'
            from /Users/daniel/km/survey/srails/script/rails:10:in `require'
            from /Users/daniel/km/survey/srails/script/rails:10:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T05:06:42+00:00</created-at>
      <creator-id type="integer">36417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3961</number>
      <permalink>rails3-breaks-base64-stdlib</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;base64 stdlib&quot;</tag>
      <title>rails3 breaks base64 stdlib?</title>
      <updated-at type="datetime">2010-02-15T05:11:42+00:00</updated-at>
      <user-id type="integer">36417</user-id>
      <version type="integer">1</version>
      <user-name>eydaimon</user-name>
      <creator-name>eydaimon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3961</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T05:08:02+00:00</created-at>
      <creator-id type="integer">36417</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;base64 stdlib\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3961</number>
      <permalink>rails3-breaks-base64-stdlib</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>base64 stdlib</tag>
      <title>rails3 breaks base64 stdlib?</title>
      <updated-at type="datetime">2010-02-15T05:08:04+00:00</updated-at>
      <user-id type="integer">36417</user-id>
      <version type="integer">2</version>
      <user-name>eydaimon</user-name>
      <creator-name>eydaimon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3961</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 I can reproduce it in ruby 1.9.1 but it worked in ruby 1.8.7</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 I can reproduce it in ruby 1.9.1 but it worked in ruby
1.8.7&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-16T20:14:32+00:00</created-at>
      <creator-id type="integer">36417</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: base64 stdlib
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3961</number>
      <permalink>rails3-breaks-base64-stdlib</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>1.9.1 base64 stdlib</tag>
      <title>rails3 breaks base64 stdlib?</title>
      <updated-at type="datetime">2010-02-16T20:14:34+00:00</updated-at>
      <user-id type="integer">65239</user-id>
      <version type="integer">3</version>
      <user-name>Jens Fahnenbruck</user-name>
      <creator-name>eydaimon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3961</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I noticed the same thing, but it looks like this is a change between Ruby 1.8 and Ruby 1.9 and not a problem with Rails. According to the [Ruby 1.9 Rdoc](http://ruby-doc.org/ruby-1.9/classes/Base64.html &quot;Ruby 1.9 Rdoc&quot;), that method does not exist, while the [Ruby 1.8.6 Rdoc](http://ruby-doc.org/core/classes/Base64.html) does have b64encode.

In addition, a plain irb session in Ruby 1.9.1-p378 behaves identically to what you experienced in the rails console. Rails is mentioned in the stack trace because you used the rails console instead of irb.

@@@ ruby
$ irb
ruby-1.9.1-p378 &gt; require 'base64'
 =&gt; true 
ruby-1.9.1-p378 &gt; Base64.b64encode('blah')
NoMethodError: undefined method `b64encode' for Base64:Module
	from (irb):2
	from /Users/isomorphix/.rvm/rubies/ruby-1.9.1-p378/bin/irb:17:in `&lt;main&gt;'
ruby-1.9.1-p378 &gt; 
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I noticed the same thing, but it looks like this is a change
between Ruby 1.8 and Ruby 1.9 and not a problem with Rails.
According to the &lt;a href=
&quot;http://ruby-doc.org/ruby-1.9/classes/Base64.html&quot; title=
&quot;Ruby 1.9 Rdoc&quot;&gt;Ruby 1.9 Rdoc&lt;/a&gt;, that method does not exist,
while the &lt;a href=
&quot;http://ruby-doc.org/core/classes/Base64.html&quot;&gt;Ruby 1.8.6 Rdoc&lt;/a&gt;
does have b64encode.&lt;/p&gt;
&lt;p&gt;In addition, a plain irb session in Ruby 1.9.1-p378 behaves
identically to what you experienced in the rails console. Rails is
mentioned in the stack trace because you used the rails console
instead of irb.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;$ irb
ruby-1.9.1-p378 &amp;gt; require 'base64'
 =&amp;gt; true 
ruby-1.9.1-p378 &amp;gt; Base64.b64encode('blah')
NoMethodError: undefined method `b64encode' for Base64:Module
    from (irb):2
    from /Users/isomorphix/.rvm/rubies/ruby-1.9.1-p378/bin/irb:17:in `&amp;lt;main&amp;gt;'
ruby-1.9.1-p378 &amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-24T22:30:15+00:00</created-at>
      <creator-id type="integer">36417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3961</number>
      <permalink>rails3-breaks-base64-stdlib</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>1.9.1 base64 stdlib</tag>
      <title>rails3 breaks base64 stdlib?</title>
      <updated-at type="datetime">2010-02-24T22:30:21+00:00</updated-at>
      <user-id type="integer">29139</user-id>
      <version type="integer">4</version>
      <user-name>isomorphix</user-name>
      <creator-name>eydaimon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3961</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-26T22:50:17+00:00</created-at>
      <creator-id type="integer">36417</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3961</number>
      <permalink>rails3-breaks-base64-stdlib</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>1.9.1 base64 stdlib</tag>
      <title>rails3 breaks base64 stdlib?</title>
      <updated-at type="datetime">2010-03-26T22:50:22+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>eydaimon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3961</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Jose:

please add some explanation why it was marked invalid?

It's pretty clear I'm not able to use it, regardless of what isomorphix said, and I hope you didn't close it only based on what he said.

i.e. I can use it just fine in irb, but it does not behave as expected in rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jose:&lt;/p&gt;
&lt;p&gt;please add some explanation why it was marked invalid?&lt;/p&gt;
&lt;p&gt;It's pretty clear I'm not able to use it, regardless of what
isomorphix said, and I hope you didn't close it only based on what
he said.&lt;/p&gt;
&lt;p&gt;i.e. I can use it just fine in irb, but it does not behave as
expected in rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-27T02:02:12+00:00</created-at>
      <creator-id type="integer">36417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3961</number>
      <permalink>rails3-breaks-base64-stdlib</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>1.9.1 base64 stdlib</tag>
      <title>rails3 breaks base64 stdlib?</title>
      <updated-at type="datetime">2010-03-27T02:02:14+00:00</updated-at>
      <user-id type="integer">36417</user-id>
      <version type="integer">6</version>
      <user-name>eydaimon</user-name>
      <creator-name>eydaimon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3961</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
