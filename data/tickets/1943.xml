<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-11T16:41:04+00:00</created-at>
  <creator-id type="integer">17416</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1943</number>
  <permalink>nested-attributes-validations-circular-dependency</permalink>
  <priority type="integer">1203</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>code &quot;nested attributes&quot; nested_attributes_for</tag>
  <title>Nested attributes validations circular dependency</title>
  <updated-at type="datetime">2011-02-19T20:39:39+00:00</updated-at>
  <user-id type="integer">97507</user-id>
  <version type="integer">16</version>
  <user-name>TMaYaD</user-name>
  <creator-name>Tamer Salama</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When using @@@ruby accepts_nested_attributes_for @@@, a child object with a @@@ruby validates_presence_of :parent_id @@@ will not pass the validations upon saving the parent object.

(the child validation is done before the parent id is propagated to the child).

@@@ruby

class Person &lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &lt; ActiveRecord::Base
  belongs_to :person

  #Validating that a child has a parent
  validates_presence_of :person_id
end

p = Person.new(:name =&gt; &quot;Smith&quot;, :children_attributes =&gt; {&quot;new_1&quot; =&gt; {:name =&gt; &quot;John&quot;}})
p.valid? #=&gt; false
p.save  #false
p.children.first.errors.on(:person_id) #=&gt; &quot;can't be blank&quot; 

@@@</original-body>
  <latest-body>When using @@@ruby accepts_nested_attributes_for @@@, a child object with a @@@ruby validates_presence_of :parent_id @@@ will not pass the validations upon saving the parent object.

(the child validation is done before the parent id is propagated to the child).

@@@ruby

class Person &lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &lt; ActiveRecord::Base
  belongs_to :person

  #Validating that a child has a parent
  validates_presence_of :person_id
end

p = Person.new(:name =&gt; &quot;Smith&quot;, :children_attributes =&gt; {&quot;new_1&quot; =&gt; {:name =&gt; &quot;John&quot;}})
p.valid? #=&gt; false
p.save  #false
p.children.first.errors.on(:person_id) #=&gt; &quot;can't be blank&quot; 

@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When using @@@ruby accepts_nested_attributes_for @@@, a child
object with a @@@ruby validates_presence_of :parent_id @@@ will not
pass the validations upon saving the parent object.&lt;/p&gt;
&lt;p&gt;(the child validation is done before the parent id is propagated
to the child).&lt;/p&gt;
&lt;p&gt;@@@ruby&lt;/p&gt;
&lt;p&gt;class Person &amp;lt; ActiveRecord::Base has_many :children
accepts_nested_attributes_for :children end&lt;/p&gt;
&lt;p&gt;class Child &amp;lt; ActiveRecord::Base belongs_to :person&lt;/p&gt;
&lt;p&gt;#Validating that a child has a parent validates_presence_of
:person_id end&lt;/p&gt;
&lt;p&gt;p = Person.new(:name =&amp;gt; &quot;Smith&quot;, :children_attributes =&amp;gt;
{&quot;new_1&quot; =&amp;gt; {:name =&amp;gt; &quot;John&quot;}}) p.valid? #=&amp;gt; false p.save
#false p.children.first.errors.on(:person_id) #=&amp;gt; &quot;can't be
blank&quot;&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using `accepts_nested_attributes_for` , a child object with a `validates_presence_of :parent_id` will not pass the validations upon saving the parent object.

(the child validation is done before the parent id is propagated to the child).

@@@ ruby

class Person &lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &lt; ActiveRecord::Base
  belongs_to :person

  #Validating that a child has a parent
  validates_presence_of :person_id
end

p = Person.new(:name =&gt; &quot;Smith&quot;, :children_attributes =&gt; {&quot;new_1&quot; =&gt; {:name =&gt; &quot;John&quot;}})
p.valid? #=&gt; false
p.save  #false
p.children.first.errors.on(:person_id) #=&gt; &quot;can't be blank&quot; 

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;When using &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; , a child
object with a &lt;code&gt;validates_presence_of :parent_id&lt;/code&gt; will
not pass the validations upon saving the parent object.&lt;/p&gt;
&lt;p&gt;(the child validation is done before the parent id is propagated
to the child).&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;

class Person &amp;lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &amp;lt; ActiveRecord::Base
  belongs_to :person

  #Validating that a child has a parent
  validates_presence_of :person_id
end

p = Person.new(:name =&amp;gt; &amp;quot;Smith&amp;quot;, :children_attributes =&amp;gt; {&amp;quot;new_1&amp;quot; =&amp;gt; {:name =&amp;gt; &amp;quot;John&amp;quot;}})
p.valid? #=&amp;gt; false
p.save  #false
p.children.first.errors.on(:person_id) #=&amp;gt; &amp;quot;can't be blank&amp;quot; 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T16:41:04+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-02-11T16:48:36+00:00</updated-at>
      <user-id type="integer">17416</user-id>
      <version type="integer">1</version>
      <user-name>Tamer Salama</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-17T08:35:58+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-02-17T08:35:59+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">2</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I wonder how we could actually handle this. It would mean you'd have to save the parent _before_ the children in order to be able to validate the children. So simply calling parent.valid? would save it and then run the validations on the children. That all seems very complicated to me.

Also, this should already be tested in the framework and not something the developer should need to worry about. However, if you feel there are tests for scenarios missing let me know.

If you still feel a strong need to validate that after creation the foreign key is set, I would suggest adding an after_save callback which verifies this and if not rolls back the transaction.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I wonder how we could actually handle this. It would mean you'd
have to save the parent &lt;em&gt;before&lt;/em&gt; the children in order to be
able to validate the children. So simply calling parent.valid?
would save it and then run the validations on the children. That
all seems very complicated to me.&lt;/p&gt;
&lt;p&gt;Also, this should already be tested in the framework and not
something the developer should need to worry about. However, if you
feel there are tests for scenarios missing let me know.&lt;/p&gt;
&lt;p&gt;If you still feel a strong need to validate that after creation
the foreign key is set, I would suggest adding an after_save
callback which verifies this and if not rolls back the
transaction.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-22T16:24:11+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-02-22T16:24:15+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">3</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This could be resolved by validates_presence_of :parent, rather than validates_presence_of :parent_id. Unfortunately, Rails doesn't set the parent on building the association. Could that be changed?

Either that, or making validates_associated not be completely useless, and do what is implied by its name.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This could be resolved by validates_presence_of :parent, rather
than validates_presence_of :parent_id. Unfortunately, Rails doesn't
set the parent on building the association. Could that be
changed?&lt;/p&gt;
&lt;p&gt;Either that, or making validates_associated not be completely
useless, and do what is implied by its name.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T16:01:38+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-03-09T16:01:43+00:00</updated-at>
      <user-id type="integer">29778</user-id>
      <version type="integer">4</version>
      <user-name>Stephen Touset</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; This could be resolved by validates_presence_of :parent, rather than validates_presence_of :parent_id. Unfortunately, Rails doesn't set the parent on building the association. Could that be changed?

Hmm, having #build directly assign the parent sounds like a good idea in general. Maybe open a separate ticket for it or ask on the ML if there are any known issues with this?

&gt; Either that, or making validates_associated not be completely useless, and do what is implied by its name.

Why is validates_associated completely useless?</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;This could be resolved by validates_presence_of :parent, rather
than validates_presence_of :parent_id. Unfortunately, Rails doesn't
set the parent on building the association. Could that be
changed?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hmm, having #build directly assign the parent sounds like a good
idea in general. Maybe open a separate ticket for it or ask on the
ML if there are any known issues with this?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Either that, or making validates_associated not be completely
useless, and do what is implied by its name.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Why is validates_associated completely useless?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T18:32:03+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-03-09T18:32:05+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">5</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is there any update regarding the previous suggestion? (Having #build_child directly assign the parent to satisfy a 'validates_presence_of :parent without the need for the parent to already be saved?) 

I looked around on the mailing lists and did not see a ticket on this.  It seems like a promising approach, and it would allow for a resolution to this issue.

Based on the blog feedback, it seems more than a handful of people do use  validates_presence_of :parent_id in their belongs_to relationship models (I recall it being recommended in Dan Chak's excellent Enterprise Rails book) and it seems a shame to ask them to remove or recode that with an after_save callback just so this new feature can work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is there any update regarding the previous suggestion? (Having
#build_child directly assign the parent to satisfy a
'validates_presence_of :parent without the need for the parent to
already be saved?)&lt;/p&gt;
&lt;p&gt;I looked around on the mailing lists and did not see a ticket on
this. It seems like a promising approach, and it would allow for a
resolution to this issue.&lt;/p&gt;
&lt;p&gt;Based on the blog feedback, it seems more than a handful of
people do use validates_presence_of :parent_id in their belongs_to
relationship models (I recall it being recommended in Dan Chak's
excellent Enterprise Rails book) and it seems a shame to ask them
to remove or recode that with an after_save callback just so this
new feature can work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T05:00:31+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-03-12T05:00:35+00:00</updated-at>
      <user-id type="integer">34867</user-id>
      <version type="integer">6</version>
      <user-name>Michael Kintzer</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; Is there any update regarding the previous suggestion? (Having #build_child directly assign the parent to satisfy a 'validates_presence_of :parent without the need for the parent to already be saved?)
&gt; I looked around on the mailing lists and did not see a ticket on this. It seems like a promising approach, and it would allow for a resolution to this issue.

Nope, not that I know of. As I already suggested, open up a new ticket which requests this, or better yet, attach a patch.

&gt; Based on the blog feedback, it seems more than a handful of people do use validates_presence_of :parent_id in their belongs_to relationship models (I recall it being recommended in Dan Chak's excellent Enterprise Rails book) and it seems a shame to ask them to remove or recode that with an after_save callback just so this new feature can work.

This has nothing to do with any new feature, it just doesn't work this way.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;Is there any update regarding the previous suggestion? (Having
#build_child directly assign the parent to satisfy a
'validates_presence_of :parent without the need for the parent to
already be saved?) I looked around on the mailing lists and did not
see a ticket on this. It seems like a promising approach, and it
would allow for a resolution to this issue.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nope, not that I know of. As I already suggested, open up a new
ticket which requests this, or better yet, attach a patch.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Based on the blog feedback, it seems more than a handful of
people do use validates_presence_of :parent_id in their belongs_to
relationship models (I recall it being recommended in Dan Chak's
excellent Enterprise Rails book) and it seems a shame to ask them
to remove or recode that with an after_save callback just so this
new feature can work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This has nothing to do with any new feature, it just doesn't
work this way.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T08:39:46+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-03-12T08:39:48+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">7</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There might also be uniqueness conditions that you want to enforce, but these fail as per the discussion above. For example, if you were trying to save a course and enrolments and had a uniqueness condition on enrolments to prevent a student from enrolling in a course more than once: &lt;code&gt;validates_uniqueness_of :student_id, :scope =&gt; :course_id&lt;/code&gt;
This validation does not work when *creating* a new course (say, the user has accidentally added the same student twice on the course form they are submitting). This is an old issue - see: http://dev.rubyonrails.org/ticket/8774

Basically, it means that accepts_nested_attributes_for is not as nice and tidy as one would perhaps expect. Validations need to be handled by the DBMS.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There might also be uniqueness conditions that you want to
enforce, but these fail as per the discussion above. For example,
if you were trying to save a course and enrolments and had a
uniqueness condition on enrolments to prevent a student from
enrolling in a course more than once: &lt;code&gt;validates_uniqueness_of
:student_id, :scope =&amp;gt; :course_id&lt;/code&gt; This validation does
not work when &lt;em&gt;creating&lt;/em&gt; a new course (say, the user has
accidentally added the same student twice on the course form they
are submitting). This is an old issue - see: &lt;a href=&quot;http://dev.rubyonrails.org/ticket/8774&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basically, it means that accepts_nested_attributes_for is not as
nice and tidy as one would perhaps expect. Validations need to be
handled by the DBMS.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-22T23:14:35+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-04-22T23:14:39+01:00</updated-at>
      <user-id type="integer">54857</user-id>
      <version type="integer">8</version>
      <user-name>Chris Bartlett</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What to do? Just use DBMS index :unique =&gt; true? Or it's possible to write a patch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;What to do? Just use DBMS index :unique =&amp;gt; true? Or it's
possible to write a patch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-23T07:25:39+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-04-23T07:25:41+01:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">9</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>So it's not in any way related to nested attributes, right?

I was bitten by the same problem ( described here http://railsforum.com/viewtopic.php?pid=96990 ), and still don't get how to build, in the terms of the above example, the Person object with Child object in children association in memory, and then save them with one call. 

I.e. get the transaction safety and easier error reporting for building complex objects.</body>
      <body-html>&lt;div&gt;&lt;p&gt;So it's not in any way related to nested attributes, right?&lt;/p&gt;
&lt;p&gt;I was bitten by the same problem ( described here &lt;a href=
&quot;http://railsforum.com/viewtopic.php?pid=96990&quot;&gt;http://railsforum.com/viewtopic.php?pid=96990&lt;/a&gt;
), and still don't get how to build, in the terms of the above
example, the Person object with Child object in children
association in memory, and then save them with one call.&lt;/p&gt;
&lt;p&gt;I.e. get the transaction safety and easier error reporting for
building complex objects.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-13T16:50:49+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-05-13T16:50:55+01:00</updated-at>
      <user-id type="integer">43210</user-id>
      <version type="integer">10</version>
      <user-name>Evgeniy Dolzhenko</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>So what is the convention to solving this problem? Is there a workaround for the validates_presence_of :parent?</body>
      <body-html>&lt;div&gt;&lt;p&gt;So what is the convention to solving this problem? Is there a
workaround for the validates_presence_of :parent?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-20T06:43:21+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-05-20T06:43:27+01:00</updated-at>
      <user-id type="integer">40488</user-id>
      <version type="integer">11</version>
      <user-name>Melvin Ram</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Alright, I wrote up a bug on the suggested approach above:  https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2815-nested-models-build-should-directly-assign-the-parent</body>
      <body-html>&lt;div&gt;&lt;p&gt;Alright, I wrote up a bug on the suggested approach above:
&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2815-nested-models-build-should-directly-assign-the-parent&quot;&gt;
https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-18T21:56:04+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2009-06-18T21:56:12+01:00</updated-at>
      <user-id type="integer">60464</user-id>
      <version type="integer">12</version>
      <user-name>sarah (at ultrasaurus)</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think we still need to fix it.
In case of a nested resource with its own form, we might want to validate that the child does indeed belong to a parent even if its form is not nested in the parent.
At the very least we need to be able to provide a way to tell weather we are in the model from a nested form or individual form, so that we can validate accordingly.
the workaround I currently use in my apps is to assign an attribute ':nest' ( = self, ie, the parent )to each child before validation on parent and check for it in child</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think we still need to fix it.&lt;br&gt;
In case of a nested resource with its own form, we might want to
validate that the child does indeed belong to a parent even if its
form is not nested in the parent.&lt;br&gt;
At the very least we need to be able to provide a way to tell
weather we are in the model from a nested form or individual form,
so that we can validate accordingly.&lt;br&gt;
the workaround I currently use in my apps is to assign an attribute
':nest' ( = self, ie, the parent )to each child before validation
on parent and check for it in child&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-02T17:54:08+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2010-05-02T17:54:13+01:00</updated-at>
      <user-id type="integer">97507</user-id>
      <version type="integer">13</version>
      <user-name>TMaYaD</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-02T18:07:26+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: code
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code &quot;nested attributes&quot; nested_attributes_for</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2010-05-02T18:07:31+01:00</updated-at>
      <user-id type="integer">97507</user-id>
      <version type="integer">14</version>
      <user-name>TMaYaD</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I like Ari Epstine's workaround for this on the related ticket: https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2815-nested-models-build-should-directly-assign-the-parent

@@@ ruby
class Person &lt; ActiveRecord::Base

  has_many :children
  accepts_nested_attributes_for :children
  before_validation_on_create :initialize_children

  def initialize_children
    children.each { |c| c.parent = self }
  end

end

class Child &lt; ActiveRecord::Base

  belongs_to :person

end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I like Ari Epstine's workaround for this on the related ticket:
&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2815-nested-models-build-should-directly-assign-the-parent&quot;&gt;
https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets...&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base

  has_many :children
  accepts_nested_attributes_for :children
  before_validation_on_create :initialize_children

  def initialize_children
    children.each { |c| c.parent = self }
  end

end

class Child &amp;lt; ActiveRecord::Base

  belongs_to :person

end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-03T20:24:05+01:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 8406
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">1203</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code &quot;nested attributes&quot; nested_attributes_for</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2010-07-03T20:24:11+01:00</updated-at>
      <user-id type="integer">105713</user-id>
      <version type="integer">15</version>
      <user-name>Sean Corbett</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A variant to Ari Epstine's work around is using before_add callback
class Person &lt; ActiveRecord::Base
  has_many :children, :before_add =&gt; :set_nest
  accepts_nested_attributes_for :children
private
  def set_nest(child)
    child.person ||= self
  end
end

class Child &lt; ActiveRecord::Base
  belongs_to :person

  #Validating that a child has a parent
  validates_presence_of :person_id, :unless =&gt; Proc.new { |c| c.parent &amp;&amp; c.parent.new_record? }
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;A variant to Ari Epstine's work around is using before_add
callback&lt;br&gt;
class Person &amp;lt; ActiveRecord::Base&lt;br&gt;
has_many :children, :before_add =&amp;gt; :set_nest
accepts_nested_attributes_for :children private&lt;br&gt;
def set_nest(child)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;child.person ||= self&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;class Child &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :person&lt;/p&gt;
&lt;p&gt;#Validating that a child has a parent validates_presence_of
:person_id, :unless =&amp;gt; Proc.new { |c| c.parent &amp;amp;&amp;amp;
c.parent.new_record? } end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T20:39:16+00:00</created-at>
      <creator-id type="integer">17416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1943</number>
      <permalink>nested-attributes-validations-circular-dependency</permalink>
      <priority type="integer">1203</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>code &quot;nested attributes&quot; nested_attributes_for</tag>
      <title>Nested attributes validations circular dependency</title>
      <updated-at type="datetime">2011-02-19T20:39:39+00:00</updated-at>
      <user-id type="integer">97507</user-id>
      <version type="integer">16</version>
      <user-name>TMaYaD</user-name>
      <creator-name>Tamer Salama</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1943</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
</ticket>
