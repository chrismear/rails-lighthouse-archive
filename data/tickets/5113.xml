<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-12-15T09:57:54+00:00</created-at>
  <creator-id type="integer">24170</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5113</number>
  <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>action_dispatch action_view header mime missi &quot;rails 3.0.0.beta4&quot; &quot;rails 3.0.4&quot; &quot;rails 3.0.5&quot; template</tag>
  <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
  <updated-at type="datetime">2011-03-25T13:19:17+00:00</updated-at>
  <user-id type="integer">1514</user-id>
  <version type="integer">11</version>
  <user-name>Duff OMelia</user-name>
  <creator-name>VirtualFunction</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
  <priority-name>Low</priority-name>
  <original-body>I've been having a very odd error under Rails 3.0 which has taken me some time to isolate.

I recently moved a client's site to Rails 3.0 over the last couple of months, and my exception notifier had been giving me the occasional HTTP 5xx email regarding missing templates which were not missing at all. Each time I tried to access the offending URL/resource I had no issues. 

After careful inspection in the HTTP headers I noticed the Accept header was occasionally different on the machines reporting errors, it was named as &quot;hc/url;*/*&quot; instead of a proper list of accepted MIME types. After a quick stab at trying to forge these headers I little luck at replicating it (I think I was using curl).

After more investigation I managed to replicate this using the following:

@@@ ruby
  rails new test
  cd test
  # Create blank pages controller &amp; route here
  mkdir app/views/pages
  echo 'Hello World' &gt; app/views/pages/index.html.erb
  rails server -e production
@@@

Then under &quot;telnet localhost 3000&quot;

GET / HTTP/1.1
Accept: hc/url;*/*

The above won't work, however below works:

GET / HTTP/1.1
Accept: application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

I have found under some situations manipulating the &quot;Accept&quot; header under curl and browsers don't seem to replicate this perfectly, probably because other headers seem to have some influence in the way the request works possibly.

I hope this is replicate-able for you.

Cheers
J.</original-body>
  <latest-body>I've been having a very odd error under Rails 3.0 which has taken me some time to isolate.

I recently moved a client's site to Rails 3.0 over the last couple of months, and my exception notifier had been giving me the occasional HTTP 5xx email regarding missing templates which were not missing at all. Each time I tried to access the offending URL/resource I had no issues. 

After careful inspection in the HTTP headers I noticed the Accept header was occasionally different on the machines reporting errors, it was named as &quot;hc/url;*/*&quot; instead of a proper list of accepted MIME types. After a quick stab at trying to forge these headers I little luck at replicating it (I think I was using curl).

After more investigation I managed to replicate this using the following:

@@@ ruby
  rails new test
  cd test
  # Create blank pages controller &amp; route here
  mkdir app/views/pages
  echo 'Hello World' &gt; app/views/pages/index.html.erb
  rails server -e production
@@@

Then under &quot;telnet localhost 3000&quot;

GET / HTTP/1.1
Accept: hc/url;*/*

The above won't work, however below works:

GET / HTTP/1.1
Accept: application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

I have found under some situations manipulating the &quot;Accept&quot; header under curl and browsers don't seem to replicate this perfectly, probably because other headers seem to have some influence in the way the request works possibly.

I hope this is replicate-able for you.

Cheers
J.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've been having a very odd error under Rails 3.0 which has
taken me some time to isolate.&lt;/p&gt;
&lt;p&gt;I recently moved a client's site to Rails 3.0 over the last
couple of months, and my exception notifier had been giving me the
occasional HTTP 5xx email regarding missing templates which were
not missing at all. Each time I tried to access the offending
URL/resource I had no issues.&lt;/p&gt;
&lt;p&gt;After careful inspection in the HTTP headers I noticed the
Accept header was occasionally different on the machines reporting
errors, it was named as &quot;hc/url;&lt;em&gt;/&lt;/em&gt;&quot; instead of a proper
list of accepted MIME types. After a quick stab at trying to forge
these headers I little luck at replicating it (I think I was using
curl).&lt;/p&gt;
&lt;p&gt;After more investigation I managed to replicate this using the
following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  rails new test
  cd test
  # Create blank pages controller &amp;amp; route here
  mkdir app/views/pages
  echo 'Hello World' &amp;gt; app/views/pages/index.html.erb
  rails server -e production&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then under &quot;telnet localhost 3000&quot;&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;
Accept: hc/url;&lt;em&gt;/&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The above won't work, however below works:&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;
Accept:
application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,&lt;em&gt;/&lt;/em&gt;;q=0.5&lt;/p&gt;
&lt;p&gt;I have found under some situations manipulating the &quot;Accept&quot;
header under curl and browsers don't seem to replicate this
perfectly, probably because other headers seem to have some
influence in the way the request works possibly.&lt;/p&gt;
&lt;p&gt;I hope this is replicate-able for you.&lt;/p&gt;
&lt;p&gt;Cheers&lt;br&gt;
J.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've been having a very odd error under Rails 3.0 which has taken me some time to isolate.

I recently moved a client's site to Rails 3.0 over the last couple of months, and my exception notifier had been giving me the occasional HTTP 5xx email regarding missing templates which were not missing at all. Each time I tried to access the offending URL/resource I had no issues. 

After careful inspection in the HTTP headers I noticed the Accept header was occasionally different on the machines reporting errors, it was named as &quot;hc/url;*/*&quot; instead of a proper list of accepted MIME types. After a quick stab at trying to forge these headers I little luck at replicating it (I think I was using curl).

After more investigation I managed to replicate this using the following:

@@@ ruby
  rails new test
  cd test
  # Create blank pages controller &amp; route here
  mkdir app/views/pages
  echo 'Hello World' &gt; app/views/pages/index.html.erb
  rails server -e production
@@@

Then under &quot;telnet localhost 3000&quot;

GET / HTTP/1.1
Accept: hc/url;*/*

The above won't work, however below works:

GET / HTTP/1.1
Accept: application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

I have found under some situations manipulating the &quot;Accept&quot; header under curl and browsers don't seem to replicate this perfectly, probably because other headers seem to have some influence in the way the request works possibly.

I hope this is replicate-able for you.

Cheers
J.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've been having a very odd error under Rails 3.0 which has
taken me some time to isolate.&lt;/p&gt;
&lt;p&gt;I recently moved a client's site to Rails 3.0 over the last
couple of months, and my exception notifier had been giving me the
occasional HTTP 5xx email regarding missing templates which were
not missing at all. Each time I tried to access the offending
URL/resource I had no issues.&lt;/p&gt;
&lt;p&gt;After careful inspection in the HTTP headers I noticed the
Accept header was occasionally different on the machines reporting
errors, it was named as &quot;hc/url;&lt;em&gt;/&lt;/em&gt;&quot; instead of a proper
list of accepted MIME types. After a quick stab at trying to forge
these headers I little luck at replicating it (I think I was using
curl).&lt;/p&gt;
&lt;p&gt;After more investigation I managed to replicate this using the
following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  rails new test
  cd test
  # Create blank pages controller &amp;amp; route here
  mkdir app/views/pages
  echo 'Hello World' &amp;gt; app/views/pages/index.html.erb
  rails server -e production&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then under &quot;telnet localhost 3000&quot;&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;
Accept: hc/url;&lt;em&gt;/&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The above won't work, however below works:&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;
Accept:
application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,&lt;em&gt;/&lt;/em&gt;;q=0.5&lt;/p&gt;
&lt;p&gt;I have found under some situations manipulating the &quot;Accept&quot;
header under curl and browsers don't seem to replicate this
perfectly, probably because other headers seem to have some
influence in the way the request works possibly.&lt;/p&gt;
&lt;p&gt;I hope this is replicate-able for you.&lt;/p&gt;
&lt;p&gt;Cheers&lt;br&gt;
J.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T17:50:11+01:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view header mime missi &quot;rails 3.0.0.beta4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2010-07-14T17:51:02+01:00</updated-at>
      <user-id type="integer">24170</user-id>
      <version type="integer">1</version>
      <user-name>VirtualFunction</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We're seeing this as well since updating to 3.0 - on 3.0.3 and it still happens.

In addition to `hc/url`, a small number of the errors instead mention `text/*`, and yet a few others have `ws/ws` as the requested format.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We're seeing this as well since updating to 3.0 - on 3.0.3 and
it still happens.&lt;/p&gt;
&lt;p&gt;In addition to &lt;code&gt;hc/url&lt;/code&gt;, a small number of the errors
instead mention &lt;code&gt;text/*&lt;/code&gt;, and yet a few others have
&lt;code&gt;ws/ws&lt;/code&gt; as the requested format.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-14T19:38:13+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view header mime missi &quot;rails 3.0.0.beta4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2010-12-14T19:38:19+00:00</updated-at>
      <user-id type="integer">61999</user-id>
      <version type="integer">2</version>
      <user-name>mpd</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In the given case there is hardly anything rails can do. One way to handle such cases would be to have a before filter and for bad HTTP_ACCEPT_HEADER you can set params[:format] = 'html' and then html will be the response content-type.

More on this topic at http://neeraj.name/2010/11/23/mime-type-resolution-in-rails.html</body>
      <body-html>&lt;div&gt;&lt;p&gt;In the given case there is hardly anything rails can do. One way
to handle such cases would be to have a before filter and for bad
HTTP_ACCEPT_HEADER you can set params[:format] = 'html' and then
html will be the response content-type.&lt;/p&gt;
&lt;p&gt;More on this topic at &lt;a href=
&quot;http://neeraj.name/2010/11/23/mime-type-resolution-in-rails.html&quot;&gt;http://neeraj.name/2010/11/23/mime-type-resolution-in-rails.html&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-14T21:01:22+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view header mime missi &quot;rails 3.0.0.beta4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2010-12-14T21:01:42+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In my case the HTTP_ACCEPT header is coming in from the browser as &quot;`hc/url;*/*`&quot; which doesn't parse I guess. It shows up as `:formats=&gt;[:&quot;hc/url;*/*&quot;]` in the exception output. I've captured this in a failing test in my app. Changing the semicolon to a comma 'solves' it, but I don't know enough about HTTP_ACCEPT parsing to know where the problem is.

The ws/ws header is &quot;`*/*, ws/ws`&quot;, with the space, which parses to `:formats=&gt;[:&quot;ws/ws&quot;, :&quot;*/*&quot;]`, and the last is &quot;`text/*`&quot; by itself (`:formats=&gt;[:&quot;text/*&quot;])`.

The action itself just sets a single instance var.

Forcing the format to html in a before filter as suggested isn't working for me. Am I just doing it wrong?</body>
      <body-html>&lt;div&gt;&lt;p&gt;In my case the HTTP_ACCEPT header is coming in from the browser
as &quot;&lt;code&gt;hc/url;*/*&lt;/code&gt;&quot; which doesn't parse I guess. It shows
up as &lt;code&gt;:formats=&amp;gt;[:&quot;hc/url;*/*&quot;]&lt;/code&gt; in the exception
output. I've captured this in a failing test in my app. Changing
the semicolon to a comma 'solves' it, but I don't know enough about
HTTP_ACCEPT parsing to know where the problem is.&lt;/p&gt;
&lt;p&gt;The ws/ws header is &quot;&lt;code&gt;*/*, ws/ws&lt;/code&gt;&quot;, with the space,
which parses to &lt;code&gt;:formats=&amp;gt;[:&quot;ws/ws&quot;, :&quot;*/*&quot;]&lt;/code&gt;, and
the last is &quot;&lt;code&gt;text/*&lt;/code&gt;&quot; by itself
(&lt;code&gt;:formats=&amp;gt;[:&quot;text/*&quot;])&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The action itself just sets a single instance var.&lt;/p&gt;
&lt;p&gt;Forcing the format to html in a before filter as suggested isn't
working for me. Am I just doing it wrong?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-14T23:29:36+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view header mime missi &quot;rails 3.0.0.beta4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2010-12-14T23:29:48+00:00</updated-at>
      <user-id type="integer">61999</user-id>
      <version type="integer">4</version>
      <user-name>mpd</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can't edit my previous, but the juice that worked for me is `self.formats = [:html]`</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can't edit my previous, but the juice that worked for me is
&lt;code&gt;self.formats = [:html]&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-14T23:49:21+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view header mime missi &quot;rails 3.0.0.beta4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2010-12-14T23:49:33+00:00</updated-at>
      <user-id type="integer">61999</user-id>
      <version type="integer">5</version>
      <user-name>mpd</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, the way I've been getting round this for the last 5 or so months I've been on Rails 3 I've used this:

request.format = :html if request.format.to_s.include? 'hc/url'

as part of a before filter. 

I also have issues with text/* occasionally too.

What I've not figured out is why the browser sends these odd content types... It seems somewhat random when it does happen (or from what I can see). I can't remember what browsers these happens on , I seem to recall Firefox on Windows being the main offender.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, the way I've been getting round this for the last 5 or so
months I've been on Rails 3 I've used this:&lt;/p&gt;
&lt;p&gt;request.format = :html if request.format.to_s.include?
'hc/url'&lt;/p&gt;
&lt;p&gt;as part of a before filter.&lt;/p&gt;
&lt;p&gt;I also have issues with text/* occasionally too.&lt;/p&gt;
&lt;p&gt;What I've not figured out is why the browser sends these odd
content types... It seems somewhat random when it does happen (or
from what I can see). I can't remember what browsers these happens
on , I seem to recall Firefox on Windows being the main
offender.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T00:52:18+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view header mime missi &quot;rails 3.0.0.beta4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2010-12-15T00:52:34+00:00</updated-at>
      <user-id type="integer">24170</user-id>
      <version type="integer">6</version>
      <user-name>VirtualFunction</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>off as just a plain bracelet and then &lt;strong&gt;&lt;A href=&quot;http://www.ukonlinejewelry.com&quot;&gt;buy cheap pandora jewelry&lt;/A&gt;&lt;/strong&gt;
 the fun starts as you select the beads &lt;strong&gt;&lt;A href=&quot;http://www.ukonlinejewelry.com&quot;&gt;buy pandora beads&lt;/A&gt;&lt;/strong&gt;
 to go on it. There are many colors and shapes  to choose from, you could &lt;strong&gt;&lt;A href=&quot;http://www.ukonlinejewelry.com&quot;&gt;cheap pandora beads&lt;/A&gt;&lt;/strong&gt; even add your initials. 
Lets hope these Christmas gift ideas help &lt;strong&gt;&lt;A href=&quot;http://www.ukonlinejewelry.com&quot;&gt;authentic pandora charms&lt;/A&gt;&lt;/strong&gt;
 you when doing your shopping and maybe the women in your life may find a Coach purse, ToyWatch or Pandora bracelet under their tree.</body>
      <body-html>&lt;div&gt;&lt;p&gt;off as just a plain bracelet and then &lt;strong&gt;&lt;a href=
&quot;http://www.ukonlinejewelry.com&quot;&gt;buy cheap pandora
jewelry&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
the fun starts as you select the beads &lt;strong&gt;&lt;a href=
&quot;http://www.ukonlinejewelry.com&quot;&gt;buy pandora beads&lt;/a&gt;&lt;/strong&gt; to
go on it. There are many colors and shapes to choose from, you
could &lt;strong&gt;&lt;a href=&quot;http://www.ukonlinejewelry.com&quot;&gt;cheap
pandora beads&lt;/a&gt;&lt;/strong&gt; even add your initials. Lets hope these
Christmas gift ideas help &lt;strong&gt;&lt;a href=
&quot;http://www.ukonlinejewelry.com&quot;&gt;authentic pandora
charms&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
you when doing your shopping and maybe the women in your life may
find a Coach purse, ToyWatch or Pandora bracelet under their
tree.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T07:40:58+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view header mime missi &quot;rails 3.0.0.beta4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2010-12-15T09:57:54+00:00</updated-at>
      <user-id type="integer">129082</user-id>
      <version type="integer">7</version>
      <user-name>mqf1989</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Same problems here on Rails (at least versions 3.0.0 to 3.0.4). Especially crawlers are known to use different HTTP ACCEPT headers than most web browsers. The following appear quite often:
* &quot;text/*&quot;
* &quot;image/jpeg&quot;, &quot;image/pjpeg&quot;, &quot;image/png&quot;, &quot;image/gif&quot;

For &quot;text/*&quot; Rails does not have any support, i.e. it does not recognize it. This is a bug as it is a valid HTTP ACCEPT header to request only text MIME types, see e.g. http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html. I created a separate ticket for this, see: #6458.

In the second case Rails should return a 406 (Not Acceptable) if the respond_to block does not respond to any of the requested MIME types. Rails throws a missing template instead, so this is a different bug than the first case describes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Same problems here on Rails (at least versions 3.0.0 to 3.0.4).
Especially crawlers are known to use different HTTP ACCEPT headers
than most web browsers. The following appear quite often:&lt;br&gt;
&lt;em&gt;&quot;text/&lt;/em&gt;&quot; * &quot;image/jpeg&quot;, &quot;image/pjpeg&quot;, &quot;image/png&quot;,
&quot;image/gif&quot;&lt;/p&gt;
&lt;p&gt;For &quot;text/*&quot; Rails does not have any support, i.e. it does not
recognize it. This is a bug as it is a valid HTTP ACCEPT header to
request only text MIME types, see e.g. &lt;a href=
&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&quot;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&lt;/a&gt;.
I created a separate ticket for this, see: &lt;a href=
&quot;/projects/8994/tickets/6458&quot; title=&quot;Ticket #6458&quot;&gt;#6458&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the second case Rails should return a 406 (Not Acceptable) if
the respond_to block does not respond to any of the requested MIME
types. Rails throws a missing template instead, so this is a
different bug than the first case describes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-21T10:37:29+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: action_view header mime missi &quot;rails 3.0.0.beta4&quot; template
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_dispatch action_view header mime missi &quot;rails 3.0.0.beta4&quot; &quot;rails 3.0.4&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2011-02-21T10:37:41+00:00</updated-at>
      <user-id type="integer">24008</user-id>
      <version type="integer">8</version>
      <user-name>Roel van der Hoorn</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm seeing the same issue, as well, in multiple Rails 3 applications.  Some are Rails 3.0.3, some are 3.0.5.  In all cases, making a simple GET request using the following curl statement causes 500 errors:

    curl -v -H &quot;Accept: */*;q=0.1&quot; http://example.com/
    curl -v -H &quot;Accept: */*; q=0.5, application/xml&quot; http://example.com/
    curl -v -H &quot;Accept: text/*&quot; http://example.com/

It'd be nice if Rails would recognize an invalid or unhandled Accept-type and failover to the default response type (generally, HTML when listed by priority in respond_to blocks).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm seeing the same issue, as well, in multiple Rails 3
applications. Some are Rails 3.0.3, some are 3.0.5. In all cases,
making a simple GET request using the following curl statement
causes 500 errors:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;curl -v -H &quot;Accept: */*;q=0.1&quot; http://example.com/
curl -v -H &quot;Accept: */*; q=0.5, application/xml&quot; http://example.com/
curl -v -H &quot;Accept: text/*&quot; http://example.com/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It'd be nice if Rails would recognize an invalid or unhandled
Accept-type and failover to the default response type (generally,
HTML when listed by priority in respond_to blocks).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T13:59:21+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: action_dispatch action_view header mime missi &quot;rails 3.0.0.beta4&quot; &quot;rails 3.0.4&quot; template
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_dispatch action_view header mime missi &quot;rails 3.0.0.beta4&quot; &quot;rails 3.0.4&quot; &quot;rails 3.0.5&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2011-03-24T13:59:40+00:00</updated-at>
      <user-id type="integer">18798</user-id>
      <version type="integer">9</version>
      <user-name>Nathaniel Bibler</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm seeing the same thing Nathaniel Bibler's seeing.

@@@ bash
curl -H &quot;Accept: text/*&quot; http://example.com
curl -H &quot;Accept: */*, application/youtube-client&quot; http://example.com
@@@

Both raising ActionView::MissingTemplate exceptions.  Using rails 3.0.4.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm seeing the same thing Nathaniel Bibler's seeing.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;curl -H &quot;Accept: text/*&quot; http://example.com
curl -H &quot;Accept: */*, application/youtube-client&quot; http://example.com&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Both raising ActionView::MissingTemplate exceptions. Using rails
3.0.4.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T22:01:30+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_dispatch action_view header mime missi &quot;rails 3.0.0.beta4&quot; &quot;rails 3.0.4&quot; &quot;rails 3.0.5&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2011-03-24T22:01:59+00:00</updated-at>
      <user-id type="integer">1514</user-id>
      <version type="integer">10</version>
      <user-name>Duff OMelia</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Would there be a downside for Rails to return a 406 (Not Acceptable) if we're unable handle the Accept header?  (Like Roel suggested)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Would there be a downside for Rails to return a 406 (Not
Acceptable) if we're unable handle the Accept header? (Like Roel
suggested)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-25T13:18:58+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5113</number>
      <permalink>missingtemplate-issues-in-rails-30-due-to-badly-set-mime-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_dispatch action_view header mime missi &quot;rails 3.0.0.beta4&quot; &quot;rails 3.0.4&quot; &quot;rails 3.0.5&quot; template</tag>
      <title>MissingTemplate issues in Rails 3.0 due to badly set MIME types...</title>
      <updated-at type="datetime">2011-03-25T13:19:17+00:00</updated-at>
      <user-id type="integer">1514</user-id>
      <version type="integer">11</version>
      <user-name>Duff OMelia</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5113</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
