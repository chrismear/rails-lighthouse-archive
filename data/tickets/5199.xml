<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-08T23:12:01+00:00</created-at>
  <creator-id type="integer">108502</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5199</number>
  <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>respond_with</tag>
  <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
  <updated-at type="datetime">2010-11-08T23:12:01+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">20</version>
  <user-name>Repository</user-name>
  <creator-name>Nikolay Belous</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>RVM + Ruby 1.9.2 + Rails 3.0.0.beta4

@@@
class UsersController &lt; ApplicationController
  respond_to :json, :xml

  def create #POST users.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def show #GET users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def update #PUT users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot;
  end

  def destroy #DELETE users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot; 
  end
end
@@@

I think this is very strange.
For example I want to return error description in the requested format.</original-body>
  <latest-body>RVM + Ruby 1.9.2 + Rails 3.0.0.beta4

@@@
class UsersController &lt; ApplicationController
  respond_to :json, :xml

  def create #POST users.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def show #GET users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def update #PUT users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot;
  end

  def destroy #DELETE users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot; 
  end
end
@@@

I think this is very strange.
For example I want to return error description in the requested format.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;RVM + Ruby 1.9.2 + Rails 3.0.0.beta4&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class UsersController &amp;lt; ApplicationController
  respond_to :json, :xml

  def create #POST users.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def show #GET users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def update #PUT users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot;
  end

  def destroy #DELETE users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot; 
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think this is very strange.&lt;br&gt;
For example I want to return error description in the requested
format.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>RVM + Ruby 1.9.2 + Rails 3.0.0.beta4

@@@
class UsersController &lt; ApplicationController
  respond_to :json, :xml

  def create #POST users.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def show #GET users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def update #PUT users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot;
  end

  def destroy #DELETE users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot; 
  end
end
@@@

I think this is very strange.
For example I want to return error description in the requested format.</body>
      <body-html>&lt;div&gt;&lt;p&gt;RVM + Ruby 1.9.2 + Rails 3.0.0.beta4&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class UsersController &amp;lt; ApplicationController
  respond_to :json, :xml

  def create #POST users.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def show #GET users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns data
  end

  def update #PUT users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot;
  end

  def destroy #DELETE users/1.json
    @user = User.first
    respond_with(@user) #200 OK, returns &quot; &quot; 
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think this is very strange.&lt;br&gt;
For example I want to return error description in the requested
format.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-26T16:40:20+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-07-26T16:40:22+01:00</updated-at>
      <user-id type="integer">108502</user-id>
      <version type="integer">1</version>
      <user-name>Nikolay Belous</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Respond with does not save your resource. You need to call .save or update_attributes before calling respond_with accordingly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Respond with does not save your resource. You need to call .save
or update_attributes before calling respond_with accordingly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-26T16:52:13+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-07-26T16:52:17+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is just an example.
Real code below

@@@
  def create
    @user = User.new(params[:user])
    if can? :create, @user
      @user.save
      respond_with(@user)
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end

  def show
    @user = User.find(params[:id])
    if can? :read, @user
      respond_with(@user)
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end

  def update
    @user = User.find(:id =&gt; params[:id])
    if can? :update, @user
      @user.update_attributes(params[:user])
      respond_with(@user)
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end

  def destroy
    @user = User.find(params[:id])
    if can? :destroy, @user
      @user.destroy
      respond_with(I18n.t('user.successful.accountDestroyed'))
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end
@@@

If I try to remove non-existent user I get &quot; &quot; rather than the error in JSON format</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is just an example.&lt;br&gt;
Real code below&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def create
    @user = User.new(params[:user])
    if can? :create, @user
      @user.save
      respond_with(@user)
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end

  def show
    @user = User.find(params[:id])
    if can? :read, @user
      respond_with(@user)
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end

  def update
    @user = User.find(:id =&amp;gt; params[:id])
    if can? :update, @user
      @user.update_attributes(params[:user])
      respond_with(@user)
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end

  def destroy
    @user = User.find(params[:id])
    if can? :destroy, @user
      @user.destroy
      respond_with(I18n.t('user.successful.accountDestroyed'))
    else
      raise SWC::Exceptions.new(I18n.t('user.errors.insufficientAccountPermissions'))
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I try to remove non-existent user I get &quot; &quot; rather than the
error in JSON format&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-26T17:04:03+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-07-26T17:04:07+01:00</updated-at>
      <user-id type="integer">108502</user-id>
      <version type="integer">3</version>
      <user-name>Nikolay Belous</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Cheap balenciaga purses, &lt;a href='http://www.poboshop.com'&gt;balenciaga handbags&lt;/a&gt;, balenciaga wallets onsale, 
Luxuy handbags, purses, high quality at low price at poboshop.com.
&lt;a href='http://www.balenciagaonsale.com'&gt;balenciaga bags&lt;/a&gt;

The most cool online shoes shop where you can find the most fashion designers shoes, include
&lt;a href='http://www.fashionshoesmart.com'&gt;Manolo Blahnik Shoes&lt;/a&gt;, &lt;a href='http://www.fashionshoesmart.com'&gt;Jimmy Choo Shoes&lt;/a&gt;, Christian Louboutin shoes and more. 
we offer high quality highheels at low price.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cheap balenciaga purses, &lt;a href=
&quot;http://www.poboshop.com&quot;&gt;balenciaga handbags&lt;/a&gt;, balenciaga
wallets onsale,&lt;br&gt;
Luxuy handbags, purses, high quality at low price at
poboshop.com.&lt;br&gt;
&lt;a href=&quot;http://www.balenciagaonsale.com&quot;&gt;balenciaga bags&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The most cool online shoes shop where you can find the most
fashion designers shoes, include&lt;br&gt;
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Manolo Blahnik Shoes&lt;/a&gt;,
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Jimmy Choo Shoes&lt;/a&gt;,
Christian Louboutin shoes and more.&lt;br&gt;
we offer high quality highheels at low price.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-27T15:15:51+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-07-27T17:39:53+01:00</updated-at>
      <user-id type="integer">109040</user-id>
      <version type="integer">4</version>
      <user-name>matin</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry to resurrect this ticket but what is the solution here? As far as I can see both update and destroy should return something for say a json response as otherwise the client will error, not being able to pass an empty string as json.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry to resurrect this ticket but what is the solution here? As
far as I can see both update and destroy should return something
for say a json response as otherwise the client will error, not
being able to pass an empty string as json.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-11T22:03:05+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-08-11T22:03:06+01:00</updated-at>
      <user-id type="integer">63543</user-id>
      <version type="integer">5</version>
      <user-name>Jamie Hill</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry, should have said that to get around this I am currently using this for the json response:

    render :text =&gt; '{}', :status =&gt; :ok

This is the only way to get Rails to play nice with libraries such as http://github.com/benpickles/js-model</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, should have said that to get around this I am currently
using this for the json response:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;render :text =&amp;gt; '{}', :status =&amp;gt; :ok&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is the only way to get Rails to play nice with libraries
such as &lt;a href=
&quot;http://github.com/benpickles/js-model&quot;&gt;http://github.com/benpickles/js-model&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-11T22:06:41+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-08-11T22:06:45+01:00</updated-at>
      <user-id type="integer">63543</user-id>
      <version type="integer">6</version>
      <user-name>Jamie Hill</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I ran into this issue today too. As is, respond_with is not helpful for any API that expects JSON to be returned.

This ticket should be reopened.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I ran into this issue today too. As is, respond_with is not
helpful for any API that expects JSON to be returned.&lt;/p&gt;
&lt;p&gt;This ticket should be reopened.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-20T18:32:31+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-08-20T18:32:33+01:00</updated-at>
      <user-id type="integer">18068</user-id>
      <version type="integer">7</version>
      <user-name>Brandon Keepers</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I cannot see what is the issue. Can someone post a better example? Maybe a failing patch to Rails test suite?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I cannot see what is the issue. Can someone post a better
example? Maybe a failing patch to Rails test suite?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-20T18:46:37+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-08-20T18:46:38+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you try writing a test for this? I think you should try writing it in &lt;tt&gt;actionpack/test/controller/mime_responds_test.rb&lt;/tt&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you try writing a test for this? I think you should try
writing it in
&lt;tt&gt;actionpack/test/controller/mime_responds_test.rb&lt;/tt&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-25T03:25:39+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-08-25T03:25:42+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">9</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T07:46:29+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-09-02T07:46:32+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The issue with this is if you are using a strict JSON parser on the client side it will try to parse &quot; &quot; and fail. This really depends on the client you are using. For example if I make an ajax put request with jQuery to an action that users respond_with it will always fail because it cannot parse the returned &quot; &quot;

@@@ javascript
$.ajax({
  url: 'http://localhost:3000/users/1.json',
  dataType: 'json',
  type: 'PUT',
  data: {
    user: {
      name: &quot;something new&quot;
    }
  },
  error: function(XMLHttpRequest, textStatus, errorThrown) {
     alert('error');
  },
  complete: function() {alert('complete');}
});
@@@

The error callback will always get thrown because it fails to parse the response of &quot; &quot;.

Personally I think Rails is behaving correctly; if it is a successful update there is no reason to return the object again since you already have it, head ok should be good enough.

The solution I have for this is on the jQuery side, I've added this line to my application.js and everything works perfectly:

@@@ javascript
jQuery.ajaxSetup({ dataFilter: function(data, type){ return (!data || jQuery.trim(data)==&quot;&quot;) ? &quot;{}&quot; : data; } });
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The issue with this is if you are using a strict JSON parser on
the client side it will try to parse &quot; &quot; and fail. This really
depends on the client you are using. For example if I make an ajax
put request with jQuery to an action that users respond_with it
will always fail because it cannot parse the returned &quot; &quot;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;javascript&quot;&gt;$.ajax({
  url: 'http://localhost:3000/users/1.json',
  dataType: 'json',
  type: 'PUT',
  data: {
    user: {
      name: &quot;something new&quot;
    }
  },
  error: function(XMLHttpRequest, textStatus, errorThrown) {
     alert('error');
  },
  complete: function() {alert('complete');}
});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The error callback will always get thrown because it fails to
parse the response of &quot; &quot;.&lt;/p&gt;
&lt;p&gt;Personally I think Rails is behaving correctly; if it is a
successful update there is no reason to return the object again
since you already have it, head ok should be good enough.&lt;/p&gt;
&lt;p&gt;The solution I have for this is on the jQuery side, I've added
this line to my application.js and everything works perfectly:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;javascript&quot;&gt;jQuery.ajaxSetup({ dataFilter: function(data, type){ return (!data || jQuery.trim(data)==&quot;&quot;) ? &quot;{}&quot; : data; } });&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-13T01:06:49+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-09-13T01:06:51+01:00</updated-at>
      <user-id type="integer">31718</user-id>
      <version type="integer">11</version>
      <user-name>jduff</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a minimal test case.

@@@ ruby
## Rails 3 doesn't seem to handle PUT methods correctly.

## routing

FruitApplication::Application.routes.draw do
  resources :fruits do
    member do
      put :peel  # A HTTP PUT method that will map to fruits/:id/peel
    end
  end
end

## controller

class FruitsController &lt; ApplicationController
  respond_to :json
  def peel
    respond_with :status =&gt; :not_found    # This appears to be ignored and 200 is returned.
  end
end

## spec

describe FruitController do
  subject { @controller }
  before(:each) { put :peel, :id =&gt; 1234 }
  it { should respond_with :not_found }
end

# Failure/Error: it { should respond_with :not_found }
# Expected response to be a 404, but was 200
# # ./spec/controllers/fruit_controller_spec.rb:3
# # /home/johnf/.rvm/gems/ruby-1.8.7-p299@project-getaroom/gems/activesupport-3.0.0/lib/active_support/dependencies.rb:239:in `inject'
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a minimal test case.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;## Rails 3 doesn't seem to handle PUT methods correctly.

## routing

FruitApplication::Application.routes.draw do
  resources :fruits do
    member do
      put :peel  # A HTTP PUT method that will map to fruits/:id/peel
    end
  end
end

## controller

class FruitsController &amp;lt; ApplicationController
  respond_to :json
  def peel
    respond_with :status =&amp;gt; :not_found    # This appears to be ignored and 200 is returned.
  end
end

## spec

describe FruitController do
  subject { @controller }
  before(:each) { put :peel, :id =&amp;gt; 1234 }
  it { should respond_with :not_found }
end

# Failure/Error: it { should respond_with :not_found }
# Expected response to be a 404, but was 200
# # ./spec/controllers/fruit_controller_spec.rb:3
# # /home/johnf/.rvm/gems/ruby-1.8.7-p299@project-getaroom/gems/activesupport-3.0.0/lib/active_support/dependencies.rb:239:in `inject'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-18T17:50:04+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-09-18T17:50:05+01:00</updated-at>
      <user-id type="integer">103884</user-id>
      <version type="integer">12</version>
      <user-name>fj</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please add a test case to Rails suite?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please add a test case to Rails suite?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-18T19:14:45+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-09-18T19:14:46+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">13</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've ran into this issue recently as well.

The problem is with the Responder#api_behavior method:

@@@ ruby
def api_behavior(error)
  raise error unless resourceful?

  if get?
    display resource
  elsif has_errors?
    display resource.errors, :status =&gt; :unprocessable_entity
  elsif post?
    display resource, :status =&gt; :created, :location =&gt; api_location
  else
    head :ok
  end
end
@@@

In this case for PUT and DELETE verbs it does &quot;head :ok&quot; that, because of some strange error in some old version of Safari, actually returns a single space instead of empty body (http://dev.rubyonrails.org/changeset/1818).

For PUT verb it *could* simply return an updated resource in specified format - just like for POST, but with different status. However, I'm not sure if it's necessary.

For DELETE verb I guess it should return a valid, empty document - whatever this means for specified format. For JSON, &quot;&quot; and &quot; &quot; strings are not considered valid by native JSON parser in WebKit. However, &quot;{}&quot; is valid. Maybe we could introduce a default **&quot;empty _ #{format} _ resource&quot;** methods for JSON (not sure about XML) that would return a valid document as a string. The Responder#api_behavior method would simply check if responder responds to this method and render an empty resource using &quot;render :text&quot;, otherwise it would fallback to &quot;head :ok&quot;. This would allow users to add new methods to Responder class for whatever formats they use.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've ran into this issue recently as well.&lt;/p&gt;
&lt;p&gt;The problem is with the Responder#api_behavior method:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def api_behavior(error)
  raise error unless resourceful?

  if get?
    display resource
  elsif has_errors?
    display resource.errors, :status =&amp;gt; :unprocessable_entity
  elsif post?
    display resource, :status =&amp;gt; :created, :location =&amp;gt; api_location
  else
    head :ok
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this case for PUT and DELETE verbs it does &quot;head :ok&quot; that,
because of some strange error in some old version of Safari,
actually returns a single space instead of empty body (&lt;a href=
&quot;http://dev.rubyonrails.org/changeset/1818)&quot;&gt;http://dev.rubyonrails.org/changeset/1818)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For PUT verb it &lt;em&gt;could&lt;/em&gt; simply return an updated resource
in specified format - just like for POST, but with different
status. However, I'm not sure if it's necessary.&lt;/p&gt;
&lt;p&gt;For DELETE verb I guess it should return a valid, empty document
- whatever this means for specified format. For JSON, &quot;&quot; and &quot; &quot;
strings are not considered valid by native JSON parser in WebKit.
However, &quot;{}&quot; is valid. Maybe we could introduce a default
&lt;strong&gt;&quot;empty _ #{format} _ resource&quot;&lt;/strong&gt; methods for JSON
(not sure about XML) that would return a valid document as a
string. The Responder#api_behavior method would simply check if
responder responds to this method and render an empty resource
using &quot;render :text&quot;, otherwise it would fallback to &quot;head :ok&quot;.
This would allow users to add new methods to Responder class for
whatever formats they use.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-03T18:12:46+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-10-03T18:12:49+01:00</updated-at>
      <user-id type="integer">22106</user-id>
      <version type="integer">14</version>
      <user-name>Szymon Nowak</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can someone please check if this is still a bug in Safari? If not, removing the Safari hax is the best way to handle this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can someone please check if this is still a bug in Safari? If
not, removing the Safari hax is the best way to handle this
issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-03T18:33:28+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-10-03T18:33:31+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">15</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure if this will actually solve this problem for JSON format, because empty string is still considered as invalid JSON - that's why most people use what Jamie mentioned before:
@@@ ruby
render :text =&gt; '{}', :status =&gt; :ok
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure if this will actually solve this problem for JSON
format, because empty string is still considered as invalid JSON -
that's why most people use what Jamie mentioned before:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;render :text =&amp;gt; '{}', :status =&amp;gt; :ok&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-03T19:12:21+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-10-03T19:12:24+01:00</updated-at>
      <user-id type="integer">22106</user-id>
      <version type="integer">16</version>
      <user-name>Szymon Nowak</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Checking if the status is json and explicitly returning &quot;{}&quot; in such cases is ok. Patch with tests please?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Checking if the status is json and explicitly returning &quot;{}&quot; in
such cases is ok. Patch with tests please?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-03T22:52:48+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-10-03T22:52:53+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">17</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a patch that changes the behavior to return &quot;{}&quot; instead of &quot; &quot; for JSON requests with PUT and DELETE.

It also allows to add new methods to return a valid resource in any format. Currently only *empty_json_resource* method is defined, but if for someone &quot; &quot; is not a valid XML, one can easily fix it by defining *AC::Responder#empty_xml_resource* method and return &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;* or something similar instead.

The patch is at http://gist.github.com/620923, because I couldn't upload it here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a patch that changes the behavior to return &quot;{}&quot; instead
of &quot; &quot; for JSON requests with PUT and DELETE.&lt;/p&gt;
&lt;p&gt;It also allows to add new methods to return a valid resource in
any format. Currently only &lt;em&gt;empty_json_resource&lt;/em&gt; method is
defined, but if for someone &quot; &quot; is not a valid XML, one can easily
fix it by defining &lt;em&gt;AC::Responder#empty_xml_resource&lt;/em&gt; method
and return &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;* or
something similar instead.&lt;/p&gt;
&lt;p&gt;The patch is at &lt;a href=
&quot;http://gist.github.com/620923&quot;&gt;http://gist.github.com/620923&lt;/a&gt;,
because I couldn't upload it here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-11T18:46:22+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-10-11T18:46:24+01:00</updated-at>
      <user-id type="integer">22106</user-id>
      <version type="integer">18</version>
      <user-name>Szymon Nowak</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [0d3333257156544feba729ba28f6874d5a30d561]) Return a valid empty JSON on successful PUT and DELETE requests. [#5199 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/0d3333257156544feba729ba28f6874d5a30d561</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/0d3333257156544feba729ba28f6874d5a30d561&quot;
title=
&quot;Changeset [0d3333257156544feba729ba28f6874d5a30d561]&quot;&gt;[0d3333257156544feba729ba28f6874d5a30d561]&lt;/a&gt;)
Return a valid empty JSON on successful PUT and DELETE requests.
[&lt;a href=&quot;/projects/8994/tickets/5199&quot; title=
&quot;Ticket #5199&quot;&gt;#5199&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/0d3333257156544feba729ba28f6874d5a30d561&quot;&gt;
http://github.com/rails/rails/commit/0d3333257156544feba729ba28f687...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T23:56:27+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-10-11T23:56:28+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">19</version>
      <user-name>Repository</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [1556e0874dd5c7e160a9bc5091dd60eb4bd5ec97]) Return a valid empty JSON on successful PUT and DELETE requests. [#5199 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/1556e0874dd5c7e160a9bc5091dd60eb4bd5ec97</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/1556e0874dd5c7e160a9bc5091dd60eb4bd5ec97&quot;
title=
&quot;Changeset [1556e0874dd5c7e160a9bc5091dd60eb4bd5ec97]&quot;&gt;[1556e0874dd5c7e160a9bc5091dd60eb4bd5ec97]&lt;/a&gt;)
Return a valid empty JSON on successful PUT and DELETE requests.
[&lt;a href=&quot;/projects/8994/tickets/5199&quot; title=
&quot;Ticket #5199&quot;&gt;#5199&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/1556e0874dd5c7e160a9bc5091dd60eb4bd5ec97&quot;&gt;
http://github.com/rails/rails/commit/1556e0874dd5c7e160a9bc5091dd60...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T23:56:59+01:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-10-11T23:57:01+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">20</version>
      <user-name>Repository</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:06:30+00:00</created-at>
      <creator-id type="integer">108502</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5199</number>
      <permalink>respond_with-returns-on-put-and-delete-verb</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>respond_with</tag>
      <title>respond_with returns &quot; &quot; on PUT and DELETE verb</title>
      <updated-at type="datetime">2010-11-08T23:12:01+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">21</version>
      <user-name>jim123456</user-name>
      <creator-name>Nikolay Belous</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5199</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
