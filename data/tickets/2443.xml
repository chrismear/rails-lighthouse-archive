<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-07T17:24:49+01:00</created-at>
  <creator-id type="integer">53299</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2443</number>
  <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
  <priority type="integer">1449</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.2</tag>
  <title>2.3.2 marshalling problem - Browser shows error 500</title>
  <updated-at type="datetime">2010-03-26T20:15:32+00:00</updated-at>
  <user-id type="integer">57250</user-id>
  <version type="integer">8</version>
  <user-name>Eric Perko</user-name>
  <creator-name>rpdevelop (at gmail)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
  <priority-name nil="true"></priority-name>
  <original-body>Browser shows error 500. The same code runs smoothly in 2.2.2. This is what happens: 
After the action in controller is executed the code eventually
ends up in CookieOverflow.marshal(session)---&gt;
-------
module: ActionController,Session
class:CookieOverflow

def marshal(session)
          @verifier.generate(persistent_session_id!(session))
end
---------
The &quot;@verifier&quot; is MessageVerifier, so in &quot;marshal&quot; method the 
MessageVerifier's &quot;generate&quot; method is called and the &quot;session&quot; is 
passed to it in &quot;value&quot; parameter.---&gt;
---------
module: ActiveSupport
class: MessageVerifier

def generate(value)
      data = ActiveSupport::Base64.encode64s(Marshal.dump(value))
      &quot;#{data}--#{generate_digest(data)}&quot;
end
-----------
In my example &quot;value&quot; is hash (length=6), so it is small.  
But the statement &quot;Marshal.dump(value)&quot; generates string (size over 3,5K)
and later on few things get added and the generated data grows over
to 4638 in my case. Back in &quot;CookieOverflow&quot; this data gets check against MAX 4096
and since it is over this max (I assume the max length allowed for session)
the error 500 gets thrown.</original-body>
  <latest-body>Browser shows error 500. The same code runs smoothly in 2.2.2. This is what happens: 
After the action in controller is executed the code eventually
ends up in CookieOverflow.marshal(session)---&gt;
-------
module: ActionController,Session
class:CookieOverflow

def marshal(session)
          @verifier.generate(persistent_session_id!(session))
end
---------
The &quot;@verifier&quot; is MessageVerifier, so in &quot;marshal&quot; method the 
MessageVerifier's &quot;generate&quot; method is called and the &quot;session&quot; is 
passed to it in &quot;value&quot; parameter.---&gt;
---------
module: ActiveSupport
class: MessageVerifier

def generate(value)
      data = ActiveSupport::Base64.encode64s(Marshal.dump(value))
      &quot;#{data}--#{generate_digest(data)}&quot;
end
-----------
In my example &quot;value&quot; is hash (length=6), so it is small.  
But the statement &quot;Marshal.dump(value)&quot; generates string (size over 3,5K)
and later on few things get added and the generated data grows over
to 4638 in my case. Back in &quot;CookieOverflow&quot; this data gets check against MAX 4096
and since it is over this max (I assume the max length allowed for session)
the error 500 gets thrown.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Browser shows error 500. The same code runs smoothly in 2.2.2.
This is what happens: After the action in controller is executed
the code eventually&lt;/p&gt;
&lt;h2&gt;ends up in CookieOverflow.marshal(session)---&amp;gt;&lt;/h2&gt;
&lt;p&gt;module: ActionController,Session class:CookieOverflow&lt;/p&gt;
&lt;p&gt;def marshal(session)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      @verifier.generate(persistent_session_id!(session))
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;end&lt;/h2&gt;
&lt;p&gt;The &quot;@verifier&quot; is MessageVerifier, so in &quot;marshal&quot; method the
MessageVerifier's &quot;generate&quot; method is called and the &quot;session&quot;
is&lt;/p&gt;
&lt;h2&gt;passed to it in &quot;value&quot; parameter.---&amp;gt;&lt;/h2&gt;
&lt;p&gt;module: ActiveSupport class: MessageVerifier&lt;/p&gt;
&lt;p&gt;def generate(value)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  data = ActiveSupport::Base64.encode64s(Marshal.dump(value))
  &quot;#{data}--#{generate_digest(data)}&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;end&lt;/h2&gt;
&lt;p&gt;In my example &quot;value&quot; is hash (length=6), so it is small.&lt;br&gt;
But the statement &quot;Marshal.dump(value)&quot; generates string (size over
3,5K) and later on few things get added and the generated data
grows over to 4638 in my case. Back in &quot;CookieOverflow&quot; this data
gets check against MAX 4096 and since it is over this max (I assume
the max length allowed for session) the error 500 gets thrown.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Browser shows error 500. The same code runs smoothly in 2.2.2. This is what happens: 
After the action in controller is executed the code eventually
ends up in CookieOverflow.marshal(session)---&gt;
-------
module: ActionController,Session
class:CookieOverflow

def marshal(session)
          @verifier.generate(persistent_session_id!(session))
end
---------
The &quot;@verifier&quot; is MessageVerifier, so in &quot;marshal&quot; method the 
MessageVerifier's &quot;generate&quot; method is called and the &quot;session&quot; is 
passed to it in &quot;value&quot; parameter.---&gt;
---------
module: ActiveSupport
class: MessageVerifier

def generate(value)
      data = ActiveSupport::Base64.encode64s(Marshal.dump(value))
      &quot;#{data}--#{generate_digest(data)}&quot;
end
-----------
In my example &quot;value&quot; is hash (length=6), so it is small.  
But the statement &quot;Marshal.dump(value)&quot; generates string (size over 3,5K)
and later on few things get added and the generated data grows over
to 4638 in my case. Back in &quot;CookieOverflow&quot; this data gets check against MAX 4096
and since it is over this max (I assume the max length allowed for session)
the error 500 gets thrown.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Browser shows error 500. The same code runs smoothly in 2.2.2.
This is what happens: After the action in controller is executed
the code eventually&lt;/p&gt;
&lt;h2&gt;ends up in CookieOverflow.marshal(session)---&amp;gt;&lt;/h2&gt;
&lt;p&gt;module: ActionController,Session class:CookieOverflow&lt;/p&gt;
&lt;p&gt;def marshal(session)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      @verifier.generate(persistent_session_id!(session))
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;end&lt;/h2&gt;
&lt;p&gt;The &quot;@verifier&quot; is MessageVerifier, so in &quot;marshal&quot; method the
MessageVerifier's &quot;generate&quot; method is called and the &quot;session&quot;
is&lt;/p&gt;
&lt;h2&gt;passed to it in &quot;value&quot; parameter.---&amp;gt;&lt;/h2&gt;
&lt;p&gt;module: ActiveSupport class: MessageVerifier&lt;/p&gt;
&lt;p&gt;def generate(value)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  data = ActiveSupport::Base64.encode64s(Marshal.dump(value))
  &quot;#{data}--#{generate_digest(data)}&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;end&lt;/h2&gt;
&lt;p&gt;In my example &quot;value&quot; is hash (length=6), so it is small.&lt;br&gt;
But the statement &quot;Marshal.dump(value)&quot; generates string (size over
3,5K) and later on few things get added and the generated data
grows over to 4638 in my case. Back in &quot;CookieOverflow&quot; this data
gets check against MAX 4096 and since it is over this max (I assume
the max length allowed for session) the error 500 gets thrown.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-07T17:24:49+01:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2009-04-07T17:24:51+01:00</updated-at>
      <user-id type="integer">53299</user-id>
      <version type="integer">1</version>
      <user-name>rpdevelop (at gmail)</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Did you resolve this problem? I am experiencing the same error on Rails 2.3.2</body>
      <body-html>&lt;div&gt;&lt;p&gt;Did you resolve this problem? I am experiencing the same error
on Rails 2.3.2&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-18T16:54:23+01:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2009-05-18T16:54:28+01:00</updated-at>
      <user-id type="integer">57250</user-id>
      <version type="integer">2</version>
      <user-name>Eric Perko</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-06T14:44:13+01:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2009-08-06T14:44:20+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I could not replicate this using a small hash of six strings. It's possible that one of your six hash members is a large object and is being marshaled into something huge? I'd first check exactly what I'm putting into session and understand why it's generating so much data. If this is unavoidable, use active_record_store instead of cookie store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I could not replicate this using a small hash of six strings.
It's possible that one of your six hash members is a large object
and is being marshaled into something huge? I'd first check exactly
what I'm putting into session and understand why it's generating so
much data. If this is unavoidable, use active_record_store instead
of cookie store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T13:47:55+01:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2009-08-09T13:47:59+01:00</updated-at>
      <user-id type="integer">64236</user-id>
      <version type="integer">4</version>
      <user-name>John Pignata</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think that's expected, obviously one of the values in your hash resolves to a large string, simply because it's a large object, can you check what is in your hash? i was unable to replicate it using:

* hash of strings (length = 6)
* hash of simple, small instances of a model (length = 6)
* hash of 1 char strings (length = 500)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think that's expected, obviously one of the values in your
hash resolves to a large string, simply because it's a large
object, can you check what is in your hash? i was unable to
replicate it using:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hash of strings (length = 6)&lt;/li&gt;
&lt;li&gt;hash of simple, small instances of a model (length = 6)&lt;/li&gt;
&lt;li&gt;hash of 1 char strings (length = 500)&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T16:07:18+01:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2009-08-09T16:07:21+01:00</updated-at>
      <user-id type="integer">10379</user-id>
      <version type="integer">5</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>not reproducible

-1 Agreed with John.</body>
      <body-html>&lt;div&gt;&lt;p&gt;not reproducible&lt;/p&gt;
&lt;p&gt;-1 Agreed with John.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T23:22:07+01:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2009-08-09T23:22:12+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">6</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T23:23:44+01:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 bugmash
:state: new
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2009-08-09T23:23:47+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For future reference, I finally got around to looking into this problem and was able to figure it out. In a nutshell, our session was holding an entire ActiveRecord object, not just its ID (which was a bad idea anyways). Because of this, the newer marshalling code in Rails 2.3 was trying to serialize enough data to put the object back together later. This worked for some users, but for the majority, eventually a query or two loaded up some associations for the object in the session; loading up associations made for even more data that marhsal thought it needed to serialize. Eventually, some functionality queried enough to pull in a huge chunk of data, causing marshal to go from outputting about 2KB to like 25KB. If anyone experiences this in the future, try changing out the ActiveRecord object for just the ID and see if that fixes your problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For future reference, I finally got around to looking into this
problem and was able to figure it out. In a nutshell, our session
was holding an entire ActiveRecord object, not just its ID (which
was a bad idea anyways). Because of this, the newer marshalling
code in Rails 2.3 was trying to serialize enough data to put the
object back together later. This worked for some users, but for the
majority, eventually a query or two loaded up some associations for
the object in the session; loading up associations made for even
more data that marhsal thought it needed to serialize. Eventually,
some functionality queried enough to pull in a huge chunk of data,
causing marshal to go from outputting about 2KB to like 25KB. If
anyone experiences this in the future, try changing out the
ActiveRecord object for just the ID and see if that fixes your
problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-26T20:15:28+00:00</created-at>
      <creator-id type="integer">53299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2443</number>
      <permalink>232-marshalling-problem-browser-shows-error-500</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2</tag>
      <title>2.3.2 marshalling problem - Browser shows error 500</title>
      <updated-at type="datetime">2010-03-26T20:15:32+00:00</updated-at>
      <user-id type="integer">57250</user-id>
      <version type="integer">8</version>
      <user-name>Eric Perko</user-name>
      <creator-name>rpdevelop (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2443</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
</ticket>
