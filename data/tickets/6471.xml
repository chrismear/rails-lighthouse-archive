<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-25T20:13:56+00:00</created-at>
  <creator-id type="integer">132190</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6471</number>
  <permalink>activeresource-and-422-status-code-and-response-message</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>activeresource statuscodes</tag>
  <title>ActiveResource and 422 Status Code and Response Message</title>
  <updated-at type="datetime">2011-03-03T08:03:52+00:00</updated-at>
  <user-id type="integer">102761</user-id>
  <version type="integer">2</version>
  <user-name>Markus Schwed</user-name>
  <creator-name>Chad W. Taylor</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6471</url>
  <priority-name nil="true"></priority-name>
  <original-body>The 422 unprocessable_entity appears to be limited to the &quot;save&quot; operations.  It would be nice that it is not limited to saves. It would be nice to use status codes, other than 200, to display errors from the body so we know what was wrong with our get request.

For instance, if I did this:

[code]
person = Person.find(:all, :params =&gt; {:first_name =&gt; &quot;John&quot;})
[/code]

The API server may require a combination of both :first_name and :last_name to work so the error message would show that the last name is a required field before the find operation can be processed hence the unprocessable_entity used.  It is able to raise 422 however the response body is not being picked up other than the save operations.

It would be nice if the following code (activeresource/lib/active_resource/custom_methods.rb) in ActiveResource project shows:

[code]
def put(method_name, options = {}, body = '')
  begin
    connection.put(custom_method_element_url(method_name, options), body, self.class.headers)
  rescue ResourceInvalid =&gt; error
    errors.from_xml(error.response.body) # need to also handle JSON requests as well
  end
  self 
end
[/code]

Hope that can be considered! 

Thanks much,
Chad</original-body>
  <latest-body>The 422 unprocessable_entity appears to be limited to the &quot;save&quot; operations.  It would be nice that it is not limited to saves. It would be nice to use status codes, other than 200, to display errors from the body so we know what was wrong with our get request.

For instance, if I did this:

[code]
person = Person.find(:all, :params =&gt; {:first_name =&gt; &quot;John&quot;})
[/code]

The API server may require a combination of both :first_name and :last_name to work so the error message would show that the last name is a required field before the find operation can be processed hence the unprocessable_entity used.  It is able to raise 422 however the response body is not being picked up other than the save operations.

It would be nice if the following code (activeresource/lib/active_resource/custom_methods.rb) in ActiveResource project shows:

[code]
def put(method_name, options = {}, body = '')
  begin
    connection.put(custom_method_element_url(method_name, options), body, self.class.headers)
  rescue ResourceInvalid =&gt; error
    errors.from_xml(error.response.body) # need to also handle JSON requests as well
  end
  self 
end
[/code]

Hope that can be considered! 

Thanks much,
Chad</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The 422 unprocessable_entity appears to be limited to the &quot;save&quot;
operations. It would be nice that it is not limited to saves. It
would be nice to use status codes, other than 200, to display
errors from the body so we know what was wrong with our get
request.&lt;/p&gt;
&lt;p&gt;For instance, if I did this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/code&quot; title=
&quot;Changeset [code]&quot;&gt;[code]&lt;/a&gt; person = Person.find(:all, :params
=&amp;gt; {:first_name =&amp;gt; &quot;John&quot;})&lt;br&gt;
[/code]&lt;/p&gt;
&lt;p&gt;The API server may require a combination of both :first_name and
:last_name to work so the error message would show that the last
name is a required field before the find operation can be processed
hence the unprocessable_entity used. It is able to raise 422
however the response body is not being picked up other than the
save operations.&lt;/p&gt;
&lt;p&gt;It would be nice if the following code
(activeresource/lib/active_resource/custom_methods.rb) in
ActiveResource project shows:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/code&quot; title=
&quot;Changeset [code]&quot;&gt;[code]&lt;/a&gt; def put(method_name, options = {},
body = '')&lt;br&gt;
begin&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;connection.put(custom_method_element_url(method_name, options), body, self.class.headers)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;rescue ResourceInvalid =&amp;gt; error&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;errors.from_xml(error.response.body) # need to also handle JSON requests as well&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end self end&lt;br&gt;
[/code]&lt;/p&gt;
&lt;p&gt;Hope that can be considered!&lt;/p&gt;
&lt;p&gt;Thanks much,&lt;br&gt;
Chad&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The 422 unprocessable_entity appears to be limited to the &quot;save&quot; operations.  It would be nice that it is not limited to saves. It would be nice to use status codes, other than 200, to display errors from the body so we know what was wrong with our get request.

For instance, if I did this:

[code]
person = Person.find(:all, :params =&gt; {:first_name =&gt; &quot;John&quot;})
[/code]

The API server may require a combination of both :first_name and :last_name to work so the error message would show that the last name is a required field before the find operation can be processed hence the unprocessable_entity used.  It is able to raise 422 however the response body is not being picked up other than the save operations.

It would be nice if the following code (activeresource/lib/active_resource/custom_methods.rb) in ActiveResource project shows:

[code]
def put(method_name, options = {}, body = '')
  begin
    connection.put(custom_method_element_url(method_name, options), body, self.class.headers)
  rescue ResourceInvalid =&gt; error
    errors.from_xml(error.response.body) # need to also handle JSON requests as well
  end
  self 
end
[/code]

Hope that can be considered! 

Thanks much,
Chad</body>
      <body-html>&lt;div&gt;&lt;p&gt;The 422 unprocessable_entity appears to be limited to the &quot;save&quot;
operations. It would be nice that it is not limited to saves. It
would be nice to use status codes, other than 200, to display
errors from the body so we know what was wrong with our get
request.&lt;/p&gt;
&lt;p&gt;For instance, if I did this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/code&quot; title=
&quot;Changeset [code]&quot;&gt;[code]&lt;/a&gt; person = Person.find(:all, :params
=&amp;gt; {:first_name =&amp;gt; &quot;John&quot;})&lt;br&gt;
[/code]&lt;/p&gt;
&lt;p&gt;The API server may require a combination of both :first_name and
:last_name to work so the error message would show that the last
name is a required field before the find operation can be processed
hence the unprocessable_entity used. It is able to raise 422
however the response body is not being picked up other than the
save operations.&lt;/p&gt;
&lt;p&gt;It would be nice if the following code
(activeresource/lib/active_resource/custom_methods.rb) in
ActiveResource project shows:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/code&quot; title=
&quot;Changeset [code]&quot;&gt;[code]&lt;/a&gt; def put(method_name, options = {},
body = '')&lt;br&gt;
begin&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;connection.put(custom_method_element_url(method_name, options), body, self.class.headers)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;rescue ResourceInvalid =&amp;gt; error&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;errors.from_xml(error.response.body) # need to also handle JSON requests as well&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end self end&lt;br&gt;
[/code]&lt;/p&gt;
&lt;p&gt;Hope that can be considered!&lt;/p&gt;
&lt;p&gt;Thanks much,&lt;br&gt;
Chad&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-25T20:13:56+00:00</created-at>
      <creator-id type="integer">132190</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6471</number>
      <permalink>activeresource-and-422-status-code-and-response-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveResource and 422 Status Code and Response Message</title>
      <updated-at type="datetime">2011-02-25T20:13:58+00:00</updated-at>
      <user-id type="integer">132190</user-id>
      <version type="integer">1</version>
      <user-name>Chad W. Taylor</user-name>
      <creator-name>Chad W. Taylor</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6471</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think, that would be a nice feature/fix could you do this and add a patch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think, that would be a nice feature/fix could you do this and
add a patch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-03T08:03:39+00:00</created-at>
      <creator-id type="integer">132190</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6471</number>
      <permalink>activeresource-and-422-status-code-and-response-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource statuscodes</tag>
      <title>ActiveResource and 422 Status Code and Response Message</title>
      <updated-at type="datetime">2011-03-03T08:03:52+00:00</updated-at>
      <user-id type="integer">102761</user-id>
      <version type="integer">2</version>
      <user-name>Markus Schwed</user-name>
      <creator-name>Chad W. Taylor</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6471</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
