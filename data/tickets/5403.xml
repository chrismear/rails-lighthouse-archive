<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-18T16:07:48+01:00</created-at>
  <creator-id type="integer">1417</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5403</number>
  <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>active_record patch performance sti</tag>
  <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
  <updated-at type="datetime">2010-10-15T23:02:01+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">9</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>thieso (at gmail)</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Hi,

after getting perftools.rb running with 1.9.2 and rails3rc i found that a lot of cycles are burned inside find_sti_class (actually compute_type). this is caused by looking up a constant fails to load:

base.rb:1141
            # Build a list of candidates to search for
            candidates = []
            name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }
            candidates &lt;&lt; type_name
  
class A &lt; ActiveRecord::Base
end

class B &lt; A
end

this will set candidates to [&quot;A::B&quot;, &quot;B&quot;], now &quot;A::B&quot; will go though the long codepath of constantize - and it will everytime a B is instantiated from the database as the const A::B will never come into existance and we don't do negative caching.

my suggestion would be to add a class level cache to the find_sti_class method. that will improve performace of largish queries with sti.

i would write a patch myself, but failed to get the AR testsuite pass on my box.

re,
thies</original-body>
  <latest-body>Hi,

after getting perftools.rb running with 1.9.2 and rails3rc i found that a lot of cycles are burned inside find_sti_class (actually compute_type). this is caused by looking up a constant fails to load:

base.rb:1141
            # Build a list of candidates to search for
            candidates = []
            name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }
            candidates &lt;&lt; type_name
  
class A &lt; ActiveRecord::Base
end

class B &lt; A
end

this will set candidates to [&quot;A::B&quot;, &quot;B&quot;], now &quot;A::B&quot; will go though the long codepath of constantize - and it will everytime a B is instantiated from the database as the const A::B will never come into existance and we don't do negative caching.

my suggestion would be to add a class level cache to the find_sti_class method. that will improve performace of largish queries with sti.

i would write a patch myself, but failed to get the AR testsuite pass on my box.

re,
thies</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;after getting perftools.rb running with 1.9.2 and rails3rc i
found that a lot of cycles are burned inside find_sti_class
(actually compute_type). this is caused by looking up a constant
fails to load:&lt;/p&gt;
&lt;p&gt;base.rb:1141&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;        # Build a list of candidates to search for
        candidates = []
        name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }
        candidates &amp;lt;&amp;lt; type_name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;class A &amp;lt; ActiveRecord::Base&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;class B &amp;lt; A&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;this will set candidates to [&quot;A::B&quot;, &quot;B&quot;], now &quot;A::B&quot; will go
though the long codepath of constantize - and it will everytime a B
is instantiated from the database as the const A::B will never come
into existance and we don't do negative caching.&lt;/p&gt;
&lt;p&gt;my suggestion would be to add a class level cache to the
find_sti_class method. that will improve performace of largish
queries with sti.&lt;/p&gt;
&lt;p&gt;i would write a patch myself, but failed to get the AR testsuite
pass on my box.&lt;/p&gt;
&lt;p&gt;re,&lt;br&gt;
thies&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

after getting perftools.rb running with 1.9.2 and rails3rc i found that a lot of cycles are burned inside find_sti_class (actually compute_type). this is caused by looking up a constant fails to load:

base.rb:1141
            # Build a list of candidates to search for
            candidates = []
            name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }
            candidates &lt;&lt; type_name
  
class A &lt; ActiveRecord::Base
end

class B &lt; A
end

this will set candidates to [&quot;A::B&quot;, &quot;B&quot;], now &quot;A::B&quot; will go though the long codepath of constantize - and it will everytime a B is instantiated from the database as the const A::B will never come into existance and we don't do negative caching.

my suggestion would be to add a class level cache to the find_sti_class method. that will improve performace of largish queries with sti.

i would write a patch myself, but failed to get the AR testsuite pass on my box.

re,
thies</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;after getting perftools.rb running with 1.9.2 and rails3rc i
found that a lot of cycles are burned inside find_sti_class
(actually compute_type). this is caused by looking up a constant
fails to load:&lt;/p&gt;
&lt;p&gt;base.rb:1141&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;        # Build a list of candidates to search for
        candidates = []
        name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }
        candidates &amp;lt;&amp;lt; type_name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;class A &amp;lt; ActiveRecord::Base&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;class B &amp;lt; A&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;this will set candidates to [&quot;A::B&quot;, &quot;B&quot;], now &quot;A::B&quot; will go
though the long codepath of constantize - and it will everytime a B
is instantiated from the database as the const A::B will never come
into existance and we don't do negative caching.&lt;/p&gt;
&lt;p&gt;my suggestion would be to add a class level cache to the
find_sti_class method. that will improve performace of largish
queries with sti.&lt;/p&gt;
&lt;p&gt;i would write a patch myself, but failed to get the AR testsuite
pass on my box.&lt;/p&gt;
&lt;p&gt;re,&lt;br&gt;
thies&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-18T16:07:48+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-18T16:07:49+01:00</updated-at>
      <user-id type="integer">1417</user-id>
      <version type="integer">1</version>
      <user-name>thieso (at gmail)</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-18T16:36:51+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-18T16:36:56+01:00</updated-at>
      <user-id type="integer">1417</user-id>
      <version type="integer">2</version>
      <user-name>thieso (at gmail)</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-18T16:38:05+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record performance sti
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record patch performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-18T16:38:09+01:00</updated-at>
      <user-id type="integer">1417</user-id>
      <version type="integer">3</version>
      <user-name>thieso (at gmail)</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good idea. However, Thieso's patch will break in development mode since the memoized classes will be reloaded. We can use `ActiveSupport::Dependencies.constantize(name)` to memoize the lookup within the duration of a request.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good idea. However, Thieso's patch will break in development
mode since the memoized classes will be reloaded. We can use
&lt;code&gt;ActiveSupport::Dependencies.constantize(name)&lt;/code&gt; to
memoize the lookup within the duration of a request.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T17:04:06+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record patch performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-19T17:04:09+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>http://github.com/rails/rails/commit/d3e30a18b286b1de93fb484170ab6e1723e364a6</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/d3e30a18b286b1de93fb484170ab6e1723e364a6&quot;&gt;
http://github.com/rails/rails/commit/d3e30a18b286b1de93fb484170ab6e...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-19T17:59:25+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record patch performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-19T17:59:27+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>We can speed this up by another 30% by optimizing the case where store_full_sti_class is true. This has been the default for some time now so should be the case for the vast majority of apps.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We can speed this up by another 30% by optimizing the case where
store_full_sti_class is true. This has been the default for some
time now so should be the case for the vast majority of apps.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-19T21:54:37+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record patch performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-19T21:54:39+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">6</version>
      <user-name>Andrew White</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [ad063263bcaffb97f3e8d625d24c19d51b95b839]) Optimize find_sti_class when store_full_sti_class is true

[#5403]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/ad063263bcaffb97f3e8d625d24c19d51b95b839</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/ad063263bcaffb97f3e8d625d24c19d51b95b839&quot;
title=
&quot;Changeset [ad063263bcaffb97f3e8d625d24c19d51b95b839]&quot;&gt;[ad063263bcaffb97f3e8d625d24c19d51b95b839]&lt;/a&gt;)
Optimize find_sti_class when store_full_sti_class is true&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5403&quot; title=
&quot;Ticket #5403&quot;&gt;#5403&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/ad063263bcaffb97f3e8d625d24c19d51b95b839&quot;&gt;
http://github.com/rails/rails/commit/ad063263bcaffb97f3e8d625d24c19...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-19T22:03:49+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record patch performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-19T22:03:50+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [0b73f2af0e08c21ff75199505804993160117452]) Optimize find_sti_class when store_full_sti_class is true

[#5403]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/0b73f2af0e08c21ff75199505804993160117452</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/0b73f2af0e08c21ff75199505804993160117452&quot;
title=
&quot;Changeset [0b73f2af0e08c21ff75199505804993160117452]&quot;&gt;[0b73f2af0e08c21ff75199505804993160117452]&lt;/a&gt;)
Optimize find_sti_class when store_full_sti_class is true&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5403&quot; title=
&quot;Ticket #5403&quot;&gt;#5403&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/0b73f2af0e08c21ff75199505804993160117452&quot;&gt;
http://github.com/rails/rails/commit/0b73f2af0e08c21ff7519950580499...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-19T22:03:49+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record patch performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-08-19T22:03:51+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:02:01+01:00</created-at>
      <creator-id type="integer">1417</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5403</number>
      <permalink>sti-slow-result-of-activerecordfind_sti_class-should-be-cached</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record patch performance sti</tag>
      <title>STI slow, result of ActiveRecord#find_sti_class should be cached! </title>
      <updated-at type="datetime">2010-10-15T23:02:01+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>thieso (at gmail)</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5403</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>aa0514e28b91501f85d1df49b9fabe2497b41902</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-18T16:36:51+01:00</created-at>
      <filename>find_sti_class-patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">634189</id>
      <size type="integer">1287</size>
      <uploader-id type="integer">1417</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/634189/find_sti_class-patch.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d383de03c488a37b452998e222b76eff9b0c9784</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-19T21:54:37+01:00</created-at>
      <filename>0001-optimize-find_sti_class.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">637117</id>
      <size type="integer">1067</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/637117/0001-optimize-find_sti_class.diff</url>
    </attachment>
  </attachments>
</ticket>
