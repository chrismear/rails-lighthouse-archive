<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-10T11:44:51+01:00</created-at>
  <creator-id type="integer">55887</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4567</number>
  <permalink>passing-a-single-object-to-a-nested-resource-route-generates-confusing-urls</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;nested resources&quot; routes</tag>
  <title>Passing a single object to a nested resource route generates confusing urls.</title>
  <updated-at type="datetime">2010-06-08T20:36:47+01:00</updated-at>
  <user-id type="integer">83</user-id>
  <version type="integer">4</version>
  <user-name>DHH</user-name>
  <creator-name>Vikrant Chaudhary</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4567</url>
  <priority-name>Low</priority-name>
  <original-body>I'll take an example. (Using Rails 2.3.5, Ubuntu 10.04 x64, Ruby 1.8.7 (2008-08-11 patchlevel 72) [i486-linux])

@@@ ruby
#app/models/author.rb
class Author &lt; ActiveRecord::Base
  has_many :books
end
@@@

@@@ ruby
#app/models/book.rb
class Book &lt; ActiveRecord::Base
  belongs_to :author
end
@@@

@@@ ruby
#config/routes.rb
map.resources :authors do |author|
  author.resources :books
end
@@@

@@@ ruby
#app/controllers/authors_controller.rb
class AuthorsController &lt; ApplicationController
end
@@@

@@@ ruby
&lt;%# app/views/authors/show.html.erb %&gt;
&lt;%# Let's say Author#1 has 5 Book#1,#2,#3,#4,#5. %&gt;
&lt;% Author.first.books.each { |book| %&gt;
  &lt;%= edit_author_book_path(book) %&gt; &lt;%# I know two argument should have been passed. %&gt;
&lt;% } %&gt;
@@@

Now visit - `/authors/1`, it generates - 

@@@
  /authors/1/books/1/edit 
  /authors/2/books/1/edit 
  /authors/3/books/1/edit 
  /authors/4/books/1/edit 
  /authors/5/books/1/edit 
@@@

While it should have either generated following or should have raised an error.
@@@
  /authors/1/books/1/edit 
  /authors/1/books/2/edit 
  /authors/1/books/3/edit 
  /authors/1/books/4/edit 
  /authors/1/books/5/edit
@@@

Please note that this *bug* is very specific, i.e., it happens only when you visit `/authors/1` page. On rest of the pages it will generate `ActionController::RoutingError`.</original-body>
  <latest-body>I'll take an example. (Using Rails 2.3.5, Ubuntu 10.04 x64, Ruby 1.8.7 (2008-08-11 patchlevel 72) [i486-linux])

@@@ ruby
#app/models/author.rb
class Author &lt; ActiveRecord::Base
  has_many :books
end
@@@

@@@ ruby
#app/models/book.rb
class Book &lt; ActiveRecord::Base
  belongs_to :author
end
@@@

@@@ ruby
#config/routes.rb
map.resources :authors do |author|
  author.resources :books
end
@@@

@@@ ruby
#app/controllers/authors_controller.rb
class AuthorsController &lt; ApplicationController
end
@@@

@@@ ruby
&lt;%# app/views/authors/show.html.erb %&gt;
&lt;%# Let's say Author#1 has 5 Book#1,#2,#3,#4,#5. %&gt;
&lt;% Author.first.books.each { |book| %&gt;
  &lt;%= edit_author_book_path(book) %&gt; &lt;%# I know two argument should have been passed. %&gt;
&lt;% } %&gt;
@@@

Now visit - `/authors/1`, it generates - 

@@@
  /authors/1/books/1/edit 
  /authors/2/books/1/edit 
  /authors/3/books/1/edit 
  /authors/4/books/1/edit 
  /authors/5/books/1/edit 
@@@

While it should have either generated following or should have raised an error.
@@@
  /authors/1/books/1/edit 
  /authors/1/books/2/edit 
  /authors/1/books/3/edit 
  /authors/1/books/4/edit 
  /authors/1/books/5/edit
@@@

Please note that this *bug* is very specific, i.e., it happens only when you visit `/authors/1` page. On rest of the pages it will generate `ActionController::RoutingError`.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'll take an example. (Using Rails 2.3.5, Ubuntu 10.04 x64, Ruby
1.8.7 (2008-08-11 patchlevel 72) [i486-linux])&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#app/models/author.rb
class Author &amp;lt; ActiveRecord::Base
  has_many :books
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#app/models/book.rb
class Book &amp;lt; ActiveRecord::Base
  belongs_to :author
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#config/routes.rb
map.resources :authors do |author|
  author.resources :books
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#app/controllers/authors_controller.rb
class AuthorsController &amp;lt; ApplicationController
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%# app/views/authors/show.html.erb %&amp;gt;
&amp;lt;%# Let's say Author#1 has 5 Book#1,#2,#3,#4,#5. %&amp;gt;
&amp;lt;% Author.first.books.each { |book| %&amp;gt;
  &amp;lt;%= edit_author_book_path(book) %&amp;gt; &amp;lt;%# I know two argument should have been passed. %&amp;gt;
&amp;lt;% } %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now visit - &lt;code&gt;/authors/1&lt;/code&gt;, it generates -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  /authors/1/books/1/edit 
  /authors/2/books/1/edit 
  /authors/3/books/1/edit 
  /authors/4/books/1/edit 
  /authors/5/books/1/edit&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;While it should have either generated following or should have
raised an error.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  /authors/1/books/1/edit 
  /authors/1/books/2/edit 
  /authors/1/books/3/edit 
  /authors/1/books/4/edit 
  /authors/1/books/5/edit&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Please note that this &lt;em&gt;bug&lt;/em&gt; is very specific, i.e., it
happens only when you visit &lt;code&gt;/authors/1&lt;/code&gt; page. On rest
of the pages it will generate
&lt;code&gt;ActionController::RoutingError&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll take an example. (Using Rails 2.3.5, Ubuntu 10.04 x64, Ruby 1.8.7 (2008-08-11 patchlevel 72) [i486-linux])

@@@ ruby
#app/models/author.rb
class Author &lt; ActiveRecord::Base
  has_many :books
end
@@@

@@@ ruby
#app/models/book.rb
class Book &lt; ActiveRecord::Base
  belongs_to :author
end
@@@

@@@ ruby
#config/routes.rb
map.resources :authors do |author|
  author.resources :books
end
@@@

@@@ ruby
#app/controllers/authors_controller.rb
class AuthorsController &lt; ApplicationController
end
@@@

@@@ ruby
&lt;%# app/views/authors/show.html.erb %&gt;
&lt;%# Let's say Author#1 has 5 Book#1,#2,#3,#4,#5. %&gt;
&lt;% Author.first.books.each { |book| %&gt;
  &lt;%= edit_author_book_path(book) %&gt; &lt;%# I know two argument should have been passed. %&gt;
&lt;% } %&gt;
@@@

Now visit - `/authors/1`, it generates - 

@@@
  /authors/1/books/1/edit 
  /authors/2/books/1/edit 
  /authors/3/books/1/edit 
  /authors/4/books/1/edit 
  /authors/5/books/1/edit 
@@@

While it should have either generated following or should have raised an error.
@@@
  /authors/1/books/1/edit 
  /authors/1/books/2/edit 
  /authors/1/books/3/edit 
  /authors/1/books/4/edit 
  /authors/1/books/5/edit
@@@

Please note that this *bug* is very specific, i.e., it happens only when you visit `/authors/1` page. On rest of the pages it will generate `ActionController::RoutingError`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll take an example. (Using Rails 2.3.5, Ubuntu 10.04 x64, Ruby
1.8.7 (2008-08-11 patchlevel 72) [i486-linux])&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#app/models/author.rb
class Author &amp;lt; ActiveRecord::Base
  has_many :books
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#app/models/book.rb
class Book &amp;lt; ActiveRecord::Base
  belongs_to :author
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#config/routes.rb
map.resources :authors do |author|
  author.resources :books
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#app/controllers/authors_controller.rb
class AuthorsController &amp;lt; ApplicationController
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%# app/views/authors/show.html.erb %&amp;gt;
&amp;lt;%# Let's say Author#1 has 5 Book#1,#2,#3,#4,#5. %&amp;gt;
&amp;lt;% Author.first.books.each { |book| %&amp;gt;
  &amp;lt;%= edit_author_book_path(book) %&amp;gt; &amp;lt;%# I know two argument should have been passed. %&amp;gt;
&amp;lt;% } %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now visit - &lt;code&gt;/authors/1&lt;/code&gt;, it generates -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  /authors/1/books/1/edit 
  /authors/2/books/1/edit 
  /authors/3/books/1/edit 
  /authors/4/books/1/edit 
  /authors/5/books/1/edit&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;While it should have either generated following or should have
raised an error.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  /authors/1/books/1/edit 
  /authors/1/books/2/edit 
  /authors/1/books/3/edit 
  /authors/1/books/4/edit 
  /authors/1/books/5/edit&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Please note that this &lt;em&gt;bug&lt;/em&gt; is very specific, i.e., it
happens only when you visit &lt;code&gt;/authors/1&lt;/code&gt; page. On rest
of the pages it will generate
&lt;code&gt;ActionController::RoutingError&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-10T11:44:51+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4567</number>
      <permalink>passing-a-single-object-to-a-nested-resource-route-generates-confusing-urls</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;nested resources&quot; routes</tag>
      <title>Passing a single object to a nested resource route generates confusing urls.</title>
      <updated-at type="datetime">2010-05-10T11:44:51+01:00</updated-at>
      <user-id type="integer">55887</user-id>
      <version type="integer">1</version>
      <user-name>Vikrant Chaudhary</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4567</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I expect `edit_author_book_path(book)` to generate `/authors/1/books/4/edit` because I guess `book` also carries an Author object via `book.author`, so we shouldn't really be passing Author object anyways (or it should be optional at least).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I expect &lt;code&gt;edit_author_book_path(book)&lt;/code&gt; to generate
&lt;code&gt;/authors/1/books/4/edit&lt;/code&gt; because I guess
&lt;code&gt;book&lt;/code&gt; also carries an Author object via
&lt;code&gt;book.author&lt;/code&gt;, so we shouldn't really be passing Author
object anyways (or it should be optional at least).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-10T11:53:40+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4567</number>
      <permalink>passing-a-single-object-to-a-nested-resource-route-generates-confusing-urls</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;nested resources&quot; routes</tag>
      <title>Passing a single object to a nested resource route generates confusing urls.</title>
      <updated-at type="datetime">2010-05-10T11:53:42+01:00</updated-at>
      <user-id type="integer">55887</user-id>
      <version type="integer">2</version>
      <user-name>Vikrant Chaudhary</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4567</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What's happening is that url generation is using the single argument as the :author_id and then getting the :id parameter from the existing url parameters. This is expected - the url generation code can't know that :id should be used as :author_id and the book argument should be :id.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What's happening is that url generation is using the single
argument as the :author_id and then getting the :id parameter from
the existing url parameters. This is expected - the url generation
code can't know that :id should be used as :author_id and the book
argument should be :id.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-07T07:26:54+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4567</number>
      <permalink>passing-a-single-object-to-a-nested-resource-route-generates-confusing-urls</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;nested resources&quot; routes</tag>
      <title>Passing a single object to a nested resource route generates confusing urls.</title>
      <updated-at type="datetime">2010-06-07T07:27:00+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4567</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T20:36:40+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4567</number>
      <permalink>passing-a-single-object-to-a-nested-resource-route-generates-confusing-urls</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;nested resources&quot; routes</tag>
      <title>Passing a single object to a nested resource route generates confusing urls.</title>
      <updated-at type="datetime">2010-06-08T20:36:47+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">4</version>
      <user-name>DHH</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4567</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
