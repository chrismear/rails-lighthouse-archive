<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-10T18:35:13+01:00</created-at>
  <creator-id type="integer">28615</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">794</number>
  <permalink>map-resources-options-does-not-work-well-when-multiple-entities-provided</permalink>
  <priority type="integer">255</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>map.resources does not work well when multiple entities provided</title>
  <updated-at type="datetime">2008-11-22T19:37:57+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>dazuiba</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/794</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>when I write routes like this in routes.rb

map.resources :books,:users,
              :requirements=&gt;{:id =&gt; /d+/}

the requirements only work for &quot;:books&quot;---the first entitiy provided.

The  &quot;hash shallow copy&quot; arose this bug.
(:requirements=&gt;{:id =&gt; /d+/} is a nested hash)

code from actionpack\lib\actioncontroller\resources.rb

    def resource(*entities, &amp;block)
      options = entities.extract_options!
      entities.each { |entity| map_singleton_resource(entity, options.dup, &amp;block) }
    end

I mean that , we should pass a deep copy of options to method &quot;map_singleton_resource&quot;, not &quot;options.dup&quot; which is shallow copy.</original-body>
  <latest-body>when I write routes like this in routes.rb

map.resources :books,:users,
              :requirements=&gt;{:id =&gt; /d+/}

the requirements only work for &quot;:books&quot;---the first entitiy provided.

The  &quot;hash shallow copy&quot; arose this bug.
(:requirements=&gt;{:id =&gt; /d+/} is a nested hash)

code from actionpack\lib\actioncontroller\resources.rb

    def resource(*entities, &amp;block)
      options = entities.extract_options!
      entities.each { |entity| map_singleton_resource(entity, options.dup, &amp;block) }
    end

I mean that , we should pass a deep copy of options to method &quot;map_singleton_resource&quot;, not &quot;options.dup&quot; which is shallow copy.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;when I write routes like this in routes.rb&lt;/p&gt;

&lt;p&gt;map.resources :books,:users,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;          :requirements=&amp;gt;{:id =&amp;gt; /d+/}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the requirements only work for &quot;:books&quot;---the first entitiy provided.&lt;/p&gt;

&lt;p&gt;The  &quot;hash shallow copy&quot; arose this bug.
(:requirements=&gt;{:id =&gt; /d+/} is a nested hash)&lt;/p&gt;

&lt;p&gt;code from actionpack\lib\actioncontroller\resources.rb&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def resource(*entities, &amp;amp;block)
  options = entities.extract_options!
  entities.each { |entity| map_singleton_resource(entity, options.dup, &amp;amp;block) }
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I mean that , we should pass a deep copy of options to method &quot;map_singleton_resource&quot;, not &quot;options.dup&quot; which is shallow copy.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>when I write routes like this in routes.rb

map.resources :books,:users,:requirements=&gt;{:id =&gt; /\d+/}

the requirements only work for &quot;:books&quot;---the first entitiy provided.

The  &quot;hash shallow copy&quot; arose this bug.
(:requirements=&gt;{:id =&gt; /\d+/} is a nested hash)

code from actionpack\lib\actioncontroller\resources.rb

    def resource(*entities, &amp;block)
      options = entities.extract_options!
      entities.each { |entity| map_singleton_resource(entity, options.dup, &amp;block) }
    end

I mean that , we should pass a deep copy of options to method &quot;map_singleton_resource&quot;, not &quot;options.dup&quot; which is shallow copy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;when I write routes like this in routes.rb&lt;/p&gt;

&lt;p&gt;map.resources :books,:users,:requirements=&gt;{:id =&gt; /\d+/}&lt;/p&gt;

&lt;p&gt;the requirements only work for &quot;:books&quot;---the first entitiy provided.&lt;/p&gt;

&lt;p&gt;The  &quot;hash shallow copy&quot; arose this bug.
(:requirements=&gt;{:id =&gt; /\d+/} is a nested hash)&lt;/p&gt;

&lt;p&gt;code from actionpack\lib\actioncontroller\resources.rb&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def resource(*entities, &amp;amp;block)
  options = entities.extract_options!
  entities.each { |entity| map_singleton_resource(entity, options.dup, &amp;amp;block) }
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I mean that , we should pass a deep copy of options to method &quot;map_singleton_resource&quot;, not &quot;options.dup&quot; which is shallow copy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T02:18:30+01:00</created-at>
      <creator-id type="integer">28615</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">794</number>
      <permalink>map-resources-options-does-not-work-well-when-multiple-entities-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>map.resources does not work well when multiple entities provided</title>
      <updated-at type="datetime">2008-08-11T02:18:30+01:00</updated-at>
      <user-id type="integer">28615</user-id>
      <version type="integer">1</version>
      <user-name>dazuiba</user-name>
      <creator-name>dazuiba</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/794</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Got patch+tests?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Got patch+tests?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T19:37:51+00:00</created-at>
      <creator-id type="integer">28615</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">794</number>
      <permalink>map-resources-options-does-not-work-well-when-multiple-entities-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>map.resources does not work well when multiple entities provided</title>
      <updated-at type="datetime">2008-11-22T19:37:57+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>dazuiba</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/794</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
