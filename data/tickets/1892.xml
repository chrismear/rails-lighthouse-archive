<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-22T08:32:34+00:00</created-at>
  <creator-id type="integer">8964</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1892</number>
  <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
  <priority type="integer">7</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>nested attributes should not have meaningful hash keys</title>
  <updated-at type="datetime">2011-02-22T08:32:34+00:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">34</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>cainlevy</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
  <priority-name nil="true"></priority-name>
  <original-body>The current nested_attributes implementation uses meaningful hash keys (approach 3 from http://gist.github.com/10793). This causes problems when extending the implementation to belongs_to/has_one associations.

The problem is that there is no way to specify that an existing belongs_to/has_one record should be replaced instead of modified.

The solution is to put ids inside the attributes hash. And if this is required to fully implement nested attributes for belongs_to/has_one associations, then it should be the standard approach that is also used for collection associations.

Hence, the nested attributes implementation should assign no meaning to hash keys.

I will try and begin working on a patch, but I wanted to log this as a potential blocker for nested attributes in Rails 2.3.</original-body>
  <latest-body>The current nested_attributes implementation uses meaningful hash keys (approach 3 from http://gist.github.com/10793). This causes problems when extending the implementation to belongs_to/has_one associations.

The problem is that there is no way to specify that an existing belongs_to/has_one record should be replaced instead of modified.

The solution is to put ids inside the attributes hash. And if this is required to fully implement nested attributes for belongs_to/has_one associations, then it should be the standard approach that is also used for collection associations.

Hence, the nested attributes implementation should assign no meaning to hash keys.

I will try and begin working on a patch, but I wanted to log this as a potential blocker for nested attributes in Rails 2.3.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The current nested_attributes implementation uses meaningful
hash keys (approach 3 from &lt;a href=&quot;http://gist.github.com/10793)&quot;&gt;http://gist.github.com/10793)&lt;/a&gt;.
This causes problems when extending the implementation to
belongs_to/has_one associations.&lt;/p&gt;
&lt;p&gt;The problem is that there is no way to specify that an existing
belongs_to/has_one record should be replaced instead of
modified.&lt;/p&gt;
&lt;p&gt;The solution is to put ids inside the attributes hash. And if
this is required to fully implement nested attributes for
belongs_to/has_one associations, then it should be the standard
approach that is also used for collection associations.&lt;/p&gt;
&lt;p&gt;Hence, the nested attributes implementation should assign no
meaning to hash keys.&lt;/p&gt;
&lt;p&gt;I will try and begin working on a patch, but I wanted to log
this as a potential blocker for nested attributes in Rails 2.3.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The current nested_attributes implementation uses meaningful hash keys (approach 3 from http://gist.github.com/10793). This causes problems when extending the implementation to belongs_to/has_one associations.

The problem is that there is no way to specify that an existing belongs_to/has_one record should be replaced instead of modified.

The solution is to put ids inside the attributes hash. And if this is required to fully implement nested attributes for belongs_to/has_one associations, then it should be the standard approach that is also used for collection associations.

Hence, the nested attributes implementation should assign no meaning to hash keys.

I will try and begin working on a patch, but I wanted to log this as a potential blocker for nested attributes in Rails 2.3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The current nested_attributes implementation uses meaningful
hash keys (approach 3 from &lt;a href=&quot;http://gist.github.com/10793)&quot;&gt;http://gist.github.com/10793)&lt;/a&gt;.
This causes problems when extending the implementation to
belongs_to/has_one associations.&lt;/p&gt;
&lt;p&gt;The problem is that there is no way to specify that an existing
belongs_to/has_one record should be replaced instead of
modified.&lt;/p&gt;
&lt;p&gt;The solution is to put ids inside the attributes hash. And if
this is required to fully implement nested attributes for
belongs_to/has_one associations, then it should be the standard
approach that is also used for collection associations.&lt;/p&gt;
&lt;p&gt;Hence, the nested attributes implementation should assign no
meaning to hash keys.&lt;/p&gt;
&lt;p&gt;I will try and begin working on a patch, but I wanted to log
this as a potential blocker for nested attributes in Rails 2.3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T02:21:49+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T02:21:50+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">1</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I found time sooner than I expected. :-)

This patch moves ids inside the attributes hash. New records are determined by the absence of hashes. The _delete key still works as before.

I feel like this is an important change because it is necessary in order to support both modification and replacement of existing belongs_to/has_one records. Furthermore, it affects how people will build their forms and so it is important to make happen before the first public release version including nested attributes.

I have not delved into ActionView yet to modify fields_for, but I will do that if this patch gathers enough interest.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I found time sooner than I expected. :-)&lt;/p&gt;
&lt;p&gt;This patch moves ids inside the attributes hash. New records are
determined by the absence of hashes. The _delete key still works as
before.&lt;/p&gt;
&lt;p&gt;I feel like this is an important change because it is necessary
in order to support both modification and replacement of existing
belongs_to/has_one records. Furthermore, it affects how people will
build their forms and so it is important to make happen before the
first public release version including nested attributes.&lt;/p&gt;
&lt;p&gt;I have not delved into ActionView yet to modify fields_for, but
I will do that if this patch gathers enough interest.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T05:26:47+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 attributes block nested
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T05:26:53+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">2</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I forgot to mention: this patch also rolls in the patch from ticket #1870.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I forgot to mention: this patch also rolls in the patch from
ticket &lt;a href=&quot;/projects/8994/tickets/1870&quot; title=&quot;Ticket #1870&quot;&gt;#1870&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T05:27:26+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T05:27:31+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">3</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Can you give us a real world scenario where you need to replace an existing record and can not do it by adding a _delete key to the old one?

The clear problem with your approach that it allows replacement only for one-to-one associations, has_many associations are left out. 

Besides that this new API would harder to ready than the old one and I don't like it too much in general.

I think we decided for the other one and should stick with it if it doesn't cause us severe problem.

How about adding a &quot;replace&quot; option to the accessor definition so that it will always replace the records instead of updating them if you need to?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you give us a real world scenario where you need to replace
an existing record and can not do it by adding a _delete key to the
old one?&lt;/p&gt;
&lt;p&gt;The clear problem with your approach that it allows replacement
only for one-to-one associations, has_many associations are left
out.&lt;/p&gt;
&lt;p&gt;Besides that this new API would harder to ready than the old one
and I don't like it too much in general.&lt;/p&gt;
&lt;p&gt;I think we decided for the other one and should stick with it if
it doesn't cause us severe problem.&lt;/p&gt;
&lt;p&gt;How about adding a &quot;replace&quot; option to the accessor definition
so that it will always replace the records instead of updating them
if you need to?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T08:21:32+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T08:21:37+00:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">4</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>As a matter of fact I was gonna write a patch this weekend to put the id's on the inside of the attribute hashes, because it will solve some other issues. I have already looked into the form builder so this should be an easy fix.

However, like Pascal, I'm not yet convinced about the replacing part. So a real world scenario would indeed be nice. The same goes for removing :reject_if, but I'll respond to the original ticket about this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As a matter of fact I was gonna write a patch this weekend to
put the id's on the inside of the attribute hashes, because it will
solve some other issues. I have already looked into the form
builder so this should be an easy fix.&lt;/p&gt;
&lt;p&gt;However, like Pascal, I'm not yet convinced about the replacing
part. So a real world scenario would indeed be nice. The same goes
for removing :reject_if, but I'll respond to the original ticket
about this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T08:42:36+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T08:42:38+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">5</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Has_many associations already naturally offer replacement. You simply submit one record hash with a _delete key, and another without an id key. That removes the first and adds the second. How is this a clear problem?

The primary goal of this API should not be readability, actually. It should be to enable HTML-only nested forms. The only time readability would be important here would be with log parsing and debugging, right? In that case there's no harm in using ids or &quot;new_XX&quot; for the hash keys ... in this setup they can be anything at all as long as they are unique.

When I was following the debate around http://gist.github.com/10793, most of the arguments about putting ids inside or outside the attributes were based on personal preference. This is the first time I've thought of a solid technical limitation to putting ids outside the attributes.

If this is too theoretical, I can dream up a use case:

Suppose a conference session has one speaker. While editing the conference session, I may wish to do any of the following:

* create a new speaker for the session.
* fix a typo in the name of the current speaker.
* replace the current speaker with another, but leave the current speaker intact for other sessions.

Note that a &quot;replace&quot; option would not be sufficient here since this use case requires simultaneous support of both modification and replacement.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Has_many associations already naturally offer replacement. You
simply submit one record hash with a _delete key, and another
without an id key. That removes the first and adds the second. How
is this a clear problem?&lt;/p&gt;
&lt;p&gt;The primary goal of this API should not be readability,
actually. It should be to enable HTML-only nested forms. The only
time readability would be important here would be with log parsing
and debugging, right? In that case there's no harm in using ids or
&quot;new_XX&quot; for the hash keys ... in this setup they can be anything
at all as long as they are unique.&lt;/p&gt;
&lt;p&gt;When I was following the debate around &lt;a href=&quot;http://gist.github.com/10793&quot;&gt;http://gist.github.com/10793&lt;/a&gt;,
most of the arguments about putting ids inside or outside the
attributes were based on personal preference. This is the first
time I've thought of a solid technical limitation to putting ids
outside the attributes.&lt;/p&gt;
&lt;p&gt;If this is too theoretical, I can dream up a use case:&lt;/p&gt;
&lt;p&gt;Suppose a conference session has one speaker. While editing the
conference session, I may wish to do any of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a new speaker for the session.&lt;/li&gt;
&lt;li&gt;fix a typo in the name of the current speaker.&lt;/li&gt;
&lt;li&gt;replace the current speaker with another, but leave the current
speaker intact for other sessions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that a &quot;replace&quot; option would not be sufficient here since
this use case requires simultaneous support of both modification
and replacement.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T09:04:56+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T09:04:57+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">6</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Eloy, you snuck in while I was typing. :-)

Does the conference session use case work for a &quot;real world&quot; argument?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Eloy, you snuck in while I was typing. :-)&lt;/p&gt;
&lt;p&gt;Does the conference session use case work for a &quot;real world&quot;
argument?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T09:06:27+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T09:06:28+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">7</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sounds good to me!
I just couldn't think of a proper use case, but the conference example sounds good.. +1 for the change then.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sounds good to me! I just couldn't think of a proper use case,
but the conference example sounds good.. +1 for the change
then.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T09:42:51+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T09:42:53+00:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">8</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hehe. Yes the conference session does work. But there is a difference in the one-to-one and one-to-many replace scenarios; In your example of the one-to-one conference session it is possible to replace but _not_ delete a record. In the many example, however, replacing a record can indeed be done by deleting one and adding a new one, but the existing record will be destroyed and thus not left intact for possible other associations.

I wonder if this is a problem or not&#8230;
Anyways, I don't see the replacement issue as a blocker for 2.3 as it is an improvement not a fix, I'd rather wait and give this some time for people to come up with real encountered issues and the way they solved it. Or do you actually have this issue in an application?

About the keys inside the attrs hash, yes in the discussion it seemed to be mostly about personal preference. But a real issue  is that of people who use composite ids, these can not be used as index keys like integer keys can and sorting them can fail (depending on the type of composite ids). Plus for people not using HTML it becomes much less cumbersome to write the code needed to create and update records.

The last question for me would be to choose between:
@@@ ruby
{ 1 =&gt; { :id =&gt; '23', :name =&gt; 'joe the plumber' }}
@@@

Or:
@@@ ruby
[{ :id =&gt; '23', :name =&gt; 'joe the plumber' }]
@@@

I feel the last one is preferable as it completely removes the need for an ID to be generated, which is an issue when not using the form helper.

My limited experiments have shown that both alternatives can be done easily. The first one would have HTML like:
@@@ html
&lt;input id=&quot;post_comments_attributes_0_id&quot; name=&quot;post[comments_attributes][0][id]&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&gt;
&lt;input id=&quot;post_comments_attributes_0_name&quot; name=&quot;post[comments_attributes][0][name]&quot; size=&quot;30&quot; type=&quot;text&quot; value=&quot;comment #1&quot; /&gt;
&lt;input id=&quot;post_comments_attributes_1_id&quot; name=&quot;post[comments_attributes][1][id]&quot; type=&quot;hidden&quot; value=&quot;2&quot; /&gt;
&lt;input id=&quot;post_comments_attributes_1_name&quot; name=&quot;post[comments_attributes][1][name]&quot; size=&quot;30&quot; type=&quot;text&quot; value=&quot;comment #2&quot; /&gt;
@@@

And the second one which Rails parses as an array:
@@@ html
&lt;input id=&quot;post_comments_attributes__id&quot; name=&quot;post[comments_attributes][][id]&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&gt;
&lt;input id=&quot;post_comments_attributes__name&quot; name=&quot;post[comments_attributes][][name]&quot; size=&quot;30&quot; type=&quot;text&quot; value=&quot;comment #1&quot; /&gt;
&lt;input id=&quot;post_comments_attributes__id&quot; name=&quot;post[comments_attributes][][id]&quot; type=&quot;hidden&quot; value=&quot;2&quot; /&gt;
&lt;input id=&quot;post_comments_attributes__name&quot; name=&quot;post[comments_attributes][][name]&quot; size=&quot;30&quot; type=&quot;text&quot; value=&quot;comment #2&quot; /&gt;
@@@

So it seems the parser creates a new hash when it encounters a key which has been used before. Can anyone think of a problem with this approach?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hehe. Yes the conference session does work. But there is a
difference in the one-to-one and one-to-many replace scenarios; In
your example of the one-to-one conference session it is possible to
replace but &lt;em&gt;not&lt;/em&gt; delete a record. In the many example,
however, replacing a record can indeed be done by deleting one and
adding a new one, but the existing record will be destroyed and
thus not left intact for possible other associations.&lt;/p&gt;
&lt;p&gt;I wonder if this is a problem or not&amp;#8230; Anyways, I don't see
the replacement issue as a blocker for 2.3 as it is an improvement
not a fix, I'd rather wait and give this some time for people to
come up with real encountered issues and the way they solved it. Or
do you actually have this issue in an application?&lt;/p&gt;
&lt;p&gt;About the keys inside the attrs hash, yes in the discussion it
seemed to be mostly about personal preference. But a real issue is
that of people who use composite ids, these can not be used as
index keys like integer keys can and sorting them can fail
(depending on the type of composite ids). Plus for people not using
HTML it becomes much less cumbersome to write the code needed to
create and update records.&lt;/p&gt;
&lt;p&gt;The last question for me would be to choose between:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
{ 1 =&amp;gt; { :id =&amp;gt; '23', :name =&amp;gt; 'joe the plumber' }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
[{ :id =&amp;gt; '23', :name =&amp;gt; 'joe the plumber' }]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I feel the last one is preferable as it completely removes the
need for an ID to be generated, which is an issue when not using
the form helper.&lt;/p&gt;
&lt;p&gt;My limited experiments have shown that both alternatives can be
done easily. The first one would have HTML like:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;input id=&amp;quot;post_comments_attributes_0_id&amp;quot; name=&amp;quot;post[comments_attributes][0][id]&amp;quot; type=&amp;quot;hidden&amp;quot; value=&amp;quot;1&amp;quot; /&amp;gt;
&amp;lt;input id=&amp;quot;post_comments_attributes_0_name&amp;quot; name=&amp;quot;post[comments_attributes][0][name]&amp;quot; size=&amp;quot;30&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;comment #1&amp;quot; /&amp;gt;
&amp;lt;input id=&amp;quot;post_comments_attributes_1_id&amp;quot; name=&amp;quot;post[comments_attributes][1][id]&amp;quot; type=&amp;quot;hidden&amp;quot; value=&amp;quot;2&amp;quot; /&amp;gt;
&amp;lt;input id=&amp;quot;post_comments_attributes_1_name&amp;quot; name=&amp;quot;post[comments_attributes][1][name]&amp;quot; size=&amp;quot;30&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;comment #2&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the second one which Rails parses as an array:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;input id=&amp;quot;post_comments_attributes__id&amp;quot; name=&amp;quot;post[comments_attributes][][id]&amp;quot; type=&amp;quot;hidden&amp;quot; value=&amp;quot;1&amp;quot; /&amp;gt;
&amp;lt;input id=&amp;quot;post_comments_attributes__name&amp;quot; name=&amp;quot;post[comments_attributes][][name]&amp;quot; size=&amp;quot;30&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;comment #1&amp;quot; /&amp;gt;
&amp;lt;input id=&amp;quot;post_comments_attributes__id&amp;quot; name=&amp;quot;post[comments_attributes][][id]&amp;quot; type=&amp;quot;hidden&amp;quot; value=&amp;quot;2&amp;quot; /&amp;gt;
&amp;lt;input id=&amp;quot;post_comments_attributes__name&amp;quot; name=&amp;quot;post[comments_attributes][][name]&amp;quot; size=&amp;quot;30&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;comment #2&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So it seems the parser creates a new hash when it encounters a
key which has been used before. Can anyone think of a problem with
this approach?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T10:40:29+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 141
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T10:40:35+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">9</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There's at least one problem with the second option in my last comment, which is that there shouldn't be any duplicate element ids. But that seems an easy to solve problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There's at least one problem with the second option in my last
comment, which is that there shouldn't be any duplicate element
ids. But that seems an easy to solve problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T12:24:35+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T12:24:39+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">10</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T14:09:03+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T14:09:08+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">11</version>
      <user-name>DHH</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I much prefer to use a hash with unique keys when passing nested attributes through a form. Here are a few reasons.

* the id and name of each form field element will be unique making it pass validation and also easier to reference elements through javascript.
* the order of the nested models can be ensured (sort by the key)
* possible to handle deeply nested associations

The last one is the big one. With the array approach (the empty square brackets) it is not possible to deeply nest model associations.

That said, I'm okay if both approaches &quot;3 &amp; 4&quot;:http://gist.github.com/10793 are supported. If a hash is supplied it would be converted to an array, where the elements are sorted by the hash key. In that case the id would always be listed in the attributes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I much prefer to use a hash with unique keys when passing nested
attributes through a form. Here are a few reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the id and name of each form field element will be unique
making it pass validation and also easier to reference elements
through javascript.&lt;/li&gt;
&lt;li&gt;the order of the nested models can be ensured (sort by the
key)&lt;/li&gt;
&lt;li&gt;possible to handle deeply nested associations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last one is the big one. With the array approach (the empty
square brackets) it is not possible to deeply nest model
associations.&lt;/p&gt;
&lt;p&gt;That said, I'm okay if both approaches &lt;a href=&quot;http://gist.github.com/10793&quot;&gt;3 &amp;amp; 4&lt;/a&gt; are supported. If a
hash is supplied it would be converted to an array, where the
elements are sorted by the hash key. In that case the id would
always be listed in the attributes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T16:13:26+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T16:13:30+00:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">12</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Oops, I meant to say I'm okay with supporting both &quot;approaches 1 &amp; 4&quot;:http://gist.github.com/10793 where the nested attributes could either be given as an array or a hash. If it's a hash, the key would be arbitrary, and only used to sort the elements when converting to an array.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, I meant to say I'm okay with supporting both &lt;a href=&quot;http://gist.github.com/10793&quot;&gt;approaches 1 &amp;amp; 4&lt;/a&gt; where the
nested attributes could either be given as an array or a hash. If
it's a hash, the key would be arbitrary, and only used to sort the
elements when converting to an array.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T16:16:05+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T16:16:11+00:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">13</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ryan, thanks for your thoughts!

Ok, so I will support Hash and Array in the model and use the hash variant in the form to support ids and to handle deeply nested associations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ryan, thanks for your thoughts!&lt;/p&gt;
&lt;p&gt;Ok, so I will support Hash and Array in the model and use the
hash variant in the form to support ids and to handle deeply nested
associations.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T16:51:52+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T16:51:58+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">14</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This new patch supports arrays as well as hashes. I modified the documentation to prefer the array approach, so people aren't distracted by the hash keys. :-) Although I'm still not clear what the non-HTML scenario is ... an API call? If I'm in Ruby, I'm just going to play with the ActiveRecord objects myself.

@Eloy: Regarding your question about being able to destroy a has_one record while replacing, I think the HasOneAssociation#replace method supports that if :dependent is configured?

This patch still doesn't have the :reject_if option. That may or may not need to be changed, depending on final response to ticket #1870.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This new patch supports arrays as well as hashes. I modified the
documentation to prefer the array approach, so people aren't
distracted by the hash keys. :-) Although I'm still not clear what
the non-HTML scenario is ... an API call? If I'm in Ruby, I'm just
going to play with the ActiveRecord objects myself.&lt;/p&gt;
&lt;p&gt;@Eloy: Regarding your question about being able to destroy a
has_one record while replacing, I think the
HasOneAssociation#replace method supports that if :dependent is
configured?&lt;/p&gt;
&lt;p&gt;This patch still doesn't have the :reject_if option. That may or
may not need to be changed, depending on final response to ticket
&lt;a href=&quot;/projects/8994/tickets/1870&quot; title=&quot;Ticket #1870&quot;&gt;#1870&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T20:34:48+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-06T20:34:49+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">15</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This updated patch keeps the :reject_if option.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This updated patch keeps the :reject_if option.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-07T01:01:01+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-07T01:01:02+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">16</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@Lance: Could you please rebase your patch? It unfortunately does not apply for me. Hope you read this soon as I actually wanted to fix this today&#8230;

I think I wasn't completely clear on my question about replacing a record I think; What I meant is that your idea allows a one-to-one associated record to be replaced and not deleted. And you said that replacing a record in a many association was already possible. However, that's not completely the case. It's only possible to replace a record by deleting one and adding one. It's _not_ possible to replace a record and not have it destroyed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Lance: Could you please rebase your patch? It unfortunately
does not apply for me. Hope you read this soon as I actually wanted
to fix this today&amp;#8230;&lt;/p&gt;
&lt;p&gt;I think I wasn't completely clear on my question about replacing
a record I think; What I meant is that your idea allows a
one-to-one associated record to be replaced and not deleted. And
you said that replacing a record in a many association was already
possible. However, that's not completely the case. It's only
possible to replace a record by deleting one and adding one. It's
&lt;em&gt;not&lt;/em&gt; possible to replace a record and not have it
destroyed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-07T13:43:57+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-07T13:43:59+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">17</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Oh and yes the non HTML scenario is API calls :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh and yes the non HTML scenario is API calls :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-07T13:45:53+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-07T13:45:56+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">18</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Ahhh, yes. There is no way to simply disassociate a record from a has_many.

I wonder if that could be controlled by :dependent =&gt; :destroy as well? For example:

* :dependent =&gt; :nullify -- the _delete flag would disassociate records
* :dependent =&gt; :destroy -- the _delete flag would destroy records
* :dependent =&gt; nil -- default behavior, probably same as :nullify

That could take care of has_many, but not habtm, right?

Pascal's idea to use a _replace flag could also work. Would need to think about how that affects the UI. A developer would probably want to pick between a _replace flag or a _destroy flag on a per-form basis.

I assume this is a conversation we should take somewhere else?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ahhh, yes. There is no way to simply disassociate a record from
a has_many.&lt;/p&gt;
&lt;p&gt;I wonder if that could be controlled by :dependent =&amp;gt;
:destroy as well? For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:dependent =&amp;gt; :nullify -- the _delete flag would
disassociate records&lt;/li&gt;
&lt;li&gt;:dependent =&amp;gt; :destroy -- the _delete flag would destroy
records&lt;/li&gt;
&lt;li&gt;:dependent =&amp;gt; nil -- default behavior, probably same as
:nullify&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That could take care of has_many, but not habtm, right?&lt;/p&gt;
&lt;p&gt;Pascal's idea to use a &lt;em&gt;replace flag could also work. Would
need to think about how that affects the UI. A developer would
probably want to pick between a&lt;/em&gt; replace flag or a _destroy
flag on a per-form basis.&lt;/p&gt;
&lt;p&gt;I assume this is a conversation we should take somewhere
else?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-07T20:20:53+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-07T20:20:55+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">19</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-07T22:14:53+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-07T22:14:57+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">20</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Applied Lance&#8217;s changes and made the FormBuilder work with it and also fixed a bug with composite ids in the db.

Should be good to go. I have updated my complex-form-examples fork as well for this change.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Applied Lance&amp;#8217;s changes and made the FormBuilder work with
it and also fixed a bug with composite ids in the db.&lt;/p&gt;
&lt;p&gt;Should be good to go. I have updated my complex-form-examples
fork as well for this change.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-08T13:26:55+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-08T13:26:58+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">21</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Btw, the patch has been normalized, so if applied please add Lance Ivy to the changelog as well :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Btw, the patch has been normalized, so if applied please add
Lance Ivy to the changelog as well :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-08T13:28:33+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-08T13:28:35+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">22</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@Lance &amp; Pascal: Yes please open a new ticket and possibly compile your thoughts/ideas on the replacing/destroying of records.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Lance &amp;amp; Pascal: Yes please open a new ticket and possibly
compile your thoughts/ideas on the replacing/destroying of
records.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-08T13:30:08+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-08T13:30:11+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">23</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [5dbc9d40a49f5f0f50c2f3ebe6dda942f0e61562]) Changed API of NestedAttributes to take an array, or hash with index keys, of hashes that have the id on the inside of the attributes hash and updated the FormBuilder to produce such hashes. Also fixed NestedAttributes with composite ids.

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
Signed-off-by: Eloy Duran &lt;eloy.de.enige@gmail.com&gt;
[#1892 state:committed]
http://github.com/rails/rails/commit/5dbc9d40a49f5f0f50c2f3ebe6dda942f0e61562</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [5dbc9d40a49f5f0f50c2f3ebe6dda942f0e61562]) Changed API of
NestedAttributes to take an array, or hash with index keys, of
hashes that have the id on the inside of the attributes hash and
updated the FormBuilder to produce such hashes. Also fixed
NestedAttributes with composite ids.&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt;
Signed-off-by: Eloy Duran &lt;a href=&quot;mailto:eloy.de.enige@gmail.com&quot;&gt;eloy.de.enige@gmail.com&lt;/a&gt;
[&lt;a href=&quot;/projects/8994/tickets/1892&quot; title=&quot;Ticket #1892&quot;&gt;#1892&lt;/a&gt; state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/5dbc9d40a49f5f0f50c2f3ebe6dda942f0e61562&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-13T09:32:49+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-13T09:32:53+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">24</version>
      <user-name>Repository</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@Lance &amp; Pascal: You guys might want to chip in on #2036. It's about linking/unlinking records in a habtm association, which would probably overlap with the replace functionality you guys were discussing as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Lance &amp;amp; Pascal: You guys might want to chip in on &lt;a href=&quot;/projects/8994/tickets/2036&quot; title=&quot;Ticket #2036&quot;&gt;#2036&lt;/a&gt;. It's
about linking/unlinking records in a habtm association, which would
probably overlap with the replace functionality you guys were
discussing as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-23T08:37:49+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-23T08:37:52+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">25</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>How do I go about installing this patch? (I'm very new to rails and this error comes up when going through the very first tutorial.</body>
      <body-html>&lt;div&gt;&lt;p&gt;How do I go about installing this patch? (I'm very new to rails
and this error comes up when going through the very first
tutorial.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-23T22:59:05+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.3 attributes block nested patch</tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2009-02-23T22:59:07+00:00</updated-at>
      <user-id type="integer">48455</user-id>
      <version type="integer">26</version>
      <user-name>Beren</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:56:44+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 attributes block nested patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2010-10-09T21:56:50+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">28</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Women in summer would like to become beautiful. 
good&lt;a href=&quot;http://www.egacn.com/Watches-new model watches.aspx&quot;&gt;new model watches&lt;/a&gt; can grab other's eyes is &lt;a href=&quot;http://www.egacn.com/Watches-new look watches.aspx&quot;&gt;new look watches&lt;/a&gt; best friends.&lt;a href=&quot;http://www.egacn.com/Watches-breitling bentley motors watches.aspx&quot;&gt;breitling bentley motors watches&lt;/a&gt; make them beauty and confident is &lt;a href=&quot;http://www.egacn.com/Watches-breitling bentley replica watches.aspx&quot;&gt;breitling bentley replica watches&lt;/a&gt;favourite. Look in the street,you can see many different types of make up to &lt;a href=&quot;http://www.egacn.com/Watches-buy discount skagen watches.aspx&quot;&gt;buy discount skagen watches&lt;/a&gt; personality.&lt;a href=&quot;http://www.egacn.com/Watches-buy cheap skagen watches.aspx&quot;&gt;buy cheap skagen watches&lt;/a&gt;In fact any kind of long &lt;a href=&quot;http://www.egacn.com/Watches-mens watches leather straps.aspx&quot;&gt;mens watches leather straps&lt;/a&gt;insulated pants will look quite normal and fit perfectly with a pair of matching-color &lt;a href=&quot;http://www.egacn.com/Watches-longines gold watches.aspx&quot;&gt;longines gold watches&lt;/a&gt;. If you are still worried about what to wear with &lt;a href=&quot;http://www.egacn.com/Watches-mens watches yellow face watches.aspx&quot;&gt;mens watches yellow face watches&lt;/a&gt;, there &lt;a href=&quot;http://www.egacn.com/Watches-orange face watches.aspx&quot;&gt;orange face watches&lt;/a&gt; are many places online such as the &lt;a href=&quot;http://www.egacn.com/Watches-purple face watches.aspx&quot;&gt;purple face watches&lt;/a&gt; which will help you pick out the right apparel to wear with your Ugg Ultra Short.Classic &#8211; This medium sized boot is perfect for any kid. It is designed to provide the most benefit &lt;a href=&quot;http://www.egacn.com/Watches-zenith watches sale.aspx&quot;&gt;zenith watches sale&lt;/a&gt; when worn without &lt;a href=&quot;http://www.egacn.com/Watches-Cartier gentle men watches.aspx&quot;&gt;Cartier gentle men watches&lt;/a&gt;, something kids really like. Being made from premium sheepskin makes this &lt;a href=&quot;http://www.egacn.com/Watches-breitling bentley replica watches.aspx&quot;&gt;breitling bentley replica watches&lt;/a&gt; II  extremely durable as well as waterproof. Kids will love the fact that &lt;a href=&quot;http://www.egacn.com/Watches-quartz watch corum watches.aspx&quot;&gt;quartz watch corum watches&lt;/a&gt;can be either a casual &lt;a href=&quot;http://www.egacn.com/Watches-quartz watches wrist watch.aspx&quot;&gt;quartz watches wrist watch&lt;/a&gt; or a comfortable slipper. The&lt;a href=&quot;http://www.egacn.com/Watches-promotional watch quartz movement.aspx&quot;&gt;promotional watch quartz movement&lt;/a&gt;is made from quality suede and sheepskin, not only will &lt;a href=&quot;http://www.egacn.com/Watches-quality swiss replica watches.aspx&quot;&gt;quality swiss replica watches&lt;/a&gt;feel be durable and strong but &lt;a href=&quot;http://www.egacn.com/Watches-cartier watches w20124u2.aspx&quot;&gt;cartier watches w20124u2&lt;/a&gt; will feel great also.This &lt;a href=&quot;http://www.egacn.com/Watches-buying replica watches.aspx&quot;&gt;buying replica watches&lt;/a&gt; is a great looking &lt;a href=&quot;http://www.egacn.com/Watches-diamond wrist watches.aspx&quot;&gt;diamond wrist watches&lt;/a&gt; that your child will just adore. &lt;a href=&quot;http://www.egacn.com/Watches-guaranteed mens watches.aspx&quot;&gt;guaranteed mens watches&lt;/a&gt; The bottoms are fine suede and the strap &lt;a href=&quot;http://www.egacn.com/Watches-best wrist watches world.aspx&quot;&gt;best wrist watches world&lt;/a&gt; is covered with a short, curly sheepskin making this &lt;a href=&quot;http://www.egacn.com/Watches-luxury watches replica.aspx&quot;&gt;luxury watches replica&lt;/a&gt; extremely &lt;a href=&quot;http://www.egacn.com/Watches-clearance mens watches.aspx&quot;&gt;clearance mens watches&lt;/a&gt; and comfortable. Any kid would love to have a pair of &lt;a href=&quot;http://www.egacn.com/Watches-quartz watches for men.aspx&quot;&gt;quartz watches for men&lt;/a&gt;.Nobody knows how to make feet feel great down under like&lt;a href=&quot;http://www.egacn.com/Watches-young mens watches.aspx&quot;&gt;young mens watches&lt;/a&gt;, and these popular &lt;a href=&quot;http://www.egacn.com/Watches-omega seamaster professional jewel.aspx&quot;&gt;omega seamaster professional jewel&lt;/a&gt;cradle your feet in pampering comfort. &lt;a href=&quot;http://www.egacn.com/Watches-quartz watches men.aspx&quot;&gt;quartz watches men&lt;/a&gt;genuine sheepskin shearling design wicks moisture to keep feet toasty warm, yet dry.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Women in summer would like to become beautiful.&lt;br&gt;
good&lt;a href=
&quot;http://www.egacn.com/Watches-new%20model%20watches.aspx&quot;&gt;new model
watches&lt;/a&gt; can grab other's eyes is &lt;a href=
&quot;http://www.egacn.com/Watches-new%20look%20watches.aspx&quot;&gt;new look
watches&lt;/a&gt; best friends.&lt;a href=
&quot;http://www.egacn.com/Watches-breitling%20bentley%20motors%20watches.aspx&quot;&gt;breitling
bentley motors watches&lt;/a&gt; make them beauty and confident is
&lt;a href=
&quot;http://www.egacn.com/Watches-breitling%20bentley%20replica%20watches.aspx&quot;&gt;
breitling bentley replica watches&lt;/a&gt;favourite. Look in the
street,you can see many different types of make up to &lt;a href=
&quot;http://www.egacn.com/Watches-buy%20discount%20skagen%20watches.aspx&quot;&gt;
buy discount skagen watches&lt;/a&gt; personality.&lt;a href=
&quot;http://www.egacn.com/Watches-buy%20cheap%20skagen%20watches.aspx&quot;&gt;buy
cheap skagen watches&lt;/a&gt;In fact any kind of long &lt;a href=
&quot;http://www.egacn.com/Watches-mens%20watches%20leather%20straps.aspx&quot;&gt;
mens watches leather straps&lt;/a&gt;insulated pants will look quite
normal and fit perfectly with a pair of matching-color &lt;a href=
&quot;http://www.egacn.com/Watches-longines%20gold%20watches.aspx&quot;&gt;longines
gold watches&lt;/a&gt;. If you are still worried about what to wear with
&lt;a href=
&quot;http://www.egacn.com/Watches-mens%20watches%20yellow%20face%20watches.aspx&quot;&gt;
mens watches yellow face watches&lt;/a&gt;, there &lt;a href=
&quot;http://www.egacn.com/Watches-orange%20face%20watches.aspx&quot;&gt;orange
face watches&lt;/a&gt; are many places online such as the &lt;a href=
&quot;http://www.egacn.com/Watches-purple%20face%20watches.aspx&quot;&gt;purple
face watches&lt;/a&gt; which will help you pick out the right apparel to
wear with your Ugg Ultra Short.Classic &amp;#8211; This medium sized
boot is perfect for any kid. It is designed to provide the most
benefit &lt;a href=
&quot;http://www.egacn.com/Watches-zenith%20watches%20sale.aspx&quot;&gt;zenith
watches sale&lt;/a&gt; when worn without &lt;a href=
&quot;http://www.egacn.com/Watches-Cartier%20gentle%20men%20watches.aspx&quot;&gt;
Cartier gentle men watches&lt;/a&gt;, something kids really like. Being
made from premium sheepskin makes this &lt;a href=
&quot;http://www.egacn.com/Watches-breitling%20bentley%20replica%20watches.aspx&quot;&gt;
breitling bentley replica watches&lt;/a&gt; II extremely durable as well
as waterproof. Kids will love the fact that &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watch%20corum%20watches.aspx&quot;&gt;
quartz watch corum watches&lt;/a&gt;can be either a casual &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watches%20wrist%20watch.aspx&quot;&gt;
quartz watches wrist watch&lt;/a&gt; or a comfortable slipper.
The&lt;a href=&quot;http://www.egacn.com/Watches-promotional%20watch%20quartz%20movement.aspx&quot;&gt;promotional
watch quartz movement&lt;/a&gt;is made from quality suede and sheepskin,
not only will &lt;a href=
&quot;http://www.egacn.com/Watches-quality%20swiss%20replica%20watches.aspx&quot;&gt;
quality swiss replica watches&lt;/a&gt;feel be durable and strong but
&lt;a href=
&quot;http://www.egacn.com/Watches-cartier%20watches%20w20124u2.aspx&quot;&gt;cartier
watches w20124u2&lt;/a&gt; will feel great also.This &lt;a href=
&quot;http://www.egacn.com/Watches-buying%20replica%20watches.aspx&quot;&gt;buying
replica watches&lt;/a&gt; is a great looking &lt;a href=
&quot;http://www.egacn.com/Watches-diamond%20wrist%20watches.aspx&quot;&gt;diamond
wrist watches&lt;/a&gt; that your child will just adore. &lt;a href=
&quot;http://www.egacn.com/Watches-guaranteed%20mens%20watches.aspx&quot;&gt;guaranteed
mens watches&lt;/a&gt; The bottoms are fine suede and the strap &lt;a href=
&quot;http://www.egacn.com/Watches-best%20wrist%20watches%20world.aspx&quot;&gt;best
wrist watches world&lt;/a&gt; is covered with a short, curly sheepskin
making this &lt;a href=
&quot;http://www.egacn.com/Watches-luxury%20watches%20replica.aspx&quot;&gt;luxury
watches replica&lt;/a&gt; extremely &lt;a href=
&quot;http://www.egacn.com/Watches-clearance%20mens%20watches.aspx&quot;&gt;clearance
mens watches&lt;/a&gt; and comfortable. Any kid would love to have a pair
of &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watches%20for%20men.aspx&quot;&gt;quartz
watches for men&lt;/a&gt;.Nobody knows how to make feet feel great down
under like&lt;a href=
&quot;http://www.egacn.com/Watches-young%20mens%20watches.aspx&quot;&gt;young
mens watches&lt;/a&gt;, and these popular &lt;a href=
&quot;http://www.egacn.com/Watches-omega%20seamaster%20professional%20jewel.aspx&quot;&gt;
omega seamaster professional jewel&lt;/a&gt;cradle your feet in pampering
comfort. &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watches%20men.aspx&quot;&gt;quartz
watches men&lt;/a&gt;genuine sheepskin shearling design wicks moisture to
keep feet toasty warm, yet dry.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-25T00:08:28+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2010-10-25T03:19:04+01:00</updated-at>
      <user-id type="integer">121592</user-id>
      <version type="integer">29</version>
      <user-name>weifeng</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>And we now offer free shipping for&lt;a href=&quot;http://www.famousbrandwatch.com/proList.asp?classID=43&quot;&gt;fake rolex watches&lt;/a&gt; until 1st, Sept. &lt;a href=&quot;http://www.famousbrandwatch.com/proList.asp?classID=149&quot;&gt;fake rolex watches&lt;/a&gt;is a very respectable clothing line created by&lt;a href=&quot;http://www.famousbrandwatch.com&quot;&gt;replica handbags&lt;/a&gt;. Prices are rather steep but the &lt;a href=&quot;http://www.famousbrandwatch.com&quot;&gt;replica bags&lt;/a&gt; is durable and stylish. Unfortunately, finding
cheap ed hardy clothing is difficult. but you can get ed hardy shoesright now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;And we now offer free shipping for&lt;a href=
&quot;http://www.famousbrandwatch.com/proList.asp?classID=43&quot;&gt;fake rolex
watches&lt;/a&gt; until 1st, Sept. &lt;a href=
&quot;http://www.famousbrandwatch.com/proList.asp?classID=149&quot;&gt;fake
rolex watches&lt;/a&gt;is a very respectable clothing line created
by&lt;a href=&quot;http://www.famousbrandwatch.com&quot;&gt;replica handbags&lt;/a&gt;.
Prices are rather steep but the &lt;a href=
&quot;http://www.famousbrandwatch.com&quot;&gt;replica bags&lt;/a&gt; is durable and
stylish. Unfortunately, finding&lt;br&gt;
cheap ed hardy clothing is difficult. but you can get ed hardy
shoesright now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-25T00:09:40+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2010-10-25T03:19:04+01:00</updated-at>
      <user-id type="integer">121592</user-id>
      <version type="integer">30</version>
      <user-name>weifeng</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-07T16:51:11+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2010-11-07T16:51:14+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">32</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:52:25+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2010-11-08T01:52:27+00:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">34</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T02:36:49+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2010-12-28T03:36:09+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">35</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T06:35:59+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2011-02-22T08:32:34+00:00</updated-at>
      <user-id type="integer">137256</user-id>
      <version type="integer">36</version>
      <user-name>gfsd</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:31:46+00:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1892</number>
      <permalink>nested-attributes-should-not-have-meaningful-hash-keys</permalink>
      <priority type="integer">7</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>nested attributes should not have meaningful hash keys</title>
      <updated-at type="datetime">2011-02-19T09:28:18+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">37</version>
      <user-name>mklo</user-name>
      <creator-name>cainlevy</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1892</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4e00f1fb9953f7a368a697cb6b3decfc24a48cf9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-06T05:26:47+00:00</created-at>
      <filename>move_id_inside_attributes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">85828</id>
      <size type="integer">34666</size>
      <uploader-id type="integer">8964</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/85828/move_id_inside_attributes.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>965ad40f55cc31fccdd9568ad8b8cf93c42c144f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-06T20:34:48+00:00</created-at>
      <filename>move_id_inside_attributes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">86150</id>
      <size type="integer">40671</size>
      <uploader-id type="integer">8964</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/86150/move_id_inside_attributes.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>f3493d7014556319a1a52ad4bb83ad8886b175ae</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-07T01:01:01+00:00</created-at>
      <filename>move_id_inside_attributes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">86285</id>
      <size type="integer">42730</size>
      <uploader-id type="integer">8964</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/86285/move_id_inside_attributes.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>611c993a830e198daf6a4b9e8e3de9acf478fe4f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-08T13:26:55+00:00</created-at>
      <filename>move_ids_inside_attrs_hash_and_fixed_composite_ids.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">86425</id>
      <size type="integer">49637</size>
      <uploader-id type="integer">8406</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/86425/move_ids_inside_attrs_hash_and_fixed_composite_ids.diff</url>
    </attachment>
  </attachments>
</ticket>
