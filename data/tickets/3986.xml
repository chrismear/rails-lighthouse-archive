<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-17T22:21:50+00:00</created-at>
  <creator-id type="integer">38796</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3986</number>
  <permalink>serialized-objects-not-working-in-view-but-works-in-console</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>serialized objects not working in view but works in console</title>
  <updated-at type="datetime">2011-02-02T18:02:37+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">7</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>trevor</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3986</url>
  <priority-name>Low</priority-name>
  <original-body>@@@
% rails -v
Rails 3.0.0.beta
% ruby -v
ruby 1.9.2dev (2010-02-03 trunk 26544) [x86_64-darwin10.2.0]

% rails g scaffold post data:text
% rake db:migrate

# add serialize to Post
% cat app/models/post.rb
class Post &lt; ActiveRecord::Base
  serialize :data
end

# add class to store in data field
% cat lib/like_a_model.rb 
class LikeAModel
  extend ActiveModel::Naming
  include ActiveModel::Validations
  include ActiveModel::Serialization

  attr_accessor :attributes
  
  def initialize(attributes = {})
    @attributes = HashWithIndifferentAccess.new(attributes)
  end
 
  def read_attribute_for_validation(key)
    @attributes[key]
  end
  
  def to_model
    self
  end

  def valid?()      true end
  def new_record?() true end
  def destroyed?()  true end

  def errors
    obj = Object.new
    def obj.[](key)         [] end
    def obj.full_messages() [] end
    obj
  end
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&gt; a = LikeAModel.new(:abc =&gt; 123, :def =&gt; 456)
=&gt; #&lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
irb(main):002:0&gt; b = Post.create(:data =&gt; a)
=&gt; #&lt;Post id: 1, data: #&lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&gt;
irb(main):003:0&gt; x = Post.first
=&gt; #&lt;Post id: 1, data: #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&gt;
irb(main):004:0&gt; x.data
=&gt; #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
irb(main):008:0&gt; raise x.data.inspect
RuntimeError: #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
@@@

everything looking good so far.

now i add &lt;code&gt;x = Post.first; raise x.data.inspect&lt;/code&gt; to a view and receive a YAML::Object instead -

@@@
RuntimeError in PostsController#index
#&lt;YAML::Object:0x00000100e65270 @class=&quot;LikeAModel&quot;, @ivars={&quot;attributes&quot;=&gt;{&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}}&gt;
@@@

and if i attempt to pass &lt;code&gt;x.data&lt;/code&gt; to a form builder i get -

@@@
undefined method `model_name' for &quot;LikeAModel&quot;:String
@@@</original-body>
  <latest-body>@@@
% rails -v
Rails 3.0.0.beta
% ruby -v
ruby 1.9.2dev (2010-02-03 trunk 26544) [x86_64-darwin10.2.0]

% rails g scaffold post data:text
% rake db:migrate

# add serialize to Post
% cat app/models/post.rb
class Post &lt; ActiveRecord::Base
  serialize :data
end

# add class to store in data field
% cat lib/like_a_model.rb 
class LikeAModel
  extend ActiveModel::Naming
  include ActiveModel::Validations
  include ActiveModel::Serialization

  attr_accessor :attributes
  
  def initialize(attributes = {})
    @attributes = HashWithIndifferentAccess.new(attributes)
  end
 
  def read_attribute_for_validation(key)
    @attributes[key]
  end
  
  def to_model
    self
  end

  def valid?()      true end
  def new_record?() true end
  def destroyed?()  true end

  def errors
    obj = Object.new
    def obj.[](key)         [] end
    def obj.full_messages() [] end
    obj
  end
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&gt; a = LikeAModel.new(:abc =&gt; 123, :def =&gt; 456)
=&gt; #&lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
irb(main):002:0&gt; b = Post.create(:data =&gt; a)
=&gt; #&lt;Post id: 1, data: #&lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&gt;
irb(main):003:0&gt; x = Post.first
=&gt; #&lt;Post id: 1, data: #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&gt;
irb(main):004:0&gt; x.data
=&gt; #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
irb(main):008:0&gt; raise x.data.inspect
RuntimeError: #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
@@@

everything looking good so far.

now i add &lt;code&gt;x = Post.first; raise x.data.inspect&lt;/code&gt; to a view and receive a YAML::Object instead -

@@@
RuntimeError in PostsController#index
#&lt;YAML::Object:0x00000100e65270 @class=&quot;LikeAModel&quot;, @ivars={&quot;attributes&quot;=&gt;{&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}}&gt;
@@@

and if i attempt to pass &lt;code&gt;x.data&lt;/code&gt; to a form builder i get -

@@@
undefined method `model_name' for &quot;LikeAModel&quot;:String
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;% rails -v
Rails 3.0.0.beta
% ruby -v
ruby 1.9.2dev (2010-02-03 trunk 26544) [x86_64-darwin10.2.0]

% rails g scaffold post data:text
% rake db:migrate

# add serialize to Post
% cat app/models/post.rb
class Post &amp;lt; ActiveRecord::Base
  serialize :data
end

# add class to store in data field
% cat lib/like_a_model.rb 
class LikeAModel
  extend ActiveModel::Naming
  include ActiveModel::Validations
  include ActiveModel::Serialization

  attr_accessor :attributes
  
  def initialize(attributes = {})
    @attributes = HashWithIndifferentAccess.new(attributes)
  end
 
  def read_attribute_for_validation(key)
    @attributes[key]
  end
  
  def to_model
    self
  end

  def valid?()      true end
  def new_record?() true end
  def destroyed?()  true end

  def errors
    obj = Object.new
    def obj.[](key)         [] end
    def obj.full_messages() [] end
    obj
  end
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&amp;gt; a = LikeAModel.new(:abc =&amp;gt; 123, :def =&amp;gt; 456)
=&amp;gt; #&amp;lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;
irb(main):002:0&amp;gt; b = Post.create(:data =&amp;gt; a)
=&amp;gt; #&amp;lt;Post id: 1, data: #&amp;lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&amp;gt;
irb(main):003:0&amp;gt; x = Post.first
=&amp;gt; #&amp;lt;Post id: 1, data: #&amp;lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&amp;gt;
irb(main):004:0&amp;gt; x.data
=&amp;gt; #&amp;lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;
irb(main):008:0&amp;gt; raise x.data.inspect
RuntimeError: #&amp;lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;everything looking good so far.&lt;/p&gt;
&lt;p&gt;now i add &lt;code&gt;x = Post.first; raise x.data.inspect&lt;/code&gt; to a
view and receive a YAML::Object instead -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;RuntimeError in PostsController#index
#&amp;lt;YAML::Object:0x00000100e65270 @class=&quot;LikeAModel&quot;, @ivars={&quot;attributes&quot;=&amp;gt;{&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}}&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and if i attempt to pass &lt;code&gt;x.data&lt;/code&gt; to a form builder i
get -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `model_name' for &quot;LikeAModel&quot;:String&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
% rails -v
Rails 3.0.0.beta
% ruby -v
ruby 1.9.2dev (2010-02-03 trunk 26544) [x86_64-darwin10.2.0]

% rails g scaffold post data:text
% rake db:migrate

# add serialize to Post
% cat app/models/post.rb
class Post &lt; ActiveRecord::Base
  serialize :data
end

# add class to store in data field
% cat lib/like_a_model.rb 
class LikeAModel
  extend ActiveModel::Naming
  include ActiveModel::Validations
  include ActiveModel::Serialization

  attr_accessor :attributes
  
  def initialize(attributes = {})
    @attributes = HashWithIndifferentAccess.new(attributes)
  end
 
  def read_attribute_for_validation(key)
    @attributes[key]
  end
  
  def to_model
    self
  end

  def valid?()      true end
  def new_record?() true end
  def destroyed?()  true end

  def errors
    obj = Object.new
    def obj.[](key)         [] end
    def obj.full_messages() [] end
    obj
  end
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&gt; a = LikeAModel.new(:abc =&gt; 123, :def =&gt; 456)
=&gt; #&lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
irb(main):002:0&gt; b = Post.create(:data =&gt; a)
=&gt; #&lt;Post id: 1, data: #&lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&gt;
irb(main):003:0&gt; x = Post.first
=&gt; #&lt;Post id: 1, data: #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&gt;
irb(main):004:0&gt; x.data
=&gt; #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
irb(main):008:0&gt; raise x.data.inspect
RuntimeError: #&lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}&gt;
@@@

everything looking good so far.

now i add &lt;code&gt;x = Post.first; raise x.data.inspect&lt;/code&gt; to a view and receive a YAML::Object instead -

@@@
RuntimeError in PostsController#index
#&lt;YAML::Object:0x00000100e65270 @class=&quot;LikeAModel&quot;, @ivars={&quot;attributes&quot;=&gt;{&quot;abc&quot;=&gt;123, &quot;def&quot;=&gt;456}}&gt;
@@@

and if i attempt to pass &lt;code&gt;x.data&lt;/code&gt; to a form builder i get -

@@@
undefined method `model_name' for &quot;LikeAModel&quot;:String
@@@</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;% rails -v
Rails 3.0.0.beta
% ruby -v
ruby 1.9.2dev (2010-02-03 trunk 26544) [x86_64-darwin10.2.0]

% rails g scaffold post data:text
% rake db:migrate

# add serialize to Post
% cat app/models/post.rb
class Post &amp;lt; ActiveRecord::Base
  serialize :data
end

# add class to store in data field
% cat lib/like_a_model.rb 
class LikeAModel
  extend ActiveModel::Naming
  include ActiveModel::Validations
  include ActiveModel::Serialization

  attr_accessor :attributes
  
  def initialize(attributes = {})
    @attributes = HashWithIndifferentAccess.new(attributes)
  end
 
  def read_attribute_for_validation(key)
    @attributes[key]
  end
  
  def to_model
    self
  end

  def valid?()      true end
  def new_record?() true end
  def destroyed?()  true end

  def errors
    obj = Object.new
    def obj.[](key)         [] end
    def obj.full_messages() [] end
    obj
  end
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&amp;gt; a = LikeAModel.new(:abc =&amp;gt; 123, :def =&amp;gt; 456)
=&amp;gt; #&amp;lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;
irb(main):002:0&amp;gt; b = Post.create(:data =&amp;gt; a)
=&amp;gt; #&amp;lt;Post id: 1, data: #&amp;lt;LikeAModel:0x00000100edadb8 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&amp;gt;
irb(main):003:0&amp;gt; x = Post.first
=&amp;gt; #&amp;lt;Post id: 1, data: #&amp;lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;, created_at: &quot;2010-02-17 22:10:07&quot;, updated_at: &quot;2010-02-17 22:10:07&quot;&amp;gt;
irb(main):004:0&amp;gt; x.data
=&amp;gt; #&amp;lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;
irb(main):008:0&amp;gt; raise x.data.inspect
RuntimeError: #&amp;lt;LikeAModel:0x00000102381500 @attributes={&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;everything looking good so far.&lt;/p&gt;
&lt;p&gt;now i add &lt;code&gt;x = Post.first; raise x.data.inspect&lt;/code&gt; to a
view and receive a YAML::Object instead -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;RuntimeError in PostsController#index
#&amp;lt;YAML::Object:0x00000100e65270 @class=&quot;LikeAModel&quot;, @ivars={&quot;attributes&quot;=&amp;gt;{&quot;abc&quot;=&amp;gt;123, &quot;def&quot;=&amp;gt;456}}&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and if i attempt to pass &lt;code&gt;x.data&lt;/code&gt; to a form builder i
get -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `model_name' for &quot;LikeAModel&quot;:String&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-17T22:21:50+00:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3986</number>
      <permalink>serialized-objects-not-working-in-view-but-works-in-console</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>serialized objects not working in view but works in console</title>
      <updated-at type="datetime">2010-02-17T22:21:54+00:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">1</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3986</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-11T10:57:42+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3986</number>
      <permalink>serialized-objects-not-working-in-view-but-works-in-console</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>serialized objects not working in view but works in console</title>
      <updated-at type="datetime">2010-10-11T10:57:43+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>trevor</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3986</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T08:25:44+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3986</number>
      <permalink>serialized-objects-not-working-in-view-but-works-in-console</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>serialized objects not working in view but works in console</title>
      <updated-at type="datetime">2010-10-19T08:25:45+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>trevor</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3986</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:48:23+00:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3986</number>
      <permalink>serialized-objects-not-working-in-view-but-works-in-console</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>serialized objects not working in view but works in console</title>
      <updated-at type="datetime">2011-02-02T18:02:29+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>trevor</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3986</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:48:24+00:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3986</number>
      <permalink>serialized-objects-not-working-in-view-but-works-in-console</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>serialized objects not working in view but works in console</title>
      <updated-at type="datetime">2011-02-02T18:02:37+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>trevor</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3986</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
