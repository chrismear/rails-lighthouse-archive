From 4fb7b4c71dd72eb89ed49ab5a78442102f1d0b9b Mon Sep 17 00:00:00 2001
From: Alexandre Riveira <alexandre@objectdata.com.br>
Date: Mon, 6 Sep 2010 22:00:37 -0300
Subject: [PATCH 1/2] add tsvector type in postgres adapter

---
 .../connection_adapters/postgresql_adapter.rb      |   11 ++++++++++-
 1 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb b/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb
index 0a2bacd..48b879b 100644
--- a/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb
+++ b/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb
@@ -32,6 +32,11 @@ module ActiveRecord
         options = args.extract_options!
         column(args[0], 'xml', options)
       end
+
+      def tsvector(*args)
+        options = args.extract_options!
+        column(args[0], 'tsvector', options)
+      end
     end
     # PostgreSQL-specific extensions to column definitions in a table.
     class PostgreSQLColumn < Column #:nodoc:
@@ -102,6 +107,9 @@ module ActiveRecord
             # XML type
             when 'xml'
               :xml
+            # tsvector type
+            when 'tsvector'
+              :tsvector
             # Arrays
             when /^\D+\[\]$/
               :string
@@ -207,7 +215,8 @@ module ActiveRecord
         :date        => { :name => "date" },
         :binary      => { :name => "bytea" },
         :boolean     => { :name => "boolean" },
-        :xml         => { :name => "xml" }
+        :xml         => { :name => "xml" },
+        :tsvector    => { :name => "tsvector" }
       }
 
       # Returns 'PostgreSQL' as adapter name for identification purposes.
-- 
1.7.2.2


From 42181b3f7e03e74874526ea2abd731ba37ceaf20 Mon Sep 17 00:00:00 2001
From: Alexandre Riveira <alexandre@objectdata.com.br>
Date: Tue, 7 Sep 2010 21:23:35 -0300
Subject: [PATCH 2/2] tests from tsvector

---
 .../cases/adapters/postgresql/datatype_test.rb     |   25 ++++++++++++++++++++
 activerecord/test/cases/schema_dumper_test.rb      |    7 +++++
 .../test/schema/postgresql_specific_schema.rb      |   10 +++++++-
 3 files changed, 41 insertions(+), 1 deletions(-)

diff --git a/activerecord/test/cases/adapters/postgresql/datatype_test.rb b/activerecord/test/cases/adapters/postgresql/datatype_test.rb
index 5bb8fa2..b08e838 100644
--- a/activerecord/test/cases/adapters/postgresql/datatype_test.rb
+++ b/activerecord/test/cases/adapters/postgresql/datatype_test.rb
@@ -3,6 +3,9 @@ require "cases/helper"
 class PostgresqlArray < ActiveRecord::Base
 end
 
+class PostgresqlTsvector < ActiveRecord::Base
+end
+
 class PostgresqlMoney < ActiveRecord::Base
 end
 
@@ -34,6 +37,9 @@ class PostgresqlDataTypeTest < ActiveRecord::TestCase
     @connection.execute("INSERT INTO postgresql_arrays (commission_by_quarter, nicknames) VALUES ( '{35000,21000,18000,17000}', '{foo,bar,baz}' )")
     @first_array = PostgresqlArray.find(1)
 
+    @connection.execute("INSERT INTO postgresql_tsvectors (text_vector) VALUES (' ''text'' ''vector'' ')")
+    @first_tsvector = PostgresqlTsvector.find(1)
+
     @connection.execute("INSERT INTO postgresql_moneys (wealth) VALUES ('567.89'::money)")
     @connection.execute("INSERT INTO postgresql_moneys (wealth) VALUES ('-567.89'::money)")
     @first_money = PostgresqlMoney.find(1)
@@ -62,6 +68,10 @@ class PostgresqlDataTypeTest < ActiveRecord::TestCase
     assert_equal :string, @first_array.column_for_attribute(:nicknames).type
   end
 
+  def test_data_type_of_tsvector_types
+    assert_equal :tsvector, @first_tsvector.column_for_attribute(:text_vector).type
+  end
+
   def test_data_type_of_money_types
     assert_equal :decimal, @first_money.column_for_attribute(:wealth).type
   end
@@ -95,6 +105,10 @@ class PostgresqlDataTypeTest < ActiveRecord::TestCase
    assert_equal '{foo,bar,baz}', @first_array.nicknames
   end
 
+  def test_tsvector_values
+    assert_equal "'text' 'vector'", @first_tsvector.text_vector
+  end
+
   def test_money_values
     assert_equal 567.89, @first_money.wealth
     assert_equal(-567.89, @second_money.wealth)
@@ -148,6 +162,17 @@ class PostgresqlDataTypeTest < ActiveRecord::TestCase
     assert_equal @first_array.nicknames, new_value
   end
 
+  def test_update_tsvector
+    new_text_vector = "'new' 'text' 'vector'"
+    assert @first_tsvector.text_vector = new_text_vector
+    assert @first_tsvector.save
+    assert @first_tsvector.reload
+    assert @first_tsvector.text_vector = new_text_vector
+    assert @first_tsvector.save
+    assert @first_tsvector.reload
+    assert_equal @first_tsvector.text_vector, new_text_vector
+  end
+
   def test_update_money
     new_value = BigDecimal.new('123.45')
     assert @first_money.wealth = new_value
diff --git a/activerecord/test/cases/schema_dumper_test.rb b/activerecord/test/cases/schema_dumper_test.rb
index 66446b6..dd2aba6 100644
--- a/activerecord/test/cases/schema_dumper_test.rb
+++ b/activerecord/test/cases/schema_dumper_test.rb
@@ -203,6 +203,13 @@ class SchemaDumperTest < ActiveRecord::TestCase
         assert_match %r{t.xml "data"}, output
       end
     end
+
+    def test_schema_dump_includes_tsvector_shorthand_definition
+      output = standard_dump
+      if %r{create_table "postgresql_tsvectors"} =~ output
+        assert_match %r{t.tsvector "text_vector"}, output
+      end
+    end
   end
 
   def test_schema_dump_keeps_large_precision_integer_columns_as_decimal
diff --git a/activerecord/test/schema/postgresql_specific_schema.rb b/activerecord/test/schema/postgresql_specific_schema.rb
index f38f4f3..5cf9a20 100644
--- a/activerecord/test/schema/postgresql_specific_schema.rb
+++ b/activerecord/test/schema/postgresql_specific_schema.rb
@@ -1,6 +1,6 @@
 ActiveRecord::Schema.define do
 
-  %w(postgresql_arrays postgresql_moneys postgresql_numbers postgresql_times postgresql_network_addresses postgresql_bit_strings
+  %w(postgresql_tsvectors postgresql_arrays postgresql_moneys postgresql_numbers postgresql_times postgresql_network_addresses postgresql_bit_strings
       postgresql_oids postgresql_xml_data_type defaults geometrics postgresql_timestamp_with_zones).each do |table_name|
     execute "DROP TABLE  IF EXISTS #{quote_table_name table_name}"
   end
@@ -55,6 +55,14 @@ _SQL
     nicknames TEXT[]
   );
 _SQL
+
+  execute <<_SQL
+  CREATE TABLE postgresql_tsvectors (
+    id SERIAL PRIMARY KEY,
+    text_vector tsvector
+  );
+_SQL
+
   execute <<_SQL
   CREATE TABLE postgresql_moneys (
     id SERIAL PRIMARY KEY,
-- 
1.7.2.2

