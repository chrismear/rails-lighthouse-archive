<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-01T10:49:47+01:00</created-at>
  <creator-id type="integer">18890</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">74</number>
  <permalink>problem-with-tests-and-custom-mysql-fulltext-indexes</permalink>
  <priority type="integer">10521</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>custom migrations mysql tests</tag>
  <title>problem with tests and custom mysql fulltext indexes</title>
  <updated-at type="datetime">2008-06-03T20:05:24+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">4</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>stanislav</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/74</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm using Rails 2.0.2 / MySQL 5.0.45

I think it's a kind of bug/problem for tests and mysql fulltext indexes, which doesn't have a common workaround.

So, it goes like this:
I have this in my migration:
execute &quot;CREATE FULLTEXT INDEX fulltext_summary ON indexed_stories (summary)&quot;

where &quot;summary&quot; is mysql text field.

The problem that I see is that when running &quot;rake db:test:prepare&quot; it always loads &quot;schema.rb&quot;. However in it, instead of the above custom execute we have this line:
add_index &quot;indexed_stories&quot;, [&quot;summary&quot;], :name =&gt; &quot;fulltext_summary&quot;

which tries to create a normal index and dies with:
Mysql::Error: BLOB/TEXT column 'summary' used in key specification without a key length: CREATE  INDEX `fulltext_title_summary` ON `indexed_stories` (`title`, `summary`)

Is there a work-around for such situations where we're using custom sql in migrations?</original-body>
  <latest-body>I'm using Rails 2.0.2 / MySQL 5.0.45

I think it's a kind of bug/problem for tests and mysql fulltext indexes, which doesn't have a common workaround.

So, it goes like this:
I have this in my migration:
execute &quot;CREATE FULLTEXT INDEX fulltext_summary ON indexed_stories (summary)&quot;

where &quot;summary&quot; is mysql text field.

The problem that I see is that when running &quot;rake db:test:prepare&quot; it always loads &quot;schema.rb&quot;. However in it, instead of the above custom execute we have this line:
add_index &quot;indexed_stories&quot;, [&quot;summary&quot;], :name =&gt; &quot;fulltext_summary&quot;

which tries to create a normal index and dies with:
Mysql::Error: BLOB/TEXT column 'summary' used in key specification without a key length: CREATE  INDEX `fulltext_title_summary` ON `indexed_stories` (`title`, `summary`)

Is there a work-around for such situations where we're using custom sql in migrations?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I'm using Rails 2.0.2 / MySQL 5.0.45
&lt;/p&gt;&lt;p&gt;
I think it's a kind of bug/problem for tests and mysql fulltext indexes, which doesn't have a common workaround.
&lt;/p&gt;&lt;p&gt;
So, it goes like this:
&lt;/p&gt;&lt;p&gt;
I have this in my migration:
&lt;/p&gt;&lt;p&gt;
execute &quot;CREATE FULLTEXT INDEX fulltext_summary ON indexed_stories (summary)&quot;
&lt;/p&gt;&lt;p&gt;
where &quot;summary&quot; is mysql text field.
&lt;/p&gt;&lt;p&gt;
The problem that I see is that when running &quot;rake db:test:prepare&quot; it always loads &quot;schema.rb&quot;. However in it, instead of the above custom execute we have this line:
&lt;/p&gt;&lt;p&gt;
add_index &quot;indexed_stories&quot;, [&quot;summary&quot;], :name =&gt; &quot;fulltext_summary&quot;
&lt;/p&gt;&lt;p&gt;
which tries to create a normal index and dies with:
&lt;/p&gt;&lt;p&gt;
Mysql::Error: BLOB/TEXT column 'summary' used in key specification without a key length: CREATE  INDEX `fulltext_title_summary` ON `indexed_stories` (`title`, `summary`)
&lt;/p&gt;&lt;p&gt;
Is there a work-around for such situations where we're using custom sql in migrations?
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm using Rails 2.0.2 / MySQL 5.0.45

I think it's a kind of bug/problem for tests and mysql fulltext indexes, which doesn't have a common workaround.

So, it goes like this:
I have this in my migration:
execute &quot;CREATE FULLTEXT INDEX fulltext_summary ON indexed_stories (summary)&quot;

where &quot;summary&quot; is mysql text field.

The problem that I see is that when running &quot;rake db:test:prepare&quot; it always loads &quot;schema.rb&quot;. However in it, instead of the above custom execute we have this line:
add_index &quot;indexed_stories&quot;, [&quot;summary&quot;], :name =&gt; &quot;fulltext_summary&quot;

which tries to create a normal index and dies with:
Mysql::Error: BLOB/TEXT column 'summary' used in key specification without a key length: CREATE  INDEX `fulltext_title_summary` ON `indexed_stories` (`title`, `summary`)

Is there a work-around for such situations where we're using custom sql in migrations?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm using Rails 2.0.2 / MySQL 5.0.45
&lt;/p&gt;&lt;p&gt;
I think it's a kind of bug/problem for tests and mysql fulltext indexes, which doesn't have a common workaround.
&lt;/p&gt;&lt;p&gt;
So, it goes like this:
&lt;/p&gt;&lt;p&gt;
I have this in my migration:
&lt;/p&gt;&lt;p&gt;
execute &quot;CREATE FULLTEXT INDEX fulltext_summary ON indexed_stories (summary)&quot;
&lt;/p&gt;&lt;p&gt;
where &quot;summary&quot; is mysql text field.
&lt;/p&gt;&lt;p&gt;
The problem that I see is that when running &quot;rake db:test:prepare&quot; it always loads &quot;schema.rb&quot;. However in it, instead of the above custom execute we have this line:
&lt;/p&gt;&lt;p&gt;
add_index &quot;indexed_stories&quot;, [&quot;summary&quot;], :name =&gt; &quot;fulltext_summary&quot;
&lt;/p&gt;&lt;p&gt;
which tries to create a normal index and dies with:
&lt;/p&gt;&lt;p&gt;
Mysql::Error: BLOB/TEXT column 'summary' used in key specification without a key length: CREATE  INDEX `fulltext_title_summary` ON `indexed_stories` (`title`, `summary`)
&lt;/p&gt;&lt;p&gt;
Is there a work-around for such situations where we're using custom sql in migrations?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T10:49:47+01:00</created-at>
      <creator-id type="integer">18890</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">74</number>
      <permalink>problem-with-tests-and-custom-mysql-fulltext-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with tests and custom mysql fulltext indexes</title>
      <updated-at type="datetime">2008-05-01T10:49:47+01:00</updated-at>
      <user-id type="integer">18890</user-id>
      <version type="integer">1</version>
      <user-name>stanislav</user-name>
      <creator-name>stanislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/74</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In environment.rb uncomment:

config.active_record.schema_format = :sql

Then when you run db:test:prepare --trace you'll notice that it uses clone_structure instead of clone.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
In environment.rb uncomment:
&lt;/p&gt;&lt;p&gt;
config.active_record.schema_format = :sql
&lt;/p&gt;&lt;p&gt;
Then when you run db:test:prepare --trace you'll notice that it uses clone_structure instead of clone.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T10:59:37+01:00</created-at>
      <creator-id type="integer">18890</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">74</number>
      <permalink>problem-with-tests-and-custom-mysql-fulltext-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with tests and custom mysql fulltext indexes</title>
      <updated-at type="datetime">2008-05-01T10:59:37+01:00</updated-at>
      <user-id type="integer">5060</user-id>
      <version type="integer">2</version>
      <user-name>Jeff Dean</user-name>
      <creator-name>stanislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/74</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thank you for the support. It's OK now. You can close this ticket. It was a kind of obvious resolution, but....

Best Wishes</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Thank you for the support. It's OK now. You can close this ticket. It was a kind of obvious resolution, but....
&lt;/p&gt;&lt;p&gt;
Best Wishes
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T14:56:07+01:00</created-at>
      <creator-id type="integer">18890</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">74</number>
      <permalink>problem-with-tests-and-custom-mysql-fulltext-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with tests and custom mysql fulltext indexes</title>
      <updated-at type="datetime">2008-05-01T14:56:07+01:00</updated-at>
      <user-id type="integer">18890</user-id>
      <version type="integer">3</version>
      <user-name>stanislav</user-name>
      <creator-name>stanislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/74</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-03T20:05:24+01:00</created-at>
      <creator-id type="integer">18890</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">74</number>
      <permalink>problem-with-tests-and-custom-mysql-fulltext-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>problem with tests and custom mysql fulltext indexes</title>
      <updated-at type="datetime">2008-06-03T20:05:24+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">4</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>stanislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/74</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
