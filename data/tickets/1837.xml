<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-01T16:07:53+00:00</created-at>
  <creator-id type="integer">45835</creator-id>
  <milestone-due-on type="datetime">2010-01-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">50064</milestone-id>
  <number type="integer">1837</number>
  <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
  <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
  <updated-at type="datetime">2010-04-25T00:21:00+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">25</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Kurt Stephens</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
  <milestone-title>2.3.6</milestone-title>
  <priority-name>High</priority-name>
  <original-body>&quot;\\&quot; is a valid PostgreSQL escape for a literal backslash.  This causes very serious data round-trip problems.

The fix is to let the PostgreSQL client lib do the work, rather than scanning for &quot;\\\d{3}&quot;.  It's probably faster, too.

module ActiveRecord
  module ConnectionAdapters
    class PostgreSQLAdapter
      # The stock version of this only unescapes_bytea values if
      # the raw data contains /\\\d{3}/, which clobbers the
      # common escape of '\\'.
      def unescape_bytea(value)
        PGconn.unescape_bytea(value)
      end
    end
  end
end</original-body>
  <latest-body>&quot;\\&quot; is a valid PostgreSQL escape for a literal backslash.  This causes very serious data round-trip problems.

The fix is to let the PostgreSQL client lib do the work, rather than scanning for &quot;\\\d{3}&quot;.  It's probably faster, too.

module ActiveRecord
  module ConnectionAdapters
    class PostgreSQLAdapter
      # The stock version of this only unescapes_bytea values if
      # the raw data contains /\\\d{3}/, which clobbers the
      # common escape of '\\'.
      def unescape_bytea(value)
        PGconn.unescape_bytea(value)
      end
    end
  end
end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;&quot;\&quot; is a valid PostgreSQL escape for a literal backslash. This
causes very serious data round-trip problems.&lt;/p&gt;
&lt;p&gt;The fix is to let the PostgreSQL client lib do the work, rather
than scanning for &quot;\\d{3}&quot;. It's probably faster, too.&lt;/p&gt;
&lt;p&gt;module ActiveRecord module ConnectionAdapters&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class PostgreSQLAdapter
  # The stock version of this only unescapes_bytea values if
  # the raw data contains /\\\d{3}/, which clobbers the
  # common escape of '\\'.
  def unescape_bytea(value)
    PGconn.unescape_bytea(value)
  end
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&quot;\\&quot; is a valid PostgreSQL escape for a literal backslash.  This causes very serious data round-trip problems.

The fix is to let the PostgreSQL client lib do the work, rather than scanning for &quot;\\\d{3}&quot;.  It's probably faster, too.

module ActiveRecord
  module ConnectionAdapters
    class PostgreSQLAdapter
      # The stock version of this only unescapes_bytea values if
      # the raw data contains /\\\d{3}/, which clobbers the
      # common escape of '\\'.
      def unescape_bytea(value)
        PGconn.unescape_bytea(value)
      end
    end
  end
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;&quot;\&quot; is a valid PostgreSQL escape for a literal backslash. This
causes very serious data round-trip problems.&lt;/p&gt;
&lt;p&gt;The fix is to let the PostgreSQL client lib do the work, rather
than scanning for &quot;\\d{3}&quot;. It's probably faster, too.&lt;/p&gt;
&lt;p&gt;module ActiveRecord module ConnectionAdapters&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class PostgreSQLAdapter
  # The stock version of this only unescapes_bytea values if
  # the raw data contains /\\\d{3}/, which clobbers the
  # common escape of '\\'.
  def unescape_bytea(value)
    PGconn.unescape_bytea(value)
  end
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T16:07:53+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-02-01T16:07:56+00:00</updated-at>
      <user-id type="integer">45835</user-id>
      <version type="integer">1</version>
      <user-name>Kurt Stephens</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Which postgresql gem are you using?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Which postgresql gem are you using?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T01:39:48+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-02-11T01:39:49+00:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">2</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; gem list postgres
 *** LOCAL GEMS ***
 postgres (0.7.9.2008.01.28)</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;gem list postgres &lt;strong&gt;&lt;em&gt;LOCAL GEMS&lt;/em&gt;&lt;/strong&gt; postgres
(0.7.9.2008.01.28)&lt;/p&gt;
&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-12T01:11:03+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-02-12T01:11:07+00:00</updated-at>
      <user-id type="integer">45835</user-id>
      <version type="integer">3</version>
      <user-name>Kurt Stephens</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; gem list --remote postgres
  *** REMOTE GEMS ***
  postgres (0.7.9.2008.01.28)
  postgres-pr (0.5.1)

The issue is not with the postgres gem.  The hacked-up test for checking if data returned from postgres needs unescaped is wrong and unnecessary.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;gem list --remote postgres &lt;strong&gt;&lt;em&gt;REMOTE GEMS&lt;/em&gt;&lt;/strong&gt;
postgres (0.7.9.2008.01.28) postgres-pr (0.5.1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The issue is not with the postgres gem. The hacked-up test for
checking if data returned from postgres needs unescaped is wrong
and unnecessary.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-12T01:13:44+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-02-12T01:13:49+00:00</updated-at>
      <user-id type="integer">45835</user-id>
      <version type="integer">4</version>
      <user-name>Kurt Stephens</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The reason that I ask is that a lot of the weird stuff we do in postgres was introduced to deal with problems with the gems, and unfortunately it sticks around long after the problems get fixed.

There's a lot of confusion around things like this because there are three related gems, ruby-postgres, postgres, and now pg.

So I'm wondering if ruby-postgres had an issue and we added a workaround back when ruby-postgres was the standard.  Even the postgres gem you're using is in the process towards deprecating - current thinking on the mailing list seems to go that we'll move to &quot;pg&quot; only after 2.3.

Anyway, if you upload a patch with a test case for the problem, it's definitely something we'd all like to see fixed.  Please test against edge/2.3 RC.

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;The reason that I ask is that a lot of the weird stuff we do in
postgres was introduced to deal with problems with the gems, and
unfortunately it sticks around long after the problems get
fixed.&lt;/p&gt;
&lt;p&gt;There's a lot of confusion around things like this because there
are three related gems, ruby-postgres, postgres, and now pg.&lt;/p&gt;
&lt;p&gt;So I'm wondering if ruby-postgres had an issue and we added a
workaround back when ruby-postgres was the standard. Even the
postgres gem you're using is in the process towards deprecating -
current thinking on the mailing list seems to go that we'll move to
&quot;pg&quot; only after 2.3.&lt;/p&gt;
&lt;p&gt;Anyway, if you upload a patch with a test case for the problem,
it's definitely something we'd all like to see fixed. Please test
against edge/2.3 RC.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-16T03:25:18+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-02-16T03:25:20+00:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">5</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The real issue is to let whatever PG client libary Rails is using do the job of quoting and unquoting data.  There's no good reason for quoting rules to be handled in ActiveRecord.  The client library is either correct or incorrect -- incorrect client libraries should get fixed or disappear.

Unfortunately I don't have resources at the moment to write patches and unit tests but here's a quick snippet that can be added to the existing Postgres tests:

Try to save and load the following ASCII Ruby string as binary data in a postgres bytea column:

&lt;pre&gt;
  &quot;this string contains a literal \\ somewhere inside&quot;
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;The real issue is to let whatever PG client libary Rails is
using do the job of quoting and unquoting data. There's no good
reason for quoting rules to be handled in ActiveRecord. The client
library is either correct or incorrect -- incorrect client
libraries should get fixed or disappear.&lt;/p&gt;
&lt;p&gt;Unfortunately I don't have resources at the moment to write
patches and unit tests but here's a quick snippet that can be added
to the existing Postgres tests:&lt;/p&gt;
&lt;p&gt;Try to save and load the following ASCII Ruby string as binary
data in a postgres bytea column:&lt;/p&gt;
&lt;pre&gt;
  &quot;this string contains a literal \\ somewhere inside&quot;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-07T05:52:43+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-05-07T05:52:46+01:00</updated-at>
      <user-id type="integer">45835</user-id>
      <version type="integer">6</version>
      <user-name>Kurt Stephens</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-06T14:29:08+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2-stable activerecord postgres postgresql
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord bugmash postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-08-06T14:29:11+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">7</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>-1 unable to reproduce on master. 
 
Used native postgresql adapter and postgres (0.7.9.2008.01.28)</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 unable to reproduce on master.&lt;/p&gt;
&lt;p&gt;Used native postgresql adapter and postgres
(0.7.9.2008.01.28)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T23:13:16+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord bugmash postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-08-09T23:13:19+01:00</updated-at>
      <user-id type="integer">36650</user-id>
      <version type="integer">8</version>
      <user-name>Elise Huard</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This absolutely *IS* a problem on Rails 2.3.2 and postgres gem 0.7.9.2008.01.28 (using PostgreSQL 8.3.5). Perhaps it is fixed in edge (haven't checked yet). It seems as though Rails is interpreting double backslashes from Postgres as literal, where each double backslash should in fact be a single escaped backslash. See my script/console output below.

(where &quot;object&quot; is an ActiveRecord object and &quot;field&quot; is a bytea field)

&gt;&gt; object.field = '\\'
=&gt; &quot;\\&quot;
&gt;&gt; puts object.field
\
&gt;&gt; object.save
=&gt; true
&gt;&gt; object.reload
...
&gt;&gt; puts object.field
=&gt; \\</body>
      <body-html>&lt;div&gt;&lt;p&gt;This absolutely &lt;em&gt;IS&lt;/em&gt; a problem on Rails 2.3.2 and
postgres gem 0.7.9.2008.01.28 (using PostgreSQL 8.3.5). Perhaps it
is fixed in edge (haven't checked yet). It seems as though Rails is
interpreting double backslashes from Postgres as literal, where
each double backslash should in fact be a single escaped backslash.
See my script/console output below.&lt;/p&gt;
&lt;p&gt;(where &quot;object&quot; is an ActiveRecord object and &quot;field&quot; is a bytea
field)&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;object.field = '\' =&amp;gt; &quot;\&quot; puts object.field \ object.save
=&amp;gt; true object.reload ... puts object.field =&amp;gt; \&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-11T22:10:48+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2-stable activerecord bugmash postgres postgresql
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable activerecord bugmash postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-08-11T22:10:50+01:00</updated-at>
      <user-id type="integer">65956</user-id>
      <version type="integer">9</version>
      <user-name>Matt White</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ugh, sorry for the hideous formatting.

object.field = '\\'  
=&gt; &quot;\\&quot;  
puts object.field  
\\  
object.save  
=&gt; true  
object.reload  
...  
puts object.field  
=&gt; \\\\</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ugh, sorry for the hideous formatting.&lt;/p&gt;
&lt;p&gt;object.field = '\'&lt;br&gt;
=&amp;gt; &quot;\&quot;&lt;br&gt;
puts object.field&lt;br&gt;
\&lt;br&gt;
object.save&lt;br&gt;
=&amp;gt; true&lt;br&gt;
object.reload&lt;br&gt;
...&lt;br&gt;
puts object.field&lt;br&gt;
=&amp;gt; \\&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-11T22:16:15+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable activerecord bugmash postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-08-11T22:16:23+01:00</updated-at>
      <user-id type="integer">65956</user-id>
      <version type="integer">10</version>
      <user-name>Matt White</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just repro'd this with edge rails using both postgres and pg. The key here is:

 1. it has to be a bytea column
 2. you have to put a literal backslash in it (e.g obj.col = &quot;lol \\ omg&quot;), save and reload
 3. there can be no unprintable octets in the string (0 to 31 and 127 to 255)

http://dev.rubyonrails.org/ticket/8049 and http://dev.rubyonrails.org/changeset/7329 provide some insight. In this massive refactoring, some conditional logic was added to unescape the binary string only when it looks like it's escaped (i.e. there are escaped octets). Note the new &quot;if value =~ /\\\\\d{3}/&quot; check that appears in two places (one for postgres/pg, the other for ruby-postgres)... this was later changed to the slightly less broken version &quot;if value =~ /\\\d{3}/&quot;. A relevant comment near the offending if statement reads:

@@@
 # In each case, check if the value actually is escaped PostgreSQL bytea output
 # or an unescaped Active Record attribute that was just written.
@@@

There may have been reasons for this addition at one point, or perhaps it was always wrong. Regardless, today in the PostgreSQLAdapter, unescape_bytea is only ever called on strings that have just come from the database. So we should always unescape them, whether or not they &quot;look&quot; escaped. As Kurt points out, the check is unnecessary, potentially adds overhead, and breaks things.

As a side note, it would be nice if pg/postgres/ruby-postgres simply knew which columns were binary and which ones weren't when returning a result set, in which case it could handle the unescaping for us. That may not be practical and would certainly break a lot of existing code, so it's probably best to simply fix unescape_bytea to work like it used to.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just repro'd this with edge rails using both postgres and pg.
The key here is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it has to be a bytea column&lt;/li&gt;
&lt;li&gt;you have to put a literal backslash in it (e.g obj.col = &quot;lol \
omg&quot;), save and reload&lt;/li&gt;
&lt;li&gt;there can be no unprintable octets in the string (0 to 31 and
127 to 255)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=
&quot;http://dev.rubyonrails.org/ticket/8049&quot;&gt;http://dev.rubyonrails.org/ticket/8049&lt;/a&gt;
and &lt;a href=
&quot;http://dev.rubyonrails.org/changeset/7329&quot;&gt;http://dev.rubyonrails.org/changeset/7329&lt;/a&gt;
provide some insight. In this massive refactoring, some conditional
logic was added to unescape the binary string only when it looks
like it's escaped (i.e. there are escaped octets). Note the new &quot;if
value =~ /\\\d{3}/&quot; check that appears in two places (one for
postgres/pg, the other for ruby-postgres)... this was later changed
to the slightly less broken version &quot;if value =~ /\\d{3}/&quot;. A
relevant comment near the offending if statement reads:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; # In each case, check if the value actually is escaped PostgreSQL bytea output
 # or an unescaped Active Record attribute that was just written.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There may have been reasons for this addition at one point, or
perhaps it was always wrong. Regardless, today in the
PostgreSQLAdapter, unescape_bytea is only ever called on strings
that have just come from the database. So we should always unescape
them, whether or not they &quot;look&quot; escaped. As Kurt points out, the
check is unnecessary, potentially adds overhead, and breaks
things.&lt;/p&gt;
&lt;p&gt;As a side note, it would be nice if pg/postgres/ruby-postgres
simply knew which columns were binary and which ones weren't when
returning a result set, in which case it could handle the
unescaping for us. That may not be practical and would certainly
break a lot of existing code, so it's probably best to simply fix
unescape_bytea to work like it used to.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-14T01:05:14+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable activerecord bugmash postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-08-14T01:05:21+01:00</updated-at>
      <user-id type="integer">66234</user-id>
      <version type="integer">11</version>
      <user-name>Jon Jensen</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry, some of my backslashes got mangled (what else is new? ;).

 * Example in bullet point 2 should read `obj.col = &quot;lol \\ omg&quot;`
 * Initial if statement should read `if value =~ /\\\\\d{3}/`
 * Second if statement should read `if value =~ /\\\d{3}/`</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, some of my backslashes got mangled (what else is new?
;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example in bullet point 2 should read &lt;code&gt;obj.col = &quot;lol \\
omg&quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Initial if statement should read &lt;code&gt;if value =~
/\\\\\d{3}/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Second if statement should read &lt;code&gt;if value =~
/\\\d{3}/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-14T01:21:13+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable activerecord bugmash postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2009-08-14T01:21:20+01:00</updated-at>
      <user-id type="integer">66234</user-id>
      <version type="integer">12</version>
      <user-name>Jon Jensen</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Does this still bug still apply on 2.3.5?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Does this still bug still apply on 2.3.5?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-20T11:36:17+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2-stable 2.3-stable activerecord bugmash postgres postgresql
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-01-20T11:36:20+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">13</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm I'm having difficulty with this - it appears like it's doing some extra escaping or something, but something gets malformed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm I'm having difficulty with this - it appears like
it's doing some extra escaping or something, but something gets
malformed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-25T02:13:49+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-01-25T02:13:50+00:00</updated-at>
      <user-id type="integer">22242</user-id>
      <version type="integer">14</version>
      <user-name>Dan Pickett</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-25T09:41:47+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2-stable 2.3-stable activerecord postgres postgresql
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-01-25T09:41:49+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">15</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think I've run into a very similar version of this with Rails 2.3.5, and this is what I've discovered:

The trick is the PostgresqlAdapter's handling of standard_conforming_strings, and the postgres/pg gem automagically figuring that out already.

The pg gem (0.8.0 or 0.9.0; quite possibly the older postgres 0.79 gem as well, since they probably all rely on the libpg C client lib to do this) is aware of the state of the server's standard_conforming_strings option.  This option determines whether or not backslashes need to be escaped (in SQL standard, they do not; Postgres uses them as an escape character, and therefore need to be escaped).  When s_c_s is turned on, the native escape function is NOT escaping backslashes, because it doesn't need to -- it's not expecting Rails to put an E before the string (which pushes Postgres back to its non-standard needs-escaping pattern).

However, in PostgresqlAdapter, the quoted_string_prefix method is being defined to return 'E' regardless of what the setting of s_c_s is, when really it should only be doing that if the setting is &quot;off&quot; (and even then, it shouldn't need to, because the pg client lib is doing the right thing already).

So check to see if you have standard_conforming_strings turned on, in your postgresql.conf file.  Perhaps this needs to be a separate bug to fix the PostgresqlAdapter's handling of the s_c_s (or maybe, if the behavior of the old postgres gem is different than the newer pg gems, the adapter just needs to be more aware of which gem it's using?)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think I've run into a very similar version of this with Rails
2.3.5, and this is what I've discovered:&lt;/p&gt;
&lt;p&gt;The trick is the PostgresqlAdapter's handling of
standard_conforming_strings, and the postgres/pg gem automagically
figuring that out already.&lt;/p&gt;
&lt;p&gt;The pg gem (0.8.0 or 0.9.0; quite possibly the older postgres
0.79 gem as well, since they probably all rely on the libpg C
client lib to do this) is aware of the state of the server's
standard_conforming_strings option. This option determines whether
or not backslashes need to be escaped (in SQL standard, they do
not; Postgres uses them as an escape character, and therefore need
to be escaped). When s_c_s is turned on, the native escape function
is NOT escaping backslashes, because it doesn't need to -- it's not
expecting Rails to put an E before the string (which pushes
Postgres back to its non-standard needs-escaping pattern).&lt;/p&gt;
&lt;p&gt;However, in PostgresqlAdapter, the quoted_string_prefix method
is being defined to return 'E' regardless of what the setting of
s_c_s is, when really it should only be doing that if the setting
is &quot;off&quot; (and even then, it shouldn't need to, because the pg
client lib is doing the right thing already).&lt;/p&gt;
&lt;p&gt;So check to see if you have standard_conforming_strings turned
on, in your postgresql.conf file. Perhaps this needs to be a
separate bug to fix the PostgresqlAdapter's handling of the s_c_s
(or maybe, if the behavior of the old postgres gem is different
than the newer pg gems, the adapter just needs to be more aware of
which gem it's using?)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-08T18:50:52+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-08T18:50:58+00:00</updated-at>
      <user-id type="integer">68891</user-id>
      <version type="integer">16</version>
      <user-name>...Paul</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you can't change your database configuration, try this as an initializer:

@@@ ruby

module ActiveRecord
  module ConnectionAdapters
    class PostgreSQLAdapter
      alias original_connect connect
      def connect
        original_connect
        self.class.instance_eval do
          define_method(:quoted_string_prefix) { '' }
        end
      end
    end
  end
end

@@@

If you're using a recent postgres lib (which is already obeying the standard_conforming_strings setting), and your standard_conforming_strings is turned on, this might solve the problems.  It solved ours.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you can't change your database configuration, try this as an
initializer:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
module ActiveRecord
  module ConnectionAdapters
    class PostgreSQLAdapter
      alias original_connect connect
      def connect
        original_connect
        self.class.instance_eval do
          define_method(:quoted_string_prefix) { '' }
        end
      end
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you're using a recent postgres lib (which is already obeying
the standard_conforming_strings setting), and your
standard_conforming_strings is turned on, this might solve the
problems. It solved ours.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-08T19:28:33+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-08T19:28:38+00:00</updated-at>
      <user-id type="integer">68891</user-id>
      <version type="integer">17</version>
      <user-name>...Paul</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Paul, thanks for the analysis.

We need a patch and test demonstrating that no quoting prefix is used when standard_conforming_strings is set.

Any takers? 2.3.6 will release shortly so let's get this fix out the door.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Paul, thanks for the analysis.&lt;/p&gt;
&lt;p&gt;We need a patch and test demonstrating that no quoting prefix is
used when standard_conforming_strings is set.&lt;/p&gt;
&lt;p&gt;Any takers? 2.3.6 will release shortly so let's get this fix out
the door.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-08T20:18:31+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-08T20:18:35+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">18</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's not just dropping the prefix when standard_conforming_strings is set to &quot;on&quot; -- it's also about checking that the Postgres lib being used (pg, postgres, whatever) is doing the right thing with its escaping.

So the logic should probably be something like, if s_c_s is &quot;on&quot;, attempt to call the escaping function with &quot;foo \\&quot;.  If the result is &quot;foo \\&quot;, then don't prefix the quoted string with anything.  If the result is &quot;foo \\\\&quot;, then you DO want to prefix the quoted string with an E...</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's not just dropping the prefix when
standard_conforming_strings is set to &quot;on&quot; -- it's also about
checking that the Postgres lib being used (pg, postgres, whatever)
is doing the right thing with its escaping.&lt;/p&gt;
&lt;p&gt;So the logic should probably be something like, if s_c_s is
&quot;on&quot;, attempt to call the escaping function with &quot;foo \&quot;. If the
result is &quot;foo \&quot;, then don't prefix the quoted string with
anything. If the result is &quot;foo \\&quot;, then you DO want to prefix the
quoted string with an E...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-08T21:10:19+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 85
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-08T21:10:22+00:00</updated-at>
      <user-id type="integer">68891</user-id>
      <version type="integer">19</version>
      <user-name>...Paul</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oops, didn't mean to clear the responsible party...  And I note my backslashes got eaten a bit, but I think the point is obvious.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, didn't mean to clear the responsible party... And I note
my backslashes got eaten a bit, but I think the point is
obvious.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-08T21:11:04+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-08T21:11:08+00:00</updated-at>
      <user-id type="integer">68891</user-id>
      <version type="integer">20</version>
      <user-name>...Paul</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>That's a great idea. Just feature check. Now for a patch... :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's a great idea. Just feature check. Now for a patch...
:)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-08T21:16:27+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-08T21:16:29+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">21</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Unless I'm completely mistaken -- The E'' prefix has nothing to do with this bug.  The E'' prefix is the extended escape sequence that Postgresql-8.3 (and up) supports for non-ANSI SQL standard string escape sequences.  This is postgresql's way of dealing with deficiencies/ambiguities in the ANSI SQL standard.

This issue is that the ActiveRecord value =~ /\\\\\d{3}/ &quot;heuristic&quot; that decides on how unescape BYTEA data is completely WRONG and UNNECESSARY and slow.

Just let the low-level Postgres driver do its job of handling BYTEA data -- there is no reason for ActiveRecord to do any thing
other than passing the raw unescaped data to the correct Postgres unescape_bytea() function.

If the low-level postgres lib (pb, postgres, or whatever) is broken, don't fix it in ActiveRecord.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Unless I'm completely mistaken -- The E'' prefix has nothing to
do with this bug. The E'' prefix is the extended escape sequence
that Postgresql-8.3 (and up) supports for non-ANSI SQL standard
string escape sequences. This is postgresql's way of dealing with
deficiencies/ambiguities in the ANSI SQL standard.&lt;/p&gt;
&lt;p&gt;This issue is that the ActiveRecord value =~ /\\\d{3}/
&quot;heuristic&quot; that decides on how unescape BYTEA data is completely
WRONG and UNNECESSARY and slow.&lt;/p&gt;
&lt;p&gt;Just let the low-level Postgres driver do its job of handling
BYTEA data -- there is no reason for ActiveRecord to do any
thing&lt;br&gt;
other than passing the raw unescaped data to the correct Postgres
unescape_bytea() function.&lt;/p&gt;
&lt;p&gt;If the low-level postgres lib (pb, postgres, or whatever) is
broken, don't fix it in ActiveRecord.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-09T06:39:18+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-09T06:39:21+00:00</updated-at>
      <user-id type="integer">45835</user-id>
      <version type="integer">22</version>
      <user-name>Kurt Stephens</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Kurt, I think you're right.  I'll file a new bug about the problem with standard_conforming_strings and Rails, and copy some of the info from this thread to that one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Kurt, I think you're right. I'll file a new bug about the
problem with standard_conforming_strings and Rails, and copy some
of the info from this thread to that one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-10T00:21:48+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-10T00:21:50+00:00</updated-at>
      <user-id type="integer">68891</user-id>
      <version type="integer">23</version>
      <user-name>...Paul</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This ticket is good Paul, keeps history. Sounds like the answer is to simply remove the stale heuristic.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This ticket is good Paul, keeps history. Sounds like the answer
is to simply remove the stale heuristic.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-10T00:58:47+00:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-03-10T00:58:50+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">24</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This has been sitting stale forever, so I made some simple changes:

http://github.com/rails/rails/commit/c9e15709aef6baed329157adeef58099f16501b2
http://github.com/rails/rails/commit/5c0ad822363f15d372caaee8b39f3c0e89a13503

Reopen with a failing test case if you have any issues.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This has been sitting stale forever, so I made some simple
changes:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/c9e15709aef6baed329157adeef58099f16501b2&quot;&gt;
http://github.com/rails/rails/commit/c9e15709aef6baed329157adeef580...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/5c0ad822363f15d372caaee8b39f3c0e89a13503&quot;&gt;
http://github.com/rails/rails/commit/5c0ad822363f15d372caaee8b39f3c...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reopen with a failing test case if you have any issues.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-25T00:20:56+01:00</created-at>
      <creator-id type="integer">45835</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">1837</number>
      <permalink>postgressqladapterunescape_bytea-does-not-handle</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3-stable 2.3.5 activerecord postgres postgresql</tag>
      <title>PostgresSQLAdapter#unescape_bytea does not handle &quot;\\&quot;</title>
      <updated-at type="datetime">2010-04-25T00:21:00+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">25</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Kurt Stephens</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1837</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
