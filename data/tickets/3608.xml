<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">5</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-04T09:14:16+01:00</created-at>
  <creator-id type="integer">40090</creator-id>
  <milestone-due-on type="datetime">2010-01-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">50064</milestone-id>
  <number type="integer">3608</number>
  <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>active_record active_support datamapper hash serialization yaml</tag>
  <title>OrderedHash serialization doesn't work in AR</title>
  <updated-at type="datetime">2010-08-04T09:14:16+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">24</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Jorge Dias</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
  <milestone-title>2.3.6</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When you serailize an OrderedHash in ActiveRecord, when you retreive the value, it doesn't initialize the object, so you get errors on OrderedHash, because the @keys variable is nil.

undefined method `each' for nil:NilClass

/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:40:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in `map'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `call'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:38:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/quoting.rb:31:in `quote_before_arext'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/ar-extensions-0.9.2/lib/ar-extensions/finders.rb:9:in `quote'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/mysql_adapter.rb:236:in `quo! te'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2992:in `attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in `each'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in `attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2881:in `update_without_lock'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/locking/optimistic.rb:70:in `update_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:146:in `update_without_timestamps'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/timestamp.rb:64:in `update_without_callbacks'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb! :282:in `update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/g! ems/activerecord-2.3.5/lib/active_record/base.rb:2874:in `create_or_update_without_callbacks'

/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb:250:in `create_or_update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2538:in `save_without_validation'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/validations.rb:1078:in `save_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:79:in `save_without_transactions'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in `send'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in `with_transaction_returning_status'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/databa! se_statements.rb:136:in `transaction'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:182:in `transaction'

...</original-body>
  <latest-body>When you serailize an OrderedHash in ActiveRecord, when you retreive the value, it doesn't initialize the object, so you get errors on OrderedHash, because the @keys variable is nil.

undefined method `each' for nil:NilClass

/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:40:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in `map'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `call'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:38:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/quoting.rb:31:in `quote_before_arext'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/ar-extensions-0.9.2/lib/ar-extensions/finders.rb:9:in `quote'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/mysql_adapter.rb:236:in `quo! te'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2992:in `attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in `each'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in `attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2881:in `update_without_lock'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/locking/optimistic.rb:70:in `update_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:146:in `update_without_timestamps'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/timestamp.rb:64:in `update_without_callbacks'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb! :282:in `update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/g! ems/activerecord-2.3.5/lib/active_record/base.rb:2874:in `create_or_update_without_callbacks'

/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb:250:in `create_or_update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2538:in `save_without_validation'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/validations.rb:1078:in `save_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:79:in `save_without_transactions'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in `send'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in `with_transaction_returning_status'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/databa! se_statements.rb:136:in `transaction'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:182:in `transaction'

...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When you serailize an OrderedHash in ActiveRecord, when you
retreive the value, it doesn't initialize the object, so you get
errors on OrderedHash, because the @keys variable is nil.&lt;/p&gt;
&lt;p&gt;undefined method &lt;code&gt;each' for nil:NilClass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in
&lt;code&gt;each'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:40:in&lt;/code&gt;to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in
&lt;code&gt;map'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in&lt;/code&gt;to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in &lt;code&gt;call'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in&lt;/code&gt;emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in &lt;code&gt;quick_emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:38:in&lt;/code&gt;to_yaml'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/quoting.rb:31:in
&lt;code&gt;quote_before_arext'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/ar-extensions-0.9.2/lib/ar-extensions/finders.rb:9:in&lt;/code&gt;quote'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/mysql_adapter.rb:236:in
&lt;code&gt;quo! te'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2992:in&lt;/code&gt;attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in
&lt;code&gt;each'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in&lt;/code&gt;attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2881:in
&lt;code&gt;update_without_lock'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/locking/optimistic.rb:70:in&lt;/code&gt;update_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:146:in
&lt;code&gt;update_without_timestamps'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/timestamp.rb:64:in&lt;/code&gt;update_without_callbacks'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb!
:282:in &lt;code&gt;update' /opt/ruby-enterprise/lib/ruby/gems/1.8/g!
ems/activerecord-2.3.5/lib/active_record/base.rb:2874:in&lt;/code&gt;create_or_update_without_callbacks'&lt;/p&gt;
&lt;p&gt;
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb:250:in
&lt;code&gt;create_or_update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2538:in&lt;/code&gt;save_without_validation'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/validations.rb:1078:in
&lt;code&gt;save_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:79:in&lt;/code&gt;save_without_transactions'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in
&lt;code&gt;send'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in&lt;/code&gt;with_transaction_returning_status'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/databa!
se_statements.rb:136:in &lt;code&gt;transaction'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:182:in&lt;/code&gt;transaction'&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When you serailize an OrderedHash in ActiveRecord, when you retreive the value, it doesn't initialize the object, so you get errors on OrderedHash, because the @keys variable is nil.

undefined method `each' for nil:NilClass

/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:40:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in `map'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `call'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:38:in `to_yaml'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/quoting.rb:31:in `quote_before_arext'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/ar-extensions-0.9.2/lib/ar-extensions/finders.rb:9:in `quote'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/mysql_adapter.rb:236:in `quo! te'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2992:in `attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in `each'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in `attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2881:in `update_without_lock'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/locking/optimistic.rb:70:in `update_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:146:in `update_without_timestamps'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/timestamp.rb:64:in `update_without_callbacks'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb! :282:in `update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/g! ems/activerecord-2.3.5/lib/active_record/base.rb:2874:in `create_or_update_without_callbacks'

/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb:250:in `create_or_update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2538:in `save_without_validation'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/validations.rb:1078:in `save_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:79:in `save_without_transactions'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in `send'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in `with_transaction_returning_status'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/databa! se_statements.rb:136:in `transaction'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:182:in `transaction'

...</body>
      <body-html>&lt;div&gt;&lt;p&gt;When you serailize an OrderedHash in ActiveRecord, when you
retreive the value, it doesn't initialize the object, so you get
errors on OrderedHash, because the @keys variable is nil.&lt;/p&gt;
&lt;p&gt;undefined method &lt;code&gt;each' for nil:NilClass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in
&lt;code&gt;each'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:40:in&lt;/code&gt;to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in
&lt;code&gt;map'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:39:in&lt;/code&gt;to_yaml'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in &lt;code&gt;call'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in&lt;/code&gt;emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml.rb:391:in &lt;code&gt;quick_emit'
/opt/ruby-enterprise/lib/ruby/1.8/yaml/rubytypes.rb:38:in&lt;/code&gt;to_yaml'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/quoting.rb:31:in
&lt;code&gt;quote_before_arext'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/ar-extensions-0.9.2/lib/ar-extensions/finders.rb:9:in&lt;/code&gt;quote'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/mysql_adapter.rb:236:in
&lt;code&gt;quo! te'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2992:in&lt;/code&gt;attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in
&lt;code&gt;each'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2983:in&lt;/code&gt;attributes_with_quotes'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2881:in
&lt;code&gt;update_without_lock'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/locking/optimistic.rb:70:in&lt;/code&gt;update_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:146:in
&lt;code&gt;update_without_timestamps'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/timestamp.rb:64:in&lt;/code&gt;update_without_callbacks'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb!
:282:in &lt;code&gt;update' /opt/ruby-enterprise/lib/ruby/gems/1.8/g!
ems/activerecord-2.3.5/lib/active_record/base.rb:2874:in&lt;/code&gt;create_or_update_without_callbacks'&lt;/p&gt;
&lt;p&gt;
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/callbacks.rb:250:in
&lt;code&gt;create_or_update'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2538:in&lt;/code&gt;save_without_validation'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/validations.rb:1078:in
&lt;code&gt;save_without_dirty'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/dirty.rb:79:in&lt;/code&gt;save_without_transactions'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in
&lt;code&gt;send'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:229:in&lt;/code&gt;with_transaction_returning_status'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/connection_adapters/abstract/databa!
se_statements.rb:136:in &lt;code&gt;transaction'
/opt/ruby-enterprise/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/transactions.rb:182:in&lt;/code&gt;transaction'&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-23T13:32:55+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record hash serialization</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2009-12-23T13:32:58+00:00</updated-at>
      <user-id type="integer">40090</user-id>
      <version type="integer">1</version>
      <user-name>Jorge Dias</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-23T13:33:12+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record hash serialization
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support hash serialization</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2009-12-23T13:33:14+00:00</updated-at>
      <user-id type="integer">40090</user-id>
      <version type="integer">2</version>
      <user-name>Jorge Dias</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hey I tried this in both 2-3 stable and master branches. Can't reproduce it. Could you provide perhaps a small code snippet that fails to run because of this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey I tried this in both 2-3 stable and master branches. Can't
reproduce it. Could you provide perhaps a small code snippet that
fails to run because of this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-24T21:33:12+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record active_support hash serialization
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2009-12-24T21:33:14+00:00</updated-at>
      <user-id type="integer">79439</user-id>
      <version type="integer">3</version>
      <user-name>Serguei Filimonov</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I wonder that this problem arise from using ar-extensions plugin?

Can you try to remove the plugin first, and see if the problem still exists?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I wonder that this problem arise from using ar-extensions
plugin?&lt;/p&gt;
&lt;p&gt;Can you try to remove the plugin first, and see if the problem
still exists?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-25T15:49:39+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2009-12-25T15:49:41+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">4</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm getting the same error, and I don't use ar-extensions.  The error happens only in Rails 2.3.5, not in 2.3.4.  

I have an AR model with a serialized hash attribute, which itself contains some nested hashes.  The error below occurs when saving the model.  Hope that helps.  I'll see if I can get a stand-alone code snippet to replicate this if it remains outstanding for too long.     

    NoMethodError: You have a nil object when you didn't expect it!
    You might have expected an instance of Array.
    The error occurred while evaluating nil.each
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:40:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `map'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:38:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `node_export'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `add'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `each'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `map'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:15:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `node_export'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `add'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `each'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `map'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:15:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:41:in `node_export'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:41:in `add'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:41:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:40:in `each'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:40:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `map'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `to_yaml'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
    /opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:38:in `to_yaml'</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm getting the same error, and I don't use ar-extensions. The
error happens only in Rails 2.3.5, not in 2.3.4.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I have an AR model with a serialized hash attribute, which
itself contains some nested hashes. The error below occurs when
saving the model. Hope that helps. I'll see if I can get a
stand-alone code snippet to replicate this if it remains
outstanding for too long.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.each
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:40:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `map'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:38:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `node_export'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `add'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `each'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `map'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:15:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `node_export'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `add'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:18:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `each'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:17:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `map'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:16:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:15:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:41:in `node_export'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:41:in `add'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:41:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:40:in `each'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:40:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `map'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:39:in `to_yaml'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `call'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml.rb:391:in `quick_emit'
/opt/ruby-enterprise-1.8.7-2009.10/lib/ruby/1.8/yaml/rubytypes.rb:38:in `to_yaml'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-25T19:01:48+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2009-12-25T19:01:50+00:00</updated-at>
      <user-id type="integer">80641</user-id>
      <version type="integer">5</version>
      <user-name>Dave Ungerer</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can now confirm that this bug doesn't happen under Ruby 1.9.1.  That leaves 2 possibilities that I can see:

1. It's a bug in Ruby Enterprise Edition (since both bug reports used it)
2. It's a general 1.8 incompatibility introduced when fixing 1.9 compatibility. (since the bug was introduced in Rails 2.3.5)

I'm not going to bother installing and testing with MRI 1.8.7 to narrow down the possiblities, because it's not a deployment option for me.  Will just upgrade to Ruby 1.9.1 instead - been needing an excuse.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can now confirm that this bug doesn't happen under Ruby 1.9.1.
That leaves 2 possibilities that I can see:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's a bug in Ruby Enterprise Edition (since both bug reports
used it)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;It's a general 1.8 incompatibility introduced when fixing 1.9
compatibility. (since the bug was introduced in Rails 2.3.5)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'm not going to bother installing and testing with MRI 1.8.7 to
narrow down the possiblities, because it's not a deployment option
for me. Will just upgrade to Ruby 1.9.1 instead - been needing an
excuse.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-15T11:53:57+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-15T11:53:58+00:00</updated-at>
      <user-id type="integer">80641</user-id>
      <version type="integer">6</version>
      <user-name>Dave Ungerer</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am seeing this bug as well. The test case on http://gist.github.com/286087 is the shortest one, I could come up with.

It fails with activesupport -v 2.3.5 on 

* Ruby 1.8.6-p287
* Ruby 1.8.7-p248
* JRuby 1.4
* JRuby HEAD

As far as I can tell, there's no direct relation to AR - it just uses the broken functionality of AS.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am seeing this bug as well. The test case on &lt;a href=
&quot;http://gist.github.com/286087&quot;&gt;http://gist.github.com/286087&lt;/a&gt;
is the shortest one, I could come up with.&lt;/p&gt;
&lt;p&gt;It fails with activesupport -v 2.3.5 on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ruby 1.8.6-p287&lt;/li&gt;
&lt;li&gt;Ruby 1.8.7-p248&lt;/li&gt;
&lt;li&gt;JRuby 1.4&lt;/li&gt;
&lt;li&gt;JRuby HEAD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As far as I can tell, there's no direct relation to AR - it just
uses the broken functionality of AS.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-25T18:55:38+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-25T18:55:40+00:00</updated-at>
      <user-id type="integer">83937</user-id>
      <version type="integer">7</version>
      <user-name>Gregor Schmidt</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm this too. I don't use AR, I'm a datamapper user, but it happens when I run specs for dm-serializer from branches of dm-core and dm-more that work with active_support

http://github.com/snusnu/dm-core/tree/active_support
http://github.com/snusnu/dm-more/tree/active_support

Now the cool thing is that this is the *only* failing spec for the whole of dm-core and dm-more specs, when running with active_support instead of extlib.

I would *really* appreciate a fix for this, since that would mean that datamapper is 100% compatible with active_support and my patches could safely be pulled into dm-core and dm-more repositories. This, in combination with http://github.com/dkubb/rails3_datamapper would mean that datamapper is fully usable with current rails master.

Here's what I get:

@@@
undefined method `each' for nil:NilClass
/Users/snusnu/.rvm/gems/ree/1.8.7%rails3/gems/activesupport-3.0.pre/lib/active_support/ordered_hash.rb:97:in `each'
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this too. I don't use AR, I'm a datamapper user,
but it happens when I run specs for dm-serializer from branches of
dm-core and dm-more that work with active_support&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/snusnu/dm-core/tree/active_support&quot;&gt;http://github.com/snusnu/dm-core/tree/active_support&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/snusnu/dm-more/tree/active_support&quot;&gt;http://github.com/snusnu/dm-more/tree/active_support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now the cool thing is that this is the &lt;em&gt;only&lt;/em&gt; failing
spec for the whole of dm-core and dm-more specs, when running with
active_support instead of extlib.&lt;/p&gt;
&lt;p&gt;I would &lt;em&gt;really&lt;/em&gt; appreciate a fix for this, since that
would mean that datamapper is 100% compatible with active_support
and my patches could safely be pulled into dm-core and dm-more
repositories. This, in combination with &lt;a href=
&quot;http://github.com/dkubb/rails3_datamapper&quot;&gt;http://github.com/dkubb/rails3_datamapper&lt;/a&gt;
would mean that datamapper is fully usable with current rails
master.&lt;/p&gt;
&lt;p&gt;Here's what I get:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `each' for nil:NilClass
/Users/snusnu/.rvm/gems/ree/1.8.7%rails3/gems/activesupport-3.0.pre/lib/active_support/ordered_hash.rb:97:in `each'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T03:17:23+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record active_support hash serialization yaml
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-26T03:17:24+00:00</updated-at>
      <user-id type="integer">16008</user-id>
      <version type="integer">8</version>
      <user-name>Martin Gamsjaeger (snusnu)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Based on Gregor's test case reduction, it looks like YAML.load is creating the OrderedHash object without calling #initialize (or for that matter the allocate or new class methods).

Here's a simple work-around I found that causes Gregor's test to pass:

@@@ ruby
  class ActiveSupport::OrderedHash
    def yaml_initialize(*)
      initialize()  # initialize @keys
      super
    end
  end
@@@

I would submit a patch, but I wanted to understand why YAML is doing this. Is it a bug, or was it on purpose? I mean, I can understand why it might not call new directly, but why is it not calling allocate? (and how is it doing that... is there some part of the MRI C API that allows it to allocate a Ruby object without calling any of the normal methods?) I can't tell if it's bypassing things on purpose, with a valid reason, or not.

I also couldn't really find any documentation on yaml_initialize. I found it by looking through the source. It seems to be reasonably well used in other parts of YAML, but I was cautious to recommend using it unless my usage is valid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Based on Gregor's test case reduction, it looks like YAML.load
is creating the OrderedHash object without calling #initialize (or
for that matter the allocate or new class methods).&lt;/p&gt;
&lt;p&gt;Here's a simple work-around I found that causes Gregor's test to
pass:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class ActiveSupport::OrderedHash
    def yaml_initialize(*)
      initialize()  # initialize @keys
      super
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I would submit a patch, but I wanted to understand why YAML is
doing this. Is it a bug, or was it on purpose? I mean, I can
understand why it might not call new directly, but why is it not
calling allocate? (and how is it doing that... is there some part
of the MRI C API that allows it to allocate a Ruby object without
calling any of the normal methods?) I can't tell if it's bypassing
things on purpose, with a valid reason, or not.&lt;/p&gt;
&lt;p&gt;I also couldn't really find any documentation on
yaml_initialize. I found it by looking through the source. It seems
to be reasonably well used in other parts of YAML, but I was
cautious to recommend using it unless my usage is valid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T06:45:30+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-26T06:45:32+00:00</updated-at>
      <user-id type="integer">5609</user-id>
      <version type="integer">9</version>
      <user-name>Dan Kubb (dkubb)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Okay, thanks for the work-around. It already solves my immediate problem. But unfortunately it does not restore the key ordering within the hash, which would be the main feature of this class, I guess.

I have attached a patch against 2-3-stable containing two failing test cases. One of them is fixed by the above patch, the other is still broken.


Regarding your concerns about the usage of hash_initialize: I guess it is save to use this feature. It's used all over the place in YAML so I would not expect it to disappear.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay, thanks for the work-around. It already solves my immediate
problem. But unfortunately it does not restore the key ordering
within the hash, which would be the main feature of this class, I
guess.&lt;/p&gt;
&lt;p&gt;I have attached a patch against 2-3-stable containing two
failing test cases. One of them is fixed by the above patch, the
other is still broken.&lt;/p&gt;
&lt;p&gt;Regarding your concerns about the usage of hash_initialize: I
guess it is save to use this feature. It's used all over the place
in YAML so I would not expect it to disappear.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T09:17:32+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-26T09:17:38+00:00</updated-at>
      <user-id type="integer">11141</user-id>
      <version type="integer">10</version>
      <user-name>Gregor Schmidt</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>So, I finally got a little closer.

First: the above test cases fail both with Dan's workaround.

Second: I managed to find two alternative fixes for the underlying problem. One uses the &quot;yaml_initialize&quot; method, the other uses &quot;add_domain_type&quot; which seems to be the official way to serialize and deserialize custom objects with syck.

I have attached complete patches against 2-3-stable for both implementations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;So, I finally got a little closer.&lt;/p&gt;
&lt;p&gt;First: the above test cases fail both with Dan's workaround.&lt;/p&gt;
&lt;p&gt;Second: I managed to find two alternative fixes for the
underlying problem. One uses the &quot;yaml_initialize&quot; method, the
other uses &quot;add_domain_type&quot; which seems to be the official way to
serialize and deserialize custom objects with syck.&lt;/p&gt;
&lt;p&gt;I have attached complete patches against 2-3-stable for both
implementations.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T11:07:37+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-26T11:07:45+00:00</updated-at>
      <user-id type="integer">11141</user-id>
      <version type="integer">11</version>
      <user-name>Gregor Schmidt</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Thx a lot Gregor! I tried both your patches, __both of them apply cleanly against current rails master too__, and both of them solve the failing spec in dm-more/dm-serializer. Now if only I knew which one is better suited for being applied, I would vote for one of them. Since I don't know it, I'll leave that up for others to decide :)

Again, thx Gregor for taking the time to investigate this!

PS: I'm not sure which milestone to assign, since I guess we definitely want to have that in 3.0 but in 2.x too. I hope changing the Ticket state to *verified* is ok, since I can definitely verify the original bug *and* the fix, but I'm new to the rules of rails' ticket handling (probably that's also the reason why I left Priority to be low for the time being :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thx a lot Gregor! I tried both your patches, &lt;strong&gt;both of
them apply cleanly against current rails master too&lt;/strong&gt;, and
both of them solve the failing spec in dm-more/dm-serializer. Now
if only I knew which one is better suited for being applied, I
would vote for one of them. Since I don't know it, I'll leave that
up for others to decide :)&lt;/p&gt;
&lt;p&gt;Again, thx Gregor for taking the time to investigate this!&lt;/p&gt;
&lt;p&gt;PS: I'm not sure which milestone to assign, since I guess we
definitely want to have that in 3.0 but in 2.x too. I hope changing
the Ticket state to &lt;em&gt;verified&lt;/em&gt; is ok, since I can definitely
verify the original bug &lt;em&gt;and&lt;/em&gt; the fix, but I'm new to the
rules of rails' ticket handling (probably that's also the reason
why I left Priority to be low for the time being :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T14:55:29+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-26T14:55:29+00:00</updated-at>
      <user-id type="integer">16008</user-id>
      <version type="integer">12</version>
      <user-name>Martin Gamsjaeger (snusnu)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I should also note that the YAML spec has defined an [ordered map](http://yaml.org/type/omap.html) type that may fit this use case more closely.  It's defined as an &quot;Ordered sequence of key:value pairs without duplicates&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I should also note that the YAML spec has defined an &lt;a href=
&quot;http://yaml.org/type/omap.html&quot;&gt;ordered map&lt;/a&gt; type that may fit
this use case more closely. It's defined as an &quot;Ordered sequence of
key:value pairs without duplicates&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T18:07:56+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-26T18:07:57+00:00</updated-at>
      <user-id type="integer">5609</user-id>
      <version type="integer">13</version>
      <user-name>Dan Kubb (dkubb)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Another consideration that I had is should we make it so that this works the same between Ruby 1.8 and 1.9? (sorry for the extra post, I can't edit the comment I just submitted)

From the way AS::OrderedHash is defined, it looks like it delegates straight to the Hash if Ruby 1.9 is being used.  That would bypass the patched code Gregor submitted and just rely on whatever defaults the Ruby 1.9 Hash has. Depending on which approach is used, I think you'd want it to work the same between Ruby 1.8 and 1.9, so that if something was serialized with 1.8 it would be readable with someone using AS::OrderedHash with 1.9, and vice versa.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another consideration that I had is should we make it so that
this works the same between Ruby 1.8 and 1.9? (sorry for the extra
post, I can't edit the comment I just submitted)&lt;/p&gt;
&lt;p&gt;From the way AS::OrderedHash is defined, it looks like it
delegates straight to the Hash if Ruby 1.9 is being used. That
would bypass the patched code Gregor submitted and just rely on
whatever defaults the Ruby 1.9 Hash has. Depending on which
approach is used, I think you'd want it to work the same between
Ruby 1.8 and 1.9, so that if something was serialized with 1.8 it
would be readable with someone using AS::OrderedHash with 1.9, and
vice versa.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T18:12:55+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-26T18:12:59+00:00</updated-at>
      <user-id type="integer">5609</user-id>
      <version type="integer">14</version>
      <user-name>Dan Kubb (dkubb)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>First of all, thanks for the reviews, Martin and Dan.

Dan's remarks made me think again about the implementation strategy. As far as I can tell, there is only one way to allow an OrderedHash serialized in 1.9 to be correctly deserialized in 1.8 - we have to tag it specifically to be an ordered one. Therefore I now also subclassed Hash in 1.9 and - for all ruby version - added a custom serialization matching [YAML's built-in ordered map](http://yaml.org/type/omap.html). This way, anything expicitly instantiated as AS::OrderedHash will be serialized as !!omap and is loaded into an OrderedHash on the other side - full round trip. I think, this would not be possible using the &quot;yaml_initialize&quot;-strategy - therefore I dropped this implementation.

The only problem, that may arise is, if other libraries start defining custom deserializations for !!omap - this would be a reason to not use &quot;add_builtin_type&quot; but &quot;add_domain_type&quot; with something like &quot;ActiveSupport,2010/orderedHash&quot;.

As far as I can tell, the attached patch passes on 

* 1.8.5
* 1.8.6
* 1.8.7
* 1.9.1
* JRuby 1.4.0

I would welcome any feedback.</body>
      <body-html>&lt;div&gt;&lt;p&gt;First of all, thanks for the reviews, Martin and Dan.&lt;/p&gt;
&lt;p&gt;Dan's remarks made me think again about the implementation
strategy. As far as I can tell, there is only one way to allow an
OrderedHash serialized in 1.9 to be correctly deserialized in 1.8 -
we have to tag it specifically to be an ordered one. Therefore I
now also subclassed Hash in 1.9 and - for all ruby version - added
a custom serialization matching &lt;a href=
&quot;http://yaml.org/type/omap.html&quot;&gt;YAML's built-in ordered map&lt;/a&gt;.
This way, anything expicitly instantiated as AS::OrderedHash will
be serialized as !!omap and is loaded into an OrderedHash on the
other side - full round trip. I think, this would not be possible
using the &quot;yaml_initialize&quot;-strategy - therefore I dropped this
implementation.&lt;/p&gt;
&lt;p&gt;The only problem, that may arise is, if other libraries start
defining custom deserializations for !!omap - this would be a
reason to not use &quot;add_builtin_type&quot; but &quot;add_domain_type&quot; with
something like &quot;ActiveSupport,2010/orderedHash&quot;.&lt;/p&gt;
&lt;p&gt;As far as I can tell, the attached patch passes on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.8.5&lt;/li&gt;
&lt;li&gt;1.8.6&lt;/li&gt;
&lt;li&gt;1.8.7&lt;/li&gt;
&lt;li&gt;1.9.1&lt;/li&gt;
&lt;li&gt;JRuby 1.4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would welcome any feedback.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-27T10:52:44+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T10:52:52+00:00</updated-at>
      <user-id type="integer">11141</user-id>
      <version type="integer">15</version>
      <user-name>Gregor Schmidt</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Gregor,

Again, thx for doing the work on this. I just tried your new patch - which btw looks like a good way of solving the problem to me - but unfortunately I got (different) failures in dm-more/dm-serializer specs. Here's what I get now:

@@@
expected: {&quot;name&quot;=&gt;[&quot;Name must be at least 2 characters long&quot;], &quot;solar_system_id&quot;=&gt;[&quot;Solar system must not be blank&quot;]},
     got: {&quot;name&quot;=&gt;&quot;Name must be at least 2 characters long&quot;, &quot;solar_system_id&quot;=&gt;&quot;Solar system must not be blank&quot;} (using ==)
@@@

So it seems there's some problem with serializing (array) values? Oh and btw, active_support tests all pass with your patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Gregor,&lt;/p&gt;
&lt;p&gt;Again, thx for doing the work on this. I just tried your new
patch - which btw looks like a good way of solving the problem to
me - but unfortunately I got (different) failures in
dm-more/dm-serializer specs. Here's what I get now:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;expected: {&quot;name&quot;=&amp;gt;[&quot;Name must be at least 2 characters long&quot;], &quot;solar_system_id&quot;=&amp;gt;[&quot;Solar system must not be blank&quot;]},
     got: {&quot;name&quot;=&amp;gt;&quot;Name must be at least 2 characters long&quot;, &quot;solar_system_id&quot;=&amp;gt;&quot;Solar system must not be blank&quot;} (using ==)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So it seems there's some problem with serializing (array)
values? Oh and btw, active_support tests all pass with your
patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-27T17:26:02+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T17:26:06+00:00</updated-at>
      <user-id type="integer">16008</user-id>
      <version type="integer">16</version>
      <user-name>Martin Gamsjaeger (snusnu)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;pre&gt;+    ActiveSupport::OrderedHash[*val.map(&amp;:to_a).flatten]&lt;/pre&gt;

Note that flatten is recursive. This will over-flatten array values.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
+    ActiveSupport::OrderedHash[*val.map(&amp;amp;:to_a).flatten]
&lt;/pre&gt;
&lt;p&gt;Note that flatten is recursive. This will over-flatten array
values.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-27T21:50:03+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T21:50:07+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">17</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Thanks for the hints. I hope, I've got it right this time.

I've added a test with a nested array. It was failing with my latest patch. I then fixed the &quot;flatten&quot; problem. Please have a look at the newly attached patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for the hints. I hope, I've got it right this time.&lt;/p&gt;
&lt;p&gt;I've added a test with a nested array. It was failing with my
latest patch. I then fixed the &quot;flatten&quot; problem. Please have a
look at the newly attached patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-27T22:37:44+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T22:37:46+00:00</updated-at>
      <user-id type="integer">83937</user-id>
      <version type="integer">18</version>
      <user-name>Gregor Schmidt</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-27T22:41:34+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T22:41:38+00:00</updated-at>
      <user-id type="integer">83937</user-id>
      <version type="integer">19</version>
      <user-name>Gregor Schmidt</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Yes! Now all dm-core and dm-more specs pass with active_support :) Also, active_support tests pass for me. I should probably add that I haven't tested the scenario of serializing with 1.8 and deserializing with 1.9 (and vice versa), but I can confirm that the issues I previously had are now fixed.

Thx for taking the time guys!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes! Now all dm-core and dm-more specs pass with active_support
:) Also, active_support tests pass for me. I should probably add
that I haven't tested the scenario of serializing with 1.8 and
deserializing with 1.9 (and vice versa), but I can confirm that the
issues I previously had are now fixed.&lt;/p&gt;
&lt;p&gt;Thx for taking the time guys!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-27T23:04:19+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T23:04:23+00:00</updated-at>
      <user-id type="integer">16008</user-id>
      <version type="integer">20</version>
      <user-name>Martin Gamsjaeger (snusnu)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>(from [57337cd74db0596a1e9f8eb0e6df0bb8ccf53dd2]) Adding custom yaml (de-)serialization for OrderedHash

[#3608 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/57337cd74db0596a1e9f8eb0e6df0bb8ccf53dd2</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/57337cd74db0596a1e9f8eb0e6df0bb8ccf53dd2&quot;
title=
&quot;Changeset [57337cd74db0596a1e9f8eb0e6df0bb8ccf53dd2]&quot;&gt;[57337cd74db0596a1e9f8eb0e6df0bb8ccf53dd2]&lt;/a&gt;)
Adding custom yaml (de-)serialization for OrderedHash&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/3608&quot; title=
&quot;Ticket #3608&quot;&gt;#3608&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/57337cd74db0596a1e9f8eb0e6df0bb8ccf53dd2&quot;&gt;
http://github.com/rails/rails/commit/57337cd74db0596a1e9f8eb0e6df0b...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-27T23:31:31+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T23:31:32+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">21</version>
      <user-name>Repository</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>(from [7b8c6472ffb6df4d341b0657f82e63c19e9a429c]) Adding custom yaml (de-)serialization for OrderedHash

[#3608 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/7b8c6472ffb6df4d341b0657f82e63c19e9a429c</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/7b8c6472ffb6df4d341b0657f82e63c19e9a429c&quot;
title=
&quot;Changeset [7b8c6472ffb6df4d341b0657f82e63c19e9a429c]&quot;&gt;[7b8c6472ffb6df4d341b0657f82e63c19e9a429c]&lt;/a&gt;)
Adding custom yaml (de-)serialization for OrderedHash&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/3608&quot; title=
&quot;Ticket #3608&quot;&gt;#3608&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/7b8c6472ffb6df4d341b0657f82e63c19e9a429c&quot;&gt;
http://github.com/rails/rails/commit/7b8c6472ffb6df4d341b0657f82e63...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-27T23:31:31+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-27T23:31:34+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">22</version>
      <user-name>Repository</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Jeremy,

OrderedHash now requires yaml, and in order to be properly cherry pickable, ordered_hash.rb should require 'yaml'. (My datamapper sample app won't boot otherwise). The obviously trivial patch can be found at:

http://github.com/snusnu/rails/commit/7e5379189e4398d91c77fb5eea119df655469d40</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jeremy,&lt;/p&gt;
&lt;p&gt;OrderedHash now requires yaml, and in order to be properly
cherry pickable, ordered_hash.rb should require 'yaml'. (My
datamapper sample app won't boot otherwise). The obviously trivial
patch can be found at:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/snusnu/rails/commit/7e5379189e4398d91c77fb5eea119df655469d40&quot;&gt;
http://github.com/snusnu/rails/commit/7e5379189e4398d91c77fb5eea119...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-28T01:10:11+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:state: committed
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-28T01:10:13+00:00</updated-at>
      <user-id type="integer">16008</user-id>
      <version type="integer">23</version>
      <user-name>Martin Gamsjaeger (snusnu)</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Thanks Martin!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks Martin!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-28T02:14:22+00:00</created-at>
      <creator-id type="integer">40090</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3608</number>
      <permalink>orderedhash-serialization-doesnt-work-in-ar</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record active_support datamapper hash serialization yaml</tag>
      <title>OrderedHash serialization doesn't work in AR</title>
      <updated-at type="datetime">2010-01-28T02:14:26+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">24</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jorge Dias</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3608</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b378e85d958a5dadda5a2380a25b8bda0a0c15a4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-26T09:17:32+00:00</created-at>
      <filename>test_cases_testing_each_and_ordering.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">389742</id>
      <size type="integer">885</size>
      <uploader-id type="integer">11141</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/389742/test_cases_testing_each_and_ordering.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d1e83bf7328affdd1c9a144d57a684d193fe230b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-26T11:07:38+00:00</created-at>
      <filename>patch_using_yaml_add_domain_type.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">389797</id>
      <size type="integer">1986</size>
      <uploader-id type="integer">11141</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/389797/patch_using_yaml_add_domain_type.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>261b4f8b158f7fc85532e3d416b6f463a571672c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-26T11:07:42+00:00</created-at>
      <filename>patch_using_yaml_initialize.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">389798</id>
      <size type="integer">1777</size>
      <uploader-id type="integer">11141</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/389798/patch_using_yaml_initialize.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d09cabd574fe3fb903254a7ebc7a9224d2ac1497</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-27T10:52:44+00:00</created-at>
      <filename>patch_using_yaml_add_domain_type.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">391204</id>
      <size type="integer">2375</size>
      <uploader-id type="integer">11141</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/391204/patch_using_yaml_add_domain_type.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>5f904a705668c9a5ef262064a103e7c626feb437</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-27T22:41:34+00:00</created-at>
      <filename>patch_using_yaml_add_domain_type_v3.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">392432</id>
      <size type="integer">2716</size>
      <uploader-id type="integer">83937</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/392432/patch_using_yaml_add_domain_type_v3.diff</url>
    </attachment>
  </attachments>
</ticket>
