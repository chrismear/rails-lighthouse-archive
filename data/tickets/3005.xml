<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">5</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-07T19:54:34+01:00</created-at>
  <creator-id type="integer">63992</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3005</number>
  <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
  <priority type="integer">45618</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2-3-stable activerecord association belongs_to counter_cache polymorphic_association</tag>
  <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
  <updated-at type="datetime">2011-02-03T14:37:00+00:00</updated-at>
  <user-id type="integer">42916</user-id>
  <version type="integer">17</version>
  <user-name>Greg Hazel</user-name>
  <creator-name>Larry Sprock</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
  <priority-name nil="true"></priority-name>
  <original-body>Example:

@@@
class Image &lt; ActiveRecord::Base
  belongs_to :resource, :polymorphic =&gt; true, :counter_cache =&gt; :resource_count
end
@@@

@@@
class Job &lt; ActiveRecord::Base
  has_many :images, :as =&gt; :resource, :dependent =&gt; :destroy
end
@@@

When assigning an association the counter_cache column does not get updated.

@@@
i = Image.create
j = Job.create
j.images &lt;&lt; i #does not update
i.resource = j #does not update
@@@

The only way to get it to work is to use j.images.create which is bad if you have to create the images before the job or reassign images to a different job. Also works if the association is not polymorphic.</original-body>
  <latest-body>Example:

@@@
class Image &lt; ActiveRecord::Base
  belongs_to :resource, :polymorphic =&gt; true, :counter_cache =&gt; :resource_count
end
@@@

@@@
class Job &lt; ActiveRecord::Base
  has_many :images, :as =&gt; :resource, :dependent =&gt; :destroy
end
@@@

When assigning an association the counter_cache column does not get updated.

@@@
i = Image.create
j = Job.create
j.images &lt;&lt; i #does not update
i.resource = j #does not update
@@@

The only way to get it to work is to use j.images.create which is bad if you have to create the images before the job or reassign images to a different job. Also works if the association is not polymorphic.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Example:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Image &amp;lt; ActiveRecord::Base
  belongs_to :resource, :polymorphic =&amp;gt; true, :counter_cache =&amp;gt; :resource_count
end
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code&gt;
class Job &amp;lt; ActiveRecord::Base
  has_many :images, :as =&amp;gt; :resource, :dependent =&amp;gt; :destroy
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When assigning an association the counter_cache column does not
get updated.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
i = Image.create
j = Job.create
j.images &amp;lt;&amp;lt; i #does not update
i.resource = j #does not update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The only way to get it to work is to use j.images.create which
is bad if you have to create the images before the job or reassign
images to a different job. Also works if the association is not
polymorphic.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Example:

@@@
class Image &lt; ActiveRecord::Base
  belongs_to :resource, :polymorphic =&gt; true, :counter_cache =&gt; :resource_count
end
@@@

@@@
class Job &lt; ActiveRecord::Base
  has_many :images, :as =&gt; :resource, :dependent =&gt; :destroy
end
@@@

When assigning an association the counter_cache column does not get updated.

@@@
i = Image.create
j = Job.create
j.images &lt;&lt; i #does not update
i.resource = j #does not update
@@@

The only way to get it to work is to use j.images.create which is bad if you have to create the images before the job or reassign images to a different job. Also works if the association is not polymorphic.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Image &amp;lt; ActiveRecord::Base
  belongs_to :resource, :polymorphic =&amp;gt; true, :counter_cache =&amp;gt; :resource_count
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;class Job &amp;lt; ActiveRecord::Base
  has_many :images, :as =&amp;gt; :resource, :dependent =&amp;gt; :destroy
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When assigning an association the counter_cache column does not
get updated.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;i = Image.create
j = Job.create
j.images &amp;lt;&amp;lt; i #does not update
i.resource = j #does not update&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The only way to get it to work is to use j.images.create which
is bad if you have to create the images before the job or reassign
images to a different job. Also works if the association is not
polymorphic.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-07T19:54:34+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-08-07T19:54:37+01:00</updated-at>
      <user-id type="integer">63992</user-id>
      <version type="integer">1</version>
      <user-name>Larry Sprock</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T12:58:04+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable activerecord association belongs_to counter_cache polymorphic_association
:assigned_user: 141
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-25T12:58:07+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 verified.

It can be reproduced with the example given. 

I am investigating.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified.&lt;/p&gt;
&lt;p&gt;It can be reproduced with the example given.&lt;/p&gt;
&lt;p&gt;I am investigating.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-26T15:18:28+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-26T15:18:33+01:00</updated-at>
      <user-id type="integer">37072</user-id>
      <version type="integer">3</version>
      <user-name>Robert Rouse</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 verified

Reproducible on 2-3-master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified&lt;/p&gt;
&lt;p&gt;Reproducible on 2-3-master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-26T17:34:07+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-26T17:34:10+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">4</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1, verified.

Can be reproduced in 2-3-stable and master, but I still lack the knowledge about the rails internals to create a failing test :(</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, verified.&lt;/p&gt;
&lt;p&gt;Can be reproduced in 2-3-stable and master, but I still lack the
knowledge about the rails internals to create a failing test :(&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-26T19:12:14+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-26T19:12:16+01:00</updated-at>
      <user-id type="integer">40414</user-id>
      <version type="integer">5</version>
      <user-name>Elomar Fran&#231;a</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 verified.

I have attached a patch for 2-3-stable which contains the failing test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified.&lt;/p&gt;
&lt;p&gt;I have attached a patch for 2-3-stable which contains the
failing test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T00:42:47+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T00:42:50+01:00</updated-at>
      <user-id type="integer">71121</user-id>
      <version type="integer">6</version>
      <user-name>sr.iniv.t</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 to sr.iniv.t's patch.  Applies and generates the described error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 to sr.iniv.t's patch. Applies and generates the described
error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T04:40:21+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T04:40:24+01:00</updated-at>
      <user-id type="integer">71145</user-id>
      <version type="integer">7</version>
      <user-name>Blue Box Stephen</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1, verified on 2-3-stable and master.

Good job on the test! However, the `Tagging` and `Post` models already encompass the belongs to polymorphic association. Also, the first part replicates testing done elsewhere. I've attached a patch, placing the failing test in `join_model_test.rb` instead (using the `Tagging` and `Post` models).</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, verified on 2-3-stable and master.&lt;/p&gt;
&lt;p&gt;Good job on the test! However, the &lt;code&gt;Tagging&lt;/code&gt; and
&lt;code&gt;Post&lt;/code&gt; models already encompass the belongs to
polymorphic association. Also, the first part replicates testing
done elsewhere. I've attached a patch, placing the failing test in
&lt;code&gt;join_model_test.rb&lt;/code&gt; instead (using the
&lt;code&gt;Tagging&lt;/code&gt; and &lt;code&gt;Post&lt;/code&gt; models).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T06:20:28+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T06:20:33+01:00</updated-at>
      <user-id type="integer">51191</user-id>
      <version type="integer">8</version>
      <user-name>hsume2 (Henry)</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@hsume2: Thank you :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;@hsume2: Thank you :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T07:13:12+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T07:13:18+01:00</updated-at>
      <user-id type="integer">71121</user-id>
      <version type="integer">9</version>
      <user-name>sr.iniv.t</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1, verified on 2-3-stable and master.

I was going through the flow of this process and i came up with this

1. There is not test that checks counter_cache changes with the append (&lt;&lt;) operand on has_many relation.
2. in association_collection.rb, the append (&lt;&lt;) method points to `add_record_to_target_with_callbacks` that fires the `:before_add` and `:after_add` on the target and not the `*_create` callbacks that fire `AR::Base.update_counters`.

Pratik &quot;wrote about those callbacks&quot;:http://m.onkey.org/2007/10/16/has_many-and-habtm-callbacks, maybe adding an option to the reflection, to run `update_counters` on `after_add` ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, verified on 2-3-stable and master.&lt;/p&gt;
&lt;p&gt;I was going through the flow of this process and i came up with
this&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There is not test that checks counter_cache changes with the
append (&amp;lt;&amp;lt;) operand on has_many relation.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;in association_collection.rb, the append (&amp;lt;&amp;lt;) method
points to &lt;code&gt;add_record_to_target_with_callbacks&lt;/code&gt; that
fires the &lt;code&gt;:before_add&lt;/code&gt; and &lt;code&gt;:after_add&lt;/code&gt; on
the target and not the &lt;code&gt;*_create&lt;/code&gt; callbacks that fire
&lt;code&gt;AR::Base.update_counters&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Pratik &lt;a href=
&quot;http://m.onkey.org/2007/10/16/has_many-and-habtm-callbacks&quot;&gt;wrote
about those callbacks&lt;/a&gt;, maybe adding an option to the
reflection, to run &lt;code&gt;update_counters&lt;/code&gt; on
&lt;code&gt;after_add&lt;/code&gt; ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T07:17:55+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T07:18:01+01:00</updated-at>
      <user-id type="integer">36381</user-id>
      <version type="integer">10</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Made a mistake assigning `tagging`. I've reattached the fixed test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Made a mistake assigning &lt;code&gt;tagging&lt;/code&gt;. I've reattached
the fixed test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T11:15:43+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T11:15:47+01:00</updated-at>
      <user-id type="integer">51191</user-id>
      <version type="integer">11</version>
      <user-name>hsume2 (Henry)</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&gt; &gt; 1\. There is not test that checks counter_cache changes with the append (&lt;&lt;) operand on has_many relation.

&gt; I agree, counter_cache updating is unbalanced, especially since the same counter can be updated from both sides of the association.

&gt; &gt; 2\. in association_collection.rb, the append (&lt;&lt;) method points to `add_record_to_target_with_callbacks` that fires the `:before_add` and `:after_add` on the target and not the `*_create` callbacks that fire `AR::Base.update_counters`.

&gt; It's a good start. Adding an `:after_add` call back to increment the counter fixed the problem as expected. But decrementing the counter on `tagging.destroy` doesn't work. `:before_remove` is never called, because it's assigned to the `:has_many` association and tagging uses `belongs_to` (which doesn't support `:before_remove`).

This got me thinking: to strive for more balanced (omni-directional) counter cache updating.

Here is a possible implementation:

1. adding `:before_add`, `:after_add`, `:before_remove`, `:after_remove` callbacks on `ActiveRecord::Base` instead.
2. modify `#add_counter_cache_callbacks` to use `#after_add`, `#before_remove` instead of `#after_create`, `#before_destroy`, respectively.
3. modify `#create`, `#update`, and `#destroy` callbacks to run `add`, `add`, and `remove` callbacks, respectively.
4. finally, deal with some edge cases:
  * should only increment if there are `changes` on record, specifically
  * should only increment if size of target collection changed
  * decrement as usual

I've attached a patch to that effect (different patches for master and 2-3-stable). It fixes the `:counter_cache` using `:add` and `:remove` callbacks.

Notes:

* `collection_ids=[...]` will still fail to update `counter_cache`, because `collection_ids=` uses `#delete` and no callbacks will get called. That is expected behavior with `#delete`, but for `collection_ids=`?</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;1. There is not test that checks counter_cache changes with the
append (&amp;lt;&amp;lt;) operand on has_many relation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I agree, counter_cache updating is unbalanced, especially since
the same counter can be updated from both sides of the
association.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2. in association_collection.rb, the append (&amp;lt;&amp;lt;) method
points to &lt;code&gt;add_record_to_target_with_callbacks&lt;/code&gt; that
fires the &lt;code&gt;:before_add&lt;/code&gt; and &lt;code&gt;:after_add&lt;/code&gt; on
the target and not the &lt;code&gt;*_create&lt;/code&gt; callbacks that fire
&lt;code&gt;AR::Base.update_counters&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's a good start. Adding an &lt;code&gt;:after_add&lt;/code&gt; call back
to increment the counter fixed the problem as expected. But
decrementing the counter on &lt;code&gt;tagging.destroy&lt;/code&gt; doesn't
work. &lt;code&gt;:before_remove&lt;/code&gt; is never called, because it's
assigned to the &lt;code&gt;:has_many&lt;/code&gt; association and tagging uses
&lt;code&gt;belongs_to&lt;/code&gt; (which doesn't support
&lt;code&gt;:before_remove&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This got me thinking: to strive for more balanced
(omni-directional) counter cache updating.&lt;/p&gt;
&lt;p&gt;Here is a possible implementation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;adding &lt;code&gt;:before_add&lt;/code&gt;, &lt;code&gt;:after_add&lt;/code&gt;,
&lt;code&gt;:before_remove&lt;/code&gt;, &lt;code&gt;:after_remove&lt;/code&gt; callbacks
on &lt;code&gt;ActiveRecord::Base&lt;/code&gt; instead.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;modify &lt;code&gt;#add_counter_cache_callbacks&lt;/code&gt; to use
&lt;code&gt;#after_add&lt;/code&gt;, &lt;code&gt;#before_remove&lt;/code&gt; instead of
&lt;code&gt;#after_create&lt;/code&gt;, &lt;code&gt;#before_destroy&lt;/code&gt;,
respectively.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;modify &lt;code&gt;#create&lt;/code&gt;, &lt;code&gt;#update&lt;/code&gt;, and
&lt;code&gt;#destroy&lt;/code&gt; callbacks to run &lt;code&gt;add&lt;/code&gt;,
&lt;code&gt;add&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt; callbacks,
respectively.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;finally, deal with some edge cases:&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;should only increment if there are &lt;code&gt;changes&lt;/code&gt; on
record, specifically&lt;/li&gt;
&lt;li&gt;should only increment if size of target collection changed&lt;/li&gt;
&lt;li&gt;decrement as usual&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've attached a patch to that effect (different patches for
master and 2-3-stable). It fixes the &lt;code&gt;:counter_cache&lt;/code&gt;
using &lt;code&gt;:add&lt;/code&gt; and &lt;code&gt;:remove&lt;/code&gt; callbacks.&lt;/p&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;collection_ids=[...]&lt;/code&gt; will still fail to update
&lt;code&gt;counter_cache&lt;/code&gt;, because &lt;code&gt;collection_ids=&lt;/code&gt;
uses &lt;code&gt;#delete&lt;/code&gt; and no callbacks will get called. That is
expected behavior with &lt;code&gt;#delete&lt;/code&gt;, but for
&lt;code&gt;collection_ids=&lt;/code&gt;?&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T18:38:41+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T18:38:44+01:00</updated-at>
      <user-id type="integer">51191</user-id>
      <version type="integer">12</version>
      <user-name>hsume2 (Henry)</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>+1 on solution idea, patches apply cleanly on 2-3-stable and master, i believe the implementation itself is mostly right.

@Henry, as for the `delete` thing, i think that any change to the collection should update the counter, consistency is the key in this scope.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 on solution idea, patches apply cleanly on 2-3-stable and
master, i believe the implementation itself is mostly right.&lt;/p&gt;
&lt;p&gt;@Henry, as for the &lt;code&gt;delete&lt;/code&gt; thing, i think that any
change to the collection should update the counter, consistency is
the key in this scope.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T21:53:37+01:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2009-09-27T21:53:42+01:00</updated-at>
      <user-id type="integer">36381</user-id>
      <version type="integer">13</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:16+00:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable activerecord association belongs_to bugmash counter_cache polymorphic_association
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord association belongs_to counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2010-02-12T12:46:16+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">14</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:44:29+00:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">45618</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord association belongs_to counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2011-02-02T17:52:47+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">15</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:44:30+00:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">45618</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable activerecord association belongs_to counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2011-02-02T17:53:33+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">16</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>No hope of getting this applied to 2.3?</body>
      <body-html>&lt;div&gt;&lt;p&gt;No hope of getting this applied to 2.3?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-03T14:36:35+00:00</created-at>
      <creator-id type="integer">63992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3005</number>
      <permalink>counter_cache-not-updated-if-polymorphic-true-when-assigning-association</permalink>
      <priority type="integer">45618</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable activerecord association belongs_to counter_cache polymorphic_association</tag>
      <title>:counter_cache not updated if polymorphic =&gt; true when assigning association</title>
      <updated-at type="datetime">2011-02-03T14:37:00+00:00</updated-at>
      <user-id type="integer">42916</user-id>
      <version type="integer">17</version>
      <user-name>Greg Hazel</user-name>
      <creator-name>Larry Sprock</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3005</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4c9f22b74a2c59f08be370d663cebc2390facb30</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T00:42:47+01:00</created-at>
      <filename>counter_cache_polymorphic_test.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279508</id>
      <size type="integer">3543</size>
      <uploader-id type="integer">71121</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279508/counter_cache_polymorphic_test.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>ecab9d7c9bc57c8e177d730751322c4ce7ad7570</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T06:20:28+01:00</created-at>
      <filename>LH3005-counter_cache_not_updating_in_polymorphic_belongs_to.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279577</id>
      <size type="integer">1714</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279577/LH3005-counter_cache_not_updating_in_polymorphic_belongs_to.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>9c228bb7a0108f17066b7b4a711bdecbbbfeeeb2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T11:15:43+01:00</created-at>
      <filename>LH3005-counter_cache_not_updating_in_polymorphic_belongs_to2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279595</id>
      <size type="integer">1716</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279595/LH3005-counter_cache_not_updating_in_polymorphic_belongs_to2.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>da6ba0c522c49c738f6090c3f1d6e45c8c517a00</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T18:38:41+01:00</created-at>
      <filename>LH3005-patch-1-counter_cache_not_updating_in_polymorphic_belongs_to.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279664</id>
      <size type="integer">8646</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279664/LH3005-patch-1-counter_cache_not_updating_in_polymorphic_belongs_to.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>b7a3da7702d8edbd8a45de2445f0a0bd20af8c16</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T18:38:42+01:00</created-at>
      <filename>LH3005-patch-1-counter_cache_not_updating_in_polymorphic_belongs_to_2-3-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279665</id>
      <size type="integer">8045</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279665/LH3005-patch-1-counter_cache_not_updating_in_polymorphic_belongs_to_2-3-stable.diff</url>
    </attachment>
  </attachments>
</ticket>
