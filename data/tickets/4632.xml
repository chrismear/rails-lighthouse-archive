<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-17T23:33:43+01:00</created-at>
  <creator-id type="integer">99620</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4632</number>
  <permalink>query-inside-of-activerecord-observer-generated-incorrect-sql</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>aciverecord activerecord associations find observers</tag>
  <title>Query inside of ActiveRecord Observer generated incorrect SQL</title>
  <updated-at type="datetime">2011-02-02T18:43:17+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>cilcoder</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4632</url>
  <priority-name>Low</priority-name>
  <original-body># The Problem #
For a model class, 'NodeArgument', I am calling NodeArgument.all inside of an observer for the NodeArgument model and instead of returning all NodeArguments, it is only returning a subset of them. 

# The Setup: #
Model Classes:
Node
    has_many :node_arguments
Node Arguments
    belongs_to :node

An Observer with after_correct.

# Triggering the issue
I have a Node object and call @node.node_arguments.find_or_create_by_name(...)
This successfully creates the Node Argument and triggers the observer's after_create method.

# Result #
In the observer I am using NodeArgument.all.  From the log, I can see that they query being generated has a where clause of node_id = &lt;whatever @node.id is&gt;.

# Expected Result #
I would expect the NodeArgument.all method to behave like normal. It seems to be a reentrancy problem to me.</original-body>
  <latest-body># The Problem #
For a model class, 'NodeArgument', I am calling NodeArgument.all inside of an observer for the NodeArgument model and instead of returning all NodeArguments, it is only returning a subset of them. 

# The Setup: #
Model Classes:
Node
    has_many :node_arguments
Node Arguments
    belongs_to :node

An Observer with after_correct.

# Triggering the issue
I have a Node object and call @node.node_arguments.find_or_create_by_name(...)
This successfully creates the Node Argument and triggers the observer's after_create method.

# Result #
In the observer I am using NodeArgument.all.  From the log, I can see that they query being generated has a where clause of node_id = &lt;whatever @node.id is&gt;.

# Expected Result #
I would expect the NodeArgument.all method to behave like normal. It seems to be a reentrancy problem to me.</latest-body>
  <original-body-html>&lt;div&gt;&lt;h1&gt;The Problem&lt;/h1&gt;
&lt;p&gt;For a model class, 'NodeArgument', I am calling NodeArgument.all
inside of an observer for the NodeArgument model and instead of
returning all NodeArguments, it is only returning a subset of
them.&lt;/p&gt;
&lt;h1&gt;The Setup:&lt;/h1&gt;
&lt;p&gt;Model Classes:&lt;br&gt;
Node&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :node_arguments&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Node Arguments&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;belongs_to :node&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;An Observer with after_correct.&lt;/p&gt;
&lt;h1&gt;Triggering the issue&lt;/h1&gt;
&lt;p&gt;I have a Node object and call
@node.node_arguments.find_or_create_by_name(...)&lt;br&gt;
This successfully creates the Node Argument and triggers the
observer's after_create method.&lt;/p&gt;
&lt;h1&gt;Result&lt;/h1&gt;
&lt;p&gt;In the observer I am using NodeArgument.all. From the log, I can
see that they query being generated has a where clause of node_id =
.&lt;/p&gt;
&lt;h1&gt;Expected Result&lt;/h1&gt;
&lt;p&gt;I would expect the NodeArgument.all method to behave like
normal. It seems to be a reentrancy problem to me.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body># The Problem #
For a model class, 'NodeArgument', I am calling NodeArgument.all inside of an observer for the NodeArgument model and instead of returning all NodeArguments, it is only returning a subset of them. 

# The Setup: #
Model Classes:
Node
    has_many :node_arguments
Node Arguments
    belongs_to :node

An Observer with after_correct.

# Triggering the issue
I have a Node object and call @node.node_arguments.find_or_create_by_name(...)
This successfully creates the Node Argument and triggers the observer's after_create method.

# Result #
In the observer I am using NodeArgument.all.  From the log, I can see that they query being generated has a where clause of node_id = &lt;whatever @node.id is&gt;.

# Expected Result #
I would expect the NodeArgument.all method to behave like normal. It seems to be a reentrancy problem to me.</body>
      <body-html>&lt;div&gt;&lt;h1&gt;The Problem&lt;/h1&gt;
&lt;p&gt;For a model class, 'NodeArgument', I am calling NodeArgument.all
inside of an observer for the NodeArgument model and instead of
returning all NodeArguments, it is only returning a subset of
them.&lt;/p&gt;
&lt;h1&gt;The Setup:&lt;/h1&gt;
&lt;p&gt;Model Classes:&lt;br&gt;
Node&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :node_arguments&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Node Arguments&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;belongs_to :node&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;An Observer with after_correct.&lt;/p&gt;
&lt;h1&gt;Triggering the issue&lt;/h1&gt;
&lt;p&gt;I have a Node object and call
@node.node_arguments.find_or_create_by_name(...)&lt;br&gt;
This successfully creates the Node Argument and triggers the
observer's after_create method.&lt;/p&gt;
&lt;h1&gt;Result&lt;/h1&gt;
&lt;p&gt;In the observer I am using NodeArgument.all. From the log, I can
see that they query being generated has a where clause of node_id =
.&lt;/p&gt;
&lt;h1&gt;Expected Result&lt;/h1&gt;
&lt;p&gt;I would expect the NodeArgument.all method to behave like
normal. It seems to be a reentrancy problem to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-17T23:33:43+01:00</created-at>
      <creator-id type="integer">99620</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4632</number>
      <permalink>query-inside-of-activerecord-observer-generated-incorrect-sql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>aciverecord &quot;activerecord associations&quot; find observers</tag>
      <title>Query inside of ActiveRecord Observer generated incorrect SQL</title>
      <updated-at type="datetime">2010-05-17T23:33:45+01:00</updated-at>
      <user-id type="integer">99620</user-id>
      <version type="integer">1</version>
      <user-name>cilcoder</user-name>
      <creator-name>cilcoder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4632</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T05:21:20+01:00</created-at>
      <creator-id type="integer">99620</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: aciverecord &quot;activerecord associations&quot; find observers
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4632</number>
      <permalink>query-inside-of-activerecord-observer-generated-incorrect-sql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>aciverecord activerecord associations find observers</tag>
      <title>Query inside of ActiveRecord Observer generated incorrect SQL</title>
      <updated-at type="datetime">2010-10-07T05:21:20+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>cilcoder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4632</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please provide a patch with a failing test and/or a fix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please provide a patch with a failing test and/or a fix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T09:00:53+01:00</created-at>
      <creator-id type="integer">99620</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4632</number>
      <permalink>query-inside-of-activerecord-observer-generated-incorrect-sql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>aciverecord activerecord associations find observers</tag>
      <title>Query inside of ActiveRecord Observer generated incorrect SQL</title>
      <updated-at type="datetime">2010-10-08T09:00:54+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">3</version>
      <user-name>David Trasbo</user-name>
      <creator-name>cilcoder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4632</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:58:18+00:00</created-at>
      <creator-id type="integer">99620</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4632</number>
      <permalink>query-inside-of-activerecord-observer-generated-incorrect-sql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>aciverecord activerecord associations find observers</tag>
      <title>Query inside of ActiveRecord Observer generated incorrect SQL</title>
      <updated-at type="datetime">2011-02-02T18:43:04+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>cilcoder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4632</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:58:19+00:00</created-at>
      <creator-id type="integer">99620</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4632</number>
      <permalink>query-inside-of-activerecord-observer-generated-incorrect-sql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>aciverecord activerecord associations find observers</tag>
      <title>Query inside of ActiveRecord Observer generated incorrect SQL</title>
      <updated-at type="datetime">2011-02-02T18:43:17+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>cilcoder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4632</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
