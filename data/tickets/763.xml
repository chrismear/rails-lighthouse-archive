<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-05T19:21:28+01:00</created-at>
  <creator-id type="integer">24075</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">763</number>
  <permalink>different-response-html-being-generated-in-integration-tests</permalink>
  <priority type="integer">225</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.1 tests</tag>
  <title>Different response HTML being generated in integration tests</title>
  <updated-at type="datetime">2008-11-22T19:49:25+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Rob Sterner</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/763</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I'll try to be as succinct yet informative as possible.

We've written some integration tests for our application that are asserting that the contents of a select &gt; option drop down within an RJS response contain values that we expect.  Each option &gt; value is dynamically constructed (via links within our database), the only way to determine what the option &gt; value should be is to generate it on the fly.

When running our test suite I'm seeing that 'rake test' results in the test passing as expected - the response rendered within the test case is what I'm expecting, something like:

(snippet)

&lt;option value=\&quot;342\&quot;&gt;itinerary\/slice\/arrival@time&lt;\/option&gt;\n

generated via an itinerary -&gt; slice link.

When running the integration tests using the rake sub-task 'rake test:integration', the test fails due to the select &gt; option elements being rendered like:

(snippet)

&lt;option value=\&quot;342\&quot;&gt;SliceArrivalTime&lt;\/option&gt;\n

In this case, we have an AR model representing a java class, SliceArrivalTime, whose calculated path is itinerary/slice/arrival@time.  The path is *generated dynamically*, so it's as if our view file is, in one case, calling instance.path to render the response and calling instance.java_class.prettify (truncates com.foo.bar.Baz to Baz) in another.

This is the _same_ test case using the _same_ database being executed using a different task in the Rails rake task hierarchy.  From everything I can poke at it looks as if the same controller/action/biz logic flow is being followed each time, the only difference is in what gets generated in the tests.

I know there probably isn't enough information here to get anyone started with debugging this, I'll be watching email and be in IRC (capndiesel) if anyone wants to chat about it.</original-body>
  <latest-body>I'll try to be as succinct yet informative as possible.

We've written some integration tests for our application that are asserting that the contents of a select &gt; option drop down within an RJS response contain values that we expect.  Each option &gt; value is dynamically constructed (via links within our database), the only way to determine what the option &gt; value should be is to generate it on the fly.

When running our test suite I'm seeing that 'rake test' results in the test passing as expected - the response rendered within the test case is what I'm expecting, something like:

(snippet)

&lt;option value=\&quot;342\&quot;&gt;itinerary\/slice\/arrival@time&lt;\/option&gt;\n

generated via an itinerary -&gt; slice link.

When running the integration tests using the rake sub-task 'rake test:integration', the test fails due to the select &gt; option elements being rendered like:

(snippet)

&lt;option value=\&quot;342\&quot;&gt;SliceArrivalTime&lt;\/option&gt;\n

In this case, we have an AR model representing a java class, SliceArrivalTime, whose calculated path is itinerary/slice/arrival@time.  The path is *generated dynamically*, so it's as if our view file is, in one case, calling instance.path to render the response and calling instance.java_class.prettify (truncates com.foo.bar.Baz to Baz) in another.

This is the _same_ test case using the _same_ database being executed using a different task in the Rails rake task hierarchy.  From everything I can poke at it looks as if the same controller/action/biz logic flow is being followed each time, the only difference is in what gets generated in the tests.

I know there probably isn't enough information here to get anyone started with debugging this, I'll be watching email and be in IRC (capndiesel) if anyone wants to chat about it.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I'll try to be as succinct yet informative as possible.
&lt;/p&gt;&lt;p&gt;
We've written some integration tests for our application that are asserting that the contents of a select &gt; option drop down within an RJS response contain values that we expect.  Each option &gt; value is dynamically constructed (via links within our database), the only way to determine what the option &gt; value should be is to generate it on the fly.
&lt;/p&gt;&lt;p&gt;
When running our test suite I'm seeing that 'rake test' results in the test passing as expected - the response rendered within the test case is what I'm expecting, something like:
&lt;/p&gt;&lt;p&gt;
(snippet)
&lt;/p&gt;&lt;p&gt;
itinerary\/slice\/arrival@time&amp;lt;\/option&gt;\n
&lt;/p&gt;&lt;p&gt;
generated via an itinerary -&gt; slice link.
&lt;/p&gt;&lt;p&gt;
When running the integration tests using the rake sub-task 'rake test:integration', the test fails due to the select &gt; option elements being rendered like:
&lt;/p&gt;&lt;p&gt;
(snippet)
&lt;/p&gt;&lt;p&gt;
SliceArrivalTime&amp;lt;\/option&gt;\n
&lt;/p&gt;&lt;p&gt;
In this case, we have an AR model representing a java class, SliceArrivalTime, whose calculated path is itinerary/slice/arrival@time.  The path is *generated dynamically*, so it's as if our view file is, in one case, calling instance.path to render the response and calling instance.java_class.prettify (truncates com.foo.bar.Baz to Baz) in another.
&lt;/p&gt;&lt;p&gt;
This is the &lt;em&gt;same&lt;/em&gt; test case using the &lt;em&gt;same&lt;/em&gt; database being executed using a different task in the Rails rake task hierarchy.  From everything I can poke at it looks as if the same controller/action/biz logic flow is being followed each time, the only difference is in what gets generated in the tests.
&lt;/p&gt;&lt;p&gt;
I know there probably isn't enough information here to get anyone started with debugging this, I'll be watching email and be in IRC (capndiesel) if anyone wants to chat about it.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll try to be as succinct yet informative as possible.

We've written some integration tests for our application that are asserting that the contents of a select &gt; option drop down within an RJS response contain values that we expect.  Each option &gt; value is dynamically constructed (via links within our database), the only way to determine what the option &gt; value should be is to generate it on the fly.

When running our test suite I'm seeing that 'rake test' results in the test passing as expected - the response rendered within the test case is what I'm expecting, something like:

(snippet)

&lt;option value=\&quot;342\&quot;&gt;itinerary\/slice\/arrival@time&lt;\/option&gt;\n

generated via an itinerary -&gt; slice link.

When running the integration tests using the rake sub-task 'rake test:integration', the test fails due to the select &gt; option elements being rendered like:

(snippet)

&lt;option value=\&quot;342\&quot;&gt;SliceArrivalTime&lt;\/option&gt;\n

In this case, we have an AR model representing a java class, SliceArrivalTime, whose calculated path is itinerary/slice/arrival@time.  The path is *generated dynamically*, so it's as if our view file is, in one case, calling instance.path to render the response and calling instance.java_class.prettify (truncates com.foo.bar.Baz to Baz) in another.

This is the _same_ test case using the _same_ database being executed using a different task in the Rails rake task hierarchy.  From everything I can poke at it looks as if the same controller/action/biz logic flow is being followed each time, the only difference is in what gets generated in the tests.

I know there probably isn't enough information here to get anyone started with debugging this, I'll be watching email and be in IRC (capndiesel) if anyone wants to chat about it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'll try to be as succinct yet informative as possible.
&lt;/p&gt;&lt;p&gt;
We've written some integration tests for our application that are asserting that the contents of a select &gt; option drop down within an RJS response contain values that we expect.  Each option &gt; value is dynamically constructed (via links within our database), the only way to determine what the option &gt; value should be is to generate it on the fly.
&lt;/p&gt;&lt;p&gt;
When running our test suite I'm seeing that 'rake test' results in the test passing as expected - the response rendered within the test case is what I'm expecting, something like:
&lt;/p&gt;&lt;p&gt;
(snippet)
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
In this case, we have an AR model representing a java class, SliceArrivalTime, whose calculated path is itinerary/slice/arrival@time.  The path is *generated dynamically*, so it's as if our view file is, in one case, calling instance.path to render the response and calling instance.java_class.prettify (truncates com.foo.bar.Baz to Baz) in another.
&lt;/p&gt;&lt;p&gt;
This is the &lt;em&gt;same&lt;/em&gt; test case using the &lt;em&gt;same&lt;/em&gt; database being executed using a different task in the Rails rake task hierarchy.  From everything I can poke at it looks as if the same controller/action/biz logic flow is being followed each time, the only difference is in what gets generated in the tests.
&lt;/p&gt;&lt;p&gt;
I know there probably isn't enough information here to get anyone started with debugging this, I'll be watching email and be in IRC (capndiesel) if anyone wants to chat about it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-05T19:21:29+01:00</created-at>
      <creator-id type="integer">24075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">763</number>
      <permalink>different-response-html-being-generated-in-integration-tests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 tests</tag>
      <title>Different response HTML being generated in integration tests</title>
      <updated-at type="datetime">2008-08-05T19:21:29+01:00</updated-at>
      <user-id type="integer">24075</user-id>
      <version type="integer">1</version>
      <user-name>Rob Sterner</user-name>
      <creator-name>Rob Sterner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/763</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T19:49:24+00:00</created-at>
      <creator-id type="integer">24075</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">763</number>
      <permalink>different-response-html-being-generated-in-integration-tests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.1 tests</tag>
      <title>Different response HTML being generated in integration tests</title>
      <updated-at type="datetime">2008-11-22T19:49:25+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Rob Sterner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/763</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
