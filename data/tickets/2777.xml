<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:18+00:00</created-at>
  <creator-id type="integer">23224</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2777</number>
  <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
  <updated-at type="datetime">2011-03-26T01:54:18+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">19</version>
  <user-name>bingbing</user-name>
  <creator-name>flip</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
  <milestone-title>2.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Updating the attributes of the child model results in the creation of a new Object with nil values when using a has_one relationship and nested attributes.

@@@
&gt;&gt; u = User.find 1
=&gt; #&lt;User id: 1, login: &quot;james&quot;, password: &quot;secret&quot;, created_at: &quot;2009-06-06 22:50:07&quot;, updated_at: &quot;2009-06-06 22:50:07&quot;&gt;
&gt;&gt; u.profile
=&gt; #&lt;Profile id: 2, user_id: 1, age: 18, city: &quot;London&quot;, comment: &quot;&quot;, created_at: &quot;2009-06-06 22:51:45&quot;, updated_at: &quot;2009-06-06 22:51:45&quot;&gt;
&gt;&gt; u.attributes = {:profile_attributes =&gt; {:city =&gt; 'nowhere'}}
=&gt; {:profile_attributes=&gt;{:city=&gt;&quot;nowhere&quot;}}
&gt;&gt; u.profile
=&gt; #&lt;Profile id: nil, user_id: 1, age: nil, city: &quot;nowhere&quot;, comment: nil, created_at: nil, updated_at: nil&gt;
&gt;&gt; u.profile.changes
=&gt; {&quot;city&quot;=&gt;[nil, &quot;nowhere&quot;], &quot;user_id&quot;=&gt;[nil, 1]}
@@@

I've described the full scenario at 
http://railsforum.com/viewtopic.php?id=31491</original-body>
  <latest-body>Updating the attributes of the child model results in the creation of a new Object with nil values when using a has_one relationship and nested attributes.

@@@
&gt;&gt; u = User.find 1
=&gt; #&lt;User id: 1, login: &quot;james&quot;, password: &quot;secret&quot;, created_at: &quot;2009-06-06 22:50:07&quot;, updated_at: &quot;2009-06-06 22:50:07&quot;&gt;
&gt;&gt; u.profile
=&gt; #&lt;Profile id: 2, user_id: 1, age: 18, city: &quot;London&quot;, comment: &quot;&quot;, created_at: &quot;2009-06-06 22:51:45&quot;, updated_at: &quot;2009-06-06 22:51:45&quot;&gt;
&gt;&gt; u.attributes = {:profile_attributes =&gt; {:city =&gt; 'nowhere'}}
=&gt; {:profile_attributes=&gt;{:city=&gt;&quot;nowhere&quot;}}
&gt;&gt; u.profile
=&gt; #&lt;Profile id: nil, user_id: 1, age: nil, city: &quot;nowhere&quot;, comment: nil, created_at: nil, updated_at: nil&gt;
&gt;&gt; u.profile.changes
=&gt; {&quot;city&quot;=&gt;[nil, &quot;nowhere&quot;], &quot;user_id&quot;=&gt;[nil, 1]}
@@@

I've described the full scenario at 
http://railsforum.com/viewtopic.php?id=31491</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Updating the attributes of the child model results in the
creation of a new Object with nil values when using a has_one
relationship and nested attributes.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt;&amp;gt; u = User.find 1
=&amp;gt; #&amp;lt;User id: 1, login: &amp;quot;james&amp;quot;, password: &amp;quot;secret&amp;quot;, created_at: &amp;quot;2009-06-06 22:50:07&amp;quot;, updated_at: &amp;quot;2009-06-06 22:50:07&amp;quot;&amp;gt;
&amp;gt;&amp;gt; u.profile
=&amp;gt; #&amp;lt;Profile id: 2, user_id: 1, age: 18, city: &amp;quot;London&amp;quot;, comment: &amp;quot;&amp;quot;, created_at: &amp;quot;2009-06-06 22:51:45&amp;quot;, updated_at: &amp;quot;2009-06-06 22:51:45&amp;quot;&amp;gt;
&amp;gt;&amp;gt; u.attributes = {:profile_attributes =&amp;gt; {:city =&amp;gt; 'nowhere'}}
=&amp;gt; {:profile_attributes=&amp;gt;{:city=&amp;gt;&amp;quot;nowhere&amp;quot;}}
&amp;gt;&amp;gt; u.profile
=&amp;gt; #&amp;lt;Profile id: nil, user_id: 1, age: nil, city: &amp;quot;nowhere&amp;quot;, comment: nil, created_at: nil, updated_at: nil&amp;gt;
&amp;gt;&amp;gt; u.profile.changes
=&amp;gt; {&amp;quot;city&amp;quot;=&amp;gt;[nil, &amp;quot;nowhere&amp;quot;], &amp;quot;user_id&amp;quot;=&amp;gt;[nil, 1]}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've described the full scenario at &lt;a href=&quot;http://railsforum.com/viewtopic.php?id=31491&quot;&gt;http://railsforum.com/viewtopic....&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Updating the attributes of the child model results in the creation of a new Object with nil values when using a has_one relationship and nested attributes.

@@@
&gt;&gt; u = User.find 1
=&gt; #&lt;User id: 1, login: &quot;james&quot;, password: &quot;secret&quot;, created_at: &quot;2009-06-06 22:50:07&quot;, updated_at: &quot;2009-06-06 22:50:07&quot;&gt;
&gt;&gt; u.profile
=&gt; #&lt;Profile id: 2, user_id: 1, age: 18, city: &quot;London&quot;, comment: &quot;&quot;, created_at: &quot;2009-06-06 22:51:45&quot;, updated_at: &quot;2009-06-06 22:51:45&quot;&gt;
&gt;&gt; u.attributes = {:profile_attributes =&gt; {:city =&gt; 'nowhere'}}
=&gt; {:profile_attributes=&gt;{:city=&gt;&quot;nowhere&quot;}}
&gt;&gt; u.profile
=&gt; #&lt;Profile id: nil, user_id: 1, age: nil, city: &quot;nowhere&quot;, comment: nil, created_at: nil, updated_at: nil&gt;
&gt;&gt; u.profile.changes
=&gt; {&quot;city&quot;=&gt;[nil, &quot;nowhere&quot;], &quot;user_id&quot;=&gt;[nil, 1]}
@@@

I've described the full scenario at 
http://railsforum.com/viewtopic.php?id=31491</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updating the attributes of the child model results in the
creation of a new Object with nil values when using a has_one
relationship and nested attributes.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; u = User.find 1
=&amp;gt; #&amp;lt;User id: 1, login: &quot;james&quot;, password: &quot;secret&quot;, created_at: &quot;2009-06-06 22:50:07&quot;, updated_at: &quot;2009-06-06 22:50:07&quot;&amp;gt;
&amp;gt;&amp;gt; u.profile
=&amp;gt; #&amp;lt;Profile id: 2, user_id: 1, age: 18, city: &quot;London&quot;, comment: &quot;&quot;, created_at: &quot;2009-06-06 22:51:45&quot;, updated_at: &quot;2009-06-06 22:51:45&quot;&amp;gt;
&amp;gt;&amp;gt; u.attributes = {:profile_attributes =&amp;gt; {:city =&amp;gt; 'nowhere'}}
=&amp;gt; {:profile_attributes=&amp;gt;{:city=&amp;gt;&quot;nowhere&quot;}}
&amp;gt;&amp;gt; u.profile
=&amp;gt; #&amp;lt;Profile id: nil, user_id: 1, age: nil, city: &quot;nowhere&quot;, comment: nil, created_at: nil, updated_at: nil&amp;gt;
&amp;gt;&amp;gt; u.profile.changes
=&amp;gt; {&quot;city&quot;=&amp;gt;[nil, &quot;nowhere&quot;], &quot;user_id&quot;=&amp;gt;[nil, 1]}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I've described the full scenario at&lt;br&gt;
&lt;a href=
&quot;http://railsforum.com/viewtopic.php?id=31491&quot;&gt;http://railsforum.com/viewtopic.php?id=31491&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-07T20:59:34+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-06-07T20:59:40+01:00</updated-at>
      <user-id type="integer">23224</user-id>
      <version type="integer">1</version>
      <user-name>flip</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You should include the id of the Profile to indicate it's an update you're trying to perform.

@@@
u.attributes = {:id =&gt; 2, :profile_attributes =&gt; {:city =&gt; 'nowhere'}}
@@@

For more info take a look at what the form helpers produce.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You should include the id of the Profile to indicate it's an
update you're trying to perform.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;u.attributes = {:id =&amp;gt; 2, :profile_attributes =&amp;gt; {:city =&amp;gt; 'nowhere'}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For more info take a look at what the form helpers produce.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-07T21:23:17+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-06-07T21:23:49+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">2</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ok, i guess you mean:

@@@
u.attributes = {:profile_attributes =&gt; {:id =&gt; 2, :city =&gt; 'nowhere'}}
@@@

is this documented somewhere? Using the &quot;old way&quot; my approach would work also without the id:

@@@
u.profile.attributes = {:city =&gt; 'nowhere'}
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;ok, i guess you mean:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;u.attributes = {:profile_attributes =&amp;gt; {:id =&amp;gt; 2, :city =&amp;gt; 'nowhere'}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;is this documented somewhere? Using the &quot;old way&quot; my approach
would work also without the id:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;u.profile.attributes = {:city =&amp;gt; 'nowhere'}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-07T21:34:33+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-06-07T21:34:34+01:00</updated-at>
      <user-id type="integer">23224</user-id>
      <version type="integer">3</version>
      <user-name>flip</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oops, yeah that's what I meant :)

It's shown here: http://github.com/rails/rails/blob/master/activerecord/lib/active_record/nested_attributes.rb#L55

It is needed to differentiate between a new record or an existing one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, yeah that's what I meant :)&lt;/p&gt;
&lt;p&gt;It's shown here: &lt;a href=
&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/nested_attributes.rb#L55&quot;&gt;
http://github.com/rails/rails/blob/master/activerecord/lib/active_r...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is needed to differentiate between a new record or an
existing one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-07T21:46:58+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-06-07T21:46:59+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">4</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not so sure that this should be invalid.  It makes sense to need the id for has_many relationships, but for belongs_to and has_one, you should assume that they want to update the record.

In the example that flip gave, calling u.save will return no problem, and you'll end up with an orphaned profile in the database.  This scenario can easily come up if you are allowing updates via REST/XML...a user can PUT

&lt;user&gt;
  &lt;profile&gt;&lt;city&gt;nowhere&lt;/city&gt;&lt;/profile&gt;
&lt;/user&gt;

to http://&lt;&gt;/users/2 or wherever.  The user doesn't know the ID of the nested model, but they should expect that only the city is updated in the profile, a new profile should not be created.

Unfortunately, I don't have a patch for this right now, but I believe this should be re-opened as a bug.  Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not so sure that this should be invalid. It makes sense to
need the id for has_many relationships, but for belongs_to and
has_one, you should assume that they want to update the record.&lt;/p&gt;
&lt;p&gt;In the example that flip gave, calling u.save will return no
problem, and you'll end up with an orphaned profile in the
database. This scenario can easily come up if you are allowing
updates via REST/XML...a user can PUT&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
nowhere&lt;/p&gt;
&lt;p&gt;to &lt;a href=
&quot;http://%3C%3E/users/2&quot;&gt;http://&amp;amp;lt;&amp;gt;/users/2&lt;/a&gt; or
wherever. The user doesn't know the ID of the nested model, but
they should expect that only the city is updated in the profile, a
new profile should not be created.&lt;/p&gt;
&lt;p&gt;Unfortunately, I don't have a patch for this right now, but I
believe this should be re-opened as a bug. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-26T00:00:40+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-06-26T00:00:44+01:00</updated-at>
      <user-id type="integer">47935</user-id>
      <version type="integer">5</version>
      <user-name>Greg</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

Documentation is about update_attributes
&lt;code&gt;
params = { :member' =&gt; { :avatar_attributes =&gt; { :id =&gt; '2', :icon =&gt; 'sad' } } }
member.update_attributes params['member']
&lt;/code&gt;

What about object creation
&lt;code&gt;
params = { :member' =&gt; { :avatar_attributes =&gt; { :id =&gt; '2', :icon =&gt; 'sad' } } }
Member.create params['member']
&lt;/code&gt;

Does it create new Member, update Avatar with id 2 and associate the two record together ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Documentation is about update_attributes&lt;br&gt;
&lt;code&gt;&lt;br&gt;
params = { :member' =&amp;gt; { :avatar_attributes =&amp;gt; { :id =&amp;gt;
'2', :icon =&amp;gt; 'sad' } } }&lt;br&gt;
member.update_attributes params['member']&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;What about object creation&lt;br&gt;
&lt;code&gt;&lt;br&gt;
params = { :member' =&amp;gt; { :avatar_attributes =&amp;gt; { :id =&amp;gt;
'2', :icon =&amp;gt; 'sad' } } }&lt;br&gt;
Member.create params['member']&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Does it create new Member, update Avatar with id 2 and associate
the two record together ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-10-05T14:00:38+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-10-05T14:34:35+01:00</updated-at>
      <user-id type="integer">34615</user-id>
      <version type="integer">6</version>
      <user-name>S&#233;bastien Luquet</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree that it should be reopened. Not smart to pass id for one to one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree that it should be reopened. Not smart to pass id for one
to one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-10-21T13:19:56+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-10-21T13:20:00+01:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">7</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'd rather see a patch that adds something like `:only_update =&gt; true' to accepts_nested_attributes_for. Or otherwise fix it in your controller if you don't trust the client.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'd rather see a patch that adds something like
&lt;code&gt;:only_update =&amp;gt; true' to accepts_nested_attributes_for. Or
otherwise fix it in your controller if you don't trust the
client.&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-10-21T13:39:13+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-10-21T13:39:20+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">8</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Question, how to solve:

@@@ ruby
class Team
  has_one :captain, :class_name =&gt; 'Player'
  accepts_nested_attributes_for :captain
end

class Player
  belongs_to :team

  validate :validate_team

  private

  def validate_team
    raise 'Should have team' unless team
  end
end
@@@

@@@ ruby
Team.create!(:captain_attributes =&gt; {:name =&gt; 'Name Surname'})
@@@

Will be risen 'Should have team' because while attributes assigns to the nested model object, belongs_to associations isn't assigns.

If you know how to solve that, please tell me.

Thank you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Question, how to solve:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Team
  has_one :captain, :class_name =&amp;gt; 'Player'
  accepts_nested_attributes_for :captain
end

class Player
  belongs_to :team

  validate :validate_team

  private

  def validate_team
    raise 'Should have team' unless team
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Team.create!(:captain_attributes =&amp;gt; {:name =&amp;gt; 'Name Surname'})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Will be risen 'Should have team' because while attributes
assigns to the nested model object, belongs_to associations isn't
assigns.&lt;/p&gt;
&lt;p&gt;If you know how to solve that, please tell me.&lt;/p&gt;
&lt;p&gt;Thank you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-01T14:33:35+00:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-11-01T14:33:37+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">9</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today a patch for :update_only and the ability to use :inverse_of, which fixes the last issue, have both been pushed. HTH</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today a patch for :update_only and the ability to use
:inverse_of, which fixes the last issue, have both been pushed.
HTH&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-12-28T23:17:54+00:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 belongs_to has_one nested_attributes_for</tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2009-12-28T23:17:58+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">10</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T22:00:54+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 belongs_to has_one nested_attributes_for
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2010-10-09T22:00:59+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">12</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Women in summer would like to become beautiful. 
good&lt;a href=&quot;http://www.egacn.com/Watches-new model watches.aspx&quot;&gt;new model watches&lt;/a&gt; can grab other's eyes is &lt;a href=&quot;http://www.egacn.com/Watches-new look watches.aspx&quot;&gt;new look watches&lt;/a&gt; best friends.&lt;a href=&quot;http://www.egacn.com/Watches-breitling bentley motors watches.aspx&quot;&gt;breitling bentley motors watches&lt;/a&gt; make them beauty and confident is &lt;a href=&quot;http://www.egacn.com/Watches-breitling bentley replica watches.aspx&quot;&gt;breitling bentley replica watches&lt;/a&gt;favourite. Look in the street,you can see many different types of make up to &lt;a href=&quot;http://www.egacn.com/Watches-buy discount skagen watches.aspx&quot;&gt;buy discount skagen watches&lt;/a&gt; personality.&lt;a href=&quot;http://www.egacn.com/Watches-buy cheap skagen watches.aspx&quot;&gt;buy cheap skagen watches&lt;/a&gt;In fact any kind of long &lt;a href=&quot;http://www.egacn.com/Watches-mens watches leather straps.aspx&quot;&gt;mens watches leather straps&lt;/a&gt;insulated pants will look quite normal and fit perfectly with a pair of matching-color &lt;a href=&quot;http://www.egacn.com/Watches-longines gold watches.aspx&quot;&gt;longines gold watches&lt;/a&gt;. If you are still worried about what to wear with &lt;a href=&quot;http://www.egacn.com/Watches-mens watches yellow face watches.aspx&quot;&gt;mens watches yellow face watches&lt;/a&gt;, there &lt;a href=&quot;http://www.egacn.com/Watches-orange face watches.aspx&quot;&gt;orange face watches&lt;/a&gt; are many places online such as the &lt;a href=&quot;http://www.egacn.com/Watches-purple face watches.aspx&quot;&gt;purple face watches&lt;/a&gt; which will help you pick out the right apparel to wear with your Ugg Ultra Short.Classic &#8211; This medium sized boot is perfect for any kid. It is designed to provide the most benefit &lt;a href=&quot;http://www.egacn.com/Watches-zenith watches sale.aspx&quot;&gt;zenith watches sale&lt;/a&gt; when worn without &lt;a href=&quot;http://www.egacn.com/Watches-Cartier gentle men watches.aspx&quot;&gt;Cartier gentle men watches&lt;/a&gt;, something kids really like. Being made from premium sheepskin makes this &lt;a href=&quot;http://www.egacn.com/Watches-breitling bentley replica watches.aspx&quot;&gt;breitling bentley replica watches&lt;/a&gt; II  extremely durable as well as waterproof. Kids will love the fact that &lt;a href=&quot;http://www.egacn.com/Watches-quartz watch corum watches.aspx&quot;&gt;quartz watch corum watches&lt;/a&gt;can be either a casual &lt;a href=&quot;http://www.egacn.com/Watches-quartz watches wrist watch.aspx&quot;&gt;quartz watches wrist watch&lt;/a&gt; or a comfortable slipper. The&lt;a href=&quot;http://www.egacn.com/Watches-promotional watch quartz movement.aspx&quot;&gt;promotional watch quartz movement&lt;/a&gt;is made from quality suede and sheepskin, not only will &lt;a href=&quot;http://www.egacn.com/Watches-quality swiss replica watches.aspx&quot;&gt;quality swiss replica watches&lt;/a&gt;feel be durable and strong but &lt;a href=&quot;http://www.egacn.com/Watches-cartier watches w20124u2.aspx&quot;&gt;cartier watches w20124u2&lt;/a&gt; will feel great also.This &lt;a href=&quot;http://www.egacn.com/Watches-buying replica watches.aspx&quot;&gt;buying replica watches&lt;/a&gt; is a great looking &lt;a href=&quot;http://www.egacn.com/Watches-diamond wrist watches.aspx&quot;&gt;diamond wrist watches&lt;/a&gt; that your child will just adore. &lt;a href=&quot;http://www.egacn.com/Watches-guaranteed mens watches.aspx&quot;&gt;guaranteed mens watches&lt;/a&gt; The bottoms are fine suede and the strap &lt;a href=&quot;http://www.egacn.com/Watches-best wrist watches world.aspx&quot;&gt;best wrist watches world&lt;/a&gt; is covered with a short, curly sheepskin making this &lt;a href=&quot;http://www.egacn.com/Watches-luxury watches replica.aspx&quot;&gt;luxury watches replica&lt;/a&gt; extremely &lt;a href=&quot;http://www.egacn.com/Watches-clearance mens watches.aspx&quot;&gt;clearance mens watches&lt;/a&gt; and comfortable. Any kid would love to have a pair of &lt;a href=&quot;http://www.egacn.com/Watches-quartz watches for men.aspx&quot;&gt;quartz watches for men&lt;/a&gt;.Nobody knows how to make feet feel great down under like&lt;a href=&quot;http://www.egacn.com/Watches-young mens watches.aspx&quot;&gt;young mens watches&lt;/a&gt;, and these popular &lt;a href=&quot;http://www.egacn.com/Watches-omega seamaster professional jewel.aspx&quot;&gt;omega seamaster professional jewel&lt;/a&gt;cradle your feet in pampering comfort. &lt;a href=&quot;http://www.egacn.com/Watches-quartz watches men.aspx&quot;&gt;quartz watches men&lt;/a&gt;genuine sheepskin shearling design wicks moisture to keep feet toasty warm, yet dry.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Women in summer would like to become beautiful.&lt;br&gt;
good&lt;a href=
&quot;http://www.egacn.com/Watches-new%20model%20watches.aspx&quot;&gt;new model
watches&lt;/a&gt; can grab other's eyes is &lt;a href=
&quot;http://www.egacn.com/Watches-new%20look%20watches.aspx&quot;&gt;new look
watches&lt;/a&gt; best friends.&lt;a href=
&quot;http://www.egacn.com/Watches-breitling%20bentley%20motors%20watches.aspx&quot;&gt;breitling
bentley motors watches&lt;/a&gt; make them beauty and confident is
&lt;a href=
&quot;http://www.egacn.com/Watches-breitling%20bentley%20replica%20watches.aspx&quot;&gt;
breitling bentley replica watches&lt;/a&gt;favourite. Look in the
street,you can see many different types of make up to &lt;a href=
&quot;http://www.egacn.com/Watches-buy%20discount%20skagen%20watches.aspx&quot;&gt;
buy discount skagen watches&lt;/a&gt; personality.&lt;a href=
&quot;http://www.egacn.com/Watches-buy%20cheap%20skagen%20watches.aspx&quot;&gt;buy
cheap skagen watches&lt;/a&gt;In fact any kind of long &lt;a href=
&quot;http://www.egacn.com/Watches-mens%20watches%20leather%20straps.aspx&quot;&gt;
mens watches leather straps&lt;/a&gt;insulated pants will look quite
normal and fit perfectly with a pair of matching-color &lt;a href=
&quot;http://www.egacn.com/Watches-longines%20gold%20watches.aspx&quot;&gt;longines
gold watches&lt;/a&gt;. If you are still worried about what to wear with
&lt;a href=
&quot;http://www.egacn.com/Watches-mens%20watches%20yellow%20face%20watches.aspx&quot;&gt;
mens watches yellow face watches&lt;/a&gt;, there &lt;a href=
&quot;http://www.egacn.com/Watches-orange%20face%20watches.aspx&quot;&gt;orange
face watches&lt;/a&gt; are many places online such as the &lt;a href=
&quot;http://www.egacn.com/Watches-purple%20face%20watches.aspx&quot;&gt;purple
face watches&lt;/a&gt; which will help you pick out the right apparel to
wear with your Ugg Ultra Short.Classic &amp;#8211; This medium sized
boot is perfect for any kid. It is designed to provide the most
benefit &lt;a href=
&quot;http://www.egacn.com/Watches-zenith%20watches%20sale.aspx&quot;&gt;zenith
watches sale&lt;/a&gt; when worn without &lt;a href=
&quot;http://www.egacn.com/Watches-Cartier%20gentle%20men%20watches.aspx&quot;&gt;
Cartier gentle men watches&lt;/a&gt;, something kids really like. Being
made from premium sheepskin makes this &lt;a href=
&quot;http://www.egacn.com/Watches-breitling%20bentley%20replica%20watches.aspx&quot;&gt;
breitling bentley replica watches&lt;/a&gt; II extremely durable as well
as waterproof. Kids will love the fact that &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watch%20corum%20watches.aspx&quot;&gt;
quartz watch corum watches&lt;/a&gt;can be either a casual &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watches%20wrist%20watch.aspx&quot;&gt;
quartz watches wrist watch&lt;/a&gt; or a comfortable slipper.
The&lt;a href=&quot;http://www.egacn.com/Watches-promotional%20watch%20quartz%20movement.aspx&quot;&gt;promotional
watch quartz movement&lt;/a&gt;is made from quality suede and sheepskin,
not only will &lt;a href=
&quot;http://www.egacn.com/Watches-quality%20swiss%20replica%20watches.aspx&quot;&gt;
quality swiss replica watches&lt;/a&gt;feel be durable and strong but
&lt;a href=
&quot;http://www.egacn.com/Watches-cartier%20watches%20w20124u2.aspx&quot;&gt;cartier
watches w20124u2&lt;/a&gt; will feel great also.This &lt;a href=
&quot;http://www.egacn.com/Watches-buying%20replica%20watches.aspx&quot;&gt;buying
replica watches&lt;/a&gt; is a great looking &lt;a href=
&quot;http://www.egacn.com/Watches-diamond%20wrist%20watches.aspx&quot;&gt;diamond
wrist watches&lt;/a&gt; that your child will just adore. &lt;a href=
&quot;http://www.egacn.com/Watches-guaranteed%20mens%20watches.aspx&quot;&gt;guaranteed
mens watches&lt;/a&gt; The bottoms are fine suede and the strap &lt;a href=
&quot;http://www.egacn.com/Watches-best%20wrist%20watches%20world.aspx&quot;&gt;best
wrist watches world&lt;/a&gt; is covered with a short, curly sheepskin
making this &lt;a href=
&quot;http://www.egacn.com/Watches-luxury%20watches%20replica.aspx&quot;&gt;luxury
watches replica&lt;/a&gt; extremely &lt;a href=
&quot;http://www.egacn.com/Watches-clearance%20mens%20watches.aspx&quot;&gt;clearance
mens watches&lt;/a&gt; and comfortable. Any kid would love to have a pair
of &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watches%20for%20men.aspx&quot;&gt;quartz
watches for men&lt;/a&gt;.Nobody knows how to make feet feel great down
under like&lt;a href=
&quot;http://www.egacn.com/Watches-young%20mens%20watches.aspx&quot;&gt;young
mens watches&lt;/a&gt;, and these popular &lt;a href=
&quot;http://www.egacn.com/Watches-omega%20seamaster%20professional%20jewel.aspx&quot;&gt;
omega seamaster professional jewel&lt;/a&gt;cradle your feet in pampering
comfort. &lt;a href=
&quot;http://www.egacn.com/Watches-quartz%20watches%20men.aspx&quot;&gt;quartz
watches men&lt;/a&gt;genuine sheepskin shearling design wicks moisture to
keep feet toasty warm, yet dry.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-25T00:19:41+01:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2010-10-25T03:19:08+01:00</updated-at>
      <user-id type="integer">121592</user-id>
      <version type="integer">13</version>
      <user-name>weifeng</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T08:54:29+00:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2010-11-08T08:54:37+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">15</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T03:01:11+00:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2010-12-28T03:36:14+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">16</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T03:18:26+00:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2011-02-14T05:42:00+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">17</version>
      <user-name>xixi</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:31:23+00:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2011-02-19T09:28:18+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">18</version>
      <user-name>mklo</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega watch&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega
watch&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T01:37:07+00:00</created-at>
      <creator-id type="integer">23224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2777</number>
      <permalink>updating-nested-attributes-with-has_one-relationship-doesnt-work-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Updating nested attributes with has_one relationship doesn't work correctly</title>
      <updated-at type="datetime">2011-03-26T01:54:18+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">19</version>
      <user-name>bingbing</user-name>
      <creator-name>flip</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2777</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
