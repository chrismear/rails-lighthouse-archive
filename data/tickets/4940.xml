<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-23T01:19:42+01:00</created-at>
  <creator-id type="integer">10683</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4940</number>
  <permalink>activerecord-associationcollection-build-should-set-belongs_to-association-before-calling-block</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord associations build</tag>
  <title>ActiveRecord AssociationCollection build should set belongs_to association before calling block</title>
  <updated-at type="datetime">2010-10-07T05:21:21+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">5</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>2 College Bums</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4940</url>
  <priority-name>Low</priority-name>
  <original-body>activerecord/associations/association_collection.rb
Current implementation is this:

@@@ ruby
def build(attributes = {}, &amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;block) }
  else
    build_record(attributes) do |record|
      block.call(record) if block_given?
      set_belongs_to_association_for(record)
    end
  end
end

@@@

By implementing the build like this:

@@@ ruby
def build(attributes = {}, &amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;block) }
  else
    build_record(attributes) do |record|
      set_belongs_to_association_for(record)
      block.call(record) if block_given?
    end
  end
end
@@@

The callback can link to the associated object.
an example usage is:

@@@ ruby
  author.autobiographies.build do |book|
    book.title = &quot;#{book.author.name}'s autobiography&quot;
  end
@@@</original-body>
  <latest-body>activerecord/associations/association_collection.rb
Current implementation is this:

@@@ ruby
def build(attributes = {}, &amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;block) }
  else
    build_record(attributes) do |record|
      block.call(record) if block_given?
      set_belongs_to_association_for(record)
    end
  end
end

@@@

By implementing the build like this:

@@@ ruby
def build(attributes = {}, &amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;block) }
  else
    build_record(attributes) do |record|
      set_belongs_to_association_for(record)
      block.call(record) if block_given?
    end
  end
end
@@@

The callback can link to the associated object.
an example usage is:

@@@ ruby
  author.autobiographies.build do |book|
    book.title = &quot;#{book.author.name}'s autobiography&quot;
  end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;activerecord/associations/association_collection.rb&lt;br&gt;
Current implementation is this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def build(attributes = {}, &amp;amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;amp;block) }
  else
    build_record(attributes) do |record|
      block.call(record) if block_given?
      set_belongs_to_association_for(record)
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;By implementing the build like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def build(attributes = {}, &amp;amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;amp;block) }
  else
    build_record(attributes) do |record|
      set_belongs_to_association_for(record)
      block.call(record) if block_given?
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The callback can link to the associated object.&lt;br&gt;
an example usage is:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  author.autobiographies.build do |book|
    book.title = &quot;#{book.author.name}'s autobiography&quot;
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>activerecord/associations/association_collection.rb
Current implementation is this:

@@@ ruby
def build(attributes = {}, &amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;block) }
  else
    build_record(attributes) do |record|
      block.call(record) if block_given?
      set_belongs_to_association_for(record)
    end
  end
end

@@@

By implementing the build like this:

@@@ ruby
def build(attributes = {}, &amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;block) }
  else
    build_record(attributes) do |record|
      set_belongs_to_association_for(record)
      block.call(record) if block_given?
    end
  end
end
@@@

The callback can link to the associated object.
an example usage is:

@@@ ruby
  author.autobiographies.build do |book|
    book.title = &quot;#{book.author.name}'s autobiography&quot;
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;activerecord/associations/association_collection.rb&lt;br&gt;
Current implementation is this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def build(attributes = {}, &amp;amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;amp;block) }
  else
    build_record(attributes) do |record|
      block.call(record) if block_given?
      set_belongs_to_association_for(record)
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;By implementing the build like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def build(attributes = {}, &amp;amp;block)
  if attributes.is_a?(Array)
    attributes.collect { |attr| build(attr, &amp;amp;block) }
  else
    build_record(attributes) do |record|
      set_belongs_to_association_for(record)
      block.call(record) if block_given?
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The callback can link to the associated object.&lt;br&gt;
an example usage is:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  author.autobiographies.build do |book|
    book.title = &quot;#{book.author.name}'s autobiography&quot;
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T01:19:42+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4940</number>
      <permalink>activerecord-associationcollection-build-should-set-belongs_to-association-before-calling-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord associations&quot; associations build</tag>
      <title>ActiveRecord AssociationCollection build should set belongs_to association before calling block</title>
      <updated-at type="datetime">2010-06-23T01:21:11+01:00</updated-at>
      <user-id type="integer">10683</user-id>
      <version type="integer">1</version>
      <user-name>2 College Bums</user-name>
      <creator-name>2 College Bums</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4940</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you add a failing test and also provide patch as per the guidelines. This looks interesting.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you add a failing test and also provide patch as per the
guidelines. This looks interesting.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T01:53:33+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4940</number>
      <permalink>activerecord-associationcollection-build-should-set-belongs_to-association-before-calling-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord associations&quot; associations build</tag>
      <title>ActiveRecord AssociationCollection build should set belongs_to association before calling block</title>
      <updated-at type="datetime">2010-06-23T01:53:35+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>2 College Bums</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4940</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Follow this http://rails.lighthouseapp.com/projects/8994/sending-patches to provide a test case and a patch ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Follow this &lt;a href=
&quot;http://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;http://rails.lighthouseapp.com/projects/8994/sending-patches&lt;/a&gt;
to provide a test case and a patch ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-24T23:37:21+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4940</number>
      <permalink>activerecord-associationcollection-build-should-set-belongs_to-association-before-calling-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord associations&quot; associations build</tag>
      <title>ActiveRecord AssociationCollection build should set belongs_to association before calling block</title>
      <updated-at type="datetime">2010-06-24T23:37:28+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>2 College Bums</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4940</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Even with existing code you can do 

@@@ ruby
author.autobiographies.build do |book|
  book.title = &quot;#{book.author.name}'s autobiography&quot;
end
@@@

and it will work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Even with existing code you can do&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;author.autobiographies.build do |book|
  book.title = &quot;#{book.author.name}'s autobiography&quot;
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and it will work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-08T21:39:58+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4940</number>
      <permalink>activerecord-associationcollection-build-should-set-belongs_to-association-before-calling-block</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord &quot;activerecord associations&quot; associations build</tag>
      <title>ActiveRecord AssociationCollection build should set belongs_to association before calling block</title>
      <updated-at type="datetime">2010-09-08T21:40:00+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>2 College Bums</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4940</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-07T05:21:21+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord &quot;activerecord associations&quot; associations build
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4940</number>
      <permalink>activerecord-associationcollection-build-should-set-belongs_to-association-before-calling-block</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord associations build</tag>
      <title>ActiveRecord AssociationCollection build should set belongs_to association before calling block</title>
      <updated-at type="datetime">2010-10-07T05:21:21+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">5</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>2 College Bums</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4940</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
