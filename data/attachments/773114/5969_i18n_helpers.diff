From 4c94d55c4de0bcda406af927e2e5372c71e4006b Mon Sep 17 00:00:00 2001
From: Sven Fuchs <svenfuchs@artweb-design.de>
Date: Sun, 14 Nov 2010 18:46:40 +0100
Subject: [PATCH 2/2] Make TranslationHelper#translate use the :rescue_format option in I18n 0.5.0

Don't catch exceptions here. Instead only declare that we want exceptions to be rescued as :html, but also let users configure reactions to exceptions in I18n.
---
 .../lib/action_view/helpers/translation_helper.rb  |   21 +++++++++++++------
 1 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/translation_helper.rb b/actionpack/lib/action_view/helpers/translation_helper.rb
index 8574ca6..88259f6 100644
--- a/actionpack/lib/action_view/helpers/translation_helper.rb
+++ b/actionpack/lib/action_view/helpers/translation_helper.rb
@@ -5,9 +5,18 @@ module ActionView
   module Helpers
     module TranslationHelper
       # Delegates to I18n#translate but also performs three additional functions.
-      # First, it'll catch MissingTranslationData exceptions and turn them into
-      # inline spans that contains the missing key, such that you can see in a
-      # view what is missing where.
+      #
+      # First, it'll pass the :rescue_format => :html option to I18n so that any caught
+      # MissingTranslationData exceptions will be turned into inline spans that
+      #
+      #   * have a "translation-missing" class set,
+      #   * contain the missing key as a title attribute and
+      #   * a titleized version of the last key segment as a text.
+      #
+      # E.g. the value returned for a missing translation key :"blog.post.title" will be
+      # <span class="translation_missing" title="translation missing: blog.post.title">Title</span>.
+      # This way your views will display rather reasonableful strings but it will still
+      # be easy to spot missing translations.
       #
       # Second, it'll scope the key by the current partial if the key starts
       # with a period. So if you call <tt>translate(".foo")</tt> from the
@@ -24,15 +33,13 @@ module ActionView
       # naming convention helps to identify translations that include HTML tags so that
       # you know what kind of output to expect when you call translate in a template.
       def translate(key, options = {})
-        translation = I18n.translate(scope_key_by_partial(key), options.merge!(:raise => true))
+        options.merge!(:rescue_format => :html) unless options.key?(:rescue_format)
+        translation = I18n.translate(scope_key_by_partial(key), options)
         if html_safe_translation_key?(key) && translation.respond_to?(:html_safe)
           translation.html_safe
         else
           translation
         end
-      rescue I18n::MissingTranslationData => e
-        keys = I18n.normalize_keys(e.locale, e.key, e.options[:scope])
-        content_tag('span', keys.join(', '), :class => 'translation_missing')
       end
       alias :t :translate
 
-- 
1.7.2.2
