<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-19T02:49:55+01:00</created-at>
  <creator-id type="integer">42716</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3069</number>
  <permalink>action-caching-ignores-format-for-xmlhttprequest</permalink>
  <priority type="integer">132468</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>action_controller caches_action caching format xml_http_request</tag>
  <title>Action caching ignores format for XMLHttpRequest</title>
  <updated-at type="datetime">2010-10-06T06:37:40+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Tomas K.</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3069</url>
  <priority-name nil="true"></priority-name>
  <original-body>If there is no format specified in url, a chosen template differs for XMLHttpRequest (js is used)
and non-XMLHttpRequest (html is used). Cache fragment name is the same for both request types. 

If the cache fragment is created by normal (non-XMLHttpRequest) request with no format specifier
(i.e. /books) and than the same page is accessed via XMLHttpRequest, a cached fragment in html
format will be returned and the page would be probably broken. The same problem happens when the
fragment is created by XMLHttpRequest and than the page is accessed via non-XMLHttpRequest.

This code:
@@@ class BooksController &lt; ApplicationController
  caches_action :index
@@@
creates a cache fragment called
@@ views/myserver/books.cache @@

I think fragment should have extension according to template which was used:
@@ views/myserver/books.html.cache
views/myserver/books.js.cache @@

I found this bug in Rails 2.2.2., Rails 2.3.3. and the Edge Rails. A patch for Edge Rails is attached.</original-body>
  <latest-body>If there is no format specified in url, a chosen template differs for XMLHttpRequest (js is used)
and non-XMLHttpRequest (html is used). Cache fragment name is the same for both request types. 

If the cache fragment is created by normal (non-XMLHttpRequest) request with no format specifier
(i.e. /books) and than the same page is accessed via XMLHttpRequest, a cached fragment in html
format will be returned and the page would be probably broken. The same problem happens when the
fragment is created by XMLHttpRequest and than the page is accessed via non-XMLHttpRequest.

This code:
@@@ class BooksController &lt; ApplicationController
  caches_action :index
@@@
creates a cache fragment called
@@ views/myserver/books.cache @@

I think fragment should have extension according to template which was used:
@@ views/myserver/books.html.cache
views/myserver/books.js.cache @@

I found this bug in Rails 2.2.2., Rails 2.3.3. and the Edge Rails. A patch for Edge Rails is attached.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If there is no format specified in url, a chosen template
differs for XMLHttpRequest (js is used) and non-XMLHttpRequest
(html is used). Cache fragment name is the same for both request
types.&lt;/p&gt;
&lt;p&gt;If the cache fragment is created by normal (non-XMLHttpRequest)
request with no format specifier (i.e. /books) and than the same
page is accessed via XMLHttpRequest, a cached fragment in html
format will be returned and the page would be probably broken. The
same problem happens when the fragment is created by XMLHttpRequest
and than the page is accessed via non-XMLHttpRequest.&lt;/p&gt;
&lt;p&gt;This code: @@@ class BooksController &amp;lt; ApplicationController
caches_action :index&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
creates a cache fragment called
@@ views/myserver/books.cache @@

I think fragment should have extension according to template which was used:
@@ views/myserver/books.html.cache
views/myserver/books.js.cache @@

I found this bug in Rails 2.2.2., Rails 2.3.3. and the Edge Rails. A patch for Edge Rails is attached.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If there is no format specified in url, a chosen template differs for XMLHttpRequest (js is used)
and non-XMLHttpRequest (html is used). Cache fragment name is the same for both request types. 

If the cache fragment is created by normal (non-XMLHttpRequest) request with no format specifier
(i.e. /books) and than the same page is accessed via XMLHttpRequest, a cached fragment in html
format will be returned and the page would be probably broken. The same problem happens when the
fragment is created by XMLHttpRequest and than the page is accessed via non-XMLHttpRequest.

This code:
@@@ ruby 
class BooksController &lt; ApplicationController
  caches_action :index
  ...
@@@ 
creates a cache fragment called
@@@
views/myserver/books.cache
@@@

I think fragment should have extension according to template which was used:
@@@ 
views/myserver/books.html.cache
views/myserver/books.js.cache
@@@

I found this bug in Rails 2.2.2., Rails 2.3.3. and the Edge Rails. A patch for Edge Rails is attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If there is no format specified in url, a chosen template
differs for XMLHttpRequest (js is used)&lt;br&gt;
and non-XMLHttpRequest (html is used). Cache fragment name is the
same for both request types.&lt;/p&gt;
&lt;p&gt;If the cache fragment is created by normal (non-XMLHttpRequest)
request with no format specifier&lt;br&gt;
(i.e. /books) and than the same page is accessed via
XMLHttpRequest, a cached fragment in html format will be returned
and the page would be probably broken. The same problem happens
when the&lt;br&gt;
fragment is created by XMLHttpRequest and than the page is accessed
via non-XMLHttpRequest.&lt;/p&gt;
&lt;p&gt;This code:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class BooksController &amp;lt; ApplicationController
  caches_action :index
  ...&lt;/code&gt;
&lt;/pre&gt;
creates a cache fragment called&lt;br&gt;
&lt;pre&gt;
&lt;code&gt;views/myserver/books.cache&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think fragment should have extension according to template
which was used:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;views/myserver/books.html.cache
views/myserver/books.js.cache&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I found this bug in Rails 2.2.2., Rails 2.3.3. and the Edge
Rails. A patch for Edge Rails is attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-19T02:49:55+01:00</created-at>
      <creator-id type="integer">42716</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3069</number>
      <permalink>action-caching-ignores-format-for-xmlhttprequest</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_controller caches_action caching format xml_http_request</tag>
      <title>Action caching ignores format for XMLHttpRequest</title>
      <updated-at type="datetime">2009-08-19T02:54:05+01:00</updated-at>
      <user-id type="integer">42716</user-id>
      <version type="integer">1</version>
      <user-name>Tomas K.</user-name>
      <creator-name>Tomas K.</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3069</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I am experiencing this exact same issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am experiencing this exact same issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-22T21:52:35+01:00</created-at>
      <creator-id type="integer">42716</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3069</number>
      <permalink>action-caching-ignores-format-for-xmlhttprequest</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_controller caches_action caching format xml_http_request</tag>
      <title>Action caching ignores format for XMLHttpRequest</title>
      <updated-at type="datetime">2009-10-22T21:52:37+01:00</updated-at>
      <user-id type="integer">19095</user-id>
      <version type="integer">2</version>
      <user-name>Brad Sumersford</user-name>
      <creator-name>Tomas K.</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3069</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:37:35+01:00</created-at>
      <creator-id type="integer">42716</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3069</number>
      <permalink>action-caching-ignores-format-for-xmlhttprequest</permalink>
      <priority type="integer">132468</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>action_controller caches_action caching format xml_http_request</tag>
      <title>Action caching ignores format for XMLHttpRequest</title>
      <updated-at type="datetime">2010-10-06T06:37:40+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Tomas K.</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3069</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1e853ce9acccae972285753a973ee72f6a90e3bc</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-19T02:49:57+01:00</created-at>
      <filename>cache_format_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">247194</id>
      <size type="integer">879</size>
      <uploader-id type="integer">42716</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/247194/cache_format_fix.diff</url>
    </attachment>
  </attachments>
</ticket>
