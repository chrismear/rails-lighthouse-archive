Index: vendor/rails/activerecord/lib/active_record/base.rb
===================================================================
--- vendor/rails/activerecord/lib/active_record/base.rb (revision 1377)
+++ vendor/rails/activerecord/lib/active_record/base.rb (working copy)
@@ -2345,7 +2345,8 @@
        def replace_bind_variables(statement, values) #:nodoc:
          raise_if_bind_arity_mismatch(statement, statement.count('?'), values.size)
          bound = values.dup
-          statement.gsub('?') { quote_bound_value(bound.shift) }
+          c = connection
+          statement.gsub('?') { quote_bound_value(bound.shift, c) }
        end

        def replace_named_bind_variables(statement, bind_vars) #:nodoc:
@@ -2377,15 +2378,15 @@
          expanded
        end

-        def quote_bound_value(value) #:nodoc:
+        def quote_bound_value(value, c = connection) #:nodoc:
          if value.respond_to?(:map) && !value.acts_like?(:string)
            if value.respond_to?(:empty?) && value.empty?
-              connection.quote(nil)
+              c.quote(nil)
            else
-              value.map { |v| connection.quote(v) }.join(',')
+              value.map { |v| c.quote(v) }.join(',')
            end
          else
-            connection.quote(value)
+            c.quote(value)
          end
        end

Index: vendor/rails/activerecord/lib/active_record/associations.rb
===================================================================
--- vendor/rails/activerecord/lib/active_record/associations.rb (revision 1377)
+++ vendor/rails/activerecord/lib/active_record/associations.rb (working copy)
@@ -1746,8 +1746,9 @@
        end

        def column_aliases(join_dependency)
+          c = connection
          join_dependency.joins.collect{|join| join.column_names_with_alias.collect{|column_name, aliased_name|
-              "#{connection.quote_table_name join.aliased_table_name}.#{connection.quote_column_name column_name} AS #{aliased_name}"}}.flatten.join(", ")
+              "#{c.quote_table_name join.aliased_table_name}.#{c.quote_column_name column_name} AS #{aliased_name}"}}.flatten.join(", ")
        end

        def add_association_callbacks(association_name, options)