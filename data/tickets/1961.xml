<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-13T14:59:31+00:00</created-at>
  <creator-id type="integer">19160</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1961</number>
  <permalink>allow-sweepers-to-run-expire_fragment-without-declaring-cache_sweeper</permalink>
  <priority type="integer">1216</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>cache_sweeper expire_fragment observers sweepers</tag>
  <title>Allow sweepers to run expire_fragment without declaring cache_sweeper</title>
  <updated-at type="datetime">2011-02-02T17:38:42+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Gravis</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1961</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,

I've tried to find a ticket related to this issue, and didn't find any, sorry if it has been discussed here before.
Ok, here's my problem :

I have an activity feed on my site. I'd like to fragment_cache it.
The problem occurs when I want to invalid the cache when a new entry is created. I've setup a sweeper, declared it as an observer.

in the sweeper's after_create, I have :

@@@
def after_create
  puts(&quot;Here I am&quot;)
  expire_fragment(:controller =&gt; :last_activities, :action =&gt; :index, :locale =&gt; I18n.locale)
end
@@@

When a new entry is created, I can see the &quot;Here I am&quot; output, and expire_fragment will do nothing, silently. I've found some topics in forums saying that only a cache_sweeper in a controller can fire this.
That's 100% true. 
My problem is now to retreive which controllers may create an entry, looking for some observed models before to investigate. This is painful and error-prone, since I will certainly forget a controller.

Would it be possible to have sweepers fire this method (I really don't see the link with a controller here)

Thanks a lot
Gravis</original-body>
  <latest-body>Hi,

I've tried to find a ticket related to this issue, and didn't find any, sorry if it has been discussed here before.
Ok, here's my problem :

I have an activity feed on my site. I'd like to fragment_cache it.
The problem occurs when I want to invalid the cache when a new entry is created. I've setup a sweeper, declared it as an observer.

in the sweeper's after_create, I have :

@@@
def after_create
  puts(&quot;Here I am&quot;)
  expire_fragment(:controller =&gt; :last_activities, :action =&gt; :index, :locale =&gt; I18n.locale)
end
@@@

When a new entry is created, I can see the &quot;Here I am&quot; output, and expire_fragment will do nothing, silently. I've found some topics in forums saying that only a cache_sweeper in a controller can fire this.
That's 100% true. 
My problem is now to retreive which controllers may create an entry, looking for some observed models before to investigate. This is painful and error-prone, since I will certainly forget a controller.

Would it be possible to have sweepers fire this method (I really don't see the link with a controller here)

Thanks a lot
Gravis</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I've tried to find a ticket related to this issue, and didn't
find any, sorry if it has been discussed here before. Ok, here's my
problem :&lt;/p&gt;
&lt;p&gt;I have an activity feed on my site. I'd like to fragment_cache
it. The problem occurs when I want to invalid the cache when a new
entry is created. I've setup a sweeper, declared it as an
observer.&lt;/p&gt;
&lt;p&gt;in the sweeper's after_create, I have :&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def after_create
  puts(&amp;quot;Here I am&amp;quot;)
  expire_fragment(:controller =&amp;gt; :last_activities, :action =&amp;gt; :index, :locale =&amp;gt; I18n.locale)
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When a new entry is created, I can see the &quot;Here I am&quot; output,
and expire_fragment will do nothing, silently. I've found some
topics in forums saying that only a cache_sweeper in a controller
can fire this. That's 100% true. My problem is now to retreive
which controllers may create an entry, looking for some observed
models before to investigate. This is painful and error-prone,
since I will certainly forget a controller.&lt;/p&gt;
&lt;p&gt;Would it be possible to have sweepers fire this method (I really
don't see the link with a controller here)&lt;/p&gt;
&lt;p&gt;Thanks a lot Gravis&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

I've tried to find a ticket related to this issue, and didn't find any, sorry if it has been discussed here before.
Ok, here's my problem :

I have an activity feed on my site. I'd like to fragment_cache it.
The problem occurs when I want to invalid the cache when a new entry is created. I've setup a sweeper, declared it as an observer.

in the sweeper's after_create, I have :

@@@
def after_create
  puts(&quot;Here I am&quot;)
  expire_fragment(:controller =&gt; :last_activities, :action =&gt; :index, :locale =&gt; I18n.locale)
end
@@@

When a new entry is created, I can see the &quot;Here I am&quot; output, and expire_fragment will do nothing, silently. I've found some topics in forums saying that only a cache_sweeper in a controller can fire this.
That's 100% true. 
My problem is now to retreive which controllers may create an entry, looking for some observed models before to investigate. This is painful and error-prone, since I will certainly forget a controller.

Would it be possible to have sweepers fire this method (I really don't see the link with a controller here)

Thanks a lot
Gravis</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I've tried to find a ticket related to this issue, and didn't
find any, sorry if it has been discussed here before. Ok, here's my
problem :&lt;/p&gt;
&lt;p&gt;I have an activity feed on my site. I'd like to fragment_cache
it. The problem occurs when I want to invalid the cache when a new
entry is created. I've setup a sweeper, declared it as an
observer.&lt;/p&gt;
&lt;p&gt;in the sweeper's after_create, I have :&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def after_create
  puts(&amp;quot;Here I am&amp;quot;)
  expire_fragment(:controller =&amp;gt; :last_activities, :action =&amp;gt; :index, :locale =&amp;gt; I18n.locale)
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When a new entry is created, I can see the &quot;Here I am&quot; output,
and expire_fragment will do nothing, silently. I've found some
topics in forums saying that only a cache_sweeper in a controller
can fire this. That's 100% true. My problem is now to retreive
which controllers may create an entry, looking for some observed
models before to investigate. This is painful and error-prone,
since I will certainly forget a controller.&lt;/p&gt;
&lt;p&gt;Would it be possible to have sweepers fire this method (I really
don't see the link with a controller here)&lt;/p&gt;
&lt;p&gt;Thanks a lot Gravis&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-13T14:59:31+00:00</created-at>
      <creator-id type="integer">19160</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1961</number>
      <permalink>allow-sweepers-to-run-expire_fragment-without-declaring-cache_sweeper</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>cache_sweeper expire_fragment observers sweepers</tag>
      <title>Allow sweepers to run expire_fragment without declaring cache_sweeper</title>
      <updated-at type="datetime">2009-02-13T14:59:33+00:00</updated-at>
      <user-id type="integer">19160</user-id>
      <version type="integer">1</version>
      <user-name>Gravis</user-name>
      <creator-name>Gravis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1961</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just ran across the same problem - most websites are describing how to use the Sweeper as an observer (which makes sense, since @@@class Sweeper &lt; ActiveRecord::Observer@@@) but additionally the Sweeper requires a request which went through a controller before hand. It's definately not intuitive. Workers and other deamons (which do not rely on a controller) won't be able to swipe the caches.

I use the following workaround in my Sweepers to make them cache-aware. Works with 2.3.2 but might cause issues sooner or later.

@@@
  delegate :cache_configured?, :cache_store, :to =&gt; ActionController::Base
  def perform_action; true; end
  def render; true; end

  def self.logger
    ActionController::Base.logger
  end

  include ActionController::Benchmarking
  include ActionController::Caching::Fragments
@@@

I wouldn't use these Sweepers in your controllers then anymore.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just ran across the same problem - most websites are describing
how to use the Sweeper as an observer (which makes sense, since
@@@class Sweeper &amp;lt; ActiveRecord::Observer@@@) but additionally
the Sweeper requires a request which went through a controller
before hand. It's definately not intuitive. Workers and other
deamons (which do not rely on a controller) won't be able to swipe
the caches.&lt;/p&gt;
&lt;p&gt;I use the following workaround in my Sweepers to make them
cache-aware. Works with 2.3.2 but might cause issues sooner or
later.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  delegate :cache_configured?, :cache_store, :to =&amp;gt; ActionController::Base
  def perform_action; true; end
  def render; true; end

  def self.logger
    ActionController::Base.logger
  end

  include ActionController::Benchmarking
  include ActionController::Caching::Fragments
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I wouldn't use these Sweepers in your controllers then
anymore.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-12T00:57:51+01:00</created-at>
      <creator-id type="integer">19160</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1961</number>
      <permalink>allow-sweepers-to-run-expire_fragment-without-declaring-cache_sweeper</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>cache_sweeper expire_fragment observers sweepers</tag>
      <title>Allow sweepers to run expire_fragment without declaring cache_sweeper</title>
      <updated-at type="datetime">2009-04-12T00:57:53+01:00</updated-at>
      <user-id type="integer">53805</user-id>
      <version type="integer">2</version>
      <user-name>Marcel Jackwerth</user-name>
      <creator-name>Gravis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1961</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:39+01:00</created-at>
      <creator-id type="integer">19160</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1961</number>
      <permalink>allow-sweepers-to-run-expire_fragment-without-declaring-cache_sweeper</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>cache_sweeper expire_fragment observers sweepers</tag>
      <title>Allow sweepers to run expire_fragment without declaring cache_sweeper</title>
      <updated-at type="datetime">2010-05-04T18:48:39+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Gravis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1961</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:41:18+00:00</created-at>
      <creator-id type="integer">19160</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1961</number>
      <permalink>allow-sweepers-to-run-expire_fragment-without-declaring-cache_sweeper</permalink>
      <priority type="integer">1216</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache_sweeper expire_fragment observers sweepers</tag>
      <title>Allow sweepers to run expire_fragment without declaring cache_sweeper</title>
      <updated-at type="datetime">2011-02-02T17:38:13+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Gravis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1961</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:41:19+00:00</created-at>
      <creator-id type="integer">19160</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1961</number>
      <permalink>allow-sweepers-to-run-expire_fragment-without-declaring-cache_sweeper</permalink>
      <priority type="integer">1216</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>cache_sweeper expire_fragment observers sweepers</tag>
      <title>Allow sweepers to run expire_fragment without declaring cache_sweeper</title>
      <updated-at type="datetime">2011-02-02T17:38:42+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Gravis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1961</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
