From 0e57edf7515d6924d5df91f9898f96ac20d3c20e Mon Sep 17 00:00:00 2001
From: Douglas F Shearer <dougal.s@gmail.com>
Date: Thu, 7 May 2009 23:58:07 +0100
Subject: [PATCH] Fixes "can't dup NilClass" error when calling OrderedHash#keys after using the alternate initialization method.

---
 activesupport/lib/active_support/ordered_hash.rb |   10 ++++++++++
 activesupport/test/ordered_hash_test.rb          |   10 ++++++++++
 2 files changed, 20 insertions(+), 0 deletions(-)

diff --git a/activesupport/lib/active_support/ordered_hash.rb b/activesupport/lib/active_support/ordered_hash.rb
index fed8094..25e1ee0 100644
--- a/activesupport/lib/active_support/ordered_hash.rb
+++ b/activesupport/lib/active_support/ordered_hash.rb
@@ -10,6 +10,16 @@ module ActiveSupport
         @keys = []
       end
 
+      def self.[](*args)
+        ordered_hash = new
+        args.each_with_index { |val,ind|
+          # Only every second value is a key.
+          next if ind % 2 != 0
+          ordered_hash[val] = args[ind + 1]
+        }
+        ordered_hash
+      end
+
       def initialize_copy(other)
         super
         # make a deep copy of keys
diff --git a/activesupport/test/ordered_hash_test.rb b/activesupport/test/ordered_hash_test.rb
index 7cd8c8a..336f8eb 100644
--- a/activesupport/test/ordered_hash_test.rb
+++ b/activesupport/test/ordered_hash_test.rb
@@ -158,4 +158,14 @@ class OrderedHashTest < Test::Unit::TestCase
   def test_inspect
     assert @ordered_hash.inspect.include?(@hash.inspect)
   end
+  
+  def test_alternate_initialization
+    ActiveSupport::OrderedHash[1,2,3,4].is_a?(ActiveSupport::OrderedHash)
+  end
+  
+  def test_alternate_initialization_keys 
+    alternate = ActiveSupport::OrderedHash[1,2,3,4]
+    assert_equal [1,3], alternate.keys
+  end  
+    
 end
-- 
1.5.6.1

