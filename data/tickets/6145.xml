<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-10T17:06:23+00:00</created-at>
  <creator-id type="integer">32570</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6145</number>
  <permalink>generate-valid-sql-for-activerecordreflection-with-polymorphic-aspect-through-dependent_conditions-method</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;activerecord 3.0&quot; associations has_many patch polymorphic reflection</tag>
  <title>Generate valid sql for ActiveRecord::Reflection with polymorphic aspect through dependent_conditions method</title>
  <updated-at type="datetime">2010-12-11T09:53:22+00:00</updated-at>
  <user-id type="integer">7341</user-id>
  <version type="integer">4</version>
  <user-name>Piotr Sarnacki</user-name>
  <creator-name>Ari Epstein</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6145</url>
  <priority-name>Low</priority-name>
  <original-body>When I do the following an error is raised:

@@@ ruby

class Post &lt; ActiveRecord::Base
  has_many :taggings, :as =&gt; :taggable, :dependent =&gt; :delete_all
end

Post.create!
Post.destroy

@@@

I get something like this:

@@@ console

Mysql::Error: Unknown column 'taggable' in 'where clause': DELETE FROM `taggings` WHERE ((taggable = 30) AND (taggable_type = 'Post')) (ActiveRecord::StatementInvalid)

@@@

The apparent problem is a defect in the dependent_conditions method of the Reflection class, which generates invalid sql for polymorphic associations.  I have attached a patch with a test.  This was not an issue in the 2.3 branch.  Hopefully it can be resolved quickly?</original-body>
  <latest-body>When I do the following an error is raised:

@@@ ruby

class Post &lt; ActiveRecord::Base
  has_many :taggings, :as =&gt; :taggable, :dependent =&gt; :delete_all
end

Post.create!
Post.destroy

@@@

I get something like this:

@@@ console

Mysql::Error: Unknown column 'taggable' in 'where clause': DELETE FROM `taggings` WHERE ((taggable = 30) AND (taggable_type = 'Post')) (ActiveRecord::StatementInvalid)

@@@

The apparent problem is a defect in the dependent_conditions method of the Reflection class, which generates invalid sql for polymorphic associations.  I have attached a patch with a test.  This was not an issue in the 2.3 branch.  Hopefully it can be resolved quickly?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When I do the following an error is raised:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class Post &amp;lt; ActiveRecord::Base
  has_many :taggings, :as =&amp;gt; :taggable, :dependent =&amp;gt; :delete_all
end

Post.create!
Post.destroy&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;
Mysql::Error: Unknown column 'taggable' in 'where clause': DELETE FROM `taggings` WHERE ((taggable = 30) AND (taggable_type = 'Post')) (ActiveRecord::StatementInvalid)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The apparent problem is a defect in the dependent_conditions
method of the Reflection class, which generates invalid sql for
polymorphic associations. I have attached a patch with a test. This
was not an issue in the 2.3 branch. Hopefully it can be resolved
quickly?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When I do the following an error is raised:

@@@ ruby

class Post &lt; ActiveRecord::Base
  has_many :taggings, :as =&gt; :taggable, :dependent =&gt; :delete_all
end

Post.create!
Post.destroy

@@@

I get something like this:

@@@ console

Mysql::Error: Unknown column 'taggable' in 'where clause': DELETE FROM `taggings` WHERE ((taggable = 30) AND (taggable_type = 'Post')) (ActiveRecord::StatementInvalid)

@@@

The apparent problem is a defect in the dependent_conditions method of the Reflection class, which generates invalid sql for polymorphic associations.  I have attached a patch with a test.  This was not an issue in the 2.3 branch.  Hopefully it can be resolved quickly?</body>
      <body-html>&lt;div&gt;&lt;p&gt;When I do the following an error is raised:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class Post &amp;lt; ActiveRecord::Base
  has_many :taggings, :as =&amp;gt; :taggable, :dependent =&amp;gt; :delete_all
end

Post.create!
Post.destroy&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;
Mysql::Error: Unknown column 'taggable' in 'where clause': DELETE FROM `taggings` WHERE ((taggable = 30) AND (taggable_type = 'Post')) (ActiveRecord::StatementInvalid)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The apparent problem is a defect in the dependent_conditions
method of the Reflection class, which generates invalid sql for
polymorphic associations. I have attached a patch with a test. This
was not an issue in the 2.3 branch. Hopefully it can be resolved
quickly?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-10T17:06:23+00:00</created-at>
      <creator-id type="integer">32570</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6145</number>
      <permalink>generate-valid-sql-for-activerecordreflection-with-polymorphic-aspect-through-dependent_conditions-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord 3.0&quot; associations has_many polymorphic reflection</tag>
      <title>Generate valid sql for ActiveRecord::Reflection with polymorphic aspect through dependent_conditions method</title>
      <updated-at type="datetime">2010-12-10T17:16:14+00:00</updated-at>
      <user-id type="integer">32570</user-id>
      <version type="integer">1</version>
      <user-name>Ari Epstein</user-name>
      <creator-name>Ari Epstein</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6145</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-10T17:10:16+00:00</created-at>
      <creator-id type="integer">32570</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord 3.0\&quot; associations has_many polymorphic reflection&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6145</number>
      <permalink>generate-valid-sql-for-activerecordreflection-with-polymorphic-aspect-through-dependent_conditions-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord 3.0&quot; associations has_many patch polymorphic reflection</tag>
      <title>Generate valid sql for ActiveRecord::Reflection with polymorphic aspect through dependent_conditions method</title>
      <updated-at type="datetime">2010-12-10T17:10:18+00:00</updated-at>
      <user-id type="integer">32570</user-id>
      <version type="integer">2</version>
      <user-name>Ari Epstein</user-name>
      <creator-name>Ari Epstein</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6145</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ack!  This should be closed -- it appears to be a bug in the composite_primary_keys gem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ack! This should be closed -- it appears to be a bug in the
composite_primary_keys gem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-10T17:29:39+00:00</created-at>
      <creator-id type="integer">32570</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6145</number>
      <permalink>generate-valid-sql-for-activerecordreflection-with-polymorphic-aspect-through-dependent_conditions-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord 3.0&quot; associations has_many patch polymorphic reflection</tag>
      <title>Generate valid sql for ActiveRecord::Reflection with polymorphic aspect through dependent_conditions method</title>
      <updated-at type="datetime">2010-12-10T17:29:42+00:00</updated-at>
      <user-id type="integer">32570</user-id>
      <version type="integer">3</version>
      <user-name>Ari Epstein</user-name>
      <creator-name>Ari Epstein</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6145</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, closing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, closing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-11T09:53:16+00:00</created-at>
      <creator-id type="integer">32570</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6145</number>
      <permalink>generate-valid-sql-for-activerecordreflection-with-polymorphic-aspect-through-dependent_conditions-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;activerecord 3.0&quot; associations has_many patch polymorphic reflection</tag>
      <title>Generate valid sql for ActiveRecord::Reflection with polymorphic aspect through dependent_conditions method</title>
      <updated-at type="datetime">2010-12-11T09:53:22+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">4</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>Ari Epstein</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6145</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b8626be681a70f736268737d857bb0f8dea21475</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-10T17:06:23+00:00</created-at>
      <filename>polymorphic_dependent_conditions_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">813270</id>
      <size type="integer">3034</size>
      <uploader-id type="integer">32570</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/813270/polymorphic_dependent_conditions_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
