<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-07-16T19:22:49+01:00</created-at>
  <creator-id type="integer">22814</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2918</number>
  <permalink>activerecordbase-finders-select-merging</permalink>
  <priority type="integer">2001</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>ActiveRecord::Base finders select merging</title>
  <updated-at type="datetime">2010-07-09T03:13:42+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">6</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>qoobaa</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2918</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Patch allows to join multiple scopes with :select attribute instead of overwriting it:

@@@ ruby
Developer.with_scope(:find =&gt; { :select =&gt; &quot;DISTINCT id&quot; }) do
  Developer.with_scope(:find =&gt; { :select =&gt; &quot;DISTINCT salary&quot; }) do
    Developer.find(:first).salary
  end
end
@@@

Will generate SQL like:
SELECT DISTINCT id,salary ON ...

Instead of:
SELECT DISTINCT salary ON ...

It's quite important when you add aggregate functions or GROUP in your scopes.</original-body>
  <latest-body>Patch allows to join multiple scopes with :select attribute instead of overwriting it:

@@@ ruby
Developer.with_scope(:find =&gt; { :select =&gt; &quot;DISTINCT id&quot; }) do
  Developer.with_scope(:find =&gt; { :select =&gt; &quot;DISTINCT salary&quot; }) do
    Developer.find(:first).salary
  end
end
@@@

Will generate SQL like:
SELECT DISTINCT id,salary ON ...

Instead of:
SELECT DISTINCT salary ON ...

It's quite important when you add aggregate functions or GROUP in your scopes.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Patch allows to join multiple scopes with :select attribute
instead of overwriting it:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Developer.with_scope(:find =&amp;gt; { :select =&amp;gt; &amp;quot;DISTINCT id&amp;quot; }) do
  Developer.with_scope(:find =&amp;gt; { :select =&amp;gt; &amp;quot;DISTINCT salary&amp;quot; }) do
    Developer.find(:first).salary
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will generate SQL like: SELECT DISTINCT id,salary ON ...&lt;/p&gt;
&lt;p&gt;Instead of: SELECT DISTINCT salary ON ...&lt;/p&gt;
&lt;p&gt;It's quite important when you add aggregate functions or GROUP
in your scopes.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch allows to join multiple scopes with :select attribute instead of overwriting it:

@@@ ruby
Developer.with_scope(:find =&gt; { :select =&gt; &quot;DISTINCT id&quot; }) do
  Developer.with_scope(:find =&gt; { :select =&gt; &quot;DISTINCT salary&quot; }) do
    Developer.find(:first).salary
  end
end
@@@

Will generate SQL like:
SELECT DISTINCT id,salary ON ...

Instead of:
SELECT DISTINCT salary ON ...

It's quite important when you add aggregate functions or GROUP in your scopes.

EDIT: this is duplicate of #1295, but my patch fixes also problems with DISTINCTs</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch allows to join multiple scopes with :select attribute
instead of overwriting it:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Developer.with_scope(:find =&amp;gt; { :select =&amp;gt; &quot;DISTINCT id&quot; }) do
  Developer.with_scope(:find =&amp;gt; { :select =&amp;gt; &quot;DISTINCT salary&quot; }) do
    Developer.find(:first).salary
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Will generate SQL like:&lt;br&gt;
SELECT DISTINCT id,salary ON ...&lt;/p&gt;
&lt;p&gt;Instead of:&lt;br&gt;
SELECT DISTINCT salary ON ...&lt;/p&gt;
&lt;p&gt;It's quite important when you add aggregate functions or GROUP
in your scopes.&lt;/p&gt;
&lt;p&gt;EDIT: this is duplicate of &lt;a href=&quot;/projects/8994/tickets/1295&quot;
title=&quot;Ticket #1295&quot;&gt;#1295&lt;/a&gt;, but my patch fixes also problems
with DISTINCTs&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-16T19:22:49+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2918</number>
      <permalink>activerecordbase-finders-select-merging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base finders select merging</title>
      <updated-at type="datetime">2009-07-21T10:12:36+01:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">1</version>
      <user-name>qoobaa</user-name>
      <creator-name>qoobaa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2918</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:54+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2918</number>
      <permalink>activerecordbase-finders-select-merging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base finders select merging</title>
      <updated-at type="datetime">2010-05-04T18:48:54+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>qoobaa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2918</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've attached a patch without tests as an example fix that only covers the basic case of chaining select calls (i.e. Topic.select(:id).select(:name)). There are a few issues surrounding it that may require discussion before implementing. Once I get some feedback I'll submit a full patch with tests.

The first issue is DISTINCTs. I think these really fall outside of the scope of this method (select) and should probably be handled with a new method or possibly two to properly handle DISTINCT ON.  Adding a distinct method would just need an instance variable to capture the set state when its called so that the DISTINCT keyword can be prepended to the first @select_values element when build_arel gets called. DISTINCT ON is more complex, as some (all?) SQL implementations require the leftmost ORDER BY expressions to match the DISTINCT ON expressions. 

The second issue is merge/&amp;. Currently, the instance variables backing all multi-value methods except @join_values and @where_values are overwritten during a merge. I don't see why @select_values, @group_values and @order_values can't simply be appended, and @having_values handled like @where_values.

The third issue (non-issue) is handling this properly when raw SQL fragments are used. I'd say not handling it is the appropriate action to take here, but I thought I'd toss that out for consideration.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've attached a patch without tests as an example fix that only
covers the basic case of chaining select calls (i.e.
Topic.select(:id).select(:name)). There are a few issues
surrounding it that may require discussion before implementing.
Once I get some feedback I'll submit a full patch with tests.&lt;/p&gt;
&lt;p&gt;The first issue is DISTINCTs. I think these really fall outside
of the scope of this method (select) and should probably be handled
with a new method or possibly two to properly handle DISTINCT ON.
Adding a distinct method would just need an instance variable to
capture the set state when its called so that the DISTINCT keyword
can be prepended to the first @select_values element when
build_arel gets called. DISTINCT ON is more complex, as some (all?)
SQL implementations require the leftmost ORDER BY expressions to
match the DISTINCT ON expressions.&lt;/p&gt;
&lt;p&gt;The second issue is merge/&amp;amp;. Currently, the instance
variables backing all multi-value methods except @join_values and
@where_values are overwritten during a merge. I don't see why
@select_values, @group_values and @order_values can't simply be
appended, and @having_values handled like @where_values.&lt;/p&gt;
&lt;p&gt;The third issue (non-issue) is handling this properly when raw
SQL fragments are used. I'd say not handling it is the appropriate
action to take here, but I thought I'd toss that out for
consideration.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-05T21:42:55+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2918</number>
      <permalink>activerecordbase-finders-select-merging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base finders select merging</title>
      <updated-at type="datetime">2010-05-05T21:42:58+01:00</updated-at>
      <user-id type="integer">98046</user-id>
      <version type="integer">3</version>
      <user-name>Blane Dabney</user-name>
      <creator-name>qoobaa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2918</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Having issues attaching the patch. It's short, so here it is:

 .../lib/active_record/relation/query_methods.rb    |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb
index 7bca12d..89edd1e 100644
--- a/activerecord/lib/active_record/relation/query_methods.rb
+++ b/activerecord/lib/active_record/relation/query_methods.rb
@@ -175,10 +175,11 @@ module ActiveRecord
       quoted_table_name = @klass.quoted_table_name
 
       if selects.present?
-        selects.each do |s|
+        selects.reject! do |s|
           @implicit_readonly = false
-          arel = arel.project(s) if s.present?
+          !s.present?
         end
+        arel = arel.project(selects)
       else
         arel = arel.project(quoted_table_name + '.*')
       end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Having issues attaching the patch. It's short, so here it
is:&lt;/p&gt;
&lt;p&gt;.../lib/active_record/relation/query_methods.rb | 5 +++-- 1
files changed, 3 insertions(+), 2 deletions(-)&lt;/p&gt;
&lt;p&gt;diff --git
a/activerecord/lib/active_record/relation/query_methods.rb
b/activerecord/lib/active_record/relation/query_methods.rb&lt;br&gt;
index 7bca12d..89edd1e 100644&lt;br&gt;
--- a/activerecord/lib/active_record/relation/query_methods.rb +++
b/activerecord/lib/active_record/relation/query_methods.rb @@
-175,10 +175,11 @@ module ActiveRecord&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;   quoted_table_name = @klass.quoted_table_name

   if selects.present?&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt; selects.each do |s|&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt; selects.reject! do |s|
   @implicit_readonly = false&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;   arel = arel.project(s) if s.present?&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;   !s.present?
 end&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt; arel = arel.project(selects)&lt;/code&gt;
&lt;/pre&gt;
else
&lt;pre&gt;
&lt;code&gt; arel = arel.project(quoted_table_name + '.*')&lt;/code&gt;
&lt;/pre&gt;
end&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-05T21:45:33+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2918</number>
      <permalink>activerecordbase-finders-select-merging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base finders select merging</title>
      <updated-at type="datetime">2010-05-05T21:45:37+01:00</updated-at>
      <user-id type="integer">98046</user-id>
      <version type="integer">4</version>
      <user-name>Blane Dabney</user-name>
      <creator-name>qoobaa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2918</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@@@
 .../lib/active_record/relation/query_methods.rb    |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb
index 7bca12d..89edd1e 100644
--- a/activerecord/lib/active_record/relation/query_methods.rb
+++ b/activerecord/lib/active_record/relation/query_methods.rb
@@ -175,10 +175,11 @@ module ActiveRecord
       quoted_table_name = @klass.quoted_table_name
 
       if selects.present?
-        selects.each do |s|
+        selects.reject! do |s|
           @implicit_readonly = false
-          arel = arel.project(s) if s.present?
+          !s.present?
         end
+        arel = arel.project(selects)
       else
         arel = arel.project(quoted_table_name + '.*')
       end
@@@</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt; .../lib/active_record/relation/query_methods.rb    |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb
index 7bca12d..89edd1e 100644
--- a/activerecord/lib/active_record/relation/query_methods.rb
+++ b/activerecord/lib/active_record/relation/query_methods.rb
@@ -175,10 +175,11 @@ module ActiveRecord
       quoted_table_name = @klass.quoted_table_name
 
       if selects.present?
-        selects.each do |s|
+        selects.reject! do |s|
           @implicit_readonly = false
-          arel = arel.project(s) if s.present?
+          !s.present?
         end
+        arel = arel.project(selects)
       else
         arel = arel.project(quoted_table_name + '.*')
       end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-05T21:49:33+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2918</number>
      <permalink>activerecordbase-finders-select-merging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base finders select merging</title>
      <updated-at type="datetime">2010-05-05T21:49:38+01:00</updated-at>
      <user-id type="integer">98046</user-id>
      <version type="integer">5</version>
      <user-name>Blane Dabney</user-name>
      <creator-name>qoobaa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2918</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Multiple selects are now merged in Rails master. Ticket [4841](https://rails.lighthouseapp.com/projects/8994/tickets/4841) and Commit http://github.com/rails/rails/commit/0ebb5bf6590b8ac62c53538ade7095676baec3d4 for reference.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Multiple selects are now merged in Rails master. Ticket &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4841&quot;&gt;4841&lt;/a&gt;
and Commit &lt;a href=
&quot;http://github.com/rails/rails/commit/0ebb5bf6590b8ac62c53538ade7095676baec3d4&quot;&gt;
http://github.com/rails/rails/commit/0ebb5bf6590b8ac62c53538ade7095...&lt;/a&gt;
for reference.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-09T03:13:39+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2918</number>
      <permalink>activerecordbase-finders-select-merging</permalink>
      <priority type="integer">2001</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base finders select merging</title>
      <updated-at type="datetime">2010-07-09T03:13:42+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">6</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>qoobaa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2918</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>76813f4f630cc79df43a79ee9006146c9633d519</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-07-16T19:22:49+01:00</created-at>
      <filename>0001-ActiveRecord-Base-finders-select-merging.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">222583</id>
      <size type="integer">4833</size>
      <uploader-id type="integer">22814</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/222583/0001-ActiveRecord-Base-finders-select-merging.patch</url>
    </attachment>
  </attachments>
</ticket>
