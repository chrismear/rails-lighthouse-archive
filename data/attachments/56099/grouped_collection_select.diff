From e0e4f733f0a461185f8e47aa4bdd4add19a20b71 Mon Sep 17 00:00:00 2001
From: codeape <dan@codeape.net>
Date: Wed, 22 Oct 2008 23:58:42 +1100
Subject: [PATCH] Created grouped_collection_select

---
 .../lib/action_view/helpers/form_options_helper.rb |   21 ++++++++++++
 .../test/template/form_options_helper_test.rb      |   35 ++++++++++++++++++++
 2 files changed, 56 insertions(+), 0 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_options_helper.rb b/actionpack/lib/action_view/helpers/form_options_helper.rb
index 33f8aaf..e9b13df 100644
--- a/actionpack/lib/action_view/helpers/form_options_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_options_helper.rb
@@ -132,6 +132,14 @@ module ActionView
       def collection_select(object, method, collection, value_method, text_method, options = {}, html_options = {})
         InstanceTag.new(object, method, self, options.delete(:object)).to_collection_select_tag(collection, value_method, text_method, options, html_options)
       end
+      
+      
+      #
+      #
+      #
+      def grouped_collection_select(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})
+        InstanceTag.new(object, method, self, options.delete(:object)).to_grouped_collection_select_tag(collection, group_method, group_label_method, option_key_method, option_value_method, options, html_options)
+      end
 
       # Return select and option tags for the given object and method, using
       # #time_zone_options_for_select to generate the list of option tags.
@@ -346,6 +354,15 @@ module ActionView
         )
       end
 
+      def to_grouped_collection_select_tag(collection, group_method, group_label_method, option_key_method, option_value_method, options, html_options)
+        html_options = html_options.stringify_keys
+        add_default_name_and_id(html_options)
+        value = value(object)
+        content_tag(
+          "select", add_options(option_groups_from_collection_for_select(collection, group_method, group_label_method, option_key_method, option_value_method, value), options, value), html_options
+        )
+      end
+
       def to_time_zone_select_tag(priority_zones, options, html_options)
         html_options = html_options.stringify_keys
         add_default_name_and_id(html_options)
@@ -380,6 +397,10 @@ module ActionView
         @template.collection_select(@object_name, method, collection, value_method, text_method, objectify_options(options), @default_options.merge(html_options))
       end
 
+      def grouped_collection_select(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})
+        @template.grouped_collection_select(@object_name, method, collection, group_method, group_label_method, option_key_method, option_value_method, objectify_options(options), @default_options.merge(html_options))
+      end
+
       def time_zone_select(method, priority_zones = nil, options = {}, html_options = {})
         @template.time_zone_select(@object_name, method, priority_zones, objectify_options(options), @default_options.merge(html_options))
       end
diff --git a/actionpack/test/template/form_options_helper_test.rb b/actionpack/test/template/form_options_helper_test.rb
index a33eb85..5130196 100644
--- a/actionpack/test/template/form_options_helper_test.rb
+++ b/actionpack/test/template/form_options_helper_test.rb
@@ -681,5 +681,40 @@ uses_mocha "FormOptionsHelperTest" do
                      html
     end
 
+
+    def test_grouped_collection_select
+      @continents = [
+        Continent.new("<Africa>", [Country.new("<sa>", "<South Africa>"), Country.new("so", "Somalia")] ),
+        Continent.new("Europe", [Country.new("dk", "Denmark"), Country.new("ie", "Ireland")] )
+      ]
+
+      @post = Post.new
+      @post.origin = 'dk'
+
+      assert_dom_equal(
+        "<select id=\"post_origin\" name=\"post[origin]\"><optgroup label=\"&lt;Africa&gt;\"><option value=\"&lt;sa&gt;\">&lt;South Africa&gt;</option>\n<option value=\"so\">Somalia</option></optgroup><optgroup label=\"Europe\"><option value=\"dk\" selected=\"selected\">Denmark</option>\n<option value=\"ie\">Ireland</option></optgroup></select>",
+        grouped_collection_select("post", "origin", @continents, :countries, :continent_name, :country_id, :country_name)
+      )
+    end
+
+    def test_grouped_collection_select_under_fields_for
+      @continents = [
+        Continent.new("<Africa>", [Country.new("<sa>", "<South Africa>"), Country.new("so", "Somalia")] ),
+        Continent.new("Europe", [Country.new("dk", "Denmark"), Country.new("ie", "Ireland")] )
+      ]
+
+      @post = Post.new
+      @post.origin = 'dk'
+
+      fields_for :post, @post do |f|
+        concat f.grouped_collection_select("origin", @continents, :countries, :continent_name, :country_id, :country_name)
+      end
+
+      assert_dom_equal(
+        "<select id=\"post_origin\" name=\"post[origin]\"><optgroup label=\"&lt;Africa&gt;\"><option value=\"&lt;sa&gt;\">&lt;South Africa&gt;</option>\n<option value=\"so\">Somalia</option></optgroup><optgroup label=\"Europe\"><option value=\"dk\" selected=\"selected\">Denmark</option>\n<option value=\"ie\">Ireland</option></optgroup></select>",
+        output_buffer
+      )
+    end
+
   end
 end
\ No newline at end of file
-- 
1.6.0.1


From fbb2f913fc15ff609440bc6de23092c74ff229c8 Mon Sep 17 00:00:00 2001
From: codeape <dan@codeape.net>
Date: Thu, 23 Oct 2008 00:31:09 +1100
Subject: [PATCH] Updating documentation

---
 .../lib/action_view/helpers/form_options_helper.rb |   53 ++++++++++++++++----
 1 files changed, 43 insertions(+), 10 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_options_helper.rb b/actionpack/lib/action_view/helpers/form_options_helper.rb
index e9b13df..7e3423a 100644
--- a/actionpack/lib/action_view/helpers/form_options_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_options_helper.rb
@@ -53,16 +53,16 @@ module ActionView
     #     <option value="2">Sam</option>
     #     <option value="3">Tobias</option>
     #   </select>
-    # 
-    # Like the other form helpers, +select+ can accept an <tt>:index</tt> option to manually set the ID used in the resulting output. Unlike other helpers, +select+ expects this 
+    #
+    # Like the other form helpers, +select+ can accept an <tt>:index</tt> option to manually set the ID used in the resulting output. Unlike other helpers, +select+ expects this
     # option to be in the +html_options+ parameter.
-    # 
-    # Example: 
-    # 
+    #
+    # Example:
+    #
     #   select("album[]", "genre", %w[rap rock country], {}, { :index => nil })
-    # 
+    #
     # becomes:
-    # 
+    #
     #   <select name="album[][genre]" id="album__genre">
     #     <option value="rap">rap</option>
     #     <option value="rock">rock</option>
@@ -107,7 +107,7 @@ module ActionView
       # The <tt>:value_method</tt> and <tt>:text_method</tt> parameters are methods to be called on each member
       # of +collection+. The return values are used as the +value+ attribute and contents of each
       # <tt><option></tt> tag, respectively.
-      # 
+      #
       # Example object structure for use with this method:
       #   class Post < ActiveRecord::Base
       #     belongs_to :author
@@ -132,15 +132,48 @@ module ActionView
       def collection_select(object, method, collection, value_method, text_method, options = {}, html_options = {})
         InstanceTag.new(object, method, self, options.delete(:object)).to_collection_select_tag(collection, value_method, text_method, options, html_options)
       end
-      
-      
+
+
+      # Returns <tt><select></tt>, <tt><optgroup></tt> and <tt><option></tt> tags for the collection of existing return values of
+      # +method+ for +object+'s class. The value returned from calling +method+ on the instance +object+ will
+      # be selected. If calling +method+ returns +nil+, no selection is made without including <tt>:prompt</tt>
+      # or <tt>:include_blank</tt> in the +options+ hash.
       #
+      # Parameters:
+      # * +object+ - The instance of the class to be used for the select tag
+      # * +method+ - The attribute of +object+ corresponding to the select tag
+      # * +collection+ - An array of objects representing the <tt><optgroup></tt> tags.
+      # * +group_method+ - The name of a method which, when called on a member of +collection+, returns an
+      #   array of child objects representing the <tt><option></tt> tags.
+      # * +group_label_method+ - The name of a method which, when called on a member of +collection+, returns a
+      #   string to be used as the +label+ attribute for its <tt><optgroup></tt> tag.
+      # * +option_key_method+ - The name of a method which, when called on a child object of a member of
+      #   +collection+, returns a value to be used as the +value+ attribute for its <tt><option></tt> tag.
+      # * +option_value_method+ - The name of a method which, when called on a child object of a member of
+      #   +collection+, returns a value to be used as the contents of its <tt><option></tt> tag.
       #
+      # Example object structure for use with this method:
+      #   class Continent < ActiveRecord::Base
+      #     has_many :countries
+      #     # attribs: id, name
+      #   end
+      #   class Country < ActiveRecord::Base
+      #     belongs_to :continent
+      #     # attribs: id, name, continent_id
+      #   end
+      #   class Destination < ActiveRecord::Base
+      #     belongs_to :country
+      #   end
+      #
+      # Sample usage:
+      #   grouped_collection_select(:destination, :country_id, @continents, :countries, :name, :id, :name)
       #
       def grouped_collection_select(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})
         InstanceTag.new(object, method, self, options.delete(:object)).to_grouped_collection_select_tag(collection, group_method, group_label_method, option_key_method, option_value_method, options, html_options)
       end
 
+
+
       # Return select and option tags for the given object and method, using
       # #time_zone_options_for_select to generate the list of option tags.
       #
-- 
1.6.0.1

