From 371751635cd3ec0fc768477919d7ab4cf9eceb97 Mon Sep 17 00:00:00 2001
From: Nathan Weizenbaum <nex342@gmail.com>
Date: Thu, 4 Dec 2008 21:04:34 -0800
Subject: [PATCH] Auto-load template handlers based on unmatched extensions.

---
 actionpack/lib/action_view/template.rb          |   10 ++------
 actionpack/lib/action_view/template_handlers.rb |   25 ++++++++++++++++++++++-
 2 files changed, 27 insertions(+), 8 deletions(-)

diff --git a/actionpack/lib/action_view/template.rb b/actionpack/lib/action_view/template.rb
index e32b768..eaf9cfd 100644
--- a/actionpack/lib/action_view/template.rb
+++ b/actionpack/lib/action_view/template.rb
@@ -98,10 +98,6 @@ module ActionView #:nodoc:
     end
 
     private
-      def valid_extension?(extension)
-        Template.template_handler_extensions.include?(extension)
-      end
-
       def find_full_path(path, load_paths)
         load_paths = Array(load_paths) + [nil]
         load_paths.each do |load_path|
@@ -115,11 +111,11 @@ module ActionView #:nodoc:
       #   [base_path, name, format, extension]
       def split(file)
         if m = file.match(/^(.*\/)?([^\.]+)\.?(\w+)?\.?(\w+)?\.?(\w+)?$/)
-          if valid_extension?(m[5]) # Multipart formats
+          if Template.valid_extension?(m[5]) # Multipart formats
             [m[1], m[2], "#{m[3]}.#{m[4]}", m[5]]
-          elsif valid_extension?(m[4]) # Single format
+          elsif Template.valid_extension?(m[4]) # Single format
             [m[1], m[2], m[3], m[4]]
-          elsif valid_extension?(m[3]) # No format
+          elsif Template.valid_extension?(m[3]) # No format
             [m[1], m[2], nil, m[3]]
           else # No extension
             [m[1], m[2], m[3], nil]
diff --git a/actionpack/lib/action_view/template_handlers.rb b/actionpack/lib/action_view/template_handlers.rb
index d06ddd5..c50a51b 100644
--- a/actionpack/lib/action_view/template_handlers.rb
+++ b/actionpack/lib/action_view/template_handlers.rb
@@ -28,6 +28,10 @@ module ActionView #:nodoc:
       @@template_handlers[extension.to_sym] = klass
     end
 
+    def valid_extension?(extension)
+      template_handler_extensions.include?(extension) || init_path_for_extension(extension)
+    end
+
     def template_handler_extensions
       @@template_handlers.keys.map(&:to_s).sort
     end
@@ -38,7 +42,26 @@ module ActionView #:nodoc:
     end
 
     def handler_class_for_extension(extension)
-      (extension && @@template_handlers[extension.to_sym]) || @@default_template_handlers
+      (extension && @@template_handlers[extension.to_sym] || autoload_handler_class(extension)) ||
+        @@default_template_handlers
     end
+
+    private
+      def autoload_handler_class(extension)
+        return if Gem.loaded_specs[extension]
+        return unless init_path = init_path_for_extension(extension)
+        Gem.activate(extension)
+        load(init_path)
+        handler_class_for_extension(extension)
+      end
+
+      # Returns the path to the rails/init.rb file for the given extension,
+      # or nil if no gem provides it.
+      def init_path_for_extension(extension)
+        return unless spec = Gem.searcher.find(extension.to_s)
+        returning File.join(spec.full_gem_path, 'rails', 'init.rb') do |path|
+          return unless File.file?(path)
+        end
+      end
   end
 end
-- 
1.6.0.2.296.gfe33b

