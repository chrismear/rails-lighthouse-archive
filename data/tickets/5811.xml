<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-15T04:18:49+01:00</created-at>
  <creator-id type="integer">1075</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5811</number>
  <permalink>to_xml-should-conver-hash-in-methods-if-found</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>to_xml should convert Hash returning methods in :methods</title>
  <updated-at type="datetime">2011-02-02T17:58:13+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Claudio Poli</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5811</url>
  <priority-name>Low</priority-name>
  <original-body>Hello,
currently when using :methods on to_xml if the called method returns a Hash Rails won't convert it, instead it just display a string with the hash content.

A workaround it to use :procs to convert manually the offending method to to_xml with a bunch of options:

    options[:procs] ||= []
    options[:procs] &lt;&lt; Proc.new { |options| cover_urls.to_xml(options.update(:root =&gt; 'cover-urls'))}

I realize that since it is Hash people would want to customize it, but I think we can provide some default behaviour, like the example above (automatically set the root to method_name.dasherize).

The as_json/to_json are perfectly fine in rendering a method that returns a Hash, if we can get to_xml to behave the same we can DRY up a lot of code and share it between the as_json and to_xml overrides in AR models.</original-body>
  <latest-body>Hello,
currently when using :methods on to_xml if the called method returns a Hash Rails won't convert it, instead it just display a string with the hash content.

A workaround it to use :procs to convert manually the offending method to to_xml with a bunch of options:

    options[:procs] ||= []
    options[:procs] &lt;&lt; Proc.new { |options| cover_urls.to_xml(options.update(:root =&gt; 'cover-urls'))}

I realize that since it is Hash people would want to customize it, but I think we can provide some default behaviour, like the example above (automatically set the root to method_name.dasherize).

The as_json/to_json are perfectly fine in rendering a method that returns a Hash, if we can get to_xml to behave the same we can DRY up a lot of code and share it between the as_json and to_xml overrides in AR models.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;br&gt;
currently when using :methods on to_xml if the called method
returns a Hash Rails won't convert it, instead it just display a
string with the hash content.&lt;/p&gt;
&lt;p&gt;A workaround it to use :procs to convert manually the offending
method to to_xml with a bunch of options:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;options[:procs] ||= []
options[:procs] &amp;lt;&amp;lt; Proc.new { |options| cover_urls.to_xml(options.update(:root =&amp;gt; 'cover-urls'))}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I realize that since it is Hash people would want to customize
it, but I think we can provide some default behaviour, like the
example above (automatically set the root to
method_name.dasherize).&lt;/p&gt;
&lt;p&gt;The as_json/to_json are perfectly fine in rendering a method
that returns a Hash, if we can get to_xml to behave the same we can
DRY up a lot of code and share it between the as_json and to_xml
overrides in AR models.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello,
currently when using :methods on to_xml if the called method returns a Hash Rails won't convert it, instead it just display a string with the hash content.

A workaround it to use :procs to convert manually the offending method to to_xml with a bunch of options:

    options[:procs] ||= []
    options[:procs] &lt;&lt; Proc.new { |options| cover_urls.to_xml(options.update(:root =&gt; 'cover-urls'))}

I realize that since it is Hash people would want to customize it, but I think we can provide some default behaviour, like the example above (automatically set the root to method_name.dasherize).

The as_json/to_json are perfectly fine in rendering a method that returns a Hash, if we can get to_xml to behave the same we can DRY up a lot of code and share it between the as_json and to_xml overrides in AR models.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;br&gt;
currently when using :methods on to_xml if the called method
returns a Hash Rails won't convert it, instead it just display a
string with the hash content.&lt;/p&gt;
&lt;p&gt;A workaround it to use :procs to convert manually the offending
method to to_xml with a bunch of options:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;options[:procs] ||= []
options[:procs] &amp;lt;&amp;lt; Proc.new { |options| cover_urls.to_xml(options.update(:root =&amp;gt; 'cover-urls'))}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I realize that since it is Hash people would want to customize
it, but I think we can provide some default behaviour, like the
example above (automatically set the root to
method_name.dasherize).&lt;/p&gt;
&lt;p&gt;The as_json/to_json are perfectly fine in rendering a method
that returns a Hash, if we can get to_xml to behave the same we can
DRY up a lot of code and share it between the as_json and to_xml
overrides in AR models.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-15T04:18:49+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5811</number>
      <permalink>to_xml-should-conver-hash-in-methods-if-found</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>as_json hash to_json to_xml</tag>
      <title>to_xml should conver Hash in :methods if found</title>
      <updated-at type="datetime">2010-10-15T04:18:51+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">1</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Claudio Poli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5811</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-15T04:19:16+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:title: to_xml should conver Hash in :methods if found
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5811</number>
      <permalink>to_xml-should-conver-hash-in-methods-if-found</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>as_json hash to_json to_xml</tag>
      <title>to_xml should convert Hash returning methods in :methods</title>
      <updated-at type="datetime">2010-10-15T04:19:17+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">2</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Claudio Poli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5811</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T08:32:13+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: as_json hash to_json to_xml
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5811</number>
      <permalink>to_xml-should-conver-hash-in-methods-if-found</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>to_xml should convert Hash returning methods in :methods</title>
      <updated-at type="datetime">2010-10-19T08:32:15+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Claudio Poli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5811</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:47:46+00:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5811</number>
      <permalink>to_xml-should-conver-hash-in-methods-if-found</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>to_xml should convert Hash returning methods in :methods</title>
      <updated-at type="datetime">2011-02-02T17:58:13+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Claudio Poli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5811</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:47:47+00:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5811</number>
      <permalink>to_xml-should-conver-hash-in-methods-if-found</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>to_xml should convert Hash returning methods in :methods</title>
      <updated-at type="datetime">2011-02-02T17:57:03+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Claudio Poli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5811</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
