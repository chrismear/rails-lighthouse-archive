<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-03-25T21:46:09+00:00</created-at>
  <creator-id type="integer">92203</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4269</number>
  <permalink>build-through-an-association-does-not-set-the-back-reference-in-rails-300</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;activerecord rails3&quot;</tag>
  <title>build through an association does not set the back-reference in Rails 3.0.0</title>
  <updated-at type="datetime">2010-03-27T07:38:46+00:00</updated-at>
  <user-id type="integer">12714</user-id>
  <version type="integer">3</version>
  <user-name>Yehuda Katz (wycats)</user-name>
  <creator-name>Martin Pl&#246;ger</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4269</url>
  <priority-name>Low</priority-name>
  <original-body>When I call the #build-method on an association the reference back (belongs_to) in the newly created instance is still nil.

@active_record_model.other_models.build.active_record_model # =&gt; nil

This makes it difficult when there are validations on the built object like 'validates_presence_of :active_record_model'.
These fail it this scenario:

@active_record_model.other_models.build

@active_record_model.save # =&gt; false


You have to use a workaround like that:


@active_record_model.other_models.build :active_record_model =&gt; @active_record_model

@active_record_model.save # =&gt; true</original-body>
  <latest-body>When I call the #build-method on an association the reference back (belongs_to) in the newly created instance is still nil.

@active_record_model.other_models.build.active_record_model # =&gt; nil

This makes it difficult when there are validations on the built object like 'validates_presence_of :active_record_model'.
These fail it this scenario:

@active_record_model.other_models.build

@active_record_model.save # =&gt; false


You have to use a workaround like that:


@active_record_model.other_models.build :active_record_model =&gt; @active_record_model

@active_record_model.save # =&gt; true</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When I call the #build-method on an association the reference
back (belongs_to) in the newly created instance is still nil.&lt;/p&gt;
&lt;p&gt;@active_record_model.other_models.build.active_record_model #
=&amp;gt; nil&lt;/p&gt;
&lt;p&gt;This makes it difficult when there are validations on the built
object like 'validates_presence_of :active_record_model'.&lt;br&gt;
These fail it this scenario:&lt;/p&gt;
&lt;p&gt;@active_record_model.other_models.build&lt;/p&gt;
&lt;p&gt;@active_record_model.save # =&amp;gt; false&lt;/p&gt;
&lt;p&gt;You have to use a workaround like that:&lt;/p&gt;
&lt;p&gt;@active_record_model.other_models.build :active_record_model
=&amp;gt; @active_record_model&lt;/p&gt;
&lt;p&gt;@active_record_model.save # =&amp;gt; true&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When I call the #build-method on an association the reference back (belongs_to) in the newly created instance is still nil.

@active_record_model.other_models.build.active_record_model # =&gt; nil

This makes it difficult when there are validations on the built object like 'validates_presence_of :active_record_model'.
These fail it this scenario:

@active_record_model.other_models.build

@active_record_model.save # =&gt; false


You have to use a workaround like that:


@active_record_model.other_models.build :active_record_model =&gt; @active_record_model

@active_record_model.save # =&gt; true</body>
      <body-html>&lt;div&gt;&lt;p&gt;When I call the #build-method on an association the reference
back (belongs_to) in the newly created instance is still nil.&lt;/p&gt;
&lt;p&gt;@active_record_model.other_models.build.active_record_model #
=&amp;gt; nil&lt;/p&gt;
&lt;p&gt;This makes it difficult when there are validations on the built
object like 'validates_presence_of :active_record_model'.&lt;br&gt;
These fail it this scenario:&lt;/p&gt;
&lt;p&gt;@active_record_model.other_models.build&lt;/p&gt;
&lt;p&gt;@active_record_model.save # =&amp;gt; false&lt;/p&gt;
&lt;p&gt;You have to use a workaround like that:&lt;/p&gt;
&lt;p&gt;@active_record_model.other_models.build :active_record_model
=&amp;gt; @active_record_model&lt;/p&gt;
&lt;p&gt;@active_record_model.save # =&amp;gt; true&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-25T21:46:09+00:00</created-at>
      <creator-id type="integer">92203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4269</number>
      <permalink>build-through-an-association-does-not-set-the-back-reference-in-rails-300</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>build through an association does not set the back-reference in Rails 3.0.0</title>
      <updated-at type="datetime">2010-03-25T22:02:09+00:00</updated-at>
      <user-id type="integer">92203</user-id>
      <version type="integer">1</version>
      <user-name>Martin Pl&#246;ger</user-name>
      <creator-name>Martin Pl&#246;ger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4269</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Make sure you're setting `:inverse_of` option on your associations. Additional details in this ticket https://rails.lighthouseapp.com/projects/8994/tickets/2815-nested-models-build-should-directly-assign-the-parent</body>
      <body-html>&lt;div&gt;&lt;p&gt;Make sure you're setting &lt;code&gt;:inverse_of&lt;/code&gt; option on your
associations. Additional details in this ticket &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2815-nested-models-build-should-directly-assign-the-parent&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2815-nested-m...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T05:50:48+00:00</created-at>
      <creator-id type="integer">92203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4269</number>
      <permalink>build-through-an-association-does-not-set-the-back-reference-in-rails-300</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>build through an association does not set the back-reference in Rails 3.0.0</title>
      <updated-at type="datetime">2010-03-26T05:50:52+00:00</updated-at>
      <user-id type="integer">43210</user-id>
      <version type="integer">2</version>
      <user-name>Evgeniy Dolzhenko</user-name>
      <creator-name>Martin Pl&#246;ger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4269</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-27T07:38:44+00:00</created-at>
      <creator-id type="integer">92203</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4269</number>
      <permalink>build-through-an-association-does-not-set-the-back-reference-in-rails-300</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>build through an association does not set the back-reference in Rails 3.0.0</title>
      <updated-at type="datetime">2010-03-27T07:38:46+00:00</updated-at>
      <user-id type="integer">12714</user-id>
      <version type="integer">3</version>
      <user-name>Yehuda Katz (wycats)</user-name>
      <creator-name>Martin Pl&#246;ger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4269</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
