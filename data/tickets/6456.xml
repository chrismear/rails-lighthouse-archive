<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-20T12:04:27+00:00</created-at>
  <creator-id type="integer">25424</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6456</number>
  <permalink>activerecords-xmlserializer-should-not-singularize-already-singular-association-names</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;patch activerecord serialization&quot;</tag>
  <title>[Patch] ActiveRecord's XmlSerializer should not singularize already singular association names</title>
  <updated-at type="datetime">2011-02-20T12:32:34+00:00</updated-at>
  <user-id type="integer">25424</user-id>
  <version type="integer">2</version>
  <user-name>Ludo van den Boom</user-name>
  <creator-name>Ludo van den Boom</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6456</url>
  <priority-name nil="true"></priority-name>
  <original-body>The current to_xml behavior is incorrect. It singularizes already singular association names, resulting in xml that does not represent the original models/associations. Attached patch fixes this.

## Steps to reproduce ##

Say we have the following models:

@@@ ruby
class Address &lt; ActiveRecord::Base; belongs_to :person; end
class Person &lt; ActiveRecord::Base; has_one :address; end
@@@

Now, in Rails console, find a Person and do:

@@@ ruby
&gt; @person.to_xml(:skip_instruct =&gt; true, :include =&gt; :address)
@@@

Current to_xml result (Rails 3.0.4):

@@@ xml
&lt;person&gt;
  &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;addres&gt;
    &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;/addres&gt;
&lt;/person&gt;
@@@

After applying patch:

@@@ xml
&lt;person&gt;
  &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;address&gt;
    &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;/address&gt;
&lt;/person&gt;
@@@

(notice the difference in the spelling of 'address')</original-body>
  <latest-body>The current to_xml behavior is incorrect. It singularizes already singular association names, resulting in xml that does not represent the original models/associations. Attached patch fixes this.

## Steps to reproduce ##

Say we have the following models:

@@@ ruby
class Address &lt; ActiveRecord::Base; belongs_to :person; end
class Person &lt; ActiveRecord::Base; has_one :address; end
@@@

Now, in Rails console, find a Person and do:

@@@ ruby
&gt; @person.to_xml(:skip_instruct =&gt; true, :include =&gt; :address)
@@@

Current to_xml result (Rails 3.0.4):

@@@ xml
&lt;person&gt;
  &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;addres&gt;
    &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;/addres&gt;
&lt;/person&gt;
@@@

After applying patch:

@@@ xml
&lt;person&gt;
  &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;address&gt;
    &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;/address&gt;
&lt;/person&gt;
@@@

(notice the difference in the spelling of 'address')</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The current to_xml behavior is incorrect. It singularizes
already singular association names, resulting in xml that does not
represent the original models/associations. Attached patch fixes
this.&lt;/p&gt;
&lt;h2&gt;Steps to reproduce&lt;/h2&gt;
&lt;p&gt;Say we have the following models:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class Address &amp;lt; ActiveRecord::Base; belongs_to :person; end
class Person &amp;lt; ActiveRecord::Base; has_one :address; end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, in Rails console, find a Person and do:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt; @person.to_xml(:skip_instruct =&amp;gt; true, :include =&amp;gt; :address)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Current to_xml result (Rails 3.0.4):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;person&amp;gt;
  &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;addres&amp;gt;
    &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;/addres&amp;gt;
&amp;lt;/person&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After applying patch:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;person&amp;gt;
  &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;address&amp;gt;
    &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;/address&amp;gt;
&amp;lt;/person&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(notice the difference in the spelling of 'address')&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The current to_xml behavior is incorrect. It singularizes already singular association names, resulting in xml that does not represent the original models/associations. Attached patch fixes this.

## Steps to reproduce ##

Say we have the following models:

@@@ ruby
class Address &lt; ActiveRecord::Base; belongs_to :person; end
class Person &lt; ActiveRecord::Base; has_one :address; end
@@@

Now, in Rails console, find a Person and do:

@@@ ruby
&gt; @person.to_xml(:skip_instruct =&gt; true, :include =&gt; :address)
@@@

Current to_xml result (Rails 3.0.4):

@@@ xml
&lt;person&gt;
  &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;addres&gt;
    &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;/addres&gt;
&lt;/person&gt;
@@@

After applying patch:

@@@ xml
&lt;person&gt;
  &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;address&gt;
    &lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;
  &lt;/address&gt;
&lt;/person&gt;
@@@

(notice the difference in the spelling of 'address')</body>
      <body-html>&lt;div&gt;&lt;p&gt;The current to_xml behavior is incorrect. It singularizes
already singular association names, resulting in xml that does not
represent the original models/associations. Attached patch fixes
this.&lt;/p&gt;
&lt;h2&gt;Steps to reproduce&lt;/h2&gt;
&lt;p&gt;Say we have the following models:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class Address &amp;lt; ActiveRecord::Base; belongs_to :person; end
class Person &amp;lt; ActiveRecord::Base; has_one :address; end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, in Rails console, find a Person and do:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt; @person.to_xml(:skip_instruct =&amp;gt; true, :include =&amp;gt; :address)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Current to_xml result (Rails 3.0.4):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;person&amp;gt;
  &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;addres&amp;gt;
    &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;/addres&amp;gt;
&amp;lt;/person&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After applying patch:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;person&amp;gt;
  &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;address&amp;gt;
    &amp;lt;id type=&quot;integer&quot;&amp;gt;1&amp;lt;/id&amp;gt;
  &amp;lt;/address&amp;gt;
&amp;lt;/person&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(notice the difference in the spelling of 'address')&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-20T12:04:27+00:00</created-at>
      <creator-id type="integer">25424</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6456</number>
      <permalink>activerecords-xmlserializer-should-not-singularize-already-singular-association-names</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;patch activerecord serialization&quot;</tag>
      <title>ActiveRecord's XmlSerializer should not singularize already singular association names</title>
      <updated-at type="datetime">2011-02-20T12:04:29+00:00</updated-at>
      <user-id type="integer">25424</user-id>
      <version type="integer">1</version>
      <user-name>Ludo van den Boom</user-name>
      <creator-name>Ludo van den Boom</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6456</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-20T12:32:33+00:00</created-at>
      <creator-id type="integer">25424</creator-id>
      <diffable-attributes type="yaml">--- 
:title: ActiveRecord's XmlSerializer should not singularize already singular association names
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6456</number>
      <permalink>activerecords-xmlserializer-should-not-singularize-already-singular-association-names</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;patch activerecord serialization&quot;</tag>
      <title>[Patch] ActiveRecord's XmlSerializer should not singularize already singular association names</title>
      <updated-at type="datetime">2011-02-20T12:32:34+00:00</updated-at>
      <user-id type="integer">25424</user-id>
      <version type="integer">2</version>
      <user-name>Ludo van den Boom</user-name>
      <creator-name>Ludo van den Boom</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6456</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c3ba819335c1039165da8e34510aa0b95357267c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-20T12:04:27+00:00</created-at>
      <filename>patch_to_xml_with_include_singular_associations.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">921128</id>
      <size type="integer">2998</size>
      <uploader-id type="integer">25424</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/921128/patch_to_xml_with_include_singular_associations.diff</url>
    </attachment>
  </attachments>
</ticket>
