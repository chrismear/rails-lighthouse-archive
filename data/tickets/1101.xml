<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-24T10:59:39+01:00</created-at>
  <creator-id type="integer">10460</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1101</number>
  <permalink>eager-association-loading-sanitizes-conditions-using-the-wrong-table</permalink>
  <priority type="integer">520</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>2.1 activerecord bug eager_loading edge has_many patch</tag>
  <title>Eager association loading sanitizes conditions using the wrong table</title>
  <updated-at type="datetime">2008-12-14T18:40:20+00:00</updated-at>
  <user-id type="integer">17477</user-id>
  <version type="integer">6</version>
  <user-name>Frederick Cheung</user-name>
  <creator-name>Will Bryant</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1101</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>If you have an association with conditions in hash form:

@@@ ruby
class Project &lt; ActiveRecord::Base
  has_many :tasks, :conditions =&gt; {:deleted_at =&gt; nil}
end

class Task &lt; ActiveRecord::Base
  belongs_to :project
end
@@@

and you eagerly load the association:

@@@
  Project.find(:all, :include =&gt; :tasks)
@@@

then the deleted_at column in the condition gets expanded out to `projects`.deleted_at - when it should be `tasks`.deleted_at.  

This is bad... if you're lucky it means these loads fail, if you're unlucky and have the same-named columns on the owner table, your app just misbehaves badly.

The attached patch calls the sanitiized_conditions method on the reflection which proxies the sanitize_sql call through to the target class, not the owner class, fixing this.

This bug is present in 2.1.0, 2.1.1, and edge.  The attached patch is against edge.  The first of the two commits in the patch is an additional test case showing the issue.</original-body>
  <latest-body>If you have an association with conditions in hash form:

@@@ ruby
class Project &lt; ActiveRecord::Base
  has_many :tasks, :conditions =&gt; {:deleted_at =&gt; nil}
end

class Task &lt; ActiveRecord::Base
  belongs_to :project
end
@@@

and you eagerly load the association:

@@@
  Project.find(:all, :include =&gt; :tasks)
@@@

then the deleted_at column in the condition gets expanded out to `projects`.deleted_at - when it should be `tasks`.deleted_at.  

This is bad... if you're lucky it means these loads fail, if you're unlucky and have the same-named columns on the owner table, your app just misbehaves badly.

The attached patch calls the sanitiized_conditions method on the reflection which proxies the sanitize_sql call through to the target class, not the owner class, fixing this.

This bug is present in 2.1.0, 2.1.1, and edge.  The attached patch is against edge.  The first of the two commits in the patch is an additional test case showing the issue.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If you have an association with conditions in hash form:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Project &amp;lt; ActiveRecord::Base
  has_many :tasks, :conditions =&amp;gt; {:deleted_at =&amp;gt; nil}
end

class Task &amp;lt; ActiveRecord::Base
  belongs_to :project
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and you eagerly load the association:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  Project.find(:all, :include =&amp;gt; :tasks)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then the deleted_at column in the condition gets expanded out to
&lt;code&gt;projects&lt;/code&gt;.deleted_at - when it should be
&lt;code&gt;tasks&lt;/code&gt;.deleted_at.&lt;/p&gt;
&lt;p&gt;This is bad... if you're lucky it means these loads fail, if
you're unlucky and have the same-named columns on the owner table,
your app just misbehaves badly.&lt;/p&gt;
&lt;p&gt;The attached patch calls the sanitiized_conditions method on the
reflection which proxies the sanitize_sql call through to the
target class, not the owner class, fixing this.&lt;/p&gt;
&lt;p&gt;This bug is present in 2.1.0, 2.1.1, and edge. The attached
patch is against edge. The first of the two commits in the patch is
an additional test case showing the issue.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you have an association with conditions in hash form:

@@@ ruby
class Project &lt; ActiveRecord::Base
  has_many :tasks, :conditions =&gt; {:deleted_at =&gt; nil}
end

class Task &lt; ActiveRecord::Base
  belongs_to :project
end
@@@

and you eagerly load the association:

@@@
  Project.find(:all, :include =&gt; :tasks)
@@@

then the deleted_at column in the condition gets expanded out to `projects`.deleted_at - when it should be `tasks`.deleted_at.  

This is bad... if you're lucky it means these loads fail, if you're unlucky and have the same-named columns on the owner table, your app just misbehaves badly.

The attached patch calls the sanitiized_conditions method on the reflection which proxies the sanitize_sql call through to the target class, not the owner class, fixing this.

This bug is present in 2.1.0, 2.1.1, and edge.  The attached patch is against edge.  The first of the two commits in the patch is an additional test case showing the issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you have an association with conditions in hash form:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Project &amp;lt; ActiveRecord::Base
  has_many :tasks, :conditions =&amp;gt; {:deleted_at =&amp;gt; nil}
end

class Task &amp;lt; ActiveRecord::Base
  belongs_to :project
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and you eagerly load the association:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  Project.find(:all, :include =&amp;gt; :tasks)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then the deleted_at column in the condition gets expanded out to
&lt;code&gt;projects&lt;/code&gt;.deleted_at - when it should be
&lt;code&gt;tasks&lt;/code&gt;.deleted_at.&lt;/p&gt;
&lt;p&gt;This is bad... if you're lucky it means these loads fail, if
you're unlucky and have the same-named columns on the owner table,
your app just misbehaves badly.&lt;/p&gt;
&lt;p&gt;The attached patch calls the sanitiized_conditions method on the
reflection which proxies the sanitize_sql call through to the
target class, not the owner class, fixing this.&lt;/p&gt;
&lt;p&gt;This bug is present in 2.1.0, 2.1.1, and edge. The attached
patch is against edge. The first of the two commits in the patch is
an additional test case showing the issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T10:59:39+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1101</number>
      <permalink>eager-association-loading-sanitizes-conditions-using-the-wrong-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager association loading sanitizes conditions using the wrong table</title>
      <updated-at type="datetime">2008-09-24T10:59:44+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">1</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1101</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>For the convenience of anyone who needs to patch this on their project running the released version of rails, here's a backport against your frozen-in vendor/rails 2.1.1.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For the convenience of anyone who needs to patch this on their
project running the released version of rails, here's a backport
against your frozen-in vendor/rails 2.1.1.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T11:02:18+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1101</number>
      <permalink>eager-association-loading-sanitizes-conditions-using-the-wrong-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager association loading sanitizes conditions using the wrong table</title>
      <updated-at type="datetime">2008-09-24T11:02:22+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">2</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1101</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Erm, ignore the ticket number in that second filename :).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Erm, ignore the ticket number in that second filename :).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T12:14:36+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1101</number>
      <permalink>eager-association-loading-sanitizes-conditions-using-the-wrong-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager association loading sanitizes conditions using the wrong table</title>
      <updated-at type="datetime">2008-09-24T12:14:38+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">3</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1101</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Backported to the 2-1-stable repository, since that's diverged from 2.1.1 release far enough for that not to apply.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Backported to the 2-1-stable repository, since that's diverged
from 2.1.1 release far enough for that not to apply.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-27T05:04:15+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1101</number>
      <permalink>eager-association-loading-sanitizes-conditions-using-the-wrong-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager association loading sanitizes conditions using the wrong table</title>
      <updated-at type="datetime">2008-09-27T05:04:19+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">4</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1101</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [7823c50c975df975ca3237bfbe9ca0b3c60f6b6d]) fix eager loading's :condition sanitizing expanding against the wrong table

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1101 state:commited]
http://github.com/rails/rails/commit/7823c50c975df975ca3237bfbe9ca0b3c60f6b6d</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [7823c50c975df975ca3237bfbe9ca0b3c60f6b6d]) fix eager
loading's :condition sanitizing expanding against the wrong
table&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1101&quot; title=&quot;Ticket #1101&quot;&gt;#1101&lt;/a&gt;
state:commited] &lt;a href=&quot;http://github.com/rails/rails/commit/7823c50c975df975ca3237bfbe9ca0b3c60f6b6d&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T16:52:47+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1101</number>
      <permalink>eager-association-loading-sanitizes-conditions-using-the-wrong-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager association loading sanitizes conditions using the wrong table</title>
      <updated-at type="datetime">2008-09-29T16:52:52+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1101</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-14T18:40:18+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;2.1\&quot; activerecord bug eager_loading edge has_many patch&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1101</number>
      <permalink>eager-association-loading-sanitizes-conditions-using-the-wrong-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.1 activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager association loading sanitizes conditions using the wrong table</title>
      <updated-at type="datetime">2008-12-14T18:40:20+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">6</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1101</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>7087535e0cb4d3605215c8cb2e3012748a1dac32</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-24T10:59:39+01:00</created-at>
      <filename>eager_loading_sanitizing_against_wrong_table.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">48254</id>
      <size type="integer">4037</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/48254/eager_loading_sanitizing_against_wrong_table.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>5ee40bd7bf4447692dc8d8098c6b8f6d934cd0d1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-24T11:02:18+01:00</created-at>
      <filename>0001-applied-my-patch-from-rails-lighthouse-ticket-8994.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">48255</id>
      <size type="integer">4477</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/48255/0001-applied-my-patch-from-rails-lighthouse-ticket-8994.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>5046d7a9559363964e23bcc73d3fd5919dc56420</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-27T05:04:15+01:00</created-at>
      <filename>2-1-eager_loading_sanitizing_against_wrong_table.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">49094</id>
      <size type="integer">4750</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/49094/2-1-eager_loading_sanitizing_against_wrong_table.diff</url>
    </attachment>
  </attachments>
</ticket>
