<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-25T23:11:07+01:00</created-at>
  <creator-id type="integer">16406</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">489</number>
  <permalink>tests-fail-to-recognize-custom-actions</permalink>
  <priority type="integer">17609</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>bug routing tests</tag>
  <title>Tests fail to recognize custom actions</title>
  <updated-at type="datetime">2008-06-28T20:51:18+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">11</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Michael Hartl</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
  <priority-name nil="true"></priority-name>
  <original-body>Suppose we define a custom action &lt;tt&gt;baz&lt;/tt&gt; in the Foobars controller:

@@@ruby
map.resources :foobars, :collection =&gt; { :baz =&gt; :get }
@@@

Then we define it in the controller:

@@@ruby
def baz
  raise
end
@@@

Finally, in the functional test we have:

@@@ruby
def test_baz
  get :baz
end
@@@

The result of running the test is 

&lt;pre&gt;test_baz(FoobarsControllerTest):
ActionController::UnknownAction: No action responded to baz
&lt;/pre&gt;

instead of the expected runtime error.

Even stranger, if we create a template file, the test passes:

&lt;pre&gt;touch app/views/foobars/baz.html.erb&lt;/pre&gt;

Now the test recognizes &lt;tt&gt;get :baz&lt;/tt&gt;, but we can tell that it's still not hitting the action since the test passes; the &lt;tt&gt;raise&lt;/tt&gt; inside the &lt;tt&gt;baz&lt;/tt&gt; action never gets called.</original-body>
  <latest-body>Suppose we define a custom action &lt;tt&gt;baz&lt;/tt&gt; in the Foobars controller:

@@@ruby
map.resources :foobars, :collection =&gt; { :baz =&gt; :get }
@@@

Then we define it in the controller:

@@@ruby
def baz
  raise
end
@@@

Finally, in the functional test we have:

@@@ruby
def test_baz
  get :baz
end
@@@

The result of running the test is 

&lt;pre&gt;test_baz(FoobarsControllerTest):
ActionController::UnknownAction: No action responded to baz
&lt;/pre&gt;

instead of the expected runtime error.

Even stranger, if we create a template file, the test passes:

&lt;pre&gt;touch app/views/foobars/baz.html.erb&lt;/pre&gt;

Now the test recognizes &lt;tt&gt;get :baz&lt;/tt&gt;, but we can tell that it's still not hitting the action since the test passes; the &lt;tt&gt;raise&lt;/tt&gt; inside the &lt;tt&gt;baz&lt;/tt&gt; action never gets called.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Suppose we define a custom action baz in the Foobars controller:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;map.resources :foobars, :collection =&amp;gt; { :baz =&amp;gt; :get }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Then we define it in the controller:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;def baz
  raise
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Finally, in the functional test we have:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;def test_baz
  get :baz
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The result of running the test is
&lt;/p&gt;&lt;p&gt;
test_baz(FoobarsControllerTest):
&lt;/p&gt;&lt;p&gt;
ActionController::UnknownAction: No action responded to baz
&lt;/p&gt;&lt;p&gt;
instead of the expected runtime error.
&lt;/p&gt;&lt;p&gt;
Even stranger, if we create a template file, the test passes:
&lt;/p&gt;&lt;p&gt;
touch app/views/foobars/baz.html.erb
&lt;/p&gt;&lt;p&gt;
Now the test recognizes get :baz, but we can tell that it's still not hitting the action since the test passes; the raise inside the baz action never gets called.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Suppose we define a custom action &lt;tt&gt;baz&lt;/tt&gt; in the Foobars controller:

@@@ruby
map.resources :foobars, :collection =&gt; { :baz =&gt; :get }
@@@

Then we define it in the controller:

@@@ruby
def baz
  raise
end
@@@

Finally, in the functional test we have:

@@@ruby
def test_baz
  get :baz
end
@@@

The result of running the test is 

&lt;pre&gt;test_baz(FoobarsControllerTest):
ActionController::UnknownAction: No action responded to baz&lt;/pre&gt;

instead of the expected runtime error.

Even stranger, if we create a template file, the test passes:

&lt;pre&gt;touch app/views/foobars/baz.html.erb&lt;/pre&gt;

Now the test recognizes &lt;tt&gt;get :baz&lt;/tt&gt;, but we can tell that it's still not hitting the action since the test passes; the &lt;tt&gt;raise&lt;/tt&gt; inside the &lt;tt&gt;baz&lt;/tt&gt; action never gets called.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Suppose we define a custom action &lt;tt&gt;baz&lt;/tt&gt; in the Foobars controller:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;map.resources :foobars, :collection =&amp;gt; { :baz =&amp;gt; :get }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Then we define it in the controller:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;def baz
  raise
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Finally, in the functional test we have:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;def test_baz
  get :baz
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The result of running the test is
&lt;/p&gt;&lt;p&gt;
&lt;pre&gt;test_baz(FoobarsControllerTest):
&lt;/p&gt;&lt;p&gt;
ActionController::UnknownAction: No action responded to baz&lt;/pre&gt;
&lt;/p&gt;&lt;p&gt;
instead of the expected runtime error.
&lt;/p&gt;&lt;p&gt;
Even stranger, if we create a template file, the test passes:
&lt;/p&gt;&lt;p&gt;
&lt;pre&gt;touch app/views/foobars/baz.html.erb&lt;/pre&gt;
&lt;/p&gt;&lt;p&gt;
Now the test recognizes &lt;tt&gt;get :baz&lt;/tt&gt;, but we can tell that it's still not hitting the action since the test passes; the &lt;tt&gt;raise&lt;/tt&gt; inside the &lt;tt&gt;baz&lt;/tt&gt; action never gets called.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T23:12:23+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-25T23:12:23+01:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">1</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>N.B.  I've reproduced the problem with the freshest copy from GitHub, so apparently it hasn't been fixed yet.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
N.B.  I've reproduced the problem with the freshest copy from GitHub, so apparently it hasn't been fixed yet.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T23:27:17+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-25T23:27:17+01:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">2</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Does the 'baz' action work in development mode?

As far as I'm aware in functional tests &quot;get&quot; does not look at routes at all so it should work no matter what you have in routes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Does the 'baz' action work in development mode?
&lt;/p&gt;&lt;p&gt;
As far as I'm aware in functional tests &quot;get&quot; does not look at routes at all so it should work no matter what you have in routes.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T14:53:06+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T14:53:06+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">3</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The 'baz' action works everywhere but in Rails 2.1 tests.  I discovered this problem when upgrading &quot;Insoshi&quot;:http://github.com/insoshi/insoshi/tree to Rails 2.1; suddenly several passing specs failed.  Initially I suspected RSpec, but eventually I traced the problem to Rails itself.

I'm not positive it's a routing issue&amp;mdash;given what you say, that now seems unlikely&amp;mdash;but it's definitely a Rails 2.1 testing issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The 'baz' action works everywhere but in Rails 2.1 tests.  I discovered this problem when upgrading &lt;a href=&quot;http://github.com/insoshi/insoshi/tree&quot;&gt;Insoshi&lt;/a&gt; to Rails 2.1; suddenly several passing specs failed.  Initially I suspected RSpec, but eventually I traced the problem to Rails itself.
&lt;/p&gt;&lt;p&gt;
I'm not positive it's a routing issue&amp;mdash;given what you say, that now seems unlikely&amp;mdash;but it's definitely a Rails 2.1 testing issue.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T17:05:49+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T17:05:49+01:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">4</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Would you mind trying git bisect to identify the exact rails changeset that caused the problem?

Nothing more than cd vendor/rails (assuming you have git clone'd rails there):
git bisect start v2.0.0 v2.1.0
and then run your tests and according to if they fail or not run git bisect good / git bisect bad and git will tell you which revision caused the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Would you mind trying git bisect to identify the exact rails changeset that caused the problem?
&lt;/p&gt;&lt;p&gt;
Nothing more than cd vendor/rails (assuming you have git clone'd rails there):
&lt;/p&gt;&lt;p&gt;
git bisect start v2.0.0 v2.1.0
&lt;/p&gt;&lt;p&gt;
and then run your tests and according to if they fail or not run git bisect good / git bisect bad and git will tell you which revision caused the problem.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T17:15:58+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T17:15:58+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">5</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good idea.  Will do.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Good idea.  Will do.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T17:18:30+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T17:18:30+01:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">6</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is so weird.  In a completely fresh install it now works.  There must be something else in my config that's interacting with Rails 2.1 in some subtle way.  Go ahead and mark this ticket &quot;invalid&quot;. 

Unfortunately, my problem isn't solved, since I still have an upgraded Insoshi where everything works but this weird routing issue.  I'd be surprised if I'm the only one with this problem. I'll let you know if the eventual solution is generally useful.

N.B.  As soon as I wrote &quot;definitely a Rails 2.1 testing issue&quot;, I tried to edit it to say &quot;_seems_ to be...&quot;, but Lighthouse wouldn't let me.  This is why.  :-(</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This is so weird.  In a completely fresh install it now works.  There must be something else in my config that's interacting with Rails 2.1 in some subtle way.  Go ahead and mark this ticket &quot;invalid&quot;.
&lt;/p&gt;&lt;p&gt;
Unfortunately, my problem isn't solved, since I still have an upgraded Insoshi where everything works but this weird routing issue.  I'd be surprised if I'm the only one with this problem. I'll let you know if the eventual solution is generally useful.
&lt;/p&gt;&lt;p&gt;
N.B.  As soon as I wrote &quot;definitely a Rails 2.1 testing issue&quot;, I tried to edit it to say &quot;_seems_ to be...&quot;, but Lighthouse wouldn't let me.  This is why.  :-(
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T18:05:09+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T18:05:09+01:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">7</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK, this is weird, and (alas) probably sloppiness on my part.  The problem seems to be that my custom action inside Insoshi is called 'verify', which apparently conflicts with some change made during the 2.1 upgrade.  What's strange is that this name conflict possibility occurred to me almost immediately, and I thought for sure that I had tested the possibility and found that other routes (such as 'baz') also failed.  I can't reproduce it now, and renaming my 'verify' action to 'verify_email' appears to solve the problem.

Oddly, doing a git bisect shows the problem persisting all the way down to 2.0, even for a fresh project with nothing but a 'verify' action. And yet, for a fresh application generated with Rails 2.0.2, the custom 'verify' action works fine.  (I should mention that 'verify' in fact works fine in every case; it's just the _tests_ that break.)  So it is a Rails 2.1 testing issue,  but it appears not to be generic, affecting only tests of custom actions called 'verify' in projects generated using the 2.1 version of the 'rails' script.

At this point, since my problem is solved, I'm ready to move on to bigger and better things.  Sorry for the trouble, and thanks for your help!</body>
      <body-html>&lt;div&gt;&lt;p&gt;
OK, this is weird, and (alas) probably sloppiness on my part.  The problem seems to be that my custom action inside Insoshi is called 'verify', which apparently conflicts with some change made during the 2.1 upgrade.  What's strange is that this name conflict possibility occurred to me almost immediately, and I thought for sure that I had tested the possibility and found that other routes (such as 'baz') also failed.  I can't reproduce it now, and renaming my 'verify' action to 'verify_email' appears to solve the problem.
&lt;/p&gt;&lt;p&gt;
Oddly, doing a git bisect shows the problem persisting all the way down to 2.0, even for a fresh project with nothing but a 'verify' action. And yet, for a fresh application generated with Rails 2.0.2, the custom 'verify' action works fine.  (I should mention that 'verify' in fact works fine in every case; it's just the &lt;em&gt;tests&lt;/em&gt; that break.)  So it is a Rails 2.1 testing issue,  but it appears not to be generic, affecting only tests of custom actions called 'verify' in projects generated using the 2.1 version of the 'rails' script.
&lt;/p&gt;&lt;p&gt;
At this point, since my problem is solved, I'm ready to move on to bigger and better things.  Sorry for the trouble, and thanks for your help!
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T18:53:26+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T18:53:26+01:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">8</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>verify is used by mocha, from actionpack/test/controller/base_test.rb :

@@@ ruby
    # Mocha adds some public instance methods to Object that would be
    # considered actions, so explicitly hide_action them.
    def hide_mocha_methods_from_controller(controller)
      mocha_methods = [
        :expects, :mocha, :mocha_inspect, :reset_mocha, :stubba_object,
        :stubba_method, :stubs, :verify, :__metaclass__, :__is_a__, :to_matcher,
      ]
      controller.class.send!(:hide_action, *mocha_methods)
    end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
verify is used by mocha, from actionpack/test/controller/base_test.rb :
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    # Mocha adds some public instance methods to Object that would be
    # considered actions, so explicitly hide_action them.
    def hide_mocha_methods_from_controller(controller)
      mocha_methods = [
        :expects, :mocha, :mocha_inspect, :reset_mocha, :stubba_object,
        :stubba_method, :stubs, :verify, :__metaclass__, :__is_a__, :to_matcher,
      ]
      controller.class.send!(:hide_action, *mocha_methods)
    end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T19:01:02+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T19:01:02+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">9</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Perhaps it would be a good idea to make get/post test helper methods to rais an exception if one of the mocha method names is called as an action. Though it would be of limited usefulness because the action would still be untestable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Perhaps it would be a good idea to make get/post test helper methods to rais an exception if one of the mocha method names is called as an action. Though it would be of limited usefulness because the action would still be untestable.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T19:02:42+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T19:02:42+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">10</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-28T20:51:18+01:00</created-at>
      <creator-id type="integer">16406</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">489</number>
      <permalink>tests-fail-to-recognize-custom-actions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug routing tests</tag>
      <title>Tests fail to recognize custom actions</title>
      <updated-at type="datetime">2008-06-28T20:51:18+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">11</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Michael Hartl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/489</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
