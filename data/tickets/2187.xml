<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-09T23:22:54+00:00</created-at>
  <creator-id type="integer">50093</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2187</number>
  <permalink>belongs-to-association-eagerpre-load-fails-when-foreign-key-is-same-as-association-name</permalink>
  <priority type="integer">1387</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.2.2 2.3 :include associations_preload belongs_to eager find foreign key load</tag>
  <title>belongs to association eager/pre- load fails when foreign key is same as association name</title>
  <updated-at type="datetime">2010-04-15T22:26:11+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">4</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Minh Tran</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2187</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>There is a subtle bug in the association preload code that causes eager loading not to work when the foreign key name is the same as the association name.  For example,

@@@
belongs_to :created_by, :class =&gt; 'Person', :foreign_key =&gt; 'created_by'
@@@

Attached is a diff with a test case that will reveal the problem, as well as a two-line fix for it.  The problem exists in 2.2.2 and AFAIK, 2.3 as well.

To elaborate, the problem occurs in &quot;association_preload.rb&quot; in method preload_belongs_to_association().  The id/key is obtained by doing:

@@@
record.send(primary_key_name)
@@@

However, in the case where the association name is the same as the foreign key, this will return the associated object, *not* the numeric id.  Accessing the key/id with [] instead of send() will fix the problem.

This issue does not seem to exist with the other associations because they use construct_id_map(), which accesses the numeric id with [] already.

In the attached patch, the test case I wrote is quite simple.  If eager loading worked (i.e. find() with :include), then the number of generated queries should be small.

For your reference, the failure output for the test case without the two-line fix would be:

  1) Failure:
test_preload_belongs_to_with_foreign_key_name_same_as_association_name(EagerAssociationTest)
    [./test/cases/../../lib/active_record/test_case.rb:31:in `assert_queries'
     ./test/cases/associations/eager_test.rb:785:in `test_preload_belongs_to_with_foreign_key_name_same_as_association_name'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `run']:
4 instead of 2 queries were executed.
Queries:
SELECT * FROM `funny_jokes` WHERE (created_by IS NOT NULL)
SELECT * FROM `people` WHERE (`people`.`id` = 2)
SELECT * FROM `people` WHERE (`people`.`id` = 1)
SELECT * FROM `people` WHERE (`people`.`id` IN (0,0)) .
&lt;2&gt; expected but was
&lt;4&gt;.

2017 tests, 6552 assertions, 1 failures, 0 errors</original-body>
  <latest-body>There is a subtle bug in the association preload code that causes eager loading not to work when the foreign key name is the same as the association name.  For example,

@@@
belongs_to :created_by, :class =&gt; 'Person', :foreign_key =&gt; 'created_by'
@@@

Attached is a diff with a test case that will reveal the problem, as well as a two-line fix for it.  The problem exists in 2.2.2 and AFAIK, 2.3 as well.

To elaborate, the problem occurs in &quot;association_preload.rb&quot; in method preload_belongs_to_association().  The id/key is obtained by doing:

@@@
record.send(primary_key_name)
@@@

However, in the case where the association name is the same as the foreign key, this will return the associated object, *not* the numeric id.  Accessing the key/id with [] instead of send() will fix the problem.

This issue does not seem to exist with the other associations because they use construct_id_map(), which accesses the numeric id with [] already.

In the attached patch, the test case I wrote is quite simple.  If eager loading worked (i.e. find() with :include), then the number of generated queries should be small.

For your reference, the failure output for the test case without the two-line fix would be:

  1) Failure:
test_preload_belongs_to_with_foreign_key_name_same_as_association_name(EagerAssociationTest)
    [./test/cases/../../lib/active_record/test_case.rb:31:in `assert_queries'
     ./test/cases/associations/eager_test.rb:785:in `test_preload_belongs_to_with_foreign_key_name_same_as_association_name'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `run']:
4 instead of 2 queries were executed.
Queries:
SELECT * FROM `funny_jokes` WHERE (created_by IS NOT NULL)
SELECT * FROM `people` WHERE (`people`.`id` = 2)
SELECT * FROM `people` WHERE (`people`.`id` = 1)
SELECT * FROM `people` WHERE (`people`.`id` IN (0,0)) .
&lt;2&gt; expected but was
&lt;4&gt;.

2017 tests, 6552 assertions, 1 failures, 0 errors</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There is a subtle bug in the association preload code that
causes eager loading not to work when the foreign key name is the
same as the association name. For example,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
belongs_to :created_by, :class =&amp;gt; 'Person', :foreign_key =&amp;gt; 'created_by'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Attached is a diff with a test case that will reveal the
problem, as well as a two-line fix for it. The problem exists in
2.2.2 and AFAIK, 2.3 as well.&lt;/p&gt;
&lt;p&gt;To elaborate, the problem occurs in &quot;association_preload.rb&quot; in
method preload_belongs_to_association(). The id/key is obtained by
doing:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
record.send(primary_key_name)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, in the case where the association name is the same as
the foreign key, this will return the associated object,
&lt;em&gt;not&lt;/em&gt; the numeric id. Accessing the key/id with [] instead
of send() will fix the problem.&lt;/p&gt;
&lt;p&gt;This issue does not seem to exist with the other associations
because they use construct_id_map(), which accesses the numeric id
with [] already.&lt;/p&gt;
&lt;p&gt;In the attached patch, the test case I wrote is quite simple. If
eager loading worked (i.e. find() with :include), then the number
of generated queries should be small.&lt;/p&gt;
&lt;p&gt;For your reference, the failure output for the test case without
the two-line fix would be:&lt;/p&gt;
&lt;p&gt;1) Failure:
test_preload_belongs_to_with_foreign_key_name_same_as_association_name(EagerAssociationTest)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[./test/cases/../../lib/active_record/test_case.rb:31:in `assert_queries'
 ./test/cases/associations/eager_test.rb:785:in `test_preload_belongs_to_with_foreign_key_name_same_as_association_name'
 ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `__send__'
 ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `run']:
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4 instead of 2 queries were executed. Queries: SELECT * FROM
&lt;code&gt;funny_jokes&lt;/code&gt; WHERE (created_by IS NOT NULL) SELECT *
FROM &lt;code&gt;people&lt;/code&gt; WHERE (&lt;code&gt;people&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt;
= 2) SELECT * FROM &lt;code&gt;people&lt;/code&gt; WHERE
(&lt;code&gt;people&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 1) SELECT * FROM
&lt;code&gt;people&lt;/code&gt; WHERE (&lt;code&gt;people&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; IN
(0,0)) . &amp;lt;2&amp;gt; expected but was &amp;lt;4&amp;gt;.&lt;/p&gt;
&lt;p&gt;2017 tests, 6552 assertions, 1 failures, 0 errors&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is a subtle bug in the association preload code that causes eager loading not to work when the foreign key name is the same as the association name.  For example,

@@@
belongs_to :created_by, :class =&gt; 'Person', :foreign_key =&gt; 'created_by'
@@@

Attached is a diff with a test case that will reveal the problem, as well as a two-line fix for it.  The problem exists in 2.2.2 and AFAIK, 2.3 as well.

To elaborate, the problem occurs in &quot;association_preload.rb&quot; in method preload_belongs_to_association().  The id/key is obtained by doing:

@@@
record.send(primary_key_name)
@@@

However, in the case where the association name is the same as the foreign key, this will return the associated object, *not* the numeric id.  Accessing the key/id with [ ] (square brackets) instead of send() will fix the problem.

This issue does not seem to exist with the other associations because they use construct_id_map(), which accesses the numeric id with [] already.

In the attached patch, the test case I wrote is quite simple.  If eager loading worked (i.e. find() with :include), then the number of generated queries should be small.

For your reference, the failure output for the test case without the two-line fix would be:

@@@
  1) Failure:
test_preload_belongs_to_with_foreign_key_name_same_as_association_name(EagerAssociationTest)
    [./test/cases/../../lib/active_record/test_case.rb:31:in `assert_queries'
     ./test/cases/associations/eager_test.rb:785:in `test_preload_belongs_to_with_foreign_key_name_same_as_association_name'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `run']:
4 instead of 2 queries were executed.
Queries:
SELECT * FROM `funny_jokes` WHERE (created_by IS NOT NULL)
SELECT * FROM `people` WHERE (`people`.`id` = 2)
SELECT * FROM `people` WHERE (`people`.`id` = 1)
SELECT * FROM `people` WHERE (`people`.`id` IN (0,0)) .
&lt;2&gt; expected but was
&lt;4&gt;.

2017 tests, 6552 assertions, 1 failures, 0 errors
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is a subtle bug in the association preload code that
causes eager loading not to work when the foreign key name is the
same as the association name. For example,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
belongs_to :created_by, :class =&amp;gt; 'Person', :foreign_key =&amp;gt; 'created_by'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Attached is a diff with a test case that will reveal the
problem, as well as a two-line fix for it. The problem exists in
2.2.2 and AFAIK, 2.3 as well.&lt;/p&gt;
&lt;p&gt;To elaborate, the problem occurs in &quot;association_preload.rb&quot; in
method preload_belongs_to_association(). The id/key is obtained by
doing:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
record.send(primary_key_name)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, in the case where the association name is the same as
the foreign key, this will return the associated object,
&lt;em&gt;not&lt;/em&gt; the numeric id. Accessing the key/id with [ ] (square
brackets) instead of send() will fix the problem.&lt;/p&gt;
&lt;p&gt;This issue does not seem to exist with the other associations
because they use construct_id_map(), which accesses the numeric id
with [] already.&lt;/p&gt;
&lt;p&gt;In the attached patch, the test case I wrote is quite simple. If
eager loading worked (i.e. find() with :include), then the number
of generated queries should be small.&lt;/p&gt;
&lt;p&gt;For your reference, the failure output for the test case without
the two-line fix would be:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  1) Failure:
test_preload_belongs_to_with_foreign_key_name_same_as_association_name(EagerAssociationTest)
    [./test/cases/../../lib/active_record/test_case.rb:31:in `assert_queries'
     ./test/cases/associations/eager_test.rb:785:in `test_preload_belongs_to_with_foreign_key_name_same_as_association_name'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `run']:
4 instead of 2 queries were executed.
Queries:
SELECT * FROM `funny_jokes` WHERE (created_by IS NOT NULL)
SELECT * FROM `people` WHERE (`people`.`id` = 2)
SELECT * FROM `people` WHERE (`people`.`id` = 1)
SELECT * FROM `people` WHERE (`people`.`id` IN (0,0)) .
&amp;lt;2&amp;gt; expected but was
&amp;lt;4&amp;gt;.

2017 tests, 6552 assertions, 1 failures, 0 errors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-09T23:22:54+00:00</created-at>
      <creator-id type="integer">50093</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2187</number>
      <permalink>belongs-to-association-eagerpre-load-fails-when-foreign-key-is-same-as-association-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 2.3 :include associations_preload belongs_to eager find foreign key load</tag>
      <title>belongs to association eager/pre- load fails when foreign key is same as association name</title>
      <updated-at type="datetime">2009-03-09T23:25:19+00:00</updated-at>
      <user-id type="integer">50093</user-id>
      <version type="integer">1</version>
      <user-name>Minh Tran</user-name>
      <creator-name>Minh Tran</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2187</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Giving a column and an association the same name is bound to cause trouble. Rails doesn't and shouldn't try to support doing things like this. Rename the column `created_by_id`, e.g. This ticket can be marked as invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Giving a column and an association the same name is bound to
cause trouble. Rails doesn't and shouldn't try to support doing
things like this. Rename the column &lt;code&gt;created_by_id&lt;/code&gt;,
e.g. This ticket can be marked as invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-15T20:04:55+01:00</created-at>
      <creator-id type="integer">50093</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2187</number>
      <permalink>belongs-to-association-eagerpre-load-fails-when-foreign-key-is-same-as-association-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 2.3 :include associations_preload belongs_to eager find foreign key load</tag>
      <title>belongs to association eager/pre- load fails when foreign key is same as association name</title>
      <updated-at type="datetime">2010-04-15T20:04:58+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">2</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Minh Tran</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2187</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Giving a column and an association the same name is bound to cause trouble. Rails doesn't and shouldn't try to support doing things like this. Rename the column `created_by_id`, e.g. This ticket can be marked as invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Giving a column and an association the same name is bound to
cause trouble. Rails doesn't and shouldn't try to support doing
things like this. Rename the column &lt;code&gt;created_by_id&lt;/code&gt;,
e.g. This ticket can be marked as invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-15T20:04:56+01:00</created-at>
      <creator-id type="integer">50093</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2187</number>
      <permalink>belongs-to-association-eagerpre-load-fails-when-foreign-key-is-same-as-association-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 2.3 :include associations_preload belongs_to eager find foreign key load</tag>
      <title>belongs to association eager/pre- load fails when foreign key is same as association name</title>
      <updated-at type="datetime">2010-04-15T20:05:01+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">3</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Minh Tran</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2187</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yup, never give your association the name of the foreign key, always give the foreign_key an _id suffix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yup, never give your association the name of the foreign key,
always give the foreign_key an _id suffix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-15T22:26:10+01:00</created-at>
      <creator-id type="integer">50093</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2187</number>
      <permalink>belongs-to-association-eagerpre-load-fails-when-foreign-key-is-same-as-association-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.2.2 2.3 :include associations_preload belongs_to eager find foreign key load</tag>
      <title>belongs to association eager/pre- load fails when foreign key is same as association name</title>
      <updated-at type="datetime">2010-04-15T22:26:11+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Minh Tran</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2187</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>40ec59fb77bc447acaf3e1e8002f46e0963d82e6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-09T23:22:54+00:00</created-at>
      <filename>fix_belongs_to_preload_error.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">97798</id>
      <size type="integer">4368</size>
      <uploader-id type="integer">50093</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/97798/fix_belongs_to_preload_error.diff</url>
    </attachment>
  </attachments>
</ticket>
