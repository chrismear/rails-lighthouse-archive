<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:57:59+01:00</created-at>
  <creator-id type="integer">10950</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">82855</milestone-id>
  <number type="integer">5626</number>
  <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.3.9 activerecord eager_loading has_many_through patch</tag>
  <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
  <updated-at type="datetime">2010-10-11T07:22:04+01:00</updated-at>
  <user-id type="integer">81551</user-id>
  <version type="integer">15</version>
  <user-name>Andrea Campi</user-name>
  <creator-name>Ryan Wallace</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
  <milestone-title>2.3.10</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Given:
@@@ ruby 
class Author &lt; ActiveRecord::Base
  has_many :posts
  has_many :comments_desc, :through =&gt; :posts, :source =&gt; :comments, :order =&gt; 'comments.id DESC'
end
@@@

Running:
@@@ ruby 
Author.first(:include =&gt; :comments_desc)
@@@

Will generate the following invalid SQL:
@@@ sql
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; WHERE (&quot;posts&quot;.author_id = 1)  ORDER BY comments.id DESC
@@@

This issue was not present in 2.3.5 but occurs in 2.3.9.

I've attached a failing test case which demonstrates this issue.</original-body>
  <latest-body>Given:
@@@ ruby 
class Author &lt; ActiveRecord::Base
  has_many :posts
  has_many :comments_desc, :through =&gt; :posts, :source =&gt; :comments, :order =&gt; 'comments.id DESC'
end
@@@

Running:
@@@ ruby 
Author.first(:include =&gt; :comments_desc)
@@@

Will generate the following invalid SQL:
@@@ sql
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; WHERE (&quot;posts&quot;.author_id = 1)  ORDER BY comments.id DESC
@@@

This issue was not present in 2.3.5 but occurs in 2.3.9.

I've attached a failing test case which demonstrates this issue.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Author &amp;lt; ActiveRecord::Base
  has_many :posts
  has_many :comments_desc, :through =&amp;gt; :posts, :source =&amp;gt; :comments, :order =&amp;gt; 'comments.id DESC'
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Running:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Author.first(:include =&amp;gt; :comments_desc)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Will generate the following invalid SQL:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;posts&quot;.* FROM &quot;posts&quot; WHERE (&quot;posts&quot;.author_id = 1)  ORDER BY comments.id DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This issue was not present in 2.3.5 but occurs in 2.3.9.&lt;/p&gt;
&lt;p&gt;I've attached a failing test case which demonstrates this
issue.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given:
@@@ ruby 
class Author &lt; ActiveRecord::Base
  has_many :posts
  has_many :comments_desc, :through =&gt; :posts, :source =&gt; :comments, :order =&gt; 'comments.id DESC'
end
@@@

Running:
@@@ ruby 
Author.first(:include =&gt; :comments_desc)
@@@

Will generate the following invalid SQL:
@@@ sql
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; WHERE (&quot;posts&quot;.author_id = 1)  ORDER BY comments.id DESC
@@@

This issue was not present in 2.3.5 but occurs in 2.3.9.

I've attached a failing test case which demonstrates this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Author &amp;lt; ActiveRecord::Base
  has_many :posts
  has_many :comments_desc, :through =&amp;gt; :posts, :source =&amp;gt; :comments, :order =&amp;gt; 'comments.id DESC'
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Running:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Author.first(:include =&amp;gt; :comments_desc)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Will generate the following invalid SQL:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;posts&quot;.* FROM &quot;posts&quot; WHERE (&quot;posts&quot;.author_id = 1)  ORDER BY comments.id DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This issue was not present in 2.3.5 but occurs in 2.3.9.&lt;/p&gt;
&lt;p&gt;I've attached a failing test case which demonstrates this
issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-13T16:26:00+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-13T16:26:02+01:00</updated-at>
      <user-id type="integer">10950</user-id>
      <version type="integer">1</version>
      <user-name>Ryan Wallace</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-13T16:43:17+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-13T16:43:18+01:00</updated-at>
      <user-id type="integer">10950</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Wallace</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The issue seems to have been introduced in this commit:
http://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527ea7d994c0a

Though it looks like before this commit Rails would generate valid SQL, but the order option would not be respected (therefore this test still fails in Rails 2.3.5 though for a different reason).</body>
      <body-html>&lt;div&gt;&lt;p&gt;The issue seems to have been introduced in this commit:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527ea7d994c0a&quot;&gt;
http://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Though it looks like before this commit Rails would generate
valid SQL, but the order option would not be respected (therefore
this test still fails in Rails 2.3.5 though for a different
reason).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-13T17:05:18+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-13T17:05:19+01:00</updated-at>
      <user-id type="integer">10950</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Wallace</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm thinking it might make sense to fall back to a table join strategy (as mentioned in the ActiveRecord::AssociationPreload documentation) though I'm not sure how to do this yet. Let me know if I'm way off base on this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm thinking it might make sense to fall back to a table join
strategy (as mentioned in the ActiveRecord::AssociationPreload
documentation) though I'm not sure how to do this yet. Let me know
if I'm way off base on this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-13T17:10:11+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-13T17:10:13+01:00</updated-at>
      <user-id type="integer">10950</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Wallace</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-15T17:23:06+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.9
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9 activerecord eager_loading has_many_through</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-15T17:23:09+01:00</updated-at>
      <user-id type="integer">10950</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Wallace</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Ryan,

I've just implement a patch for this.

My work was based on your test, so I've added 2 patch files, 1 with your test (where you are the author), and the second one which is the fix I've implemented.

This patches applies cleanly on 2-3-stable

Any suggestions are welcome.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Ryan,&lt;/p&gt;
&lt;p&gt;I've just implement a patch for this.&lt;/p&gt;
&lt;p&gt;My work was based on your test, so I've added 2 patch files, 1
with your test (where you are the author), and the second one which
is the fix I've implemented.&lt;/p&gt;
&lt;p&gt;This patches applies cleanly on 2-3-stable&lt;/p&gt;
&lt;p&gt;Any suggestions are welcome.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-16T02:57:44+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9 activerecord eager_loading has_many_through</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-16T02:57:46+01:00</updated-at>
      <user-id type="integer">33838</user-id>
      <version type="integer">6</version>
      <user-name>Marcelo Giorgi</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-16T02:58:06+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.9 activerecord eager_loading has_many_through
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-16T02:58:07+01:00</updated-at>
      <user-id type="integer">33838</user-id>
      <version type="integer">7</version>
      <user-name>Marcelo Giorgi</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Hi Marcelo,

Thanks for drafting up a patch! I did a bit of experimenting and I've found one situation where invalid SQL will still be generated:

@@@ ruby
  class Author &lt; ActiveRecord::Base
    has_many :posts
    has_many :comments_desc, :through =&gt; :posts, :source =&gt; :comments, :order =&gt; 'body DESC'
  end

  Author.first(:include =&gt; :comments_desc)
@@@

Basically, if you don't specify the tables name in the order clause, the SQL will be invalid.

Do you think we should cover this case too or just make a note somewhere? My opinion is that it would be okay to leave it like this. It is a good practice to provide the table name in the order clause anyhow.

Ryan</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Marcelo,&lt;/p&gt;
&lt;p&gt;Thanks for drafting up a patch! I did a bit of experimenting and
I've found one situation where invalid SQL will still be
generated:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Author &amp;lt; ActiveRecord::Base
    has_many :posts
    has_many :comments_desc, :through =&amp;gt; :posts, :source =&amp;gt; :comments, :order =&amp;gt; 'body DESC'
  end

  Author.first(:include =&amp;gt; :comments_desc)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Basically, if you don't specify the tables name in the order
clause, the SQL will be invalid.&lt;/p&gt;
&lt;p&gt;Do you think we should cover this case too or just make a note
somewhere? My opinion is that it would be okay to leave it like
this. It is a good practice to provide the table name in the order
clause anyhow.&lt;/p&gt;
&lt;p&gt;Ryan&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-23T22:31:17+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-23T22:31:20+01:00</updated-at>
      <user-id type="integer">10950</user-id>
      <version type="integer">8</version>
      <user-name>Ryan Wallace</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-24T00:06:02+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 40272
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-24T00:06:06+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Hi Ryan,

I think the *bug* that you found is a different problem, in fact I think it is a more general issue of Rails. As you mentioned it is arguable that the developer should include the table name explicitly in the order clause... 

Also, if you look into the documentation (http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html), under the title 'Eager loading of associations', this behavior is already documented, where it says:

...You must disambiguate column references for this fallback to happen, for example :order =&gt; 'author.name DESC' will work but :order =&gt; &quot;name DESC&quot; will not...

Just to keep the commit aligned with the original intention of the problem at hand, perhaps, we can create a new ticket to discuss this other issue, do you agree ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Ryan,&lt;/p&gt;
&lt;p&gt;I think the &lt;em&gt;bug&lt;/em&gt; that you found is a different problem,
in fact I think it is a more general issue of Rails. As you
mentioned it is arguable that the developer should include the
table name explicitly in the order clause...&lt;/p&gt;
&lt;p&gt;Also, if you look into the documentation (&lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html)&quot;&gt;http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassM...&lt;/a&gt;,
under the title 'Eager loading of associations', this behavior is
already documented, where it says:&lt;/p&gt;
&lt;p&gt;...You must disambiguate column references for this fallback to
happen, for example :order =&amp;gt; 'author.name DESC' will work but
:order =&amp;gt; &quot;name DESC&quot; will not...&lt;/p&gt;
&lt;p&gt;Just to keep the commit aligned with the original intention of
the problem at hand, perhaps, we can create a new ticket to discuss
this other issue, do you agree ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-24T02:02:13+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 15316
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-24T02:02:18+01:00</updated-at>
      <user-id type="integer">33838</user-id>
      <version type="integer">10</version>
      <user-name>Marcelo Giorgi</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Oh perfect. Perhaps I should have read the documentation before asking for that case to be documented! +1 for this patch from me. Small, simple, and effective.

Thanks again Marcelo.

Ryan</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh perfect. Perhaps I should have read the documentation before
asking for that case to be documented! +1 for this patch from me.
Small, simple, and effective.&lt;/p&gt;
&lt;p&gt;Thanks again Marcelo.&lt;/p&gt;
&lt;p&gt;Ryan&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-24T15:13:45+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-24T15:13:50+01:00</updated-at>
      <user-id type="integer">10950</user-id>
      <version type="integer">11</version>
      <user-name>Ryan Wallace</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Tested with environment ree-1.8.7-2010.01.

The test passed successfully and the implementation makes sense to me. Also, I agree that the order clause must have the attributes fully qualified when there is room for ambiguity.

+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tested with environment ree-1.8.7-2010.01.&lt;/p&gt;
&lt;p&gt;The test passed successfully and the implementation makes sense
to me. Also, I agree that the order clause must have the attributes
fully qualified when there is room for ambiguity.&lt;/p&gt;
&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-27T23:54:38+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-27T23:54:40+01:00</updated-at>
      <user-id type="integer">117630</user-id>
      <version type="integer">12</version>
      <user-name>Patrick Campbell</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-28T17:44:21+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 40272
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-28T17:44:25+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">13</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>These patches are applied.  Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;These patches are applied. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-28T18:09:35+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patched</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-09-28T18:09:37+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">14</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>bulk tags cleanup</body>
      <body-html>&lt;div&gt;&lt;p&gt;bulk tags cleanup&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T07:22:02+01:00</created-at>
      <creator-id type="integer">10950</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.9 activerecord eager_loading has_many_through patched
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">5626</number>
      <permalink>activerecord-generates-invalid-sql-when-eager-loading-a-hmt-association-with-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.9 activerecord eager_loading has_many_through patch</tag>
      <title>ActiveRecord generates invalid SQL when eager loading a hmt association with an order</title>
      <updated-at type="datetime">2010-10-11T07:22:04+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">15</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Ryan Wallace</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5626</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>19b42971fe7c3d9ec6cc6b6951c434fd00782038</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-13T16:26:01+01:00</created-at>
      <filename>eager-load-hmt-with-order.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">670595</id>
      <size type="integer">1292</size>
      <uploader-id type="integer">10950</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/670595/eager-load-hmt-with-order.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>2f1e7739951f96b80df75335f7a07a375d7a5517</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-16T02:57:44+01:00</created-at>
      <filename>0001-add-test-to-demonstrate-failure-with-eager-loading-h.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">676003</id>
      <size type="integer">1296</size>
      <uploader-id type="integer">33838</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/676003/0001-add-test-to-demonstrate-failure-with-eager-loading-h.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>ba9a33c3fecde67278cc83ccd6de941fcdac4876</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-16T02:57:44+01:00</created-at>
      <filename>0002-preserving-include-options-for-hmt-association-with.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">676004</id>
      <size type="integer">1296</size>
      <uploader-id type="integer">33838</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/676004/0002-preserving-include-options-for-hmt-association-with.patch</url>
    </attachment>
  </attachments>
</ticket>
