<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-10T17:18:41+01:00</created-at>
  <creator-id type="integer">25872</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">594</number>
  <permalink>activesupport-police-singularize-returns-polouse</permalink>
  <priority type="integer">84</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;</title>
  <updated-at type="datetime">2009-06-29T22:01:02+01:00</updated-at>
  <user-id type="integer">57403</user-id>
  <version type="integer">6</version>
  <user-name>Brian Armstrong</user-name>
  <creator-name>hqnguyen83</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/594</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Linux, Ruby 1.8.5, activesupport 2.1.0

activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;

The bug is at line 33 in inflections.rb for active support:

  inflect.singular(/([m|l])ice$/i, '\1ouse')

should actually be 

  inflect.singular(/^([m|l])ice$/i, '\1ouse')

otherwise the pattern matches &quot;police&quot; and converts it to &quot;polouse&quot;.

I hope this is the right place to post this.</original-body>
  <latest-body>Linux, Ruby 1.8.5, activesupport 2.1.0

activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;

The bug is at line 33 in inflections.rb for active support:

  inflect.singular(/([m|l])ice$/i, '\1ouse')

should actually be 

  inflect.singular(/^([m|l])ice$/i, '\1ouse')

otherwise the pattern matches &quot;police&quot; and converts it to &quot;polouse&quot;.

I hope this is the right place to post this.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Linux, Ruby 1.8.5, activesupport 2.1.0
&lt;/p&gt;&lt;p&gt;
activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;
&lt;/p&gt;&lt;p&gt;
The bug is at line 33 in inflections.rb for active support:
&lt;/p&gt;&lt;p&gt;
inflect.singular(/([m|l])ice$/i, '\1ouse')
&lt;/p&gt;&lt;p&gt;
should actually be
&lt;/p&gt;&lt;p&gt;
inflect.singular(/^([m|l])ice$/i, '\1ouse')
&lt;/p&gt;&lt;p&gt;
otherwise the pattern matches &quot;police&quot; and converts it to &quot;polouse&quot;.
&lt;/p&gt;&lt;p&gt;
I hope this is the right place to post this.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Linux, Ruby 1.8.5, activesupport 2.1.0

activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;

The bug is at line 33 in inflections.rb for active support:

  inflect.singular(/([m|l])ice$/i, '\1ouse')

should actually be 

  inflect.singular(/^([m|l])ice$/i, '\1ouse')

otherwise the pattern matches &quot;police&quot; and converts it to &quot;polouse&quot;.

I hope this is the right place to post this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Linux, Ruby 1.8.5, activesupport 2.1.0
&lt;/p&gt;&lt;p&gt;
activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;
&lt;/p&gt;&lt;p&gt;
The bug is at line 33 in inflections.rb for active support:
&lt;/p&gt;&lt;p&gt;
inflect.singular(/([m|l])ice$/i, '\1ouse')
&lt;/p&gt;&lt;p&gt;
should actually be
&lt;/p&gt;&lt;p&gt;
inflect.singular(/^([m|l])ice$/i, '\1ouse')
&lt;/p&gt;&lt;p&gt;
otherwise the pattern matches &quot;police&quot; and converts it to &quot;polouse&quot;.
&lt;/p&gt;&lt;p&gt;
I hope this is the right place to post this.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-10T17:18:41+01:00</created-at>
      <creator-id type="integer">25872</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">594</number>
      <permalink>activesupport-police-singularize-returns-polouse</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;</title>
      <updated-at type="datetime">2008-07-10T17:18:41+01:00</updated-at>
      <user-id type="integer">25872</user-id>
      <version type="integer">1</version>
      <user-name>hqnguyen83</user-name>
      <creator-name>hqnguyen83</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Why are you calling singularize on a singular word?  The inflector doesn't even attempt to guess what form a given word is.  If you can come up with a brilliant fix for this that doesn't bloat the code or slow things down tremendously, be my guest :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Why are you calling singularize on a singular word?  The inflector doesn't even attempt to guess what form a given word is.  If you can come up with a brilliant fix for this that doesn't bloat the code or slow things down tremendously, be my guest :)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-10T17:28:33+01:00</created-at>
      <creator-id type="integer">25872</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">594</number>
      <permalink>activesupport-police-singularize-returns-polouse</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;</title>
      <updated-at type="datetime">2008-07-10T17:28:33+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">2</version>
      <user-name>Rick</user-name>
      <creator-name>hqnguyen83</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's not a singular word.

&quot;Hundreds of police deployed to curb J'lem anti-gay pride parade riots&quot;

This is the first result in google for &quot;hundreds of police&quot; (you can find more, I'm sure).  &quot;police&quot; is often used as a plural word, especially in news articles.

I'm also not quite sure how the suggested change would bloat the code.  inflections.rb is a file that contains special cases for the inflector, and all I'm saying is that the regular expression that was supposed to catch &quot;lice&quot; and turn it into &quot;louse&quot; overmatches and catches &quot;police&quot; and turns it into &quot;polouse&quot;.  The change is a single character.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
It's not a singular word.
&lt;/p&gt;&lt;p&gt;
&quot;Hundreds of police deployed to curb J'lem anti-gay pride parade riots&quot;
&lt;/p&gt;&lt;p&gt;
This is the first result in google for &quot;hundreds of police&quot; (you can find more, I'm sure).  &quot;police&quot; is often used as a plural word, especially in news articles.
&lt;/p&gt;&lt;p&gt;
I'm also not quite sure how the suggested change would bloat the code.  inflections.rb is a file that contains special cases for the inflector, and all I'm saying is that the regular expression that was supposed to catch &quot;lice&quot; and turn it into &quot;louse&quot; overmatches and catches &quot;police&quot; and turns it into &quot;polouse&quot;.  The change is a single character.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-10T17:43:36+01:00</created-at>
      <creator-id type="integer">25872</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">594</number>
      <permalink>activesupport-police-singularize-returns-polouse</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;</title>
      <updated-at type="datetime">2008-07-10T17:43:36+01:00</updated-at>
      <user-id type="integer">25872</user-id>
      <version type="integer">3</version>
      <user-name>hqnguyen83</user-name>
      <creator-name>hqnguyen83</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Mere curiosity: Why would you put something in an inflector method that shouldn't be pluralized/singularized anyway?
However, you can fix this by just making it uncountable like e.g. water.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Mere curiosity: Why would you put something in an inflector method that shouldn't be pluralized/singularized anyway?
&lt;/p&gt;&lt;p&gt;
However, you can fix this by just making it uncountable like e.g. water.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-10T18:05:08+01:00</created-at>
      <creator-id type="integer">25872</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">594</number>
      <permalink>activesupport-police-singularize-returns-polouse</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;</title>
      <updated-at type="datetime">2008-07-10T18:05:08+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">4</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>hqnguyen83</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm trying to extract entities from text, and when I run across a phrase like &quot;hundreds of *noun*&quot;, I assume *noun* is in plural form, and &quot;hundreds of police&quot;, without any trailing noun such as officer or man, is actually quite common, and in these cases, police really is plural.

But enough of that I guess, since there seems to be disagreement over whether or not police is plural, singular, or neither.  Consider the word blouse...activesupport will return &quot;blice&quot; for &quot;blouse&quot;.pluralize.  My point is, the lice/louse, mice/mouse pairing is the exception, rather than the rule, but that isn't how it is implemented.  Right now it overmatches and applies these changes to any string that ends with &quot;louse&quot; or &quot;lice&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm trying to extract entities from text, and when I run across a phrase like &quot;hundreds of *noun*&quot;, I assume &lt;strong&gt;noun&lt;/strong&gt; is in plural form, and &quot;hundreds of police&quot;, without any trailing noun such as officer or man, is actually quite common, and in these cases, police really is plural.
&lt;/p&gt;&lt;p&gt;
But enough of that I guess, since there seems to be disagreement over whether or not police is plural, singular, or neither.  Consider the word blouse...activesupport will return &quot;blice&quot; for &quot;blouse&quot;.pluralize.  My point is, the lice/louse, mice/mouse pairing is the exception, rather than the rule, but that isn't how it is implemented.  Right now it overmatches and applies these changes to any string that ends with &quot;louse&quot; or &quot;lice&quot;.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-10T19:59:42+01:00</created-at>
      <creator-id type="integer">25872</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">594</number>
      <permalink>activesupport-police-singularize-returns-polouse</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;</title>
      <updated-at type="datetime">2008-07-10T19:59:42+01:00</updated-at>
      <user-id type="integer">25872</user-id>
      <version type="integer">5</version>
      <user-name>hqnguyen83</user-name>
      <creator-name>hqnguyen83</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think hqnguyen83 has a valid point here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think hqnguyen83 has a valid point here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-29T22:01:00+01:00</created-at>
      <creator-id type="integer">25872</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">594</number>
      <permalink>activesupport-police-singularize-returns-polouse</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>activesupport: &quot;police&quot;.singularize returns &quot;polouse&quot;</title>
      <updated-at type="datetime">2009-06-29T22:01:02+01:00</updated-at>
      <user-id type="integer">57403</user-id>
      <version type="integer">6</version>
      <user-name>Brian Armstrong</user-name>
      <creator-name>hqnguyen83</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
