<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-06T01:11:01+00:00</created-at>
  <creator-id type="integer">36617</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1335</number>
  <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
  <priority type="integer">16</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.2 activerecord connection pool</tag>
  <title>Connection pool creating a new connection for every http request</title>
  <updated-at type="datetime">2008-11-09T22:53:09+00:00</updated-at>
  <user-id type="integer">36617</user-id>
  <version type="integer">7</version>
  <user-name>thrillhouse</user-name>
  <creator-name>thrillhouse</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
  <priority-name nil="true"></priority-name>
  <original-body>Every http request appears to be establishing a new database connection rather than checking connections in and out of the pool.

Each time the application reaches the checkout method in ActiveRecord::ConnectionAdapters::ConnectionPool, both @checked_out.size and @connections.size are always zero, despite there being numerous open connections.  This results in the checkout of a new connection for every http request.  Although the newly checked out connection is being correctly appended to the list of open connections via the checkout_new_connection method, the @connections list appears to have been emptied by the time a new request is made.

I have been able to reproduce the problem with a fresh rails app in the following environments

 * 2 Windows machines running edge rails with ruby 1.8.6 patch level 111
 * 1 Windows machine running edge rails with ruby 1.8.5 (2006-08-25) 
 * 1 Mac OSX machine running edge rails with ruby 1.8.6 patch level 111

Against these environments I have tested with both Oracle and MySQL.  The issue is not quite as evident using MySQL because a show
processlist reveals that MySQL appears to 'clean up' active connections that are not being used.  Thus, with one user hitting the app, the number of connections to MySQL doesn't get beyond roughly 10 before they are 'cleaned up'.  Oracle is a different story.  The number of connections to the database quickly spirals out of control (as seen via SELECT * FROM v$session;).  In fact if not for Oracle we would not have noticed this happening.

Strangely enough, a Redhat machine running edge rails with ruby 1.8.5 (2006-08-25) [x86_64-linux] against Oracle does not reproduce the same error.</original-body>
  <latest-body>Every http request appears to be establishing a new database connection rather than checking connections in and out of the pool.

Each time the application reaches the checkout method in ActiveRecord::ConnectionAdapters::ConnectionPool, both @checked_out.size and @connections.size are always zero, despite there being numerous open connections.  This results in the checkout of a new connection for every http request.  Although the newly checked out connection is being correctly appended to the list of open connections via the checkout_new_connection method, the @connections list appears to have been emptied by the time a new request is made.

I have been able to reproduce the problem with a fresh rails app in the following environments

 * 2 Windows machines running edge rails with ruby 1.8.6 patch level 111
 * 1 Windows machine running edge rails with ruby 1.8.5 (2006-08-25) 
 * 1 Mac OSX machine running edge rails with ruby 1.8.6 patch level 111

Against these environments I have tested with both Oracle and MySQL.  The issue is not quite as evident using MySQL because a show
processlist reveals that MySQL appears to 'clean up' active connections that are not being used.  Thus, with one user hitting the app, the number of connections to MySQL doesn't get beyond roughly 10 before they are 'cleaned up'.  Oracle is a different story.  The number of connections to the database quickly spirals out of control (as seen via SELECT * FROM v$session;).  In fact if not for Oracle we would not have noticed this happening.

Strangely enough, a Redhat machine running edge rails with ruby 1.8.5 (2006-08-25) [x86_64-linux] against Oracle does not reproduce the same error.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Every http request appears to be establishing a new database
connection rather than checking connections in and out of the
pool.&lt;/p&gt;
&lt;p&gt;Each time the application reaches the checkout method in
ActiveRecord::ConnectionAdapters::ConnectionPool, both
@checked_out.size and @connections.size are always zero, despite
there being numerous open connections. This results in the checkout
of a new connection for every http request. Although the newly
checked out connection is being correctly appended to the list of
open connections via the checkout_new_connection method, the
@connections list appears to have been emptied by the time a new
request is made.&lt;/p&gt;
&lt;p&gt;I have been able to reproduce the problem with a fresh rails app
in the following environments&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 Windows machines running edge rails with ruby 1.8.6 patch
level 111&lt;/li&gt;
&lt;li&gt;1 Windows machine running edge rails with ruby 1.8.5
(2006-08-25)&lt;/li&gt;
&lt;li&gt;1 Mac OSX machine running edge rails with ruby 1.8.6 patch
level 111&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Against these environments I have tested with both Oracle and
MySQL. The issue is not quite as evident using MySQL because a show
processlist reveals that MySQL appears to 'clean up' active
connections that are not being used. Thus, with one user hitting
the app, the number of connections to MySQL doesn't get beyond
roughly 10 before they are 'cleaned up'. Oracle is a different
story. The number of connections to the database quickly spirals
out of control (as seen via SELECT * FROM v$session;). In fact if
not for Oracle we would not have noticed this happening.&lt;/p&gt;
&lt;p&gt;Strangely enough, a Redhat machine running edge rails with ruby
1.8.5 (2006-08-25) [x86_64-linux] against Oracle does not reproduce
the same error.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Every http request appears to be establishing a new database connection rather than checking connections in and out of the pool.

Each time the application reaches the checkout method in ActiveRecord::ConnectionAdapters::ConnectionPool, both @checked_out.size and @connections.size are always zero, despite there being numerous open connections.  This results in the checkout of a new connection for every http request.  Although the newly checked out connection is being correctly appended to the list of open connections via the checkout_new_connection method, the @connections list appears to have been emptied by the time a new request is made.

I have been able to reproduce the problem with a fresh rails app in the following environments

 * 2 Windows machines running edge rails with ruby 1.8.6 patch level 111
 * 1 Windows machine running edge rails with ruby 1.8.5 (2006-08-25) 
 * 1 Mac OSX machine running edge rails with ruby 1.8.6 patch level 111

Against these environments I have tested with both Oracle and MySQL.  The issue is not quite as evident using MySQL because a show
processlist reveals that MySQL appears to 'clean up' active connections that are not being used.  Thus, with one user hitting the app, the number of connections to MySQL doesn't get beyond roughly 10 before they are 'cleaned up'.  Oracle is a different story.  The number of connections to the database quickly spirals out of control (as seen via SELECT * FROM v$session;).  In fact if not for Oracle we would not have noticed this happening.

Strangely enough, a Redhat machine running edge rails with ruby 1.8.5 (2006-08-25) [x86_64-linux] against Oracle does not reproduce the same error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Every http request appears to be establishing a new database
connection rather than checking connections in and out of the
pool.&lt;/p&gt;
&lt;p&gt;Each time the application reaches the checkout method in
ActiveRecord::ConnectionAdapters::ConnectionPool, both
@checked_out.size and @connections.size are always zero, despite
there being numerous open connections. This results in the checkout
of a new connection for every http request. Although the newly
checked out connection is being correctly appended to the list of
open connections via the checkout_new_connection method, the
@connections list appears to have been emptied by the time a new
request is made.&lt;/p&gt;
&lt;p&gt;I have been able to reproduce the problem with a fresh rails app
in the following environments&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 Windows machines running edge rails with ruby 1.8.6 patch
level 111&lt;/li&gt;
&lt;li&gt;1 Windows machine running edge rails with ruby 1.8.5
(2006-08-25)&lt;/li&gt;
&lt;li&gt;1 Mac OSX machine running edge rails with ruby 1.8.6 patch
level 111&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Against these environments I have tested with both Oracle and
MySQL. The issue is not quite as evident using MySQL because a show
processlist reveals that MySQL appears to 'clean up' active
connections that are not being used. Thus, with one user hitting
the app, the number of connections to MySQL doesn't get beyond
roughly 10 before they are 'cleaned up'. Oracle is a different
story. The number of connections to the database quickly spirals
out of control (as seen via SELECT * FROM v$session;). In fact if
not for Oracle we would not have noticed this happening.&lt;/p&gt;
&lt;p&gt;Strangely enough, a Redhat machine running edge rails with ruby
1.8.5 (2006-08-25) [x86_64-linux] against Oracle does not reproduce
the same error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T01:11:01+00:00</created-at>
      <creator-id type="integer">36617</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1335</number>
      <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 activerecord connection pool</tag>
      <title>Connection pool creating a new connection for every http request</title>
      <updated-at type="datetime">2008-11-06T01:11:04+00:00</updated-at>
      <user-id type="integer">36617</user-id>
      <version type="integer">1</version>
      <user-name>thrillhouse</user-name>
      <creator-name>thrillhouse</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm that this is the case under OSX with MySQL under ruby 1.8.6.  Too me it looks like the variable that contains a list of the connections isn't maintaining state between requests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm that this is the case under OSX with MySQL under
ruby 1.8.6. Too me it looks like the variable that contains a list
of the connections isn't maintaining state between requests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T22:39:58+00:00</created-at>
      <creator-id type="integer">36617</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1335</number>
      <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 activerecord connection pool</tag>
      <title>Connection pool creating a new connection for every http request</title>
      <updated-at type="datetime">2008-11-06T22:40:03+00:00</updated-at>
      <user-id type="integer">21356</user-id>
      <version type="integer">2</version>
      <user-name>Zyclops</user-name>
      <creator-name>thrillhouse</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T22:56:57+00:00</created-at>
      <creator-id type="integer">36617</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1335</number>
      <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 activerecord connection pool</tag>
      <title>Connection pool creating a new connection for every http request</title>
      <updated-at type="datetime">2008-11-06T22:56:58+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>thrillhouse</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This only happens in development mode (thanks lifo) and is to do with class reloading.

In production it works fine.

In development mode it is an issue since under oracle it causes hundreds of connections to rack up and eventually locks up the database (MySQL is nice since it does some housekeeping and cleans up the connections).</body>
      <body-html>&lt;div&gt;&lt;p&gt;This only happens in development mode (thanks lifo) and is to do
with class reloading.&lt;/p&gt;
&lt;p&gt;In production it works fine.&lt;/p&gt;
&lt;p&gt;In development mode it is an issue since under oracle it causes
hundreds of connections to rack up and eventually locks up the
database (MySQL is nice since it does some housekeeping and cleans
up the connections).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T23:04:52+00:00</created-at>
      <creator-id type="integer">36617</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1335</number>
      <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 activerecord connection pool</tag>
      <title>Connection pool creating a new connection for every http request</title>
      <updated-at type="datetime">2008-11-06T23:04:53+00:00</updated-at>
      <user-id type="integer">21356</user-id>
      <version type="integer">4</version>
      <user-name>Zyclops</user-name>
      <creator-name>thrillhouse</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T23:34:37+00:00</created-at>
      <creator-id type="integer">36617</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1335</number>
      <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 activerecord connection pool</tag>
      <title>Connection pool creating a new connection for every http request</title>
      <updated-at type="datetime">2008-11-06T23:34:40+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>thrillhouse</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [d20955f889223b6035dbc7d61acba9091bf7b7ed]) Don't leave open dangling connections in development mode. [#1335 state:resolved]
http://github.com/rails/rails/commit/d20955f889223b6035dbc7d61acba9091bf7b7ed</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [d20955f889223b6035dbc7d61acba9091bf7b7ed]) Don't leave
open dangling connections in development mode. [&lt;a href=&quot;/projects/8994/tickets/1335&quot; title=&quot;Ticket #1335&quot;&gt;#1335&lt;/a&gt;
state:resolved] &lt;a href=&quot;http://github.com/rails/rails/commit/d20955f889223b6035dbc7d61acba9091bf7b7ed&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-07T23:35:29+00:00</created-at>
      <creator-id type="integer">36617</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1335</number>
      <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 activerecord connection pool</tag>
      <title>Connection pool creating a new connection for every http request</title>
      <updated-at type="datetime">2008-11-07T23:35:30+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>thrillhouse</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>That's fixed it.  Well done and thanks for your work guys.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's fixed it. Well done and thanks for your work guys.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-09T22:53:04+00:00</created-at>
      <creator-id type="integer">36617</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1335</number>
      <permalink>connection-pool-creating-a-new-connection-for-every-http-request</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 activerecord connection pool</tag>
      <title>Connection pool creating a new connection for every http request</title>
      <updated-at type="datetime">2008-11-09T22:53:09+00:00</updated-at>
      <user-id type="integer">36617</user-id>
      <version type="integer">7</version>
      <user-name>thrillhouse</user-name>
      <creator-name>thrillhouse</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1335</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
</ticket>
