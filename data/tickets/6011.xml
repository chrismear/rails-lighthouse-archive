<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40272</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-11-19T03:30:24+00:00</created-at>
  <creator-id type="integer">81234</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">6011</number>
  <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>activerecord default_scope scope tests</tag>
  <title>except(:order).order(...) is not working in scopes</title>
  <updated-at type="datetime">2011-03-24T18:44:21+00:00</updated-at>
  <user-id type="integer">65953</user-id>
  <version type="integer">10</version>
  <user-name>2kan</user-name>
  <creator-name>Vitalii Khustochka</creator-name>
  <assigned-user-name>Santiago Pastorino</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Method reorder that existed before was removed in master and deprecated in 3.0.3 (https://github.com/rails/rails/commit/e0b76d6151821527f16b3f163abde3ebea1b2a50). Instead must be used except(:order).order(...)

While this works in regular relations it is not working in scopes (does not override the default scope).

E.g. if class *DeveloperOrderedBySalary* has *default_scope :order =&gt; 'salary DESC'* and named scope

@@@ ruby
scope :reordered_by_name, except(:order).order('name DESC')
@@@

I expect *DeveloperOrderedBySalary.reordered_by_name.all* to return developers reordered by name while it does not. The test I once created for this was removed. Instead there is a test named *test_named_scope_appends_default* but I think this name is incorrect as soon as it really tests that ordering defined in named scope is appended to default scope's ordering (i.e. :order =&gt; 'salary DESC, name DESC' is expected).

Unfortunately I have no idea how to fix this but I'm attaching a patch with test which I consider appropriate (now failing).</original-body>
  <latest-body>Method reorder that existed before was removed in master and deprecated in 3.0.3 (https://github.com/rails/rails/commit/e0b76d6151821527f16b3f163abde3ebea1b2a50). Instead must be used except(:order).order(...)

While this works in regular relations it is not working in scopes (does not override the default scope).

E.g. if class *DeveloperOrderedBySalary* has *default_scope :order =&gt; 'salary DESC'* and named scope

@@@ ruby
scope :reordered_by_name, except(:order).order('name DESC')
@@@

I expect *DeveloperOrderedBySalary.reordered_by_name.all* to return developers reordered by name while it does not. The test I once created for this was removed. Instead there is a test named *test_named_scope_appends_default* but I think this name is incorrect as soon as it really tests that ordering defined in named scope is appended to default scope's ordering (i.e. :order =&gt; 'salary DESC, name DESC' is expected).

Unfortunately I have no idea how to fix this but I'm attaching a patch with test which I consider appropriate (now failing).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Method reorder that existed before was removed in master and
deprecated in 3.0.3 (&lt;a href=
&quot;https://github.com/rails/rails/commit/e0b76d6151821527f16b3f163abde3ebea1b2a50)&quot;&gt;https://github.com/rails/rails/commit/e0b76d6151821527f16b3f163abde...&lt;/a&gt;.
Instead must be used except(:order).order(...)&lt;/p&gt;
&lt;p&gt;While this works in regular relations it is not working in
scopes (does not override the default scope).&lt;/p&gt;
&lt;p&gt;E.g. if class &lt;em&gt;DeveloperOrderedBySalary&lt;/em&gt; has
&lt;em&gt;default_scope :order =&amp;gt; 'salary DESC'&lt;/em&gt; and named
scope&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;scope :reordered_by_name, except(:order).order('name DESC')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I expect &lt;em&gt;DeveloperOrderedBySalary.reordered_by_name.all&lt;/em&gt;
to return developers reordered by name while it does not. The test
I once created for this was removed. Instead there is a test named
&lt;em&gt;test_named_scope_appends_default&lt;/em&gt; but I think this name is
incorrect as soon as it really tests that ordering defined in named
scope is appended to default scope's ordering (i.e. :order =&amp;gt;
'salary DESC, name DESC' is expected).&lt;/p&gt;
&lt;p&gt;Unfortunately I have no idea how to fix this but I'm attaching a
patch with test which I consider appropriate (now failing).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Method reorder that existed before was removed in master and deprecated in 3.0.3 (https://github.com/rails/rails/commit/e0b76d6151821527f16b3f163abde3ebea1b2a50). Instead must be used except(:order).order(...)

While this works in regular relations it is not working in scopes (does not override the default scope).

E.g. if class *DeveloperOrderedBySalary* has *default_scope :order =&gt; 'salary DESC'* and named scope

@@@ ruby
scope :reordered_by_name, except(:order).order('name DESC')
@@@

I expect *DeveloperOrderedBySalary.reordered_by_name.all* to return developers reordered by name while it does not. The test I once created for this was removed. Instead there is a test named *test_named_scope_appends_default* but I think this name is incorrect as soon as it really tests that ordering defined in named scope is appended to default scope's ordering (i.e. :order =&gt; 'salary DESC, name DESC' is expected).

Unfortunately I have no idea how to fix this but I'm attaching a patch with test which I consider appropriate (now failing).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Method reorder that existed before was removed in master and
deprecated in 3.0.3 (&lt;a href=
&quot;https://github.com/rails/rails/commit/e0b76d6151821527f16b3f163abde3ebea1b2a50)&quot;&gt;https://github.com/rails/rails/commit/e0b76d6151821527f16b3f163abde...&lt;/a&gt;.
Instead must be used except(:order).order(...)&lt;/p&gt;
&lt;p&gt;While this works in regular relations it is not working in
scopes (does not override the default scope).&lt;/p&gt;
&lt;p&gt;E.g. if class &lt;em&gt;DeveloperOrderedBySalary&lt;/em&gt; has
&lt;em&gt;default_scope :order =&amp;gt; 'salary DESC'&lt;/em&gt; and named
scope&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;scope :reordered_by_name, except(:order).order('name DESC')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I expect &lt;em&gt;DeveloperOrderedBySalary.reordered_by_name.all&lt;/em&gt;
to return developers reordered by name while it does not. The test
I once created for this was removed. Instead there is a test named
&lt;em&gt;test_named_scope_appends_default&lt;/em&gt; but I think this name is
incorrect as soon as it really tests that ordering defined in named
scope is appended to default scope's ordering (i.e. :order =&amp;gt;
'salary DESC, name DESC' is expected).&lt;/p&gt;
&lt;p&gt;Unfortunately I have no idea how to fix this but I'm attaching a
patch with test which I consider appropriate (now failing).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-19T03:30:24+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2010-11-19T03:30:26+00:00</updated-at>
      <user-id type="integer">81234</user-id>
      <version type="integer">1</version>
      <user-name>Vitalii Khustochka</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Typo in the description: &quot;Instead there is a test named *test_named_scope_overwrites_default* but I think this name is incorrect ...&quot;

*test_named_scope_appends_default* is the new name I gave it in the patch</body>
      <body-html>&lt;div&gt;&lt;p&gt;Typo in the description: &quot;Instead there is a test named
&lt;em&gt;test_named_scope_overwrites_default&lt;/em&gt; but I think this name
is incorrect ...&quot;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;test_named_scope_appends_default&lt;/em&gt; is the new name I gave
it in the patch&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-19T03:33:59+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2010-11-19T03:34:01+00:00</updated-at>
      <user-id type="integer">81234</user-id>
      <version type="integer">2</version>
      <user-name>Vitalii Khustochka</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Looks like this happens because *reorder_flag* was removed. Named scope defined with except(:order).order(xxx) now has no difference with the one defined with order(xxx). So when merging order_value they are merged like they were defined by regular *order* i.e. are being appended to default_scope's order instead of overwriting them.

When a chain of methods is run on the relation except works correctly because it effectively removes the current order_value of this very relation, but in the scope it does not.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks like this happens because &lt;em&gt;reorder_flag&lt;/em&gt; was
removed. Named scope defined with except(:order).order(xxx) now has
no difference with the one defined with order(xxx). So when merging
order_value they are merged like they were defined by regular
&lt;em&gt;order&lt;/em&gt; i.e. are being appended to default_scope's order
instead of overwriting them.&lt;/p&gt;
&lt;p&gt;When a chain of methods is run on the relation except works
correctly because it effectively removes the current order_value of
this very relation, but in the scope it does not.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-19T05:11:14+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2010-11-19T05:11:18+00:00</updated-at>
      <user-id type="integer">81234</user-id>
      <version type="integer">3</version>
      <user-name>Vitalii Khustochka</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-19T16:10:23+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2010-11-19T16:10:25+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It's not because _reorder_flag_ was removed but yes it is because of how _except_ and _merge_ are working now. I gonna attach a patch (against edge) tomorrow, I want to find the best way to fix it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's not because &lt;em&gt;reorder_flag&lt;/em&gt; was removed but yes it is
because of how &lt;em&gt;except&lt;/em&gt; and &lt;em&gt;merge&lt;/em&gt; are working now.
I gonna attach a patch (against edge) tomorrow, I want to find the
best way to fix it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-23T01:43:26+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2010-12-23T01:43:36+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">5</version>
      <user-name>2kan</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T00:00:12+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2011-03-24T00:01:07+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">6</version>
      <user-name>rails</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-24T00:00:13+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2011-03-24T00:01:28+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">7</version>
      <user-name>rails</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[state:open]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T11:16:46+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2011-03-24T11:17:06+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">8</version>
      <user-name>2kan</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>2kan have you tried it with the latest master code?. Is still an issue?</body>
      <body-html>&lt;div&gt;&lt;p&gt;2kan have you tried it with the latest master code?. Is still an
issue?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T15:03:35+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2011-03-24T15:03:59+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Santiago, yes it is. (Just checked). Somehow (not sure) it is because of: https://rails.lighthouseapp.com/projects/8994/tickets/6290-patch-except-doesnt-work-in-different-scopes#ticket-6290-12

And because of how the default_scope applies (I think I've figured out why I doesn't work).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Santiago, yes it is. (Just checked). Somehow (not sure) it is
because of: &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/6290-patch-except-doesnt-work-in-different-scopes#ticket-6290-12&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/6290-patch-ex...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And because of how the default_scope applies (I think I've
figured out why I doesn't work).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T18:43:48+00:00</created-at>
      <creator-id type="integer">81234</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6011</number>
      <permalink>exceptorderorder-is-not-working-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope scope tests</tag>
      <title>except(:order).order(...) is not working in scopes</title>
      <updated-at type="datetime">2011-03-24T18:44:21+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">10</version>
      <user-name>2kan</user-name>
      <creator-name>Vitalii Khustochka</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6011</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f38ebac6197d228a1038c5259ffcfb725ef4186d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-19T03:30:24+00:00</created-at>
      <filename>test-reorder-scope.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">779171</id>
      <size type="integer">2227</size>
      <uploader-id type="integer">81234</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/779171/test-reorder-scope.diff</url>
    </attachment>
  </attachments>
</ticket>
