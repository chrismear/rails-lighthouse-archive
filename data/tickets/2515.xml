<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14890</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-16T19:29:27+01:00</created-at>
  <creator-id type="integer">31932</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2515</number>
  <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
  <priority type="integer">1660</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
  <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
  <updated-at type="datetime">2009-04-27T13:32:25+01:00</updated-at>
  <user-id type="integer">18670</user-id>
  <version type="integer">17</version>
  <user-name>Michael Schuerig</user-name>
  <creator-name>Levin Alexander</creator-name>
  <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When using postgres, `db:schema:dump` dumps indexes that span multiple columns in an undefined order.

@@@
postgres=# CREATE TABLE widgets ( name varchar, amount integer, size integer, weight integer);
CREATE TABLE
postgres=# CREATE INDEX widget_idx ON widgets(size, amount, weight, name);
CREATE INDEX
postgres=# SELECT * FROM pg_indexes WHERE tablename = 'widgets';
 schemaname | tablename | indexname  | tablespace |                                  indexdef
------------+-----------+------------+------------+-----------------------------------------------------------------------------
 public     | widgets   | widget_idx |            | CREATE INDEX widget_idx ON widgets USING btree (size, amount, weight, name)
(1 row)
@@@
 
@@@
$ rake db:schema:dump
$ cat db/schema.rb | grep widgets
  create_table &quot;widgets&quot;, :id =&gt; false, :force =&gt; true do |t|
  add_index &quot;widgets&quot;, [&quot;amount&quot;, &quot;name&quot;, &quot;size&quot;, &quot;weight&quot;], :name =&gt; &quot;widget_idx&quot;
@@@

The last line is wrong, the order of the columns in the index is not preserved.</original-body>
  <latest-body>When using postgres, `db:schema:dump` dumps indexes that span multiple columns in an undefined order.

@@@
postgres=# CREATE TABLE widgets ( name varchar, amount integer, size integer, weight integer);
CREATE TABLE
postgres=# CREATE INDEX widget_idx ON widgets(size, amount, weight, name);
CREATE INDEX
postgres=# SELECT * FROM pg_indexes WHERE tablename = 'widgets';
 schemaname | tablename | indexname  | tablespace |                                  indexdef
------------+-----------+------------+------------+-----------------------------------------------------------------------------
 public     | widgets   | widget_idx |            | CREATE INDEX widget_idx ON widgets USING btree (size, amount, weight, name)
(1 row)
@@@
 
@@@
$ rake db:schema:dump
$ cat db/schema.rb | grep widgets
  create_table &quot;widgets&quot;, :id =&gt; false, :force =&gt; true do |t|
  add_index &quot;widgets&quot;, [&quot;amount&quot;, &quot;name&quot;, &quot;size&quot;, &quot;weight&quot;], :name =&gt; &quot;widget_idx&quot;
@@@

The last line is wrong, the order of the columns in the index is not preserved.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When using postgres, &lt;code&gt;db:schema:dump&lt;/code&gt; dumps indexes
that span multiple columns in an undefined order.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
postgres=# CREATE TABLE widgets ( name varchar, amount integer, size integer, weight integer);
CREATE TABLE
postgres=# CREATE INDEX widget_idx ON widgets(size, amount, weight, name);
CREATE INDEX
postgres=# SELECT * FROM pg_indexes WHERE tablename = 'widgets';
 schemaname | tablename | indexname  | tablespace |                                  indexdef
------------+-----------+------------+------------+-----------------------------------------------------------------------------
 public     | widgets   | widget_idx |            | CREATE INDEX widget_idx ON widgets USING btree (size, amount, weight, name)
(1 row)
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code&gt;
$ rake db:schema:dump
$ cat db/schema.rb | grep widgets
  create_table &amp;quot;widgets&amp;quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
  add_index &amp;quot;widgets&amp;quot;, [&amp;quot;amount&amp;quot;, &amp;quot;name&amp;quot;, &amp;quot;size&amp;quot;, &amp;quot;weight&amp;quot;], :name =&amp;gt; &amp;quot;widget_idx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The last line is wrong, the order of the columns in the index is
not preserved.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using postgres, `db:schema:dump` dumps indexes that span multiple columns in an undefined order.

@@@
postgres=# CREATE TABLE widgets ( name varchar, amount integer, size integer, weight integer);
CREATE TABLE
postgres=# CREATE INDEX widget_idx ON widgets(size, amount, weight, name);
CREATE INDEX
postgres=# SELECT * FROM pg_indexes WHERE tablename = 'widgets';
 schemaname | tablename | indexname  | tablespace |                                  indexdef
------------+-----------+------------+------------+-----------------------------------------------------------------------------
 public     | widgets   | widget_idx |            | CREATE INDEX widget_idx ON widgets USING btree (size, amount, weight, name)
(1 row)
@@@
 
@@@
$ rake db:schema:dump
$ cat db/schema.rb | grep widgets
  create_table &quot;widgets&quot;, :id =&gt; false, :force =&gt; true do |t|
  add_index &quot;widgets&quot;, [&quot;amount&quot;, &quot;name&quot;, &quot;size&quot;, &quot;weight&quot;], :name =&gt; &quot;widget_idx&quot;
@@@

The last line is wrong, the order of the columns in the index is not preserved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When using postgres, &lt;code&gt;db:schema:dump&lt;/code&gt; dumps indexes
that span multiple columns in an undefined order.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
postgres=# CREATE TABLE widgets ( name varchar, amount integer, size integer, weight integer);
CREATE TABLE
postgres=# CREATE INDEX widget_idx ON widgets(size, amount, weight, name);
CREATE INDEX
postgres=# SELECT * FROM pg_indexes WHERE tablename = 'widgets';
 schemaname | tablename | indexname  | tablespace |                                  indexdef
------------+-----------+------------+------------+-----------------------------------------------------------------------------
 public     | widgets   | widget_idx |            | CREATE INDEX widget_idx ON widgets USING btree (size, amount, weight, name)
(1 row)
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code&gt;
$ rake db:schema:dump
$ cat db/schema.rb | grep widgets
  create_table &amp;quot;widgets&amp;quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
  add_index &amp;quot;widgets&amp;quot;, [&amp;quot;amount&amp;quot;, &amp;quot;name&amp;quot;, &amp;quot;size&amp;quot;, &amp;quot;weight&amp;quot;], :name =&amp;gt; &amp;quot;widget_idx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The last line is wrong, the order of the columns in the index is
not preserved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-16T19:29:27+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record postgres</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-16T19:29:30+01:00</updated-at>
      <user-id type="integer">31932</user-id>
      <version type="integer">1</version>
      <user-name>Levin Alexander</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've added failing test, which really fails only for Postgresql and fixed Postgresql adapter.
Now everything is OK.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've added failing test, which really fails only for Postgresql
and fixed Postgresql adapter. Now everything is OK.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-20T16:49:42+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record postgres
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-20T16:49:46+01:00</updated-at>
      <user-id type="integer">9721</user-id>
      <version type="integer">2</version>
      <user-name>Max Lapshin</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Tarmo, this bug seems to be severe, because it can really break indexes on database.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tarmo, this bug seems to be severe, because it can really break
indexes on database.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-20T16:55:23+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-20T16:55:29+01:00</updated-at>
      <user-id type="integer">9721</user-id>
      <version type="integer">3</version>
      <user-name>Max Lapshin</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The patch works for me.  Thank You.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch works for me. Thank You.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-20T18:00:45+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-20T18:00:49+01:00</updated-at>
      <user-id type="integer">31932</user-id>
      <version type="integer">4</version>
      <user-name>Levin Alexander</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Confirming:
@@@
$ ./script/dbconsole -p
# \d auth_tokens
                                     Table &quot;public.auth_tokens&quot;
   Column   |            Type             |                        Modifiers                         
------------+-----------------------------+----------------------------------------------------------
 id         | integer                     | not null default nextval('auth_tokens_id_seq'::regclass)
 user_id    | integer                     | not null
 token      | character varying(255)      | not null
 created_at | timestamp without time zone | not null
Indexes:
    &quot;auth_tokens_pkey&quot; PRIMARY KEY, btree (id)
    &quot;index_auth_tokens_on_user_id_and_token&quot; UNIQUE, btree (user_id, token)
@@@

@@@
$ rake db:schema:dump
(in /home/antage/workspace/avaxhome)
$ cat db/schema.rb | grep auth_tokens
  create_table &quot;auth_tokens&quot;, :force =&gt; true do |t|
  add_index &quot;auth_tokens&quot;, [&quot;token&quot;, &quot;user_id&quot;], :name =&gt; &quot;index_auth_tokens_on_user_id_and_token&quot;, :unique =&gt; true
@@@

Rails 2.3.2.1

PostgreSQL 8.3.7</body>
      <body-html>&lt;div&gt;&lt;p&gt;Confirming:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
$ ./script/dbconsole -p
# \d auth_tokens
                                     Table &amp;quot;public.auth_tokens&amp;quot;
   Column   |            Type             |                        Modifiers                         
------------+-----------------------------+----------------------------------------------------------
 id         | integer                     | not null default nextval('auth_tokens_id_seq'::regclass)
 user_id    | integer                     | not null
 token      | character varying(255)      | not null
 created_at | timestamp without time zone | not null
Indexes:
    &amp;quot;auth_tokens_pkey&amp;quot; PRIMARY KEY, btree (id)
    &amp;quot;index_auth_tokens_on_user_id_and_token&amp;quot; UNIQUE, btree (user_id, token)
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code&gt;
$ rake db:schema:dump
(in /home/antage/workspace/avaxhome)
$ cat db/schema.rb | grep auth_tokens
  create_table &amp;quot;auth_tokens&amp;quot;, :force =&amp;gt; true do |t|
  add_index &amp;quot;auth_tokens&amp;quot;, [&amp;quot;token&amp;quot;, &amp;quot;user_id&amp;quot;], :name =&amp;gt; &amp;quot;index_auth_tokens_on_user_id_and_token&amp;quot;, :unique =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rails 2.3.2.1&lt;/p&gt;
&lt;p&gt;PostgreSQL 8.3.7&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-20T18:07:01+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-20T18:07:06+01:00</updated-at>
      <user-id type="integer">15518</user-id>
      <version type="integer">5</version>
      <user-name>Anton Ageev</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [f3ac4f387dd748db349ec217030d2b13260516f1]) Fixed dumping from postgresql columns in index in wrong order. [#2515 state:resolved]

Signed-off-by: Tarmo T&#228;nav &lt;tarmo@itech.ee&gt;
http://github.com/rails/rails/commit/f3ac4f387dd748db349ec217030d2b13260516f1</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [f3ac4f387dd748db349ec217030d2b13260516f1]) Fixed dumping
from postgresql columns in index in wrong order. [&lt;a href=&quot;/projects/8994/tickets/2515&quot; title=&quot;Ticket #2515&quot;&gt;#2515&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Tarmo T&amp;auml;nav &lt;a href=&quot;mailto:tarmo@itech.ee&quot;&gt;tarmo@itech.ee&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/f3ac4f387dd748db349ec217030d2b13260516f1&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T11:51:57+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-21T11:51:58+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [5a4603fafbf4d959ebc8f9435457eaf6fa4004e9]) Fixed dumping from postgresql columns in index in wrong order. [#2515 state:resolved]

Signed-off-by: Tarmo T&#228;nav &lt;tarmo@itech.ee&gt;
http://github.com/rails/rails/commit/5a4603fafbf4d959ebc8f9435457eaf6fa4004e9</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [5a4603fafbf4d959ebc8f9435457eaf6fa4004e9]) Fixed dumping
from postgresql columns in index in wrong order. [&lt;a href=&quot;/projects/8994/tickets/2515&quot; title=&quot;Ticket #2515&quot;&gt;#2515&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Tarmo T&amp;auml;nav &lt;a href=&quot;mailto:tarmo@itech.ee&quot;&gt;tarmo@itech.ee&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/5a4603fafbf4d959ebc8f9435457eaf6fa4004e9&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T11:52:03+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-21T11:52:04+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It may be safer to collect up the attnum and sort by indkey.  While IN appears to a left-to-right comparison, short-circuiting on true, I'm not sure that this isn't an implementation artifact.  So, the fix as written may itself introduce a subtle ordering flaw.  Having said that, I don't think I've ever seen an RDBMS implement it any other way even if it technically could.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It may be safer to collect up the attnum and sort by indkey.
While IN appears to a left-to-right comparison, short-circuiting on
true, I'm not sure that this isn't an implementation artifact. So,
the fix as written may itself introduce a subtle ordering flaw.
Having said that, I don't think I've ever seen an RDBMS implement
it any other way even if it technically could.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-24T22:40:25+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-24T22:40:29+01:00</updated-at>
      <user-id type="integer">22233</user-id>
      <version type="integer">8</version>
      <user-name>Kevin Menard</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Please consider using the patch I attached to #2400. I does sort by attribute order.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please consider using the patch I attached to &lt;a href=&quot;/projects/8994/tickets/2400&quot; title=&quot;Ticket #2400&quot;&gt;#2400&lt;/a&gt;. I
does sort by attribute order.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-25T09:51:38+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-25T09:51:42+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">9</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Could you explain the problem in more detail? The way I see it, it looks like indkey defines the column order, and column_names is sorted exactly the same way as indkey as it's just a .map of indkey, so what does the IN in the SQL have to do with any ordering?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you explain the problem in more detail? The way I see it,
it looks like indkey defines the column order, and column_names is
sorted exactly the same way as indkey as it's just a .map of
indkey, so what does the IN in the SQL have to do with any
ordering?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-25T15:15:52+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-25T15:15:53+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">10</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Tarmo, your version gets the order right, but at the price of two queries and parsing in ruby. You can have it all in one query:

@@@ sql
SELECT i.relname, d.indisunique, a.attname
FROM pg_class t, pg_class i, pg_index d, pg_attribute a,
generate_series(0, 9) AS c(i)
WHERE i.relkind = 'i'
AND d.indexrelid = i.oid
AND d.indisprimary = 'f'
AND t.oid = d.indrelid
AND t.relname = '{table_name}'
AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname IN (#{schemas}) )
AND a.attrelid = t.oid
AND d.indkey[c.i]=a.attnum
ORDER BY i.relname, c.i
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tarmo, your version gets the order right, but at the price of
two queries and parsing in ruby. You can have it all in one
query:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
SELECT i.relname, d.indisunique, a.attname
FROM pg_class t, pg_class i, pg_index d, pg_attribute a,
generate_series(0, 9) AS c(i)
WHERE i.relkind = 'i'
AND d.indexrelid = i.oid
AND d.indisprimary = 'f'
AND t.oid = d.indrelid
AND t.relname = '{table_name}'
AND i.relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname IN (#{schemas}) )
AND a.attrelid = t.oid
AND d.indkey[c.i]=a.attnum
ORDER BY i.relname, c.i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-25T18:33:54+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-25T18:34:00+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">11</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Though I do not have postgresql 7.4 to test and don't really know how well rails currently works with it, I do believe that generate_series is not by default present in 7.4. The overhead of the two queries is unlikely to be significant (especially in production mode where it matters since they will be executed only once).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Though I do not have postgresql 7.4 to test and don't really
know how well rails currently works with it, I do believe that
generate_series is not by default present in 7.4. The overhead of
the two queries is unlikely to be significant (especially in
production mode where it matters since they will be executed only
once).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-25T18:48:15+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-25T18:48:20+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">12</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Tarmo,

You are correct.  I missed the mapping step afterwards and thought that the patch was attempting to fix this through SQL only.  It would be hard to catch because I believe if you took the mapping portion out the test would still pass as an implementation detail.  Anyway, that's neither here nor there.  Thanks for setting the record straight.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tarmo,&lt;/p&gt;
&lt;p&gt;You are correct. I missed the mapping step afterwards and
thought that the patch was attempting to fix this through SQL only.
It would be hard to catch because I believe if you took the mapping
portion out the test would still pass as an implementation detail.
Anyway, that's neither here nor there. Thanks for setting the
record straight.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-26T20:51:48+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-26T20:51:50+01:00</updated-at>
      <user-id type="integer">22233</user-id>
      <version type="integer">13</version>
      <user-name>Kevin Menard</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Michael,

Another issue with using generate_series is that it reintroduces a problem with the original code that the applied patch fixes.  Namely, you're imposing a hard 10 column limit on the size of the index.  Going back at least as far as PostgreSQL 7.4, the default DB limit is 32 and could be compiled higher.  The applied patch removes this artificial limitation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Michael,&lt;/p&gt;
&lt;p&gt;Another issue with using generate_series is that it reintroduces
a problem with the original code that the applied patch fixes.
Namely, you're imposing a hard 10 column limit on the size of the
index. Going back at least as far as PostgreSQL 7.4, the default DB
limit is 32 and could be compiled higher. The applied patch removes
this artificial limitation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-26T20:54:09+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-26T20:54:11+01:00</updated-at>
      <user-id type="integer">22233</user-id>
      <version type="integer">14</version>
      <user-name>Kevin Menard</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Tarmo, Kevin: I agree, it's better not to hard code the number of index columns.

Have a look at the attached patch that gets rid of the second explicit SQL statement by reusing a slightly extended #column_definitions (it interprets an integer table name as an oid).

I'm thinking of extending the PostgreSQL adapter for expression indexes and partial indexes. To make that easier, I'd like the code to be as free of redundancies as possible.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tarmo, Kevin: I agree, it's better not to hard code the number
of index columns.&lt;/p&gt;
&lt;p&gt;Have a look at the attached patch that gets rid of the second
explicit SQL statement by reusing a slightly extended
#column_definitions (it interprets an integer table name as an
oid).&lt;/p&gt;
&lt;p&gt;I'm thinking of extending the PostgreSQL adapter for expression
indexes and partial indexes. To make that easier, I'd like the code
to be as free of redundancies as possible.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-27T12:57:55+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-27T12:57:59+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">15</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>That's what I get for not running the tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's what I get for not running the tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-27T13:29:42+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-27T13:29:48+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">16</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>And finally without debug statements. Sorry for the mess.</body>
      <body-html>&lt;div&gt;&lt;p&gt;And finally without debug statements. Sorry for the mess.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-27T13:32:21+01:00</created-at>
      <creator-id type="integer">31932</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2515</number>
      <permalink>dbschemadump-with-postgresqladapter-dumps-multiple-column-indexes-in-undefined-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.2 active_record bug index patch postgres schema_dumper test</tag>
      <title>db:schema:dump with PostgreSQLAdapter dumps multiple column indexes in undefined order </title>
      <updated-at type="datetime">2009-04-27T13:32:25+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">17</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Levin Alexander</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2515</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>162b550f34ee733c744e3467b2c2ceed05d12b28</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-20T16:49:42+01:00</created-at>
      <filename>0001-Fixed-dumping-from-postgresql-columns-in-index-in-wr.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">113036</id>
      <size type="integer">4335</size>
      <uploader-id type="integer">9721</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/113036/0001-Fixed-dumping-from-postgresql-columns-in-index-in-wr.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>99edf181ea0a4fa290c715c9068e50c0cafa6a57</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-27T13:32:21+01:00</created-at>
      <filename>indexes-col-defs.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">115525</id>
      <size type="integer">2343</size>
      <uploader-id type="integer">18670</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/115525/indexes-col-defs.patch</url>
    </attachment>
  </attachments>
</ticket>
