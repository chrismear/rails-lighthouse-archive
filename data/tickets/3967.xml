<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-08T23:12:09+00:00</created-at>
  <creator-id type="integer">33219</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3967</number>
  <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2-3-stable cache_classes layout render verify</tag>
  <title>verify with render[:layout] and cache_classes broken</title>
  <updated-at type="datetime">2011-02-09T01:28:19+00:00</updated-at>
  <user-id type="integer">33219</user-id>
  <version type="integer">7</version>
  <user-name>Rudolf Gavlas</user-name>
  <creator-name>Rudolf Gavlas</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
  <priority-name nil="true"></priority-name>
  <original-body>With configuration option
@@@
  config.cache_classes = true
@@@
will a controller's `verify` with specified `render[:layout]` use this layout only once, the second time this verify block renders is going to be used the default layout for the controller.

Example:

1) set
@@@
  config.cache_classes = true
@@@

2) add to your controller
@@@
  verify(:only =&gt; ['test'], :params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'})
  layout 'lay1'
@@@
3) setup different layouts `lay0`, `lay1`
4) request the `test` action twice in a row from the server and see, what is being rendered

The first time it will render the `lay0` layout, second and all other times it will render the defaul layout `lay1`.

It's because the code in `actionpack/lib/action_controller/layout.rb`:
`
        def pick_layout(options)
        if options.has_key?(:layout)
          case layout = options.delete(:layout)
          when FalseClass
            nil
          when NilClass, TrueClass
`
-- note the &quot;options.delete(:layout)&quot;.

You can get a picture what's going on if you freeze the `render` hash in `actionpack/lib/action_controller/verification.rb`:
@@@
    --- verification.rb.orig        2010-02-15 16:34:33.000000000 +0100
    +++ verification.rb     2010-02-15 18:15:23.000000000 +0100
    @@ -80,6 +80,7 @@
           #   array (may also be a single value).
           def verify(options={})
             before_filter :only =&gt; options[:only], :except =&gt; options[:except] do |c|
    +          options[:render].freeze if options[:render]
               c.__send__ :verify_action, options
             end
           end

@@@

Workaround: instad of
@@@
  verify(:only =&gt; ['test'], :params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'})
@@@

use:
@@@
    before_filter :verify_foo, :only =&gt; ['test']

    private

    def verify_foo
      verify_action({:params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'}})
    end
@@@

One of the possible solutions is passing on a deep copy of the options passed to `verify` (see the attached patch).</original-body>
  <latest-body>With configuration option
@@@
  config.cache_classes = true
@@@
will a controller's `verify` with specified `render[:layout]` use this layout only once, the second time this verify block renders is going to be used the default layout for the controller.

Example:

1) set
@@@
  config.cache_classes = true
@@@

2) add to your controller
@@@
  verify(:only =&gt; ['test'], :params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'})
  layout 'lay1'
@@@
3) setup different layouts `lay0`, `lay1`
4) request the `test` action twice in a row from the server and see, what is being rendered

The first time it will render the `lay0` layout, second and all other times it will render the defaul layout `lay1`.

It's because the code in `actionpack/lib/action_controller/layout.rb`:
`
        def pick_layout(options)
        if options.has_key?(:layout)
          case layout = options.delete(:layout)
          when FalseClass
            nil
          when NilClass, TrueClass
`
-- note the &quot;options.delete(:layout)&quot;.

You can get a picture what's going on if you freeze the `render` hash in `actionpack/lib/action_controller/verification.rb`:
@@@
    --- verification.rb.orig        2010-02-15 16:34:33.000000000 +0100
    +++ verification.rb     2010-02-15 18:15:23.000000000 +0100
    @@ -80,6 +80,7 @@
           #   array (may also be a single value).
           def verify(options={})
             before_filter :only =&gt; options[:only], :except =&gt; options[:except] do |c|
    +          options[:render].freeze if options[:render]
               c.__send__ :verify_action, options
             end
           end

@@@

Workaround: instad of
@@@
  verify(:only =&gt; ['test'], :params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'})
@@@

use:
@@@
    before_filter :verify_foo, :only =&gt; ['test']

    private

    def verify_foo
      verify_action({:params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'}})
    end
@@@

One of the possible solutions is passing on a deep copy of the options passed to `verify` (see the attached patch).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With configuration option&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  config.cache_classes = true&lt;/code&gt;
&lt;/pre&gt;
will a controller's &lt;code&gt;verify&lt;/code&gt; with specified
&lt;code&gt;render[:layout]&lt;/code&gt; use this layout only once, the second
time this verify block renders is going to be used the default
layout for the controller.
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;1) set&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  config.cache_classes = true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2) add to your controller&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  verify(:only =&amp;gt; ['test'], :params =&amp;gt; :foo, :render =&amp;gt; {:template =&amp;gt; 'bar/baz', :layout =&amp;gt; 'lay0'})
  layout 'lay1'&lt;/code&gt;
&lt;/pre&gt;
3) setup different layouts &lt;code&gt;lay0&lt;/code&gt;, &lt;code&gt;lay1&lt;/code&gt;&lt;br&gt;
4) request the &lt;code&gt;test&lt;/code&gt; action twice in a row from the
server and see, what is being rendered
&lt;p&gt;The first time it will render the &lt;code&gt;lay0&lt;/code&gt; layout,
second and all other times it will render the defaul layout
&lt;code&gt;lay1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It's because the code in
&lt;code&gt;actionpack/lib/action_controller/layout.rb&lt;/code&gt;:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def pick_layout(options)
    if options.has_key?(:layout)
      case layout = options.delete(:layout)
      when FalseClass
        nil
      when NilClass, TrueClass&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;-- note the &quot;options.delete(:layout)&quot;.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can get a picture what's going on if you freeze the
&lt;code&gt;render&lt;/code&gt; hash in
&lt;code&gt;actionpack/lib/action_controller/verification.rb&lt;/code&gt;:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    --- verification.rb.orig        2010-02-15 16:34:33.000000000 +0100&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&lt;code&gt;+++ verification.rb     2010-02-15 18:15:23.000000000 +0100
@@ -80,6 +80,7 @@
       #   array (may also be a single value).
       def verify(options={})
         before_filter :only =&amp;amp;gt; options[:only], :except =&amp;amp;gt; options[:except] do |c|
+          options[:render].freeze if options[:render]
           c.__send__ :verify_action, options
         end
       end&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;

&lt;/pre&gt;
&lt;p&gt;Workaround: instad of&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  verify(:only =&amp;gt; ['test'], :params =&amp;gt; :foo, :render =&amp;gt; {:template =&amp;gt; 'bar/baz', :layout =&amp;gt; 'lay0'})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;use:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    before_filter :verify_foo, :only =&amp;gt; ['test']&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&lt;code&gt;private

def verify_foo
  verify_action({:params =&amp;amp;gt; :foo, :render =&amp;amp;gt; {:template =&amp;amp;gt; 'bar/baz', :layout =&amp;amp;gt; 'lay0'}})
end&amp;lt;/code&amp;gt;&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
&lt;/pre&gt;
&lt;p&gt;One of the possible solutions is passing on a deep copy of the
options passed to &lt;code&gt;verify&lt;/code&gt; (see the attached patch).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With configuration option
@@@
  config.cache_classes = true
@@@
will a controller's `verify` with specified `render[:layout]` use this layout only once, the second time this verify block renders is going to be used the default layout for the controller.

Example:

1) set
@@@
  config.cache_classes = true
@@@

2) add to your controller
@@@
  verify(:only =&gt; ['test'], :params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'})
  layout 'lay1'
@@@
3) setup different layouts `lay0`, `lay1`
4) request the `test` action twice in a row from the server and see, what is being rendered

The first time it will render the `lay0` layout, second and all other times it will render the defaul layout `lay1`.

It's because the code in `actionpack/lib/action_controller/layout.rb`:
`
        def pick_layout(options)
        if options.has_key?(:layout)
          case layout = options.delete(:layout)
          when FalseClass
            nil
          when NilClass, TrueClass
`
-- note the &quot;options.delete(:layout)&quot;.

You can get a picture what's going on if you freeze the `render` hash in `actionpack/lib/action_controller/verification.rb`:
@@@
    --- verification.rb.orig        2010-02-15 16:34:33.000000000 +0100
    +++ verification.rb     2010-02-15 18:15:23.000000000 +0100
    @@ -80,6 +80,7 @@
           #   array (may also be a single value).
           def verify(options={})
             before_filter :only =&gt; options[:only], :except =&gt; options[:except] do |c|
    +          options[:render].freeze if options[:render]
               c.__send__ :verify_action, options
             end
           end

@@@

Workaround: instad of
@@@
  verify(:only =&gt; ['test'], :params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'})
@@@

use:
@@@
    before_filter :verify_foo, :only =&gt; ['test']

    private

    def verify_foo
      verify_action({:params =&gt; :foo, :render =&gt; {:template =&gt; 'bar/baz', :layout =&gt; 'lay0'}})
    end
@@@

One of the possible solutions is passing on a deep copy of the options passed to `verify` (see the attached patch).</body>
      <body-html>&lt;div&gt;&lt;p&gt;With configuration option&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  config.cache_classes = true&lt;/code&gt;
&lt;/pre&gt;
will a controller's &lt;code&gt;verify&lt;/code&gt; with specified
&lt;code&gt;render[:layout]&lt;/code&gt; use this layout only once, the second
time this verify block renders is going to be used the default
layout for the controller.
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;1) set&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  config.cache_classes = true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2) add to your controller&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  verify(:only =&amp;gt; ['test'], :params =&amp;gt; :foo, :render =&amp;gt; {:template =&amp;gt; 'bar/baz', :layout =&amp;gt; 'lay0'})
  layout 'lay1'&lt;/code&gt;
&lt;/pre&gt;
3) setup different layouts &lt;code&gt;lay0&lt;/code&gt;, &lt;code&gt;lay1&lt;/code&gt;&lt;br&gt;
4) request the &lt;code&gt;test&lt;/code&gt; action twice in a row from the
server and see, what is being rendered
&lt;p&gt;The first time it will render the &lt;code&gt;lay0&lt;/code&gt; layout,
second and all other times it will render the defaul layout
&lt;code&gt;lay1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It's because the code in
&lt;code&gt;actionpack/lib/action_controller/layout.rb&lt;/code&gt;:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def pick_layout(options)
    if options.has_key?(:layout)
      case layout = options.delete(:layout)
      when FalseClass
        nil
      when NilClass, TrueClass&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;-- note the &quot;options.delete(:layout)&quot;.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can get a picture what's going on if you freeze the
&lt;code&gt;render&lt;/code&gt; hash in
&lt;code&gt;actionpack/lib/action_controller/verification.rb&lt;/code&gt;:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    --- verification.rb.orig        2010-02-15 16:34:33.000000000 +0100&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&lt;code&gt;+++ verification.rb     2010-02-15 18:15:23.000000000 +0100
@@ -80,6 +80,7 @@
       #   array (may also be a single value).
       def verify(options={})
         before_filter :only =&amp;amp;gt; options[:only], :except =&amp;amp;gt; options[:except] do |c|
+          options[:render].freeze if options[:render]
           c.__send__ :verify_action, options
         end
       end&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;

&lt;/pre&gt;
&lt;p&gt;Workaround: instad of&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  verify(:only =&amp;gt; ['test'], :params =&amp;gt; :foo, :render =&amp;gt; {:template =&amp;gt; 'bar/baz', :layout =&amp;gt; 'lay0'})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;use:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    before_filter :verify_foo, :only =&amp;gt; ['test']&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&lt;code&gt;private

def verify_foo
  verify_action({:params =&amp;amp;gt; :foo, :render =&amp;amp;gt; {:template =&amp;amp;gt; 'bar/baz', :layout =&amp;amp;gt; 'lay0'}})
end&amp;lt;/code&amp;gt;&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
&lt;/pre&gt;
&lt;p&gt;One of the possible solutions is passing on a deep copy of the
options passed to &lt;code&gt;verify&lt;/code&gt; (see the attached patch).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T17:59:02+00:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3967</number>
      <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>cache_classes layout rails-2.3 render verify</tag>
      <title>verify with render[:layout] and cache_classes broken</title>
      <updated-at type="datetime">2010-02-15T17:59:07+00:00</updated-at>
      <user-id type="integer">33219</user-id>
      <version type="integer">1</version>
      <user-name>Rudolf Gavlas</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-16T23:53:42+01:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: cache_classes layout rails-2.3 render verify
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3967</number>
      <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable cache_classes layout render verify</tag>
      <title>verify with render[:layout] and cache_classes broken</title>
      <updated-at type="datetime">2010-10-16T23:53:44+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">2</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>For all the patriotism oozing out of the &lt;a href=&quot;http://www.weddinginthebox.com/blog/alex-evening-dresses.html&quot;&gt;Alex Evening dresses&lt;/a&gt;, the blunder is huge,&quot; the daily commented as India boasted of its record tally of 32 gold medals Wednesday in the &lt;a href=&quot;http://www.weddinginthebox.com/blog/jovani-2010-evening-dresses.html&quot;&gt;Jovani couture 2010 evening dresses&lt;/a&gt; which opened on a chaotic note earlier this month.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For all the patriotism oozing out of the &lt;a href=
&quot;http://www.weddinginthebox.com/blog/alex-evening-dresses.html&quot;&gt;Alex
Evening dresses&lt;/a&gt;, the blunder is huge,&quot; the daily commented as
India boasted of its record tally of 32 gold medals Wednesday in
the &lt;a href=
&quot;http://www.weddinginthebox.com/blog/jovani-2010-evening-dresses.html&quot;&gt;
Jovani couture 2010 evening dresses&lt;/a&gt; which opened on a chaotic
note earlier this month.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T06:26:13+01:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3967</number>
      <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable cache_classes layout render verify</tag>
      <title>verify with render[:layout] and cache_classes broken</title>
      <updated-at type="datetime">2010-10-19T17:52:54+01:00</updated-at>
      <user-id type="integer">120610</user-id>
      <version type="integer">3</version>
      <user-name>koukou</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T01:20:55+00:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3967</number>
      <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable cache_classes layout render verify</tag>
      <title>verify with render[:layout] and cache_classes broken</title>
      <updated-at type="datetime">2010-11-08T23:12:09+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">4</version>
      <user-name>jim123456</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T00:31:47+00:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3967</number>
      <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable cache_classes layout render verify</tag>
      <title>verify with render[:layout] and cache_classes broken</title>
      <updated-at type="datetime">2011-02-09T00:33:01+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-09T00:31:48+00:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3967</number>
      <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable cache_classes layout render verify</tag>
      <title>verify with render[:layout] and cache_classes broken</title>
      <updated-at type="datetime">2011-02-09T00:32:41+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hello, Santiago. I am not going to try to reproduce this on 3-0-stable or master, my resources are limited as well and i already spent a lot of time with my original report without getting any response. FWIW i just made a cursory check of the code of 3-0-stable and i see a similar idiom there as what seems to be the source of problems in 2.3-stable: https://github.com/rails/rails/blob/3-0-stable/actionpack/lib/abstract_controller/layouts.rb#L289 (but i can't say if this could be problematic in 3.x or not).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello, Santiago. I am not going to try to reproduce this on
3-0-stable or master, my resources are limited as well and i
already spent a lot of time with my original report without getting
any response. FWIW i just made a cursory check of the code of
3-0-stable and i see a similar idiom there as what seems to be the
source of problems in 2.3-stable: &lt;a href=
&quot;https://github.com/rails/rails/blob/3-0-stable/actionpack/lib/abstract_controller/layouts.rb#L289&quot;&gt;
https://github.com/rails/rails/blob/3-0-stable/actionpack/lib/abstr...&lt;/a&gt;
(but i can't say if this could be problematic in 3.x or not).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-09T01:28:14+00:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3967</number>
      <permalink>verify-with-renderlayout-and-cache_classes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable cache_classes layout render verify</tag>
      <title>verify with render[:layout] and cache_classes broken</title>
      <updated-at type="datetime">2011-02-09T01:28:19+00:00</updated-at>
      <user-id type="integer">33219</user-id>
      <version type="integer">7</version>
      <user-name>Rudolf Gavlas</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3967</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c8b48f1fb8c003315706bf5938c58d7bd7ede652</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-02-15T17:59:02+00:00</created-at>
      <filename>verification.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">412233</id>
      <size type="integer">526</size>
      <uploader-id type="integer">33219</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/412233/verification.diff</url>
    </attachment>
  </attachments>
</ticket>
