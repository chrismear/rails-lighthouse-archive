<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-06T15:25:21+01:00</created-at>
  <creator-id type="integer">16138</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">6679</number>
  <permalink>query-broken-in-rails-3</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Query broken in Rails 3 (?)</title>
  <updated-at type="datetime">2011-04-06T17:02:05+01:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">2</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Emilio Tagua</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6679</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>This used to work for me in latest Rails 2.3, but it's broken on Rails 3.

@@@ ruby
@opinion_polls = @organizer.opinion_polls.all(
  :select =&gt; &quot;DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key&quot;, 
  :joins =&gt; :opinion_poll_recipients, 
  :conditions =&gt; [&quot;opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; ? &quot;, 7.days.ago.beginning_of_day])
@@@

Query generated in Rails 2.3:

@@@
SELECT DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id INNER JOIN `opinion_poll_recipients` ON opinion_poll_recipients.opinion_poll_id = opinion_polls.id WHERE (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 00:00:00' ) AND ((`events`.organizer_id = 2766))
@@@

Query generated in Rails 3:

@@@
SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 03:00:00' )

Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion' at line 1: SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 03:00:00' )
@@@

The error is because we are asking a DISTINCT field after selecting every field in the table (`opinion_polls`.*).</original-body>
  <latest-body>This used to work for me in latest Rails 2.3, but it's broken on Rails 3.

@@@ ruby
@opinion_polls = @organizer.opinion_polls.all(
  :select =&gt; &quot;DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key&quot;, 
  :joins =&gt; :opinion_poll_recipients, 
  :conditions =&gt; [&quot;opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; ? &quot;, 7.days.ago.beginning_of_day])
@@@

Query generated in Rails 2.3:

@@@
SELECT DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id INNER JOIN `opinion_poll_recipients` ON opinion_poll_recipients.opinion_poll_id = opinion_polls.id WHERE (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 00:00:00' ) AND ((`events`.organizer_id = 2766))
@@@

Query generated in Rails 3:

@@@
SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 03:00:00' )

Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion' at line 1: SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 03:00:00' )
@@@

The error is because we are asking a DISTINCT field after selecting every field in the table (`opinion_polls`.*).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This used to work for me in latest Rails 2.3, but it's broken on
Rails 3.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;@opinion_polls = @organizer.opinion_polls.all(
  :select =&amp;gt; &quot;DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key&quot;, 
  :joins =&amp;gt; :opinion_poll_recipients, 
  :conditions =&amp;gt; [&quot;opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; ? &quot;, 7.days.ago.beginning_of_day])&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Query generated in Rails 2.3:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id INNER JOIN `opinion_poll_recipients` ON opinion_poll_recipients.opinion_poll_id = opinion_polls.id WHERE (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; '2011-03-30 00:00:00' ) AND ((`events`.organizer_id = 2766))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Query generated in Rails 3:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; '2011-03-30 03:00:00' )

Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion' at line 1: SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; '2011-03-30 03:00:00' )&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The error is because we are asking a DISTINCT field after
selecting every field in the table
(&lt;code&gt;opinion_polls&lt;/code&gt;.*).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This used to work for me in latest Rails 2.3, but it's broken on Rails 3.

@@@ ruby
@opinion_polls = @organizer.opinion_polls.all(
  :select =&gt; &quot;DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key&quot;, 
  :joins =&gt; :opinion_poll_recipients, 
  :conditions =&gt; [&quot;opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; ? &quot;, 7.days.ago.beginning_of_day])
@@@

Query generated in Rails 2.3:

@@@
SELECT DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id INNER JOIN `opinion_poll_recipients` ON opinion_poll_recipients.opinion_poll_id = opinion_polls.id WHERE (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 00:00:00' ) AND ((`events`.organizer_id = 2766))
@@@

Query generated in Rails 3:

@@@
SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 03:00:00' )

Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion' at line 1: SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &gt; '2011-03-30 03:00:00' )
@@@

The error is because we are asking a DISTINCT field after selecting every field in the table (`opinion_polls`.*).</body>
      <body-html>&lt;div&gt;&lt;p&gt;This used to work for me in latest Rails 2.3, but it's broken on
Rails 3.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;@opinion_polls = @organizer.opinion_polls.all(
  :select =&amp;gt; &quot;DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key&quot;, 
  :joins =&amp;gt; :opinion_poll_recipients, 
  :conditions =&amp;gt; [&quot;opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; ? &quot;, 7.days.ago.beginning_of_day])&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Query generated in Rails 2.3:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id INNER JOIN `opinion_poll_recipients` ON opinion_poll_recipients.opinion_poll_id = opinion_polls.id WHERE (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; '2011-03-30 00:00:00' ) AND ((`events`.organizer_id = 2766))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Query generated in Rails 3:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id, opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; '2011-03-30 03:00:00' )

Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion' at line 1: SELECT `opinion_polls`.*, DISTINCT(opinion_polls.event_id), opinion_polls.name, opinion_polls.id,  opinion_polls.random_key FROM `opinion_polls` INNER JOIN `opinion_poll_recipients` ON `opinion_poll_recipients`.`opinion_poll_id` = `opinion_polls`.`id` INNER JOIN `events` ON `opinion_polls`.event_id = `events`.id WHERE ((`events`.organizer_id = 6)) AND (opinion_poll_recipients.preview = false AND opinion_poll_recipients.last_sent_at &amp;gt; '2011-03-30 03:00:00' )&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The error is because we are asking a DISTINCT field after
selecting every field in the table
(&lt;code&gt;opinion_polls&lt;/code&gt;.*).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-06T15:25:21+01:00</created-at>
      <creator-id type="integer">16138</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6679</number>
      <permalink>query-broken-in-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Query broken in Rails 3 (?)</title>
      <updated-at type="datetime">2011-04-06T15:26:06+01:00</updated-at>
      <user-id type="integer">16138</user-id>
      <version type="integer">1</version>
      <user-name>Emilio Tagua</user-name>
      <creator-name>Emilio Tagua</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6679</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-06T17:01:53+01:00</created-at>
      <creator-id type="integer">16138</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6679</number>
      <permalink>query-broken-in-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Query broken in Rails 3 (?)</title>
      <updated-at type="datetime">2011-04-06T17:02:05+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">2</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Emilio Tagua</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6679</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
