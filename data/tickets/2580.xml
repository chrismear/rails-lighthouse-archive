<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-29T15:34:33+01:00</created-at>
  <creator-id type="integer">55575</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2580</number>
  <permalink>urgent-session-drops-in-rails-232</permalink>
  <priority type="integer">1719</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2.3.2 memcache mem_cache_store rails sessions</tag>
  <title>Urgent: Session drops in rails 2.3.2</title>
  <updated-at type="datetime">2010-10-14T11:02:02+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">5</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Ali Aslam</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2580</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Hello,
I've been using memcache as a session store. After updating to rails 2.3.2, I've started encountering site users' sessions being dropped. This affects only the servers where the new rails is deployed. These session dropouts are intermittent and seem to increase with the number of requests to the rails application.
This only occurs in production and works fine in development and test environments (using active_record as a session store in these envs).
We're using the following setup in production:
Apache 2.2.6 with Phusion Passenger 2.1.3 (also tried with passenger 2.2.2 but to no avail)

This is how I'm setting up memcache session store in production.rb:
# MEMCACHED_SERVERS holds array of memcached servers ips (total 3)
MEMCACHED_OPTIONS = {:namespace =&gt; &quot;myapp-#{RAILS_ENV}&quot;}
CACHE = MemCache.new MEMCACHED_SERVERS, MEMCACHED_OPTIONS
config.action_controller.session_store = :mem_cache_store
config.action_controller.session = {:cache =&gt; CACHE}

I've tried looking through the rails/rack codebase, but haven't figured out why this is happening.

It would really help if someone can look into this and at the least, inform me whether this is a rails 2.3.2 bug or something on my end.
Thanks,
Ali</original-body>
  <latest-body>Hello,
I've been using memcache as a session store. After updating to rails 2.3.2, I've started encountering site users' sessions being dropped. This affects only the servers where the new rails is deployed. These session dropouts are intermittent and seem to increase with the number of requests to the rails application.
This only occurs in production and works fine in development and test environments (using active_record as a session store in these envs).
We're using the following setup in production:
Apache 2.2.6 with Phusion Passenger 2.1.3 (also tried with passenger 2.2.2 but to no avail)

This is how I'm setting up memcache session store in production.rb:
# MEMCACHED_SERVERS holds array of memcached servers ips (total 3)
MEMCACHED_OPTIONS = {:namespace =&gt; &quot;myapp-#{RAILS_ENV}&quot;}
CACHE = MemCache.new MEMCACHED_SERVERS, MEMCACHED_OPTIONS
config.action_controller.session_store = :mem_cache_store
config.action_controller.session = {:cache =&gt; CACHE}

I've tried looking through the rails/rack codebase, but haven't figured out why this is happening.

It would really help if someone can look into this and at the least, inform me whether this is a rails 2.3.2 bug or something on my end.
Thanks,
Ali</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello, I've been using memcache as a session store. After
updating to rails 2.3.2, I've started encountering site users'
sessions being dropped. This affects only the servers where the new
rails is deployed. These session dropouts are intermittent and seem
to increase with the number of requests to the rails application.
This only occurs in production and works fine in development and
test environments (using active_record as a session store in these
envs). We're using the following setup in production: Apache 2.2.6
with Phusion Passenger 2.1.3 (also tried with passenger 2.2.2 but
to no avail)&lt;/p&gt;
&lt;p&gt;This is how I'm setting up memcache session store in
production.rb:&lt;/p&gt;
&lt;h1&gt;MEMCACHED_SERVERS holds array of memcached servers ips (total
3)&lt;/h1&gt;
&lt;p&gt;MEMCACHED_OPTIONS = {:namespace =&amp;gt; &quot;myapp-#{RAILS_ENV}&quot;}
CACHE = MemCache.new MEMCACHED_SERVERS, MEMCACHED_OPTIONS
config.action_controller.session_store = :mem_cache_store
config.action_controller.session = {:cache =&amp;gt; CACHE}&lt;/p&gt;
&lt;p&gt;I've tried looking through the rails/rack codebase, but haven't
figured out why this is happening.&lt;/p&gt;
&lt;p&gt;It would really help if someone can look into this and at the
least, inform me whether this is a rails 2.3.2 bug or something on
my end. Thanks, Ali&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello,
I've been using memcache as a session store. After updating to rails 2.3.2, I've started encountering site users' sessions being dropped. This affects only the servers where the new rails is deployed. These session dropouts are intermittent and seem to increase with the number of requests to the rails application.
This only occurs in production and works fine in development and test environments (using active_record as a session store in these envs).
We're using the following setup in production:
Apache 2.2.6 with Phusion Passenger 2.1.3 (also tried with passenger 2.2.2 but to no avail)

This is how I'm setting up memcache session store in production.rb:
@@@ ruby
# MEMCACHED_SERVERS holds array of memcached servers ips (total 3)
MEMCACHED_OPTIONS = {:namespace =&gt; &quot;myapp-#{RAILS_ENV}&quot;}
CACHE = MemCache.new MEMCACHED_SERVERS, MEMCACHED_OPTIONS
config.action_controller.session_store = :mem_cache_store
config.action_controller.session = {:cache =&gt; CACHE}
@@@

I've tried looking through the rails/rack codebase, but haven't figured out why this is happening.

It would really help if someone can look into this and at the least, inform me whether this is a rails 2.3.2 bug or something on my end.
Thanks,
Ali</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello, I've been using memcache as a session store. After
updating to rails 2.3.2, I've started encountering site users'
sessions being dropped. This affects only the servers where the new
rails is deployed. These session dropouts are intermittent and seem
to increase with the number of requests to the rails application.
This only occurs in production and works fine in development and
test environments (using active_record as a session store in these
envs). We're using the following setup in production: Apache 2.2.6
with Phusion Passenger 2.1.3 (also tried with passenger 2.2.2 but
to no avail)&lt;/p&gt;
&lt;p&gt;This is how I'm setting up memcache session store in
production.rb:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# MEMCACHED_SERVERS holds array of memcached servers ips (total 3)
MEMCACHED_OPTIONS = {:namespace =&amp;gt; &amp;quot;myapp-#{RAILS_ENV}&amp;quot;}
CACHE = MemCache.new MEMCACHED_SERVERS, MEMCACHED_OPTIONS
config.action_controller.session_store = :mem_cache_store
config.action_controller.session = {:cache =&amp;gt; CACHE}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've tried looking through the rails/rack codebase, but haven't
figured out why this is happening.&lt;/p&gt;
&lt;p&gt;It would really help if someone can look into this and at the
least, inform me whether this is a rails 2.3.2 bug or something on
my end. Thanks, Ali&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-29T15:34:34+01:00</created-at>
      <creator-id type="integer">55575</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2580</number>
      <permalink>urgent-session-drops-in-rails-232</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 memcache mem_cache_store rails sessions</tag>
      <title>Urgent: Session drops in rails 2.3.2</title>
      <updated-at type="datetime">2009-04-29T15:44:01+01:00</updated-at>
      <user-id type="integer">55575</user-id>
      <version type="integer">1</version>
      <user-name>Ali Aslam</user-name>
      <creator-name>Ali Aslam</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2580</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've seen similar behavior.
My favorite candidate servers sharing a common socket to memcache.
http://www.modrails.com/documentation/Users%20guide%20Apache.html#_example_1_memcached_connection_sharing_harmful
I think changing passenger to use the 'conservative' spawn method has fixed it for me, but not 100%.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've seen similar behavior.&lt;br&gt;
My favorite candidate servers sharing a common socket to
memcache.&lt;br&gt;
&lt;a href=
&quot;http://www.modrails.com/documentation/Users%20guide%20Apache.html#_example_1_memcached_connection_sharing_harmful&quot;&gt;
http://www.modrails.com/documentation/Users%20guide%20Apache.html#_...&lt;/a&gt;&lt;br&gt;
I think changing passenger to use the 'conservative' spawn method
has fixed it for me, but not 100%.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-14T21:58:45+01:00</created-at>
      <creator-id type="integer">55575</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2580</number>
      <permalink>urgent-session-drops-in-rails-232</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 memcache mem_cache_store rails sessions</tag>
      <title>Urgent: Session drops in rails 2.3.2</title>
      <updated-at type="datetime">2009-10-14T21:58:47+01:00</updated-at>
      <user-id type="integer">3138</user-id>
      <version type="integer">2</version>
      <user-name>Andy Watts</user-name>
      <creator-name>Ali Aslam</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2580</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also remember that memcached is not a reliable session store as it removes old data when it runs out of space. From wikipedia:

&quot;Memcached's APIs provides a giant hash table distributed across multiple machines. When the table is full, subsequent inserts cause older data to be purged in least recently used (LRU) order.&quot;

This would explain your situation, especially as you say the problem increases with the traffic.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also remember that memcached is not a reliable session store as
it removes old data when it runs out of space. From wikipedia:&lt;/p&gt;
&lt;p&gt;&quot;Memcached's APIs provides a giant hash table distributed across
multiple machines. When the table is full, subsequent inserts cause
older data to be purged in least recently used (LRU) order.&quot;&lt;/p&gt;
&lt;p&gt;This would explain your situation, especially as you say the
problem increases with the traffic.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-16T06:21:43+01:00</created-at>
      <creator-id type="integer">55575</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2580</number>
      <permalink>urgent-session-drops-in-rails-232</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 memcache mem_cache_store rails sessions</tag>
      <title>Urgent: Session drops in rails 2.3.2</title>
      <updated-at type="datetime">2009-10-16T06:21:45+01:00</updated-at>
      <user-id type="integer">21894</user-id>
      <version type="integer">3</version>
      <user-name>Ben Marini</user-name>
      <creator-name>Ali Aslam</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2580</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:48+01:00</created-at>
      <creator-id type="integer">55575</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2580</number>
      <permalink>urgent-session-drops-in-rails-232</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 memcache mem_cache_store rails sessions</tag>
      <title>Urgent: Session drops in rails 2.3.2</title>
      <updated-at type="datetime">2010-05-04T18:48:48+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ali Aslam</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2580</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-14T11:02:00+01:00</created-at>
      <creator-id type="integer">55575</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2580</number>
      <permalink>urgent-session-drops-in-rails-232</permalink>
      <priority type="integer">1719</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.3.2 memcache mem_cache_store rails sessions</tag>
      <title>Urgent: Session drops in rails 2.3.2</title>
      <updated-at type="datetime">2010-10-14T11:02:02+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">5</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Ali Aslam</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2580</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
