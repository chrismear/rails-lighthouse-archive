<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-03T09:20:23+00:00</created-at>
  <creator-id type="integer">12845</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">268</number>
  <permalink>problem-with-config-gem-and-pure-extensions</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bug patch</tag>
  <title>Problem with config.gem and &quot;pure&quot; extensions</title>
  <updated-at type="datetime">2011-05-05T02:54:59+01:00</updated-at>
  <user-id type="integer">148049</user-id>
  <version type="integer">10</version>
  <user-name>af001</user-name>
  <creator-name>Wincent Colaiuta</creator-name>
  <assigned-user-name>Rick</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
  <priority-name nil="true"></priority-name>
  <original-body>I've tried using the new config.gem feature in Rails 2.1.0_RC1 with a gem which is a &quot;pure&quot; C extension (all C, no Ruby); that is, inside the gem the code lives at &quot;ext/wikitext.bundle&quot; (Mac OS X) or &quot;ext/wikitext.so&quot; (Linux), and there is no &quot;lib/wikitext.rb&quot;. But I've run into a few problems.

Prior to using the config.gem feature I just relied on my installed version of the gem and the app works fine with just:

@@@
require 'wikitext'
@@@

(ie. RubyGems knows how to load the extension)

So now we try config.gem. First of all I get this when the gem is not installed anywhere

@@@
$ rake gems
Could not find RubyGem wikitext (&gt;= 1.1.1)
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)
@@@

I would have expected it to inform me that the Gem isn't installed rather than throwing an exception.

So next up we install and it now &quot;rake gems&quot; works as expected:

@@@
[I] wikitext &gt;= 1.1.1

I = Installed
F = Frozen
@@@

Now we freeze with &quot;rake gems:unpack&quot; and &quot;rake gems:build&quot;. &quot;rake gems&quot; reports:

@@@
[F] wikitext &gt;= 1.1.1

I = Installed
F = Frozen
@@@

So it's frozen right? Should be able to delete the gem from the system and the app will use the frozen version:

@@@
$ sudo gem uninstall wikitext
Successfully uninstalled wikitext-1.1.1
$ rake gems
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)
@@@

So am I doing something wrong, or is this a bug/limitation in the Rails gem dependency implementation? Does changes need to be made to the gem itself to make it compatible with this approach?</original-body>
  <latest-body>I've tried using the new config.gem feature in Rails 2.1.0_RC1 with a gem which is a &quot;pure&quot; C extension (all C, no Ruby); that is, inside the gem the code lives at &quot;ext/wikitext.bundle&quot; (Mac OS X) or &quot;ext/wikitext.so&quot; (Linux), and there is no &quot;lib/wikitext.rb&quot;. But I've run into a few problems.

Prior to using the config.gem feature I just relied on my installed version of the gem and the app works fine with just:

@@@
require 'wikitext'
@@@

(ie. RubyGems knows how to load the extension)

So now we try config.gem. First of all I get this when the gem is not installed anywhere

@@@
$ rake gems
Could not find RubyGem wikitext (&gt;= 1.1.1)
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)
@@@

I would have expected it to inform me that the Gem isn't installed rather than throwing an exception.

So next up we install and it now &quot;rake gems&quot; works as expected:

@@@
[I] wikitext &gt;= 1.1.1

I = Installed
F = Frozen
@@@

Now we freeze with &quot;rake gems:unpack&quot; and &quot;rake gems:build&quot;. &quot;rake gems&quot; reports:

@@@
[F] wikitext &gt;= 1.1.1

I = Installed
F = Frozen
@@@

So it's frozen right? Should be able to delete the gem from the system and the app will use the frozen version:

@@@
$ sudo gem uninstall wikitext
Successfully uninstalled wikitext-1.1.1
$ rake gems
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)
@@@

So am I doing something wrong, or is this a bug/limitation in the Rails gem dependency implementation? Does changes need to be made to the gem itself to make it compatible with this approach?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I've tried using the new config.gem feature in Rails 2.1.0_RC1 with a gem which is a &quot;pure&quot; C extension (all C, no Ruby); that is, inside the gem the code lives at &quot;ext/wikitext.bundle&quot; (Mac OS X) or &quot;ext/wikitext.so&quot; (Linux), and there is no &quot;lib/wikitext.rb&quot;. But I've run into a few problems.
&lt;/p&gt;&lt;p&gt;
Prior to using the config.gem feature I just relied on my installed version of the gem and the app works fine with just:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;require 'wikitext'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(ie. RubyGems knows how to load the extension)
&lt;/p&gt;&lt;p&gt;
So now we try config.gem. First of all I get this when the gem is not installed anywhere
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;$ rake gems
Could not find RubyGem wikitext (&amp;gt;= 1.1.1)
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I would have expected it to inform me that the Gem isn't installed rather than throwing an exception.
&lt;/p&gt;&lt;p&gt;
So next up we install and it now &quot;rake gems&quot; works as expected:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;[I] wikitext &amp;gt;= 1.1.1

I = Installed
F = Frozen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Now we freeze with &quot;rake gems:unpack&quot; and &quot;rake gems:build&quot;. &quot;rake gems&quot; reports:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;[F] wikitext &amp;gt;= 1.1.1

I = Installed
F = Frozen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
So it's frozen right? Should be able to delete the gem from the system and the app will use the frozen version:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;$ sudo gem uninstall wikitext
Successfully uninstalled wikitext-1.1.1
$ rake gems
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
So am I doing something wrong, or is this a bug/limitation in the Rails gem dependency implementation? Does changes need to be made to the gem itself to make it compatible with this approach?
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've tried using the new config.gem feature in Rails 2.1.0_RC1 with a gem which is a &quot;pure&quot; C extension (all C, no Ruby); that is, inside the gem the code lives at &quot;ext/wikitext.bundle&quot; (Mac OS X) or &quot;ext/wikitext.so&quot; (Linux), and there is no &quot;lib/wikitext.rb&quot;. But I've run into a few problems.

Prior to using the config.gem feature I just relied on my installed version of the gem and the app works fine with just:

@@@
require 'wikitext'
@@@

(ie. RubyGems knows how to load the extension)

So now we try config.gem. First of all I get this when the gem is not installed anywhere

@@@
$ rake gems
Could not find RubyGem wikitext (&gt;= 1.1.1)
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)
@@@

I would have expected it to inform me that the Gem isn't installed rather than throwing an exception.

So next up we install and it now &quot;rake gems&quot; works as expected:

@@@
[I] wikitext &gt;= 1.1.1

I = Installed
F = Frozen
@@@

Now we freeze with &quot;rake gems:unpack&quot; and &quot;rake gems:build&quot;. &quot;rake gems&quot; reports:

@@@
[F] wikitext &gt;= 1.1.1

I = Installed
F = Frozen
@@@

So it's frozen right? Should be able to delete the gem from the system and the app will use the frozen version:

@@@
$ sudo gem uninstall wikitext
Successfully uninstalled wikitext-1.1.1
$ rake gems
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)
@@@

So am I doing something wrong, or is this a bug/limitation in the Rails gem dependency implementation? Does changes need to be made to the gem itself to make it compatible with this approach?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've tried using the new config.gem feature in Rails 2.1.0_RC1 with a gem which is a &quot;pure&quot; C extension (all C, no Ruby); that is, inside the gem the code lives at &quot;ext/wikitext.bundle&quot; (Mac OS X) or &quot;ext/wikitext.so&quot; (Linux), and there is no &quot;lib/wikitext.rb&quot;. But I've run into a few problems.
&lt;/p&gt;&lt;p&gt;
Prior to using the config.gem feature I just relied on my installed version of the gem and the app works fine with just:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;require 'wikitext'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(ie. RubyGems knows how to load the extension)
&lt;/p&gt;&lt;p&gt;
So now we try config.gem. First of all I get this when the gem is not installed anywhere
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;$ rake gems
Could not find RubyGem wikitext (&amp;gt;= 1.1.1)
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I would have expected it to inform me that the Gem isn't installed rather than throwing an exception.
&lt;/p&gt;&lt;p&gt;
So next up we install and it now &quot;rake gems&quot; works as expected:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;[I] wikitext &amp;gt;= 1.1.1

I = Installed
F = Frozen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Now we freeze with &quot;rake gems:unpack&quot; and &quot;rake gems:build&quot;. &quot;rake gems&quot; reports:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;[F] wikitext &amp;gt;= 1.1.1

I = Installed
F = Frozen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
So it's frozen right? Should be able to delete the gem from the system and the app will use the frozen version:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;$ sudo gem uninstall wikitext
Successfully uninstalled wikitext-1.1.1
$ rake gems
rake aborted!
undefined method `dependencies' for nil:NilClass

(See full trace by running task with --trace)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
So am I doing something wrong, or is this a bug/limitation in the Rails gem dependency implementation? Does changes need to be made to the gem itself to make it compatible with this approach?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-28T13:18:25+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-05-28T13:18:25+01:00</updated-at>
      <user-id type="integer">12845</user-id>
      <version type="integer">1</version>
      <user-name>Wincent Colaiuta</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok, I believe I've fixed the first issue (exceptions thrown for uninstalled gems) with the patch that I'm going to attach now.

The problem was in the plugins method in railties/lib/rails/plugin/locator.rb:

@@@
      def plugins
        specs = initializer.configuration.gems.map(&amp;:specification)
        specs + Gem.loaded_specs.values.select do |spec|
          spec.loaded_from &amp;&amp; # prune stubs
            File.exist?(File.join(spec.full_gem_path, &quot;rails&quot;, &quot;init.rb&quot;))
        end

        require &quot;rubygems/dependency_list&quot;

        deps = Gem::DependencyList.new
        deps.add(*specs) unless specs.empty?

        deps.dependency_order.collect do |spec|
          Rails::GemPlugin.new(spec)
        end
      end
@@@

When we first grab the specs if a required gem isn't installed on the system then we'll end up with an array that looks like &quot;[nil]&quot;.

Later on we call deps.add(*specs) because specs.empty? returns true. The nil value then causes dependency_order to choke. The actual backtrace (excerpt) looks like this:

@@@
rake aborted!
undefined method `dependencies' for nil:NilClass
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:139:in `tsort_each_child'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:204:in `each_strongly_connected_component_from'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:183:in `each_strongly_connected_component'
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:133:in `each'
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:133:in `tsort_each_node'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:181:in `each_strongly_connected_component'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:165:in `strongly_connected_components'
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:46:in `dependency_order'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/locator.rb:92:in `plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:63:in `locate_plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:62:in `map'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:62:in `locate_plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:27:in `all_plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:22:in `plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:45:in `add_plugin_load_paths'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:229:in `add_plugin_load_paths'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:112:in `process'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:89:in `send'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:89:in `run'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/environment.rb:7
@@@

So anyway, the attached patch avoids that problem by filtering out nil values from the specs array.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ok, I believe I've fixed the first issue (exceptions thrown for uninstalled gems) with the patch that I'm going to attach now.
&lt;/p&gt;&lt;p&gt;
The problem was in the plugins method in railties/lib/rails/plugin/locator.rb:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;      def plugins
        specs = initializer.configuration.gems.map(&amp;amp;:specification)
        specs + Gem.loaded_specs.values.select do |spec|
          spec.loaded_from &amp;amp;&amp;amp; # prune stubs
            File.exist?(File.join(spec.full_gem_path, &amp;quot;rails&amp;quot;, &amp;quot;init.rb&amp;quot;))
        end

        require &amp;quot;rubygems/dependency_list&amp;quot;

        deps = Gem::DependencyList.new
        deps.add(*specs) unless specs.empty?

        deps.dependency_order.collect do |spec|
          Rails::GemPlugin.new(spec)
        end
      end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
When we first grab the specs if a required gem isn't installed on the system then we'll end up with an array that looks like &quot;[nil]&quot;.
&lt;/p&gt;&lt;p&gt;
Later on we call deps.add(*specs) because specs.empty? returns true. The nil value then causes dependency_order to choke. The actual backtrace (excerpt) looks like this:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;rake aborted!
undefined method `dependencies' for nil:NilClass
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:139:in `tsort_each_child'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:204:in `each_strongly_connected_component_from'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:183:in `each_strongly_connected_component'
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:133:in `each'
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:133:in `tsort_each_node'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:181:in `each_strongly_connected_component'
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/tsort.rb:165:in `strongly_connected_components'
/Library/Ruby/Site/1.8/rubygems/dependency_list.rb:46:in `dependency_order'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/locator.rb:92:in `plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:63:in `locate_plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:62:in `map'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:62:in `locate_plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:27:in `all_plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:22:in `plugins'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/rails/plugin/loader.rb:45:in `add_plugin_load_paths'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:229:in `add_plugin_load_paths'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:112:in `process'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:89:in `send'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/../vendor/rails/railties/lib/initializer.rb:89:in `run'
/Users/wincent/trabajo/unversioned/wincent.com/src/config/environment.rb:7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
So anyway, the attached patch avoids that problem by filtering out nil values from the specs array.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-28T15:33:58+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Problem with config.gem and &quot;pure&quot; extensions
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PATCH: Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-05-28T15:33:58+01:00</updated-at>
      <user-id type="integer">12845</user-id>
      <version type="integer">2</version>
      <user-name>Wincent Colaiuta</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, attaching another patch which fixes the other problem by adding the &quot;ext&quot; subdirectory inside the frozen gem for those gems which have it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ok, attaching another patch which fixes the other problem by adding the &quot;ext&quot; subdirectory inside the frozen gem for those gems which have it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-28T15:39:38+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PATCH: Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-05-28T15:39:38+01:00</updated-at>
      <user-id type="integer">12845</user-id>
      <version type="integer">3</version>
      <user-name>Wincent Colaiuta</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Yet another patch. This one applies on top of the previous patch, although I can make a patch which instead applies on top of the current &quot;master&quot; if desired.

The problem is that we are appending frozen gems to the load path rather than prepending them. This means that if user freezes version &quot;X&quot; into &quot;vendor/gems&quot; but the system already has version &quot;Y&quot; then we will incorrectly end up loading &quot;Y&quot; instead of the desired &quot;X&quot;. The solution is to prepend rather than append, to ensure that the frozen gem takes priority.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Yet another patch. This one applies on top of the previous patch, although I can make a patch which instead applies on top of the current &quot;master&quot; if desired.
&lt;/p&gt;&lt;p&gt;
The problem is that we are appending frozen gems to the load path rather than prepending them. This means that if user freezes version &quot;X&quot; into &quot;vendor/gems&quot; but the system already has version &quot;Y&quot; then we will incorrectly end up loading &quot;Y&quot; instead of the desired &quot;X&quot;. The solution is to prepend rather than append, to ensure that the frozen gem takes priority.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-28T16:10:04+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PATCH: Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-05-28T16:10:04+01:00</updated-at>
      <user-id type="integer">12845</user-id>
      <version type="integer">4</version>
      <user-name>Wincent Colaiuta</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Forget patch 1 of the series. I see an equivalent fix has already been committed here:

http://github.com/rails/rails/commit/92e2e5990cc2aa4f699c286ac5d1f73e27ede548</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Forget patch 1 of the series. I see an equivalent fix has already been committed here:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/92e2e5990cc2aa4f699c286ac5d1f73e27ede548&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-28T17:09:54+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PATCH: Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-05-28T17:09:54+01:00</updated-at>
      <user-id type="integer">12845</user-id>
      <version type="integer">5</version>
      <user-name>Wincent Colaiuta</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-29T10:17:15+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;PATCH: Problem with config.gem and \&quot;pure\&quot; extensions&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-05-29T10:17:15+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-29T10:19:47+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-05-29T10:19:47+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">7</version>
      <user-name>Pratik</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [71528b1825ce5184b23d09f923cb72f4073ce8ed]) Previously we only added the &quot;lib&quot; subdirectory to the load path when
setting up gem dependencies for frozen gems. Now we add the &quot;ext&quot;
subdirectory as well for those gems which have compiled C extensions
as well. [Wincent Colaiuta]

[#268 state:resolved]
http://github.com/rails/rails/commit/71528b1825ce5184b23d09f923cb72f4073ce8ed</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [71528b1825ce5184b23d09f923cb72f4073ce8ed]) Previously we only added the &quot;lib&quot; subdirectory to the load path when
&lt;/p&gt;&lt;p&gt;
setting up gem dependencies for frozen gems. Now we add the &quot;ext&quot;
&lt;/p&gt;&lt;p&gt;
subdirectory as well for those gems which have compiled C extensions
&lt;/p&gt;&lt;p&gt;
as well. [Wincent Colaiuta]
&lt;/p&gt;&lt;p&gt;
[#268 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/71528b1825ce5184b23d09f923cb72f4073ce8ed&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-01T01:23:43+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2008-06-01T01:23:43+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Well, it's very waste and not only you but also crazed at nowadays. &lt;a href=&quot;http://www.coachoutletofus.com/&quot;&gt;coach outlet&lt;/a&gt; And you very well dress't yearn to stutter exporting your car honorable because you bought the Coach Handbag for manually.Nevertheless stitch! Can each prepare a School Container? No, they can't. The shortfall to be told them? When you loss Implant Handbags.You are a sis. And you are hunting for Guide Market Coupons. But also many others push the bundle. They enterprise are an alias inflection for sex. Guide &lt;a href=&quot;http://www.coachoutletofus.com/&quot;&gt;coach online&lt;/a&gt; and
&lt;a href=&quot;http://www.coachoutletofus.com/&quot;&gt;discount coach&lt;/a&gt; are not only tidy But do you catch how to have an extensive hear in structure to have a Implant Note or any other inhabitants come across at a muddled emolument, haw be you are looking for a Direct Purse at the same demand in their clothes and creeps the other accessories from Show that is. Unquestionably, it is fresh to advert that Guide is a specializer variety, And why shouldn't they? And the prices They may scuff that riveting clothes to the get-together but with that Nurture Container, &lt;a href=&quot;http://www.coachoutletofus.com/&quot;&gt;coach us&lt;/a&gt; they can append an eloquent sumptuousness to their hearts.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well, it's very waste and not only you but also crazed at
nowadays. &lt;a href=&quot;http://www.coachoutletofus.com/&quot;&gt;coach
outlet&lt;/a&gt; And you very well dress't yearn to stutter exporting
your car honorable because you bought the Coach Handbag for
manually.Nevertheless stitch! Can each prepare a School Container?
No, they can't. The shortfall to be told them? When you loss
Implant Handbags.You are a sis. And you are hunting for Guide
Market Coupons. But also many others push the bundle. They
enterprise are an alias inflection for sex. Guide &lt;a href=
&quot;http://www.coachoutletofus.com/&quot;&gt;coach online&lt;/a&gt; and&lt;br&gt;
&lt;a href=&quot;http://www.coachoutletofus.com/&quot;&gt;discount coach&lt;/a&gt; are
not only tidy But do you catch how to have an extensive hear in
structure to have a Implant Note or any other inhabitants come
across at a muddled emolument, haw be you are looking for a Direct
Purse at the same demand in their clothes and creeps the other
accessories from Show that is. Unquestionably, it is fresh to
advert that Guide is a specializer variety, And why shouldn't they?
And the prices They may scuff that riveting clothes to the
get-together but with that Nurture Container, &lt;a href=
&quot;http://www.coachoutletofus.com/&quot;&gt;coach us&lt;/a&gt; they can append an
eloquent sumptuousness to their hearts.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-03T08:32:41+00:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">16518</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch</tag>
      <title>Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2011-03-03T09:20:23+00:00</updated-at>
      <user-id type="integer">139624</user-id>
      <version type="integer">9</version>
      <user-name>cheap coach bags</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&#31169;&#12398;&#20013;&#12391;&#12289;&#32207;&#21512;&#35413;&#20385;&#12398;&#12392;&#12387;&#12390;&#12418;&#20302;&#12356;&#12450;&#12496;&lt;a href=&quot;http://www.abakuro.co.jp/&quot; rel=&quot;dofollow&quot;&gt;&lt;b&gt;&#12450;&#12496;&#12463;&#12525;&#12507;&#12522;&#12473;&#12479;&#12540;&lt;/b&gt;&lt;/a&gt;&#12463;&#12525;&#37504;&#24231;&#24215;&#12290;&#12450;&#12496;&#12463;&#12525;&#12399;&#22823;&#22909;&#12365;&#12394;&#12435;&#12391;&#12377;&#12369;&#12393;&#12397;&#12290;&#19968;&#26152;&#26085;&#12398;&#26481;&#20140;&#39365;&#20184;&#36817;&#12391;&#12398;&#25171;&#12385;&#21512;&#12431;&#12379;&#12398;&#24460;&#12289;&#25955;&#27497;&#12364;&#12390;&#12425;&#20037;&#12293;&#12395;&#34892;&#12387;&#12390;&#12365;&#12414;&#12375;&#12383;&#12290;&#12381;&#12375;&#12383;&#12425;&#12499;&#12483;&#12463;&#12522;&#65281;&#30456;&#22793;&#12431;&#12425;&lt;a href=&quot;http://www.abakuro.co.jp/&quot; rel=&quot;dofollow&quot;&gt;&lt;b&gt;&#12450;&#12496;&#12463;&#12525;&lt;/b&gt;&lt;/a&gt;&#12378;&#12289;&#36362;&#12387;&#12390;&#12356;&#12427;&#12384;&#12369;&#12398;&#24215;&#21729;&#12373;&#12435;&#12392;&#12363;&#12418;&#12356;&#12414;&#12375;&#12383;&#12364;&#12289;</body>
      <body-html>&lt;div&gt;&lt;p&gt;
&amp;#31169;&amp;#12398;&amp;#20013;&amp;#12391;&amp;#12289;&amp;#32207;&amp;#21512;&amp;#35413;&amp;#20385;&amp;#12398;&amp;#12392;&amp;#12387;&amp;#12390;&amp;#12418;&amp;#20302;&amp;#12356;&amp;#12450;&amp;#12496;&lt;a href=&quot;http://www.abakuro.co.jp/&quot;&gt;&lt;b&gt;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&amp;#12507;&amp;#12522;&amp;#12473;&amp;#12479;&amp;#12540;&lt;/b&gt;&lt;/a&gt;&amp;#12463;&amp;#12525;&amp;#37504;&amp;#24231;&amp;#24215;&amp;#12290;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&amp;#12399;&amp;#22823;&amp;#22909;&amp;#12365;&amp;#12394;&amp;#12435;&amp;#12391;&amp;#12377;&amp;#12369;&amp;#12393;&amp;#12397;&amp;#12290;&amp;#19968;&amp;#26152;&amp;#26085;&amp;#12398;&amp;#26481;&amp;#20140;&amp;#39365;&amp;#20184;&amp;#36817;&amp;#12391;&amp;#12398;&amp;#25171;&amp;#12385;&amp;#21512;&amp;#12431;&amp;#12379;&amp;#12398;&amp;#24460;&amp;#12289;&amp;#25955;&amp;#27497;&amp;#12364;&amp;#12390;&amp;#12425;&amp;#20037;&amp;#12293;&amp;#12395;&amp;#34892;&amp;#12387;&amp;#12390;&amp;#12365;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&amp;#12381;&amp;#12375;&amp;#12383;&amp;#12425;&amp;#12499;&amp;#12483;&amp;#12463;&amp;#12522;&amp;#65281;&amp;#30456;&amp;#22793;&amp;#12431;&amp;#12425;&lt;a href=&quot;http://www.abakuro.co.jp/&quot;&gt;&lt;b&gt;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&lt;/b&gt;&lt;/a&gt;&amp;#12378;&amp;#12289;&amp;#36362;&amp;#12387;&amp;#12390;&amp;#12356;&amp;#12427;&amp;#12384;&amp;#12369;&amp;#12398;&amp;#24215;&amp;#21729;&amp;#12373;&amp;#12435;&amp;#12392;&amp;#12363;&amp;#12418;&amp;#12356;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12364;&amp;#12289;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-05-05T02:54:50+01:00</created-at>
      <creator-id type="integer">12845</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">268</number>
      <permalink>problem-with-config-gem-and-pure-extensions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch</tag>
      <title>Problem with config.gem and &quot;pure&quot; extensions</title>
      <updated-at type="datetime">2011-05-05T02:54:59+01:00</updated-at>
      <user-id type="integer">148049</user-id>
      <version type="integer">10</version>
      <user-name>af001</user-name>
      <creator-name>Wincent Colaiuta</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/268</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>42f54b039bf3968f90e878993c5bc182d0bb9167</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-28T15:33:59+01:00</created-at>
      <filename>0001-Avoid-exceptions-in-rake-gems-due-to-uninstalled-g.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">24812</id>
      <size type="integer">1283</size>
      <uploader-id type="integer">12845</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/24812/0001-Avoid-exceptions-in-rake-gems-due-to-uninstalled-g.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>0438f14fffbf0c1b3c7dd9d6247387207475675f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-28T15:39:38+01:00</created-at>
      <filename>0002-Support-gem-dependencies-which-need-ext-in-the-loa.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">24813</id>
      <size type="integer">1115</size>
      <uploader-id type="integer">12845</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/24813/0002-Support-gem-dependencies-which-need-ext-in-the-loa.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>2c3cadc2e940967d4212e8d95067593c4e31245b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-28T16:10:04+01:00</created-at>
      <filename>0003-Prepend-frozen-gems-to-load-path-rather-than-appendi.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">24817</id>
      <size type="integer">1354</size>
      <uploader-id type="integer">12845</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/24817/0003-Prepend-frozen-gems-to-load-path-rather-than-appendi.patch</url>
    </attachment>
  </attachments>
</ticket>
