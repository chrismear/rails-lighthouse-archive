<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-08T21:16:39+01:00</created-at>
  <creator-id type="integer">22580</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">997</number>
  <permalink>dbschemadump-saves-enum-columns-as-varchar0-on-mysql</permalink>
  <priority type="integer">438</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord bug</tag>
  <title>db:schema:dump saves enum columns as varchar(0) on MySQL</title>
  <updated-at type="datetime">2010-11-02T14:02:45+00:00</updated-at>
  <user-id type="integer">85015</user-id>
  <version type="integer">3</version>
  <user-name>Joe McGlynn</user-name>
  <creator-name>Daniel Luz</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/997</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have a `gender enum('M', 'F')` column on a MySQL table (MyISAM engine). When I invoke `rake db:schema:dump`, Rails writes this column as:

    t.string &quot;gender&quot;, :limit =&gt; 0

Even if full support for enum types is not planned/desired, it should at the very least create a column with enough room for the largest possible value for that enumeration.

The `null`/`not null` constraint is correctly preserved.</original-body>
  <latest-body>I have a `gender enum('M', 'F')` column on a MySQL table (MyISAM engine). When I invoke `rake db:schema:dump`, Rails writes this column as:

    t.string &quot;gender&quot;, :limit =&gt; 0

Even if full support for enum types is not planned/desired, it should at the very least create a column with enough room for the largest possible value for that enumeration.

The `null`/`not null` constraint is correctly preserved.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a &lt;code&gt;gender enum('M', 'F')&lt;/code&gt; column on a MySQL
table (MyISAM engine). When I invoke &lt;code&gt;rake
db:schema:dump&lt;/code&gt;, Rails writes this column as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;t.string &quot;gender&quot;, :limit =&amp;gt; 0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Even if full support for enum types is not planned/desired, it
should at the very least create a column with enough room for the
largest possible value for that enumeration.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;null&lt;/code&gt;/&lt;code&gt;not null&lt;/code&gt; constraint is
correctly preserved.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a `gender enum('M', 'F')` column on a MySQL table (MyISAM engine). When I invoke `rake db:schema:dump`, Rails writes this column as:

    t.string &quot;gender&quot;, :limit =&gt; 0

Even if full support for enum types is not planned/desired, it should at the very least create a column with enough room for the largest possible value for that enumeration.

The `null`/`not null` constraint is correctly preserved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a &lt;code&gt;gender enum('M', 'F')&lt;/code&gt; column on a MySQL
table (MyISAM engine). When I invoke &lt;code&gt;rake
db:schema:dump&lt;/code&gt;, Rails writes this column as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;t.string &quot;gender&quot;, :limit =&amp;gt; 0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Even if full support for enum types is not planned/desired, it
should at the very least create a column with enough room for the
largest possible value for that enumeration.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;null&lt;/code&gt;/&lt;code&gt;not null&lt;/code&gt; constraint is
correctly preserved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-08T21:16:39+01:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">997</number>
      <permalink>dbschemadump-saves-enum-columns-as-varchar0-on-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>db:schema:dump saves enum columns as varchar(0) on MySQL</title>
      <updated-at type="datetime">2008-09-08T21:16:42+01:00</updated-at>
      <user-id type="integer">22580</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Luz</user-name>
      <creator-name>Daniel Luz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/997</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll reopen once we have a patch for this.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll reopen once we have a patch for this.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-20T15:29:30+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">997</number>
      <permalink>dbschemadump-saves-enum-columns-as-varchar0-on-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug</tag>
      <title>db:schema:dump saves enum columns as varchar(0) on MySQL</title>
      <updated-at type="datetime">2008-12-20T15:29:34+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Daniel Luz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/997</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This problem still exists in Rails 3, using rake db:schema:dump on a mysql table with an enum column creates an invalid schema.rb file.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This problem still exists in Rails 3, using rake db:schema:dump
on a mysql table with an enum column creates an invalid schema.rb
file.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-02T14:02:36+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">997</number>
      <permalink>dbschemadump-saves-enum-columns-as-varchar0-on-mysql</permalink>
      <priority type="integer">438</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug</tag>
      <title>db:schema:dump saves enum columns as varchar(0) on MySQL</title>
      <updated-at type="datetime">2010-11-02T14:02:45+00:00</updated-at>
      <user-id type="integer">85015</user-id>
      <version type="integer">3</version>
      <user-name>Joe McGlynn</user-name>
      <creator-name>Daniel Luz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/997</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
