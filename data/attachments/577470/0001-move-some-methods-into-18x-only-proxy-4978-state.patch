From 46d7d35cbaff546603fe230dda9188a9276a844b Mon Sep 17 00:00:00 2001
From: Norman Clarke <norman@njclarke.com>
Date: Fri, 25 Jun 2010 23:55:25 -0300
Subject: [PATCH] Move some methods into 1.8.x-only proxy. [#4978 state:resolved]

These methods had been overridden because they had bugs on 1.9.1.  Since
Rails now supports only 1.9.2, and these methods now work properly on
that version, there's no longer any need to override them.
---
 .../lib/active_support/multibyte/chars.rb          |   79 ++++++++++----------
 1 files changed, 39 insertions(+), 40 deletions(-)

diff --git a/activesupport/lib/active_support/multibyte/chars.rb b/activesupport/lib/active_support/multibyte/chars.rb
index 04193bf..c107aad 100644
--- a/activesupport/lib/active_support/multibyte/chars.rb
+++ b/activesupport/lib/active_support/multibyte/chars.rb
@@ -195,6 +195,45 @@ module ActiveSupport #:nodoc:
           Unicode.u_unpack(@wrapped_string)[0]
         end
 
+        # Works just like <tt>String#rjust</tt>, only integer specifies characters instead of bytes.
+        #
+        # Example:
+        #
+        #   "¾ cup".mb_chars.rjust(8).to_s
+        #   #=> "   ¾ cup"
+        #
+        #   "¾ cup".mb_chars.rjust(8, " ").to_s # Use non-breaking whitespace
+        #   #=> "   ¾ cup"
+        def rjust(integer, padstr=' ')
+          justify(integer, :right, padstr)
+        end
+
+        # Works just like <tt>String#ljust</tt>, only integer specifies characters instead of bytes.
+        #
+        # Example:
+        #
+        #   "¾ cup".mb_chars.rjust(8).to_s
+        #   #=> "¾ cup   "
+        #
+        #   "¾ cup".mb_chars.rjust(8, " ").to_s # Use non-breaking whitespace
+        #   #=> "¾ cup   "
+        def ljust(integer, padstr=' ')
+          justify(integer, :left, padstr)
+        end
+
+        # Works just like <tt>String#center</tt>, only integer specifies characters instead of bytes.
+        #
+        # Example:
+        #
+        #   "¾ cup".mb_chars.center(8).to_s
+        #   #=> " ¾ cup  "
+        #
+        #   "¾ cup".mb_chars.center(8, " ").to_s # Use non-breaking whitespace
+        #   #=> " ¾ cup  "
+        def center(integer, padstr=' ')
+          justify(integer, :center, padstr)
+        end
+
       else
         def =~(other)
           @wrapped_string =~ other
@@ -250,46 +289,6 @@ module ActiveSupport #:nodoc:
         end
       end
 
-      # Works just like <tt>String#rjust</tt>, only integer specifies characters instead of bytes.
-      #
-      # Example:
-      #
-      #   "¾ cup".mb_chars.rjust(8).to_s
-      #   #=> "   ¾ cup"
-      #
-      #   "¾ cup".mb_chars.rjust(8, " ").to_s # Use non-breaking whitespace
-      #   #=> "   ¾ cup"
-      def rjust(integer, padstr=' ')
-        justify(integer, :right, padstr)
-      end
-
-      # Works just like <tt>String#ljust</tt>, only integer specifies characters instead of bytes.
-      #
-      # Example:
-      #
-      #   "¾ cup".mb_chars.rjust(8).to_s
-      #   #=> "¾ cup   "
-      #
-      #   "¾ cup".mb_chars.rjust(8, " ").to_s # Use non-breaking whitespace
-      #   #=> "¾ cup   "
-      def ljust(integer, padstr=' ')
-        justify(integer, :left, padstr)
-      end
-
-      # Works just like <tt>String#center</tt>, only integer specifies characters instead of bytes.
-      #
-      # Example:
-      #
-      #   "¾ cup".mb_chars.center(8).to_s
-      #   #=> " ¾ cup  "
-      #
-      #   "¾ cup".mb_chars.center(8, " ").to_s # Use non-breaking whitespace
-      #   #=> " ¾ cup  "
-      def center(integer, padstr=' ')
-        justify(integer, :center, padstr)
-      end
-
-
       # Reverses all characters in the string.
       #
       # Example:
-- 
1.7.1

