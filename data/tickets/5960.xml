<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-11-12T13:54:27+00:00</created-at>
  <creator-id type="integer">117614</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5960</number>
  <permalink>small-enhancement-to-query-scopes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag nil="true"></tag>
  <title>small enhancement to query scopes</title>
  <updated-at type="datetime">2011-03-18T15:35:30+00:00</updated-at>
  <user-id type="integer">54636</user-id>
  <version type="integer">8</version>
  <user-name>greg.silcox (at cumulosity)</user-name>
  <creator-name>toby cabot</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
  <priority-name nil="true"></priority-name>
  <original-body>If you do this (which is an easy mistake for a newbie like me to make):

module RailsAdmin
  class History &lt; ActiveRecord::Base
    scope :most_recent, lambda {|table| where(&quot;tbl = ?&quot;, table).order(&quot;updated_at&quot;).last }
...

you get this crash:

ruby-1.8.7-p302 &gt; RailsAdmin::History.most_recent(&quot;Team&quot;)
NoMethodError: undefined method `includes_values' for #&lt;RailsAdmin::History:0xb6a82d78&gt;
	from {snip}/activemodel-3.0.1/lib/active_model/attribute_methods.rb:364:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:46:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `send'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `send'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `merge'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `each'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `merge'
	from {snip}/activerecord-3.0.1/lib/active_record/named_scope.rb:112:in `most_recent'
	from (irb):3

This happens because spawn_methods.merge() is trying to merge a Relation with an ActiveRecord model object (the result of the last() method at the end of the scope).</original-body>
  <latest-body>If you do this (which is an easy mistake for a newbie like me to make):

module RailsAdmin
  class History &lt; ActiveRecord::Base
    scope :most_recent, lambda {|table| where(&quot;tbl = ?&quot;, table).order(&quot;updated_at&quot;).last }
...

you get this crash:

ruby-1.8.7-p302 &gt; RailsAdmin::History.most_recent(&quot;Team&quot;)
NoMethodError: undefined method `includes_values' for #&lt;RailsAdmin::History:0xb6a82d78&gt;
	from {snip}/activemodel-3.0.1/lib/active_model/attribute_methods.rb:364:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:46:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `send'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `send'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `merge'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `each'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `merge'
	from {snip}/activerecord-3.0.1/lib/active_record/named_scope.rb:112:in `most_recent'
	from (irb):3

This happens because spawn_methods.merge() is trying to merge a Relation with an ActiveRecord model object (the result of the last() method at the end of the scope).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If you do this (which is an easy mistake for a newbie like me to
make):&lt;/p&gt;
&lt;p&gt;module RailsAdmin&lt;br&gt;
class History &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;scope :most_recent, lambda {|table| where(&quot;tbl = ?&quot;, table).order(&quot;updated_at&quot;).last }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;you get this crash:&lt;/p&gt;
&lt;p&gt;ruby-1.8.7-p302 &amp;gt; RailsAdmin::History.most_recent(&quot;Team&quot;)&lt;br&gt;
NoMethodError: undefined method &lt;code&gt;includes_values' for
#&amp;lt;RailsAdmin::History:0xb6a82d78&amp;gt;&amp;lt;br/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from {snip}/activemodel-3.0.1/lib/active_model/attribute_methods.rb:364:in `method_missing'
from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:46:in `method_missing'
from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `send'
from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `method_missing'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `send'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `merge'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `each'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `merge'
from {snip}/activerecord-3.0.1/lib/active_record/named_scope.rb:112:in `most_recent'
from (irb):3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This happens because spawn_methods.merge() is trying to merge a
Relation with an ActiveRecord model object (the result of the
last() method at the end of the scope).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you do this (which is an easy mistake for a newbie like me to make):

module RailsAdmin
  class History &lt; ActiveRecord::Base
    scope :most_recent, lambda {|table| where(&quot;tbl = ?&quot;, table).order(&quot;updated_at&quot;).last }
...

you get this crash:

ruby-1.8.7-p302 &gt; RailsAdmin::History.most_recent(&quot;Team&quot;)
NoMethodError: undefined method `includes_values' for #&lt;RailsAdmin::History:0xb6a82d78&gt;
	from {snip}/activemodel-3.0.1/lib/active_model/attribute_methods.rb:364:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:46:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `send'
	from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `method_missing'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `send'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `merge'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `each'
	from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `merge'
	from {snip}/activerecord-3.0.1/lib/active_record/named_scope.rb:112:in `most_recent'
	from (irb):3

This happens because spawn_methods.merge() is trying to merge a Relation with an ActiveRecord model object (the result of the last() method at the end of the scope).</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you do this (which is an easy mistake for a newbie like me to
make):&lt;/p&gt;
&lt;p&gt;module RailsAdmin&lt;br&gt;
class History &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;scope :most_recent, lambda {|table| where(&quot;tbl = ?&quot;, table).order(&quot;updated_at&quot;).last }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;you get this crash:&lt;/p&gt;
&lt;p&gt;ruby-1.8.7-p302 &amp;gt; RailsAdmin::History.most_recent(&quot;Team&quot;)&lt;br&gt;
NoMethodError: undefined method &lt;code&gt;includes_values' for
#&amp;lt;RailsAdmin::History:0xb6a82d78&amp;gt;&amp;lt;br/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from {snip}/activemodel-3.0.1/lib/active_model/attribute_methods.rb:364:in `method_missing'
from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:46:in `method_missing'
from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `send'
from {snip}/activerecord-3.0.1/lib/active_record/attribute_methods.rb:44:in `method_missing'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `send'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:10:in `merge'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `each'
from {snip}/activerecord-3.0.1/lib/active_record/relation/spawn_methods.rb:9:in `merge'
from {snip}/activerecord-3.0.1/lib/active_record/named_scope.rb:112:in `most_recent'
from (irb):3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This happens because spawn_methods.merge() is trying to merge a
Relation with an ActiveRecord model object (the result of the
last() method at the end of the scope).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-12T13:54:27+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2010-11-12T13:54:29+00:00</updated-at>
      <user-id type="integer">117614</user-id>
      <version type="integer">1</version>
      <user-name>toby cabot</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a small patch that allows this behavior.  It adds a special case to the scope processing (there were already 3 cases so this isn't a big change) that avoids the merge when the result of the scope is a single AR model object.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a small patch that allows this behavior. It adds a
special case to the scope processing (there were already 3 cases so
this isn't a big change) that avoids the merge when the result of
the scope is a single AR model object.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-12T13:58:59+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2010-11-12T13:59:00+00:00</updated-at>
      <user-id type="integer">117614</user-id>
      <version type="integer">2</version>
      <user-name>toby cabot</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T20:15:51+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; patch</tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2010-11-15T20:15:54+00:00</updated-at>
      <user-id type="integer">117614</user-id>
      <version type="integer">3</version>
      <user-name>toby cabot</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-16T00:00:09+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; patch</tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2011-02-16T00:00:12+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T00:00:09+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord rails3&quot; patch</tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2011-02-16T00:00:28+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">5</version>
      <user-name>rails</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm still having this issue with rails 3.0.5. There is a patch above, can that be pulled into the main codebase?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm still having this issue with rails 3.0.5. There is a patch
above, can that be pulled into the main codebase?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-08T13:09:01+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord rails3&quot; patch</tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2011-03-08T13:09:05+00:00</updated-at>
      <user-id type="integer">130800</user-id>
      <version type="integer">6</version>
      <user-name>Jeff Gardner</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[state:open]

This is a small but, I think, worthwhile change to make Rails scopes a little more forgiving to new users.

I've rebased the patch (5960-2.diff) so it applies cleanly to 7bd70dc.</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open]&lt;/p&gt;
&lt;p&gt;This is a small but, I think, worthwhile change to make Rails
scopes a little more forgiving to new users.&lt;/p&gt;
&lt;p&gt;I've rebased the patch (5960-2.diff) so it applies cleanly to
7bd70dc.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-15T21:37:06+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord rails3\&quot; patch&quot;
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2011-03-15T22:27:00+00:00</updated-at>
      <user-id type="integer">117614</user-id>
      <version type="integer">7</version>
      <user-name>toby cabot</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm also having this problem in rails 3.0.5. My scope looks a lot like the example given above:

class StudentSession &lt; ActiveRecord::Base
  scope :last_updated, lambda { |user_id, group_id| 
    where( :student_id =&gt; user_id, :group_id =&gt; group_id ).
    StudentSession.order( :updated_at ).first }
end

It seems to only happen when I have a single record that matches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm also having this problem in rails 3.0.5. My scope looks a
lot like the example given above:&lt;/p&gt;
&lt;p&gt;class StudentSession &amp;lt; ActiveRecord::Base&lt;br&gt;
scope :last_updated, lambda { |user_id, group_id|&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;where( :student_id =&amp;gt; user_id, :group_id =&amp;gt; group_id ).
StudentSession.order( :updated_at ).first }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;It seems to only happen when I have a single record that
matches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-18T15:35:25+00:00</created-at>
      <creator-id type="integer">117614</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5960</number>
      <permalink>small-enhancement-to-query-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>small enhancement to query scopes</title>
      <updated-at type="datetime">2011-03-18T15:35:30+00:00</updated-at>
      <user-id type="integer">54636</user-id>
      <version type="integer">8</version>
      <user-name>greg.silcox (at cumulosity)</user-name>
      <creator-name>toby cabot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5960</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>8afc3e2048d7ef6b6d75061f7ad45f2556e8710e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-12T13:58:59+00:00</created-at>
      <filename>5960.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">767933</id>
      <size type="integer">3621</size>
      <uploader-id type="integer">117614</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/767933/5960.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>6ce315d2387427e348fc028a3ce29f1ca970d8fe</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-15T21:37:06+00:00</created-at>
      <filename>5960-2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">960547</id>
      <size type="integer">3615</size>
      <uploader-id type="integer">117614</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/960547/5960-2.diff</url>
    </attachment>
  </attachments>
</ticket>
