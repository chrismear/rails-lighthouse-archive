<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-15T12:07:18+00:00</created-at>
  <creator-id type="integer">124953</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5974</number>
  <permalink>link_to-fails-if-underlying-db-record-does-not-have-an-id-field-rails-301-ruby-192</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>link_to() fails if underlying db record does not have an &quot;id&quot; field (Rails 3.0.1, Ruby 1.9.2)</title>
  <updated-at type="datetime">2010-11-15T14:24:26+00:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>flajann</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5974</url>
  <priority-name>Low</priority-name>
  <original-body>link_to() fails with:

No route matches {:action=&gt;&quot;edit&quot;, :controller=&gt;&quot;agents&quot;, :id=&gt;#&lt;Agent a_id: 1, a_userid: &quot;furby&quot;, a_givenname: &quot;F&quot;, a_surname: &quot;M&quot;,  a_email: &quot;somemail@mail.com&quot;, a_source_id: &quot;3jqfbr&quot;&gt;}

Even though set_primary_key is defined:

class Agent &lt; ActiveRecord::Base
  set_primary_key = 'a_id'
end

Workaround: one can set id prior to calling and all will work:

agent.id = agent.a_id
link_to 'Edit', edit_agent_path(@agent)

This is with Rails 3.0.1, Ruby 1.9.2</original-body>
  <latest-body>link_to() fails with:

No route matches {:action=&gt;&quot;edit&quot;, :controller=&gt;&quot;agents&quot;, :id=&gt;#&lt;Agent a_id: 1, a_userid: &quot;furby&quot;, a_givenname: &quot;F&quot;, a_surname: &quot;M&quot;,  a_email: &quot;somemail@mail.com&quot;, a_source_id: &quot;3jqfbr&quot;&gt;}

Even though set_primary_key is defined:

class Agent &lt; ActiveRecord::Base
  set_primary_key = 'a_id'
end

Workaround: one can set id prior to calling and all will work:

agent.id = agent.a_id
link_to 'Edit', edit_agent_path(@agent)

This is with Rails 3.0.1, Ruby 1.9.2</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;link_to() fails with:&lt;/p&gt;
&lt;p&gt;No route matches {:action=&amp;gt;&quot;edit&quot;, :controller=&amp;gt;&quot;agents&quot;,
:id=&amp;gt;#}&lt;/p&gt;
&lt;p&gt;Even though set_primary_key is defined:&lt;/p&gt;
&lt;p&gt;class Agent &amp;lt; ActiveRecord::Base&lt;br&gt;
set_primary_key = 'a_id' end&lt;/p&gt;
&lt;p&gt;Workaround: one can set id prior to calling and all will
work:&lt;/p&gt;
&lt;p&gt;agent.id = agent.a_id&lt;br&gt;
link_to 'Edit', edit_agent_path(@agent)&lt;/p&gt;
&lt;p&gt;This is with Rails 3.0.1, Ruby 1.9.2&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>link_to() fails with:

No route matches {:action=&gt;&quot;edit&quot;, :controller=&gt;&quot;agents&quot;, :id=&gt;#&lt;Agent a_id: 1, a_userid: &quot;furby&quot;, a_givenname: &quot;F&quot;, a_surname: &quot;M&quot;,  a_email: &quot;somemail@mail.com&quot;, a_source_id: &quot;3jqfbr&quot;&gt;}

Even though set_primary_key is defined:

class Agent &lt; ActiveRecord::Base
  set_primary_key = 'a_id'
end

Workaround: one can set id prior to calling and all will work:

agent.id = agent.a_id
link_to 'Edit', edit_agent_path(@agent)

This is with Rails 3.0.1, Ruby 1.9.2</body>
      <body-html>&lt;div&gt;&lt;p&gt;link_to() fails with:&lt;/p&gt;
&lt;p&gt;No route matches {:action=&amp;gt;&quot;edit&quot;, :controller=&amp;gt;&quot;agents&quot;,
:id=&amp;gt;#}&lt;/p&gt;
&lt;p&gt;Even though set_primary_key is defined:&lt;/p&gt;
&lt;p&gt;class Agent &amp;lt; ActiveRecord::Base&lt;br&gt;
set_primary_key = 'a_id' end&lt;/p&gt;
&lt;p&gt;Workaround: one can set id prior to calling and all will
work:&lt;/p&gt;
&lt;p&gt;agent.id = agent.a_id&lt;br&gt;
link_to 'Edit', edit_agent_path(@agent)&lt;/p&gt;
&lt;p&gt;This is with Rails 3.0.1, Ruby 1.9.2&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T12:07:18+00:00</created-at>
      <creator-id type="integer">124953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5974</number>
      <permalink>link_to-fails-if-underlying-db-record-does-not-have-an-id-field-rails-301-ruby-192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>link_to() fails if underlying db record does not have an &quot;id&quot; field (Rails 3.0.1, Ruby 1.9.2)</title>
      <updated-at type="datetime">2010-11-15T12:07:22+00:00</updated-at>
      <user-id type="integer">124953</user-id>
      <version type="integer">1</version>
      <user-name>flajann</user-name>
      <creator-name>flajann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5974</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a non-issue. Please ignore this ticket.

The error was on my part doing

set_primary_key = 'a_id'

When it should've been

set_primary_key 'a_id'

I didn't need the '=' sign, and the parser didn't complain about it -- probably treated it as a regular assignment.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a non-issue. Please ignore this ticket.&lt;/p&gt;
&lt;p&gt;The error was on my part doing&lt;/p&gt;
&lt;p&gt;set_primary_key = 'a_id'&lt;/p&gt;
&lt;p&gt;When it should've been&lt;/p&gt;
&lt;p&gt;set_primary_key 'a_id'&lt;/p&gt;
&lt;p&gt;I didn't need the '=' sign, and the parser didn't complain about
it -- probably treated it as a regular assignment.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T12:38:12+00:00</created-at>
      <creator-id type="integer">124953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5974</number>
      <permalink>link_to-fails-if-underlying-db-record-does-not-have-an-id-field-rails-301-ruby-192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>link_to() fails if underlying db record does not have an &quot;id&quot; field (Rails 3.0.1, Ruby 1.9.2)</title>
      <updated-at type="datetime">2010-11-15T12:38:16+00:00</updated-at>
      <user-id type="integer">124953</user-id>
      <version type="integer">2</version>
      <user-name>flajann</user-name>
      <creator-name>flajann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5974</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-15T14:24:23+00:00</created-at>
      <creator-id type="integer">124953</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5974</number>
      <permalink>link_to-fails-if-underlying-db-record-does-not-have-an-id-field-rails-301-ruby-192</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>link_to() fails if underlying db record does not have an &quot;id&quot; field (Rails 3.0.1, Ruby 1.9.2)</title>
      <updated-at type="datetime">2010-11-15T14:24:26+00:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>flajann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5974</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
