diff --git a/actionpack/lib/action_controller/base.rb b/actionpack/lib/action_controller/base.rb
index e1bf005..e1abd0f 100755
--- a/actionpack/lib/action_controller/base.rb
+++ b/actionpack/lib/action_controller/base.rb
@@ -504,6 +504,7 @@ module ActionController #:nodoc:
 
           filtered_parameters
         end
+        self.class_eval{ protected :filter_parameters }
       end
 
       # Don't render layouts for templates with the given extensions.
diff --git a/actionpack/test/controller/filter_params_test.rb b/actionpack/test/controller/filter_params_test.rb
old mode 100644
new mode 100755
index 11adacb..194178d
--- a/actionpack/test/controller/filter_params_test.rb
+++ b/actionpack/test/controller/filter_params_test.rb
@@ -27,7 +27,7 @@ class FilterParamTest < Test::Unit::TestCase
     
     test_hashes.each do |before_filter, after_filter, filter_words|
       FilterParamController.filter_parameter_logging(*filter_words)
-      assert_equal after_filter, @controller.filter_parameters(before_filter)
+      assert_equal after_filter, @controller.send!(:filter_parameters, before_filter)
       
       filter_words.push('blah')
       FilterParamController.filter_parameter_logging(*filter_words) do |key, value|
@@ -37,7 +37,13 @@ class FilterParamTest < Test::Unit::TestCase
       before_filter['barg'] = {'bargain'=>'gain', 'blah'=>'bar', 'bar'=>{'bargain'=>{'blah'=>'foo'}}}
       after_filter['barg'] = {'bargain'=>'niag', 'blah'=>'[FILTERED]', 'bar'=>{'bargain'=>{'blah'=>'[FILTERED]'}}}
 
-      assert_equal after_filter, @controller.filter_parameters(before_filter)
+      assert_equal after_filter, @controller.send!(:filter_parameters, before_filter)
     end
   end
+  
+  def test_filter_parameters_is_protected
+    FilterParamController.filter_parameter_logging
+    assert !@controller.send!(:action_methods).include?(:filter_parameters)
+    assert (begin @controller.filter_parameters rescue true end)
+  end
 end
