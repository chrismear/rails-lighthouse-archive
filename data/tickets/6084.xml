<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-19T09:28:28+00:00</created-at>
  <creator-id type="integer">42669</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6084</number>
  <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
  <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
  <updated-at type="datetime">2011-03-26T02:06:21+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">12</version>
  <user-name>bingbing</user-name>
  <creator-name>C. Bedard</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
  <priority-name nil="true"></priority-name>
  <original-body>Given the following associated models:

    class Client &lt; ActiveRecord::Base
      has_many :orders
    end
   
    class Order &lt; ActiveRecord::Base
      belongs_to :client
    end
   
And let's say I have an orders controller in which a Client creates their orders:

    class OrdersController &lt; ApplicationController
      def create
        @client.orders.create(params[:order])
      end
    end

This mass-assignment, in Rails 2.X.X, would always ensure that the Order Object belonged to the association owner, by forcing the foreign key (`client_id`) to that of `@client`.

With Rails 3.0.3, the behavior has changed, making it possible to inject a foreign key simply by setting it. So, in this example, if `params[:order]` happens to have a `:client_id` key, that value will override the associations's owner id. In other words, the AR scope that is specified by `@client.orders` doesn't enforce itself when creating associated objects.

This may also represent a &quot;security&quot; vulnerability, as anyone can easily infer the foreign key column name (Rails makes it pretty easy) and inject a value submitted in a form, that can create objects belonging to other objects that should not be acessible in this way.

Also, calling `@client.orders.build(params[:order])` does enforce the correct scope attributes (as would be expected).

I am not familiar with the internals of the new AR querying interface, but having investigated a bit, it all seems to originate in `ActiveRecord::Base#with_scope`, where improper merging of attributes occurs with construct_scope attributes.</original-body>
  <latest-body>Given the following associated models:

    class Client &lt; ActiveRecord::Base
      has_many :orders
    end
   
    class Order &lt; ActiveRecord::Base
      belongs_to :client
    end
   
And let's say I have an orders controller in which a Client creates their orders:

    class OrdersController &lt; ApplicationController
      def create
        @client.orders.create(params[:order])
      end
    end

This mass-assignment, in Rails 2.X.X, would always ensure that the Order Object belonged to the association owner, by forcing the foreign key (`client_id`) to that of `@client`.

With Rails 3.0.3, the behavior has changed, making it possible to inject a foreign key simply by setting it. So, in this example, if `params[:order]` happens to have a `:client_id` key, that value will override the associations's owner id. In other words, the AR scope that is specified by `@client.orders` doesn't enforce itself when creating associated objects.

This may also represent a &quot;security&quot; vulnerability, as anyone can easily infer the foreign key column name (Rails makes it pretty easy) and inject a value submitted in a form, that can create objects belonging to other objects that should not be acessible in this way.

Also, calling `@client.orders.build(params[:order])` does enforce the correct scope attributes (as would be expected).

I am not familiar with the internals of the new AR querying interface, but having investigated a bit, it all seems to originate in `ActiveRecord::Base#with_scope`, where improper merging of attributes occurs with construct_scope attributes.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given the following associated models:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Client &amp;lt; ActiveRecord::Base
  has_many :orders
end

class Order &amp;lt; ActiveRecord::Base
  belongs_to :client
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And let's say I have an orders controller in which a Client
creates their orders:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class OrdersController &amp;lt; ApplicationController
  def create
    @client.orders.create(params[:order])
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This mass-assignment, in Rails 2.X.X, would always ensure that
the Order Object belonged to the association owner, by forcing the
foreign key (&lt;code&gt;client_id&lt;/code&gt;) to that of
&lt;code&gt;@client&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With Rails 3.0.3, the behavior has changed, making it possible
to inject a foreign key simply by setting it. So, in this example,
if &lt;code&gt;params[:order]&lt;/code&gt; happens to have a
&lt;code&gt;:client_id&lt;/code&gt; key, that value will override the
associations's owner id. In other words, the AR scope that is
specified by &lt;code&gt;@client.orders&lt;/code&gt; doesn't enforce itself
when creating associated objects.&lt;/p&gt;
&lt;p&gt;This may also represent a &quot;security&quot; vulnerability, as anyone
can easily infer the foreign key column name (Rails makes it pretty
easy) and inject a value submitted in a form, that can create
objects belonging to other objects that should not be acessible in
this way.&lt;/p&gt;
&lt;p&gt;Also, calling &lt;code&gt;@client.orders.build(params[:order])&lt;/code&gt;
does enforce the correct scope attributes (as would be
expected).&lt;/p&gt;
&lt;p&gt;I am not familiar with the internals of the new AR querying
interface, but having investigated a bit, it all seems to originate
in &lt;code&gt;ActiveRecord::Base#with_scope&lt;/code&gt;, where improper
merging of attributes occurs with construct_scope attributes.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given the following associated models:

    class Client &lt; ActiveRecord::Base
      has_many :orders
    end
   
    class Order &lt; ActiveRecord::Base
      belongs_to :client
    end
   
And let's say I have an orders controller in which a Client creates their orders:

    class OrdersController &lt; ApplicationController
      def create
        @client.orders.create(params[:order])
      end
    end

This mass-assignment, in Rails 2.X.X, would always ensure that the Order Object belonged to the association owner, by forcing the foreign key (`client_id`) to that of `@client`.

With Rails 3.0.3, the behavior has changed, making it possible to inject a foreign key simply by setting it. So, in this example, if `params[:order]` happens to have a `:client_id` key, that value will override the associations's owner id. In other words, the AR scope that is specified by `@client.orders` doesn't enforce itself when creating associated objects.

This may also represent a &quot;security&quot; vulnerability, as anyone can easily infer the foreign key column name (Rails makes it pretty easy) and inject a value submitted in a form, that can create objects belonging to other objects that should not be acessible in this way.

Also, calling `@client.orders.build(params[:order])` does enforce the correct scope attributes (as would be expected).

I am not familiar with the internals of the new AR querying interface, but having investigated a bit, it all seems to originate in `ActiveRecord::Base#with_scope`, where improper merging of attributes occurs with construct_scope attributes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given the following associated models:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Client &amp;lt; ActiveRecord::Base
  has_many :orders
end

class Order &amp;lt; ActiveRecord::Base
  belongs_to :client
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And let's say I have an orders controller in which a Client
creates their orders:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class OrdersController &amp;lt; ApplicationController
  def create
    @client.orders.create(params[:order])
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This mass-assignment, in Rails 2.X.X, would always ensure that
the Order Object belonged to the association owner, by forcing the
foreign key (&lt;code&gt;client_id&lt;/code&gt;) to that of
&lt;code&gt;@client&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With Rails 3.0.3, the behavior has changed, making it possible
to inject a foreign key simply by setting it. So, in this example,
if &lt;code&gt;params[:order]&lt;/code&gt; happens to have a
&lt;code&gt;:client_id&lt;/code&gt; key, that value will override the
associations's owner id. In other words, the AR scope that is
specified by &lt;code&gt;@client.orders&lt;/code&gt; doesn't enforce itself
when creating associated objects.&lt;/p&gt;
&lt;p&gt;This may also represent a &quot;security&quot; vulnerability, as anyone
can easily infer the foreign key column name (Rails makes it pretty
easy) and inject a value submitted in a form, that can create
objects belonging to other objects that should not be acessible in
this way.&lt;/p&gt;
&lt;p&gt;Also, calling &lt;code&gt;@client.orders.build(params[:order])&lt;/code&gt;
does enforce the correct scope attributes (as would be
expected).&lt;/p&gt;
&lt;p&gt;I am not familiar with the internals of the new AR querying
interface, but having investigated a bit, it all seems to originate
in &lt;code&gt;ActiveRecord::Base#with_scope&lt;/code&gt;, where improper
merging of attributes occurs with construct_scope attributes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T20:58:58+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2010-11-29T20:59:01+00:00</updated-at>
      <user-id type="integer">42669</user-id>
      <version type="integer">1</version>
      <user-name>C. Bedard</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>More on this issue:

I initially thought the problem was in `ActiveRecord::Base#with_scope` but now after more digging, I found out the problem originates in `ActiveRecord::Base#initialize`, where 2 lines should be reversed in order for scope attributes to be assigned *after* the attributes Hash that is received as a parameter. Currently the method goes like this:

    def initialize(attributes = nil)
      ....
      ....      
      ensure_proper_type
      
      # THE FOLLOWING 2 LINES SHOULD BE REVERSED!
      populate_with_current_scope_attributes
      self.attributes = attributes unless attributes.nil?
      
      result = yield self if block_given?
      _run_initialize_callbacks
      result
    end

The reason is simple: as it is right now, the scope attributes are first assigned, but then attributes are **overwritten with the attributes Hash passed as a parameter**. Reversing those to lines solves the problem. 

Attached is the patch acting on `ActiveRecord::Base#initialize`, which simply assigns scope attributes after the attributes parameter, therby enforcing the scope attributes over the parameter attributes.

This is, by the way, the way it was done in Rails 2. Maybe there is a reason for this in Rails 3, but it is not readily apparent.</body>
      <body-html>&lt;div&gt;&lt;p&gt;More on this issue:&lt;/p&gt;
&lt;p&gt;I initially thought the problem was in
&lt;code&gt;ActiveRecord::Base#with_scope&lt;/code&gt; but now after more
digging, I found out the problem originates in
&lt;code&gt;ActiveRecord::Base#initialize&lt;/code&gt;, where 2 lines should be
reversed in order for scope attributes to be assigned
&lt;em&gt;after&lt;/em&gt; the attributes Hash that is received as a parameter.
Currently the method goes like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def initialize(attributes = nil)
  ....
  ....      
  ensure_proper_type

  # THE FOLLOWING 2 LINES SHOULD BE REVERSED!
  populate_with_current_scope_attributes
  self.attributes = attributes unless attributes.nil?

  result = yield self if block_given?
  _run_initialize_callbacks
  result
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The reason is simple: as it is right now, the scope attributes
are first assigned, but then attributes are &lt;strong&gt;overwritten
with the attributes Hash passed as a parameter&lt;/strong&gt;. Reversing
those to lines solves the problem.&lt;/p&gt;
&lt;p&gt;Attached is the patch acting on
&lt;code&gt;ActiveRecord::Base#initialize&lt;/code&gt;, which simply assigns
scope attributes after the attributes parameter, therby enforcing
the scope attributes over the parameter attributes.&lt;/p&gt;
&lt;p&gt;This is, by the way, the way it was done in Rails 2. Maybe there
is a reason for this in Rails 3, but it is not readily
apparent.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-30T19:59:28+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord rails3\&quot; associations build create scope with_scope&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2010-11-30T19:59:32+00:00</updated-at>
      <user-id type="integer">42669</user-id>
      <version type="integer">2</version>
      <user-name>C. Bedard</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I confirm that this bug exists in edge. And it is potentially a problem, since I can see someone doing something like this:

@@@ ruby
post = Post.where(:title =&gt; &quot;My Favorite Things&quot;)
post_dup = Post.where(:title =&gt; &quot;My Favorite Thingz&quot;)

comment = post_dup.comments.first
post.comments.create(comment.attributes)
@@@

However, the above patch breaks other AR functionality (some of the tests fail) so I created tests for the problem and I've attached a new fix that passes all tests. In short, the build methods on has_one/has_many call #set_belongs_to_association_for but the create methods do not. I refactored the has_one create methods to operate similarly to the has_many create methods and added in a call to #set_belongs_to_association_for for both association types.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I confirm that this bug exists in edge. And it is potentially a
problem, since I can see someone doing something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;post = Post.where(:title =&amp;gt; &quot;My Favorite Things&quot;)
post_dup = Post.where(:title =&amp;gt; &quot;My Favorite Thingz&quot;)

comment = post_dup.comments.first
post.comments.create(comment.attributes)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, the above patch breaks other AR functionality (some of
the tests fail) so I created tests for the problem and I've
attached a new fix that passes all tests. In short, the build
methods on has_one/has_many call #set_belongs_to_association_for
but the create methods do not. I refactored the has_one create
methods to operate similarly to the has_many create methods and
added in a call to #set_belongs_to_association_for for both
association types.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-04T19:28:36+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2010-12-04T19:28:39+00:00</updated-at>
      <user-id type="integer">127658</user-id>
      <version type="integer">3</version>
      <user-name>Mike Ragalie</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-28T02:06:28+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2010-12-28T03:36:04+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">4</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>student of the well-known big &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt;  words, there are two situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers shoes&lt;/a&gt;  particularly good in all aspects and all  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good students are particularly bad bad student. However,  &lt;a href=&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not a particularly good good student nor is it particularly  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student. However, more often, he can show himself, for &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt;  example, what show what activities and the like, especially &lt;a href=&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap Vibram Fivefingers Women Shoes&lt;/a&gt;  basketball</body>
      <body-html>&lt;div&gt;&lt;p&gt;student of the well-known big &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt; words, there are two
situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers
shoes&lt;/a&gt; particularly good in all aspects and all &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good
students are particularly bad bad student. However, &lt;a href=
&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men
Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not
a particularly good good student nor is it particularly &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student.
However, more often, he can show himself, for &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt; example, what
show what activities and the like, especially &lt;a href=
&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap
Vibram Fivefingers Women Shoes&lt;/a&gt; basketball&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-28T08:19:55+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-01-28T08:44:30+00:00</updated-at>
      <user-id type="integer">134634</user-id>
      <version type="integer">5</version>
      <user-name>songqiudong</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1 for Mike's patch. I definitely agree that this is unexpected behaviour and might raise a security eyebrow.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for Mike's patch. I definitely agree that this is unexpected
behaviour and might raise a security eyebrow.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-29T04:01:33+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-01-29T04:01:38+00:00</updated-at>
      <user-id type="integer">39818</user-id>
      <version type="integer">6</version>
      <user-name>Jesse Storimer</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T02:12:03+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-02-14T05:41:53+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">7</version>
      <user-name>xixi</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T04:30:26+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-02-14T05:42:04+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">8</version>
      <user-name>xixi</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>outdoor &lt;a href=http://www.moncler-ugg.com&gt;ugg classic crochet&lt;/a&gt; outlet for the same object from traditional ladies slippers tomind &#8220;&lt;a href=http://www.moncler-ugg.com&gt;ugg kid boots&lt;/a&gt; outside men are stupid? to look smart, if you bring in theinside theoutside o. All the shoes are Foruse right, while bars to be flexible and comfortable, offering the best of both worlds.If you&#8217;re always afraid of what you wear with them, there are plenty of places online, such as the Forum of Yahoo Answers, what advice would you give to the tree appropriate to wear with boots.
solid hiking &lt;a href=http://www.moncler-ugg.com&gt;uggs for cheap&lt;/a&gt; outlet stores  &#8211; cheap &lt;a href=http://www.moncler-ugg.com&gt;ugg ultra tall&lt;/a&gt; Boots UK Teman this line is perfect for outdoor enthusiasts. Chunky soles of boots with a style of motorcycle, and waterproof? or to be easy to apply and remove, these &lt;a href=http://www.moncler-ugg.com&gt;ugg classic mini&lt;/a&gt; boots are popular with fans worldwide. &lt;a href=http://www.moncler-ugg.com&gt;ugg classic short&lt;/a&gt;, these boots are lined with sheepskin to provide heat and yet real comfort. For six months the net loss of the season &lt;a href=http://www.moncler-ugg.com&gt;ugg classic cardy&lt;/a&gt; was 4.5 million &#8211; an improvement compared to a net loss of 5.2 million euros during the first six months of last year. growth in cash flow was much stronger, however.</body>
      <body-html>&lt;div&gt;&lt;p&gt;outdoor &lt;a href=&quot;http:&quot;&gt;ugg classic crochet outlet for the same
object from traditional ladies slippers tomind &amp;#8220;&lt;a href=
&quot;http:&quot;&gt;ugg kid boots outside men are stupid? to look smart, if you
bring in theinside theoutside o. All the shoes are Foruse right,
while bars to be flexible and comfortable, offering the best of
both worlds.If you&amp;#8217;re always afraid of what you wear with
them, there are plenty of places online, such as the Forum of Yahoo
Answers, what advice would you give to the tree appropriate to wear
with boots.&lt;br&gt;
solid hiking &lt;a href=&quot;http:&quot;&gt;uggs for cheap outlet stores &amp;#8211;
cheap &lt;a href=&quot;http:&quot;&gt;ugg ultra tall Boots UK Teman this line is
perfect for outdoor enthusiasts. Chunky soles of boots with a style
of motorcycle, and waterproof? or to be easy to apply and remove,
these &lt;a href=&quot;http:&quot;&gt;ugg classic mini boots are popular with fans
worldwide. &lt;a href=&quot;http:&quot;&gt;ugg classic short, these boots are lined
with sheepskin to provide heat and yet real comfort. For six months
the net loss of the season &lt;a href=&quot;http:&quot;&gt;ugg classic cardy was
4.5 million &amp;#8211; an improvement compared to a net loss of 5.2
million euros during the first six months of last year. growth in
cash flow was much stronger, however.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-19T02:17:02+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-02-19T09:28:22+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">9</version>
      <user-name>mklo</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>outdoor &lt;a href=http://www.moncler-ugg.com&gt;ugg classic crochet&lt;/a&gt; outlet for the same object from traditional ladies slippers tomind &#8220;&lt;a href=http://www.moncler-ugg.com&gt;ugg kid boots&lt;/a&gt; outside men are stupid? to look smart, if you bring in theinside theoutside o. All the shoes are Foruse right, while bars to be flexible and comfortable, offering the best of both worlds.If you&#8217;re always afraid of what you wear with them, there are plenty of places online, such as the Forum of Yahoo Answers, what advice would you give to the tree appropriate to wear with boots.
solid hiking &lt;a href=http://www.moncler-ugg.com&gt;uggs for cheap&lt;/a&gt; outlet stores  &#8211; cheap &lt;a href=http://www.moncler-ugg.com&gt;ugg ultra tall&lt;/a&gt; Boots UK Teman this line is perfect for outdoor enthusiasts. Chunky soles of boots with a style of motorcycle, and waterproof? or to be easy to apply and remove, these &lt;a href=http://www.moncler-ugg.com&gt;ugg classic mini&lt;/a&gt; boots are popular with fans worldwide. &lt;a href=http://www.moncler-ugg.com&gt;ugg classic short&lt;/a&gt;, these boots are lined with sheepskin to provide heat and yet real comfort. For six months the net loss of the season &lt;a href=http://www.moncler-ugg.com&gt;ugg classic cardy&lt;/a&gt; was 4.5 million &#8211; an improvement compared to a net loss of 5.2 million euros during the first six months of last year. growth in cash flow was much stronger, however.</body>
      <body-html>&lt;div&gt;&lt;p&gt;outdoor &lt;a href=&quot;http:&quot;&gt;ugg classic crochet outlet for the same
object from traditional ladies slippers tomind &amp;#8220;&lt;a href=
&quot;http:&quot;&gt;ugg kid boots outside men are stupid? to look smart, if you
bring in theinside theoutside o. All the shoes are Foruse right,
while bars to be flexible and comfortable, offering the best of
both worlds.If you&amp;#8217;re always afraid of what you wear with
them, there are plenty of places online, such as the Forum of Yahoo
Answers, what advice would you give to the tree appropriate to wear
with boots.&lt;br&gt;
solid hiking &lt;a href=&quot;http:&quot;&gt;uggs for cheap outlet stores &amp;#8211;
cheap &lt;a href=&quot;http:&quot;&gt;ugg ultra tall Boots UK Teman this line is
perfect for outdoor enthusiasts. Chunky soles of boots with a style
of motorcycle, and waterproof? or to be easy to apply and remove,
these &lt;a href=&quot;http:&quot;&gt;ugg classic mini boots are popular with fans
worldwide. &lt;a href=&quot;http:&quot;&gt;ugg classic short, these boots are lined
with sheepskin to provide heat and yet real comfort. For six months
the net loss of the season &lt;a href=&quot;http:&quot;&gt;ugg classic cardy was
4.5 million &amp;#8211; an improvement compared to a net loss of 5.2
million euros during the first six months of last year. growth in
cash flow was much stronger, however.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-19T02:18:04+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-02-19T09:28:22+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">10</version>
      <user-name>mklo</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>If you are after a pair of great looking and style UGG boots to wear during the winter months, then you can not go far wrong with getting yourself a pair of the &lt;a href=http://www.moncler-ugg.com&gt;ugg classic crochet&lt;/a&gt; Tall&#8217;s. Even though these boots have been around for a few years now they are likely to grow in popularity now. This is because they were recently featured in Oprah Winfrey&#8217;s Favorite Things show.
The UGG Classic Crochet is a new addition to the popular Classic collection with its slouchy styling and colorful knit uppers (polyester and wool blend). A sheepskin footbed provides the extra comfort that UGG boot and &lt;a href=http://www.moncler-ugg.com&gt;ugg classic crochet&lt;/a&gt; is well-known for. A light and flexible outsole paired with a new decorative label makes this boot perfect for spring. The Classic Crochet boot can be cuffed or styled any creative way to personalize your look. As with the UGG Classic Cardy boot, the Crochet can either be worn with jeans. Or you can wear them pushed down so that they have slouched feel and look to them. But it does not matter what they are worn with or they way in which they are worn they will still help you to make quite a statement about yourself. Today&#8217;s women have become fashion conscious. They are going to almost any extent to look good and attractive. It has become important to look good. In fact, it is one of the most important factors that will decide success in various areas of life. It can boost up your confidence level.
As mentioned earlier the &lt;a href=http://www.moncler-ugg.com&gt;uggs for cheap&lt;/a&gt;Crochet Tall boots are going to grow in popularity this season, just because Oprah Winfrey included them in her Favorite Things show. Not only does she like the boots styling and colors (black, sand, rum raisin). The reason they are one of her favorite things is because she says it feels like she is walking on a cloud when she wears them.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you are after a pair of great looking and style UGG boots to
wear during the winter months, then you can not go far wrong with
getting yourself a pair of the &lt;a href=&quot;http:&quot;&gt;ugg classic crochet
Tall&amp;#8217;s. Even though these boots have been around for a few
years now they are likely to grow in popularity now. This is
because they were recently featured in Oprah Winfrey&amp;#8217;s
Favorite Things show.&lt;br&gt;
The UGG Classic Crochet is a new addition to the popular Classic
collection with its slouchy styling and colorful knit uppers
(polyester and wool blend). A sheepskin footbed provides the extra
comfort that UGG boot and &lt;a href=&quot;http:&quot;&gt;ugg classic crochet is
well-known for. A light and flexible outsole paired with a new
decorative label makes this boot perfect for spring. The Classic
Crochet boot can be cuffed or styled any creative way to
personalize your look. As with the UGG Classic Cardy boot, the
Crochet can either be worn with jeans. Or you can wear them pushed
down so that they have slouched feel and look to them. But it does
not matter what they are worn with or they way in which they are
worn they will still help you to make quite a statement about
yourself. Today&amp;#8217;s women have become fashion conscious. They
are going to almost any extent to look good and attractive. It has
become important to look good. In fact, it is one of the most
important factors that will decide success in various areas of
life. It can boost up your confidence level.&lt;br&gt;
As mentioned earlier the &lt;a href=&quot;http:&quot;&gt;uggs for cheapCrochet Tall
boots are going to grow in popularity this season, just because
Oprah Winfrey included them in her Favorite Things show. Not only
does she like the boots styling and colors (black, sand, rum
raisin). The reason they are one of her favorite things is because
she says it feels like she is walking on a cloud when she wears
them.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-19T03:07:17+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-02-19T09:28:28+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">11</version>
      <user-name>mklo</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega watch&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega
watch&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-26T01:42:59+00:00</created-at>
      <creator-id type="integer">42669</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6084</number>
      <permalink>activerecord-association-proxycollection-create-method-incorrectly-merges-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; associations build create patch scope with_scope</tag>
      <title>ActiveRecord Association Proxy/Collection create method incorrectly merges attributes</title>
      <updated-at type="datetime">2011-03-26T02:06:21+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">12</version>
      <user-name>bingbing</user-name>
      <creator-name>C. Bedard</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6084</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>234c3f796dd1ddaaccadab9c62862e82fa5d8b84</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-30T19:59:28+00:00</created-at>
      <filename>prevent_scope_attributes_from_being_overwritten.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">795969</id>
      <size type="integer">834</size>
      <uploader-id type="integer">42669</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/795969/prevent_scope_attributes_from_being_overwritten.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>b8e6287ff5e3bd95ec6363c5ace1ff926a909138</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-04T19:28:37+00:00</created-at>
      <filename>ar-associations-create_scope_issue.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">803058</id>
      <size type="integer">6874</size>
      <uploader-id type="integer">127658</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/803058/ar-associations-create_scope_issue.diff</url>
    </attachment>
  </attachments>
</ticket>
