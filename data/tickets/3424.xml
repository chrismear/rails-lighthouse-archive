<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-13T01:18:34+00:00</created-at>
  <creator-id type="integer">12464</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3424</number>
  <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>30pre activerecord patch preload_associations review</tag>
  <title>[PATCH] Double loading associations when using preload and an identity map</title>
  <updated-at type="datetime">2011-04-14T01:01:28+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">9</version>
  <user-name>rails</user-name>
  <creator-name>Arya Asemanfar</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'll start off by saying this bug is not reproducible without the use of an in-process identity map plugin. Given that, the bug is in the way ActiveRecord chooses whether or not to preload associations.

Example failure scenario:
class Author
  has_many :posts, :include =&gt; [:comments]
end

class Post
  has_many :comments
end

post = Post.find(1)
post.comments.to_a # to trigger load_target
posts = Author.find(post.author_id).posts 
posts.to_a # to trigger load_target

If and only if you have a identity map-ish plugin, posts's objects will include post. I don't mean equivalent AR objects, but the objects with the same object_id.

Given the include option of has_many :posts, AR will iterate over and load all the comments for each post. But it only checks to see if the first post has its comments loaded before returning:

&quot;return if records.first.send(reflection.name).loaded?&quot;

So if the first element of record is not the post we loaded prior, then the post object has two copies of each of its comments in its association proxy.

Given that the identity map plugin is not included in AR, I should make clear the purpose of the patch is to correct the assumption made by AR's preloader that the either all or none of the records' associations are loaded.</original-body>
  <latest-body>I'll start off by saying this bug is not reproducible without the use of an in-process identity map plugin. Given that, the bug is in the way ActiveRecord chooses whether or not to preload associations.

Example failure scenario:
class Author
  has_many :posts, :include =&gt; [:comments]
end

class Post
  has_many :comments
end

post = Post.find(1)
post.comments.to_a # to trigger load_target
posts = Author.find(post.author_id).posts 
posts.to_a # to trigger load_target

If and only if you have a identity map-ish plugin, posts's objects will include post. I don't mean equivalent AR objects, but the objects with the same object_id.

Given the include option of has_many :posts, AR will iterate over and load all the comments for each post. But it only checks to see if the first post has its comments loaded before returning:

&quot;return if records.first.send(reflection.name).loaded?&quot;

So if the first element of record is not the post we loaded prior, then the post object has two copies of each of its comments in its association proxy.

Given that the identity map plugin is not included in AR, I should make clear the purpose of the patch is to correct the assumption made by AR's preloader that the either all or none of the records' associations are loaded.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'll start off by saying this bug is not reproducible without
the use of an in-process identity map plugin. Given that, the bug
is in the way ActiveRecord chooses whether or not to preload
associations.&lt;/p&gt;
&lt;p&gt;Example failure scenario:&lt;br&gt;
class Author&lt;br&gt;
has_many :posts, :include =&amp;gt; [:comments] end&lt;/p&gt;
&lt;p&gt;class Post&lt;br&gt;
has_many :comments end&lt;/p&gt;
&lt;p&gt;post = Post.find(1)&lt;br&gt;
post.comments.to_a # to trigger load_target&lt;br&gt;
posts = Author.find(post.author_id).posts&lt;br&gt;
posts.to_a # to trigger load_target&lt;/p&gt;
&lt;p&gt;If and only if you have a identity map-ish plugin, posts's
objects will include post. I don't mean equivalent AR objects, but
the objects with the same object_id.&lt;/p&gt;
&lt;p&gt;Given the include option of has_many :posts, AR will iterate
over and load all the comments for each post. But it only checks to
see if the first post has its comments loaded before returning:&lt;/p&gt;
&lt;p&gt;&quot;return if records.first.send(reflection.name).loaded?&quot;&lt;/p&gt;
&lt;p&gt;So if the first element of record is not the post we loaded
prior, then the post object has two copies of each of its comments
in its association proxy.&lt;/p&gt;
&lt;p&gt;Given that the identity map plugin is not included in AR, I
should make clear the purpose of the patch is to correct the
assumption made by AR's preloader that the either all or none of
the records' associations are loaded.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll start off by saying this bug is not reproducible without the use of an in-process identity map plugin. Given that, the bug is in the way ActiveRecord chooses whether or not to preload associations.

Example failure scenario:
class Author
  has_many :posts, :include =&gt; [:comments]
end

class Post
  has_many :comments
end

post = Post.find(1)
post.comments.to_a # to trigger load_target
posts = Author.find(post.author_id).posts 
posts.to_a # to trigger load_target

If and only if you have a identity map-ish plugin, posts's objects will include post. I don't mean equivalent AR objects, but the objects with the same object_id.

Given the include option of has_many :posts, AR will iterate over and load all the comments for each post. But it only checks to see if the first post has its comments loaded before returning:

&quot;return if records.first.send(reflection.name).loaded?&quot;

So if the first element of record is not the post we loaded prior, then the post object has two copies of each of its comments in its association proxy.

Given that the identity map plugin is not included in AR, I should make clear the purpose of the patch is to correct the assumption made by AR's preloader that the either all or none of the records' associations are loaded.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll start off by saying this bug is not reproducible without
the use of an in-process identity map plugin. Given that, the bug
is in the way ActiveRecord chooses whether or not to preload
associations.&lt;/p&gt;
&lt;p&gt;Example failure scenario:&lt;br&gt;
class Author&lt;br&gt;
has_many :posts, :include =&amp;gt; [:comments] end&lt;/p&gt;
&lt;p&gt;class Post&lt;br&gt;
has_many :comments end&lt;/p&gt;
&lt;p&gt;post = Post.find(1)&lt;br&gt;
post.comments.to_a # to trigger load_target&lt;br&gt;
posts = Author.find(post.author_id).posts&lt;br&gt;
posts.to_a # to trigger load_target&lt;/p&gt;
&lt;p&gt;If and only if you have a identity map-ish plugin, posts's
objects will include post. I don't mean equivalent AR objects, but
the objects with the same object_id.&lt;/p&gt;
&lt;p&gt;Given the include option of has_many :posts, AR will iterate
over and load all the comments for each post. But it only checks to
see if the first post has its comments loaded before returning:&lt;/p&gt;
&lt;p&gt;&quot;return if records.first.send(reflection.name).loaded?&quot;&lt;/p&gt;
&lt;p&gt;So if the first element of record is not the post we loaded
prior, then the post object has two copies of each of its comments
in its association proxy.&lt;/p&gt;
&lt;p&gt;Given that the identity map plugin is not included in AR, I
should make clear the purpose of the patch is to correct the
assumption made by AR's preloader that the either all or none of
the records' associations are loaded.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-25T01:44:40+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;&quot; 3.0pre activerecord patch preload_associations</tag>
      <title>Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2009-10-25T01:44:45+00:00</updated-at>
      <user-id type="integer">12464</user-id>
      <version type="integer">1</version>
      <user-name>Arya Asemanfar</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This applies cleanly on master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This applies cleanly on master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T02:14:22+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;\&quot; 3.0pre activerecord patch preload_associations&quot;
:title: Double loading associations when using preload and an identity map
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2010-01-17T02:14:24+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">2</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Could you add a failing test please ?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you add a failing test please ?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T07:50:10+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2010-01-17T07:50:11+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>To create a failing test, there would have to be an identity map or the test would have to override AR's instantiate method to shim in identity behavior.

To clarify, this bug is only reproducible with the presence of an AR identity map. I suppose it could remain unfixed until AR natively supports identity map, but it'd be nice to correct the assumption that all or none of the associated records are loaded.

It's possible to create another example to break this assumption. Referring to the example in the original ticket: if the Post model implemented an after_initialize that conditionally loaded comments, but not for the record which will appear first in the author's posts.

What do you think of that as a test?</body>
      <body-html>&lt;div&gt;&lt;p&gt;To create a failing test, there would have to be an identity map
or the test would have to override AR's instantiate method to shim
in identity behavior.&lt;/p&gt;
&lt;p&gt;To clarify, this bug is only reproducible with the presence of
an AR identity map. I suppose it could remain unfixed until AR
natively supports identity map, but it'd be nice to correct the
assumption that all or none of the associated records are
loaded.&lt;/p&gt;
&lt;p&gt;It's possible to create another example to break this
assumption. Referring to the example in the original ticket: if the
Post model implemented an after_initialize that conditionally
loaded comments, but not for the record which will appear first in
the author's posts.&lt;/p&gt;
&lt;p&gt;What do you think of that as a test?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T08:22:13+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2010-01-17T08:22:16+00:00</updated-at>
      <user-id type="integer">12464</user-id>
      <version type="integer">4</version>
      <user-name>Arya Asemanfar</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here is a patch for a test as described above. It's not the same situation as described in the original ticket, but it does break the same assumption that causes the problem when there is an identity map.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is a patch for a test as described above. It's not the same
situation as described in the original ticket, but it does break
the same assumption that causes the problem when there is an
identity map.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T08:57:28+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2010-01-17T08:57:36+00:00</updated-at>
      <user-id type="integer">12464</user-id>
      <version type="integer">5</version>
      <user-name>Arya Asemanfar</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>charge. Obviously &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;copy rolex watch&lt;/a&gt;&lt;/b&gt; when Rolex inserts an &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches sale&lt;/a&gt;&lt;/b&gt; ad in any such &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; publication, they do not &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches replicas&lt;/a&gt;&lt;/b&gt; pay the price from &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; their own pocket. The &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;replica rolex watches for sale&lt;/a&gt;&lt;/b&gt; advertising costs are passed &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt; on to you. This &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt; is not the case &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; with Swiss replica watches. &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt; Hence they are able to provide you with more or less the same stuff without the whistles a</body>
      <body-html>&lt;div&gt;&lt;p&gt;charge. Obviously &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;copy rolex watch&lt;/a&gt;&lt;/b&gt; when
Rolex inserts an &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex
watches sale&lt;/a&gt;&lt;/b&gt; ad in any such &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;
publication, they do not &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches replicas&lt;/a&gt;&lt;/b&gt;
pay the price from &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; their own
pocket. The &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;replica
rolex watches for sale&lt;/a&gt;&lt;/b&gt; advertising costs are passed
&lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex
watches&lt;/a&gt;&lt;/b&gt; on to you. This &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt; is
not the case &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; with Swiss replica watches. &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt;
Hence they are able to provide you with more or less the same stuff
without the whistles a&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T07:57:33+01:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">166777</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2010-07-21T01:45:57+01:00</updated-at>
      <user-id type="integer">107781</user-id>
      <version type="integer">6</version>
      <user-name>echo</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&lt;a href=&quot;http://www.sinomart.com/wholesale-Animal-Paintings_c167&quot;&gt;Wholesale Animal Paintings&lt;/a&gt; and &lt;a href=&quot;http://www.sinomart.com/wholesale-Still-Life-Paintings_c168&quot;&gt;Wholesale Still Life Paintings&lt;/a&gt; are available now,you can choose all kinds of &lt;a href=&quot;http://www.sinomart.com/wholesale-Animal-Paintings_c167&quot;&gt;Animal Paintngs online&lt;/a&gt; and &lt;a href=&quot;http://www.sinomart.com/wholesale-Still-Life-Paintings_c168&quot;&gt;Still Life Paintings online&lt;/a&gt;.And we will supply you the best service.
Except this,our Sinomart have &lt;a href=&quot;http://www.sinomart.com/wholesale-Hiphone_c18&quot;&gt;Wholesale Hiphone&lt;/a&gt; and &lt;a href=&quot;http://www.sinomart.com/wholesale-Accessories_c19&quot;&gt;Wholesale Accessories&lt;/a&gt;,also you can order 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Hiphone_c18&quot;&gt;Hiphone online&lt;/a&gt; and 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Accessories_c19&quot;&gt;Accessories online&lt;/a&gt;.In the meanwhile,the cellphones has many style,such as &lt;a href=&quot;http://www.sinomart.com/wholesale-Multi-Function-Cell-Phones_c22&quot;&gt;wholesale Multi Function Cell Phones&lt;/a&gt;, 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Bar-Phone_c23&quot;&gt;wholesale Bar Phone&lt;/a&gt;, 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Slide-Phone_c24&quot;&gt;wholesale Slide Phone&lt;/a&gt;, 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Flip-Phone_c25&quot;&gt;wholesale Flip Phone&lt;/a&gt; and so on.Every kinds of these cellphones you can get just through your credit card.In other words,only move your finger you can get any one you want,because 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Multi-Function-Cell-Phones_c22&quot;&gt;Multi Function Cell Phones online&lt;/a&gt;, 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Bar-Phone_c23&quot;&gt;Bar Phone online&lt;/a&gt;,and the 
&lt;a href=&quot;http://www.sinomart.com/wholesale-Slide-Phone_c24&quot;&gt;Slide Phone online&lt;/a&gt; too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://www.sinomart.com/wholesale-Animal-Paintings_c167&quot;&gt;Wholesale
Animal Paintings&lt;/a&gt; and &lt;a href=
&quot;http://www.sinomart.com/wholesale-Still-Life-Paintings_c168&quot;&gt;Wholesale
Still Life Paintings&lt;/a&gt; are available now,you can choose all kinds
of &lt;a href=
&quot;http://www.sinomart.com/wholesale-Animal-Paintings_c167&quot;&gt;Animal
Paintngs online&lt;/a&gt; and &lt;a href=
&quot;http://www.sinomart.com/wholesale-Still-Life-Paintings_c168&quot;&gt;Still
Life Paintings online&lt;/a&gt;.And we will supply you the best
service.&lt;br&gt;
Except this,our Sinomart have &lt;a href=
&quot;http://www.sinomart.com/wholesale-Hiphone_c18&quot;&gt;Wholesale
Hiphone&lt;/a&gt; and &lt;a href=
&quot;http://www.sinomart.com/wholesale-Accessories_c19&quot;&gt;Wholesale
Accessories&lt;/a&gt;,also you can order&lt;br&gt;
&lt;a href=&quot;http://www.sinomart.com/wholesale-Hiphone_c18&quot;&gt;Hiphone
online&lt;/a&gt; and&lt;br&gt;
&lt;a href=
&quot;http://www.sinomart.com/wholesale-Accessories_c19&quot;&gt;Accessories
online&lt;/a&gt;.In the meanwhile,the cellphones has many style,such as
&lt;a href=
&quot;http://www.sinomart.com/wholesale-Multi-Function-Cell-Phones_c22&quot;&gt;wholesale
Multi Function Cell Phones&lt;/a&gt;,&lt;br&gt;
&lt;a href=&quot;http://www.sinomart.com/wholesale-Bar-Phone_c23&quot;&gt;wholesale
Bar Phone&lt;/a&gt;,&lt;br&gt;
&lt;a href=
&quot;http://www.sinomart.com/wholesale-Slide-Phone_c24&quot;&gt;wholesale Slide
Phone&lt;/a&gt;,&lt;br&gt;
&lt;a href=
&quot;http://www.sinomart.com/wholesale-Flip-Phone_c25&quot;&gt;wholesale Flip
Phone&lt;/a&gt; and so on.Every kinds of these cellphones you can get
just through your credit card.In other words,only move your finger
you can get any one you want,because&lt;br&gt;
&lt;a href=
&quot;http://www.sinomart.com/wholesale-Multi-Function-Cell-Phones_c22&quot;&gt;Multi
Function Cell Phones online&lt;/a&gt;,&lt;br&gt;
&lt;a href=&quot;http://www.sinomart.com/wholesale-Bar-Phone_c23&quot;&gt;Bar Phone
online&lt;/a&gt;,and the&lt;br&gt;
&lt;a href=&quot;http://www.sinomart.com/wholesale-Slide-Phone_c24&quot;&gt;Slide
Phone online&lt;/a&gt; too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-06T08:02:08+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2011-01-13T01:18:34+00:00</updated-at>
      <user-id type="integer">131447</user-id>
      <version type="integer">7</version>
      <user-name>cheap wholesale products</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-14T01:00:20+01:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 3.0pre activerecord patch preload_associations review
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>30pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2011-04-14T01:01:20+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">8</version>
      <user-name>rails</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-14T01:00:20+01:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3424</number>
      <permalink>double-loading-associations-when-using-preload-and-an-identity-map</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>30pre activerecord patch preload_associations review</tag>
      <title>[PATCH] Double loading associations when using preload and an identity map</title>
      <updated-at type="datetime">2011-04-14T01:01:28+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">9</version>
      <user-name>rails</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3424</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>aadd364b5b938142f9f9ad17b0a4b34be45955ce</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-25T01:44:42+00:00</created-at>
      <filename>double_loading_associations.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">304760</id>
      <size type="integer">1072</size>
      <uploader-id type="integer">12464</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/304760/double_loading_associations.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>bfdb3fa2397ba2af4fab11754c36b786c8d22103</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-17T08:57:28+00:00</created-at>
      <filename>0002-added-test-case-for-double-loading-associations.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">380827</id>
      <size type="integer">1934</size>
      <uploader-id type="integer">12464</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/380827/0002-added-test-case-for-double-loading-associations.patch</url>
    </attachment>
  </attachments>
</ticket>
