<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-04T19:01:32+01:00</created-at>
  <creator-id type="integer">13349</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1174</number>
  <permalink>named_scope-doesnt-work-when-2-procs-expect-arguments</permalink>
  <priority type="integer">584</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord block bug edge named_scope proc</tag>
  <title>named_scope doesn't work when 2 procs expect arguments</title>
  <updated-at type="datetime">2008-12-21T11:18:05+00:00</updated-at>
  <user-id type="integer">13349</user-id>
  <version type="integer">4</version>
  <user-name>Nando Vieira</user-name>
  <creator-name>Nando Vieira</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1174</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Mixing 2 named_scopes that accepts arguments raises the following error depending on the order that the scopes are executed:

# ArgumentError: wrong number of arguments (2 for 0)
#   from (__DELEGATION__):2:in `sort_by'
#   from (__DELEGATION__):2:in `__send__'
#   from (__DELEGATION__):2:in `sort_by'
#   from (irb):1

This will work:

@@@ ruby
User.sort_by(:name, :desc).by_country('us')
@@@

But this won't:

@@@ ruby
User.by_country('us').sort_by(:name, :desc)
@@@

Here's what the model looks like:

@@@ ruby
class User &lt; ActiveRecord::Base
  named_scope :sort_by, Proc.new { |attr, order|
    order ||= 'asc'
    {:order =&gt; &quot;#{attr} #{order}&quot;}
  }
  
  named_scope :by_country, Proc.new { |code|
    {:conditions =&gt; {:country_code =&gt; code.to_s}}
  }
end
@@@</original-body>
  <latest-body>Mixing 2 named_scopes that accepts arguments raises the following error depending on the order that the scopes are executed:

# ArgumentError: wrong number of arguments (2 for 0)
#   from (__DELEGATION__):2:in `sort_by'
#   from (__DELEGATION__):2:in `__send__'
#   from (__DELEGATION__):2:in `sort_by'
#   from (irb):1

This will work:

@@@ ruby
User.sort_by(:name, :desc).by_country('us')
@@@

But this won't:

@@@ ruby
User.by_country('us').sort_by(:name, :desc)
@@@

Here's what the model looks like:

@@@ ruby
class User &lt; ActiveRecord::Base
  named_scope :sort_by, Proc.new { |attr, order|
    order ||= 'asc'
    {:order =&gt; &quot;#{attr} #{order}&quot;}
  }
  
  named_scope :by_country, Proc.new { |code|
    {:conditions =&gt; {:country_code =&gt; code.to_s}}
  }
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Mixing 2 named_scopes that accepts arguments raises the
following error depending on the order that the scopes are
executed:&lt;/p&gt;
&lt;h1&gt;ArgumentError: wrong number of arguments (2 for 0)&lt;/h1&gt;
&lt;h1&gt;from (&lt;strong&gt;DELEGATION&lt;/strong&gt;):2:in
&lt;code&gt;sort_by'&lt;/code&gt;&lt;/h1&gt;
&lt;h1&gt;from (&lt;strong&gt;DELEGATION&lt;/strong&gt;):2:in
&lt;code&gt;__send__'&lt;/code&gt;&lt;/h1&gt;
&lt;h1&gt;from (&lt;strong&gt;DELEGATION&lt;/strong&gt;):2:in
&lt;code&gt;sort_by'&lt;/code&gt;&lt;/h1&gt;
&lt;h1&gt;from (irb):1&lt;/h1&gt;
&lt;p&gt;This will work:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
User.sort_by(:name, :desc).by_country('us')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But this won't:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
User.by_country('us').sort_by(:name, :desc)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here's what the model looks like:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class User &amp;lt; ActiveRecord::Base
  named_scope :sort_by, Proc.new { |attr, order|
    order ||= 'asc'
    {:order =&amp;gt; &amp;quot;#{attr} #{order}&amp;quot;}
  }

  named_scope :by_country, Proc.new { |code|
    {:conditions =&amp;gt; {:country_code =&amp;gt; code.to_s}}
  }
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Mixing 2 named_scopes that accepts arguments raises the following error depending on the order that the scopes are executed:

	ArgumentError: wrong number of arguments (2 for 0)
	 from (__DELEGATION__):2:in `sort_by'
	 from (__DELEGATION__):2:in `__send__'
	 from (__DELEGATION__):2:in `sort_by'
	 from (irb):1

This will work:

@@@ ruby
User.sort_by(:name, :desc).by_country('us')
@@@

But this won't:

@@@ ruby
User.by_country('us').sort_by(:name, :desc)
@@@

Here's what the model looks like:

@@@ ruby
class User &lt; ActiveRecord::Base
  named_scope :sort_by, Proc.new { |attr, order|
    order ||= 'asc'
    {:order =&gt; &quot;#{attr} #{order}&quot;}
  }
  
  named_scope :by_country, Proc.new { |code|
    {:conditions =&gt; {:country_code =&gt; code.to_s}}
  }
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Mixing 2 named_scopes that accepts arguments raises the
following error depending on the order that the scopes are
executed:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ArgumentError: wrong number of arguments (2 for 0)
 from (__DELEGATION__):2:in `sort_by'
 from (__DELEGATION__):2:in `__send__'
 from (__DELEGATION__):2:in `sort_by'
 from (irb):1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will work:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
User.sort_by(:name, :desc).by_country('us')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But this won't:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
User.by_country('us').sort_by(:name, :desc)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here's what the model looks like:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class User &amp;lt; ActiveRecord::Base
  named_scope :sort_by, Proc.new { |attr, order|
    order ||= 'asc'
    {:order =&amp;gt; &amp;quot;#{attr} #{order}&amp;quot;}
  }

  named_scope :by_country, Proc.new { |code|
    {:conditions =&amp;gt; {:country_code =&amp;gt; code.to_s}}
  }
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-04T19:01:32+01:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1174</number>
      <permalink>named_scope-doesnt-work-when-2-procs-expect-arguments</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord block bug named_scope proc</tag>
      <title>named_scope doesn't work when 2 procs expect arguments</title>
      <updated-at type="datetime">2008-10-04T19:02:34+01:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">1</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1174</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is the problem that sort_by scope you've defined is being (in some cases) shadowed by the built in sort_by method on arrays ? (ie if you change it to order_by then does it work ?)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is the problem that sort_by scope you've defined is being (in
some cases) shadowed by the built in sort_by method on arrays ? (ie
if you change it to order_by then does it work ?)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-10T13:24:49+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord block bug named_scope proc
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1174</number>
      <permalink>named_scope-doesnt-work-when-2-procs-expect-arguments</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord block bug edge named_scope proc</tag>
      <title>named_scope doesn't work when 2 procs expect arguments</title>
      <updated-at type="datetime">2008-12-10T13:24:53+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Nando Vieira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1174</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A quick experiment reveals that to be the case. Change sort_by to order_by and you're good to go.</body>
      <body-html>&lt;div&gt;&lt;p&gt;A quick experiment reveals that to be the case. Change sort_by
to order_by and you're good to go.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-21T11:10:13+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1174</number>
      <permalink>named_scope-doesnt-work-when-2-procs-expect-arguments</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord block bug edge named_scope proc</tag>
      <title>named_scope doesn't work when 2 procs expect arguments</title>
      <updated-at type="datetime">2008-12-21T11:10:17+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Nando Vieira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1174</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Make sense... I didn't remember the `sort_by` method. :/</body>
      <body-html>&lt;div&gt;&lt;p&gt;Make sense... I didn't remember the &lt;code&gt;sort_by&lt;/code&gt; method.
:/&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-21T11:18:01+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1174</number>
      <permalink>named_scope-doesnt-work-when-2-procs-expect-arguments</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord block bug edge named_scope proc</tag>
      <title>named_scope doesn't work when 2 procs expect arguments</title>
      <updated-at type="datetime">2008-12-21T11:18:05+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">4</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1174</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
