<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-30T11:16:19+01:00</created-at>
  <creator-id type="integer">33399</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1142</number>
  <permalink>simplified-parameter-parsing-code</permalink>
  <priority type="integer">466</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>actionpack enhancement forms param_parser patch</tag>
  <title>Improved parameter parsing for complex forms</title>
  <updated-at type="datetime">2009-03-06T22:14:46+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">24</version>
  <user-name>Pratik</user-name>
  <creator-name>Thomas Lee</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>* This patch was written with the intent of simplifying the implementation of UrlEncodedPairParser, as well as making its behaviour somewhat more predictable/logical.
* Changes to semantics are minimal: only breaks seven actionpack unit tests which are either testing *broken* inputs or strange behaviour in the old parser.
* Of those seven unit tests, five can be made to pass with some minimal changes to the parser.
* New semantics would make nested forms and/or manipulation of collections in forms much easier to deal with.

The semantic changes are as follows:

INPUT: &quot;a[][x]=5&amp;a[][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}]}
NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

INPUT: &quot;a[0][x]=5&amp;a[0][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&gt; {&quot;0&quot; =&gt; {&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}}}
NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

INPUT: &quot;a[0][x]=5&amp;a[1][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&gt; {&quot;0&quot; =&gt; {&quot;x&quot; =&gt; &quot;5&quot;}, &quot;1&quot; =&gt; {&quot;y&quot; =&gt; &quot;10&quot;}}}
NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

Issues to be resolved:

1. Should the parser be modified to pass the old tests for invalid inputs?
2. &quot;a[0]=1&amp;a[999]=2&quot; currently yields a 1000 element array with 998 nil values. Should we implement a SparseArray class that minimizes memory usage for such a situation, or force sequential indexes?</original-body>
  <latest-body>* This patch was written with the intent of simplifying the implementation of UrlEncodedPairParser, as well as making its behaviour somewhat more predictable/logical.
* Changes to semantics are minimal: only breaks seven actionpack unit tests which are either testing *broken* inputs or strange behaviour in the old parser.
* Of those seven unit tests, five can be made to pass with some minimal changes to the parser.
* New semantics would make nested forms and/or manipulation of collections in forms much easier to deal with.

The semantic changes are as follows:

INPUT: &quot;a[][x]=5&amp;a[][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}]}
NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

INPUT: &quot;a[0][x]=5&amp;a[0][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&gt; {&quot;0&quot; =&gt; {&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}}}
NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

INPUT: &quot;a[0][x]=5&amp;a[1][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&gt; {&quot;0&quot; =&gt; {&quot;x&quot; =&gt; &quot;5&quot;}, &quot;1&quot; =&gt; {&quot;y&quot; =&gt; &quot;10&quot;}}}
NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

Issues to be resolved:

1. Should the parser be modified to pass the old tests for invalid inputs?
2. &quot;a[0]=1&amp;a[999]=2&quot; currently yields a 1000 element array with 998 nil values. Should we implement a SparseArray class that minimizes memory usage for such a situation, or force sequential indexes?</latest-body>
  <original-body-html>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;This patch was written with the intent of simplifying the
implementation of UrlEncodedPairParser, as well as making its
behaviour somewhat more predictable/logical.&lt;/li&gt;
&lt;li&gt;Changes to semantics are minimal: only breaks seven actionpack
unit tests which are either testing &lt;em&gt;broken&lt;/em&gt; inputs or
strange behaviour in the old parser.&lt;/li&gt;
&lt;li&gt;Of those seven unit tests, five can be made to pass with some
minimal changes to the parser.&lt;/li&gt;
&lt;li&gt;New semantics would make nested forms and/or manipulation of
collections in forms much easier to deal with.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The semantic changes are as follows:&lt;/p&gt;
&lt;p&gt;INPUT: &quot;a[][x]=5&amp;amp;a[][y]=10&quot; OLD PARSER OUTPUT: {&quot;a&quot; =&amp;gt;
[{&quot;x&quot; =&amp;gt; &quot;5&quot;, &quot;y&quot; =&amp;gt; &quot;10&quot;}]} NEW PARSER OUTPUT: {&quot;a&quot; =&amp;gt;
[{&quot;x&quot; =&amp;gt; &quot;5&quot;}, {&quot;y&quot; =&amp;gt; &quot;10&quot;}]}&lt;/p&gt;
&lt;p&gt;INPUT: &quot;a[0][x]=5&amp;amp;a[0][y]=10&quot; OLD PARSER OUTPUT: {&quot;a&quot; =&amp;gt;
{&quot;0&quot; =&amp;gt; {&quot;x&quot; =&amp;gt; &quot;5&quot;, &quot;y&quot; =&amp;gt; &quot;10&quot;}}} NEW PARSER OUTPUT:
{&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;}, {&quot;y&quot; =&amp;gt; &quot;10&quot;}]}&lt;/p&gt;
&lt;p&gt;INPUT: &quot;a[0][x]=5&amp;amp;a[1][y]=10&quot; OLD PARSER OUTPUT: {&quot;a&quot; =&amp;gt;
{&quot;0&quot; =&amp;gt; {&quot;x&quot; =&amp;gt; &quot;5&quot;}, &quot;1&quot; =&amp;gt; {&quot;y&quot; =&amp;gt; &quot;10&quot;}}} NEW PARSER
OUTPUT: {&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;}, {&quot;y&quot; =&amp;gt; &quot;10&quot;}]}&lt;/p&gt;
&lt;p&gt;Issues to be resolved:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Should the parser be modified to pass the old tests for invalid
inputs?&lt;/li&gt;
&lt;li&gt;&quot;a[0]=1&amp;amp;a[999]=2&quot; currently yields a 1000 element array
with 998 nil values. Should we implement a SparseArray class that
minimizes memory usage for such a situation, or force sequential
indexes?&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>* This patch was written with the intent of simplifying the implementation of UrlEncodedPairParser, as well as making its behaviour somewhat more predictable/logical.
* Changes to semantics are minimal: only breaks seven actionpack unit tests which are either testing *broken* inputs or strange behaviour in the old parser.
* Of those seven unit tests, five can be made to pass with some minimal changes to the parser.
* New semantics would make nested forms and/or manipulation of collections in forms much easier to deal with -- think editing has_many associations in the same form as the parent.

---

The semantic changes are as follows:

    INPUT: &quot;a[][x]=5&amp;a[][y]=10&quot;
    OLD PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}]}
    NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

    INPUT: &quot;a[0][x]=5&amp;a[0][y]=10&quot;
    OLD PARSER OUTPUT: {&quot;a&quot; =&gt; {&quot;0&quot; =&gt; {&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}}}
    NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}]}

    INPUT: &quot;a[0][x]=5&amp;a[1][y]=10&quot;
    OLD PARSER OUTPUT: {&quot;a&quot; =&gt; {&quot;0&quot; =&gt; {&quot;x&quot; =&gt; &quot;5&quot;}, &quot;1&quot; =&gt; {&quot;y&quot; =&gt; &quot;10&quot;}}}
    NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

---

Issues to be resolved:

1. Should the parser be modified to pass the old tests for invalid inputs?
2. &quot;a[0]=1&amp;a[999]=2&quot; currently yields a 1000 element array with 998 nil values. Should we implement a SparseArray class that minimizes memory usage for such a situation, or force sequential indexes?</body>
      <body-html>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;This patch was written with the intent of simplifying the
implementation of UrlEncodedPairParser, as well as making its
behaviour somewhat more predictable/logical.&lt;/li&gt;
&lt;li&gt;Changes to semantics are minimal: only breaks seven actionpack
unit tests which are either testing &lt;em&gt;broken&lt;/em&gt; inputs or
strange behaviour in the old parser.&lt;/li&gt;
&lt;li&gt;Of those seven unit tests, five can be made to pass with some
minimal changes to the parser.&lt;/li&gt;
&lt;li&gt;New semantics would make nested forms and/or manipulation of
collections in forms much easier to deal with -- think editing
has_many associations in the same form as the parent.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;The semantic changes are as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;INPUT: &quot;a[][x]=5&amp;amp;a[][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;, &quot;y&quot; =&amp;gt; &quot;10&quot;}]}
NEW PARSER OUTPUT: {&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;}, {&quot;y&quot; =&amp;gt; &quot;10&quot;}]}

INPUT: &quot;a[0][x]=5&amp;amp;a[0][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&amp;gt; {&quot;0&quot; =&amp;gt; {&quot;x&quot; =&amp;gt; &quot;5&quot;, &quot;y&quot; =&amp;gt; &quot;10&quot;}}}
NEW PARSER OUTPUT: {&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;, &quot;y&quot; =&amp;gt; &quot;10&quot;}]}

INPUT: &quot;a[0][x]=5&amp;amp;a[1][y]=10&quot;
OLD PARSER OUTPUT: {&quot;a&quot; =&amp;gt; {&quot;0&quot; =&amp;gt; {&quot;x&quot; =&amp;gt; &quot;5&quot;}, &quot;1&quot; =&amp;gt; {&quot;y&quot; =&amp;gt; &quot;10&quot;}}}
NEW PARSER OUTPUT: {&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;}, {&quot;y&quot; =&amp;gt; &quot;10&quot;}]}
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Issues to be resolved:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Should the parser be modified to pass the old tests for invalid
inputs?&lt;/li&gt;
&lt;li&gt;&quot;a[0]=1&amp;amp;a[999]=2&quot; currently yields a 1000 element array
with 998 nil values. Should we implement a SparseArray class that
minimizes memory usage for such a situation, or force sequential
indexes?&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T11:16:19+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Simplified parameter parsing code</title>
      <updated-at type="datetime">2008-10-02T00:32:36+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">1</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>INPUT: &quot;a[][x]=5&amp;a[][y]=10&quot;
    OLD PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;, &quot;y&quot; =&gt; &quot;10&quot;}]}
    NEW PARSER OUTPUT: {&quot;a&quot; =&gt; [{&quot;x&quot; =&gt; &quot;5&quot;}, {&quot;y&quot; =&gt; &quot;10&quot;}]}

I'm not sure I agree with this new parser output. With this behavior, how is one supposed to pass an array of hashes to the web application, where each hash has more than 1 element? Would one be forced to write &quot;a[0][x]=5&amp;a[0][y]=10&quot;?</body>
      <body-html>&lt;div&gt;&lt;p&gt;INPUT: &quot;a[][x]=5&amp;amp;a[][y]=10&quot;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;OLD PARSER OUTPUT: {&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;, &quot;y&quot; =&amp;gt; &quot;10&quot;}]}
NEW PARSER OUTPUT: {&quot;a&quot; =&amp;gt; [{&quot;x&quot; =&amp;gt; &quot;5&quot;}, {&quot;y&quot; =&amp;gt; &quot;10&quot;}]}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm not sure I agree with this new parser output. With this
behavior, how is one supposed to pass an array of hashes to the web
application, where each hash has more than 1 element? Would one be
forced to write &quot;a[0][x]=5&amp;amp;a[0][y]=10&quot;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-01T10:37:53+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Simplified parameter parsing code</title>
      <updated-at type="datetime">2008-10-01T10:37:55+01:00</updated-at>
      <user-id type="integer">10679</user-id>
      <version type="integer">2</version>
      <user-name>Hongli Lai</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That's correct. And the extra characters really won't kill you. Hell, you probably won't even notice them with the right helpers in place. Call me crazy, but IMO correctness and clarity trump query string length. :)

Explicit indices actually make a lot of sense in practice for this particular use-case. Take this example:

    a[][b][][x]=5&amp;a[][b][][y]=10&amp;a[][b][][y]=15&amp;a[][b][][x]=20

Now tell me: at a glance, what does this *do*?

With explicit indices, it becomes slightly more verbose but it also eliminates the ambiguity:

    a[0][b][0][x]=5&amp;a[0][b][0][y]=10&amp;a[0][b][1][y]=15&amp;a[0][b][1][x]=20</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's correct. And the extra characters really won't kill you.
Hell, you probably won't even notice them with the right helpers in
place. Call me crazy, but IMO correctness and clarity trump query
string length. :)&lt;/p&gt;
&lt;p&gt;Explicit indices actually make a lot of sense in practice for
this particular use-case. Take this example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;a[][b][][x]=5&amp;amp;a[][b][][y]=10&amp;amp;a[][b][][y]=15&amp;amp;a[][b][][x]=20
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now tell me: at a glance, what does this &lt;em&gt;do&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;With explicit indices, it becomes slightly more verbose but it
also eliminates the ambiguity:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;a[0][b][0][x]=5&amp;amp;a[0][b][0][y]=10&amp;amp;a[0][b][1][y]=15&amp;amp;a[0][b][1][x]=20
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-02T00:18:45+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Simplified parameter parsing code</title>
      <updated-at type="datetime">2008-10-02T00:18:46+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">3</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I see. Your format does make more sense for complex forms. I'm a bit worried about backwards compatibility but I guess the people at the mailing list have already told you that. :)

A backwards compatibility mode, perhaps?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I see. Your format does make more sense for complex forms. I'm a
bit worried about backwards compatibility but I guess the people at
the mailing list have already told you that. :)&lt;/p&gt;
&lt;p&gt;A backwards compatibility mode, perhaps?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-02T00:41:37+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Simplified parameter parsing code</title>
      <updated-at type="datetime">2008-10-02T00:41:43+01:00</updated-at>
      <user-id type="integer">10679</user-id>
      <version type="integer">4</version>
      <user-name>Hongli Lai</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I can probably include backport the &quot;[]&quot; syntax so that it behaves like the old parser, although I'm not sure how difficult that would be off the top of my head. In all honesty I'd prefer to avoid it, but perhaps the backwards compatibility argument is compelling enough to warrant this.

The other option is switching between the old and the new parser using a configuration parameter in the environment.rb Rails::Initializer config block. config.parser or something like that?

I'd probably prefer the latter to ensure maximum backwards compatibility for those who need/want it, but I'm open to suggestion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can probably include backport the &quot;[]&quot; syntax so that it
behaves like the old parser, although I'm not sure how difficult
that would be off the top of my head. In all honesty I'd prefer to
avoid it, but perhaps the backwards compatibility argument is
compelling enough to warrant this.&lt;/p&gt;
&lt;p&gt;The other option is switching between the old and the new parser
using a configuration parameter in the environment.rb
Rails::Initializer config block. config.parser or something like
that?&lt;/p&gt;
&lt;p&gt;I'd probably prefer the latter to ensure maximum backwards
compatibility for those who need/want it, but I'm open to
suggestion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-03T01:59:55+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Simplified parameter parsing code</title>
      <updated-at type="datetime">2008-10-03T01:59:57+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">5</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Changing the description of this ticket to better reflect what I'm trying to achieve with this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Changing the description of this ticket to better reflect what
I'm trying to achieve with this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-03T08:58:19+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Simplified parameter parsing code
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-03T08:58:24+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">6</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The latter sounds good to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The latter sounds good to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-03T12:00:11+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-03T12:00:17+01:00</updated-at>
      <user-id type="integer">10679</user-id>
      <version type="integer">7</version>
      <user-name>Hongli Lai</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's a patch implementing pluggable UrlEncodedPairParsers. You can switch between parsers using the **config.action_controller.pair_parser** configuration setting in environment.rb. e.g.

    config.action_controller.pair_parser = ActionController::UrlEncodedPairParser

This revision probably needs more tests. Most notably the individual quirks of the old and new parsers need to be tested independently.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a patch implementing pluggable UrlEncodedPairParsers. You
can switch between parsers using the
&lt;strong&gt;config.action_controller.pair_parser&lt;/strong&gt; configuration
setting in environment.rb. e.g.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;config.action_controller.pair_parser = ActionController::UrlEncodedPairParser
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This revision probably needs more tests. Most notably the
individual quirks of the old and new parsers need to be tested
independently.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-04T00:11:09+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-04T00:11:12+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">8</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>We actually already have pluggable parameter parsing.  Is there a reason that you couldn't use that?

@@@
ActionController::Base.param_parsers[Mime::XML] = Proc.new { |data| XmlSimple.xml_in(data, 'ForceArray' =&gt; false) }
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;We actually already have pluggable parameter parsing. Is there a
reason that you couldn't use that?&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
ActionController::Base.param_parsers[Mime::XML] = Proc.new { |data| XmlSimple.xml_in(data, 'ForceArray' =&amp;gt; false) }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-04T12:31:15+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-04T12:31:19+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">9</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Ah, I wasn't aware of that one.

I can't directly use it myself, but if I actually remove my changes to add the pair_parser option, this would provide a suitable way for people to revert back to the legacy parser if they needed to without any additional effort on my part.

@@@
ActionController::Base.param_parsers[Mime::URL_ENCODED_FORM] = Proc.new { |data| ... }

ActionController::Base.param_parsers[Mime::MULTIPART_ENCODED_FORM] = Proc.new { |data| ... }
@@@

For this to be truly useful, the code implementing the :url_encoded_form and :multipart_encoded_form strategies should be extracted out so as to be more easily reused by people wishing to do just that, but I think that might be a follow-up patch. Any strong feelings about that?

I'll upload an updated patch later tonight.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ah, I wasn't aware of that one.&lt;/p&gt;
&lt;p&gt;I can't directly use it myself, but if I actually remove my
changes to add the pair_parser option, this would provide a
suitable way for people to revert back to the legacy parser if they
needed to without any additional effort on my part.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
ActionController::Base.param_parsers[Mime::URL_ENCODED_FORM] = Proc.new { |data| ... }

ActionController::Base.param_parsers[Mime::MULTIPART_ENCODED_FORM] = Proc.new { |data| ... }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For this to be truly useful, the code implementing the
:url_encoded_form and :multipart_encoded_form strategies should be
extracted out so as to be more easily reused by people wishing to
do just that, but I think that might be a follow-up patch. Any
strong feelings about that?&lt;/p&gt;
&lt;p&gt;I'll upload an updated patch later tonight.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T09:22:34+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-06T09:22:37+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">10</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>How about you make whatever changes you need to make your new parser work as a drop in plugin option.  

That way we can push that change into 2.2 and encourage people to experiement with the new parser via plugins and edge changes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;How about you make whatever changes you need to make your new
parser work as a drop in plugin option.&lt;/p&gt;
&lt;p&gt;That way we can push that change into 2.2 and encourage people
to experiement with the new parser via plugins and edge
changes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T13:07:00+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-06T13:07:05+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">11</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Sure thing. Before I submit another patch, should the old parser still be the default?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sure thing. Before I submit another patch, should the old parser
still be the default?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T13:23:27+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-06T13:23:30+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">12</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Yes, I think that changing the parser is a risky prospect and I'd want it to be fully bedded-in over a 2.3 release cycle before we made the switch.

So I see two patches:

# Make it easy to change the parser so the new one can be a plugin without much hacking
# Integrate the new parser

The first one can go in now, and the second change is something that can happen alongside the work on replacing :accessible=&gt;true to make sure we have a really well integrated way of dealing with those more complicated cases.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, I think that changing the parser is a risky prospect and
I'd want it to be fully bedded-in over a 2.3 release cycle before
we made the switch.&lt;/p&gt;
&lt;p&gt;So I see two patches:&lt;/p&gt;
&lt;h1&gt;Make it easy to change the parser so the new one can be a
plugin without much hacking&lt;/h1&gt;
&lt;h1&gt;Integrate the new parser&lt;/h1&gt;
&lt;p&gt;The first one can go in now, and the second change is something
that can happen alongside the work on replacing
:accessible=&amp;gt;true to make sure we have a really well integrated
way of dealing with those more complicated cases.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T13:25:48+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-06T13:25:51+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">13</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Sounds good. I'll shuffle things around a bit and submit the changes either tonight or tomorrow. Thanks for the support.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sounds good. I'll shuffle things around a bit and submit the
changes either tonight or tomorrow. Thanks for the support.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T13:29:17+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-06T13:29:20+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">14</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Alright, here's patch #1 which restructures the guts of AbstractRequest to make it a little easier to reuse the code in there for custom UrlEncodedPairParsers. It might seem like overkill to provide a parse_#{foo}_with_parser method for all those methods, but it will come in handy when it's time to test new parser implementations (most of the tests use parse_query_parameters and parse_request_parameters

Also, the strategy.arity == 4 check feels a little bit dirty, but I couldn't think of a nicer way to pass through this information to Procs that want to override the parser for Mime::MULTIPART_FORM short of forcing them to parse that info for themselves. Which IMHO would suck.

Pending acceptance of this patch, I'll put together a patch to integrate a new parameter parser as you suggest. Should I get in touch with anybody else on the mailing list regarding these patches? The folks responsible for the :accessible =&gt; true stuff maybe?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Alright, here's patch &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt; which restructures the guts of AbstractRequest
to make it a little easier to reuse the code in there for custom
UrlEncodedPairParsers. It might seem like overkill to provide a
parse&lt;em&gt;#{foo}&lt;/em&gt;with_parser method for all those methods, but
it will come in handy when it's time to test new parser
implementations (most of the tests use parse_query_parameters and
parse_request_parameters&lt;/p&gt;
&lt;p&gt;Also, the strategy.arity == 4 check feels a little bit dirty,
but I couldn't think of a nicer way to pass through this
information to Procs that want to override the parser for
Mime::MULTIPART_FORM short of forcing them to parse that info for
themselves. Which IMHO would suck.&lt;/p&gt;
&lt;p&gt;Pending acceptance of this patch, I'll put together a patch to
integrate a new parameter parser as you suggest. Should I get in
touch with anybody else on the mailing list regarding these
patches? The folks responsible for the :accessible =&amp;gt; true stuff
maybe?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T14:24:16+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-06T14:24:17+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">15</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>In case it isn't immediately obvious from the patch, this will allow folks to override the default parsers for URL and MULTIPART encoded form data as follows:

@@@
ActionController::Base.param_parsers[Mime::URL_ENCODED_FORM] = Proc.new do |data|
  ar = ActionController::AbstractRequest
  ar.parse_url_encoded_form_parameters_with_parser(MyCustomParser, data)
end

ActionController::Base.param_parsers[Mime::MULTIPART_FORM] = Proc.new do |data, boundary, content_length, env|
  ar = ActionController::AbstractRequest
  ar.parse_multipart_encoded_form_parameters_with_parser(
    MyCustomParser, data, boundary, content_length, env)
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;In case it isn't immediately obvious from the patch, this will
allow folks to override the default parsers for URL and MULTIPART
encoded form data as follows:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
ActionController::Base.param_parsers[Mime::URL_ENCODED_FORM] = Proc.new do |data|
  ar = ActionController::AbstractRequest
  ar.parse_url_encoded_form_parameters_with_parser(MyCustomParser, data)
end

ActionController::Base.param_parsers[Mime::MULTIPART_FORM] = Proc.new do |data, boundary, content_length, env|
  ar = ActionController::AbstractRequest
  ar.parse_multipart_encoded_form_parameters_with_parser(
    MyCustomParser, data, boundary, content_length, env)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-07T08:19:52+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-07T08:19:56+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">16</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Any feedback on this patch Michael?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Any feedback on this patch Michael?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-08T10:48:00+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-08T10:48:02+01:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">17</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I think we should just hold off on the changes till post 2.2, it
doesn't seem this will make it too much easier for user's to test, and
if it turns out I'm wrong we can include the hooks in a point release.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think we should just hold off on the changes till post 2.2, it
doesn't seem this will make it too much easier for user's to test,
and if it turns out I'm wrong we can include the hooks in a point
release.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-12T17:45:06+01:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-10-12T17:45:09+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">18</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>are you guys aware of http://dev.rubyonrails.org/ticket/10101?

this is a parameter parser currently in use in an app I work on for Sage Software. The last patch I uploaded may have a bug...not sure if I uploaded the fix.

I've simply never been given time to maintain this patch against rails edge.

we use it to manage deeply nested forms.

The existing parser semantics can't work for more than 1 level of nesting (think checkboxes).

problem is, prototype also needs to be patched to preserve the param order when marshalling a form (if it hasn't been in the last eight months)</body>
      <body-html>&lt;div&gt;&lt;p&gt;are you guys aware of &lt;a href=&quot;http://dev.rubyonrails.org/ticket/10101&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;this is a parameter parser currently in use in an app I work on
for Sage Software. The last patch I uploaded may have a bug...not
sure if I uploaded the fix.&lt;/p&gt;
&lt;p&gt;I've simply never been given time to maintain this patch against
rails edge.&lt;/p&gt;
&lt;p&gt;we use it to manage deeply nested forms.&lt;/p&gt;
&lt;p&gt;The existing parser semantics can't work for more than 1 level
of nesting (think checkboxes).&lt;/p&gt;
&lt;p&gt;problem is, prototype also needs to be patched to preserve the
param order when marshalling a form (if it hasn't been in the last
eight months)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-04T09:46:35+00:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-12-04T09:46:40+00:00</updated-at>
      <user-id type="integer">29836</user-id>
      <version type="integer">19</version>
      <user-name>Michael Johnston</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>btw, how does your parser do with nesting + checkboxes?</body>
      <body-html>&lt;div&gt;&lt;p&gt;btw, how does your parser do with nesting + checkboxes?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-04T09:49:39+00:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-12-04T09:49:44+00:00</updated-at>
      <user-id type="integer">29836</user-id>
      <version type="integer">20</version>
      <user-name>Michael Johnston</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@Michael Johnston: does just fine with nesting and checkboxes, but ActionView::Helpers::FormHelper::InstanceTag#to_check_box_tag needs to be modified so that the hidden field is returned *after* the actual checkbox due to some assumptions the old code makes about the parser behavior (the parameter order thing, which it sounds like you encountered).

Unfortunately this is not yet in the latest patch -- I have an updated patch sitting in my local repo, but it needs a few unit tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Michael Johnston: does just fine with nesting and checkboxes,
but ActionView::Helpers::FormHelper::InstanceTag#to_check_box_tag
needs to be modified so that the hidden field is returned
&lt;em&gt;after&lt;/em&gt; the actual checkbox due to some assumptions the old
code makes about the parser behavior (the parameter order thing,
which it sounds like you encountered).&lt;/p&gt;
&lt;p&gt;Unfortunately this is not yet in the latest patch -- I have an
updated patch sitting in my local repo, but it needs a few unit
tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-04T11:37:24+00:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2008-12-04T11:37:30+00:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">21</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T19:51:18+00:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 141
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2009-03-06T19:51:20+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">22</version>
      <user-name>Pratik</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>FWIW, the patch(es) provided to date are no longer relevant with the move to Rack in 2.3 and beyond.

I'm not sure if anybody's still interested in the semantics or features provided by this patch, but if there's sufficient interest I can rework it for the newer versions of Rails. I'm still not sure I agree that the implemented semantics are ideal (using hashes for numerical indexes is not sane IMO), but at a glance it looks better than the old UrlEncodedPairParser stuff. Having said that, my concerns will probably mostly go away with Ruby 1.9 anyway.

Anyway, feel free to close this one off if there's no further interest in this stuff.</body>
      <body-html>&lt;div&gt;&lt;p&gt;FWIW, the patch(es) provided to date are no longer relevant with
the move to Rack in 2.3 and beyond.&lt;/p&gt;
&lt;p&gt;I'm not sure if anybody's still interested in the semantics or
features provided by this patch, but if there's sufficient interest
I can rework it for the newer versions of Rails. I'm still not sure
I agree that the implemented semantics are ideal (using hashes for
numerical indexes is not sane IMO), but at a glance it looks better
than the old UrlEncodedPairParser stuff. Having said that, my
concerns will probably mostly go away with Ruby 1.9 anyway.&lt;/p&gt;
&lt;p&gt;Anyway, feel free to close this one off if there's no further
interest in this stuff.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T22:09:35+00:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2009-03-06T22:09:38+00:00</updated-at>
      <user-id type="integer">33399</user-id>
      <version type="integer">23</version>
      <user-name>Thomas Lee</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-06T22:14:42+00:00</created-at>
      <creator-id type="integer">33399</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1142</number>
      <permalink>simplified-parameter-parsing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>actionpack enhancement forms param_parser patch</tag>
      <title>Improved parameter parsing for complex forms</title>
      <updated-at type="datetime">2009-03-06T22:14:46+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">24</version>
      <user-name>Pratik</user-name>
      <creator-name>Thomas Lee</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1142</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f9ca957360582473b95624d1713c4be9ce4bdfa4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-30T11:16:20+01:00</created-at>
      <filename>improved-parameter-parsing.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">49575</id>
      <size type="integer">8079</size>
      <uploader-id type="integer">33399</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/49575/improved-parameter-parsing.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>d7324410e4a05e6394e25178441c378d54032fdd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-04T00:11:09+01:00</created-at>
      <filename>improved-parameter-parsing-02.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">51157</id>
      <size type="integer">7771</size>
      <uploader-id type="integer">33399</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/51157/improved-parameter-parsing-02.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>3cb7085ae9b8b4073f5bd44b5f0166a713a1d285</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-06T14:24:16+01:00</created-at>
      <filename>pluggable-parameter-parsing-01.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">51602</id>
      <size type="integer">2828</size>
      <uploader-id type="integer">33399</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/51602/pluggable-parameter-parsing-01.patch</url>
    </attachment>
  </attachments>
</ticket>
