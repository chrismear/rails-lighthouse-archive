<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15783</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-07T10:15:33+01:00</created-at>
  <creator-id type="integer">10683</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">558</number>
  <permalink>timewithzone-fails-to-unmarshal-properly</permalink>
  <priority type="integer">52</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activesupport bug marshal timewithzone</tag>
  <title>TimeWithZone fails to unmarshal properly</title>
  <updated-at type="datetime">2008-07-15T05:19:10+01:00</updated-at>
  <user-id type="integer">15783</user-id>
  <version type="integer">4</version>
  <user-name>Geoff Buesing</user-name>
  <creator-name>2 College Bums</creator-name>
  <assigned-user-name>Geoff Buesing</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/558</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When marshaling a TimeWithZone, it will marshal properly. However, when unmarshaling that same object the time will change destructively. 

This is a sample on a rails 2.1 development irb 

    Time.zone = &quot;Hawaii&quot;
    a = Time.zone.now
    =&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    b = Marshal.dump(a)
    c = Marshal.load(b)
    =&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.in_time_zone
    =&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    c.in_time_zone
    =&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.utc
    =&gt; Mon Jul 07 09:10:41 UTC 2008
    c.utc
    =&gt; Mon Jul 07 12:10:41 +0300 2008

The loaded times are considered equal and are equal when converted to utc. However the unmarshalled time is still not presented in UTC when requested. 

This can be resolved with:

    module ActiveSupport
    class TimeWithZone
    def marshal_load(variables)
    initialize(variables[0].utc, ::Time.send!(:get_zone, variables[1]))
    end</original-body>
  <latest-body>When marshaling a TimeWithZone, it will marshal properly. However, when unmarshaling that same object the time will change destructively. 

This is a sample on a rails 2.1 development irb 

    Time.zone = &quot;Hawaii&quot;
    a = Time.zone.now
    =&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    b = Marshal.dump(a)
    c = Marshal.load(b)
    =&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.in_time_zone
    =&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    c.in_time_zone
    =&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.utc
    =&gt; Mon Jul 07 09:10:41 UTC 2008
    c.utc
    =&gt; Mon Jul 07 12:10:41 +0300 2008

The loaded times are considered equal and are equal when converted to utc. However the unmarshalled time is still not presented in UTC when requested. 

This can be resolved with:

    module ActiveSupport
    class TimeWithZone
    def marshal_load(variables)
    initialize(variables[0].utc, ::Time.send!(:get_zone, variables[1]))
    end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When marshaling a TimeWithZone, it will marshal properly. However, when unmarshaling that same object the time will change destructively.
&lt;/p&gt;&lt;p&gt;
This is a sample on a rails 2.1 development irb
&lt;/p&gt;&lt;p&gt;
Time.zone = &quot;Hawaii&quot;
&lt;/p&gt;&lt;p&gt;
a = Time.zone.now
&lt;/p&gt;&lt;p&gt;
=&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
&lt;/p&gt;&lt;p&gt;
b = Marshal.dump(a)
&lt;/p&gt;&lt;p&gt;
c = Marshal.load(b)
&lt;/p&gt;&lt;p&gt;
=&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
&lt;/p&gt;&lt;p&gt;
a.in_time_zone
&lt;/p&gt;&lt;p&gt;
=&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
&lt;/p&gt;&lt;p&gt;
c.in_time_zone
&lt;/p&gt;&lt;p&gt;
=&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
&lt;/p&gt;&lt;p&gt;
a.utc
&lt;/p&gt;&lt;p&gt;
=&gt; Mon Jul 07 09:10:41 UTC 2008
&lt;/p&gt;&lt;p&gt;
c.utc
&lt;/p&gt;&lt;p&gt;
=&gt; Mon Jul 07 12:10:41 +0300 2008
&lt;/p&gt;&lt;p&gt;
The loaded times are considered equal and are equal when converted to utc. However the unmarshalled time is still not presented in UTC when requested.
&lt;/p&gt;&lt;p&gt;
This can be resolved with:
&lt;/p&gt;&lt;p&gt;
module ActiveSupport
&lt;/p&gt;&lt;p&gt;
class TimeWithZone
&lt;/p&gt;&lt;p&gt;
def marshal_load(variables)
&lt;/p&gt;&lt;p&gt;
initialize(variables[0].utc, ::Time.send!(:get_zone, variables[1]))
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When marshaling a TimeWithZone, it will marshal properly. However, when unmarshaling that same object the time will change destructively. 

This is a sample on a rails 2.1 development irb 
@@@ ruby
    Time.zone = &quot;Hawaii&quot;
    a = Time.zone.now
    =&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    b = Marshal.dump(a)
    c = Marshal.load(b)
    =&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.in_time_zone
    =&gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    c.in_time_zone
    =&gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.utc
    =&gt; Mon Jul 07 09:10:41 UTC 2008
    c.utc
    =&gt; Mon Jul 07 12:10:41 +0300 2008
@@@
The loaded times are considered equal and are equal when converted to utc. However the unmarshalled time is still not presented in UTC when requested. 

This can be resolved with:
@@@ ruby
    module ActiveSupport
    class TimeWithZone
    def marshal_load(variables)
    initialize(variables[0].utc, ::Time.send!(:get_zone, variables[1]))
    end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When marshaling a TimeWithZone, it will marshal properly. However, when unmarshaling that same object the time will change destructively.
&lt;/p&gt;&lt;p&gt;
This is a sample on a rails 2.1 development irb
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    Time.zone = &amp;quot;Hawaii&amp;quot;
    a = Time.zone.now
    =&amp;gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    b = Marshal.dump(a)
    c = Marshal.load(b)
    =&amp;gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.in_time_zone
    =&amp;gt; Sun, 06 Jul 2008 23:10:41 HST -10:00
    c.in_time_zone
    =&amp;gt; Mon, 07 Jul 2008 02:10:41 HST -10:00
    a.utc
    =&amp;gt; Mon Jul 07 09:10:41 UTC 2008
    c.utc
    =&amp;gt; Mon Jul 07 12:10:41 +0300 2008&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The loaded times are considered equal and are equal when converted to utc. However the unmarshalled time is still not presented in UTC when requested.
&lt;/p&gt;&lt;p&gt;
This can be resolved with:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    module ActiveSupport
    class TimeWithZone
    def marshal_load(variables)
    initialize(variables[0].utc, ::Time.send!(:get_zone, variables[1]))
    end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-07T10:16:24+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">558</number>
      <permalink>timewithzone-fails-to-unmarshal-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug marshal timewithzone</tag>
      <title>TimeWithZone fails to unmarshal properly</title>
      <updated-at type="datetime">2008-07-07T10:16:24+01:00</updated-at>
      <user-id type="integer">10683</user-id>
      <version type="integer">1</version>
      <user-name>2 College Bums</user-name>
      <creator-name>2 College Bums</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/558</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good catch. The call to #utc should fix this. In addition to asserting equality in the tests, we should also assert mtime.utc.utc? and mtime.time.utc? to check for this.

Feel free to roll this into a proper patch if you want; otherwise, easy enough for me to add this fix in.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Good catch. The call to #utc should fix this. In addition to asserting equality in the tests, we should also assert mtime.utc.utc? and mtime.time.utc? to check for this.
&lt;/p&gt;&lt;p&gt;
Feel free to roll this into a proper patch if you want; otherwise, easy enough for me to add this fix in.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-07T21:21:15+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">558</number>
      <permalink>timewithzone-fails-to-unmarshal-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport bug marshal timewithzone</tag>
      <title>TimeWithZone fails to unmarshal properly</title>
      <updated-at type="datetime">2008-07-07T21:21:15+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>2 College Bums</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/558</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We don't feel comfortable in creating a patch ourselves, but thanks for the opportunity.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
We don't feel comfortable in creating a patch ourselves, but thanks for the opportunity.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-08T21:08:04+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">558</number>
      <permalink>timewithzone-fails-to-unmarshal-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport bug marshal timewithzone</tag>
      <title>TimeWithZone fails to unmarshal properly</title>
      <updated-at type="datetime">2008-07-08T21:08:04+01:00</updated-at>
      <user-id type="integer">10683</user-id>
      <version type="integer">3</version>
      <user-name>2 College Bums</user-name>
      <creator-name>2 College Bums</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/558</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Resolved in http://github.com/rails/rails/commit/34510456585216004e483b79beeea3ddc3eb4de6</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Resolved in &lt;a href=&quot;http://github.com/rails/rails/commit/34510456585216004e483b79beeea3ddc3eb4de6&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-15T05:19:10+01:00</created-at>
      <creator-id type="integer">10683</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">558</number>
      <permalink>timewithzone-fails-to-unmarshal-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport bug marshal timewithzone</tag>
      <title>TimeWithZone fails to unmarshal properly</title>
      <updated-at type="datetime">2008-07-15T05:19:10+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">4</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>2 College Bums</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/558</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
