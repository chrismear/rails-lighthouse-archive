<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-17T21:25:53+01:00</created-at>
  <creator-id type="integer">103726</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4893</number>
  <permalink>rails-2-arfirst-method</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>:first active_model find find_first</tag>
  <title>Rails 2 AR#first method</title>
  <updated-at type="datetime">2010-06-21T10:23:05+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">3</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Thiago</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4893</url>
  <priority-name>Low</priority-name>
  <original-body>params    params[:id] = 3
method    Person.first(params[:id])


in Mysql,  &quot;where id='3'&quot;
in sqlite3 &quot;where id='1'&quot;

sqlite3 doesn't consider the parameter</original-body>
  <latest-body>params    params[:id] = 3
method    Person.first(params[:id])


in Mysql,  &quot;where id='3'&quot;
in sqlite3 &quot;where id='1'&quot;

sqlite3 doesn't consider the parameter</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;params params[:id] = 3&lt;br&gt;
method Person.first(params[:id])&lt;/p&gt;
&lt;p&gt;in Mysql, &quot;where id='3'&quot;&lt;br&gt;
in sqlite3 &quot;where id='1'&quot;&lt;/p&gt;
&lt;p&gt;sqlite3 doesn't consider the parameter&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>params    params[:id] = 3
method    Person.first(params[:id])


in Mysql,  &quot;where id='3'&quot;
in sqlite3 &quot;where id='1'&quot;

sqlite3 doesn't consider the parameter</body>
      <body-html>&lt;div&gt;&lt;p&gt;params params[:id] = 3&lt;br&gt;
method Person.first(params[:id])&lt;/p&gt;
&lt;p&gt;in Mysql, &quot;where id='3'&quot;&lt;br&gt;
in sqlite3 &quot;where id='1'&quot;&lt;/p&gt;
&lt;p&gt;sqlite3 doesn't consider the parameter&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-17T21:25:53+01:00</created-at>
      <creator-id type="integer">103726</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4893</number>
      <permalink>rails-2-arfirst-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:first active_model find find_first</tag>
      <title>Rails 2 AR#first method</title>
      <updated-at type="datetime">2010-06-17T21:25:54+01:00</updated-at>
      <user-id type="integer">103726</user-id>
      <version type="integer">1</version>
      <user-name>Thiago</user-name>
      <creator-name>Thiago</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4893</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The `first` method ignores that id in _all_ database drivers.  `first` just adds a `limit 1` to the query - so in your case, it looks like in your mysql database, the first Person record happened to have an id of 3.  Here's what I get in both mysql and sqlite3:

@@@ ruby
&gt;&gt; Post.create!
=&gt; #&lt;Post id: 1, title: nil, created_at: &quot;2010-06-19 02:09:11&quot;, updated_at: &quot;2010-06-19 02:09:11&quot;&gt;
&gt;&gt; Post.create!
=&gt; #&lt;Post id: 2, title: nil, created_at: &quot;2010-06-19 02:09:14&quot;, updated_at: &quot;2010-06-19 02:09:14&quot;&gt;
&gt;&gt; Post.create!
=&gt; #&lt;Post id: 3, title: nil, created_at: &quot;2010-06-19 02:09:17&quot;, updated_at: &quot;2010-06-19 02:09:17&quot;&gt;
&gt;&gt; Post.first
=&gt; #&lt;Post id: 1, title: nil, created_at: &quot;2010-06-19 02:09:11&quot;, updated_at: &quot;2010-06-19 02:09:11&quot;&gt;
&gt;&gt; Post.first 3 # =&gt; the &quot;3&quot; is totally ignored
=&gt; #&lt;Post id: 1, title: nil, created_at: &quot;2010-06-19 02:09:11&quot;, updated_at: &quot;2010-06-19 02:09:11&quot;&gt;
@@@

If you want to get the record by id, just use find:

@@@ ruby
Person.find params[:id]
@@@

If you want to find the first with some conditions, pass the conditions:

@@@ ruby
Person.first :conditions =&gt; {:id =&gt; 3}
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The &lt;code&gt;first&lt;/code&gt; method ignores that id in &lt;em&gt;all&lt;/em&gt;
database drivers. &lt;code&gt;first&lt;/code&gt; just adds a &lt;code&gt;limit
1&lt;/code&gt; to the query - so in your case, it looks like in your
mysql database, the first Person record happened to have an id of
3. Here's what I get in both mysql and sqlite3:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; Post.create!
=&amp;gt; #&amp;lt;Post id: 1, title: nil, created_at: &quot;2010-06-19 02:09:11&quot;, updated_at: &quot;2010-06-19 02:09:11&quot;&amp;gt;
&amp;gt;&amp;gt; Post.create!
=&amp;gt; #&amp;lt;Post id: 2, title: nil, created_at: &quot;2010-06-19 02:09:14&quot;, updated_at: &quot;2010-06-19 02:09:14&quot;&amp;gt;
&amp;gt;&amp;gt; Post.create!
=&amp;gt; #&amp;lt;Post id: 3, title: nil, created_at: &quot;2010-06-19 02:09:17&quot;, updated_at: &quot;2010-06-19 02:09:17&quot;&amp;gt;
&amp;gt;&amp;gt; Post.first
=&amp;gt; #&amp;lt;Post id: 1, title: nil, created_at: &quot;2010-06-19 02:09:11&quot;, updated_at: &quot;2010-06-19 02:09:11&quot;&amp;gt;
&amp;gt;&amp;gt; Post.first 3 # =&amp;gt; the &quot;3&quot; is totally ignored
=&amp;gt; #&amp;lt;Post id: 1, title: nil, created_at: &quot;2010-06-19 02:09:11&quot;, updated_at: &quot;2010-06-19 02:09:11&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you want to get the record by id, just use find:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Person.find params[:id]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you want to find the first with some conditions, pass the
conditions:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Person.first :conditions =&amp;gt; {:id =&amp;gt; 3}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-19T03:13:21+01:00</created-at>
      <creator-id type="integer">103726</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4893</number>
      <permalink>rails-2-arfirst-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:first active_model find find_first</tag>
      <title>Rails 2 AR#first method</title>
      <updated-at type="datetime">2010-06-19T03:13:23+01:00</updated-at>
      <user-id type="integer">5060</user-id>
      <version type="integer">2</version>
      <user-name>Jeff Dean</user-name>
      <creator-name>Thiago</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4893</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-21T10:22:59+01:00</created-at>
      <creator-id type="integer">103726</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4893</number>
      <permalink>rails-2-arfirst-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>:first active_model find find_first</tag>
      <title>Rails 2 AR#first method</title>
      <updated-at type="datetime">2010-06-21T10:23:05+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Thiago</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4893</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
