<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-27T03:02:53+01:00</created-at>
  <creator-id type="integer">21356</creator-id>
  <milestone-due-on type="datetime">2009-03-18T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">9901</milestone-id>
  <number type="integer">258</number>
  <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
  <priority type="integer">11947</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.1 activerecord bug eagerloading named_scope order</tag>
  <title>Eager loading optimisation misses if order specified</title>
  <updated-at type="datetime">2010-04-12T08:52:44+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">9</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Zyclops</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
  <milestone-title>2.1.1</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When no conditions are passed into find, 2 individual queries are run. One to fetch from the table people and the other from addresses. When you provide some conditions that reference the table, the queries are combined into a single query with left outer joins.  

The issue is that when you only specify an order, the individual queries still occur and the ordering throws an error as the table is not aliased.

I presume the expected behavior should be that order is checked and any included tables are left joined and aliased.

@@@ ruby
class Person
  belongs_to :address
end

class Address
end

def my_action
  @results =Person.find(:all, :include =&gt; [:address], :order =&gt; 'addresses.street_name DESC'
end
@@@</original-body>
  <latest-body>When no conditions are passed into find, 2 individual queries are run. One to fetch from the table people and the other from addresses. When you provide some conditions that reference the table, the queries are combined into a single query with left outer joins.  

The issue is that when you only specify an order, the individual queries still occur and the ordering throws an error as the table is not aliased.

I presume the expected behavior should be that order is checked and any included tables are left joined and aliased.

@@@ ruby
class Person
  belongs_to :address
end

class Address
end

def my_action
  @results =Person.find(:all, :include =&gt; [:address], :order =&gt; 'addresses.street_name DESC'
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When no conditions are passed into find, 2 individual queries are run. One to fetch from the table people and the other from addresses. When you provide some conditions that reference the table, the queries are combined into a single query with left outer joins.
&lt;/p&gt;&lt;p&gt;
The issue is that when you only specify an order, the individual queries still occur and the ordering throws an error as the table is not aliased.
&lt;/p&gt;&lt;p&gt;
I presume the expected behavior should be that order is checked and any included tables are left joined and aliased.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Person
  belongs_to :address
end

class Address
end

def my_action
  @results =Person.find(:all, :include =&amp;gt; [:address], :order =&amp;gt; 'addresses.street_name DESC'
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When no conditions are passed into find, 2 individual queries are run. One to fetch from the table people and the other from addresses. When you provide some conditions that reference the table, the queries are combined into a single query with left outer joins.  

The issue is that when you only specify an order, the individual queries still occur and the ordering throws an error as the table is not aliased.

I presume the expected behavior should be that order is checked and any included tables are left joined and aliased.

@@@ ruby
class Person
  belongs_to :address
end

class Address
end

def my_action
  @results =Person.find(:all, :include =&gt; [:address], :order =&gt; 'addresses.street_name DESC'
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When no conditions are passed into find, 2 individual queries are run. One to fetch from the table people and the other from addresses. When you provide some conditions that reference the table, the queries are combined into a single query with left outer joins.
&lt;/p&gt;&lt;p&gt;
The issue is that when you only specify an order, the individual queries still occur and the ordering throws an error as the table is not aliased.
&lt;/p&gt;&lt;p&gt;
I presume the expected behavior should be that order is checked and any included tables are left joined and aliased.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Person
  belongs_to :address
end

class Address
end

def my_action
  @results =Person.find(:all, :include =&amp;gt; [:address], :order =&amp;gt; 'addresses.street_name DESC'
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-27T03:02:53+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2008-05-27T03:02:53+01:00</updated-at>
      <user-id type="integer">21356</user-id>
      <version type="integer">1</version>
      <user-name>Zyclops</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>On what database? This works for me. Please attach a failing test case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
On what database? This works for me. Please attach a failing test case.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-27T03:35:52+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2008-05-27T03:35:52+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Got same problem (rev. 9250).

With the code published by Zyclops, try:

Person.find(:first).address

This generate two queries:
SELECT * FROM `persons` LIMIT 1
SELECT * FROM `addresses` WHERE (`addresses`.id = 1 )

When i expected only one with a LEFT JOIN.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Got same problem (rev. 9250).
&lt;/p&gt;&lt;p&gt;
With the code published by Zyclops, try:
&lt;/p&gt;&lt;p&gt;
Person.find(:first).address
&lt;/p&gt;&lt;p&gt;
This generate two queries:
&lt;/p&gt;&lt;p&gt;
SELECT * FROM `persons` LIMIT 1
&lt;/p&gt;&lt;p&gt;
SELECT * FROM `addresses` WHERE (`addresses`.id = 1 )
&lt;/p&gt;&lt;p&gt;
When i expected only one with a LEFT JOIN.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-03T08:20:49+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2008-06-03T08:20:49+01:00</updated-at>
      <user-id type="integer">22058</user-id>
      <version type="integer">3</version>
      <user-name>Yannick Lecaillez</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yannick, you don't have an :order referencing the :included table. Two queries are expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Yannick, you don't have an :order referencing the :included table. Two queries are expected.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-03T08:57:00+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2008-06-03T08:57:00+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have the same problem (Rails 2.1.0 via gems) with a named_scope:

@@@ Ruby
class Release
  belongs_to :movie
  named_scope :by_title, :order =&gt; &quot;movies.title&quot;
end

class Movie
  has_many :releases
end

Release.by_title.find(:all)
# PGError: ERROR:  missing FROM-clause entry for table &quot;movies&quot;
@@@

If I add a dummy :conditions key (e.g. &quot;movies.title is not null&quot;) to the named_scope, it works.

I've created a test for this particular case and it passes in HEAD. I think the bug was resolved in #372.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I have the same problem (Rails 2.1.0 via gems) with a named_scope:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Ruby&quot;&gt;class Release
  belongs_to :movie
  named_scope :by_title, :order =&amp;gt; &amp;quot;movies.title&amp;quot;
end

class Movie
  has_many :releases
end

Release.by_title.find(:all)
# PGError: ERROR:  missing FROM-clause entry for table &amp;quot;movies&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
If I add a dummy :conditions key (e.g. &quot;movies.title is not null&quot;) to the named_scope, it works.
&lt;/p&gt;&lt;p&gt;
I've created a test for this particular case and it passes in HEAD. I think the bug was resolved in &lt;a href=&quot;/projects/8994/tickets/372&quot; title=&quot;Ticket #372&quot;&gt;#372&lt;/a&gt;.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-25T16:37:08+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1 activerecord bug eagerloading named_scope order</tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2008-06-25T16:37:08+01:00</updated-at>
      <user-id type="integer">15180</user-id>
      <version type="integer">5</version>
      <user-name>Stefano C.</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Stefano, you don't reference the association in your example.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Stefano, you don't reference the association in your example.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-25T18:43:37+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1 activerecord bug eagerloading named_scope order</tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2008-06-25T18:43:37+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Woops, I was trying the various combinations and I pasted the wrong one :-)

Here is the right one, straight from my project:

@@@ Ruby
class Release
  belongs_to :movie
  named_scope :current, :conditions =&gt; [&quot;status in (?)&quot;, [0, 1, 2]]
  named_scope :by_title, :order =&gt; &quot;movies.title&quot;
end

class Movie
  has_many :releases
end

Release.current.by_title.find(:all, :include =&gt; :movie)
# SELECT * FROM &quot;releases&quot; WHERE (status in (0,1,2)) ORDER BY movies.title
# PGError: ERROR:  missing FROM-clause entry for table &quot;movies&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Woops, I was trying the various combinations and I pasted the wrong one :-)
&lt;/p&gt;&lt;p&gt;
Here is the right one, straight from my project:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Ruby&quot;&gt;class Release
  belongs_to :movie
  named_scope :current, :conditions =&amp;gt; [&amp;quot;status in (?)&amp;quot;, [0, 1, 2]]
  named_scope :by_title, :order =&amp;gt; &amp;quot;movies.title&amp;quot;
end

class Movie
  has_many :releases
end

Release.current.by_title.find(:all, :include =&amp;gt; :movie)
# SELECT * FROM &amp;quot;releases&amp;quot; WHERE (status in (0,1,2)) ORDER BY movies.title
# PGError: ERROR:  missing FROM-clause entry for table &amp;quot;movies&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-25T19:31:39+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1 activerecord bug eagerloading named_scope order</tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2008-06-25T19:31:39+01:00</updated-at>
      <user-id type="integer">15180</user-id>
      <version type="integer">7</version>
      <user-name>Stefano C.</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>In Rails 2.3.5 this seems to eager load for me:

    &gt;&gt; Release.current.by_title.find(:all, :include =&gt; :movie)

      Release Load Including Associations (0.3ms)   SELECT &quot;releases&quot;.&quot;id&quot; AS t0_r0, &quot;releases&quot;.&quot;movie_id&quot; AS t0_r1, &quot;releases&quot;.&quot;created_at&quot; AS t0_r2, &quot;releases&quot;.&quot;updated_at&quot; AS t0_r3, &quot;releases&quot;.&quot;status&quot; AS t0_r4, &quot;movies&quot;.&quot;id&quot; AS t1_r0, &quot;movies&quot;.&quot;title&quot; AS t1_r1, &quot;movies&quot;.&quot;created_at&quot; AS t1_r2, &quot;movies&quot;.&quot;updated_at&quot; AS t1_r3 FROM &quot;releases&quot; LEFT OUTER JOIN &quot;movies&quot; ON &quot;movies&quot;.id = &quot;releases&quot;.movie_id WHERE (status in (0,1,2)) ORDER BY movies.title</body>
      <body-html>&lt;div&gt;&lt;p&gt;In Rails 2.3.5 this seems to eager load for me:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; Release.current.by_title.find(:all, :include =&amp;gt; :movie)

  Release Load Including Associations (0.3ms)   SELECT &quot;releases&quot;.&quot;id&quot; AS t0_r0, &quot;releases&quot;.&quot;movie_id&quot; AS t0_r1, &quot;releases&quot;.&quot;created_at&quot; AS t0_r2, &quot;releases&quot;.&quot;updated_at&quot; AS t0_r3, &quot;releases&quot;.&quot;status&quot; AS t0_r4, &quot;movies&quot;.&quot;id&quot; AS t1_r0, &quot;movies&quot;.&quot;title&quot; AS t1_r1, &quot;movies&quot;.&quot;created_at&quot; AS t1_r2, &quot;movies&quot;.&quot;updated_at&quot; AS t1_r3 FROM &quot;releases&quot; LEFT OUTER JOIN &quot;movies&quot; ON &quot;movies&quot;.id = &quot;releases&quot;.movie_id WHERE (status in (0,1,2)) ORDER BY movies.title&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T08:44:37+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1 activerecord bug eagerloading named_scope order</tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2010-04-10T08:44:38+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">8</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking as resolved, appears to be fixed in 2.3.5.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking as resolved, appears to be fixed in 2.3.5.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-12T08:52:41+01:00</created-at>
      <creator-id type="integer">21356</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">258</number>
      <permalink>eager-loading-optimisation-misses-if-order-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord bug eagerloading named_scope order</tag>
      <title>Eager loading optimisation misses if order specified</title>
      <updated-at type="datetime">2010-04-12T08:52:44+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">9</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Zyclops</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/258</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0980cc775fc659a9a3842b819028df27ded830d5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-25T16:37:08+01:00</created-at>
      <filename>0001-Added-a-test-case-for-named_scopes-with-an-order-cl.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">29284</id>
      <size type="integer">1449</size>
      <uploader-id type="integer">15180</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/29284/0001-Added-a-test-case-for-named_scopes-with-an-order-cl.patch</url>
    </attachment>
  </attachments>
</ticket>
