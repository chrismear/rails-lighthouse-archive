<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-11T20:01:43+00:00</created-at>
  <creator-id type="integer">141000</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6565</number>
  <permalink>datetimeparse-exceptions-not-escalated-in-activerecord-while-setting-attributes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>DateTime#parse exceptions not escalated in ActiveRecord while setting attributes</title>
  <updated-at type="datetime">2011-03-11T20:01:45+00:00</updated-at>
  <user-id type="integer">141000</user-id>
  <version type="integer">1</version>
  <user-name>Xavier Spriet</user-name>
  <creator-name>Xavier Spriet</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6565</url>
  <priority-name nil="true"></priority-name>
  <original-body>While updating a model with a `datetime` field, if the datetime string is provided in a format that `DateTime#parse` is not able to parse,
the field is just set to `nil`.

While calling `DateTime#parse` directly against that string, an `ArgumentError: invalid date` exception is thrown.

## Setting through ActiveRecord: ##
@@@
ruby-1.9.2-p180 :001 &gt; record = Production.where(:record_timestamp =&gt; nil).last

 =&gt; #&lt;Production id: 175178, inverter_id: 13, created_at: &quot;2011-03-11 17:59:16&quot;, updated_at: &quot;2011-03-11 17:59:16&quot;, kwh_total: -1000.0, irradiance: 0.0, record_timestamp: nil, ambient_temp: nil&gt; 


ruby-1.9.2-p180 :002 &gt; record.record_timestamp = '09/27/2010 22:26:49'
 =&gt; &quot;09/27/2010 22:26:49&quot; 
ruby-1.9.2-p180 :003 &gt; record.record_timestamp
 =&gt; nil

@@@

## Using DateTime#parse: ##

@@@
ruby-1.9.2-p180 :004 &gt; DateTime.parse '09/27/2010 22:26:49'
ArgumentError: invalid date
...
@@@</original-body>
  <latest-body>While updating a model with a `datetime` field, if the datetime string is provided in a format that `DateTime#parse` is not able to parse,
the field is just set to `nil`.

While calling `DateTime#parse` directly against that string, an `ArgumentError: invalid date` exception is thrown.

## Setting through ActiveRecord: ##
@@@
ruby-1.9.2-p180 :001 &gt; record = Production.where(:record_timestamp =&gt; nil).last

 =&gt; #&lt;Production id: 175178, inverter_id: 13, created_at: &quot;2011-03-11 17:59:16&quot;, updated_at: &quot;2011-03-11 17:59:16&quot;, kwh_total: -1000.0, irradiance: 0.0, record_timestamp: nil, ambient_temp: nil&gt; 


ruby-1.9.2-p180 :002 &gt; record.record_timestamp = '09/27/2010 22:26:49'
 =&gt; &quot;09/27/2010 22:26:49&quot; 
ruby-1.9.2-p180 :003 &gt; record.record_timestamp
 =&gt; nil

@@@

## Using DateTime#parse: ##

@@@
ruby-1.9.2-p180 :004 &gt; DateTime.parse '09/27/2010 22:26:49'
ArgumentError: invalid date
...
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;While updating a model with a &lt;code&gt;datetime&lt;/code&gt; field, if
the datetime string is provided in a format that
&lt;code&gt;DateTime#parse&lt;/code&gt; is not able to parse,&lt;br&gt;
the field is just set to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;While calling &lt;code&gt;DateTime#parse&lt;/code&gt; directly against that
string, an &lt;code&gt;ArgumentError: invalid date&lt;/code&gt; exception is
thrown.&lt;/p&gt;
&lt;h2&gt;Setting through ActiveRecord:&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.2-p180 :001 &amp;gt; record = Production.where(:record_timestamp =&amp;gt; nil).last

 =&amp;gt; #&amp;lt;Production id: 175178, inverter_id: 13, created_at: &quot;2011-03-11 17:59:16&quot;, updated_at: &quot;2011-03-11 17:59:16&quot;, kwh_total: -1000.0, irradiance: 0.0, record_timestamp: nil, ambient_temp: nil&amp;gt; 


ruby-1.9.2-p180 :002 &amp;gt; record.record_timestamp = '09/27/2010 22:26:49'
 =&amp;gt; &quot;09/27/2010 22:26:49&quot; 
ruby-1.9.2-p180 :003 &amp;gt; record.record_timestamp
 =&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Using DateTime#parse:&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.2-p180 :004 &amp;gt; DateTime.parse '09/27/2010 22:26:49'
ArgumentError: invalid date
...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While updating a model with a `datetime` field, if the datetime string is provided in a format that `DateTime#parse` is not able to parse,
the field is just set to `nil`.

While calling `DateTime#parse` directly against that string, an `ArgumentError: invalid date` exception is thrown.

## Setting through ActiveRecord: ##
@@@
ruby-1.9.2-p180 :001 &gt; record = Production.where(:record_timestamp =&gt; nil).last

 =&gt; #&lt;Production id: 175178, inverter_id: 13, created_at: &quot;2011-03-11 17:59:16&quot;, updated_at: &quot;2011-03-11 17:59:16&quot;, kwh_total: -1000.0, irradiance: 0.0, record_timestamp: nil, ambient_temp: nil&gt; 


ruby-1.9.2-p180 :002 &gt; record.record_timestamp = '09/27/2010 22:26:49'
 =&gt; &quot;09/27/2010 22:26:49&quot; 
ruby-1.9.2-p180 :003 &gt; record.record_timestamp
 =&gt; nil

@@@

## Using DateTime#parse: ##

@@@
ruby-1.9.2-p180 :004 &gt; DateTime.parse '09/27/2010 22:26:49'
ArgumentError: invalid date
...
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;While updating a model with a &lt;code&gt;datetime&lt;/code&gt; field, if
the datetime string is provided in a format that
&lt;code&gt;DateTime#parse&lt;/code&gt; is not able to parse,&lt;br&gt;
the field is just set to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;While calling &lt;code&gt;DateTime#parse&lt;/code&gt; directly against that
string, an &lt;code&gt;ArgumentError: invalid date&lt;/code&gt; exception is
thrown.&lt;/p&gt;
&lt;h2&gt;Setting through ActiveRecord:&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.2-p180 :001 &amp;gt; record = Production.where(:record_timestamp =&amp;gt; nil).last

 =&amp;gt; #&amp;lt;Production id: 175178, inverter_id: 13, created_at: &quot;2011-03-11 17:59:16&quot;, updated_at: &quot;2011-03-11 17:59:16&quot;, kwh_total: -1000.0, irradiance: 0.0, record_timestamp: nil, ambient_temp: nil&amp;gt; 


ruby-1.9.2-p180 :002 &amp;gt; record.record_timestamp = '09/27/2010 22:26:49'
 =&amp;gt; &quot;09/27/2010 22:26:49&quot; 
ruby-1.9.2-p180 :003 &amp;gt; record.record_timestamp
 =&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Using DateTime#parse:&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.2-p180 :004 &amp;gt; DateTime.parse '09/27/2010 22:26:49'
ArgumentError: invalid date
...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-11T20:01:43+00:00</created-at>
      <creator-id type="integer">141000</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6565</number>
      <permalink>datetimeparse-exceptions-not-escalated-in-activerecord-while-setting-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>DateTime#parse exceptions not escalated in ActiveRecord while setting attributes</title>
      <updated-at type="datetime">2011-03-11T20:01:45+00:00</updated-at>
      <user-id type="integer">141000</user-id>
      <version type="integer">1</version>
      <user-name>Xavier Spriet</user-name>
      <creator-name>Xavier Spriet</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6565</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
