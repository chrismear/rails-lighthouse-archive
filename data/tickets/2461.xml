<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-08T21:10:25+01:00</created-at>
  <creator-id type="integer">7319</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2461</number>
  <permalink>joined-table-not-quoted-with-has_many-through</permalink>
  <priority type="integer">1610</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>has_many_through</tag>
  <title>Joined table not quoted with has_many :through</title>
  <updated-at type="datetime">2010-12-20T20:11:47+00:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">5</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>Fran&#231;ois Beausoleil</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2461</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Given the following models:

@@@ ruby
class EmbedCode &lt; AR::B
  has_many :references
  has_many :orders, :through =&gt; :references
end

class Reference &lt; AR::B
  belongs_to :embed_code
  belongs_to :order
end

class Order &lt; AR::B
end
@@@

The following will fail under both MySQL and SQLite3:

@@@
EmbedCode.first.orders.count
@@@

The exact messages are:

@@@
sqlite&gt; SELECT count(*) AS count_all FROM &quot;orders&quot;  INNER JOIN references ON orders.id = references.order_id    WHERE ((&quot;references&quot;.embed_code_id = 664786516));
SQL error: near &quot;references&quot;: syntax error

mysql&gt; SELECT count(*) AS count_all FROM `orders`  INNER JOIN references ON orders.id = references.order_id    WHERE ((`references`.embed_code_id = 664786516)); 
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references ON orders.id = references.order_id    WHERE ((`references`.embed_code' at line 1
@@@

The problem is the naked references in the INNER JOIN clause.  References is a reserved word in SQL-land.</original-body>
  <latest-body>Given the following models:

@@@ ruby
class EmbedCode &lt; AR::B
  has_many :references
  has_many :orders, :through =&gt; :references
end

class Reference &lt; AR::B
  belongs_to :embed_code
  belongs_to :order
end

class Order &lt; AR::B
end
@@@

The following will fail under both MySQL and SQLite3:

@@@
EmbedCode.first.orders.count
@@@

The exact messages are:

@@@
sqlite&gt; SELECT count(*) AS count_all FROM &quot;orders&quot;  INNER JOIN references ON orders.id = references.order_id    WHERE ((&quot;references&quot;.embed_code_id = 664786516));
SQL error: near &quot;references&quot;: syntax error

mysql&gt; SELECT count(*) AS count_all FROM `orders`  INNER JOIN references ON orders.id = references.order_id    WHERE ((`references`.embed_code_id = 664786516)); 
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references ON orders.id = references.order_id    WHERE ((`references`.embed_code' at line 1
@@@

The problem is the naked references in the INNER JOIN clause.  References is a reserved word in SQL-land.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given the following models:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class EmbedCode &amp;lt; AR::B
  has_many :references
  has_many :orders, :through =&amp;gt; :references
end

class Reference &amp;lt; AR::B
  belongs_to :embed_code
  belongs_to :order
end

class Order &amp;lt; AR::B
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following will fail under both MySQL and SQLite3:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
EmbedCode.first.orders.count
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The exact messages are:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
sqlite&amp;gt; SELECT count(*) AS count_all FROM &amp;quot;orders&amp;quot;  INNER JOIN references ON orders.id = references.order_id    WHERE ((&amp;quot;references&amp;quot;.embed_code_id = 664786516));
SQL error: near &amp;quot;references&amp;quot;: syntax error

mysql&amp;gt; SELECT count(*) AS count_all FROM `orders`  INNER JOIN references ON orders.id = references.order_id    WHERE ((`references`.embed_code_id = 664786516)); 
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references ON orders.id = references.order_id    WHERE ((`references`.embed_code' at line 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is the naked references in the INNER JOIN clause.
References is a reserved word in SQL-land.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given the following models:

@@@ ruby
class EmbedCode &lt; AR::B
  has_many :references
  has_many :orders, :through =&gt; :references
end

class Reference &lt; AR::B
  belongs_to :embed_code
  belongs_to :order
end

class Order &lt; AR::B
end
@@@

The following will fail under both MySQL and SQLite3:

@@@
EmbedCode.first.orders.count
@@@

The exact messages are:

@@@
sqlite&gt; SELECT count(*) AS count_all FROM &quot;orders&quot;  INNER JOIN references ON orders.id = references.order_id    WHERE ((&quot;references&quot;.embed_code_id = 664786516));
SQL error: near &quot;references&quot;: syntax error

mysql&gt; SELECT count(*) AS count_all FROM `orders`  INNER JOIN references ON orders.id = references.order_id    WHERE ((`references`.embed_code_id = 664786516)); 
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references ON orders.id = references.order_id    WHERE ((`references`.embed_code' at line 1
@@@

The problem is the naked references in the INNER JOIN clause.  References is a reserved word in SQL-land.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given the following models:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class EmbedCode &amp;lt; AR::B
  has_many :references
  has_many :orders, :through =&amp;gt; :references
end

class Reference &amp;lt; AR::B
  belongs_to :embed_code
  belongs_to :order
end

class Order &amp;lt; AR::B
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following will fail under both MySQL and SQLite3:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
EmbedCode.first.orders.count
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The exact messages are:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
sqlite&amp;gt; SELECT count(*) AS count_all FROM &amp;quot;orders&amp;quot;  INNER JOIN references ON orders.id = references.order_id    WHERE ((&amp;quot;references&amp;quot;.embed_code_id = 664786516));
SQL error: near &amp;quot;references&amp;quot;: syntax error

mysql&amp;gt; SELECT count(*) AS count_all FROM `orders`  INNER JOIN references ON orders.id = references.order_id    WHERE ((`references`.embed_code_id = 664786516)); 
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references ON orders.id = references.order_id    WHERE ((`references`.embed_code' at line 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is the naked references in the INNER JOIN clause.
References is a reserved word in SQL-land.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-08T21:10:25+01:00</created-at>
      <creator-id type="integer">7319</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2461</number>
      <permalink>joined-table-not-quoted-with-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through</tag>
      <title>Joined table not quoted with has_many :through</title>
      <updated-at type="datetime">2009-04-08T21:10:30+01:00</updated-at>
      <user-id type="integer">7319</user-id>
      <version type="integer">1</version>
      <user-name>Fran&#231;ois Beausoleil</user-name>
      <creator-name>Fran&#231;ois Beausoleil</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2461</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>mynyml attempted to reproduce on 2.3.2 and it was fixed:  http://gist.github.com/92224

I had the bug on 2.2.2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;mynyml attempted to reproduce on 2.3.2 and it was fixed:
&lt;a href=&quot;http://gist.github.com/92224&quot;&gt;http://gist.github.com/92224&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I had the bug on 2.2.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-09T19:20:19+01:00</created-at>
      <creator-id type="integer">7319</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2461</number>
      <permalink>joined-table-not-quoted-with-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through</tag>
      <title>Joined table not quoted with has_many :through</title>
      <updated-at type="datetime">2009-04-09T19:20:21+01:00</updated-at>
      <user-id type="integer">7319</user-id>
      <version type="integer">2</version>
      <user-name>Fran&#231;ois Beausoleil</user-name>
      <creator-name>Fran&#231;ois Beausoleil</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2461</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:46+01:00</created-at>
      <creator-id type="integer">7319</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2461</number>
      <permalink>joined-table-not-quoted-with-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through</tag>
      <title>Joined table not quoted with has_many :through</title>
      <updated-at type="datetime">2010-05-04T18:48:46+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Fran&#231;ois Beausoleil</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2461</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is fixed in master so it can be closed. The behaviour is captured by `test_inner_join_with_quoted_table_name` in `has_many_through_associations_test.rb` and `test_eager_load_has_many_through_quotes_table_and_column_names` in `eager_test.rb`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is fixed in master so it can be closed. The behaviour is
captured by &lt;code&gt;test_inner_join_with_quoted_table_name&lt;/code&gt; in
&lt;code&gt;has_many_through_associations_test.rb&lt;/code&gt; and
&lt;code&gt;test_eager_load_has_many_through_quotes_table_and_column_names&lt;/code&gt;
in &lt;code&gt;eager_test.rb&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-16T08:58:00+00:00</created-at>
      <creator-id type="integer">7319</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2461</number>
      <permalink>joined-table-not-quoted-with-has_many-through</permalink>
      <priority type="integer">1610</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through</tag>
      <title>Joined table not quoted with has_many :through</title>
      <updated-at type="datetime">2010-12-16T08:58:08+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">4</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Fran&#231;ois Beausoleil</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2461</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-20T20:11:35+00:00</created-at>
      <creator-id type="integer">7319</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2461</number>
      <permalink>joined-table-not-quoted-with-has_many-through</permalink>
      <priority type="integer">1610</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>has_many_through</tag>
      <title>Joined table not quoted with has_many :through</title>
      <updated-at type="datetime">2010-12-20T20:11:47+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">5</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Fran&#231;ois Beausoleil</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2461</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
