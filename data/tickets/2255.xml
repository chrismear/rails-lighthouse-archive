<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-16T17:07:44+00:00</created-at>
  <creator-id type="integer">27498</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2255</number>
  <permalink>bundled-rack-10-doesnt-loaded-first-in-rails-232</permalink>
  <priority type="integer">1412</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>actionpack load rack</tag>
  <title>Bundled rack-1.0 doesn't loaded first in Rails 2.3.2</title>
  <updated-at type="datetime">2009-03-16T17:17:49+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Peter Kieltyka</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2255</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The Rails 2.3.2 release contains a bug that was later resolved in the next commit: http://github.com/rails/rails/commit/39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4

Due to a load path bug, if a version of Rack is installed as a gem, it will be be used instead of the bundled 1.0 version that comes with Rails 2.3.2. In my case I have rack-0.9.1 installed as a gem and when submitting a form the parameters look like:

{ &quot;post[body]&quot; =&gt; &quot;data&quot; }

If I remove rack-0.9.1 or use commit 39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4 which loads the bundled Rack-1.0 first, the same post will return the params hash:

{ &quot;post&quot; =&gt; { &quot;body&quot; =&gt; &quot;data&quot; } }

In the common case where a controller has a create action with the code @post = Post.new(params[:post]), in the current case of Rails 2.3.2, params[:post] will return nil and break the application.</original-body>
  <latest-body>The Rails 2.3.2 release contains a bug that was later resolved in the next commit: http://github.com/rails/rails/commit/39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4

Due to a load path bug, if a version of Rack is installed as a gem, it will be be used instead of the bundled 1.0 version that comes with Rails 2.3.2. In my case I have rack-0.9.1 installed as a gem and when submitting a form the parameters look like:

{ &quot;post[body]&quot; =&gt; &quot;data&quot; }

If I remove rack-0.9.1 or use commit 39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4 which loads the bundled Rack-1.0 first, the same post will return the params hash:

{ &quot;post&quot; =&gt; { &quot;body&quot; =&gt; &quot;data&quot; } }

In the common case where a controller has a create action with the code @post = Post.new(params[:post]), in the current case of Rails 2.3.2, params[:post] will return nil and break the application.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The Rails 2.3.2 release contains a bug that was later resolved
in the next commit: &lt;a href=&quot;http://github.com/rails/rails/commit/39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Due to a load path bug, if a version of Rack is installed as a
gem, it will be be used instead of the bundled 1.0 version that
comes with Rails 2.3.2. In my case I have rack-0.9.1 installed as a
gem and when submitting a form the parameters look like:&lt;/p&gt;
&lt;p&gt;{ &quot;post[body]&quot; =&amp;gt; &quot;data&quot; }&lt;/p&gt;
&lt;p&gt;If I remove rack-0.9.1 or use commit
39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4 which loads the bundled
Rack-1.0 first, the same post will return the params hash:&lt;/p&gt;
&lt;p&gt;{ &quot;post&quot; =&amp;gt; { &quot;body&quot; =&amp;gt; &quot;data&quot; } }&lt;/p&gt;
&lt;p&gt;In the common case where a controller has a create action with
the code @post = Post.new(params[:post]), in the current case of
Rails 2.3.2, params[:post] will return nil and break the
application.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The Rails 2.3.2 release contains a bug that was later resolved in the next commit: http://github.com/rails/rails/commit/39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4

Due to a load path bug, if a version of Rack is installed as a gem, it will be be used instead of the bundled 1.0 version that comes with Rails 2.3.2. In my case I have rack-0.9.1 installed as a gem and when submitting a form the parameters look like:

{ &quot;post[body]&quot; =&gt; &quot;data&quot; }

If I remove rack-0.9.1 or use commit 39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4 which loads the bundled Rack-1.0 first, the same post will return the params hash:

{ &quot;post&quot; =&gt; { &quot;body&quot; =&gt; &quot;data&quot; } }

In the common case where a controller has a create action with the code @post = Post.new(params[:post]), in the current case of Rails 2.3.2, params[:post] will return nil and break the application.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The Rails 2.3.2 release contains a bug that was later resolved
in the next commit: &lt;a href=&quot;http://github.com/rails/rails/commit/39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Due to a load path bug, if a version of Rack is installed as a
gem, it will be be used instead of the bundled 1.0 version that
comes with Rails 2.3.2. In my case I have rack-0.9.1 installed as a
gem and when submitting a form the parameters look like:&lt;/p&gt;
&lt;p&gt;{ &quot;post[body]&quot; =&amp;gt; &quot;data&quot; }&lt;/p&gt;
&lt;p&gt;If I remove rack-0.9.1 or use commit
39ff550fa88da9a22d8c21ca872f5e4d0d83f8d4 which loads the bundled
Rack-1.0 first, the same post will return the params hash:&lt;/p&gt;
&lt;p&gt;{ &quot;post&quot; =&amp;gt; { &quot;body&quot; =&amp;gt; &quot;data&quot; } }&lt;/p&gt;
&lt;p&gt;In the common case where a controller has a create action with
the code @post = Post.new(params[:post]), in the current case of
Rails 2.3.2, params[:post] will return nil and break the
application.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-16T17:07:45+00:00</created-at>
      <creator-id type="integer">27498</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2255</number>
      <permalink>bundled-rack-10-doesnt-loaded-first-in-rails-232</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack load rack</tag>
      <title>Bundled rack-1.0 doesn't loaded first in Rails 2.3.2</title>
      <updated-at type="datetime">2009-03-16T17:07:50+00:00</updated-at>
      <user-id type="integer">27498</user-id>
      <version type="integer">1</version>
      <user-name>Peter Kieltyka</user-name>
      <creator-name>Peter Kieltyka</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2255</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-16T17:17:47+00:00</created-at>
      <creator-id type="integer">27498</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2255</number>
      <permalink>bundled-rack-10-doesnt-loaded-first-in-rails-232</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actionpack load rack</tag>
      <title>Bundled rack-1.0 doesn't loaded first in Rails 2.3.2</title>
      <updated-at type="datetime">2009-03-16T17:17:49+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Peter Kieltyka</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2255</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
