diff --git a/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb b/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb
index c0cc7ba..73ee086 100644
--- a/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb
+++ b/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb
@@ -4,29 +4,6 @@ require 'active_support/core_ext/kernel/requires'
 module ActiveRecord
   module ConnectionAdapters #:nodoc:
     class SQLiteColumn < Column #:nodoc:
-      class <<  self
-        def string_to_binary(value)
-          value.gsub(/\0|\%/n) do |b|
-            case b
-              when "\0" then "%00"
-              when "%"  then "%25"
-            end
-          end
-        end
-
-        def binary_to_string(value)
-          if value.respond_to?(:force_encoding) && value.encoding != Encoding::ASCII_8BIT
-            value = value.force_encoding(Encoding::ASCII_8BIT)
-          end
-
-          value.gsub(/%00|%25/n) do |b|
-            case b
-              when "%00" then "\0"
-              when "%25" then "%"
-            end
-          end
-        end
-      end
     end
 
     # The SQLite adapter works with both the 2.x and 3.x series of SQLite with the sqlite-ruby
@@ -109,6 +86,15 @@ module ActiveRecord
 
 
       # QUOTING ==================================================
+ 
+      def quote(value, column = nil)
+        if value.kind_of?(String) && column && column.type == :binary
+          s = value.unpack("H*")[0]
+          "X'#{s}'"
+        else
+          super
+        end
+      end
 
       def quote_string(s) #:nodoc:
         @connection.class.quote(s)
