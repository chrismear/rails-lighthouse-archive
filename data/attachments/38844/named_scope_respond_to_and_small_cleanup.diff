From 900a000a671ef3009c0dcb00ff3296c54fcc7300 Mon Sep 17 00:00:00 2001
From: Eloy Duran <eloy.de.enige@gmail.com>
Date: Wed, 13 Aug 2008 13:36:39 +0200
Subject: [PATCH] Fixed ActiveRecord::NamedScope::Scope#respond_to? and cleaned up a little bit.

Don't delegate #respond_to? to the @proxy_found array, but let it do it's normal work on the Scope and delegate to the @proxy_scope#respond_to? if the Scope instance doesn't respond to the method.
Also replaced the "[].methods" part with Array.instance_methods, which is just a bit cleaner.
---
 activerecord/lib/active_record/named_scope.rb |    8 ++++++--
 activerecord/test/cases/named_scope_test.rb   |    6 ++++++
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/named_scope.rb b/activerecord/lib/active_record/named_scope.rb
index d5a1c5f..fdd9cde 100644
--- a/activerecord/lib/active_record/named_scope.rb
+++ b/activerecord/lib/active_record/named_scope.rb
@@ -102,8 +102,8 @@ module ActiveRecord
     class Scope
       attr_reader :proxy_scope, :proxy_options
 
-      [].methods.each do |m|
-        unless m =~ /(^__|^nil\?|^send|^object_id$|class|extend|find|count|sum|average|maximum|minimum|paginate|first|last|empty?|any?)/
+      Array.instance_methods.each do |m|
+        unless m =~ /(^__|^nil\?|^send|^object_id$|class|extend|find|count|sum|average|maximum|minimum|paginate|first|last|empty?|any?|respond_to?)/
           delegate m, :to => :proxy_found
         end
       end
@@ -140,6 +140,10 @@ module ActiveRecord
         @found ? @found.empty? : count.zero?
       end
 
+      def respond_to?(method)
+        super || @proxy_scope.respond_to?(method)
+      end
+
       def any?
         if block_given?
           proxy_found.any? { |*block_args| yield(*block_args) }
diff --git a/activerecord/test/cases/named_scope_test.rb b/activerecord/test/cases/named_scope_test.rb
index 7bd712e..bd6ec23 100644
--- a/activerecord/test/cases/named_scope_test.rb
+++ b/activerecord/test/cases/named_scope_test.rb
@@ -45,6 +45,12 @@ class NamedScopeTest < ActiveRecord::TestCase
     assert_equal Topic.average(:replies_count), Topic.base.average(:replies_count)
   end
 
+  def test_scope_should_respond_to_own_methods_and_methods_of_the_proxy
+    assert Topic.approved.respond_to?(:proxy_found)
+    assert Topic.approved.respond_to?(:count)
+    assert Topic.approved.respond_to?(:length)
+  end
+
   def test_subclasses_inherit_scopes
     assert Topic.scopes.include?(:base)
 
-- 
1.5.6.4

