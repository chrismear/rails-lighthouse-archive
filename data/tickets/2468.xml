<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-09T22:07:27+01:00</created-at>
  <creator-id type="integer">13486</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2468</number>
  <permalink>patch-active_recordschema_dumperrb-gets-confused-by-a-non-integer-column-named-id</permalink>
  <priority type="integer">1617</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>schema_dumper</tag>
  <title>[PATCH] active_record/schema_dumper.rb gets confused by a non-integer column named &quot;id&quot;</title>
  <updated-at type="datetime">2011-02-02T19:09:25+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Andy Orahood</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2468</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I'm bringing this patch back up, it was originally posted on Rails Trac at http://dev.rubyonrails.org/ticket/11198. I would still find it useful and request it get applied.

If you have a migration that looks like this:

class CreateThing &lt; ActiveRecord::Migration

    def self.up

        create_table :things, :id =&gt; false do |t|

            t.text :id, :null =&gt; false

            t.text :blah, :null =&gt; false

        end

...

The schema dumper will render you a table that looks like this:

    create_table &quot;things&quot;, :force =&gt; true do |t|

        t.text &quot;blah&quot;, :null =&gt; false

    end

This will cause your fixtures to break, because it expects a non-integer column named &quot;id&quot;, but the schema.rb is creating an integer column named id.

The possibly easy fix is to change the &quot;def table(table, stream)&quot; in active_record/schema_dumper.rb to check the column type before assuming that the &quot;id&quot; column is an integer. If it's not then add &quot;:id =&gt; false&quot; to the create_table call and just use :id like any other column. I say &quot;possibly&quot; easy because I don't know if the magic id column is being used differently in other areas of the dumper, or if this is the only place.</original-body>
  <latest-body>I'm bringing this patch back up, it was originally posted on Rails Trac at http://dev.rubyonrails.org/ticket/11198. I would still find it useful and request it get applied.

If you have a migration that looks like this:

class CreateThing &lt; ActiveRecord::Migration

    def self.up

        create_table :things, :id =&gt; false do |t|

            t.text :id, :null =&gt; false

            t.text :blah, :null =&gt; false

        end

...

The schema dumper will render you a table that looks like this:

    create_table &quot;things&quot;, :force =&gt; true do |t|

        t.text &quot;blah&quot;, :null =&gt; false

    end

This will cause your fixtures to break, because it expects a non-integer column named &quot;id&quot;, but the schema.rb is creating an integer column named id.

The possibly easy fix is to change the &quot;def table(table, stream)&quot; in active_record/schema_dumper.rb to check the column type before assuming that the &quot;id&quot; column is an integer. If it's not then add &quot;:id =&gt; false&quot; to the create_table call and just use :id like any other column. I say &quot;possibly&quot; easy because I don't know if the magic id column is being used differently in other areas of the dumper, or if this is the only place.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm bringing this patch back up, it was originally posted on
Rails Trac at &lt;a href=&quot;http://dev.rubyonrails.org/ticket/11198&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;.
I would still find it useful and request it get applied.&lt;/p&gt;
&lt;p&gt;If you have a migration that looks like this:&lt;/p&gt;
&lt;p&gt;class CreateThing &amp;lt; ActiveRecord::Migration&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def self.up

    create_table :things, :id =&amp;gt; false do |t|

        t.text :id, :null =&amp;gt; false

        t.text :blah, :null =&amp;gt; false

    end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;The schema dumper will render you a table that looks like
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table &quot;things&quot;, :force =&amp;gt; true do |t|

    t.text &quot;blah&quot;, :null =&amp;gt; false

end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will cause your fixtures to break, because it expects a
non-integer column named &quot;id&quot;, but the schema.rb is creating an
integer column named id.&lt;/p&gt;
&lt;p&gt;The possibly easy fix is to change the &quot;def table(table,
stream)&quot; in active_record/schema_dumper.rb to check the column type
before assuming that the &quot;id&quot; column is an integer. If it's not
then add &quot;:id =&amp;gt; false&quot; to the create_table call and just use
:id like any other column. I say &quot;possibly&quot; easy because I don't
know if the magic id column is being used differently in other
areas of the dumper, or if this is the only place.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm bringing this patch back up, it was originally posted on Rails Trac at http://dev.rubyonrails.org/ticket/11198. I would still find it useful and request it get applied.

If you have a migration that looks like this:

class CreateThing &lt; ActiveRecord::Migration

    def self.up

        create_table :things, :id =&gt; false do |t|

            t.text :id, :null =&gt; false

            t.text :blah, :null =&gt; false

        end

...

The schema dumper will render you a table that looks like this:

    create_table &quot;things&quot;, :force =&gt; true do |t|

        t.text &quot;blah&quot;, :null =&gt; false

    end

This will cause your fixtures to break, because it expects a non-integer column named &quot;id&quot;, but the schema.rb is creating an integer column named id.

The possibly easy fix is to change the &quot;def table(table, stream)&quot; in active_record/schema_dumper.rb to check the column type before assuming that the &quot;id&quot; column is an integer. If it's not then add &quot;:id =&gt; false&quot; to the create_table call and just use :id like any other column. I say &quot;possibly&quot; easy because I don't know if the magic id column is being used differently in other areas of the dumper, or if this is the only place.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm bringing this patch back up, it was originally posted on
Rails Trac at &lt;a href=&quot;http://dev.rubyonrails.org/ticket/11198&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;.
I would still find it useful and request it get applied.&lt;/p&gt;
&lt;p&gt;If you have a migration that looks like this:&lt;/p&gt;
&lt;p&gt;class CreateThing &amp;lt; ActiveRecord::Migration&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def self.up

    create_table :things, :id =&amp;gt; false do |t|

        t.text :id, :null =&amp;gt; false

        t.text :blah, :null =&amp;gt; false

    end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;The schema dumper will render you a table that looks like
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table &quot;things&quot;, :force =&amp;gt; true do |t|

    t.text &quot;blah&quot;, :null =&amp;gt; false

end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will cause your fixtures to break, because it expects a
non-integer column named &quot;id&quot;, but the schema.rb is creating an
integer column named id.&lt;/p&gt;
&lt;p&gt;The possibly easy fix is to change the &quot;def table(table,
stream)&quot; in active_record/schema_dumper.rb to check the column type
before assuming that the &quot;id&quot; column is an integer. If it's not
then add &quot;:id =&amp;gt; false&quot; to the create_table call and just use
:id like any other column. I say &quot;possibly&quot; easy because I don't
know if the magic id column is being used differently in other
areas of the dumper, or if this is the only place.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-09T22:07:27+01:00</created-at>
      <creator-id type="integer">13486</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2468</number>
      <permalink>patch-active_recordschema_dumperrb-gets-confused-by-a-non-integer-column-named-id</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>schema_dumper</tag>
      <title>[PATCH] active_record/schema_dumper.rb gets confused by a non-integer column named &quot;id&quot;</title>
      <updated-at type="datetime">2009-04-09T22:07:30+01:00</updated-at>
      <user-id type="integer">13486</user-id>
      <version type="integer">1</version>
      <user-name>Andy Orahood</user-name>
      <creator-name>Andy Orahood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2468</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It's not good to remove &quot;pk ||= 'id'&quot; because @connection.pk_and_sequence_for can return nil.

I'm also not sure whether your approach is a good idea. Wouldn't it be better to do this?
1. If the PK is an integer but not called &quot;id&quot;, then output create_table &quot;foo&quot;, :primary_key =&gt; whatever
2. If the PK is not an integer, then do not output create_table &quot;foo&quot;, :primary_key =&gt; whatever. Instead, output t.primary_key(pk column name here, type), and modify the #primary_key method to allow specifying a type.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's not good to remove &quot;pk ||= 'id'&quot; because
@connection.pk_and_sequence_for can return nil.&lt;/p&gt;
&lt;p&gt;I'm also not sure whether your approach is a good idea. Wouldn't
it be better to do this?&lt;br&gt;
1. If the PK is an integer but not called &quot;id&quot;, then output
create_table &quot;foo&quot;, :primary_key =&amp;gt; whatever&lt;br&gt;
2. If the PK is not an integer, then do not output create_table
&quot;foo&quot;, :primary_key =&amp;gt; whatever. Instead, output
t.primary_key(pk column name here, type), and modify the
#primary_key method to allow specifying a type.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-05T09:19:42+01:00</created-at>
      <creator-id type="integer">13486</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2468</number>
      <permalink>patch-active_recordschema_dumperrb-gets-confused-by-a-non-integer-column-named-id</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>schema_dumper</tag>
      <title>[PATCH] active_record/schema_dumper.rb gets confused by a non-integer column named &quot;id&quot;</title>
      <updated-at type="datetime">2009-07-05T09:19:44+01:00</updated-at>
      <user-id type="integer">10679</user-id>
      <version type="integer">2</version>
      <user-name>Hongli Lai</user-name>
      <creator-name>Andy Orahood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2468</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:46+01:00</created-at>
      <creator-id type="integer">13486</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2468</number>
      <permalink>patch-active_recordschema_dumperrb-gets-confused-by-a-non-integer-column-named-id</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>schema_dumper</tag>
      <title>[PATCH] active_record/schema_dumper.rb gets confused by a non-integer column named &quot;id&quot;</title>
      <updated-at type="datetime">2010-05-04T18:48:46+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Andy Orahood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2468</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:03:39+00:00</created-at>
      <creator-id type="integer">13486</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2468</number>
      <permalink>patch-active_recordschema_dumperrb-gets-confused-by-a-non-integer-column-named-id</permalink>
      <priority type="integer">1617</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>schema_dumper</tag>
      <title>[PATCH] active_record/schema_dumper.rb gets confused by a non-integer column named &quot;id&quot;</title>
      <updated-at type="datetime">2011-02-02T19:09:25+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Andy Orahood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2468</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:03:40+00:00</created-at>
      <creator-id type="integer">13486</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2468</number>
      <permalink>patch-active_recordschema_dumperrb-gets-confused-by-a-non-integer-column-named-id</permalink>
      <priority type="integer">1617</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>schema_dumper</tag>
      <title>[PATCH] active_record/schema_dumper.rb gets confused by a non-integer column named &quot;id&quot;</title>
      <updated-at type="datetime">2011-02-02T19:08:50+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Andy Orahood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2468</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d2c381e618e965adaee96748b9e5bcafe459736a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-09T22:07:27+01:00</created-at>
      <filename>preserve_nonnumeric_id_col_on_table_with_nopk.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">110051</id>
      <size type="integer">4834</size>
      <uploader-id type="integer">13486</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/110051/preserve_nonnumeric_id_col_on_table_with_nopk.diff</url>
    </attachment>
  </attachments>
</ticket>
