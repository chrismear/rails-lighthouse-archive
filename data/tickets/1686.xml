<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-02T05:41:23+00:00</created-at>
  <creator-id type="integer">11372</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1686</number>
  <permalink>cleanup-and-speedup-of-validates_associated</permalink>
  <priority type="integer">1005</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord optimisation tiny validates_associated</tag>
  <title>cleanup and speedup of validates_associated</title>
  <updated-at type="datetime">2009-01-22T00:45:39+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>Josh Susser</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1686</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is a tiny patch to improve the readability and performance of #validates_associated in ActiveRecord.  The obscure use of #inject is replaces by #collect and #all?, using #collect to preserve the semantics of testing every record for validity by preventing early termination of the #all? loop.  This is not only more readable, but about 40% faster too.

I wanted to replace the ternary operator that tests whether the value is an Array with the Array() coercion method, but that didn't work well with the association proxy, so that bit of ugliness remains.</original-body>
  <latest-body>This is a tiny patch to improve the readability and performance of #validates_associated in ActiveRecord.  The obscure use of #inject is replaces by #collect and #all?, using #collect to preserve the semantics of testing every record for validity by preventing early termination of the #all? loop.  This is not only more readable, but about 40% faster too.

I wanted to replace the ternary operator that tests whether the value is an Array with the Array() coercion method, but that didn't work well with the association proxy, so that bit of ugliness remains.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is a tiny patch to improve the readability and performance
of #validates_associated in ActiveRecord. The obscure use of
#inject is replaces by #collect and #all?, using #collect to
preserve the semantics of testing every record for validity by
preventing early termination of the #all? loop. This is not only
more readable, but about 40% faster too.&lt;/p&gt;
&lt;p&gt;I wanted to replace the ternary operator that tests whether the
value is an Array with the Array() coercion method, but that didn't
work well with the association proxy, so that bit of ugliness
remains.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a tiny patch to improve the readability and performance of #validates_associated in ActiveRecord.  The obscure use of #inject is replaces by #collect and #all?, using #collect to preserve the semantics of testing every record for validity by preventing early termination of the #all? loop.  This is not only more readable, but about 40% faster too.

I wanted to replace the ternary operator that tests whether the value is an Array with the Array() coercion method, but that didn't work well with the association proxy, so that bit of ugliness remains.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a tiny patch to improve the readability and performance
of #validates_associated in ActiveRecord. The obscure use of
#inject is replaces by #collect and #all?, using #collect to
preserve the semantics of testing every record for validity by
preventing early termination of the #all? loop. This is not only
more readable, but about 40% faster too.&lt;/p&gt;
&lt;p&gt;I wanted to replace the ternary operator that tests whether the
value is an Array with the Array() coercion method, but that didn't
work well with the association proxy, so that bit of ugliness
remains.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T05:41:23+00:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1686</number>
      <permalink>cleanup-and-speedup-of-validates_associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>cleanup and speedup of validates_associated</title>
      <updated-at type="datetime">2009-01-02T05:41:28+00:00</updated-at>
      <user-id type="integer">11372</user-id>
      <version type="integer">1</version>
      <user-name>Josh Susser</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1686</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [ccda96093a3bf3fb360f7c6d61bbbf341b2ae034]) Minor refactoring of validates_associated to replace #inject with #collect + #all?

[#1686 state:committed]
http://github.com/rails/rails/commit/ccda96093a3bf3fb360f7c6d61bbbf341b2ae034</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [ccda96093a3bf3fb360f7c6d61bbbf341b2ae034]) Minor
refactoring of validates_associated to replace #inject with
#collect + #all?&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/1686&quot; title=&quot;Ticket #1686&quot;&gt;#1686&lt;/a&gt; state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/ccda96093a3bf3fb360f7c6d61bbbf341b2ae034&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-22T00:45:38+00:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1686</number>
      <permalink>cleanup-and-speedup-of-validates_associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord optimisation tiny validates_associated</tag>
      <title>cleanup and speedup of validates_associated</title>
      <updated-at type="datetime">2009-01-22T00:45:39+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1686</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>603ef2bec7da195542b9cdc02cd9d4db48a730b4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-02T05:41:23+00:00</created-at>
      <filename>validates_associated_cleanup.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74867</id>
      <size type="integer">1139</size>
      <uploader-id type="integer">11372</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74867/validates_associated_cleanup.diff</url>
    </attachment>
  </attachments>
</ticket>
