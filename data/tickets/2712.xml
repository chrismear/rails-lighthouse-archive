<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-21T01:46:05+01:00</created-at>
  <creator-id type="integer">23629</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2712</number>
  <permalink>has_one-and-after_create-association-bug</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
  <title>has_one and after_create association bug</title>
  <updated-at type="datetime">2010-07-21T01:46:05+01:00</updated-at>
  <user-id type="integer">23629</user-id>
  <version type="integer">12</version>
  <user-name>Andrew Kaspick</user-name>
  <creator-name>Andrew Kaspick</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Summary of the bug (rails 2.3.2)...

Two simple classes (Account and Contact).  The contact is created after the account is created (via after_create).  The &quot;name&quot; field is not passed in to 'create' which the contact requires via validates_presence_of, so the contact should not get saved, but it in fact does.

class Account &lt; ActiveRecord::Base
  has_one :contact
  def after_create
    create_contact
  end
end

class Contact &lt; ActiveRecord::Base
  belongs_to :account
  validates_presence_of :name
end

The test...

class AccountTest &lt; ActiveSupport::TestCase
  test &quot;this ain't right&quot; do
    a = Account.create
    p a.contact
    p a.contact.errors
    p a.new_record?
  end
end

produces...

#&lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 05:40:40&quot;, updated_at: &quot;2009-05-25 05:40:40&quot;&gt;
#&lt;ActiveRecord::Errors:0xb6e442a4 @base=#&lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 09:21:38&quot;, updated_at: &quot;2009-05-25 09:21:38&quot;&gt;, @errors={&quot;name&quot;=&gt;[&quot;can't be blank&quot;]}&gt;
false

The contact has errors and should not have been saved.

I tried debugging the associations code, but came up empty.</original-body>
  <latest-body>Summary of the bug (rails 2.3.2)...

Two simple classes (Account and Contact).  The contact is created after the account is created (via after_create).  The &quot;name&quot; field is not passed in to 'create' which the contact requires via validates_presence_of, so the contact should not get saved, but it in fact does.

class Account &lt; ActiveRecord::Base
  has_one :contact
  def after_create
    create_contact
  end
end

class Contact &lt; ActiveRecord::Base
  belongs_to :account
  validates_presence_of :name
end

The test...

class AccountTest &lt; ActiveSupport::TestCase
  test &quot;this ain't right&quot; do
    a = Account.create
    p a.contact
    p a.contact.errors
    p a.new_record?
  end
end

produces...

#&lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 05:40:40&quot;, updated_at: &quot;2009-05-25 05:40:40&quot;&gt;
#&lt;ActiveRecord::Errors:0xb6e442a4 @base=#&lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 09:21:38&quot;, updated_at: &quot;2009-05-25 09:21:38&quot;&gt;, @errors={&quot;name&quot;=&gt;[&quot;can't be blank&quot;]}&gt;
false

The contact has errors and should not have been saved.

I tried debugging the associations code, but came up empty.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Summary of the bug (rails 2.3.2)...&lt;/p&gt;
&lt;p&gt;Two simple classes (Account and Contact). The contact is created
after the account is created (via after_create). The &quot;name&quot; field
is not passed in to 'create' which the contact requires via
validates_presence_of, so the contact should not get saved, but it
in fact does.&lt;/p&gt;
&lt;p&gt;class Account &amp;lt; ActiveRecord::Base has_one :contact def
after_create&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_contact
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;class Contact &amp;lt; ActiveRecord::Base belongs_to :account
validates_presence_of :name end&lt;/p&gt;
&lt;p&gt;The test...&lt;/p&gt;
&lt;p&gt;class AccountTest &amp;lt; ActiveSupport::TestCase test &quot;this ain't
right&quot; do&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;a = Account.create
p a.contact
p a.contact.errors
p a.new_record?
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;produces...&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;h1&gt;, @errors={&quot;name&quot;=&amp;gt;[&quot;can't be blank&quot;]}&amp;gt;&lt;/h1&gt;
&lt;p&gt;false&lt;/p&gt;
&lt;p&gt;The contact has errors and should not have been saved.&lt;/p&gt;
&lt;p&gt;I tried debugging the associations code, but came up empty.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Summary of the bug (rails 2.3.2)...

Two simple classes (Account and Contact).  The contact is created after the account is created (via after_create).  The &quot;name&quot; field is not passed in to 'create' which the contact requires via validates_presence_of, so the contact should not get saved, but it in fact does.

@@@ ruby
class Account &lt; ActiveRecord::Base
  has_one :contact
  def after_create
    create_contact
  end
end

class Contact &lt; ActiveRecord::Base
  belongs_to :account
  validates_presence_of :name
end
@@@

The test...

@@@ ruby
class AccountTest &lt; ActiveSupport::TestCase
  test &quot;this ain't right&quot; do
    a = Account.create
    p a.contact
    p a.contact.errors
    p a.new_record?
  end
end
@@@

produces...

@@@ ruby
#&lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 05:40:40&quot;, updated_at: &quot;2009-05-25 05:40:40&quot;&gt;
#&lt;ActiveRecord::Errors:0xb6e442a4 @base=#&lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 09:21:38&quot;, updated_at: &quot;2009-05-25 09:21:38&quot;&gt;, @errors={&quot;name&quot;=&gt;[&quot;can't be blank&quot;]}&gt;
false
@@@

The contact has errors and should not have been saved.

I tried debugging the associations code, but came up empty.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Summary of the bug (rails 2.3.2)...&lt;/p&gt;
&lt;p&gt;Two simple classes (Account and Contact). The contact is created
after the account is created (via after_create). The &quot;name&quot; field
is not passed in to 'create' which the contact requires via
validates_presence_of, so the contact should not get saved, but it
in fact does.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Account &amp;lt; ActiveRecord::Base
  has_one :contact
  def after_create
    create_contact
  end
end

class Contact &amp;lt; ActiveRecord::Base
  belongs_to :account
  validates_presence_of :name
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The test...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class AccountTest &amp;lt; ActiveSupport::TestCase
  test &quot;this ain't right&quot; do
    a = Account.create
    p a.contact
    p a.contact.errors
    p a.new_record?
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;produces...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;#&amp;lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 05:40:40&quot;, updated_at: &quot;2009-05-25 05:40:40&quot;&amp;gt;
#&amp;lt;ActiveRecord::Errors:0xb6e442a4 @base=#&amp;lt;Contact id: 996332878, name: nil, account_id: 1, created_at: &quot;2009-05-25 09:21:38&quot;, updated_at: &quot;2009-05-25 09:21:38&quot;&amp;gt;, @errors={&quot;name&quot;=&amp;gt;[&quot;can't be blank&quot;]}&amp;gt;
false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The contact has errors and should not have been saved.&lt;/p&gt;
&lt;p&gt;I tried debugging the associations code, but came up empty.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-25T10:22:40+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T10:27:59+01:00</updated-at>
      <user-id type="integer">23629</user-id>
      <version type="integer">1</version>
      <user-name>Andrew Kaspick</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm this bug in the current gem version. However it has already been fixed by this commit: http://github.com/rails/rails/commit/a70c78177a564c2f2cd09846a5e7ab6e8669e9f2</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this bug in the current gem version. However it
has already been fixed by this commit: &lt;a href=
&quot;http://github.com/rails/rails/commit/a70c78177a564c2f2cd09846a5e7ab6e8669e9f2&quot;&gt;
http://github.com/rails/rails/commit/a70c78177a564c2f2cd09846a5e7ab...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-25T15:42:47+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T15:42:48+01:00</updated-at>
      <user-id type="integer">2529</user-id>
      <version type="integer">2</version>
      <user-name>Daniel Guettler</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T15:56:12+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T15:56:13+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is &quot;rake rails:freeze:edge&quot; supposed to pull a copy of rails with this fix?

I grabbed edge, but am still experiencing the issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is &quot;rake rails:freeze:edge&quot; supposed to pull a copy of rails
with this fix?&lt;/p&gt;
&lt;p&gt;I grabbed edge, but am still experiencing the issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T19:34:34+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T19:34:40+01:00</updated-at>
      <user-id type="integer">23629</user-id>
      <version type="integer">4</version>
      <user-name>Andrew Kaspick</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Looks like the rake command has the &quot;fix&quot;, but the bug still exists because :autosave is true even if I set it to false with...

@@@ ruby
has_one :contact, :autosave =&gt; false
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks like the rake command has the &quot;fix&quot;, but the bug still
exists because :autosave is true even if I set it to false
with...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;has_one :contact, :autosave =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T20:44:46+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T20:44:51+01:00</updated-at>
      <user-id type="integer">23629</user-id>
      <version type="integer">5</version>
      <user-name>Andrew Kaspick</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My error... the case outlined in this ticket is resolved.

Reading the code/docs here I see...

Note that the &lt;tt&gt;:autosave&lt;/tt&gt; option is automatically enabled on every
    # association that accepts_nested_attributes_for is used for.

This is the situation in my production code; I'm using ccepts_nested_attributes_for.

Should :autosave =&gt; false on the association not override the automatica enabling of the :autosave option in this case?</body>
      <body-html>&lt;div&gt;&lt;p&gt;My error... the case outlined in this ticket is resolved.&lt;/p&gt;
&lt;p&gt;Reading the code/docs here I see...&lt;/p&gt;
&lt;p&gt;Note that the &lt;tt&gt;:autosave&lt;/tt&gt; option is automatically enabled
on every&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# association that accepts_nested_attributes_for is used for.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is the situation in my production code; I'm using
ccepts_nested_attributes_for.&lt;/p&gt;
&lt;p&gt;Should :autosave =&amp;gt; false on the association not override the
automatica enabling of the :autosave option in this case?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T20:49:46+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T20:49:51+01:00</updated-at>
      <user-id type="integer">23629</user-id>
      <version type="integer">6</version>
      <user-name>Andrew Kaspick</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry for all the messages.  I've removed the use of accepts_nested_attributes_for in my code and now things work.

The issue is shown with this modification to code...

@@@ ruby
class Account &lt; ActiveRecord::Base
  has_one :contact

  accepts_nested_attributes_for :contact

  def after_create
    create_contact
  end
end
@@@

Note the addition of accepts_nested_attributes_for

Should I open a new ticket for this?  If I'm manually calling the assocation code with &quot;create_contact&quot; and not going through the accepts_nested_attributes_for avenue for creating the association, this seems to be &quot;unexpected&quot; behaviour.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for all the messages. I've removed the use of
accepts_nested_attributes_for in my code and now things work.&lt;/p&gt;
&lt;p&gt;The issue is shown with this modification to code...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Account &amp;lt; ActiveRecord::Base
  has_one :contact

  accepts_nested_attributes_for :contact

  def after_create
    create_contact
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note the addition of accepts_nested_attributes_for&lt;/p&gt;
&lt;p&gt;Should I open a new ticket for this? If I'm manually calling the
assocation code with &quot;create_contact&quot; and not going through the
accepts_nested_attributes_for avenue for creating the association,
this seems to be &quot;unexpected&quot; behaviour.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T20:59:09+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable after_create associations bug has_one
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T20:59:12+01:00</updated-at>
      <user-id type="integer">23629</user-id>
      <version type="integer">7</version>
      <user-name>Andrew Kaspick</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is that any different from what was fixed in #2249 ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is that any different from what was fixed in &lt;a href=
&quot;/projects/8994/tickets/2249&quot; title=&quot;Ticket #2249&quot;&gt;#2249&lt;/a&gt; ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T21:14:59+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T21:15:03+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">8</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Andrew,

I believe that this has been [resolved](https://rails.lighthouseapp.com/projects/8994/tickets/2249-autosaving-associations-skips-validations-and-persists-invalid-data-in-the-db).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Andrew,&lt;/p&gt;
&lt;p&gt;I believe that this has been &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2249-autosaving-associations-skips-validations-and-persists-invalid-data-in-the-db&quot;&gt;
resolved&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T21:16:33+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T21:16:39+01:00</updated-at>
      <user-id type="integer">31940</user-id>
      <version type="integer">9</version>
      <user-name>Mike Breen</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's a similar situation, but when using accepts_nested_attributes_for, line 211 in nested_attributes.rb causes the unexpected behaviour...

@@@ ruby
reflection.options[:autosave] = true
@@@

:autosave should not be true in my opinion for the example outlined.  I spent a good number of hours trying to figure out why the association record was being saved even though it was invalid.  Invalid records should not be saved to the DB.

If I remove the accepts_nested_attributes_for line in my revised example, the issue goes away.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's a similar situation, but when using
accepts_nested_attributes_for, line 211 in nested_attributes.rb
causes the unexpected behaviour...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;reflection.options[:autosave] = true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;:autosave should not be true in my opinion for the example
outlined. I spent a good number of hours trying to figure out why
the association record was being saved even though it was invalid.
Invalid records should not be saved to the DB.&lt;/p&gt;
&lt;p&gt;If I remove the accepts_nested_attributes_for line in my revised
example, the issue goes away.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-25T21:27:13+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-25T21:27:17+01:00</updated-at>
      <user-id type="integer">23629</user-id>
      <version type="integer">10</version>
      <user-name>Andrew Kaspick</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok, this is a rather engineered example in my view. You probably want to either have accepts_nested_attributes OR a manual create_after.
Anyway so here what's happening:

1) All validations for Account and associated Contact run and pass, Contact is nil at this point so no validations needed.

2) Account is created etc.

3) Callbacks run
3.1) after_create callback is executed and tries to create a new Contact which in this step fails since validation doesn't pass. Account.contact is NOT nil anymore after this but contains the new record with validation errors.
3.2) after_save callback is executed which will execute the callback added by autosave. It will create the Contact which was initialized in 3.1 without any further validations since it is assumed that the validations added by autosave have been run successfully.

To avoid this one possible solution would be to not call save(false) in autosave_association.rb in order to avoid invalid records from being saved into the database.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, this is a rather engineered example in my view. You probably
want to either have accepts_nested_attributes OR a manual
create_after.&lt;br&gt;
Anyway so here what's happening:&lt;/p&gt;
&lt;p&gt;1) All validations for Account and associated Contact run and
pass, Contact is nil at this point so no validations needed.&lt;/p&gt;
&lt;p&gt;2) Account is created etc.&lt;/p&gt;
&lt;p&gt;3) Callbacks run&lt;br&gt;
3.1) after_create callback is executed and tries to create a new
Contact which in this step fails since validation doesn't pass.
Account.contact is NOT nil anymore after this but contains the new
record with validation errors.&lt;br&gt;
3.2) after_save callback is executed which will execute the
callback added by autosave. It will create the Contact which was
initialized in 3.1 without any further validations since it is
assumed that the validations added by autosave have been run
successfully.&lt;/p&gt;
&lt;p&gt;To avoid this one possible solution would be to not call
save(false) in autosave_association.rb in order to avoid invalid
records from being saved into the database.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-26T04:01:49+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-26T04:01:52+01:00</updated-at>
      <user-id type="integer">2529</user-id>
      <version type="integer">11</version>
      <user-name>Daniel Guettler</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've actually modified my code to...

@@@ ruby
def after_create
  c = build_contact
  c.save false
end
@@@

So yes, the original example given now could be looked upon as &quot;engineered&quot; as it doesn't check for errors anyway.  I guess the &quot;surprise&quot; of having an object with errors being saved to the database as being the main issue here since it's what started my rat race of trying to find out why that was happening in the first place.  A case of violating the principle of least surprise (POLS) I'd say.

Thanks for the input.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've actually modified my code to...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def after_create
  c = build_contact
  c.save false
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So yes, the original example given now could be looked upon as
&quot;engineered&quot; as it doesn't check for errors anyway. I guess the
&quot;surprise&quot; of having an object with errors being saved to the
database as being the main issue here since it's what started my
rat race of trying to find out why that was happening in the first
place. A case of violating the principle of least surprise (POLS)
I'd say.&lt;/p&gt;
&lt;p&gt;Thanks for the input.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-26T04:46:36+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2009-05-26T04:46:37+01:00</updated-at>
      <user-id type="integer">23629</user-id>
      <version type="integer">12</version>
      <user-name>Andrew Kaspick</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>refore, if &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com/collection/gucci.html&quot;&gt;replica Gucci jewelry&lt;/a&gt;&lt;/b&gt; people want to buy &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;discount jewelry&lt;/a&gt;&lt;/b&gt; Rolex online, then they &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com/collection/christian-dior.html&quot;&gt;Christian Dior jewelry&lt;/a&gt;&lt;/b&gt; have to think many &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora charms&lt;/a&gt;&lt;/b&gt; times as the brand &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora braclets&lt;/a&gt;&lt;/b&gt; is very expensive. But, &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry store&lt;/a&gt;&lt;/b&gt; one can still feel &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry stores&lt;/a&gt;&lt;/b&gt; the luxury of these &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;wholesale fashion jewellery&lt;/a&gt;&lt;/b&gt; watches by purchasing replica &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry store&lt;/a&gt;&lt;/b&gt; versions of Rol &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;mens jewelry&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;refore, if &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com/collection/gucci.html&quot;&gt;replica
Gucci jewelry&lt;/a&gt;&lt;/b&gt; people want to buy &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;discount jewelry&lt;/a&gt;&lt;/b&gt; Rolex
online, then they &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com/collection/christian-dior.html&quot;&gt;Christian
Dior jewelry&lt;/a&gt;&lt;/b&gt; have to think many &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora charms&lt;/a&gt;&lt;/b&gt; times as
the brand &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora
braclets&lt;/a&gt;&lt;/b&gt; is very expensive. But, &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry store&lt;/a&gt;&lt;/b&gt; one can
still feel &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry
stores&lt;/a&gt;&lt;/b&gt; the luxury of these &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;wholesale fashion
jewellery&lt;/a&gt;&lt;/b&gt; watches by purchasing replica &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry store&lt;/a&gt;&lt;/b&gt; versions
of Rol &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;mens
jewelry&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T09:51:07+01:00</created-at>
      <creator-id type="integer">23629</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2712</number>
      <permalink>has_one-and-after_create-association-bug</permalink>
      <priority type="integer">1832</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable accepts_nested_attributes_for after_create associations bug has_one</tag>
      <title>has_one and after_create association bug</title>
      <updated-at type="datetime">2010-07-21T01:46:05+01:00</updated-at>
      <user-id type="integer">107771</user-id>
      <version type="integer">13</version>
      <user-name>zhuzhu</user-name>
      <creator-name>Andrew Kaspick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2712</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
