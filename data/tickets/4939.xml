<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-22T23:56:49+01:00</created-at>
  <creator-id type="integer">40414</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4939</number>
  <permalink>patch-activeresourcehttpmock-overwrites-acceptcontent-type-header</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>active_resource http_mock</tag>
  <title>[Patch] ActiveResource::HttpMock overwrites Accept/Content-Type header</title>
  <updated-at type="datetime">2010-10-15T23:01:57+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">4</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Elomar Fran&#231;a</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4939</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>ActiveResource::HttpMock always overwrite the Accept/Content-Header parameter of the recorded response to &quot;application/xml&quot;, making it impossible to mock two different responses to the same method/url but with different mime types.

@@@ 
ActiveResource::HttpMock.respond_to do |mock|
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/xml&quot;}, &quot;XML&quot;
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/json&quot;}, &quot;Json&quot;
end

@http.get(&quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/json&quot;}).body # &gt; XML
@@@

This patch fixes that by 1) not overwriting the format header and 2) ignoring it on the response match on it's not set on the mock and add some basic tests to HttpMock, but I think the code can be improved.</original-body>
  <latest-body>ActiveResource::HttpMock always overwrite the Accept/Content-Header parameter of the recorded response to &quot;application/xml&quot;, making it impossible to mock two different responses to the same method/url but with different mime types.

@@@ 
ActiveResource::HttpMock.respond_to do |mock|
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/xml&quot;}, &quot;XML&quot;
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/json&quot;}, &quot;Json&quot;
end

@http.get(&quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/json&quot;}).body # &gt; XML
@@@

This patch fixes that by 1) not overwriting the format header and 2) ignoring it on the response match on it's not set on the mock and add some basic tests to HttpMock, but I think the code can be improved.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ActiveResource::HttpMock always overwrite the
Accept/Content-Header parameter of the recorded response to
&quot;application/xml&quot;, making it impossible to mock two different
responses to the same method/url but with different mime types.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveResource::HttpMock.respond_to do |mock|
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&amp;gt; &quot;application/xml&quot;}, &quot;XML&quot;
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&amp;gt; &quot;application/json&quot;}, &quot;Json&quot;
end

@http.get(&quot;/people/1&quot;, {&quot;Accept&quot; =&amp;gt; &quot;application/json&quot;}).body # &amp;gt; XML&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This patch fixes that by 1) not overwriting the format header
and 2) ignoring it on the response match on it's not set on the
mock and add some basic tests to HttpMock, but I think the code can
be improved.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveResource::HttpMock always overwrite the Accept/Content-Header parameter of the recorded response to &quot;application/xml&quot;, making it impossible to mock two different responses to the same method/url but with different mime types.

@@@ 
ActiveResource::HttpMock.respond_to do |mock|
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/xml&quot;}, &quot;XML&quot;
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/json&quot;}, &quot;Json&quot;
end

@http.get(&quot;/people/1&quot;, {&quot;Accept&quot; =&gt; &quot;application/json&quot;}).body # &gt; XML
@@@

This patch fixes that by 1) not overwriting the format header and 2) ignoring it on the response match on it's not set on the mock and add some basic tests to HttpMock, but I think the code can be improved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveResource::HttpMock always overwrite the
Accept/Content-Header parameter of the recorded response to
&quot;application/xml&quot;, making it impossible to mock two different
responses to the same method/url but with different mime types.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveResource::HttpMock.respond_to do |mock|
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&amp;gt; &quot;application/xml&quot;}, &quot;XML&quot;
  mock.get &quot;/people/1&quot;, {&quot;Accept&quot; =&amp;gt; &quot;application/json&quot;}, &quot;Json&quot;
end

@http.get(&quot;/people/1&quot;, {&quot;Accept&quot; =&amp;gt; &quot;application/json&quot;}).body # &amp;gt; XML&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This patch fixes that by 1) not overwriting the format header
and 2) ignoring it on the response match on it's not set on the
mock and add some basic tests to HttpMock, but I think the code can
be improved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T23:56:49+01:00</created-at>
      <creator-id type="integer">40414</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4939</number>
      <permalink>patch-activeresourcehttpmock-overwrites-acceptcontent-type-header</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_resource http_mock</tag>
      <title>[Patch] ActiveResource::HttpMock overwrites Accept/Content-Type header</title>
      <updated-at type="datetime">2010-06-22T23:56:51+01:00</updated-at>
      <user-id type="integer">40414</user-id>
      <version type="integer">1</version>
      <user-name>Elomar Fran&#231;a</user-name>
      <creator-name>Elomar Fran&#231;a</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4939</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-24T01:27:51+01:00</created-at>
      <creator-id type="integer">40414</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4939</number>
      <permalink>patch-activeresourcehttpmock-overwrites-acceptcontent-type-header</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_resource http_mock</tag>
      <title>[Patch] ActiveResource::HttpMock overwrites Accept/Content-Type header</title>
      <updated-at type="datetime">2010-06-24T01:27:55+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Elomar Fran&#231;a</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4939</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [176c386409fd57bc03b9ebf1570a8955e21e0800]) Fix bug where ActiveResource::HttpMock would overwrite Accept/Content-Type header to application/xml [#4939 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/176c386409fd57bc03b9ebf1570a8955e21e0800</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/176c386409fd57bc03b9ebf1570a8955e21e0800&quot;
title=
&quot;Changeset [176c386409fd57bc03b9ebf1570a8955e21e0800]&quot;&gt;[176c386409fd57bc03b9ebf1570a8955e21e0800]&lt;/a&gt;)
Fix bug where ActiveResource::HttpMock would overwrite
Accept/Content-Type header to application/xml [&lt;a href=
&quot;/projects/8994/tickets/4939&quot; title=&quot;Ticket #4939&quot;&gt;#4939&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/176c386409fd57bc03b9ebf1570a8955e21e0800&quot;&gt;
http://github.com/rails/rails/commit/176c386409fd57bc03b9ebf1570a89...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-24T12:28:09+01:00</created-at>
      <creator-id type="integer">40414</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4939</number>
      <permalink>patch-activeresourcehttpmock-overwrites-acceptcontent-type-header</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_resource http_mock</tag>
      <title>[Patch] ActiveResource::HttpMock overwrites Accept/Content-Type header</title>
      <updated-at type="datetime">2010-06-24T12:28:13+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Elomar Fran&#231;a</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4939</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:57+01:00</created-at>
      <creator-id type="integer">40414</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4939</number>
      <permalink>patch-activeresourcehttpmock-overwrites-acceptcontent-type-header</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_resource http_mock</tag>
      <title>[Patch] ActiveResource::HttpMock overwrites Accept/Content-Type header</title>
      <updated-at type="datetime">2010-10-15T23:01:57+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Elomar Fran&#231;a</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4939</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bb3eda8a632f68d99a49fddcb5abd69874155ea0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-22T23:56:49+01:00</created-at>
      <filename>http_mock_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">569772</id>
      <size type="integer">5082</size>
      <uploader-id type="integer">40414</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/569772/http_mock_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
