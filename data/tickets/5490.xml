<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-30T02:17:25+01:00</created-at>
  <creator-id type="integer">103425</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5490</number>
  <permalink>private-method-format-called-for-arelpredicatesequality0x142d80c</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>&quot;arel rails3&quot; patch</tag>
  <title>Problem with .and()? - private method `format' called for #&lt;Arel::Predicates::Equality:0x142d80c&gt; </title>
  <updated-at type="datetime">2010-09-08T16:27:03+01:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">4</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>James Harton</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5490</url>
  <priority-name>Low</priority-name>
  <original-body>The following Arel code is throwing an error since Rails 3.0.0 stable was released (it was working on 3.0.0.rc2):


    [Development]&gt;&gt; ct = Connection.arel_table
    =&gt; #&lt;Arel::Table:0x15cb150 @name=&quot;connections&quot;, @table_exists=nil, @table_alias=nil, @christener=#&lt;Arel::Sql::Christener:0x15cb13c @names={}&gt;, @attributes=nil, @matching_attributes=nil, @engine=#&lt;Arel::Sql::Engine:0xac01d4 @ar=ActiveRecord::Base, @adapter_name=&quot;PostgreSQL&quot;&gt;&gt;
    [Development]&gt;&gt; clusters = ct.where(ct[:type].eq('Follow').and(ct[:user_id].eq(2))).to_sql 
    NoMethodError: private method `format' called for #&lt;Arel::Predicates::Equality:0x3064084&gt;
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/predicates.rb:142:in `to_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `block in where_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `map'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `where_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:35:in `build_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:27:in `select_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/compilers/postgresql_compiler.rb:30:in `select_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/operations/where.rb:21:in `to_sql'
	from (irb):7
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:44:in `start'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:8:in `start'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands.rb:23:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'


Interestingly, neither predicate fails on it's own:

    [Development]&gt;&gt;  clusters = ct.where(ct[:type].eq('Follow')).to_sql
    =&gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;type\&quot; = 'Follow'&quot;
    [Development]&gt;&gt;  clusters = ct.where(ct[:user_id].eq(2)).to_sql
    =&gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;user_id\&quot; = 2&quot;

Thus I am fairly certain that the problem occurs within the .and() predicate.  Am I doing it wrong? I can't find a commit that seems to change anything like this since 3.0.0.rc2</original-body>
  <latest-body>The following Arel code is throwing an error since Rails 3.0.0 stable was released (it was working on 3.0.0.rc2):


    [Development]&gt;&gt; ct = Connection.arel_table
    =&gt; #&lt;Arel::Table:0x15cb150 @name=&quot;connections&quot;, @table_exists=nil, @table_alias=nil, @christener=#&lt;Arel::Sql::Christener:0x15cb13c @names={}&gt;, @attributes=nil, @matching_attributes=nil, @engine=#&lt;Arel::Sql::Engine:0xac01d4 @ar=ActiveRecord::Base, @adapter_name=&quot;PostgreSQL&quot;&gt;&gt;
    [Development]&gt;&gt; clusters = ct.where(ct[:type].eq('Follow').and(ct[:user_id].eq(2))).to_sql 
    NoMethodError: private method `format' called for #&lt;Arel::Predicates::Equality:0x3064084&gt;
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/predicates.rb:142:in `to_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `block in where_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `map'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `where_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:35:in `build_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:27:in `select_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/compilers/postgresql_compiler.rb:30:in `select_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/operations/where.rb:21:in `to_sql'
	from (irb):7
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:44:in `start'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:8:in `start'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands.rb:23:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'


Interestingly, neither predicate fails on it's own:

    [Development]&gt;&gt;  clusters = ct.where(ct[:type].eq('Follow')).to_sql
    =&gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;type\&quot; = 'Follow'&quot;
    [Development]&gt;&gt;  clusters = ct.where(ct[:user_id].eq(2)).to_sql
    =&gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;user_id\&quot; = 2&quot;

Thus I am fairly certain that the problem occurs within the .and() predicate.  Am I doing it wrong? I can't find a commit that seems to change anything like this since 3.0.0.rc2</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The following Arel code is throwing an error since Rails 3.0.0
stable was released (it was working on 3.0.0.rc2):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[Development]&amp;gt;&amp;gt; ct = Connection.arel_table
=&amp;gt; #&amp;lt;Arel::Table:0x15cb150 @name=&quot;connections&quot;, @table_exists=nil, @table_alias=nil, @christener=#&amp;lt;Arel::Sql::Christener:0x15cb13c @names={}&amp;gt;, @attributes=nil, @matching_attributes=nil, @engine=#&amp;lt;Arel::Sql::Engine:0xac01d4 @ar=ActiveRecord::Base, @adapter_name=&quot;PostgreSQL&quot;&amp;gt;&amp;gt;
[Development]&amp;gt;&amp;gt; clusters = ct.where(ct[:type].eq('Follow').and(ct[:user_id].eq(2))).to_sql 
NoMethodError: private method `format' called for #&amp;lt;Arel::Predicates::Equality:0x3064084&amp;gt;
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/predicates.rb:142:in `to_sql'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `block in where_clauses'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `map'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `where_clauses'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:35:in `build_clauses'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:27:in `select_sql'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/compilers/postgresql_compiler.rb:30:in `select_sql'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/operations/where.rb:21:in `to_sql'
from (irb):7
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:44:in `start'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:8:in `start'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands.rb:23:in `&amp;lt;top (required)&amp;gt;'
from script/rails:9:in `require'
from script/rails:9:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Interestingly, neither predicate fails on it's own:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[Development]&amp;gt;&amp;gt;  clusters = ct.where(ct[:type].eq('Follow')).to_sql
=&amp;gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;type\&quot; = 'Follow'&quot;
[Development]&amp;gt;&amp;gt;  clusters = ct.where(ct[:user_id].eq(2)).to_sql
=&amp;gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;user_id\&quot; = 2&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Thus I am fairly certain that the problem occurs within the
.and() predicate. Am I doing it wrong? I can't find a commit that
seems to change anything like this since 3.0.0.rc2&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The following Arel code is throwing an error since Rails 3.0.0 stable was released (it was working on 3.0.0.rc2):


    [Development]&gt;&gt; ct = Connection.arel_table
    =&gt; #&lt;Arel::Table:0x15cb150 @name=&quot;connections&quot;, @table_exists=nil, @table_alias=nil, @christener=#&lt;Arel::Sql::Christener:0x15cb13c @names={}&gt;, @attributes=nil, @matching_attributes=nil, @engine=#&lt;Arel::Sql::Engine:0xac01d4 @ar=ActiveRecord::Base, @adapter_name=&quot;PostgreSQL&quot;&gt;&gt;
    [Development]&gt;&gt; clusters = ct.where(ct[:type].eq('Follow').and(ct[:user_id].eq(2))).to_sql 
    NoMethodError: private method `format' called for #&lt;Arel::Predicates::Equality:0x3064084&gt;
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/predicates.rb:142:in `to_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `block in where_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `map'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `where_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:35:in `build_clauses'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:27:in `select_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/compilers/postgresql_compiler.rb:30:in `select_sql'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/operations/where.rb:21:in `to_sql'
	from (irb):7
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:44:in `start'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:8:in `start'
	from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands.rb:23:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'


Interestingly, neither predicate fails on it's own:

    [Development]&gt;&gt;  clusters = ct.where(ct[:type].eq('Follow')).to_sql
    =&gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;type\&quot; = 'Follow'&quot;
    [Development]&gt;&gt;  clusters = ct.where(ct[:user_id].eq(2)).to_sql
    =&gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;user_id\&quot; = 2&quot;

Thus I am fairly certain that the problem occurs within the .and() predicate.  Am I doing it wrong? I can't find a commit that seems to change anything like this since 3.0.0.rc2</body>
      <body-html>&lt;div&gt;&lt;p&gt;The following Arel code is throwing an error since Rails 3.0.0
stable was released (it was working on 3.0.0.rc2):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[Development]&amp;gt;&amp;gt; ct = Connection.arel_table
=&amp;gt; #&amp;lt;Arel::Table:0x15cb150 @name=&quot;connections&quot;, @table_exists=nil, @table_alias=nil, @christener=#&amp;lt;Arel::Sql::Christener:0x15cb13c @names={}&amp;gt;, @attributes=nil, @matching_attributes=nil, @engine=#&amp;lt;Arel::Sql::Engine:0xac01d4 @ar=ActiveRecord::Base, @adapter_name=&quot;PostgreSQL&quot;&amp;gt;&amp;gt;
[Development]&amp;gt;&amp;gt; clusters = ct.where(ct[:type].eq('Follow').and(ct[:user_id].eq(2))).to_sql 
NoMethodError: private method `format' called for #&amp;lt;Arel::Predicates::Equality:0x3064084&amp;gt;
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/predicates.rb:142:in `to_sql'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `block in where_clauses'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `map'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/relation.rb:86:in `where_clauses'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:35:in `build_clauses'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/relations/compiler.rb:27:in `select_sql'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/engines/sql/compilers/postgresql_compiler.rb:30:in `select_sql'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/arel-1.0.1/lib/arel/algebra/relations/operations/where.rb:21:in `to_sql'
from (irb):7
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:44:in `start'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands/console.rb:8:in `start'
from /Users/jnh/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.0/lib/rails/commands.rb:23:in `&amp;lt;top (required)&amp;gt;'
from script/rails:9:in `require'
from script/rails:9:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Interestingly, neither predicate fails on it's own:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[Development]&amp;gt;&amp;gt;  clusters = ct.where(ct[:type].eq('Follow')).to_sql
=&amp;gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;type\&quot; = 'Follow'&quot;
[Development]&amp;gt;&amp;gt;  clusters = ct.where(ct[:user_id].eq(2)).to_sql
=&amp;gt; &quot;SELECT     \&quot;connections\&quot;.\&quot;id\&quot;, \&quot;connections\&quot;.\&quot;user_id\&quot;, \&quot;connections\&quot;.\&quot;cluster_id\&quot;, \&quot;connections\&quot;.\&quot;type\&quot;, \&quot;connections\&quot;.\&quot;created_at\&quot;, \&quot;connections\&quot;.\&quot;updated_at\&quot; FROM       \&quot;connections\&quot;  WHERE     \&quot;connections\&quot;.\&quot;user_id\&quot; = 2&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Thus I am fairly certain that the problem occurs within the
.and() predicate. Am I doing it wrong? I can't find a commit that
seems to change anything like this since 3.0.0.rc2&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T02:17:25+01:00</created-at>
      <creator-id type="integer">103425</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5490</number>
      <permalink>private-method-format-called-for-arelpredicatesequality0x142d80c</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel rails3&quot;</tag>
      <title>private method `format' called for #&lt;Arel::Predicates::Equality:0x142d80c&gt; </title>
      <updated-at type="datetime">2010-09-01T22:46:10+01:00</updated-at>
      <user-id type="integer">103425</user-id>
      <version type="integer">1</version>
      <user-name>James Harton</user-name>
      <creator-name>James Harton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5490</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T22:53:32+01:00</created-at>
      <creator-id type="integer">103425</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
:title: &quot;private method `format' called for #&lt;Arel::Predicates::Equality:0x142d80c&gt; &quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5490</number>
      <permalink>private-method-format-called-for-arelpredicatesequality0x142d80c</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel rails3&quot;</tag>
      <title>Problem with .and()? - private method `format' called for #&lt;Arel::Predicates::Equality:0x142d80c&gt; </title>
      <updated-at type="datetime">2010-09-01T22:53:34+01:00</updated-at>
      <user-id type="integer">103425</user-id>
      <version type="integer">2</version>
      <user-name>James Harton</user-name>
      <creator-name>James Harton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5490</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is patch for Arel with test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is patch for Arel with test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-08T11:17:40+01:00</created-at>
      <creator-id type="integer">103425</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;arel rails3\&quot;&quot;
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5490</number>
      <permalink>private-method-format-called-for-arelpredicatesequality0x142d80c</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;arel rails3&quot; patch</tag>
      <title>Problem with .and()? - private method `format' called for #&lt;Arel::Predicates::Equality:0x142d80c&gt; </title>
      <updated-at type="datetime">2010-09-08T11:17:41+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Harton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5490</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks Neeraj!  I've applied the patch!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks Neeraj! I've applied the patch!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-08T16:26:59+01:00</created-at>
      <creator-id type="integer">103425</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5490</number>
      <permalink>private-method-format-called-for-arelpredicatesequality0x142d80c</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;arel rails3&quot; patch</tag>
      <title>Problem with .and()? - private method `format' called for #&lt;Arel::Predicates::Equality:0x142d80c&gt; </title>
      <updated-at type="datetime">2010-09-08T16:27:03+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">4</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>James Harton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5490</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>af1dc2106569ff5c06dc6d9efea31246e1fee724</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-08T11:17:40+01:00</created-at>
      <filename>fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">663634</id>
      <size type="integer">2814</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/663634/fix.diff</url>
    </attachment>
  </attachments>
</ticket>
