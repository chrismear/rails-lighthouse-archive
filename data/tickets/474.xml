<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">6</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-23T19:34:56+01:00</created-at>
  <creator-id type="integer">8721</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">474</number>
  <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
  <priority type="integer">19391</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord patch tested</tag>
  <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
  <updated-at type="datetime">2008-11-26T09:11:49+00:00</updated-at>
  <user-id type="integer">17505</user-id>
  <version type="integer">21</version>
  <user-name>Andrew Vit</user-name>
  <creator-name>David Dollar</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
  <priority-name nil="true"></priority-name>
  <original-body>Currently when creating a nested form

form_for @books do |f|

  f.text_field :isbn

  f.fields_for :author do |af|
  
    af.text_field :name

  end

end

Book.new(params[:book])  fails because   Book#author is passed a HashWithIndifferentAccess  (params[:book][:author])   rather than an actual Author

This patch allows Hash to be used in place of an actual ActiveRecord model, and the model itself will be hydrated from the Hash as needed.

Patch is at http://github.com/ddollar/rails/commit/cf8e34d59cd81c3874d97668a72bb61949c50da8</original-body>
  <latest-body>Currently when creating a nested form

form_for @books do |f|

  f.text_field :isbn

  f.fields_for :author do |af|
  
    af.text_field :name

  end

end

Book.new(params[:book])  fails because   Book#author is passed a HashWithIndifferentAccess  (params[:book][:author])   rather than an actual Author

This patch allows Hash to be used in place of an actual ActiveRecord model, and the model itself will be hydrated from the Hash as needed.

Patch is at http://github.com/ddollar/rails/commit/cf8e34d59cd81c3874d97668a72bb61949c50da8</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Currently when creating a nested form
&lt;/p&gt;&lt;p&gt;
form_for @books do |f|
&lt;/p&gt;&lt;p&gt;
f.text_field :isbn
&lt;/p&gt;&lt;p&gt;
f.fields_for :author do |af|
&lt;/p&gt;&lt;p&gt;
af.text_field :name
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
Book.new(params[:book])  fails because   Book#author is passed a HashWithIndifferentAccess  (params[:book][:author])   rather than an actual Author
&lt;/p&gt;&lt;p&gt;
This patch allows Hash to be used in place of an actual ActiveRecord model, and the model itself will be hydrated from the Hash as needed.
&lt;/p&gt;&lt;p&gt;
Patch is at &lt;a href=&quot;http://github.com/ddollar/rails/commit/cf8e34d59cd81c3874d97668a72bb61949c50da8&quot;&gt;http://github.com/ddollar/rails/...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Currently when creating a nested form

form_for @books do |f|

  f.text_field :isbn

  f.fields_for :author do |af|
  
    af.text_field :name

  end

end

Book.new(params[:book])  fails because   Book#author is passed a HashWithIndifferentAccess  (params[:book][:author])   rather than an actual Author

This patch allows Hash to be used in place of an actual ActiveRecord model, and the model itself will be hydrated from the Hash as needed.

Patch is at http://github.com/ddollar/rails/commit/cf8e34d59cd81c3874d97668a72bb61949c50da8</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Currently when creating a nested form
&lt;/p&gt;&lt;p&gt;
form_for @books do |f|
&lt;/p&gt;&lt;p&gt;
f.text_field :isbn
&lt;/p&gt;&lt;p&gt;
f.fields_for :author do |af|
&lt;/p&gt;&lt;p&gt;
af.text_field :name
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
Book.new(params[:book])  fails because   Book#author is passed a HashWithIndifferentAccess  (params[:book][:author])   rather than an actual Author
&lt;/p&gt;&lt;p&gt;
This patch allows Hash to be used in place of an actual ActiveRecord model, and the model itself will be hydrated from the Hash as needed.
&lt;/p&gt;&lt;p&gt;
Patch is at &lt;a href=&quot;http://github.com/ddollar/rails/commit/cf8e34d59cd81c3874d97668a72bb61949c50da8&quot;&gt;http://github.com/ddollar/rails/...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-23T19:34:57+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-06-23T19:34:57+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">1</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Added patch file</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Added patch file
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-30T16:39:47+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-06-30T16:39:47+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">2</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Refactored the patch to add ActiveRecord::Base#attr_creatable to permit this functionality</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Refactored the patch to add ActiveRecord::Base#attr_creatable to permit this functionality
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-02T21:35:46+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-02T21:35:46+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">3</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Also found at http://github.com/ddollar/rails/tree/attr-creatable</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Also found at &lt;a href=&quot;http://github.com/ddollar/rails/tree/attr-creatable&quot;&gt;http://github.com/ddollar/rails/...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-02T21:36:36+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-02T21:36:36+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">4</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Checked it out, tests are passing. Looks good, would like to see this feature soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Checked it out, tests are passing. Looks good, would like to see this feature soon.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-04T08:29:22+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-04T08:29:22+01:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">5</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-08T14:08:41+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-08T14:08:41+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Reworked as has_many :foo, :accessible =&gt; true</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Reworked as has_many :foo, :accessible =&gt; true
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-14T02:22:31+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T02:22:31+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">7</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>(from [e0750d6a5c7f621e4ca12205137c0b135cab444a]) Add :accessible option to Associations for allowing mass assignments using hash. [#474 state:resolved]

Allows nested Hashes (i.e. from nested forms) to hydrate the appropriate
ActiveRecord models.

class Post &lt; ActiveRecord::Base
  belongs_to :author,   :accessible =&gt; true
  has_many   :comments, :accessible =&gt; true
end

post = Post.create({
  :title    =&gt; 'Accessible Attributes',
  :author   =&gt; { :name =&gt; 'David Dollar' },
  :comments =&gt; [
    { :body =&gt; 'First Post!' },
    { :body =&gt; 'Nested Hashes are great!' }
  ]
})

post.comments &lt;&lt; { :body =&gt; 'Another Comment' }

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/e0750d6a5c7f621e4ca12205137c0b135cab444a</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [e0750d6a5c7f621e4ca12205137c0b135cab444a]) Add :accessible option to Associations for allowing mass assignments using hash. [#474 state:resolved]
&lt;/p&gt;&lt;p&gt;
Allows nested Hashes (i.e. from nested forms) to hydrate the appropriate
&lt;/p&gt;&lt;p&gt;
ActiveRecord models.
&lt;/p&gt;&lt;p&gt;
class Post &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
belongs_to :author,   :accessible =&gt; true
&lt;/p&gt;&lt;p&gt;
has_many   :comments, :accessible =&gt; true
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
post = Post.create({
&lt;/p&gt;&lt;p&gt;
:title    =&gt; 'Accessible Attributes',
&lt;/p&gt;&lt;p&gt;
:author   =&gt; { :name =&gt; 'David Dollar' },
&lt;/p&gt;&lt;p&gt;
:comments =&gt; [
&lt;/p&gt;&lt;p&gt;
{ :body =&gt; 'First Post!' },
&lt;/p&gt;&lt;p&gt;
{ :body =&gt; 'Nested Hashes are great!' }
&lt;/p&gt;&lt;p&gt;
]
&lt;/p&gt;&lt;p&gt;
})
&lt;/p&gt;&lt;p&gt;
post.comments &amp;lt;&amp;lt; { :body =&gt; 'Another Comment' }
&lt;/p&gt;&lt;p&gt;
Signed-off-by: Pratik Naik 
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/e0750d6a5c7f621e4ca12205137c0b135cab444a&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-14T02:55:57+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T02:55:57+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-14T03:00:26+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T03:00:26+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">9</version>
      <user-name>Pratik</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Okay, I'm a bit in a hurry now and just want to make a quick note before I forgot. I will go into more detail about this later.

If we now also allow attributes for has_many associations, wouldn't it make sense to do it in the way that &quot;AttributeFu&quot;:http://jamesgolick.com/2007/12/5/introducing-attributefu-multi-model-forms-made-easy does it, in order to make it possible to create/update both, existing and new records?

I actually see few cases were only creation is useful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Okay, I'm a bit in a hurry now and just want to make a quick note before I forgot. I will go into more detail about this later.
&lt;/p&gt;&lt;p&gt;
If we now also allow attributes for has_many associations, wouldn't it make sense to do it in the way that &lt;a href=&quot;http://jamesgolick.com/2007/12/5/introducing-attributefu-multi-model-forms-made-easy&quot;&gt;AttributeFu&lt;/a&gt; does it, in order to make it possible to create/update both, existing and new records?
&lt;/p&gt;&lt;p&gt;
I actually see few cases were only creation is useful.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-14T10:39:15+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T10:39:15+01:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">10</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>I'm not sure what you mean. Updating currently works with this change.

@@@ ruby

class Author &lt; ActiveRecord::Base
  has_many :posts, :accessible =&gt; true
end

class Post &lt; ActiveRecord::Base
  belongs_to :author, :accessible =&gt; true
end


&gt; Post.create({:title =&gt; 'Foo', :author =&gt; { :name =&gt; 'David' }})
=&gt; #&lt;Post id: 1, author_id: 1, title: &quot;Foo&quot;, created_at: &quot;2008-07-14 12:42:39&quot;, updated_at: &quot;2008-07-14 12:42:39&quot;&gt;

&gt; p = Post.find(1)
=&gt; #&lt;Post id: 1, author_id: 1, title: &quot;Foo&quot;, created_at: &quot;2008-07-14 12:42:39&quot;, updated_at: &quot;2008-07-14 12:42:39&quot;&gt;

&gt; p.author = { :name =&gt; 'Joe' }
=&gt; {:name=&gt;&quot;Joe&quot;}&gt; p.save
=&gt; true

&gt; p
=&gt; #&lt;Post id: 1, author_id: 2, title: &quot;Foo&quot;, created_at: &quot;2008-07-14 12:42:39&quot;, updated_at: &quot;2008-07-14 12:43:11&quot;&gt;

&gt; p.author
=&gt; #&lt;Author id: 2, name: &quot;Joe&quot;, created_at: &quot;2008-07-14 12:43:11&quot;, updated_at: &quot;2008-07-14 12:43:11&quot;&gt;

&gt; a = Author.find(2)
=&gt; #&lt;Author id: 2, name: &quot;Joe&quot;, created_at: &quot;2008-07-14 12:43:11&quot;, updated_at: &quot;2008-07-14 12:43:11&quot;&gt;

&gt; a.posts
=&gt; [#&lt;Post id: 1, author_id: 2, title: &quot;Foo&quot;, created_at: &quot;2008-07-14 12:42:39&quot;, updated_at: &quot;2008-07-14 12:43:11&quot;&gt;]

&gt; a.posts &lt;&lt; { :title =&gt; 'Another Post' }
=&gt; [#&lt;Post id: 1, author_id: 2, title: &quot;Foo&quot;, created_at: &quot;2008-07-14 12:42:39&quot;, updated_at: &quot;2008-07-14 12:43:11&quot;&gt;, #&lt;Post id: 2, author_id: 2, title: &quot;Another Post&quot;, created_at: &quot;2008-07-14 12:45:49&quot;, updated_at: &quot;2008-07-14 12:45:49&quot;&gt;]

&gt; a.posts.last
=&gt; #&lt;Post id: 2, author_id: 2, title: &quot;Another Post&quot;, created_at: &quot;2008-07-14 12:45:49&quot;, updated_at: &quot;2008-07-14 12:45:49&quot;&gt;

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm not sure what you mean. Updating currently works with this change.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Author &amp;lt; ActiveRecord::Base
  has_many :posts, :accessible =&amp;gt; true
end

class Post &amp;lt; ActiveRecord::Base
  belongs_to :author, :accessible =&amp;gt; true
end


&amp;gt; Post.create({:title =&amp;gt; 'Foo', :author =&amp;gt; { :name =&amp;gt; 'David' }})
=&amp;gt; #&amp;lt;Post id: 1, author_id: 1, title: &amp;quot;Foo&amp;quot;, created_at: &amp;quot;2008-07-14 12:42:39&amp;quot;, updated_at: &amp;quot;2008-07-14 12:42:39&amp;quot;&amp;gt;

&amp;gt; p = Post.find(1)
=&amp;gt; #&amp;lt;Post id: 1, author_id: 1, title: &amp;quot;Foo&amp;quot;, created_at: &amp;quot;2008-07-14 12:42:39&amp;quot;, updated_at: &amp;quot;2008-07-14 12:42:39&amp;quot;&amp;gt;

&amp;gt; p.author = { :name =&amp;gt; 'Joe' }
=&amp;gt; {:name=&amp;gt;&amp;quot;Joe&amp;quot;}&amp;gt; p.save
=&amp;gt; true

&amp;gt; p
=&amp;gt; #&amp;lt;Post id: 1, author_id: 2, title: &amp;quot;Foo&amp;quot;, created_at: &amp;quot;2008-07-14 12:42:39&amp;quot;, updated_at: &amp;quot;2008-07-14 12:43:11&amp;quot;&amp;gt;

&amp;gt; p.author
=&amp;gt; #&amp;lt;Author id: 2, name: &amp;quot;Joe&amp;quot;, created_at: &amp;quot;2008-07-14 12:43:11&amp;quot;, updated_at: &amp;quot;2008-07-14 12:43:11&amp;quot;&amp;gt;

&amp;gt; a = Author.find(2)
=&amp;gt; #&amp;lt;Author id: 2, name: &amp;quot;Joe&amp;quot;, created_at: &amp;quot;2008-07-14 12:43:11&amp;quot;, updated_at: &amp;quot;2008-07-14 12:43:11&amp;quot;&amp;gt;

&amp;gt; a.posts
=&amp;gt; [#&amp;lt;Post id: 1, author_id: 2, title: &amp;quot;Foo&amp;quot;, created_at: &amp;quot;2008-07-14 12:42:39&amp;quot;, updated_at: &amp;quot;2008-07-14 12:43:11&amp;quot;&amp;gt;]

&amp;gt; a.posts &amp;lt;&amp;lt; { :title =&amp;gt; 'Another Post' }
=&amp;gt; [#&amp;lt;Post id: 1, author_id: 2, title: &amp;quot;Foo&amp;quot;, created_at: &amp;quot;2008-07-14 12:42:39&amp;quot;, updated_at: &amp;quot;2008-07-14 12:43:11&amp;quot;&amp;gt;, #&amp;lt;Post id: 2, author_id: 2, title: &amp;quot;Another Post&amp;quot;, created_at: &amp;quot;2008-07-14 12:45:49&amp;quot;, updated_at: &amp;quot;2008-07-14 12:45:49&amp;quot;&amp;gt;]

&amp;gt; a.posts.last
=&amp;gt; #&amp;lt;Post id: 2, author_id: 2, title: &amp;quot;Another Post&amp;quot;, created_at: &amp;quot;2008-07-14 12:45:49&amp;quot;, updated_at: &amp;quot;2008-07-14 12:45:49&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-14T13:47:43+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T13:47:43+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">11</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Sure, it works for has_one and belongs_to, but not so well for has_many.

It will only create a new record and delete the old one which I don't think is a good behavior.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sure, it works for has_one and belongs_to, but not so well for has_many.
&lt;/p&gt;&lt;p&gt;
It will only create a new record and delete the old one which I don't think is a good behavior.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-14T14:02:10+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T14:02:10+01:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">12</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>I think I see what you mean. Let me see what I can come up with.

--
David Dollar
ddollar@gmail.com

On Jul 14, 2008, at 9:02 AM, Lighthouse &lt;support@lighthouseapp.com&gt;  
wrote:</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I think I see what you mean. Let me see what I can come up with.
&lt;/p&gt;&lt;p&gt;
--
&lt;/p&gt;&lt;p&gt;
David Dollar
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;mailto:ddollar@gmail.com&quot;&gt;ddollar@gmail.com&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
On Jul 14, 2008, at 9:02 AM, Lighthouse 
&lt;/p&gt;&lt;p&gt;
wrote:
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-14T14:10:08+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T14:10:08+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">13</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Adds the ability to update existing entries on :accessible =&gt; true associations

@@@ ruby

# create from a basic hash
&gt; p = Post.create(:title =&gt; 'Test Post', :author =&gt; { :name =&gt; 'David' })
=&gt; #&lt;Post id: 8, author_id: 8, title: &quot;Test Post&quot;, created_at: &quot;2008-07-14 15:22:53&quot;, updated_at: &quot;2008-07-14 15:22:53&quot;&gt;

# update a singular reference
&gt; p.author = { :name =&gt; 'Joe' }
=&gt; {:name=&gt;&quot;Joe&quot;}

# it 'updates' the row in sql, notice the id is still the same
&gt; p.author
=&gt; #&lt;Author id: 8, name: &quot;Joe&quot;, created_at: &quot;2008-07-14 15:22:53&quot;, updated_at: &quot;2008-07-14 15:23:03&quot;&gt;


# create an author with posts from a hash
&gt;  a = Author.create(:name =&gt; 'David', :posts =&gt; [ { :title =&gt; 'Post 1' }, { :title =&gt; 'Post 2' } ])
=&gt; #&lt;Author id: 14, name: &quot;David&quot;, created_at: &quot;2008-07-14 15:38:18&quot;, updated_at: &quot;2008-07-14 15:38:18&quot;&gt;

# show the posts
&gt; a.posts
=&gt; [#&lt;Post id: 17, author_id: 14, title: &quot;Post 1&quot;, created_at: &quot;2008-07-14 15:38:18&quot;, updated_at: &quot;2008-07-14 15:38:18&quot;&gt;, #&lt;Post id: 18, author_id: 14, title: &quot;Post 2&quot;, created_at: &quot;2008-07-14 15:38:18&quot;, updated_at: &quot;2008-07-14 15:38:18&quot;&gt;]

# use &lt;&lt; to update existing entries (as well as add new ones, demonstrated later)
&gt; a.posts &lt;&lt; { :id =&gt; 17, :title =&gt; 'Post 1 Updated' }
=&gt; [#&lt;Post id: 17, author_id: 14, title: &quot;Post 1 Updated&quot;, created_at: &quot;2008-07-14 15:38:18&quot;, updated_at: &quot;2008-07-14 15:38:53&quot;&gt;, #&lt;Post id: 18, author_id: 14, title: &quot;Post 2&quot;, created_at: &quot;2008-07-14 15:38:18&quot;, updated_at: &quot;2008-07-14 15:38:18&quot;&gt;]

# show posts to verify the update
&gt; a.posts
=&gt; [#&lt;Post id: 17, author_id: 14, title: &quot;Post 1 Updated&quot;, created_at: &quot;2008-07-14 15:38:18&quot;, updated_at: &quot;2008-07-14 15:38:53&quot;&gt;, #&lt;Post id: 18, author_id: 14, title: &quot;Post 2&quot;, created_at: &quot;2008-07-14 15:38:18&quot;, updated_at: &quot;2008-07-14 15:38:18&quot;&gt;]

# can't update posts that don't belong to the author
&gt; a.posts &lt;&lt; { :id =&gt; 1, :title =&gt; 'Not Allowed' }
ActiveRecord::RecordNotFound: Couldn't find Post with ID=1 AND (&quot;posts&quot;.author_id = 14)
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/base.rb:1393:in `find_one'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/base.rb:1376:in `find_from_ids'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/base.rb:537:in `find'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:47:in `find'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:103:in `&lt;&lt;'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:99:in `each'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:99:in `&lt;&lt;'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/transactions.rb:79:in `transaction'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/transactions.rb:98:in `transaction'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:98:in `&lt;&lt;'
        from (irb):12
        
# use = to outright replace all posts
&gt; a.posts = [ { :title =&gt; 'Replace Posts' } ]
=&gt; [#&lt;Post id: 19, author_id: 14, title: &quot;Replace Posts&quot;, created_at: &quot;2008-07-14 15:40:30&quot;, updated_at: &quot;2008-07-14 15:40:30&quot;&gt;]

# can even 'replace' using existing posts, the post attributes will be updated
&gt; a.posts = [ { :id =&gt; 19, :title =&gt; 'Can Replace This Way Too' } ]
=&gt; [#&lt;Post id: 19, author_id: 14, title: &quot;Can Replace This Way Too&quot;, created_at: &quot;2008-07-14 15:40:30&quot;, updated_at: &quot;2008-07-14 15:40:49&quot;&gt;]

# use &lt;&lt; also for adding brand new items
&gt; a.posts &lt;&lt; { :title =&gt; 'New Post' }
=&gt; [#&lt;Post id: 19, author_id: 14, title: &quot;Replace Posts&quot;, created_at: &quot;2008-07-14 15:40:30&quot;, updated_at: &quot;2008-07-14 15:40:30&quot;&gt;, #&lt;Post id: 20, author_id: 14, title: &quot;New Post&quot;, created_at: &quot;2008-07-14 15:43:18&quot;, updated_at: &quot;2008-07-14 15:43:18&quot;&gt;]

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Adds the ability to update existing entries on :accessible =&gt; true associations
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# create from a basic hash
&amp;gt; p = Post.create(:title =&amp;gt; 'Test Post', :author =&amp;gt; { :name =&amp;gt; 'David' })
=&amp;gt; #&amp;lt;Post id: 8, author_id: 8, title: &amp;quot;Test Post&amp;quot;, created_at: &amp;quot;2008-07-14 15:22:53&amp;quot;, updated_at: &amp;quot;2008-07-14 15:22:53&amp;quot;&amp;gt;

# update a singular reference
&amp;gt; p.author = { :name =&amp;gt; 'Joe' }
=&amp;gt; {:name=&amp;gt;&amp;quot;Joe&amp;quot;}

# it 'updates' the row in sql, notice the id is still the same
&amp;gt; p.author
=&amp;gt; #&amp;lt;Author id: 8, name: &amp;quot;Joe&amp;quot;, created_at: &amp;quot;2008-07-14 15:22:53&amp;quot;, updated_at: &amp;quot;2008-07-14 15:23:03&amp;quot;&amp;gt;


# create an author with posts from a hash
&amp;gt;  a = Author.create(:name =&amp;gt; 'David', :posts =&amp;gt; [ { :title =&amp;gt; 'Post 1' }, { :title =&amp;gt; 'Post 2' } ])
=&amp;gt; #&amp;lt;Author id: 14, name: &amp;quot;David&amp;quot;, created_at: &amp;quot;2008-07-14 15:38:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:38:18&amp;quot;&amp;gt;

# show the posts
&amp;gt; a.posts
=&amp;gt; [#&amp;lt;Post id: 17, author_id: 14, title: &amp;quot;Post 1&amp;quot;, created_at: &amp;quot;2008-07-14 15:38:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:38:18&amp;quot;&amp;gt;, #&amp;lt;Post id: 18, author_id: 14, title: &amp;quot;Post 2&amp;quot;, created_at: &amp;quot;2008-07-14 15:38:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:38:18&amp;quot;&amp;gt;]

# use &amp;lt;&amp;lt; to update existing entries (as well as add new ones, demonstrated later)
&amp;gt; a.posts &amp;lt;&amp;lt; { :id =&amp;gt; 17, :title =&amp;gt; 'Post 1 Updated' }
=&amp;gt; [#&amp;lt;Post id: 17, author_id: 14, title: &amp;quot;Post 1 Updated&amp;quot;, created_at: &amp;quot;2008-07-14 15:38:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:38:53&amp;quot;&amp;gt;, #&amp;lt;Post id: 18, author_id: 14, title: &amp;quot;Post 2&amp;quot;, created_at: &amp;quot;2008-07-14 15:38:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:38:18&amp;quot;&amp;gt;]

# show posts to verify the update
&amp;gt; a.posts
=&amp;gt; [#&amp;lt;Post id: 17, author_id: 14, title: &amp;quot;Post 1 Updated&amp;quot;, created_at: &amp;quot;2008-07-14 15:38:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:38:53&amp;quot;&amp;gt;, #&amp;lt;Post id: 18, author_id: 14, title: &amp;quot;Post 2&amp;quot;, created_at: &amp;quot;2008-07-14 15:38:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:38:18&amp;quot;&amp;gt;]

# can't update posts that don't belong to the author
&amp;gt; a.posts &amp;lt;&amp;lt; { :id =&amp;gt; 1, :title =&amp;gt; 'Not Allowed' }
ActiveRecord::RecordNotFound: Couldn't find Post with ID=1 AND (&amp;quot;posts&amp;quot;.author_id = 14)
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/base.rb:1393:in `find_one'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/base.rb:1376:in `find_from_ids'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/base.rb:537:in `find'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:47:in `find'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:103:in `&amp;lt;&amp;lt;'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:99:in `each'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:99:in `&amp;lt;&amp;lt;'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/transactions.rb:79:in `transaction'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/transactions.rb:98:in `transaction'
        from /Users/ddollar/Code/EdgeRailsApp/vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:98:in `&amp;lt;&amp;lt;'
        from (irb):12
        
# use = to outright replace all posts
&amp;gt; a.posts = [ { :title =&amp;gt; 'Replace Posts' } ]
=&amp;gt; [#&amp;lt;Post id: 19, author_id: 14, title: &amp;quot;Replace Posts&amp;quot;, created_at: &amp;quot;2008-07-14 15:40:30&amp;quot;, updated_at: &amp;quot;2008-07-14 15:40:30&amp;quot;&amp;gt;]

# can even 'replace' using existing posts, the post attributes will be updated
&amp;gt; a.posts = [ { :id =&amp;gt; 19, :title =&amp;gt; 'Can Replace This Way Too' } ]
=&amp;gt; [#&amp;lt;Post id: 19, author_id: 14, title: &amp;quot;Can Replace This Way Too&amp;quot;, created_at: &amp;quot;2008-07-14 15:40:30&amp;quot;, updated_at: &amp;quot;2008-07-14 15:40:49&amp;quot;&amp;gt;]

# use &amp;lt;&amp;lt; also for adding brand new items
&amp;gt; a.posts &amp;lt;&amp;lt; { :title =&amp;gt; 'New Post' }
=&amp;gt; [#&amp;lt;Post id: 19, author_id: 14, title: &amp;quot;Replace Posts&amp;quot;, created_at: &amp;quot;2008-07-14 15:40:30&amp;quot;, updated_at: &amp;quot;2008-07-14 15:40:30&amp;quot;&amp;gt;, #&amp;lt;Post id: 20, author_id: 14, title: &amp;quot;New Post&amp;quot;, created_at: &amp;quot;2008-07-14 15:43:18&amp;quot;, updated_at: &amp;quot;2008-07-14 15:43:18&amp;quot;&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-14T17:01:15+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-14T17:01:15+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">14</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>This approach seems fairly limited.

We couldn't have a form, for example, that would be able to update, and create new child models at once.

My plugin, attribute_fu (mentioned earlier), does the same thing, but supports all the cases where there are both new and saved objects in the hash of hashes. It is a fully transparent solution for creating multi-model forms, including form helpers.

Is there any chance of extending this syntax to support those situations, or sucking attribute_fu down in to core?

If you're unfamiliar with the plugin, checkout this &quot;screencast&quot;:http://s3.amazonaws.com/giraffecasts/Episode_1_-_attribute_fu.mov</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This approach seems fairly limited.
&lt;/p&gt;&lt;p&gt;
We couldn't have a form, for example, that would be able to update, and create new child models at once.
&lt;/p&gt;&lt;p&gt;
My plugin, attribute_fu (mentioned earlier), does the same thing, but supports all the cases where there are both new and saved objects in the hash of hashes. It is a fully transparent solution for creating multi-model forms, including form helpers.
&lt;/p&gt;&lt;p&gt;
Is there any chance of extending this syntax to support those situations, or sucking attribute_fu down in to core?
&lt;/p&gt;&lt;p&gt;
If you're unfamiliar with the plugin, checkout this &lt;a href=&quot;http://s3.amazonaws.com/giraffecasts/Episode_1_-_attribute_fu.mov&quot;&gt;screencast&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-15T02:43:09+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-15T02:43:09+01:00</updated-at>
      <user-id type="integer">9497</user-id>
      <version type="integer">15</version>
      <user-name>James</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-15T02:50:07+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-15T02:50:07+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">16</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>The second patch mentioned here adds all of the features you are looking for. To mix both creating and updating simply specify some elements of the hash with :id keys and others without.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The second patch mentioned here adds all of the features you are looking for. To mix both creating and updating simply specify some elements of the hash with :id keys and others without.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-15T05:42:28+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-07-15T05:42:28+01:00</updated-at>
      <user-id type="integer">8721</user-id>
      <version type="integer">17</version>
      <user-name>David Dollar</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>(from [9994f0d90248db7d7eae36f0b597a15e8a427612]) Revert &quot;Add :accessible option to Associations for allowing mass assignments using hash. [#474 state:resolved]&quot;

This reverts commit e0750d6a5c7f621e4ca12205137c0b135cab444a.

Conflicts:

	activerecord/CHANGELOG
	activerecord/lib/active_record/associations.rb
	activerecord/lib/active_record/associations/association_collection.rb
http://github.com/rails/rails/commit/9994f0d90248db7d7eae36f0b597a15e8a427612</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [9994f0d90248db7d7eae36f0b597a15e8a427612]) Revert &quot;Add
:accessible option to Associations for allowing mass assignments
using hash. [&lt;a href=&quot;/projects/8994/tickets/474&quot; title=&quot;Ticket #474&quot;&gt;#474&lt;/a&gt; state:resolved]&quot;&lt;/p&gt;
&lt;p&gt;This reverts commit
e0750d6a5c7f621e4ca12205137c0b135cab444a.&lt;/p&gt;
&lt;p&gt;Conflicts:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;activerecord/CHANGELOG
activerecord/lib/active_record/associations.rb
activerecord/lib/active_record/associations/association_collection.rb
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/9994f0d90248db7d7eae36f0b597a15e8a427612&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-10T18:51:52+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-09-10T18:51:59+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">18</version>
      <user-name>Repository</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Any word on what might replace this functionality or is it gone for the time being?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Any word on what might replace this functionality or is it gone
for the time being?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-10T21:16:02+01:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-09-10T21:16:09+01:00</updated-at>
      <user-id type="integer">17330</user-id>
      <version type="integer">19</version>
      <user-name>Brian Mitchell</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Continued in #1031 and here: http://groups.google.com/group/rubyonrails-core/browse_thread/thread/3c61e00916c365e5</body>
      <body-html>&lt;div&gt;&lt;p&gt;Continued in &lt;a href=&quot;/projects/8994/tickets/1031&quot; title=&quot;Ticket #1031&quot;&gt;#1031&lt;/a&gt; and here: &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/3c61e00916c365e5&quot;&gt;
http://groups.google.com/group/r...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-04T03:55:03+00:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-11-04T03:55:08+00:00</updated-at>
      <user-id type="integer">22887</user-id>
      <version type="integer">20</version>
      <user-name>Sean Kirby</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Why is this ticket marked &quot;resolved&quot; if the feature was pulled?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Why is this ticket marked &quot;resolved&quot; if the feature was
pulled?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-26T09:11:47+00:00</created-at>
      <creator-id type="integer">8721</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">474</number>
      <permalink>allow-hash-to-be-passed-into-associationproxy-setters-and-associationcollections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch tested</tag>
      <title>Allow Hash to be passed into AssociationProxy setters and AssociationCollections</title>
      <updated-at type="datetime">2008-11-26T09:11:49+00:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">21</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>David Dollar</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/474</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>7c2c776359ca412691458adb98e228f1cb3dd84f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-30T16:39:47+01:00</created-at>
      <filename>nested-update-attributes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">30043</id>
      <size type="integer">3254</size>
      <uploader-id type="integer">8721</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/30043/nested-update-attributes.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>0439c346af2ad3acf18c6407a075b4a282c86c33</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-02T21:35:46+01:00</created-at>
      <filename>attr-creatable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">30593</id>
      <size type="integer">9152</size>
      <uploader-id type="integer">8721</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/30593/attr-creatable.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d0f56c4160af0558943f03ea4ea8f0642b772153</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-14T00:42:01+01:00</created-at>
      <filename>accessible.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">32337</id>
      <size type="integer">6530</size>
      <uploader-id type="integer">1366</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/32337/accessible.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>6738a15f0587c3eff29917b020a426774663be9f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-14T02:22:31+01:00</created-at>
      <filename>accessible-associations.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">32345</id>
      <size type="integer">13888</size>
      <uploader-id type="integer">8721</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/32345/accessible-associations.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>bf055a384acb5e8b744ee44c4b81fd44809aa2a7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-14T02:54:42+01:00</created-at>
      <filename>accessible-associations.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">32346</id>
      <size type="integer">13815</size>
      <uploader-id type="integer">8721</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/32346/accessible-associations.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>c6378c570224f8b5c0fbfcd819d7c764dad69f43</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-14T17:01:14+01:00</created-at>
      <filename>accessible-association-replacement.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">32488</id>
      <size type="integer">7760</size>
      <uploader-id type="integer">8721</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/32488/accessible-association-replacement.diff</url>
    </attachment>
  </attachments>
</ticket>
