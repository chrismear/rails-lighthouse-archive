From 4f79164d8a49f16fd04fdda826164bfd89db454d Mon Sep 17 00:00:00 2001
From: Adam Meehan <adam.meehan@gmail.com>
Date: Sat, 11 Sep 2010 20:32:52 +1000
Subject: [PATCH] handle parsing new and old json error serialization formats

---
 activeresource/lib/active_resource/validations.rb |   14 ++++++++++++--
 activeresource/test/cases/base_errors_test.rb     |   13 +++++++++++++
 2 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/activeresource/lib/active_resource/validations.rb b/activeresource/lib/active_resource/validations.rb
index d3b19ee..1893f67 100644
--- a/activeresource/lib/active_resource/validations.rb
+++ b/activeresource/lib/active_resource/validations.rb
@@ -27,8 +27,18 @@ module ActiveResource
 
     # Grabs errors from a json response.
     def from_json(json, save_cache = false)
-      array = Array.wrap(ActiveSupport::JSON.decode(json)['errors']) rescue []
-      from_array array, save_cache
+      errors = ActiveSupport::JSON.decode(json)
+      if errors['errors']
+        # ActiveRecord 2.x errors array
+        array = Array.wrap(errors['errors'])
+        from_array array, save_cache
+      else
+        # ActiveModel errors hash
+        clear unless save_cache
+        errors.each do |attr_name, messages|
+          Array.wrap(messages).each { |message| add(attr_name.to_sym, message) }
+        end
+      end
     end
 
     # Grabs errors from an XML response.
diff --git a/activeresource/test/cases/base_errors_test.rb b/activeresource/test/cases/base_errors_test.rb
index 5063916..56bc784 100644
--- a/activeresource/test/cases/base_errors_test.rb
+++ b/activeresource/test/cases/base_errors_test.rb
@@ -26,6 +26,19 @@ class BaseErrorsTest < Test::Unit::TestCase
     end
   end
 
+  def test_should_parse_json_errors_hash
+    # ActiveModel serializes errors as a hash with attribute names as keys and error messages as values
+    ActiveResource::HttpMock.respond_to do |mock|
+      mock.post "/people.json", {}, %q{{"age":"can't be blank","name":["can't be blank","must start with a letter"]}}, 422, {'Content-Type' => 'application/json; charset=utf-8'}
+    end
+    invalid_user_using_format(:json) do
+      assert_kind_of ActiveResource::Errors, @person.errors
+      assert_equal 3, @person.errors.size
+      assert_equal ["can't be blank"], @person.errors[:age]
+      assert_equal ["can't be blank","must start with a letter"], @person.errors[:name]
+    end
+  end
+
   def test_should_parse_json_errors_when_no_errors_key
     ActiveResource::HttpMock.respond_to do |mock|
       mock.post "/people.json", {}, '{}', 422, {'Content-Type' => 'application/json; charset=utf-8'}
-- 
1.6.5

