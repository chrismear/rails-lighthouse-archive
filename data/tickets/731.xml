<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-30T23:48:32+01:00</created-at>
  <creator-id type="integer">27635</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">731</number>
  <permalink>method-original_filename-in-uploadfile-module-is-broken</permalink>
  <priority type="integer">195</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>filename upload</tag>
  <title>method original_filename in UploadFile module is broken</title>
  <updated-at type="datetime">2008-11-22T19:52:34+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">3</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Armando Di Cianno</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/731</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>While persnickety, there is a flaw in the setter for original filename, in Rails 2.1.0, in an apache/passenger setup.

The filename on the next line:
 &amp;;()&lt;&gt;|!{}[]'&quot;*?~\$`.ext
for example, comes out as
&amp;;()&lt;&gt;|!{}[]'
Note that the leading space, and everything trailing the single-quote (at the double-quote position) is truncated.

We recently migrated from Mongrel, where we had hand-rolled our own upload filename grabber, to Passenger, and wanted to use the nice mod_upload_progress that exists out there.  The code we used was /BAD/, but looked like this:

temp = e.split('=')
if temp[0] == &quot;filename&quot;
  # remove begin/end double-quotes, without
  #   munging double-quotes in the filename
  filename = temp[1].chomp().chop().reverse().chop().reverse()
  puts &quot;filename: #{filename}&quot; if @debug
end

This preserved the filename *perfectly* -- we also later massaged out the IE full-path to get just the basename.

So, while filename that has all those characters is unlikely, it's indeed a valid filename, and should be preserved.</original-body>
  <latest-body>While persnickety, there is a flaw in the setter for original filename, in Rails 2.1.0, in an apache/passenger setup.

The filename on the next line:
 &amp;;()&lt;&gt;|!{}[]'&quot;*?~\$`.ext
for example, comes out as
&amp;;()&lt;&gt;|!{}[]'
Note that the leading space, and everything trailing the single-quote (at the double-quote position) is truncated.

We recently migrated from Mongrel, where we had hand-rolled our own upload filename grabber, to Passenger, and wanted to use the nice mod_upload_progress that exists out there.  The code we used was /BAD/, but looked like this:

temp = e.split('=')
if temp[0] == &quot;filename&quot;
  # remove begin/end double-quotes, without
  #   munging double-quotes in the filename
  filename = temp[1].chomp().chop().reverse().chop().reverse()
  puts &quot;filename: #{filename}&quot; if @debug
end

This preserved the filename *perfectly* -- we also later massaged out the IE full-path to get just the basename.

So, while filename that has all those characters is unlikely, it's indeed a valid filename, and should be preserved.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
While persnickety, there is a flaw in the setter for original filename, in Rails 2.1.0, in an apache/passenger setup.
&lt;/p&gt;&lt;p&gt;
The filename on the next line:
&lt;/p&gt;&lt;p&gt;
&amp;;()&amp;lt;&gt;|!{}[]'&quot;*?~\$`.ext
&lt;/p&gt;&lt;p&gt;
for example, comes out as
&lt;/p&gt;&lt;p&gt;
&amp;;()&amp;lt;&gt;|!{}[]'
&lt;/p&gt;&lt;p&gt;
Note that the leading space, and everything trailing the single-quote (at the double-quote position) is truncated.
&lt;/p&gt;&lt;p&gt;
We recently migrated from Mongrel, where we had hand-rolled our own upload filename grabber, to Passenger, and wanted to use the nice mod_upload_progress that exists out there.  The code we used was /BAD/, but looked like this:
&lt;/p&gt;&lt;p&gt;
temp = e.split('=')
&lt;/p&gt;&lt;p&gt;
if temp[0] == &quot;filename&quot;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
remove begin/end double-quotes, without
&lt;/li&gt;&lt;li&gt;
  munging double-quotes in the filename
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
filename = temp[1].chomp().chop().reverse().chop().reverse()
&lt;/p&gt;&lt;p&gt;
puts &quot;filename: #{filename}&quot; if @debug
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
This preserved the filename &lt;strong&gt;perfectly&lt;/strong&gt; -- we also later massaged out the IE full-path to get just the basename.
&lt;/p&gt;&lt;p&gt;
So, while filename that has all those characters is unlikely, it's indeed a valid filename, and should be preserved.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While persnickety, there is a flaw in the setter for original filename, in Rails 2.1.0, in an apache/passenger setup.

The filename on the next line:
 &amp;;()&lt;&gt;|!{}[]'&quot;*?~\$`.ext
for example, comes out as
&amp;;()&lt;&gt;|!{}[]'
Note that the leading space, and everything trailing the single-quote (at the double-quote position) is truncated.

We recently migrated from Mongrel, where we had hand-rolled our own upload filename grabber, to Passenger, and wanted to use the nice mod_upload_progress that exists out there.  The code we used was /BAD/, but looked like this:

temp = e.split('=')
if temp[0] == &quot;filename&quot;
  # remove begin/end double-quotes, without
  #   munging double-quotes in the filename
  filename = temp[1].chomp().chop().reverse().chop().reverse()
  puts &quot;filename: #{filename}&quot; if @debug
end

This preserved the filename *perfectly* -- we also later massaged out the IE full-path to get just the basename.

So, while filename that has all those characters is unlikely, it's indeed a valid filename, and should be preserved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
While persnickety, there is a flaw in the setter for original filename, in Rails 2.1.0, in an apache/passenger setup.
&lt;/p&gt;&lt;p&gt;
The filename on the next line:
&lt;/p&gt;&lt;p&gt;
&amp;;()&amp;lt;&gt;|!{}[]'&quot;*?~\$`.ext
&lt;/p&gt;&lt;p&gt;
for example, comes out as
&lt;/p&gt;&lt;p&gt;
&amp;;()&amp;lt;&gt;|!{}[]'
&lt;/p&gt;&lt;p&gt;
Note that the leading space, and everything trailing the single-quote (at the double-quote position) is truncated.
&lt;/p&gt;&lt;p&gt;
We recently migrated from Mongrel, where we had hand-rolled our own upload filename grabber, to Passenger, and wanted to use the nice mod_upload_progress that exists out there.  The code we used was /BAD/, but looked like this:
&lt;/p&gt;&lt;p&gt;
temp = e.split('=')
&lt;/p&gt;&lt;p&gt;
if temp[0] == &quot;filename&quot;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
remove begin/end double-quotes, without
&lt;/li&gt;&lt;li&gt;
  munging double-quotes in the filename
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
filename = temp[1].chomp().chop().reverse().chop().reverse()
&lt;/p&gt;&lt;p&gt;
puts &quot;filename: #{filename}&quot; if @debug
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
This preserved the filename &lt;strong&gt;perfectly&lt;/strong&gt; -- we also later massaged out the IE full-path to get just the basename.
&lt;/p&gt;&lt;p&gt;
So, while filename that has all those characters is unlikely, it's indeed a valid filename, and should be preserved.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-30T23:48:32+01:00</created-at>
      <creator-id type="integer">27635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">731</number>
      <permalink>method-original_filename-in-uploadfile-module-is-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>filename upload</tag>
      <title>method original_filename in UploadFile module is broken</title>
      <updated-at type="datetime">2008-07-30T23:48:32+01:00</updated-at>
      <user-id type="integer">27635</user-id>
      <version type="integer">1</version>
      <user-name>Armando Di Cianno</user-name>
      <creator-name>Armando Di Cianno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/731</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've narrowed down the problem to line 596 in read_multipart in request.rb (same file as above method).
  head =~ /Content-Disposition:.* filename=(?:&quot;((?:\\.|[^\&quot;])*)&quot;|([^;]*))/ni

So, given
  str = &quot;Content-Disposition: filename=\&quot; &amp;;()&lt;&gt;|!{}[]'\&quot;*?~\\$`.mpg\&quot;&quot;
then
  str =~ /Content-Disposition:.* filename=(?:&quot;((?:\\.|[^\&quot;])*)&quot;|([^;]*))/ni
we get
&gt;&gt; $1
=&gt; &quot; &amp;;()&lt;&gt;|!{}[]'&quot;
&gt;&gt; $2
=&gt; nil</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've narrowed down the problem to line 596 in read_multipart in request.rb (same file as above method).
&lt;/p&gt;&lt;p&gt;
head =~ /Content-Disposition:.* filename=(?:&quot;((?:\\.|[^\&quot;])&lt;strong&gt;)&quot;|([^;]&lt;/strong&gt;))/ni
&lt;/p&gt;&lt;p&gt;
So, given
&lt;/p&gt;&lt;p&gt;
str = &quot;Content-Disposition: filename=\&quot; &amp;;()&amp;lt;&gt;|!{}[]'\&quot;*?~\\$`.mpg\&quot;&quot;
&lt;/p&gt;&lt;p&gt;
then
&lt;/p&gt;&lt;p&gt;
str =~ /Content-Disposition:.* filename=(?:&quot;((?:\\.|[^\&quot;])&lt;strong&gt;)&quot;|([^;]&lt;/strong&gt;))/ni
&lt;/p&gt;&lt;p&gt;
we get
&lt;/p&gt;&lt;p&gt;
&gt;&gt; $1
&lt;/p&gt;&lt;p&gt;
=&gt; &quot; &amp;;()&amp;lt;&gt;|!{}[]'&quot;
&lt;/p&gt;&lt;p&gt;
&gt;&gt; $2
&lt;/p&gt;&lt;p&gt;
=&gt; nil
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-31T21:04:03+01:00</created-at>
      <creator-id type="integer">27635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">731</number>
      <permalink>method-original_filename-in-uploadfile-module-is-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>filename upload</tag>
      <title>method original_filename in UploadFile module is broken</title>
      <updated-at type="datetime">2008-07-31T21:04:03+01:00</updated-at>
      <user-id type="integer">27635</user-id>
      <version type="integer">2</version>
      <user-name>Armando Di Cianno</user-name>
      <creator-name>Armando Di Cianno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/731</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Staling out, please let me know if its still an issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Staling out, please let me know if its still an issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T19:52:30+00:00</created-at>
      <creator-id type="integer">27635</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">731</number>
      <permalink>method-original_filename-in-uploadfile-module-is-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>filename upload</tag>
      <title>method original_filename in UploadFile module is broken</title>
      <updated-at type="datetime">2008-11-22T19:52:34+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Armando Di Cianno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/731</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
