commit 768f3f8211fb7a839ea84f446fcad8e6db76e04c
Author: Tim AÃŸmann <tassmann@jovoto.com>
Date:   Thu Oct 14 14:53:36 2010 +0200

    added option for distance_of_time_in_words to add an custom I18n scope.
    
    For example in german the wording depends on the context:
    3 days = 3 Tage
    3 days ago = vor 3 Tagen (with an n)
    
    this patch gives more flexibility for different contexts

diff --git a/actionpack/lib/action_view/helpers/date_helper.rb b/actionpack/lib/action_view/helpers/date_helper.rb
index 3aee4fb..015e367 100644
--- a/actionpack/lib/action_view/helpers/date_helper.rb
+++ b/actionpack/lib/action_view/helpers/date_helper.rb
@@ -64,12 +64,15 @@ module ActionView
       #   distance_of_time_in_words(Time.now, Time.now)           # => less than a minute
       #
       def distance_of_time_in_words(from_time, to_time = 0, include_seconds = false, options = {})
+        options = {
+          :scope => :'datetime.distance_in_words',
+        }.merge(options)
         from_time = from_time.to_time if from_time.respond_to?(:to_time)
         to_time = to_time.to_time if to_time.respond_to?(:to_time)
         distance_in_minutes = (((to_time - from_time).abs)/60).round
         distance_in_seconds = ((to_time - from_time).abs).round
 
-        I18n.with_options :locale => options[:locale], :scope => :'datetime.distance_in_words' do |locale|
+        I18n.with_options :locale => options[:locale], :scope => options[:scope] do |locale|
           case distance_in_minutes
             when 0..1
               return distance_in_minutes == 0 ?
@@ -115,8 +118,8 @@ module ActionView
       #   time_ago_in_words(Time.now)                 # => less than a minute
       #
       #   from_time = Time.now - 3.days - 14.minutes - 25.seconds     # => 3 days
-      def time_ago_in_words(from_time, include_seconds = false)
-        distance_of_time_in_words(from_time, Time.now, include_seconds)
+      def time_ago_in_words(from_time, include_seconds = false, options = {})
+        distance_of_time_in_words(from_time, Time.now, include_seconds, options)
       end
 
       alias_method :distance_of_time_in_words_to_now, :time_ago_in_words
diff --git a/actionpack/test/template/date_helper_i18n_test.rb b/actionpack/test/template/date_helper_i18n_test.rb
index d45215a..8fa3ee0 100644
--- a/actionpack/test/template/date_helper_i18n_test.rb
+++ b/actionpack/test/template/date_helper_i18n_test.rb
@@ -35,17 +35,25 @@ class DateHelperDistanceOfTimeInWordsI18nTests < Test::Unit::TestCase
       assert_distance_of_time_in_words_translates_key passed, expected
     end
   end
+  def test_distance_of_time_in_words_calls_i18n_with_custom_scope
+    { 
+      [30.days,             false] => [:'about_x_months',      1],
+      [60.days,             false] => [:'x_months',            2],
+    }.each do |passed, expected|
+      assert_distance_of_time_in_words_translates_key(passed, expected, {:scope => :'datetime.distance_in_words_ago'})
+    end
+  end
 
-  def assert_distance_of_time_in_words_translates_key(passed, expected)
+  def assert_distance_of_time_in_words_translates_key(passed, expected, options = {})
     diff, include_seconds = *passed
     key, count = *expected
     to = @from + diff
 
-    options = {:locale => 'en', :scope => :'datetime.distance_in_words'}
+    options = {:locale => 'en', :scope => :'datetime.distance_in_words'}.merge(options)
     options[:count] = count if count
 
     I18n.expects(:t).with(key, options)
-    distance_of_time_in_words(@from, to, include_seconds, :locale => 'en')
+    distance_of_time_in_words(@from, to, include_seconds, options)
   end
 
   def test_distance_of_time_pluralizations
