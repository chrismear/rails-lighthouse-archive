<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-22T21:15:41+00:00</created-at>
  <creator-id type="integer">38323</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1616</number>
  <permalink>dirty-checking-blocks-mysql-updates-with-trailing-spaces</permalink>
  <priority type="integer">957</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>212 dirty mysql update</tag>
  <title>Dirty checking blocks MySQL updates with trailing spaces</title>
  <updated-at type="datetime">2011-02-02T19:10:35+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Student</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1616</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>MySQL text fields ignore trailing spaces when checking equality.  As a result, an update which changes the trailing spaces will &quot;fail&quot; the dirty test and not actually be saved (although save will report success).  It is necessary to do record.send(update_without_dirty) to bypass this behavior.  (Is this SQL standard?  If so, it affects all engines.)

I consider this to be a major gotcha--it was hard to catch, and required source diving to get around.  Moreover, going so far inside the alias chain meant that quite a few things that I might have wanted to be handled for me were not.

Proposal:
1) If this behavior (&quot;string &quot; cannot be overwritten with &quot;string&quot; without calling a private method) is desirable, it really needs to be documented.
2) Dirty checking needs to be moved way up in the alias chain.  Probably to just before validate.  That way, if it needs to be bypassed, other callbacks are still used.

We're running 2.1.2 here, so I cannot easily determine if this still affects 2.2.</original-body>
  <latest-body>MySQL text fields ignore trailing spaces when checking equality.  As a result, an update which changes the trailing spaces will &quot;fail&quot; the dirty test and not actually be saved (although save will report success).  It is necessary to do record.send(update_without_dirty) to bypass this behavior.  (Is this SQL standard?  If so, it affects all engines.)

I consider this to be a major gotcha--it was hard to catch, and required source diving to get around.  Moreover, going so far inside the alias chain meant that quite a few things that I might have wanted to be handled for me were not.

Proposal:
1) If this behavior (&quot;string &quot; cannot be overwritten with &quot;string&quot; without calling a private method) is desirable, it really needs to be documented.
2) Dirty checking needs to be moved way up in the alias chain.  Probably to just before validate.  That way, if it needs to be bypassed, other callbacks are still used.

We're running 2.1.2 here, so I cannot easily determine if this still affects 2.2.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;MySQL text fields ignore trailing spaces when checking equality.
As a result, an update which changes the trailing spaces will
&quot;fail&quot; the dirty test and not actually be saved (although save will
report success). It is necessary to do
record.send(update_without_dirty) to bypass this behavior. (Is this
SQL standard? If so, it affects all engines.)&lt;/p&gt;
&lt;p&gt;I consider this to be a major gotcha--it was hard to catch, and
required source diving to get around. Moreover, going so far inside
the alias chain meant that quite a few things that I might have
wanted to be handled for me were not.&lt;/p&gt;
&lt;p&gt;Proposal: 1) If this behavior (&quot;string &quot; cannot be overwritten
with &quot;string&quot; without calling a private method) is desirable, it
really needs to be documented. 2) Dirty checking needs to be moved
way up in the alias chain. Probably to just before validate. That
way, if it needs to be bypassed, other callbacks are still
used.&lt;/p&gt;
&lt;p&gt;We're running 2.1.2 here, so I cannot easily determine if this
still affects 2.2.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>MySQL text fields ignore trailing spaces when checking equality.  As a result, an update which changes the trailing spaces will &quot;fail&quot; the dirty test and not actually be saved (although save will report success).  It is necessary to do record.send(update_without_dirty) to bypass this behavior.  (Is this SQL standard?  If so, it affects all engines.)

I consider this to be a major gotcha--it was hard to catch, and required source diving to get around.  Moreover, going so far inside the alias chain meant that quite a few things that I might have wanted to be handled for me were not.

Proposal:
1) If this behavior (&quot;string &quot; cannot be overwritten with &quot;string&quot; without calling a private method) is desirable, it really needs to be documented.
2) Dirty checking needs to be moved way up in the alias chain.  Probably to just before validate.  That way, if it needs to be bypassed, other callbacks are still used.

We're running 2.1.2 here, so I cannot easily determine if this still affects 2.2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;MySQL text fields ignore trailing spaces when checking equality.
As a result, an update which changes the trailing spaces will
&quot;fail&quot; the dirty test and not actually be saved (although save will
report success). It is necessary to do
record.send(update_without_dirty) to bypass this behavior. (Is this
SQL standard? If so, it affects all engines.)&lt;/p&gt;
&lt;p&gt;I consider this to be a major gotcha--it was hard to catch, and
required source diving to get around. Moreover, going so far inside
the alias chain meant that quite a few things that I might have
wanted to be handled for me were not.&lt;/p&gt;
&lt;p&gt;Proposal: 1) If this behavior (&quot;string &quot; cannot be overwritten
with &quot;string&quot; without calling a private method) is desirable, it
really needs to be documented. 2) Dirty checking needs to be moved
way up in the alias chain. Probably to just before validate. That
way, if it needs to be bypassed, other callbacks are still
used.&lt;/p&gt;
&lt;p&gt;We're running 2.1.2 here, so I cannot easily determine if this
still affects 2.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-22T21:15:41+00:00</created-at>
      <creator-id type="integer">38323</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1616</number>
      <permalink>dirty-checking-blocks-mysql-updates-with-trailing-spaces</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.2 dirty mysql update</tag>
      <title>Dirty checking blocks MySQL updates with trailing spaces</title>
      <updated-at type="datetime">2008-12-22T21:15:44+00:00</updated-at>
      <user-id type="integer">38323</user-id>
      <version type="integer">1</version>
      <user-name>Student</user-name>
      <creator-name>Student</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1616</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well you can turn off partial updates on a per class which sounds like it would help:
@@@ ruby
class Problematic &lt; AR::Base
  self.partial_updates = false
end
@@@

I'm not sure I understand though. While mysql may ignore trailing spaces certain column types, ruby doesn't - the only thing I can see this doing is Active Record needlessly updating a column which won't actually be storing anything different. Can you provide a more detailed example of what goes wrong where?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well you can turn off partial updates on a per class which
sounds like it would help:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Problematic &amp;lt; AR::Base
  self.partial_updates = false
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'm not sure I understand though. While mysql may ignore
trailing spaces certain column types, ruby doesn't - the only thing
I can see this doing is Active Record needlessly updating a column
which won't actually be storing anything different. Can you provide
a more detailed example of what goes wrong where?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-22T23:10:52+00:00</created-at>
      <creator-id type="integer">38323</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1616</number>
      <permalink>dirty-checking-blocks-mysql-updates-with-trailing-spaces</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.2 dirty mysql update</tag>
      <title>Dirty checking blocks MySQL updates with trailing spaces</title>
      <updated-at type="datetime">2008-12-22T23:10:57+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Student</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1616</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Will reopen when there's a patch.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Will reopen when there's a patch.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-24T16:13:31+00:00</created-at>
      <creator-id type="integer">38323</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1616</number>
      <permalink>dirty-checking-blocks-mysql-updates-with-trailing-spaces</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.2 dirty mysql update</tag>
      <title>Dirty checking blocks MySQL updates with trailing spaces</title>
      <updated-at type="datetime">2009-02-24T16:13:36+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Student</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1616</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:37+01:00</created-at>
      <creator-id type="integer">38323</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1616</number>
      <permalink>dirty-checking-blocks-mysql-updates-with-trailing-spaces</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.2 dirty mysql update</tag>
      <title>Dirty checking blocks MySQL updates with trailing spaces</title>
      <updated-at type="datetime">2010-05-04T18:48:37+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Student</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1616</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:03:49+00:00</created-at>
      <creator-id type="integer">38323</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1.2 dirty mysql update
:priority: 0
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1616</number>
      <permalink>dirty-checking-blocks-mysql-updates-with-trailing-spaces</permalink>
      <priority type="integer">957</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>212 dirty mysql update</tag>
      <title>Dirty checking blocks MySQL updates with trailing spaces</title>
      <updated-at type="datetime">2011-02-02T19:09:38+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Student</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1616</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:03:50+00:00</created-at>
      <creator-id type="integer">38323</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1616</number>
      <permalink>dirty-checking-blocks-mysql-updates-with-trailing-spaces</permalink>
      <priority type="integer">957</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>212 dirty mysql update</tag>
      <title>Dirty checking blocks MySQL updates with trailing spaces</title>
      <updated-at type="datetime">2011-02-02T19:10:35+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Student</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1616</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
