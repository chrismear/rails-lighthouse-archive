<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-25T20:17:49+00:00</created-at>
  <creator-id type="integer">126375</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6067</number>
  <permalink>erb-in-htmlplain-is-html-escaped</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag nil="true"></tag>
  <title>ERB in html/plain is HTML escaped</title>
  <updated-at type="datetime">2010-11-25T21:18:05+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6067</url>
  <priority-name>Low</priority-name>
  <original-body>With Rails 3, ERB blocks with unsafe strings are automagically HTML escaped. This is great when one wants to output HTML, but it just does not make sense for example in a text/plain email template, where there's no such escaping syntax (none at all, for the example of text/plain).

I think a different escaping procedure should be chosen based on the MIME type served and no automatic escaping should take place for text/plain.

My expectation would be:

my_mail.text.erb
    &lt;%= &quot;I &lt;3 Rails&quot; %&gt;
produces
    I &lt;3 Rails

my_mail.html.erb
    &lt;%= &quot;I &lt;3 Rails&quot; %&gt;
produces
    I &amp;lt;3 Rails

My point isn't only that I don't want to use raw() in text templates, but also that automatic escaping might be great for other MIME types, but then again it would not necessarily be HTML escaping.</original-body>
  <latest-body>With Rails 3, ERB blocks with unsafe strings are automagically HTML escaped. This is great when one wants to output HTML, but it just does not make sense for example in a text/plain email template, where there's no such escaping syntax (none at all, for the example of text/plain).

I think a different escaping procedure should be chosen based on the MIME type served and no automatic escaping should take place for text/plain.

My expectation would be:

my_mail.text.erb
    &lt;%= &quot;I &lt;3 Rails&quot; %&gt;
produces
    I &lt;3 Rails

my_mail.html.erb
    &lt;%= &quot;I &lt;3 Rails&quot; %&gt;
produces
    I &amp;lt;3 Rails

My point isn't only that I don't want to use raw() in text templates, but also that automatic escaping might be great for other MIME types, but then again it would not necessarily be HTML escaping.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With Rails 3, ERB blocks with unsafe strings are automagically
HTML escaped. This is great when one wants to output HTML, but it
just does not make sense for example in a text/plain email
template, where there's no such escaping syntax (none at all, for
the example of text/plain).&lt;/p&gt;
&lt;p&gt;I think a different escaping procedure should be chosen based on
the MIME type served and no automatic escaping should take place
for text/plain.&lt;/p&gt;
&lt;p&gt;My expectation would be:&lt;/p&gt;
&lt;p&gt;my_mail.text.erb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= &quot;I &amp;lt;3 Rails&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;produces&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I &amp;lt;3 Rails&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;my_mail.html.erb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= &quot;I &amp;lt;3 Rails&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;produces&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I &amp;amp;lt;3 Rails&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My point isn't only that I don't want to use raw() in text
templates, but also that automatic escaping might be great for
other MIME types, but then again it would not necessarily be HTML
escaping.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With Rails 3, ERB blocks with unsafe strings are automagically HTML escaped. This is great when one wants to output HTML, but it just does not make sense for example in a text/plain email template, where there's no such escaping syntax (none at all, for the example of text/plain).

I think a different escaping procedure should be chosen based on the MIME type served and no automatic escaping should take place for text/plain.

My expectation would be:

my_mail.text.erb
    &lt;%= &quot;I &lt;3 Rails&quot; %&gt;
produces
    I &lt;3 Rails

my_mail.html.erb
    &lt;%= &quot;I &lt;3 Rails&quot; %&gt;
produces
    I &amp;lt;3 Rails

My point isn't only that I don't want to use raw() in text templates, but also that automatic escaping might be great for other MIME types, but then again it would not necessarily be HTML escaping.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With Rails 3, ERB blocks with unsafe strings are automagically
HTML escaped. This is great when one wants to output HTML, but it
just does not make sense for example in a text/plain email
template, where there's no such escaping syntax (none at all, for
the example of text/plain).&lt;/p&gt;
&lt;p&gt;I think a different escaping procedure should be chosen based on
the MIME type served and no automatic escaping should take place
for text/plain.&lt;/p&gt;
&lt;p&gt;My expectation would be:&lt;/p&gt;
&lt;p&gt;my_mail.text.erb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= &quot;I &amp;lt;3 Rails&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;produces&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I &amp;lt;3 Rails&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;my_mail.html.erb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= &quot;I &amp;lt;3 Rails&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;produces&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I &amp;amp;lt;3 Rails&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My point isn't only that I don't want to use raw() in text
templates, but also that automatic escaping might be great for
other MIME types, but then again it would not necessarily be HTML
escaping.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-25T20:17:49+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6067</number>
      <permalink>erb-in-htmlplain-is-html-escaped</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ERB in html/plain is HTML escaped</title>
      <updated-at type="datetime">2010-11-25T20:17:53+00:00</updated-at>
      <user-id type="integer">126375</user-id>
      <version type="integer">1</version>
      <user-name>Jan</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6067</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&quot;html/plain&quot; in the title should have read &quot;text/plain&quot;. Sorry for the mistake.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&quot;html/plain&quot; in the title should have read &quot;text/plain&quot;. Sorry
for the mistake.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-25T20:19:56+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6067</number>
      <permalink>erb-in-htmlplain-is-html-escaped</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ERB in html/plain is HTML escaped</title>
      <updated-at type="datetime">2010-11-25T20:20:01+00:00</updated-at>
      <user-id type="integer">126375</user-id>
      <version type="integer">2</version>
      <user-name>Jan</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6067</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>#4858</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/4858&quot; title=
&quot;Ticket #4858&quot;&gt;#4858&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-25T21:18:03+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6067</number>
      <permalink>erb-in-htmlplain-is-html-escaped</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>ERB in html/plain is HTML escaped</title>
      <updated-at type="datetime">2010-11-25T21:18:05+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6067</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
