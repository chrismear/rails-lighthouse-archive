<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-07-31T05:25:51+01:00</created-at>
  <creator-id type="integer">10460</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2976</number>
  <permalink>has_one-through-preload-drops-conditions</permalink>
  <priority type="integer">129409</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>3.0 :include activerecord bug has_one patch preload through</tag>
  <title>has_one :through preload drops conditions</title>
  <updated-at type="datetime">2010-12-23T23:21:14+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">9</version>
  <user-name>Repository</user-name>
  <creator-name>Will Bryant</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
  <priority-name nil="true"></priority-name>
  <original-body>If I have:

@@@ ruby
class Customer
  has_one  :active_debit_balance_event, :through =&gt; :consumers, :source =&gt; :events, :class_name =&gt; 'Event',
    :conditions =&gt; {:events =&gt; {:active =&gt; true, :type =&gt; 'DebitBalanceEvent'}}
end
@@@

Then Customer.find(370).active_debit_balance_event correctly uses:

@@@ sql
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
@@@

However if I preload using Customer.find(370, :include =&gt; :active_debit_balance_event) then instead we see:

@@@ sql
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
@@@

Note that there are no conditions on the events query.  The resulting loaded has_one association actually returns a collection (looks like an array - ie. like a has_many).</original-body>
  <latest-body>If I have:

@@@ ruby
class Customer
  has_one  :active_debit_balance_event, :through =&gt; :consumers, :source =&gt; :events, :class_name =&gt; 'Event',
    :conditions =&gt; {:events =&gt; {:active =&gt; true, :type =&gt; 'DebitBalanceEvent'}}
end
@@@

Then Customer.find(370).active_debit_balance_event correctly uses:

@@@ sql
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
@@@

However if I preload using Customer.find(370, :include =&gt; :active_debit_balance_event) then instead we see:

@@@ sql
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
@@@

Note that there are no conditions on the events query.  The resulting loaded has_one association actually returns a collection (looks like an array - ie. like a has_many).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If I have:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Customer
  has_one  :active_debit_balance_event, :through =&amp;gt; :consumers, :source =&amp;gt; :events, :class_name =&amp;gt; 'Event',
    :conditions =&amp;gt; {:events =&amp;gt; {:active =&amp;gt; true, :type =&amp;gt; 'DebitBalanceEvent'}}
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then Customer.find(370).active_debit_balance_event correctly
uses:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However if I preload using Customer.find(370, :include =&amp;gt;
:active_debit_balance_event) then instead we see:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that there are no conditions on the events query. The
resulting loaded has_one association actually returns a collection
(looks like an array - ie. like a has_many).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If I have:

@@@ ruby
class Customer
  has_one  :active_debit_balance_event, :through =&gt; :consumers, :source =&gt; :events, :class_name =&gt; 'Event',
    :conditions =&gt; {:events =&gt; {:active =&gt; true, :type =&gt; 'DebitBalanceEvent'}}
end
@@@

Then Customer.find(370).active_debit_balance_event correctly uses:

@@@ sql
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
@@@

However if I preload using Customer.find(370, :include =&gt; :active_debit_balance_event) then instead we see:

@@@ sql
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
@@@

Note that there are no conditions on the events query.  The resulting loaded has_one association actually returns a collection (looks like an array - ie. like a has_many).</body>
      <body-html>&lt;div&gt;&lt;p&gt;If I have:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Customer
  has_one  :active_debit_balance_event, :through =&amp;gt; :consumers, :source =&amp;gt; :events, :class_name =&amp;gt; 'Event',
    :conditions =&amp;gt; {:events =&amp;gt; {:active =&amp;gt; true, :type =&amp;gt; 'DebitBalanceEvent'}}
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then Customer.find(370).active_debit_balance_event correctly
uses:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1)))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However if I preload using Customer.find(370, :include =&amp;gt;
:active_debit_balance_event) then instead we see:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that there are no conditions on the events query. The
resulting loaded has_one association actually returns a collection
(looks like an array - ie. like a has_many).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-31T05:25:51+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2009-07-31T05:25:58+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">1</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a test case showing the problem.

Frederick, it looks to me like in the case where there are conditions on the source table, we can't do the loading in two separate steps, we'd have to use a single query.  Would it be better to always use a single query for the join table and the source table parts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a test case showing the problem.&lt;/p&gt;
&lt;p&gt;Frederick, it looks to me like in the case where there are
conditions on the source table, we can't do the loading in two
separate steps, we'd have to use a single query. Would it be better
to always use a single query for the join table and the source
table parts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-13T02:05:53+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2009-08-13T02:05:59+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">2</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That's certainly true. Something that has been on my todo list for ages has been to rewrite preload of has many/one through to not do it in two steps. I don't think it's difficult, just a little fiddly generating the join statements if you want to cover all of the various cases (and I'd like to do it without too much code duplication between this and the old style include and the normal load of hmt)</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's certainly true. Something that has been on my todo list
for ages has been to rewrite preload of has many/one through to not
do it in two steps. I don't think it's difficult, just a little
fiddly generating the join statements if you want to cover all of
the various cases (and I'd like to do it without too much code
duplication between this and the old style include and the normal
load of hmt)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-13T11:08:37+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2009-08-13T11:08:39+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Frederick,

is this something we're working on for the 2-3-stable series, or do you plan to leave it till Rails 3.0?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Frederick,&lt;/p&gt;
&lt;p&gt;is this something we're working on for the 2-3-stable series, or
do you plan to leave it till Rails 3.0?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-02T22:50:11+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2010-01-02T22:50:12+00:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">4</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ideally I would have worked on this a while ago but haven't had much time to give to rails over the past 3 months. It looks like there has been some refactoring  of has many/one through so that generating the correct join clauses is less fiddly / error prone.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ideally I would have worked on this a while ago but haven't had
much time to give to rails over the past 3 months. It looks like
there has been some refactoring of has many/one through so that
generating the correct join clauses is less fiddly / error
prone.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-04T10:47:50+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2010-01-04T10:47:52+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">5</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just to confirm, this test is still failing in master, so broken for 3.0.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just to confirm, this test is still failing in master, so broken
for 3.0.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-26T05:23:38+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.3 :include activerecord bug has_one preload through
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2010-05-26T05:23:42+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">6</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here is an updated version of Will's test which applies cleanly to current master (the previous version did not). I have run it and can confirm that it passes, so this ticket can be closed. (I've edited the commit message to be more relevant to the current situation.)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is an updated version of Will's test which applies cleanly
to current master (the previous version did not). I have run it and
can confirm that it passes, so this ticket can be closed. (I've
edited the commit message to be more relevant to the current
situation.)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-19T15:18:09+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:tag: 3.0 :include activerecord bug has_one preload through
:assigned_user: 17477
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">129409</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 :include activerecord bug has_one patch preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2010-12-19T15:18:23+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">7</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [c6db37e69b1ff07f7ad535d4752d0e6eb2d15bff]) Don't allow a has_one association to go :through a collection association [#2976 state:resolved]
https://github.com/rails/rails/commit/c6db37e69b1ff07f7ad535d4752d0e6eb2d15bff</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/c6db37e69b1ff07f7ad535d4752d0e6eb2d15bff&quot;
title=
&quot;Changeset [c6db37e69b1ff07f7ad535d4752d0e6eb2d15bff]&quot;&gt;[c6db37e69b1ff07f7ad535d4752d0e6eb2d15bff]&lt;/a&gt;)
Don't allow a has_one association to go :through a collection
association [&lt;a href=&quot;/projects/8994/tickets/2976&quot; title=
&quot;Ticket #2976&quot;&gt;#2976&lt;/a&gt; state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/c6db37e69b1ff07f7ad535d4752d0e6eb2d15bff&quot;&gt;
https://github.com/rails/rails/commit/c6db37e69b1ff07f7ad535d4752d0...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-23T23:20:16+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">129409</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 :include activerecord bug has_one patch preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2010-12-23T23:21:14+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [b79823832e6cd30a9f14f97ffdf1642d4d63d4ea]) Verify that has_one :through preload respects the :conditions [#2976 state:resolved]
https://github.com/rails/rails/commit/b79823832e6cd30a9f14f97ffdf1642d4d63d4ea</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/b79823832e6cd30a9f14f97ffdf1642d4d63d4ea&quot;
title=
&quot;Changeset [b79823832e6cd30a9f14f97ffdf1642d4d63d4ea]&quot;&gt;[b79823832e6cd30a9f14f97ffdf1642d4d63d4ea]&lt;/a&gt;)
Verify that has_one :through preload respects the :conditions
[&lt;a href=&quot;/projects/8994/tickets/2976&quot; title=
&quot;Ticket #2976&quot;&gt;#2976&lt;/a&gt; state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/b79823832e6cd30a9f14f97ffdf1642d4d63d4ea&quot;&gt;
https://github.com/rails/rails/commit/b79823832e6cd30a9f14f97ffdf16...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-23T23:20:16+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2976</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">129409</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 :include activerecord bug has_one patch preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2010-12-23T23:20:59+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2976</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>daa098cceb9504df0d238c26e21669a7d3663b58</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-13T02:05:53+01:00</created-at>
      <filename>0001-added-a-test-showing-the-2976-has_one-through-prel.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">242713</id>
      <size type="integer">2626</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/242713/0001-added-a-test-showing-the-2976-has_one-through-prel.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>bb205d9b7ebc19b08bcdb2b1ed35830530a6a001</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-19T15:18:09+00:00</created-at>
      <filename>2976_verify_has_one_through_preload_uses_conditions.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">826325</id>
      <size type="integer">2712</size>
      <uploader-id type="integer">11330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/826325/2976_verify_has_one_through_preload_uses_conditions.diff</url>
    </attachment>
  </attachments>
</ticket>
