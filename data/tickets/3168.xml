<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-08T16:48:23+01:00</created-at>
  <creator-id type="integer">17330</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3168</number>
  <permalink>a-better-way-to-avoid-timing-attacks-on-the-message-verifier</permalink>
  <priority type="integer">139844</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>enhancement optimization portability security</tag>
  <title>A better way to avoid timing attacks on the message verifier</title>
  <updated-at type="datetime">2009-09-09T17:30:28+01:00</updated-at>
  <user-id type="integer">17330</user-id>
  <version type="integer">5</version>
  <user-name>Brian Mitchell</user-name>
  <creator-name>Brian Mitchell</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3168</url>
  <priority-name nil="true"></priority-name>
  <original-body>As seen on this commit: http://github.com/rails/rails/commit/aeab739bd56c0bff6d1b5685eee35e557484ab4c#comment_29144

It would be a better idea to avoid the timing drop on positive cases and instead provide a non-deterministic timing for the negative case only.

This patch simply provides an obvious refactor that implements this timer. It's simpler code and is more portable between ruby 1.8 and 1.9.</original-body>
  <latest-body>As seen on this commit: http://github.com/rails/rails/commit/aeab739bd56c0bff6d1b5685eee35e557484ab4c#comment_29144

It would be a better idea to avoid the timing drop on positive cases and instead provide a non-deterministic timing for the negative case only.

This patch simply provides an obvious refactor that implements this timer. It's simpler code and is more portable between ruby 1.8 and 1.9.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As seen on this commit: &lt;a href=
&quot;http://github.com/rails/rails/commit/aeab739bd56c0bff6d1b5685eee35e557484ab4c#comment_29144&quot;&gt;
http://github.com/rails/rails/commit/aeab739bd56c0bff6d1b5685eee35e...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It would be a better idea to avoid the timing drop on positive
cases and instead provide a non-deterministic timing for the
negative case only.&lt;/p&gt;
&lt;p&gt;This patch simply provides an obvious refactor that implements
this timer. It's simpler code and is more portable between ruby 1.8
and 1.9.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As seen on this commit: http://github.com/rails/rails/commit/aeab739bd56c0bff6d1b5685eee35e557484ab4c#comment_29144

It would be a better idea to avoid the timing drop on positive cases and instead provide a non-deterministic timing for the negative case only.

This patch simply provides an obvious refactor that implements this timer. It's simpler code and is more portable between ruby 1.8 and 1.9.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As seen on this commit: &lt;a href=
&quot;http://github.com/rails/rails/commit/aeab739bd56c0bff6d1b5685eee35e557484ab4c#comment_29144&quot;&gt;
http://github.com/rails/rails/commit/aeab739bd56c0bff6d1b5685eee35e...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It would be a better idea to avoid the timing drop on positive
cases and instead provide a non-deterministic timing for the
negative case only.&lt;/p&gt;
&lt;p&gt;This patch simply provides an obvious refactor that implements
this timer. It's simpler code and is more portable between ruby 1.8
and 1.9.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T16:48:23+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3168</number>
      <permalink>a-better-way-to-avoid-timing-attacks-on-the-message-verifier</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>enhancement optimization portability security</tag>
      <title>A better way to avoid timing attacks on the message verifier</title>
      <updated-at type="datetime">2009-09-08T16:48:26+01:00</updated-at>
      <user-id type="integer">17330</user-id>
      <version type="integer">1</version>
      <user-name>Brian Mitchell</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3168</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T18:51:19+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3168</number>
      <permalink>a-better-way-to-avoid-timing-attacks-on-the-message-verifier</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>enhancement optimization portability security</tag>
      <title>A better way to avoid timing attacks on the message verifier</title>
      <updated-at type="datetime">2009-09-08T18:51:22+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3168</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I disagree. Adding noise to the signal just means that any timing attacks would just need to take a larger sample size to get to the same result.

I'm not saying that it's probable that it would happen, but just that this change would add risk for minimal benefit.

Also, the 200 hard-coded in the sleep line is a code smell. The same value probably would not work well for systems running at different speeds.

If we really want to avoid timing attacks, we should eat up the slight performance hit.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I disagree. Adding noise to the signal just means that any
timing attacks would just need to take a larger sample size to get
to the same result.&lt;/p&gt;
&lt;p&gt;I'm not saying that it's probable that it would happen, but just
that this change would add risk for minimal benefit.&lt;/p&gt;
&lt;p&gt;Also, the 200 hard-coded in the sleep line is a code smell. The
same value probably would not work well for systems running at
different speeds.&lt;/p&gt;
&lt;p&gt;If we really want to avoid timing attacks, we should eat up the
slight performance hit.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-09T00:31:39+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3168</number>
      <permalink>a-better-way-to-avoid-timing-attacks-on-the-message-verifier</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>enhancement optimization portability security</tag>
      <title>A better way to avoid timing attacks on the message verifier</title>
      <updated-at type="datetime">2009-09-09T00:31:40+01:00</updated-at>
      <user-id type="integer">17499</user-id>
      <version type="integer">3</version>
      <user-name>Grant Hutchins</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3168</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The timing difference is trivial,  this approach has been vetted by security folks and is consistent with what 'they' recommend.  

Marking wontfix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The timing difference is trivial, this approach has been vetted
by security folks and is consistent with what 'they'
recommend.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Marking wontfix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-09T06:56:18+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3168</number>
      <permalink>a-better-way-to-avoid-timing-attacks-on-the-message-verifier</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>enhancement optimization portability security</tag>
      <title>A better way to avoid timing attacks on the message verifier</title>
      <updated-at type="datetime">2009-09-09T06:56:19+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3168</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Grant, Right except... It was measured to make it statistically astronomical to attack. If you actually look at the entropy a sleep alone gives you it would probably take trillions of samples to effectively break this assuming you even have a web stack that is also very consistent which, from my measurements is not true in a typical case. (Also consider that load balancing makes it somewhat harder to detect too since many machines will vary).

It was really a statement that this sort of fix is possibly changing something that wasn't broken... or made as a suggestion from someone who hadn't really measured very much.

As Michael just said, the timing differences are trivial. Ironic in a way. Also, 110&#181;s (1.8) to 140&#181;s (1.9) might be small but these do add up given how many places code like this exists. The string comparison on the other hand is fast enough that it won't even register in ruby's relatively high resolution timers on a benchmark.

Anyway, not a huge deal but I like 3 things about my patch: it's less code, it creates less garbage on 1.9 (100's of small strings just makes fragmentation problems worse since things aren't generational), and it does add entropy to the measurement that pretty much defeats practical timing attacks even if we were just running the comparison and not the rest of the web stack.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Grant, Right except... It was measured to make it statistically
astronomical to attack. If you actually look at the entropy a sleep
alone gives you it would probably take trillions of samples to
effectively break this assuming you even have a web stack that is
also very consistent which, from my measurements is not true in a
typical case. (Also consider that load balancing makes it somewhat
harder to detect too since many machines will vary).&lt;/p&gt;
&lt;p&gt;It was really a statement that this sort of fix is possibly
changing something that wasn't broken... or made as a suggestion
from someone who hadn't really measured very much.&lt;/p&gt;
&lt;p&gt;As Michael just said, the timing differences are trivial. Ironic
in a way. Also, 110&amp;micro;s (1.8) to 140&amp;micro;s (1.9) might be
small but these do add up given how many places code like this
exists. The string comparison on the other hand is fast enough that
it won't even register in ruby's relatively high resolution timers
on a benchmark.&lt;/p&gt;
&lt;p&gt;Anyway, not a huge deal but I like 3 things about my patch: it's
less code, it creates less garbage on 1.9 (100's of small strings
just makes fragmentation problems worse since things aren't
generational), and it does add entropy to the measurement that
pretty much defeats practical timing attacks even if we were just
running the comparison and not the rest of the web stack.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-09T17:30:26+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3168</number>
      <permalink>a-better-way-to-avoid-timing-attacks-on-the-message-verifier</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>enhancement optimization portability security</tag>
      <title>A better way to avoid timing attacks on the message verifier</title>
      <updated-at type="datetime">2009-09-09T17:30:28+01:00</updated-at>
      <user-id type="integer">17330</user-id>
      <version type="integer">5</version>
      <user-name>Brian Mitchell</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3168</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bdca7897c9f836347033fa5303898b7db79a36af</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-08T16:48:25+01:00</created-at>
      <filename>secure_timing.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">263498</id>
      <size type="integer">3238</size>
      <uploader-id type="integer">17330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/263498/secure_timing.diff</url>
    </attachment>
  </attachments>
</ticket>
