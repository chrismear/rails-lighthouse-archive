<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-06-30T18:12:47+01:00</created-at>
  <creator-id type="integer">27133</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2858</number>
  <permalink>mocha-release-096-heads-up</permalink>
  <priority type="integer">1951</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>Mocha release 0.9.6 heads-up</title>
  <updated-at type="datetime">2010-10-09T21:52:27+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">16</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>James Mead</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is just a heads up that ActiveSupport::TestCase might need some love after the latest Mocha release. Mocha no longer loads any test framework by default. Instead it applies the required monkey-patch to any supported [1] test framework that has been loaded *before* Mocha is loaded.

I've just had a bug report [2] from someone who was using the Test::Unit gem. I suggested they fixed it by explicitly loading the test-unit gem before requiring &quot;test_help&quot; in &quot;test/test_helper.rb&quot;

[1] Test::Unit (standard library or gem), MiniTest (standard library or gem).
[2] http://floehopper.lighthouseapp.com/projects/22289-mocha/tickets/50</original-body>
  <latest-body>This is just a heads up that ActiveSupport::TestCase might need some love after the latest Mocha release. Mocha no longer loads any test framework by default. Instead it applies the required monkey-patch to any supported [1] test framework that has been loaded *before* Mocha is loaded.

I've just had a bug report [2] from someone who was using the Test::Unit gem. I suggested they fixed it by explicitly loading the test-unit gem before requiring &quot;test_help&quot; in &quot;test/test_helper.rb&quot;

[1] Test::Unit (standard library or gem), MiniTest (standard library or gem).
[2] http://floehopper.lighthouseapp.com/projects/22289-mocha/tickets/50</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is just a heads up that ActiveSupport::TestCase might need
some love after the latest Mocha release. Mocha no longer loads any
test framework by default. Instead it applies the required
monkey-patch to any supported &lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; test framework that has been loaded
&lt;em&gt;before&lt;/em&gt; Mocha is loaded.&lt;/p&gt;
&lt;p&gt;I've just had a bug report &lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt; from someone who was using the
Test::Unit gem. I suggested they fixed it by explicitly loading the
test-unit gem before requiring &quot;test_help&quot; in
&quot;test/test_helper.rb&quot;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; Test::Unit (standard library or gem),
MiniTest (standard library or gem). &lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt; &lt;a href=&quot;http://floehopper.lighthouseapp.com/projects/22289-mocha/tickets/50&quot;&gt;
http://floehopper.lighthouseapp....&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is just a heads up that ActiveSupport::TestCase might need some love after the latest Mocha release. Mocha no longer loads any test framework by default. Instead it applies the required monkey-patch to any supported [1] test framework that has been loaded *before* Mocha is loaded.

I've just had a bug report [2] from someone who was using the Test::Unit gem. I suggested they fixed it by explicitly loading the test-unit gem before requiring &quot;test_help&quot; in &quot;test/test_helper.rb&quot;

[1] Test::Unit (standard library or gem), MiniTest (standard library or gem).
[2] http://floehopper.lighthouseapp.com/projects/22289-mocha/tickets/50</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is just a heads up that ActiveSupport::TestCase might need
some love after the latest Mocha release. Mocha no longer loads any
test framework by default. Instead it applies the required
monkey-patch to any supported &lt;a href=&quot;/projects/8994/changesets/1&quot;
title=&quot;Changeset [1]&quot;&gt;[1]&lt;/a&gt; test framework that has been loaded
&lt;em&gt;before&lt;/em&gt; Mocha is loaded.&lt;/p&gt;
&lt;p&gt;I've just had a bug report &lt;a href=&quot;/projects/8994/changesets/2&quot;
title=&quot;Changeset [2]&quot;&gt;[2]&lt;/a&gt; from someone who was using the
Test::Unit gem. I suggested they fixed it by explicitly loading the
test-unit gem before requiring &quot;test_help&quot; in
&quot;test/test_helper.rb&quot;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/1&quot; title=
&quot;Changeset [1]&quot;&gt;[1]&lt;/a&gt; Test::Unit (standard library or gem),
MiniTest (standard library or gem). &lt;a href=
&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset [2]&quot;&gt;[2]&lt;/a&gt;
&lt;a href=&quot;http://floehopper.lighthouseapp.com/projects/22289-mocha/tickets/50&quot;&gt;
http://floehopper.lighthouseapp.com/projects/22289-mocha/tickets/50&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-30T18:12:47+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-06-30T18:12:53+01:00</updated-at>
      <user-id type="integer">27133</user-id>
      <version type="integer">1</version>
      <user-name>James Mead</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [a8bd3c8a109fe88a4ce567e4272fd796e42b42da]) Move mocha down below initial T::U require and bump version to 0.9.7 [#2858 state:resolved]
http://github.com/rails/rails/commit/a8bd3c8a109fe88a4ce567e4272fd796e42b42da</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/a8bd3c8a109fe88a4ce567e4272fd796e42b42da&quot;
title=
&quot;Changeset [a8bd3c8a109fe88a4ce567e4272fd796e42b42da]&quot;&gt;[a8bd3c8a109fe88a4ce567e4272fd796e42b42da]&lt;/a&gt;)
Move mocha down below initial T::U require and bump version to
0.9.7 [&lt;a href=&quot;/projects/8994/tickets/2858&quot; title=
&quot;Ticket #2858&quot;&gt;#2858&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/a8bd3c8a109fe88a4ce567e4272fd796e42b42da&quot;&gt;
http://github.com/rails/rails/commit/a8bd3c8a109fe88a4ce567e4272fd7...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-01T20:12:09+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-01T20:12:12+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [7583a24ee0ea85d55a5e235c3082f1b67d3d7694]) Move mocha down below initial T::U require and bump version to 0.9.7 [#2858 state:resolved]
http://github.com/rails/rails/commit/7583a24ee0ea85d55a5e235c3082f1b67d3d7694</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/7583a24ee0ea85d55a5e235c3082f1b67d3d7694&quot;
title=
&quot;Changeset [7583a24ee0ea85d55a5e235c3082f1b67d3d7694]&quot;&gt;[7583a24ee0ea85d55a5e235c3082f1b67d3d7694]&lt;/a&gt;)
Move mocha down below initial T::U require and bump version to
0.9.7 [&lt;a href=&quot;/projects/8994/tickets/2858&quot; title=
&quot;Ticket #2858&quot;&gt;#2858&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/7583a24ee0ea85d55a5e235c3082f1b67d3d7694&quot;&gt;
http://github.com/rails/rails/commit/7583a24ee0ea85d55a5e235c3082f1...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-01T20:12:09+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-01T20:12:10+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Was this meant to be 0.9.6 not 0.9.7?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Was this meant to be 0.9.6 not 0.9.7?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T10:25:07+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T10:25:12+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think using 0.9.7 is fine - the difference between 0.9.6 and 0.9.7 was just an emergency fix for RSpec.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think using 0.9.7 is fine - the difference between 0.9.6 and
0.9.7 was just an emergency fix for RSpec.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T10:26:32+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T10:26:38+01:00</updated-at>
      <user-id type="integer">27133</user-id>
      <version type="integer">5</version>
      <user-name>James Mead</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Cool,  I guess this makes us 2.3.3 safe then</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cool, I guess this makes us 2.3.3 safe then&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T10:30:18+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T10:30:19+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>BTW - Thanks for the quick response. I haven't yet had any time to look at the ActiveSupport::TestCase code in detail, but won't your change mean that the monkey patch made by ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit#run will be overwritten by Mocha's monkey-patch. The obvious implication for this is that the testing callbacks will not work (but I haven't had a chance to try them).

As a more general observation, I hadn't realised how hacky the ActiveSupport::TestCase code has had to be to support Mocha. I know that this is mainly due to the lack of decent extensibility in Test::Unit, but I wonder if we can come up with a better solution. Perhaps we can get together with other extenders of Test::Unit and come up with a standardized modification to Test::Unit so that we can all safely modify Test::Unit without breaking each others stuff...?

As another general observation, am I right in thinking that the reason Mocha is loaded in ActiveSupport::TestCase is in order to support Rails tests and not so that people can use Mocha in their application tests? If this assumption is correct, I wonder if there is value in separating the TestCase class used for Rails own tests and the TestCase supplied to the punters for their application tests. The latter would not need to require Mocha.

Anyway, just a few thoughts.

Cheers, James.</body>
      <body-html>&lt;div&gt;&lt;p&gt;BTW - Thanks for the quick response. I haven't yet had any time
to look at the ActiveSupport::TestCase code in detail, but won't
your change mean that the monkey patch made by
ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit#run
will be overwritten by Mocha's monkey-patch. The obvious
implication for this is that the testing callbacks will not work
(but I haven't had a chance to try them).&lt;/p&gt;
&lt;p&gt;As a more general observation, I hadn't realised how hacky the
ActiveSupport::TestCase code has had to be to support Mocha. I know
that this is mainly due to the lack of decent extensibility in
Test::Unit, but I wonder if we can come up with a better solution.
Perhaps we can get together with other extenders of Test::Unit and
come up with a standardized modification to Test::Unit so that we
can all safely modify Test::Unit without breaking each others
stuff...?&lt;/p&gt;
&lt;p&gt;As another general observation, am I right in thinking that the
reason Mocha is loaded in ActiveSupport::TestCase is in order to
support Rails tests and not so that people can use Mocha in their
application tests? If this assumption is correct, I wonder if there
is value in separating the TestCase class used for Rails own tests
and the TestCase supplied to the punters for their application
tests. The latter would not need to require Mocha.&lt;/p&gt;
&lt;p&gt;Anyway, just a few thoughts.&lt;/p&gt;
&lt;p&gt;Cheers, James.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T10:33:45+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T10:33:49+01:00</updated-at>
      <user-id type="integer">27133</user-id>
      <version type="integer">7</version>
      <user-name>James Mead</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I guess what I meant to say in my first point was that I understand moving the loading of Mocha to a point after the loading of Test::Unit, but I'm not sure I understand moving it to a point after the loading of ActiveSupport::SetupAndTeardown, etc. But I may well be missing something.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I guess what I meant to say in my first point was that I
understand moving the loading of Mocha to a point after the loading
of Test::Unit, but I'm not sure I understand moving it to a point
after the loading of ActiveSupport::SetupAndTeardown, etc. But I
may well be missing something.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T10:37:50+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T10:37:54+01:00</updated-at>
      <user-id type="integer">27133</user-id>
      <version type="integer">8</version>
      <user-name>James Mead</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My brain's a bit fried by this head-cold so I'm not sure on yehuda's
changes either.  Will check them out properly in the morning, but odds
are this lighthouse email spam will make him try it out in the morning
;)

The double-monkey-patching is incredibly unfortunate but we both need
those callbacks and I'm not sure there's a nice way around this if we
want to support users using AS::TestCase and mocha in their own apps?

We could introduce our own subclasses for rails' own tests but users
will have the same issues won't they?</body>
      <body-html>&lt;div&gt;&lt;p&gt;My brain's a bit fried by this head-cold so I'm not sure on
yehuda's&lt;br&gt;
changes either. Will check them out properly in the morning, but
odds&lt;br&gt;
are this lighthouse email spam will make him try it out in the
morning&lt;br&gt;
;)&lt;/p&gt;
&lt;p&gt;The double-monkey-patching is incredibly unfortunate but we both
need&lt;br&gt;
those callbacks and I'm not sure there's a nice way around this if
we&lt;br&gt;
want to support users using AS::TestCase and mocha in their own
apps?&lt;/p&gt;
&lt;p&gt;We could introduce our own subclasses for rails' own tests but
users&lt;br&gt;
will have the same issues won't they?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T10:40:27+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T10:40:28+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">9</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I had posted #2240 a while back, requesting that mocha either not be auto-included in AS::TC, or that it least be made configurable (so you could turn it off). The reason is that RSpec derives it's ExampleGroup classes from AS::TC when working with rails, and RSpec offers users the option of using mocha, rr, flexmock or RSpec's own mocking framework. When they choose anything other than mocha, but they have mocha installed on their system, they end up getting more than one mock framework attaching itself to every example (test method). For the most part this does not cause any real problems, but I do recall seeing a couple of messages on the rspec-users mailing list where people were confused by unexpected references to mocha in backtraces.

In #2240 I seemed to have buy-in from Pratik and Jeremy, and the next step was for me to supply a patch, but I had trouble getting the Rails test suite to run successfully in the first place and gave up.

Having said all that, I'd be curious about your thoughts on this.

Thanks,
David</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had posted &lt;a href=&quot;/projects/8994/tickets/2240&quot; title=
&quot;Ticket #2240&quot;&gt;#2240&lt;/a&gt; a while back, requesting that mocha either
not be auto-included in AS::TC, or that it least be made
configurable (so you could turn it off). The reason is that RSpec
derives it's ExampleGroup classes from AS::TC when working with
rails, and RSpec offers users the option of using mocha, rr,
flexmock or RSpec's own mocking framework. When they choose
anything other than mocha, but they have mocha installed on their
system, they end up getting more than one mock framework attaching
itself to every example (test method). For the most part this does
not cause any real problems, but I do recall seeing a couple of
messages on the rspec-users mailing list where people were confused
by unexpected references to mocha in backtraces.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;/projects/8994/tickets/2240&quot; title=
&quot;Ticket #2240&quot;&gt;#2240&lt;/a&gt; I seemed to have buy-in from Pratik and
Jeremy, and the next step was for me to supply a patch, but I had
trouble getting the Rails test suite to run successfully in the
first place and gave up.&lt;/p&gt;
&lt;p&gt;Having said all that, I'd be curious about your thoughts on
this.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
David&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T14:18:00+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T14:18:04+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">10</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've just realised that I was mistaken in my concern about the load order. Although 'active_support/testing/setup_and_teardown' is now loaded before Mocha, ActiveSupport::Testing::SetupAndTeardown is not *included* into ActiveSupport::TestCase until after Mocha is loaded, so ActiveSupport::Testing::SetupAndTeardown#run will replace the Mocha one. This gives the desired end result with the testing callbacks working correctly.

So I now think this commit is fine. Sorry for the confusion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've just realised that I was mistaken in my concern about the
load order. Although 'active_support/testing/setup_and_teardown' is
now loaded before Mocha, ActiveSupport::Testing::SetupAndTeardown
is not &lt;em&gt;included&lt;/em&gt; into ActiveSupport::TestCase until after
Mocha is loaded, so ActiveSupport::Testing::SetupAndTeardown#run
will replace the Mocha one. This gives the desired end result with
the testing callbacks working correctly.&lt;/p&gt;
&lt;p&gt;So I now think this commit is fine. Sorry for the confusion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T15:28:44+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T15:28:45+01:00</updated-at>
      <user-id type="integer">27133</user-id>
      <version type="integer">11</version>
      <user-name>James Mead</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Michael :-

I agree the double monkey-patch is unfortunate. I was wondering whether it might be possible to agree on the use of a shared extension to Test::Unit which allows both Mocha and Rails (and any other relevant libs) to hook in their respective bits of code. This shared extension would basically be a single monkey-patch of the Test::Unit::TestCase#run method, providing the relevant hooks. Both Mocha and Rails would attempt this exact monkey-patch (ideally only applying it if it's not already applied), before then actually hooking in the relevant bits of code.

For me the killer blow of non-extensibility in Test::Unit is the call to &quot;__send__(@method_name)&quot; in the middle of TestCase#run. Interestingly in the latest Test::Unit gem, this line is extracted into a separate TestCase#run_test method, albeit a private method. But this makes it more amenable to extension. In the Test::Unit gem there is also a TestCase#handle_exception method which allows for registering multiple exception handlers. Again this could be a useful extension point.

The other difficulty with this whole idea is that the order in which the hooks get executed would probably be important and that might require the shared Test::Unit extension to have some kind of &quot;global&quot; knowledge about which hooks should be called before which other hooks.

Anyway, I'd be interested to hear what you think. I might try having a go at implementing it if I can find some spare time.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Michael :-&lt;/p&gt;
&lt;p&gt;I agree the double monkey-patch is unfortunate. I was wondering
whether it might be possible to agree on the use of a shared
extension to Test::Unit which allows both Mocha and Rails (and any
other relevant libs) to hook in their respective bits of code. This
shared extension would basically be a single monkey-patch of the
Test::Unit::TestCase#run method, providing the relevant hooks. Both
Mocha and Rails would attempt this exact monkey-patch (ideally only
applying it if it's not already applied), before then actually
hooking in the relevant bits of code.&lt;/p&gt;
&lt;p&gt;For me the killer blow of non-extensibility in Test::Unit is the
call to &quot;&lt;strong&gt;send&lt;/strong&gt;(@method_name)&quot; in the middle of
TestCase#run. Interestingly in the latest Test::Unit gem, this line
is extracted into a separate TestCase#run_test method, albeit a
private method. But this makes it more amenable to extension. In
the Test::Unit gem there is also a TestCase#handle_exception method
which allows for registering multiple exception handlers. Again
this could be a useful extension point.&lt;/p&gt;
&lt;p&gt;The other difficulty with this whole idea is that the order in
which the hooks get executed would probably be important and that
might require the shared Test::Unit extension to have some kind of
&quot;global&quot; knowledge about which hooks should be called before which
other hooks.&lt;/p&gt;
&lt;p&gt;Anyway, I'd be interested to hear what you think. I might try
having a go at implementing it if I can find some spare time.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T17:53:47+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-02T17:53:52+01:00</updated-at>
      <user-id type="integer">27133</user-id>
      <version type="integer">12</version>
      <user-name>James Mead</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Jeremy's the guy who did all the work the last time we had to deal
with test/unit, so he's probably the best one to comment on any
unified approach.

But yeah, fundamentally we both just want before and after hooks, so
if we could agree on a tiny change to add those hooks, both of us
could simply do something like conditionally add those hooks depending
on

Test::Unit::TestCase.respond_to?(:add_hook_or_something_whatever)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jeremy's the guy who did all the work the last time we had to
deal&lt;br&gt;
with test/unit, so he's probably the best one to comment on any&lt;br&gt;
unified approach.&lt;/p&gt;
&lt;p&gt;But yeah, fundamentally we both just want before and after
hooks, so&lt;br&gt;
if we could agree on a tiny change to add those hooks, both of
us&lt;br&gt;
could simply do something like conditionally add those hooks
depending&lt;br&gt;
on&lt;/p&gt;
&lt;p&gt;
Test::Unit::TestCase.respond_to?(:add_hook_or_something_whatever)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-05T04:56:37+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-07-05T04:56:39+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">13</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>From the mocha rubyforge page: Note that versions 0.9.6 &amp; 0.9.7 of the Rails plugin were broken. As of version 0.9.8, you need to explicitly load Mocha after the test framework e.g. by adding &quot;&lt;code&gt;require 'mocha'&lt;/code&gt;&quot; at the bottom of test/test_helper.rb.

They don't mention that if you use config.gem in config/environments/test.rb, you need to ensure that mocha is not loaded at that point, i.e.
@@@ ruby
config.gem &quot;mocha&quot;, :version =&gt; &quot;&gt;=0.9.8&quot;, :lib =&gt; false
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;From the mocha rubyforge page: Note that versions 0.9.6 &amp;amp;
0.9.7 of the Rails plugin were broken. As of version 0.9.8, you
need to explicitly load Mocha after the test framework e.g. by
adding &quot;&lt;code&gt;require 'mocha'&lt;/code&gt;&quot; at the bottom of
test/test_helper.rb.&lt;/p&gt;
&lt;p&gt;They don't mention that if you use config.gem in
config/environments/test.rb, you need to ensure that mocha is not
loaded at that point, i.e.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;config.gem &quot;mocha&quot;, :version =&amp;gt; &quot;&amp;gt;=0.9.8&quot;, :lib =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-24T11:26:21+00:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2009-11-24T11:26:26+00:00</updated-at>
      <user-id type="integer">32480</user-id>
      <version type="integer">14</version>
      <user-name>bshand</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:52:22+01:00</created-at>
      <creator-id type="integer">27133</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2858</number>
      <permalink>mocha-release-096-heads-up</permalink>
      <priority type="integer">1951</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Mocha release 0.9.6 heads-up</title>
      <updated-at type="datetime">2010-10-09T21:52:27+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">16</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>James Mead</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2858</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
