<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-19T23:15:46+01:00</created-at>
  <creator-id type="integer">25962</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1078</number>
  <permalink>using-include-assoc-and-join-assoc-leads-to-alias-issue</permalink>
  <priority type="integer">500</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord alias include join table tests</tag>
  <title>Using :include =&gt; :assoc AND :join =&gt; :assoc leads to alias issue</title>
  <updated-at type="datetime">2009-01-18T06:28:47+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">4</version>
  <user-name>Pratik</user-name>
  <creator-name>David Stevenson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1078</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>It would be nice if rails aliased tables when it added generated joins to associations.  This is very useful when chaining named_scopes, some of which :join a table and others :include a table.

Tests attached, but no fix yet.</original-body>
  <latest-body>It would be nice if rails aliased tables when it added generated joins to associations.  This is very useful when chaining named_scopes, some of which :join a table and others :include a table.

Tests attached, but no fix yet.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It would be nice if rails aliased tables when it added generated
joins to associations. This is very useful when chaining
named_scopes, some of which :join a table and others :include a
table.&lt;/p&gt;
&lt;p&gt;Tests attached, but no fix yet.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It would be nice if rails aliased tables when it added generated joins to associations.  This is very useful when chaining named_scopes, some of which :join a table and others :include a table.

Tests attached, but no fix yet.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It would be nice if rails aliased tables when it added generated
joins to associations. This is very useful when chaining
named_scopes, some of which :join a table and others :include a
table.&lt;/p&gt;
&lt;p&gt;Tests attached, but no fix yet.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-19T23:15:46+01:00</created-at>
      <creator-id type="integer">25962</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1078</number>
      <permalink>using-include-assoc-and-join-assoc-leads-to-alias-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord alias include join table tests</tag>
      <title>Using :include =&gt; :assoc AND :join =&gt; :assoc leads to alias issue</title>
      <updated-at type="datetime">2008-09-19T23:15:52+01:00</updated-at>
      <user-id type="integer">25962</user-id>
      <version type="integer">1</version>
      <user-name>David Stevenson</user-name>
      <creator-name>David Stevenson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1078</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've since disabled pre-2.1-single-query includes entirely and this solves the problem.  The only issue comes when you're using old-style-includes AND a join on the same table.  I think this could be better solved by the ability to disable single-query-includes entirely at a global level, for those who care about performance.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've since disabled pre-2.1-single-query includes entirely and
this solves the problem. The only issue comes when you're using
old-style-includes AND a join on the same table. I think this could
be better solved by the ability to disable single-query-includes
entirely at a global level, for those who care about
performance.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-07T02:42:01+01:00</created-at>
      <creator-id type="integer">25962</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1078</number>
      <permalink>using-include-assoc-and-join-assoc-leads-to-alias-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord alias include join table tests</tag>
      <title>Using :include =&gt; :assoc AND :join =&gt; :assoc leads to alias issue</title>
      <updated-at type="datetime">2008-10-07T02:42:03+01:00</updated-at>
      <user-id type="integer">25962</user-id>
      <version type="integer">2</version>
      <user-name>David Stevenson</user-name>
      <creator-name>David Stevenson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1078</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Opened this ticket instead: 

http://rails.lighthouseapp.com/projects/8994/tickets/1185-old-single-query-includes-should-be-globally-disableable</body>
      <body-html>&lt;div&gt;&lt;p&gt;Opened this ticket instead:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1185-old-single-query-includes-should-be-globally-disableable&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-09T16:51:40+01:00</created-at>
      <creator-id type="integer">25962</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1078</number>
      <permalink>using-include-assoc-and-join-assoc-leads-to-alias-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord alias include join table tests</tag>
      <title>Using :include =&gt; :assoc AND :join =&gt; :assoc leads to alias issue</title>
      <updated-at type="datetime">2008-10-09T16:51:45+01:00</updated-at>
      <user-id type="integer">25962</user-id>
      <version type="integer">3</version>
      <user-name>David Stevenson</user-name>
      <creator-name>David Stevenson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1078</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-18T06:28:45+00:00</created-at>
      <creator-id type="integer">25962</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1078</number>
      <permalink>using-include-assoc-and-join-assoc-leads-to-alias-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord alias include join table tests</tag>
      <title>Using :include =&gt; :assoc AND :join =&gt; :assoc leads to alias issue</title>
      <updated-at type="datetime">2009-01-18T06:28:47+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>David Stevenson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1078</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>77e15f44202f59b742df928453bbaa00827bae7e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-19T23:15:46+01:00</created-at>
      <filename>rails__test_for_join_include_same_table.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">47287</id>
      <size type="integer">1045</size>
      <uploader-id type="integer">25962</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/47287/rails__test_for_join_include_same_table.patch</url>
    </attachment>
  </attachments>
</ticket>
