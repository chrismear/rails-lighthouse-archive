From 51ac8d1c9ab06958f5b33e6d1bf9930b6146436d Mon Sep 17 00:00:00 2001
From: calavera <david.calavera@gmail.com>
Date: Wed, 20 May 2009 12:33:41 +0200
Subject: [PATCH] Configuration.load_paths include default controller path twice

---
 railties/lib/initializer.rb       |    6 ++----
 railties/test/initializer_test.rb |   29 +++++++++++++++++++++++++----
 2 files changed, 27 insertions(+), 8 deletions(-)

diff --git a/railties/lib/initializer.rb b/railties/lib/initializer.rb
index 4c6de48..037afaf 100644
--- a/railties/lib/initializer.rb
+++ b/railties/lib/initializer.rb
@@ -887,7 +887,7 @@ Run `rake gems:install` to install the missing gems.
 
     # Enable threaded mode. Allows concurrent requests to controller actions and
     # multiple database connections. Also disables automatic dependency loading
-    # after boot, and disables reloading code on every request, as these are 
+    # after boot, and disables reloading code on every request, as these are
     # fundamentally incompatible with thread safety.
     def threadsafe!
       self.preload_frameworks = true
@@ -976,9 +976,6 @@ Run `rake gems:install` to install the missing gems.
         # Add the old mock paths only if the directories exists
         paths.concat(Dir["#{root_path}/test/mocks/#{environment}"]) if File.exists?("#{root_path}/test/mocks/#{environment}")
 
-        # Add the app's controller directory
-        paths.concat(Dir["#{root_path}/app/controllers/"])
-
         # Followed by the standard includes.
         paths.concat %w(
           app
@@ -1130,3 +1127,4 @@ class Rails::OrderedOptions < Array #:nodoc:
       return false
     end
 end
+
diff --git a/railties/test/initializer_test.rb b/railties/test/initializer_test.rb
index d77a045..4a130ab 100644
--- a/railties/test/initializer_test.rb
+++ b/railties/test/initializer_test.rb
@@ -309,7 +309,7 @@ class InitializerSetupI18nTests < Test::Unit::TestCase
     config.i18n.load_path << "my/other/locale.yml"
 
     Rails::Initializer.run(:initialize_i18n, config)
-    assert_equal [ 
+    assert_equal [
      File.expand_path(File.dirname(__FILE__) + "/../../activesupport/lib/active_support/locale/en.yml"),
      File.expand_path(File.dirname(__FILE__) + "/../../actionpack/lib/action_view/locale/en.yml"),
      File.expand_path(File.dirname(__FILE__) + "/../../activerecord/lib/active_record/locale/en.yml"),
@@ -369,11 +369,11 @@ class InitializerViewPathsTest  < Test::Unit::TestCase
   def setup
     @config = Rails::Configuration.new
     @config.frameworks = [:action_view, :action_controller, :action_mailer]
-    
+
     ActionController::Base.stubs(:view_paths).returns(stub)
     ActionMailer::Base.stubs(:view_paths).returns(stub)
   end
-  
+
   def test_load_view_paths_doesnt_perform_anything_when_action_view_not_in_frameworks
     @config.frameworks -= [:action_view]
     ActionController::Base.view_paths.expects(:load!).never
@@ -390,4 +390,25 @@ class RailsRootTest < Test::Unit::TestCase
   def test_rails_dot_root_should_be_a_pathname
     assert_equal File.join(RAILS_ROOT, 'app', 'controllers'), Rails.root.join('app', 'controllers').to_s
   end
-end
\ No newline at end of file
+end
+
+class RailsLoadPaths < Test::Unit::TestCase
+  def test_ensure_default_paths_avoid_duplicates
+    @config = Rails::Configuration.new
+    Dir.stubs("[]").with("#{@config.root_path}/app/controllers/").returns(["#{@config.root_path}/app/controllers/"])
+    Dir.stubs("[]").with("./test/../lib/../builtin/*/").returns(["./test/../lib/../builtin/*/"])
+    %w(
+          app
+          app/metal
+          app/models
+          app/controllers
+          app/helpers
+          app/services
+          lib
+          vendor
+        ).each { |dir| File.stubs("directory?").with("#{@config.root_path}/#{dir}").returns(true) }
+
+    assert_equal false, @config.send(:default_load_paths).include?("#{@config.root_path}/app/controllers/")
+  end
+end
+
-- 
1.6.0.4

