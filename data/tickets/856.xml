<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-18T23:49:47+01:00</created-at>
  <creator-id type="integer">18477</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">856</number>
  <permalink>plugins-rake-tasks-loaded-regardless-of-config-plugins</permalink>
  <priority type="integer">313</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>dependencies railties</tag>
  <title>Plugins' Rake tasks loaded regardless of config.plugins</title>
  <updated-at type="datetime">2008-11-22T18:59:22+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Scott Willson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/856</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>All the Rake tasks in vendor/plugins are loaded, even if there's an explicit list in config.plugins in environment.rb. I expected that if a plugin isn't included it config.plugins, its Rake tasks aren't loaded, either.

I ran into this when I deployed to a staging server and ran db:migrate. The project includes a few plugins (rails_rcov, html_test) that depend on gems __not__ installed on the server. I don't really want to install rcov, etc. on my staging and production servers.

Ideally, rails/lib/tasks/rails.rb would honor Configuration#plugins instead of just globbing vendor/plugins/*/**/tasks/**/*.rake.

Can't say that I fully understand Rails configuration and initialization, but it looks as if we would need to basically bootstrap Rails to get a proper list of plugins, and _then_ load the Rake tasks. Seems like over-kill given that many Rake tasks don't need Rails bootstrapped.

For anyone interested, I worked around this by adding a Capistrano deploy:after_update hook that deletes the unwanted plugins. Brutal, but it works. I considered doing something trickier with SVN, but I prefer that developers can just 'svn co' and have a running application.</original-body>
  <latest-body>All the Rake tasks in vendor/plugins are loaded, even if there's an explicit list in config.plugins in environment.rb. I expected that if a plugin isn't included it config.plugins, its Rake tasks aren't loaded, either.

I ran into this when I deployed to a staging server and ran db:migrate. The project includes a few plugins (rails_rcov, html_test) that depend on gems __not__ installed on the server. I don't really want to install rcov, etc. on my staging and production servers.

Ideally, rails/lib/tasks/rails.rb would honor Configuration#plugins instead of just globbing vendor/plugins/*/**/tasks/**/*.rake.

Can't say that I fully understand Rails configuration and initialization, but it looks as if we would need to basically bootstrap Rails to get a proper list of plugins, and _then_ load the Rake tasks. Seems like over-kill given that many Rake tasks don't need Rails bootstrapped.

For anyone interested, I worked around this by adding a Capistrano deploy:after_update hook that deletes the unwanted plugins. Brutal, but it works. I considered doing something trickier with SVN, but I prefer that developers can just 'svn co' and have a running application.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;All the Rake tasks in vendor/plugins are loaded, even if there's an explicit list in config.plugins in environment.rb. I expected that if a plugin isn't included it config.plugins, its Rake tasks aren't loaded, either.&lt;/p&gt;

&lt;p&gt;I ran into this when I deployed to a staging server and ran db:migrate. The project includes a few plugins (rails_rcov, html_test) that depend on gems &lt;strong&gt;not&lt;/strong&gt; installed on the server. I don't really want to install rcov, etc. on my staging and production servers.&lt;/p&gt;

&lt;p&gt;Ideally, rails/lib/tasks/rails.rb would honor Configuration#plugins instead of just globbing vendor/plugins/&lt;em&gt;/&lt;strong&gt;/tasks/&lt;/strong&gt;/&lt;/em&gt;.rake.&lt;/p&gt;

&lt;p&gt;Can't say that I fully understand Rails configuration and initialization, but it looks as if we would need to basically bootstrap Rails to get a proper list of plugins, and &lt;em&gt;then&lt;/em&gt; load the Rake tasks. Seems like over-kill given that many Rake tasks don't need Rails bootstrapped.&lt;/p&gt;

&lt;p&gt;For anyone interested, I worked around this by adding a Capistrano deploy:after_update hook that deletes the unwanted plugins. Brutal, but it works. I considered doing something trickier with SVN, but I prefer that developers can just 'svn co' and have a running application.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>All the Rake tasks in vendor/plugins are loaded, even if there's an explicit list in config.plugins in environment.rb. I expected that if a plugin isn't included it config.plugins, its Rake tasks aren't loaded, either.

I ran into this when I deployed to a staging server and ran db:migrate. The project includes a few plugins (rails_rcov, html_test) that depend on gems __not__ installed on the server. I don't really want to install rcov, etc. on my staging and production servers.

Ideally, rails/lib/tasks/rails.rb would honor Configuration#plugins instead of just globbing vendor/plugins/*/**/tasks/**/*.rake.

Can't say that I fully understand Rails configuration and initialization, but it looks as if we would need to basically bootstrap Rails to get a proper list of plugins, and _then_ load the Rake tasks. Seems like over-kill given that many Rake tasks don't need Rails bootstrapped.

For anyone interested, I worked around this by adding a Capistrano deploy:after_update hook that deletes the unwanted plugins. Brutal, but it works. I considered doing something trickier with SVN, but I prefer that developers can just 'svn co' and have a running application.</body>
      <body-html>&lt;div&gt;&lt;p&gt;All the Rake tasks in vendor/plugins are loaded, even if there's an explicit list in config.plugins in environment.rb. I expected that if a plugin isn't included it config.plugins, its Rake tasks aren't loaded, either.&lt;/p&gt;

&lt;p&gt;I ran into this when I deployed to a staging server and ran db:migrate. The project includes a few plugins (rails_rcov, html_test) that depend on gems &lt;strong&gt;not&lt;/strong&gt; installed on the server. I don't really want to install rcov, etc. on my staging and production servers.&lt;/p&gt;

&lt;p&gt;Ideally, rails/lib/tasks/rails.rb would honor Configuration#plugins instead of just globbing vendor/plugins/&lt;em&gt;/&lt;strong&gt;/tasks/&lt;/strong&gt;/&lt;/em&gt;.rake.&lt;/p&gt;

&lt;p&gt;Can't say that I fully understand Rails configuration and initialization, but it looks as if we would need to basically bootstrap Rails to get a proper list of plugins, and &lt;em&gt;then&lt;/em&gt; load the Rake tasks. Seems like over-kill given that many Rake tasks don't need Rails bootstrapped.&lt;/p&gt;

&lt;p&gt;For anyone interested, I worked around this by adding a Capistrano deploy:after_update hook that deletes the unwanted plugins. Brutal, but it works. I considered doing something trickier with SVN, but I prefer that developers can just 'svn co' and have a running application.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-18T23:49:47+01:00</created-at>
      <creator-id type="integer">18477</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">856</number>
      <permalink>plugins-rake-tasks-loaded-regardless-of-config-plugins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>dependencies railties</tag>
      <title>Plugins' Rake tasks loaded regardless of config.plugins</title>
      <updated-at type="datetime">2008-08-18T23:49:47+01:00</updated-at>
      <user-id type="integer">18477</user-id>
      <version type="integer">1</version>
      <user-name>Scott Willson</user-name>
      <creator-name>Scott Willson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/856</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Seems like something worth committing it you can put together a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems like something worth committing it you can put together a
patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T18:59:19+00:00</created-at>
      <creator-id type="integer">18477</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">856</number>
      <permalink>plugins-rake-tasks-loaded-regardless-of-config-plugins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>dependencies railties</tag>
      <title>Plugins' Rake tasks loaded regardless of config.plugins</title>
      <updated-at type="datetime">2008-11-22T18:59:22+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Scott Willson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/856</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
