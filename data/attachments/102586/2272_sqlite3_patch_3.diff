From 4fa18821b0490e0b6a75258d1dfd90fb464adf52 Mon Sep 17 00:00:00 2001
From: Brian Hogan <brianhogan@napcs.com>
Date: Thu, 19 Mar 2009 21:24:18 -0500
Subject: [PATCH] Fixed #2272 - sqlite3 renaming tables now quotes table names, allowing renaming of tables which happen to be reserved words like 'references'

---
 .../connection_adapters/sqlite_adapter.rb          |    2 +-
 activerecord/test/cases/migration_test.rb          |   30 ++++++++++++++++++++
 2 files changed, 31 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb b/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb
index afd6472..fc71456 100644
--- a/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb
+++ b/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb
@@ -234,7 +234,7 @@ module ActiveRecord
       end
 
       def rename_table(name, new_name)
-        execute "ALTER TABLE #{name} RENAME TO #{new_name}"
+        execute "ALTER TABLE #{quote_table_name(name)} RENAME TO #{quote_table_name(new_name)}"
       end
 
       # See: http://www.sqlite.org/lang_altertable.html
diff --git a/activerecord/test/cases/migration_test.rb b/activerecord/test/cases/migration_test.rb
index 16861f2..19e3b19 100644
--- a/activerecord/test/cases/migration_test.rb
+++ b/activerecord/test/cases/migration_test.rb
@@ -635,6 +635,36 @@ if ActiveRecord::Base.connection.supports_migrations?
       end
     end
 
+    if current_adapter?(:SQLiteAdapter)
+      def test_rename_table_for_sqlite_should_work_with_reserved_words
+        
+        begin
+          
+          assert_nothing_raised do
+            ActiveRecord::Base.connection.rename_table :references, :old_references
+            ActiveRecord::Base.connection.create_table :octopuses do |t|
+              t.column :url, :string
+            end
+          end
+          
+          assert_nothing_raised do  
+            ActiveRecord::Base.connection.rename_table :octopuses, :references
+          end
+          
+          # Using explicit id in insert for compatibility across all databases
+          con = ActiveRecord::Base.connection
+          assert_nothing_raised { con.execute "INSERT INTO 'references' (#{con.quote_column_name('id')}, #{con.quote_column_name('url')}) VALUES (1, 'http://www.foreverflying.com/octopus-black7.jpg')" }
+          assert_equal 'http://www.foreverflying.com/octopus-black7.jpg', ActiveRecord::Base.connection.select_value("SELECT url FROM 'references' WHERE id=1")
+
+        ensure
+          ActiveRecord::Base.connection.drop_table :references
+          ActiveRecord::Base.connection.rename_table :old_references, :references
+        end
+      end
+    
+    end
+
+
     def test_rename_table
       begin
         ActiveRecord::Base.connection.create_table :octopuses do |t|
-- 
1.5.4.5

