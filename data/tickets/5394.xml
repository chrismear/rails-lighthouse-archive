<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-17T15:16:09+01:00</created-at>
  <creator-id type="integer">43478</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5394</number>
  <permalink>activerecorddirty-problems-with-decimal</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>ActiveRecord:&quot;Dirty problems with decimal</title>
  <updated-at type="datetime">2011-02-02T18:52:58+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Steve Alex</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5394</url>
  <priority-name nil="true"></priority-name>
  <original-body>I tried to implement a dirty filter in a model in rails3-rc2, ruby 1.9.2 to call a procedure if certain attributes were changed.

Even though I could not find documentation in edgeapi (other then ActiveModel::dirty) that was close to ActiveRecord:dirty rails2 documentation - I figured that the &quot;changed?&quot; method was there.

my after_save filter

    def updateMax
      computeMax(self.assessment.id) if is_dirty?
    end

    def is_dirty?
      dirty =  (self.score_method_changed? or 
        self.weight_changed? or 
        self.critical_changed? or 
        self.minimum_value.changed?)
     end

The weight attribute is a decimal number (psql).  If I update another field besides score_method(string), weight(decimal), critical(boolean), or minimum_value(integer) I get an error:



    undefined method `changed?' for 2:Fixnum
    Rails.root: /Users/salex/work/aidtdb3r3

    Application Trace | Framework Trace | Full Trace
    app/models/question.rb:37:in `is_dirty?'
    app/models/question.rb:10:in `updateMax'
    app/controllers/questions_controller.rb:65:in `block in update'
    app/controllers/questions_controller.rb:64:in `update'

I also get the error if I update minimum_value without updating weight. But updating score_method or critical without updating weight works.

I got around it by getting the self.changed array and iterating thru the array to see if one of my fields was in the array.</original-body>
  <latest-body>I tried to implement a dirty filter in a model in rails3-rc2, ruby 1.9.2 to call a procedure if certain attributes were changed.

Even though I could not find documentation in edgeapi (other then ActiveModel::dirty) that was close to ActiveRecord:dirty rails2 documentation - I figured that the &quot;changed?&quot; method was there.

my after_save filter

    def updateMax
      computeMax(self.assessment.id) if is_dirty?
    end

    def is_dirty?
      dirty =  (self.score_method_changed? or 
        self.weight_changed? or 
        self.critical_changed? or 
        self.minimum_value.changed?)
     end

The weight attribute is a decimal number (psql).  If I update another field besides score_method(string), weight(decimal), critical(boolean), or minimum_value(integer) I get an error:



    undefined method `changed?' for 2:Fixnum
    Rails.root: /Users/salex/work/aidtdb3r3

    Application Trace | Framework Trace | Full Trace
    app/models/question.rb:37:in `is_dirty?'
    app/models/question.rb:10:in `updateMax'
    app/controllers/questions_controller.rb:65:in `block in update'
    app/controllers/questions_controller.rb:64:in `update'

I also get the error if I update minimum_value without updating weight. But updating score_method or critical without updating weight works.

I got around it by getting the self.changed array and iterating thru the array to see if one of my fields was in the array.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I tried to implement a dirty filter in a model in rails3-rc2,
ruby 1.9.2 to call a procedure if certain attributes were
changed.&lt;/p&gt;
&lt;p&gt;Even though I could not find documentation in edgeapi (other
then ActiveModel::dirty) that was close to ActiveRecord:dirty
rails2 documentation - I figured that the &quot;changed?&quot; method was
there.&lt;/p&gt;
&lt;p&gt;my after_save filter&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def updateMax
  computeMax(self.assessment.id) if is_dirty?
end

def is_dirty?
  dirty =  (self.score_method_changed? or 
    self.weight_changed? or 
    self.critical_changed? or 
    self.minimum_value.changed?)
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The weight attribute is a decimal number (psql). If I update
another field besides score_method(string), weight(decimal),
critical(boolean), or minimum_value(integer) I get an error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `changed?' for 2:Fixnum
Rails.root: /Users/salex/work/aidtdb3r3

Application Trace | Framework Trace | Full Trace
app/models/question.rb:37:in `is_dirty?'
app/models/question.rb:10:in `updateMax'
app/controllers/questions_controller.rb:65:in `block in update'
app/controllers/questions_controller.rb:64:in `update'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I also get the error if I update minimum_value without updating
weight. But updating score_method or critical without updating
weight works.&lt;/p&gt;
&lt;p&gt;I got around it by getting the self.changed array and iterating
thru the array to see if one of my fields was in the array.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I tried to implement a dirty filter in a model in rails3-rc2, ruby 1.9.2 to call a procedure if certain attributes were changed.

Even though I could not find documentation in edgeapi (other then ActiveModel::dirty) that was close to ActiveRecord:dirty rails2 documentation - I figured that the &quot;changed?&quot; method was there.

my after_save filter

    def updateMax
      computeMax(self.assessment.id) if is_dirty?
    end

    def is_dirty?
      dirty =  (self.score_method_changed? or 
        self.weight_changed? or 
        self.critical_changed? or 
        self.minimum_value.changed?)
     end

The weight attribute is a decimal number (psql).  If I update another field besides score_method(string), weight(decimal), critical(boolean), or minimum_value(integer) I get an error:



    undefined method `changed?' for 2:Fixnum
    Rails.root: /Users/salex/work/aidtdb3r3

    Application Trace | Framework Trace | Full Trace
    app/models/question.rb:37:in `is_dirty?'
    app/models/question.rb:10:in `updateMax'
    app/controllers/questions_controller.rb:65:in `block in update'
    app/controllers/questions_controller.rb:64:in `update'

I also get the error if I update minimum_value without updating weight. But updating score_method or critical without updating weight works.

I got around it by getting the self.changed array and iterating thru the array to see if one of my fields was in the array.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I tried to implement a dirty filter in a model in rails3-rc2,
ruby 1.9.2 to call a procedure if certain attributes were
changed.&lt;/p&gt;
&lt;p&gt;Even though I could not find documentation in edgeapi (other
then ActiveModel::dirty) that was close to ActiveRecord:dirty
rails2 documentation - I figured that the &quot;changed?&quot; method was
there.&lt;/p&gt;
&lt;p&gt;my after_save filter&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def updateMax
  computeMax(self.assessment.id) if is_dirty?
end

def is_dirty?
  dirty =  (self.score_method_changed? or 
    self.weight_changed? or 
    self.critical_changed? or 
    self.minimum_value.changed?)
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The weight attribute is a decimal number (psql). If I update
another field besides score_method(string), weight(decimal),
critical(boolean), or minimum_value(integer) I get an error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `changed?' for 2:Fixnum
Rails.root: /Users/salex/work/aidtdb3r3

Application Trace | Framework Trace | Full Trace
app/models/question.rb:37:in `is_dirty?'
app/models/question.rb:10:in `updateMax'
app/controllers/questions_controller.rb:65:in `block in update'
app/controllers/questions_controller.rb:64:in `update'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I also get the error if I update minimum_value without updating
weight. But updating score_method or critical without updating
weight works.&lt;/p&gt;
&lt;p&gt;I got around it by getting the self.changed array and iterating
thru the array to see if one of my fields was in the array.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-17T15:16:09+01:00</created-at>
      <creator-id type="integer">43478</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5394</number>
      <permalink>activerecorddirty-problems-with-decimal</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord:&quot;Dirty problems with decimal</title>
      <updated-at type="datetime">2010-08-17T15:16:10+01:00</updated-at>
      <user-id type="integer">43478</user-id>
      <version type="integer">1</version>
      <user-name>Steve Alex</user-name>
      <creator-name>Steve Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5394</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:00:12+00:00</created-at>
      <creator-id type="integer">43478</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5394</number>
      <permalink>activerecorddirty-problems-with-decimal</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>ActiveRecord:&quot;Dirty problems with decimal</title>
      <updated-at type="datetime">2011-02-02T18:52:55+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Steve Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5394</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:00:14+00:00</created-at>
      <creator-id type="integer">43478</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5394</number>
      <permalink>activerecorddirty-problems-with-decimal</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>ActiveRecord:&quot;Dirty problems with decimal</title>
      <updated-at type="datetime">2011-02-02T18:52:58+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Steve Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5394</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
