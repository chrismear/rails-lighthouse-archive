<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-04-22T06:48:04+01:00</created-at>
  <creator-id type="integer">52026</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5736</number>
  <permalink>connections-not-released-in-rails-3</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>connections not released in rails 3</title>
  <updated-at type="datetime">2011-04-22T06:48:04+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">8</version>
  <user-name>Repository</user-name>
  <creator-name>luis.lopez (at branelabs)</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
  <priority-name nil="true"></priority-name>
  <original-body>When a activerecord asks for a connection in a thread, this connections is not released after thread end. So, the connection pool can be exhausted. Definining a pool of 5 for the DB connection (mysql), this code fails after the 5th try:

@@@ ruby
puts &quot;ruby vesion: #{RUBY_VERSION} rails version: #{Rails.version}&quot;
1.upto(10) do |i|
	 Thread.new() do
		puts &quot;iteration #{i}&quot;
		User.first
		puts &quot;iteration #{i} after query&quot;
		# ActiveRecord::Base.connection_pool.release_connection
	end.join
	# ActiveRecord::Base.connection_pool.clear_stale_cached_connections!() 
end
@@@

the result is:
@@@ bash
$rails runner /tmp/test2.rb
ruby vesion: 1.9.2 rails version: 3.0.0
iteration 1
iteration 1 after query
iteration 2
iteration 2 after query
iteration 3
iteration 3 after query
iteration 4
iteration 4 after query
iteration 5
iteration 5 after query
iteration 6
/tmp/test2.rb:4:in `join': deadlock detected (fatal)
@@@

Uncommenting one of the commented lines that manually forces to release connections makes it works but I guess it's not the expected behaviour since it worked without problems in previous version (tested with ruby 1.8.7 and rails 2.3.5)

It fails too with rails 3.1.0.beta.</original-body>
  <latest-body>When a activerecord asks for a connection in a thread, this connections is not released after thread end. So, the connection pool can be exhausted. Definining a pool of 5 for the DB connection (mysql), this code fails after the 5th try:

@@@ ruby
puts &quot;ruby vesion: #{RUBY_VERSION} rails version: #{Rails.version}&quot;
1.upto(10) do |i|
	 Thread.new() do
		puts &quot;iteration #{i}&quot;
		User.first
		puts &quot;iteration #{i} after query&quot;
		# ActiveRecord::Base.connection_pool.release_connection
	end.join
	# ActiveRecord::Base.connection_pool.clear_stale_cached_connections!() 
end
@@@

the result is:
@@@ bash
$rails runner /tmp/test2.rb
ruby vesion: 1.9.2 rails version: 3.0.0
iteration 1
iteration 1 after query
iteration 2
iteration 2 after query
iteration 3
iteration 3 after query
iteration 4
iteration 4 after query
iteration 5
iteration 5 after query
iteration 6
/tmp/test2.rb:4:in `join': deadlock detected (fatal)
@@@

Uncommenting one of the commented lines that manually forces to release connections makes it works but I guess it's not the expected behaviour since it worked without problems in previous version (tested with ruby 1.8.7 and rails 2.3.5)

It fails too with rails 3.1.0.beta.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When a activerecord asks for a connection in a thread, this
connections is not released after thread end. So, the connection
pool can be exhausted. Definining a pool of 5 for the DB connection
(mysql), this code fails after the 5th try:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;puts &quot;ruby vesion: #{RUBY_VERSION} rails version: #{Rails.version}&quot;
1.upto(10) do |i|
     Thread.new() do
        puts &quot;iteration #{i}&quot;
        User.first
        puts &quot;iteration #{i} after query&quot;
        # ActiveRecord::Base.connection_pool.release_connection
    end.join
    # ActiveRecord::Base.connection_pool.clear_stale_cached_connections!() 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;the result is:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;$rails runner /tmp/test2.rb
ruby vesion: 1.9.2 rails version: 3.0.0
iteration 1
iteration 1 after query
iteration 2
iteration 2 after query
iteration 3
iteration 3 after query
iteration 4
iteration 4 after query
iteration 5
iteration 5 after query
iteration 6
/tmp/test2.rb:4:in &lt;/code&gt;join': deadlock detected (fatal)&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;

&lt;br&gt;
Uncommenting one of the commented lines that manually forces to release connections makes it works but I guess it's not the expected behaviour since it worked without problems in previous version (tested with ruby 1.8.7 and rails 2.3.5)

&lt;br&gt;
It fails too with rails 3.1.0.beta.
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When a activerecord asks for a connection in a thread, this connections is not released after thread end. So, the connection pool can be exhausted. Definining a pool of 5 for the DB connection (mysql), this code fails after the 5th try:

@@@ ruby
puts &quot;ruby vesion: #{RUBY_VERSION} rails version: #{Rails.version}&quot;
1.upto(10) do |i|
	 Thread.new() do
		puts &quot;iteration #{i}&quot;
		User.first
		puts &quot;iteration #{i} after query&quot;
		# ActiveRecord::Base.connection_pool.release_connection
	end.join
	# ActiveRecord::Base.connection_pool.clear_stale_cached_connections!() 
end
@@@

the result is:
@@@ bash
$rails runner /tmp/test2.rb
ruby vesion: 1.9.2 rails version: 3.0.0
iteration 1
iteration 1 after query
iteration 2
iteration 2 after query
iteration 3
iteration 3 after query
iteration 4
iteration 4 after query
iteration 5
iteration 5 after query
iteration 6
/tmp/test2.rb:4:in `join': deadlock detected (fatal)
@@@

Uncommenting one of the commented lines that manually forces to release connections makes it works but I guess it's not the expected behaviour since it worked without problems in previous version (tested with ruby 1.8.7 and rails 2.3.5)

It fails too with rails 3.1.0.beta.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When a activerecord asks for a connection in a thread, this
connections is not released after thread end. So, the connection
pool can be exhausted. Definining a pool of 5 for the DB connection
(mysql), this code fails after the 5th try:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;puts &quot;ruby vesion: #{RUBY_VERSION} rails version: #{Rails.version}&quot;
1.upto(10) do |i|
     Thread.new() do
        puts &quot;iteration #{i}&quot;
        User.first
        puts &quot;iteration #{i} after query&quot;
        # ActiveRecord::Base.connection_pool.release_connection
    end.join
    # ActiveRecord::Base.connection_pool.clear_stale_cached_connections!() 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;the result is:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;$rails runner /tmp/test2.rb
ruby vesion: 1.9.2 rails version: 3.0.0
iteration 1
iteration 1 after query
iteration 2
iteration 2 after query
iteration 3
iteration 3 after query
iteration 4
iteration 4 after query
iteration 5
iteration 5 after query
iteration 6
/tmp/test2.rb:4:in &lt;/code&gt;join': deadlock detected (fatal)&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;

&lt;br&gt;
Uncommenting one of the commented lines that manually forces to release connections makes it works but I guess it's not the expected behaviour since it worked without problems in previous version (tested with ruby 1.8.7 and rails 2.3.5)

&lt;br&gt;
It fails too with rails 3.1.0.beta.
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-29T21:27:55+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>connection pool &quot;rails 3.0.0&quot; thread</tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-09-29T21:27:57+01:00</updated-at>
      <user-id type="integer">52026</user-id>
      <version type="integer">1</version>
      <user-name>luis.lopez (at branelabs)</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Verified on Ruby 1.9. The problem with checkout methods is, it relies on return value of `wait` method to reclaim connections from dead threads. 

But return value of `wait` has been changed and in 1.9 it will return always true, whether it returns after `timeout` period or it returns because it was signalled by `singal`. In fact, return value of `wait` can't be relied upon and I saw the code of Rubinius and JRuby implementations as well and behaviour is not analogous to 1.8.

Attached patch fixes the problem and it no longer depends on return value of `wait` method. I have also added some missing tests. One more  thing that I did ended up doing was setting `timeout` value on `1.9`; original code had `timeout` set to `nil` in Ruby 1.9. Calling `wait` with `nil` parameter can trigger deadlock as OP got in original bug report.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Verified on Ruby 1.9. The problem with checkout methods is, it
relies on return value of &lt;code&gt;wait&lt;/code&gt; method to reclaim
connections from dead threads.&lt;/p&gt;
&lt;p&gt;But return value of &lt;code&gt;wait&lt;/code&gt; has been changed and in
1.9 it will return always true, whether it returns after
&lt;code&gt;timeout&lt;/code&gt; period or it returns because it was signalled
by &lt;code&gt;singal&lt;/code&gt;. In fact, return value of &lt;code&gt;wait&lt;/code&gt;
can't be relied upon and I saw the code of Rubinius and JRuby
implementations as well and behaviour is not analogous to 1.8.&lt;/p&gt;
&lt;p&gt;Attached patch fixes the problem and it no longer depends on
return value of &lt;code&gt;wait&lt;/code&gt; method. I have also added some
missing tests. One more thing that I did ended up doing was setting
&lt;code&gt;timeout&lt;/code&gt; value on &lt;code&gt;1.9&lt;/code&gt;; original code had
&lt;code&gt;timeout&lt;/code&gt; set to &lt;code&gt;nil&lt;/code&gt; in Ruby 1.9. Calling
&lt;code&gt;wait&lt;/code&gt; with &lt;code&gt;nil&lt;/code&gt; parameter can trigger
deadlock as OP got in original bug report.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T10:08:33+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>connection pool &quot;rails 3.0.0&quot; thread</tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-09-30T10:08:35+01:00</updated-at>
      <user-id type="integer">76656</user-id>
      <version type="integer">2</version>
      <user-name>Hemant Kumar</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T10:19:50+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: connection pool &quot;rails 3.0.0&quot; thread
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>connection patched pool &quot;rails 3.0.0&quot; thread</tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-09-30T10:19:54+01:00</updated-at>
      <user-id type="integer">76656</user-id>
      <version type="integer">3</version>
      <user-name>Hemant Kumar</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The patch works. The only drawback is the waiting time to release connections. If you run the above code, it will freeze for 5 seconds in the 6th try. If you do the test more times (1.upto(20), for instance) it will freeze 5 seconds every 5 tries (since the pool is 5 for this test). Not sure if it is possible to check if there are connections to be reclaimed  before wait.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch works. The only drawback is the waiting time to
release connections. If you run the above code, it will freeze for
5 seconds in the 6th try. If you do the test more times
(1.upto(20), for instance) it will freeze 5 seconds every 5 tries
(since the pool is 5 for this test). Not sure if it is possible to
check if there are connections to be reclaimed before wait.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T12:06:08+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: connection patched pool &quot;rails 3.0.0&quot; thread
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-09-30T12:06:10+01:00</updated-at>
      <user-id type="integer">52026</user-id>
      <version type="integer">4</version>
      <user-name>luis.lopez (at branelabs)</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Well the patch does not modify original behaviour, it just makes it work on Ruby 1.9. One can of course check for connections held by dead threads before calling `wait`,but that would mean that we will have to call `clear_stale_cached_connections` twice:

@@@ ruby
clear_stale_cached_connections!

if(@checked_out.size &lt; @connections.size)
  next
else
  @queue.wait(@timeout)
end            
clear_stale_cached_connections!
if @size == @checked_out.size
  raise ConnectionTimeoutError, &quot;could not obtain a database connection#{&quot; within #{@timeout} seconds&quot; if @timeout}.  The max pool size is currently #{@size}; consider increasing it.&quot;
end

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well the patch does not modify original behaviour, it just makes
it work on Ruby 1.9. One can of course check for connections held
by dead threads before calling &lt;code&gt;wait&lt;/code&gt;,but that would
mean that we will have to call
&lt;code&gt;clear_stale_cached_connections&lt;/code&gt; twice:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;clear_stale_cached_connections!

if(@checked_out.size &amp;lt; @connections.size)
  next
else
  @queue.wait(@timeout)
end            
clear_stale_cached_connections!
if @size == @checked_out.size
  raise ConnectionTimeoutError, &quot;could not obtain a database connection#{&quot; within #{@timeout} seconds&quot; if @timeout}.  The max pool size is currently #{@size}; consider increasing it.&quot;
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T14:07:08+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-09-30T14:07:09+01:00</updated-at>
      <user-id type="integer">2053</user-id>
      <version type="integer">5</version>
      <user-name>gnufied</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I personally think that it would be a better solution: the best moment to check for connections is probably before the wait and I don't think that call clear_stale_cached_connections twice would be big problem since there is a wait anyway. In the worst case there will be 2 calls to clear_stale_cached_connections (one more then in the current code) and in the best the wait would be avoided.

However, I don't know if clear_stale_cached_connections! could have a big performance penalty in case the pool were big</body>
      <body-html>&lt;div&gt;&lt;p&gt;I personally think that it would be a better solution: the best
moment to check for connections is probably before the wait and I
don't think that call clear_stale_cached_connections twice would be
big problem since there is a wait anyway. In the worst case there
will be 2 calls to clear_stale_cached_connections (one more then in
the current code) and in the best the wait would be avoided.&lt;/p&gt;
&lt;p&gt;However, I don't know if clear_stale_cached_connections! could
have a big performance penalty in case the pool were big&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T17:18:58+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-09-30T17:19:00+01:00</updated-at>
      <user-id type="integer">52026</user-id>
      <version type="integer">6</version>
      <user-name>luis.lopez (at branelabs)</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [444aa9c7350f243a6b4b2a3ff1601493a812872a]) fix ruby 1.9 deadlock problem, fixes #5736 add connection pool tests
http://github.com/rails/rails/commit/444aa9c7350f243a6b4b2a3ff1601493a812872a</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/444aa9c7350f243a6b4b2a3ff1601493a812872a&quot;
title=
&quot;Changeset [444aa9c7350f243a6b4b2a3ff1601493a812872a]&quot;&gt;[444aa9c7350f243a6b4b2a3ff1601493a812872a]&lt;/a&gt;)
fix ruby 1.9 deadlock problem, fixes &lt;a href=
&quot;/projects/8994/tickets/5736&quot; title=&quot;Ticket #5736&quot;&gt;#5736&lt;/a&gt; add
connection pool tests &lt;a href=
&quot;http://github.com/rails/rails/commit/444aa9c7350f243a6b4b2a3ff1601493a812872a&quot;&gt;
http://github.com/rails/rails/commit/444aa9c7350f243a6b4b2a3ff16014...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T21:43:37+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-10-06T21:43:39+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [2a04110f266b6ccaf94aeeae224af578a9620fbd]) fix ruby 1.9 deadlock problem, fixes #5736 add connection pool tests
http://github.com/rails/rails/commit/2a04110f266b6ccaf94aeeae224af578a9620fbd</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/2a04110f266b6ccaf94aeeae224af578a9620fbd&quot;
title=
&quot;Changeset [2a04110f266b6ccaf94aeeae224af578a9620fbd]&quot;&gt;[2a04110f266b6ccaf94aeeae224af578a9620fbd]&lt;/a&gt;)
fix ruby 1.9 deadlock problem, fixes &lt;a href=
&quot;/projects/8994/tickets/5736&quot; title=&quot;Ticket #5736&quot;&gt;#5736&lt;/a&gt; add
connection pool tests &lt;a href=
&quot;http://github.com/rails/rails/commit/2a04110f266b6ccaf94aeeae224af578a9620fbd&quot;&gt;
http://github.com/rails/rails/commit/2a04110f266b6ccaf94aeeae224af5...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T21:46:09+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2010-10-06T21:46:11+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>PDF to JPG Converter is a more efficient pdf to jpg conversion software
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to image converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to tiff converter&lt;/a&gt;
which is able to convert pdf to jpg format with original output quality and fast conversion speed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;PDF to JPG Converter is a more efficient pdf to jpg conversion
software&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg
converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to
image converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to
tiff converter&lt;/a&gt;&lt;br&gt;
which is able to convert pdf to jpg format with original output
quality and fast conversion speed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-22T04:50:43+01:00</created-at>
      <creator-id type="integer">52026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5736</number>
      <permalink>connections-not-released-in-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>connections not released in rails 3</title>
      <updated-at type="datetime">2011-04-22T06:48:04+01:00</updated-at>
      <user-id type="integer">146598</user-id>
      <version type="integer">9</version>
      <user-name>machen</user-name>
      <creator-name>luis.lopez (at branelabs)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5736</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d8bddcca241951c696676615159968759a6a19db</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-30T10:08:33+01:00</created-at>
      <filename>5736_connection_pool_fixes.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">698044</id>
      <size type="integer">3648</size>
      <uploader-id type="integer">76656</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/698044/5736_connection_pool_fixes.patch</url>
    </attachment>
  </attachments>
</ticket>
