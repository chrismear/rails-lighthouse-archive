<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40272</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-18T08:52:31+00:00</created-at>
  <creator-id type="integer">42916</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6302</number>
  <permalink>content_for-and-xss-bug</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.10 content_for xss</tag>
  <title>content_for and xss bug</title>
  <updated-at type="datetime">2011-01-28T19:12:31+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Greg Hazel</creator-name>
  <assigned-user-name>Santiago Pastorino</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6302</url>
  <priority-name>Low</priority-name>
  <original-body>This occurs on Rails 2.3.10

@@@ ruby
# this is safe
&lt;% content_for :foo %&gt;
 &lt;%= malicious %&gt;
&lt;% end %&gt;&quot;
@@@

@@@ ruby
# this is not safe
&lt;% content_for :foo, malicious %&gt;
@@@

The reason is the way ActionPack implements content_for:

@@@ ruby
def content_for(name, content = nil, &amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{content}&quot;.html_safe)
  nil
end
@@@

Notice it marks the string as html_safe even if it isn't.

Here's the workaround I've come up with, but there may be something more elegant:
@@@ ruby
def content_for(name, content = nil, &amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{ERB::Util.h(content)}&quot;.html_safe)
  nil
end
@@@</original-body>
  <latest-body>This occurs on Rails 2.3.10

@@@ ruby
# this is safe
&lt;% content_for :foo %&gt;
 &lt;%= malicious %&gt;
&lt;% end %&gt;&quot;
@@@

@@@ ruby
# this is not safe
&lt;% content_for :foo, malicious %&gt;
@@@

The reason is the way ActionPack implements content_for:

@@@ ruby
def content_for(name, content = nil, &amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{content}&quot;.html_safe)
  nil
end
@@@

Notice it marks the string as html_safe even if it isn't.

Here's the workaround I've come up with, but there may be something more elegant:
@@@ ruby
def content_for(name, content = nil, &amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{ERB::Util.h(content)}&quot;.html_safe)
  nil
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This occurs on Rails 2.3.10&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# this is safe
&amp;lt;% content_for :foo %&amp;gt;
 &amp;lt;%= malicious %&amp;gt;
&amp;lt;% end %&amp;gt;&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# this is not safe
&amp;lt;% content_for :foo, malicious %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The reason is the way ActionPack implements content_for:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def content_for(name, content = nil, &amp;amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{content}&quot;.html_safe)
  nil
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice it marks the string as html_safe even if it isn't.&lt;/p&gt;
&lt;p&gt;Here's the workaround I've come up with, but there may be
something more elegant:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def content_for(name, content = nil, &amp;amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{ERB::Util.h(content)}&quot;.html_safe)
  nil
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This occurs on Rails 2.3.10

@@@ ruby
# this is safe
&lt;% content_for :foo %&gt;
 &lt;%= malicious %&gt;
&lt;% end %&gt;&quot;
@@@

@@@ ruby
# this is not safe
&lt;% content_for :foo, malicious %&gt;
@@@

The reason is the way ActionPack implements content_for:

@@@ ruby
def content_for(name, content = nil, &amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{content}&quot;.html_safe)
  nil
end
@@@

Notice it marks the string as html_safe even if it isn't.

Here's the workaround I've come up with, but there may be something more elegant:
@@@ ruby
def content_for(name, content = nil, &amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{ERB::Util.h(content)}&quot;.html_safe)
  nil
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;This occurs on Rails 2.3.10&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# this is safe
&amp;lt;% content_for :foo %&amp;gt;
 &amp;lt;%= malicious %&amp;gt;
&amp;lt;% end %&amp;gt;&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# this is not safe
&amp;lt;% content_for :foo, malicious %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The reason is the way ActionPack implements content_for:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def content_for(name, content = nil, &amp;amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{content}&quot;.html_safe)
  nil
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice it marks the string as html_safe even if it isn't.&lt;/p&gt;
&lt;p&gt;Here's the workaround I've come up with, but there may be
something more elegant:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def content_for(name, content = nil, &amp;amp;block)
  ivar = &quot;@content_for_#{name}&quot;
  content = capture(&amp;amp;block) if block_given?
  instance_variable_set(ivar, &quot;#{instance_variable_get(ivar)}#{ERB::Util.h(content)}&quot;.html_safe)
  nil
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-17T20:19:01+00:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6302</number>
      <permalink>content_for-and-xss-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.10 content_for xss</tag>
      <title>content_for and xss bug</title>
      <updated-at type="datetime">2011-01-17T20:20:48+00:00</updated-at>
      <user-id type="integer">42916</user-id>
      <version type="integer">1</version>
      <user-name>Greg Hazel</user-name>
      <creator-name>Greg Hazel</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6302</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Party dresses are a whole genre of &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses, &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list is virtually inexhaustible!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Party dresses are a whole genre of &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck
wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could
possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening
Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses,
&lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail
Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list
is virtually inexhaustible!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-18T08:26:56+00:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6302</number>
      <permalink>content_for-and-xss-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.10 content_for xss</tag>
      <title>content_for and xss bug</title>
      <updated-at type="datetime">2011-01-18T08:52:31+00:00</updated-at>
      <user-id type="integer">133048</user-id>
      <version type="integer">2</version>
      <user-name>mary01</user-name>
      <creator-name>Greg Hazel</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6302</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hey Greg, we should patch this in rails_xss can you patch that there?.
Send me a pull request I'm closing this ticket from here, thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Greg, we should patch this in rails_xss can you patch that
there?.&lt;br&gt;
Send me a pull request I'm closing this ticket from here,
thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-28T19:12:20+00:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6302</number>
      <permalink>content_for-and-xss-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.10 content_for xss</tag>
      <title>content_for and xss bug</title>
      <updated-at type="datetime">2011-01-28T19:12:31+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Greg Hazel</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6302</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
