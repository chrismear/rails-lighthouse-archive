<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-10T19:28:43+00:00</created-at>
  <creator-id type="integer">34110</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1931</number>
  <permalink>freeze-gems-supports_migrations-breaks-schema_format-sql</permalink>
  <priority type="integer">1192</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>freeze gems - supports_migrations? breaks schema_format = :sql</title>
  <updated-at type="datetime">2011-02-02T17:39:35+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Doug Sparling</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1931</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Environment: Mac OS X 10.5
Rails 2.2.2 (moving up from 2.0.2 - the few deprecated items have been removed).

When moving to Rails 2.2.2 I decided to freeze gems. It was after the freeze that I started having trouble generating my test database structure from a legacy database (no migrations).

I have uncommented 

&quot;config.active_record.schema_format = :sql&quot;

in config/environment.rb



What's basically happening is that the db/development_structure.sql is getting built (when running rake db:test:clone_structure) but then it dies with an error because it is trying to use a non-existent schema.rb to build the test database instead of development_structure.sql.

When I run &quot;rake db:test:clone_structure&quot;

Macintosh:trunk dsparlingimbp$ rake db:structure:dump --trace
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk)
** Invoke db:structure:dump (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:structure:dump
rake aborted!
Mysql::Error: Table 'uclick_test.schema_migrations' doesn't exist: SELECT version FROM schema_migrations
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:188:in `log'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:309:in `execute'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:301:in `select_rows'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:27:in `select_values'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:310:in `dump_schema_information'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288:in `open'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `call'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:578:in `invoke_with_call_chain'
/usr/local/lib/ruby/1.8/monitor.rb:238:in `synchronize'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:571:in `invoke_with_call_chain'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:564:in `invoke'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2019:in `invoke_task'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1991:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1970:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1967:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/bin/rake:31
/usr/local/bin/rake:19:in `load'
/usr/local/bin/rake:19



Running rake db:test:load (development_structure.sql did get built):

Macintosh:trunk dsparlingimbp$ rake db:test:load
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk)
rake aborted!
no such file to load -- /Users/dsparlingimbp/Sites/webservice_reg/trunk/db/schema.rb

So it looks like it's trying to find schema.rb even though I've set schema_format to sql.



To get by, I commented out:

      #if ActiveRecord::Base.connection.supports_migrations?
      #  File.open(&quot;#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql&quot;, &quot;a&quot;) { |f| f &lt;&lt; ActiveRecord::Base.connection.dump_schema_information }
      #end

in vendor/rails/railties/lib/tasks/databases.rake


I'm using mysql - &quot;supports_migrations?&quot; is set to true in vendor/rails/activerecord/lib/active_record/connection_adapter/mysql_adapter.rb 

def supports_migrations? #:nodoc:
  true
end


Since it assumes supports_migrations? is true based on the fact I'm using mysql, then dump_schema_information is called:

vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb 

  def dump_schema_information #:nodoc:
        sm_table = ActiveRecord::Migrator.schema_migrations_table_name
        migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)
        migrated.map { |v| &quot;INSERT INTO #{sm_table} (version) VALUES ('#{v}');&quot; }.join(&quot;\n\n&quot;)
      end


and here's what causes my error:

migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)


Not sure if this is a bug, or something I've done wrong...it's only after freezing Rails that I had the problem.

Thanks,
==
doug sparling</original-body>
  <latest-body>Environment: Mac OS X 10.5
Rails 2.2.2 (moving up from 2.0.2 - the few deprecated items have been removed).

When moving to Rails 2.2.2 I decided to freeze gems. It was after the freeze that I started having trouble generating my test database structure from a legacy database (no migrations).

I have uncommented 

&quot;config.active_record.schema_format = :sql&quot;

in config/environment.rb



What's basically happening is that the db/development_structure.sql is getting built (when running rake db:test:clone_structure) but then it dies with an error because it is trying to use a non-existent schema.rb to build the test database instead of development_structure.sql.

When I run &quot;rake db:test:clone_structure&quot;

Macintosh:trunk dsparlingimbp$ rake db:structure:dump --trace
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk)
** Invoke db:structure:dump (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:structure:dump
rake aborted!
Mysql::Error: Table 'uclick_test.schema_migrations' doesn't exist: SELECT version FROM schema_migrations
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:188:in `log'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:309:in `execute'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:301:in `select_rows'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:27:in `select_values'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:310:in `dump_schema_information'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288:in `open'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `call'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:578:in `invoke_with_call_chain'
/usr/local/lib/ruby/1.8/monitor.rb:238:in `synchronize'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:571:in `invoke_with_call_chain'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:564:in `invoke'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2019:in `invoke_task'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1991:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1970:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1967:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/bin/rake:31
/usr/local/bin/rake:19:in `load'
/usr/local/bin/rake:19



Running rake db:test:load (development_structure.sql did get built):

Macintosh:trunk dsparlingimbp$ rake db:test:load
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk)
rake aborted!
no such file to load -- /Users/dsparlingimbp/Sites/webservice_reg/trunk/db/schema.rb

So it looks like it's trying to find schema.rb even though I've set schema_format to sql.



To get by, I commented out:

      #if ActiveRecord::Base.connection.supports_migrations?
      #  File.open(&quot;#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql&quot;, &quot;a&quot;) { |f| f &lt;&lt; ActiveRecord::Base.connection.dump_schema_information }
      #end

in vendor/rails/railties/lib/tasks/databases.rake


I'm using mysql - &quot;supports_migrations?&quot; is set to true in vendor/rails/activerecord/lib/active_record/connection_adapter/mysql_adapter.rb 

def supports_migrations? #:nodoc:
  true
end


Since it assumes supports_migrations? is true based on the fact I'm using mysql, then dump_schema_information is called:

vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb 

  def dump_schema_information #:nodoc:
        sm_table = ActiveRecord::Migrator.schema_migrations_table_name
        migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)
        migrated.map { |v| &quot;INSERT INTO #{sm_table} (version) VALUES ('#{v}');&quot; }.join(&quot;\n\n&quot;)
      end


and here's what causes my error:

migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)


Not sure if this is a bug, or something I've done wrong...it's only after freezing Rails that I had the problem.

Thanks,
==
doug sparling</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Environment: Mac OS X 10.5 Rails 2.2.2 (moving up from 2.0.2 -
the few deprecated items have been removed).&lt;/p&gt;
&lt;p&gt;When moving to Rails 2.2.2 I decided to freeze gems. It was
after the freeze that I started having trouble generating my test
database structure from a legacy database (no migrations).&lt;/p&gt;
&lt;p&gt;I have uncommented&lt;/p&gt;
&lt;p&gt;&quot;config.active_record.schema_format = :sql&quot;&lt;/p&gt;
&lt;p&gt;in config/environment.rb&lt;/p&gt;
&lt;p&gt;What's basically happening is that the
db/development_structure.sql is getting built (when running rake
db:test:clone_structure) but then it dies with an error because it
is trying to use a non-existent schema.rb to build the test
database instead of development_structure.sql.&lt;/p&gt;
&lt;p&gt;When I run &quot;rake db:test:clone_structure&quot;&lt;/p&gt;
&lt;p&gt;Macintosh:trunk dsparlingimbp$ rake db:structure:dump --trace
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk) &lt;strong&gt;Invoke
db:structure:dump (first_time)&lt;/strong&gt; Invoke environment
(first_time) &lt;strong&gt;Execute environment&lt;/strong&gt; Execute
db:structure:dump rake aborted! Mysql::Error: Table
'uclick_test.schema_migrations' doesn't exist: SELECT version FROM
schema_migrations
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:188:in
&lt;code&gt;log'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:309:in&lt;/code&gt;execute'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:301:in
&lt;code&gt;select_rows'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:27:in&lt;/code&gt;select_values'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:310:in
&lt;code&gt;dump_schema_information'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288:in&lt;/code&gt;open'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in
&lt;code&gt;call'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in&lt;/code&gt;execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in
&lt;code&gt;each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in&lt;/code&gt;execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:578:in
&lt;code&gt;invoke_with_call_chain'
/usr/local/lib/ruby/1.8/monitor.rb:238:in&lt;/code&gt;synchronize'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:571:in
&lt;code&gt;invoke_with_call_chain'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:564:in&lt;/code&gt;invoke'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2019:in
&lt;code&gt;invoke_task'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in&lt;/code&gt;top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in
&lt;code&gt;each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in&lt;/code&gt;top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in
&lt;code&gt;standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1991:in&lt;/code&gt;top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1970:in
&lt;code&gt;run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in&lt;/code&gt;standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1967:in
&lt;code&gt;run' /usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/bin/rake:31
/usr/local/bin/rake:19:in&lt;/code&gt;load' /usr/local/bin/rake:19&lt;/p&gt;
&lt;p&gt;Running rake db:test:load (development_structure.sql did get
built):&lt;/p&gt;
&lt;p&gt;Macintosh:trunk dsparlingimbp$ rake db:test:load (in
/Users/dsparlingimbp/Sites/webservice_reg/trunk) rake aborted! no
such file to load --
/Users/dsparlingimbp/Sites/webservice_reg/trunk/db/schema.rb&lt;/p&gt;
&lt;p&gt;So it looks like it's trying to find schema.rb even though I've
set schema_format to sql.&lt;/p&gt;
&lt;p&gt;To get by, I commented out:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  #if ActiveRecord::Base.connection.supports_migrations?
  #  File.open(&quot;#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql&quot;, &quot;a&quot;) { |f| f &amp;lt;&amp;lt; ActiveRecord::Base.connection.dump_schema_information }
  #end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;in vendor/rails/railties/lib/tasks/databases.rake&lt;/p&gt;
&lt;p&gt;I'm using mysql - &quot;supports_migrations?&quot; is set to true in
vendor/rails/activerecord/lib/active_record/connection_adapter/mysql_adapter.rb&lt;/p&gt;
&lt;p&gt;def supports_migrations? #:nodoc: true end&lt;/p&gt;
&lt;p&gt;Since it assumes supports_migrations? is true based on the fact
I'm using mysql, then dump_schema_information is called:&lt;/p&gt;
&lt;p&gt;
vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb&lt;/p&gt;
&lt;p&gt;def dump_schema_information #:nodoc:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    sm_table = ActiveRecord::Migrator.schema_migrations_table_name
    migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)
    migrated.map { |v| &quot;INSERT INTO #{sm_table} (version) VALUES ('#{v}');&quot; }.join(&quot;\n\n&quot;)
  end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and here's what causes my error:&lt;/p&gt;
&lt;p&gt;migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)&lt;/p&gt;
&lt;p&gt;Not sure if this is a bug, or something I've done wrong...it's
only after freezing Rails that I had the problem.&lt;/p&gt;
&lt;h1&gt;Thanks,&lt;/h1&gt;
&lt;p&gt;doug sparling&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Environment: Mac OS X 10.5
Rails 2.2.2 (moving up from 2.0.2 - the few deprecated items have been removed).

When moving to Rails 2.2.2 I decided to freeze gems. It was after the freeze that I started having trouble generating my test database structure from a legacy database (no migrations).

I have uncommented 

&quot;config.active_record.schema_format = :sql&quot;

in config/environment.rb



What's basically happening is that the db/development_structure.sql is getting built (when running rake db:test:clone_structure) but then it dies with an error because it is trying to use a non-existent schema.rb to build the test database instead of development_structure.sql.

When I run &quot;rake db:test:clone_structure&quot;

Macintosh:trunk dsparlingimbp$ rake db:structure:dump --trace
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk)
** Invoke db:structure:dump (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:structure:dump
rake aborted!
Mysql::Error: Table 'uclick_test.schema_migrations' doesn't exist: SELECT version FROM schema_migrations
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:188:in `log'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:309:in `execute'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:301:in `select_rows'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:27:in `select_values'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:310:in `dump_schema_information'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288:in `open'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `call'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:578:in `invoke_with_call_chain'
/usr/local/lib/ruby/1.8/monitor.rb:238:in `synchronize'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:571:in `invoke_with_call_chain'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:564:in `invoke'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2019:in `invoke_task'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1991:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1970:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1967:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/bin/rake:31
/usr/local/bin/rake:19:in `load'
/usr/local/bin/rake:19



Running rake db:test:load (development_structure.sql did get built):

Macintosh:trunk dsparlingimbp$ rake db:test:load
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk)
rake aborted!
no such file to load -- /Users/dsparlingimbp/Sites/webservice_reg/trunk/db/schema.rb

So it looks like it's trying to find schema.rb even though I've set schema_format to sql.



To get by, I commented out:

      #if ActiveRecord::Base.connection.supports_migrations?
      #  File.open(&quot;#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql&quot;, &quot;a&quot;) { |f| f &lt;&lt; ActiveRecord::Base.connection.dump_schema_information }
      #end

in vendor/rails/railties/lib/tasks/databases.rake


I'm using mysql - &quot;supports_migrations?&quot; is set to true in vendor/rails/activerecord/lib/active_record/connection_adapter/mysql_adapter.rb 

def supports_migrations? #:nodoc:
  true
end


Since it assumes supports_migrations? is true based on the fact I'm using mysql, then dump_schema_information is called:

vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb 

  def dump_schema_information #:nodoc:
        sm_table = ActiveRecord::Migrator.schema_migrations_table_name
        migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)
        migrated.map { |v| &quot;INSERT INTO #{sm_table} (version) VALUES ('#{v}');&quot; }.join(&quot;\n\n&quot;)
      end


and here's what causes my error:

migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)


Not sure if this is a bug, or something I've done wrong...it's only after freezing Rails that I had the problem.

Thanks,
==
doug sparling</body>
      <body-html>&lt;div&gt;&lt;p&gt;Environment: Mac OS X 10.5 Rails 2.2.2 (moving up from 2.0.2 -
the few deprecated items have been removed).&lt;/p&gt;
&lt;p&gt;When moving to Rails 2.2.2 I decided to freeze gems. It was
after the freeze that I started having trouble generating my test
database structure from a legacy database (no migrations).&lt;/p&gt;
&lt;p&gt;I have uncommented&lt;/p&gt;
&lt;p&gt;&quot;config.active_record.schema_format = :sql&quot;&lt;/p&gt;
&lt;p&gt;in config/environment.rb&lt;/p&gt;
&lt;p&gt;What's basically happening is that the
db/development_structure.sql is getting built (when running rake
db:test:clone_structure) but then it dies with an error because it
is trying to use a non-existent schema.rb to build the test
database instead of development_structure.sql.&lt;/p&gt;
&lt;p&gt;When I run &quot;rake db:test:clone_structure&quot;&lt;/p&gt;
&lt;p&gt;Macintosh:trunk dsparlingimbp$ rake db:structure:dump --trace
(in /Users/dsparlingimbp/Sites/webservice_reg/trunk) &lt;strong&gt;Invoke
db:structure:dump (first_time)&lt;/strong&gt; Invoke environment
(first_time) &lt;strong&gt;Execute environment&lt;/strong&gt; Execute
db:structure:dump rake aborted! Mysql::Error: Table
'uclick_test.schema_migrations' doesn't exist: SELECT version FROM
schema_migrations
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:188:in
&lt;code&gt;log'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:309:in&lt;/code&gt;execute'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb:301:in
&lt;code&gt;select_rows'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:27:in&lt;/code&gt;select_values'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:310:in
&lt;code&gt;dump_schema_information'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288:in&lt;/code&gt;open'
/Users/dsparlingimbp/Sites/webservice_reg/trunk/vendor/rails/railties/lib/tasks/databases.rake:288
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in
&lt;code&gt;call'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in&lt;/code&gt;execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in
&lt;code&gt;each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in&lt;/code&gt;execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:578:in
&lt;code&gt;invoke_with_call_chain'
/usr/local/lib/ruby/1.8/monitor.rb:238:in&lt;/code&gt;synchronize'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:571:in
&lt;code&gt;invoke_with_call_chain'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:564:in&lt;/code&gt;invoke'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2019:in
&lt;code&gt;invoke_task'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in&lt;/code&gt;top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in
&lt;code&gt;each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in&lt;/code&gt;top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in
&lt;code&gt;standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1991:in&lt;/code&gt;top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1970:in
&lt;code&gt;run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in&lt;/code&gt;standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1967:in
&lt;code&gt;run' /usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/bin/rake:31
/usr/local/bin/rake:19:in&lt;/code&gt;load' /usr/local/bin/rake:19&lt;/p&gt;
&lt;p&gt;Running rake db:test:load (development_structure.sql did get
built):&lt;/p&gt;
&lt;p&gt;Macintosh:trunk dsparlingimbp$ rake db:test:load (in
/Users/dsparlingimbp/Sites/webservice_reg/trunk) rake aborted! no
such file to load --
/Users/dsparlingimbp/Sites/webservice_reg/trunk/db/schema.rb&lt;/p&gt;
&lt;p&gt;So it looks like it's trying to find schema.rb even though I've
set schema_format to sql.&lt;/p&gt;
&lt;p&gt;To get by, I commented out:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  #if ActiveRecord::Base.connection.supports_migrations?
  #  File.open(&quot;#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql&quot;, &quot;a&quot;) { |f| f &amp;lt;&amp;lt; ActiveRecord::Base.connection.dump_schema_information }
  #end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;in vendor/rails/railties/lib/tasks/databases.rake&lt;/p&gt;
&lt;p&gt;I'm using mysql - &quot;supports_migrations?&quot; is set to true in
vendor/rails/activerecord/lib/active_record/connection_adapter/mysql_adapter.rb&lt;/p&gt;
&lt;p&gt;def supports_migrations? #:nodoc: true end&lt;/p&gt;
&lt;p&gt;Since it assumes supports_migrations? is true based on the fact
I'm using mysql, then dump_schema_information is called:&lt;/p&gt;
&lt;p&gt;
vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb&lt;/p&gt;
&lt;p&gt;def dump_schema_information #:nodoc:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    sm_table = ActiveRecord::Migrator.schema_migrations_table_name
    migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)
    migrated.map { |v| &quot;INSERT INTO #{sm_table} (version) VALUES ('#{v}');&quot; }.join(&quot;\n\n&quot;)
  end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and here's what causes my error:&lt;/p&gt;
&lt;p&gt;migrated = select_values(&quot;SELECT version FROM #{sm_table}&quot;)&lt;/p&gt;
&lt;p&gt;Not sure if this is a bug, or something I've done wrong...it's
only after freezing Rails that I had the problem.&lt;/p&gt;
&lt;h1&gt;Thanks,&lt;/h1&gt;
&lt;p&gt;doug sparling&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-10T19:28:43+00:00</created-at>
      <creator-id type="integer">34110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1931</number>
      <permalink>freeze-gems-supports_migrations-breaks-schema_format-sql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>freeze gems - supports_migrations? breaks schema_format = :sql</title>
      <updated-at type="datetime">2009-02-10T19:28:45+00:00</updated-at>
      <user-id type="integer">34110</user-id>
      <version type="integer">1</version>
      <user-name>Doug Sparling</user-name>
      <creator-name>Doug Sparling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1931</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:39+01:00</created-at>
      <creator-id type="integer">34110</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1931</number>
      <permalink>freeze-gems-supports_migrations-breaks-schema_format-sql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>freeze gems - supports_migrations? breaks schema_format = :sql</title>
      <updated-at type="datetime">2010-05-04T18:48:39+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Doug Sparling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1931</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:41:27+00:00</created-at>
      <creator-id type="integer">34110</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1931</number>
      <permalink>freeze-gems-supports_migrations-breaks-schema_format-sql</permalink>
      <priority type="integer">1192</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>freeze gems - supports_migrations? breaks schema_format = :sql</title>
      <updated-at type="datetime">2011-02-02T17:39:14+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Doug Sparling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1931</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:41:29+00:00</created-at>
      <creator-id type="integer">34110</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1931</number>
      <permalink>freeze-gems-supports_migrations-breaks-schema_format-sql</permalink>
      <priority type="integer">1192</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>freeze gems - supports_migrations? breaks schema_format = :sql</title>
      <updated-at type="datetime">2011-02-02T17:39:35+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Doug Sparling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1931</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
