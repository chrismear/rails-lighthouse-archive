<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15783</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-13T22:34:52+00:00</created-at>
  <creator-id type="integer">4065</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1964</number>
  <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
  <priority type="integer">1219</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>mysql timezone</tag>
  <title>[patch] mysql time_zone should reflect default_timezone</title>
  <updated-at type="datetime">2010-09-12T10:22:03+01:00</updated-at>
  <user-id type="integer">115450</user-id>
  <version type="integer">8</version>
  <user-name>gzminiz</user-name>
  <creator-name>Gaspard Bucher</creator-name>
  <assigned-user-name>Geoff Buesing</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>It should be possible to use &quot;now()&quot; in find conditions and the value should be coherent with Time.now.

The patch ensures that

@@@ ruby
Base.connection.execute(&quot;SELECT (now() - #{Time.now.strftime('%Y%m%d%H%M%S')})&quot;).fetch_row[0].to_f == 0.0
@@@</original-body>
  <latest-body>It should be possible to use &quot;now()&quot; in find conditions and the value should be coherent with Time.now.

The patch ensures that

@@@ ruby
Base.connection.execute(&quot;SELECT (now() - #{Time.now.strftime('%Y%m%d%H%M%S')})&quot;).fetch_row[0].to_f == 0.0
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It should be possible to use &quot;now()&quot; in find conditions and the
value should be coherent with Time.now.&lt;/p&gt;
&lt;p&gt;The patch ensures that&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Base.connection.execute(&amp;quot;SELECT (now() - #{Time.now.strftime('%Y%m%d%H%M%S')})&amp;quot;).fetch_row[0].to_f == 0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It should be possible to use &quot;now()&quot; in find conditions and the value should be coherent with Time.now.

The patch ensures that

@@@ ruby
Base.connection.execute(&quot;SELECT (now() - #{Time.now.strftime('%Y%m%d%H%M%S')})&quot;).fetch_row[0].to_f == 0.0
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;It should be possible to use &quot;now()&quot; in find conditions and the
value should be coherent with Time.now.&lt;/p&gt;
&lt;p&gt;The patch ensures that&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Base.connection.execute(&amp;quot;SELECT (now() - #{Time.now.strftime('%Y%m%d%H%M%S')})&amp;quot;).fetch_row[0].to_f == 0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-13T22:34:52+00:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2009-02-13T22:34:57+00:00</updated-at>
      <user-id type="integer">4065</user-id>
      <version type="integer">1</version>
      <user-name>Gaspard Bucher</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>ActiveRecord's default_timezone setting indicates whether your database is storing timestamps in UTC or the system local zone. It does *not* indicate, nor is it meant to change, what your system's local zone is set to.

Given those requirements, &quot;SELECT now()&quot; should always return the current time in the system local zone, irrespective of ActiveRecord's default_timezone.

If you need the current UTC time in MySQL, you can always use &quot;SELECT UTC_TIMESTAMP()&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveRecord's default_timezone setting indicates whether your
database is storing timestamps in UTC or the system local zone. It
does &lt;em&gt;not&lt;/em&gt; indicate, nor is it meant to change, what your
system's local zone is set to.&lt;/p&gt;
&lt;p&gt;Given those requirements, &quot;SELECT now()&quot; should always return
the current time in the system local zone, irrespective of
ActiveRecord's default_timezone.&lt;/p&gt;
&lt;p&gt;If you need the current UTC time in MySQL, you can always use
&quot;SELECT UTC_TIMESTAMP()&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-14T17:53:45+00:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2009-02-14T17:53:47+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>OK. Then we should not use &quot;default_timezone&quot; to configure the connection (I thought it acted like ENV['TZ']).

Here is another patch that enables the use of an optional 'timezone' configuration:

@@@ yaml
development:
  adapter: mysql
  database: foo_dev
  timezone: &quot;+0:0&quot;
  ...
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK. Then we should not use &quot;default_timezone&quot; to configure the
connection (I thought it acted like ENV['TZ']).&lt;/p&gt;
&lt;p&gt;Here is another patch that enables the use of an optional
'timezone' configuration:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;
development:
  adapter: mysql
  database: foo_dev
  timezone: &amp;quot;+0:0&amp;quot;
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-15T09:29:29+00:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2009-02-15T09:29:31+00:00</updated-at>
      <user-id type="integer">4065</user-id>
      <version type="integer">3</version>
      <user-name>Gaspard Bucher</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>What's a good example use case where this would come in handy? In your example above, you're setting the connection time zone to &quot;+0:0&quot;, i.e., UTC, which means you'd be able to use &quot;SELECT NOW()&quot; and have it behave the same as &quot;SELECT UTC_TIMESTAMP()&quot;. Beyond that, what useful behavior or functionality do you get by setting this?

In the department of time zone config settings, Rails already has config.time_zone, config.active_record.default_timezone, and Time.zone. On top of that, you can set ENV['TZ'] for the process if you need to. If we're going to justify adding another time zone config setting into the mix, we'll need some clear-win use cases for it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What's a good example use case where this would come in handy?
In your example above, you're setting the connection time zone to
&quot;+0:0&quot;, i.e., UTC, which means you'd be able to use &quot;SELECT NOW()&quot;
and have it behave the same as &quot;SELECT UTC_TIMESTAMP()&quot;. Beyond
that, what useful behavior or functionality do you get by setting
this?&lt;/p&gt;
&lt;p&gt;In the department of time zone config settings, Rails already
has config.time_zone, config.active_record.default_timezone, and
Time.zone. On top of that, you can set ENV['TZ'] for the process if
you need to. If we're going to justify adding another time zone
config setting into the mix, we'll need some clear-win use cases
for it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-15T17:43:38+00:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2009-02-15T17:43:44+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">4</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I understand that no one really wants to dive in the timezone thing once more, but I had a closer look on all those settings and I think my first patch really makes sense, even if the argument using Time.now was ill posed:

Base.default_timezone's role is to make sure the created_at/updated_at are set to the current time during create/update and to instantiate time attributes. In fact this setting could be removed for a config:... in the database.yml but it wouldn't work because there is no consistent way to timestamp records between databases.

Your idea of using utc_timestamp() instead of now is a half solution because it won't work if someone wants to use the application with local times (maybe he/she is sharing some elements of the db).

Making sure 'default_timezone' is in sync with the database's TIME_ZONE is really the way to go. There is no reason to have different values for mysql TIME_ZONE and 'default_timezone'.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I understand that no one really wants to dive in the timezone
thing once more, but I had a closer look on all those settings and
I think my first patch really makes sense, even if the argument
using Time.now was ill posed:&lt;/p&gt;
&lt;p&gt;Base.default_timezone's role is to make sure the
created_at/updated_at are set to the current time during
create/update and to instantiate time attributes. In fact this
setting could be removed for a config:... in the database.yml but
it wouldn't work because there is no consistent way to timestamp
records between databases.&lt;/p&gt;
&lt;p&gt;Your idea of using utc_timestamp() instead of now is a half
solution because it won't work if someone wants to use the
application with local times (maybe he/she is sharing some elements
of the db).&lt;/p&gt;
&lt;p&gt;Making sure 'default_timezone' is in sync with the database's
TIME_ZONE is really the way to go. There is no reason to have
different values for mysql TIME_ZONE and 'default_timezone'.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-16T08:11:21+00:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2009-02-16T08:11:22+00:00</updated-at>
      <user-id type="integer">4065</user-id>
      <version type="integer">5</version>
      <user-name>Gaspard Bucher</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1

I am having problems with this exact issue, that Mysql and Rails are set to different timezones. This patch looks useful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;I am having problems with this exact issue, that Mysql and Rails
are set to different timezones. This patch looks useful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-30T12:21:49+01:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2009-03-30T12:21:52+01:00</updated-at>
      <user-id type="integer">29926</user-id>
      <version type="integer">6</version>
      <user-name>Zac Zheng</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>It's still not clear to me what this would allow you to do that you can't do now. Can you give some specific use cases, e.g., &quot;I'm trying to do X but I can't&quot;?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's still not clear to me what this would allow you to do that
you can't do now. Can you give some specific use cases, e.g., &quot;I'm
trying to do X but I can't&quot;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-30T14:47:58+01:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2009-03-30T14:48:00+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">7</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I have two external DB (that i don't have control of) that are saving records in different timezones to each other and my own database.  So times aren't in sync, having a configuration option to set a TZ for each db would correct this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have two external DB (that i don't have control of) that are
saving records in different timezones to each other and my own
database. So times aren't in sync, having a configuration option to
set a TZ for each db would correct this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-12T10:21:58+01:00</created-at>
      <creator-id type="integer">4065</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1964</number>
      <permalink>patch-mysql-time_zone-should-reflect-default_timezone</permalink>
      <priority type="integer">1219</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>mysql timezone</tag>
      <title>[patch] mysql time_zone should reflect default_timezone</title>
      <updated-at type="datetime">2010-09-12T10:22:03+01:00</updated-at>
      <user-id type="integer">115450</user-id>
      <version type="integer">8</version>
      <user-name>gzminiz</user-name>
      <creator-name>Gaspard Bucher</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1964</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d07811b94f9249adef8507e49be967cab4e7d8bd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-13T22:34:52+00:00</created-at>
      <filename>mysql_connection_timezone.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">88764</id>
      <size type="integer">1149</size>
      <uploader-id type="integer">4065</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/88764/mysql_connection_timezone.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>62b3858714ddcd53978f6575585c27bebdd55a7e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-15T09:29:29+00:00</created-at>
      <filename>mysql_timezone_configuration_option.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">88952</id>
      <size type="integer">1844</size>
      <uploader-id type="integer">4065</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/88952/mysql_timezone_configuration_option.diff</url>
    </attachment>
  </attachments>
</ticket>
