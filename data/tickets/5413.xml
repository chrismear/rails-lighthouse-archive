<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-19T21:07:15+01:00</created-at>
  <creator-id type="integer">112342</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5413</number>
  <permalink>overactive-block-helper-deprecation-warning-when-iterating-on-an-activemodelerrors-object</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>active_modelerrors block-style deprecation erb</tag>
  <title>Overactive block helper deprecation warning when iterating on an ActiveModel::Errors object</title>
  <updated-at type="datetime">2011-03-24T00:01:45+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>Elliot Crosby-McCullough</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5413</url>
  <priority-name nil="true"></priority-name>
  <original-body>During the switch over from `&lt;%` style block helpers to `&lt;%=` style something appears to have gone awry.

In the following ERB, the `flash.each_pair` line does not generate a deprecation warning, however the `messages.each_pair` line does.

@@@
    &lt;% flash.each_pair do |flash_type, messages| %&gt;
      &lt;ul class=&quot;&lt;% flash_type %&gt; flash&quot;&gt;
        &lt;% messages.each do |_, message| %&gt;
          &lt;li&gt;&lt;%= message %&gt;&lt;/li&gt;
        &lt;% end %&gt;
      &lt;/ul&gt;
    &lt;% end %&gt;
@@@

At this point, `flash` is (I assume) a standard hash, at least whatever Rails provides, whereas `messages` is an ActiveModel::Errors object.

Since ActiveModel::Errors#each yields, it's correct to use the old-style block notation.  Any return value is undefined (and its output unwanted).  Unfortunately, Rails emits a deprecation warning for this object.

This behaviour is identical for ERB and Haml.

Regards,
Elliot Crosby-McCullough</original-body>
  <latest-body>During the switch over from `&lt;%` style block helpers to `&lt;%=` style something appears to have gone awry.

In the following ERB, the `flash.each_pair` line does not generate a deprecation warning, however the `messages.each_pair` line does.

@@@
    &lt;% flash.each_pair do |flash_type, messages| %&gt;
      &lt;ul class=&quot;&lt;% flash_type %&gt; flash&quot;&gt;
        &lt;% messages.each do |_, message| %&gt;
          &lt;li&gt;&lt;%= message %&gt;&lt;/li&gt;
        &lt;% end %&gt;
      &lt;/ul&gt;
    &lt;% end %&gt;
@@@

At this point, `flash` is (I assume) a standard hash, at least whatever Rails provides, whereas `messages` is an ActiveModel::Errors object.

Since ActiveModel::Errors#each yields, it's correct to use the old-style block notation.  Any return value is undefined (and its output unwanted).  Unfortunately, Rails emits a deprecation warning for this object.

This behaviour is identical for ERB and Haml.

Regards,
Elliot Crosby-McCullough</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;During the switch over from &lt;code&gt;&amp;lt;%&lt;/code&gt; style block
helpers to &lt;code&gt;&amp;lt;%=&lt;/code&gt; style something appears to have gone
awry.&lt;/p&gt;
&lt;p&gt;In the following ERB, the &lt;code&gt;flash.each_pair&lt;/code&gt; line does
not generate a deprecation warning, however the
&lt;code&gt;messages.each_pair&lt;/code&gt; line does.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    &amp;lt;% flash.each_pair do |flash_type, messages| %&amp;gt;
      &amp;lt;ul class=&quot;&amp;lt;% flash_type %&amp;gt; flash&quot;&amp;gt;
        &amp;lt;% messages.each do |_, message| %&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;%= message %&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;% end %&amp;gt;
      &amp;lt;/ul&amp;gt;
    &amp;lt;% end %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At this point, &lt;code&gt;flash&lt;/code&gt; is (I assume) a standard hash,
at least whatever Rails provides, whereas &lt;code&gt;messages&lt;/code&gt; is
an ActiveModel::Errors object.&lt;/p&gt;
&lt;p&gt;Since ActiveModel::Errors#each yields, it's correct to use the
old-style block notation. Any return value is undefined (and its
output unwanted). Unfortunately, Rails emits a deprecation warning
for this object.&lt;/p&gt;
&lt;p&gt;This behaviour is identical for ERB and Haml.&lt;/p&gt;
&lt;p&gt;Regards,&lt;br&gt;
Elliot Crosby-McCullough&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>During the switch over from `&lt;%` style block helpers to `&lt;%=` style something appears to have gone awry.

In the following ERB, the `flash.each_pair` line does not generate a deprecation warning, however the `messages.each_pair` line does.

@@@
    &lt;% flash.each_pair do |flash_type, messages| %&gt;
      &lt;ul class=&quot;&lt;% flash_type %&gt; flash&quot;&gt;
        &lt;% messages.each do |_, message| %&gt;
          &lt;li&gt;&lt;%= message %&gt;&lt;/li&gt;
        &lt;% end %&gt;
      &lt;/ul&gt;
    &lt;% end %&gt;
@@@

At this point, `flash` is (I assume) a standard hash, at least whatever Rails provides, whereas `messages` is an ActiveModel::Errors object.

Since ActiveModel::Errors#each yields, it's correct to use the old-style block notation.  Any return value is undefined (and its output unwanted).  Unfortunately, Rails emits a deprecation warning for this object.

This behaviour is identical for ERB and Haml.

Regards,
Elliot Crosby-McCullough</body>
      <body-html>&lt;div&gt;&lt;p&gt;During the switch over from &lt;code&gt;&amp;lt;%&lt;/code&gt; style block
helpers to &lt;code&gt;&amp;lt;%=&lt;/code&gt; style something appears to have gone
awry.&lt;/p&gt;
&lt;p&gt;In the following ERB, the &lt;code&gt;flash.each_pair&lt;/code&gt; line does
not generate a deprecation warning, however the
&lt;code&gt;messages.each_pair&lt;/code&gt; line does.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    &amp;lt;% flash.each_pair do |flash_type, messages| %&amp;gt;
      &amp;lt;ul class=&quot;&amp;lt;% flash_type %&amp;gt; flash&quot;&amp;gt;
        &amp;lt;% messages.each do |_, message| %&amp;gt;
          &amp;lt;li&amp;gt;&amp;lt;%= message %&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;% end %&amp;gt;
      &amp;lt;/ul&amp;gt;
    &amp;lt;% end %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At this point, &lt;code&gt;flash&lt;/code&gt; is (I assume) a standard hash,
at least whatever Rails provides, whereas &lt;code&gt;messages&lt;/code&gt; is
an ActiveModel::Errors object.&lt;/p&gt;
&lt;p&gt;Since ActiveModel::Errors#each yields, it's correct to use the
old-style block notation. Any return value is undefined (and its
output unwanted). Unfortunately, Rails emits a deprecation warning
for this object.&lt;/p&gt;
&lt;p&gt;This behaviour is identical for ERB and Haml.&lt;/p&gt;
&lt;p&gt;Regards,&lt;br&gt;
Elliot Crosby-McCullough&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T21:07:15+01:00</created-at>
      <creator-id type="integer">112342</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5413</number>
      <permalink>overactive-block-helper-deprecation-warning-when-iterating-on-an-activemodelerrors-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_modelerrors block-style deprecation erb</tag>
      <title>Overactive block helper deprecation warning when iterating on an ActiveModel::Errors object</title>
      <updated-at type="datetime">2010-08-19T21:07:18+01:00</updated-at>
      <user-id type="integer">112342</user-id>
      <version type="integer">1</version>
      <user-name>Elliot Crosby-McCullough</user-name>
      <creator-name>Elliot Crosby-McCullough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5413</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am seeing something similar,

If I have a content_for block, with an if statement inside,
when the if statement fails I get the deprecation warning.

If I change the if statement to the following:

&lt;% content_for :something %&gt;

&lt;% if sunny? %&gt;
  say hello
&lt;% else %&gt;
  
&lt;% end %&gt;

&lt;% end %&gt;

The warning goes away.

Seems a plain old tab character will do the trick.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am seeing something similar,&lt;/p&gt;
&lt;p&gt;If I have a content_for block, with an if statement inside,&lt;br&gt;
when the if statement fails I get the deprecation warning.&lt;/p&gt;
&lt;p&gt;If I change the if statement to the following:&lt;/p&gt;
&lt;p&gt;&amp;lt;% content_for :something %&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;% if sunny? %&amp;gt;&lt;br&gt;
say hello &amp;lt;% else %&amp;gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;% end %&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;% end %&amp;gt;&lt;/p&gt;
&lt;p&gt;The warning goes away.&lt;/p&gt;
&lt;p&gt;Seems a plain old tab character will do the trick.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-23T21:46:55+00:00</created-at>
      <creator-id type="integer">112342</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5413</number>
      <permalink>overactive-block-helper-deprecation-warning-when-iterating-on-an-activemodelerrors-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_modelerrors block-style deprecation erb</tag>
      <title>Overactive block helper deprecation warning when iterating on an ActiveModel::Errors object</title>
      <updated-at type="datetime">2010-12-23T21:47:01+00:00</updated-at>
      <user-id type="integer">37842</user-id>
      <version type="integer">2</version>
      <user-name>Brent Greeff</user-name>
      <creator-name>Elliot Crosby-McCullough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5413</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T00:00:09+00:00</created-at>
      <creator-id type="integer">112342</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5413</number>
      <permalink>overactive-block-helper-deprecation-warning-when-iterating-on-an-activemodelerrors-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_modelerrors block-style deprecation erb</tag>
      <title>Overactive block helper deprecation warning when iterating on an ActiveModel::Errors object</title>
      <updated-at type="datetime">2011-03-24T00:01:45+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Elliot Crosby-McCullough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5413</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-24T00:00:10+00:00</created-at>
      <creator-id type="integer">112342</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5413</number>
      <permalink>overactive-block-helper-deprecation-warning-when-iterating-on-an-activemodelerrors-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>active_modelerrors block-style deprecation erb</tag>
      <title>Overactive block helper deprecation warning when iterating on an ActiveModel::Errors object</title>
      <updated-at type="datetime">2011-03-24T00:00:20+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Elliot Crosby-McCullough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5413</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
