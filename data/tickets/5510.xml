<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-31T10:13:36+01:00</created-at>
  <creator-id type="integer">94575</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5510</number>
  <permalink>polymorphic-routes-as-polymorphic_name</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Polymorphic routes, :as =&gt; &quot;polymorphic_name&quot;</title>
  <updated-at type="datetime">2010-08-31T14:05:10+01:00</updated-at>
  <user-id type="integer">94575</user-id>
  <version type="integer">4</version>
  <user-name>ifesdjeen</user-name>
  <creator-name>ifesdjeen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5510</url>
  <priority-name>Low</priority-name>
  <original-body>Polymorphic routes problem:

Given I have 2 models:
1) User (has_many messages)
2) Message (belongs_to user), which is polymorphic. It may be received_messages and sent_messages through the intermediate table.

And 3 controllers:
1) UserController
2) ReceivedMessagesController
3) SentMessagesController

If I'm trying to use usual polymorphic _path helpers, user_messages url is received, instead of user_sent_messages. But it doesn't even exist. I use polymorphic controllers along with polymorphic models.

Suggestion is to add :as to polymorphic url helpers, and allow not only edit and new but also index to be accessible. Attached it a gist with diff. Not tested yet. If anyone has an idea how same thing could be implemented in a better way it would be very much appreciated

http://gist.github.com/558765</original-body>
  <latest-body>Polymorphic routes problem:

Given I have 2 models:
1) User (has_many messages)
2) Message (belongs_to user), which is polymorphic. It may be received_messages and sent_messages through the intermediate table.

And 3 controllers:
1) UserController
2) ReceivedMessagesController
3) SentMessagesController

If I'm trying to use usual polymorphic _path helpers, user_messages url is received, instead of user_sent_messages. But it doesn't even exist. I use polymorphic controllers along with polymorphic models.

Suggestion is to add :as to polymorphic url helpers, and allow not only edit and new but also index to be accessible. Attached it a gist with diff. Not tested yet. If anyone has an idea how same thing could be implemented in a better way it would be very much appreciated

http://gist.github.com/558765</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Polymorphic routes problem:&lt;/p&gt;
&lt;p&gt;Given I have 2 models:&lt;br&gt;
1) User (has_many messages)&lt;br&gt;
2) Message (belongs_to user), which is polymorphic. It may be
received_messages and sent_messages through the intermediate
table.&lt;/p&gt;
&lt;p&gt;And 3 controllers:&lt;br&gt;
1) UserController&lt;br&gt;
2) ReceivedMessagesController&lt;br&gt;
3) SentMessagesController&lt;/p&gt;
&lt;p&gt;If I'm trying to use usual polymorphic _path helpers,
user_messages url is received, instead of user_sent_messages. But
it doesn't even exist. I use polymorphic controllers along with
polymorphic models.&lt;/p&gt;
&lt;p&gt;Suggestion is to add :as to polymorphic url helpers, and allow
not only edit and new but also index to be accessible. Attached it
a gist with diff. Not tested yet. If anyone has an idea how same
thing could be implemented in a better way it would be very much
appreciated&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/558765&quot;&gt;http://gist.github.com/558765&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Polymorphic routes problem:

Given I have 2 models:
1) User (has_many messages)
2) Message (belongs_to user), which is polymorphic. It may be received_messages and sent_messages through the intermediate table.

And 3 controllers:
1) UserController
2) ReceivedMessagesController
3) SentMessagesController

If I'm trying to use usual polymorphic _path helpers, user_messages url is received, instead of user_sent_messages. But it doesn't even exist. I use polymorphic controllers along with polymorphic models.

Suggestion is to add :as to polymorphic url helpers, and allow not only edit and new but also index to be accessible. Attached it a gist with diff. Not tested yet. If anyone has an idea how same thing could be implemented in a better way it would be very much appreciated

http://gist.github.com/558765</body>
      <body-html>&lt;div&gt;&lt;p&gt;Polymorphic routes problem:&lt;/p&gt;
&lt;p&gt;Given I have 2 models:&lt;br&gt;
1) User (has_many messages)&lt;br&gt;
2) Message (belongs_to user), which is polymorphic. It may be
received_messages and sent_messages through the intermediate
table.&lt;/p&gt;
&lt;p&gt;And 3 controllers:&lt;br&gt;
1) UserController&lt;br&gt;
2) ReceivedMessagesController&lt;br&gt;
3) SentMessagesController&lt;/p&gt;
&lt;p&gt;If I'm trying to use usual polymorphic _path helpers,
user_messages url is received, instead of user_sent_messages. But
it doesn't even exist. I use polymorphic controllers along with
polymorphic models.&lt;/p&gt;
&lt;p&gt;Suggestion is to add :as to polymorphic url helpers, and allow
not only edit and new but also index to be accessible. Attached it
a gist with diff. Not tested yet. If anyone has an idea how same
thing could be implemented in a better way it would be very much
appreciated&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/558765&quot;&gt;http://gist.github.com/558765&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T10:13:36+01:00</created-at>
      <creator-id type="integer">94575</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5510</number>
      <permalink>polymorphic-routes-as-polymorphic_name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Polymorphic routes, :as =&gt; &quot;polymorphic_name&quot;</title>
      <updated-at type="datetime">2010-08-31T10:13:38+01:00</updated-at>
      <user-id type="integer">94575</user-id>
      <version type="integer">1</version>
      <user-name>ifesdjeen</user-name>
      <creator-name>ifesdjeen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5510</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The polymorphic_path helper is designed to build route names from the class name of the object passed to it with. Therefore if you pass it a message object then that's what it will use - it doesn't look at the application's routes, it just calls the route helper name that it builds from the arguments. You may want to look at refactoring your routes to something like this:

@@@ ruby
  # config/routes.rb
  resources :users do
    resources :messages, :except =&gt; :index do
      collection do
        get  :received
        get  :sent
        post :send
      end
      member do
        post :send
      end
    end
  end
@@@

Then in MessagesController you can implement the custom actions for received messages, sent messages and sending a message directly or after saving a draft. This way you can map the standard REST actions like new, create, edit, update to dealing with drafts. The destroy action would then either delete an unsent draft message or delete the link record from the appropriate table depending on whether it's a sent or received message.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The polymorphic_path helper is designed to build route names
from the class name of the object passed to it with. Therefore if
you pass it a message object then that's what it will use - it
doesn't look at the application's routes, it just calls the route
helper name that it builds from the arguments. You may want to look
at refactoring your routes to something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  # config/routes.rb
  resources :users do
    resources :messages, :except =&amp;gt; :index do
      collection do
        get  :received
        get  :sent
        post :send
      end
      member do
        post :send
      end
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then in MessagesController you can implement the custom actions
for received messages, sent messages and sending a message directly
or after saving a draft. This way you can map the standard REST
actions like new, create, edit, update to dealing with drafts. The
destroy action would then either delete an unsent draft message or
delete the link record from the appropriate table depending on
whether it's a sent or received message.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-31T13:31:41+01:00</created-at>
      <creator-id type="integer">94575</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5510</number>
      <permalink>polymorphic-routes-as-polymorphic_name</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Polymorphic routes, :as =&gt; &quot;polymorphic_name&quot;</title>
      <updated-at type="datetime">2010-08-31T13:31:45+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>ifesdjeen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5510</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks, Andrew, will try to do so</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks, Andrew, will try to do so&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-31T13:46:07+01:00</created-at>
      <creator-id type="integer">94575</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5510</number>
      <permalink>polymorphic-routes-as-polymorphic_name</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Polymorphic routes, :as =&gt; &quot;polymorphic_name&quot;</title>
      <updated-at type="datetime">2010-08-31T13:46:08+01:00</updated-at>
      <user-id type="integer">94575</user-id>
      <version type="integer">3</version>
      <user-name>ifesdjeen</user-name>
      <creator-name>ifesdjeen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5510</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>BTW, Andrew, it does look at the application routes, moreover it matches all arguments you pass.
Actually, what I was trying to implement, is also on top of Inherited Resources.

Inherited Resources is picking up child objects with polymorphic connections. 
The other problem I ran into in Rails itself, is that polymorphic_path([user, &quot;sent_messages&quot;]) generates an error, that's saying that :destroy action is missing for SentMessages controller, even though it's present in routes. It was caused by further check in Rails, that checks if the model is not persisted, it pops it out of the hash. And that produces an unmatched route.

What you say is completely valid, but letting 2 controllers to be polymorphic in a way, that's quite close to models polymorphic behavior, I may get a bit more out of it all.

Thank you for participation again</body>
      <body-html>&lt;div&gt;&lt;p&gt;BTW, Andrew, it does look at the application routes, moreover it
matches all arguments you pass.&lt;br&gt;
Actually, what I was trying to implement, is also on top of
Inherited Resources.&lt;/p&gt;
&lt;p&gt;Inherited Resources is picking up child objects with polymorphic
connections.&lt;br&gt;
The other problem I ran into in Rails itself, is that
polymorphic_path([user, &quot;sent_messages&quot;]) generates an error,
that's saying that :destroy action is missing for SentMessages
controller, even though it's present in routes. It was caused by
further check in Rails, that checks if the model is not persisted,
it pops it out of the hash. And that produces an unmatched
route.&lt;/p&gt;
&lt;p&gt;What you say is completely valid, but letting 2 controllers to
be polymorphic in a way, that's quite close to models polymorphic
behavior, I may get a bit more out of it all.&lt;/p&gt;
&lt;p&gt;Thank you for participation again&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-31T14:05:08+01:00</created-at>
      <creator-id type="integer">94575</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5510</number>
      <permalink>polymorphic-routes-as-polymorphic_name</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Polymorphic routes, :as =&gt; &quot;polymorphic_name&quot;</title>
      <updated-at type="datetime">2010-08-31T14:05:10+01:00</updated-at>
      <user-id type="integer">94575</user-id>
      <version type="integer">4</version>
      <user-name>ifesdjeen</user-name>
      <creator-name>ifesdjeen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5510</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
