<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-05T23:02:26+00:00</created-at>
  <creator-id type="integer">20594</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1521</number>
  <permalink>strings-that-end-in-class-are-not-properly-singularized</permalink>
  <priority type="integer">882</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>improvement inflections minor</tag>
  <title>Strings That End in class Are Not Properly Singularized</title>
  <updated-at type="datetime">2008-12-07T14:47:53+00:00</updated-at>
  <user-id type="integer">17477</user-id>
  <version type="integer">2</version>
  <user-name>Frederick Cheung</user-name>
  <creator-name>Seth Ladd</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1521</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is minor, but inflections.rb probably should have a case for strings that look like /^(.*)class$/ and perhaps even more generic as /^(.*)ss$/

Currently, calling &quot;event_class&quot;.singularize returns &quot;event_clas&quot;  Adding inflect.singular /^(.*)class$/, '\1class' fixes it.

I noticed that inflections.rb you already have a special case to handle trailing 'ss' : inflect.plural(/(x|ch|ss|sh)$/i, '\1es') inflect.singular(/(x|ch|ss|sh)es$/i, '\1')

but since most strings that already are singular are properly handled when calling singularize (&quot;foo&quot;.singularize returns &quot;foo&quot;) it probably makes sense to handle the case of &quot;class&quot;.singularize == &quot;class&quot;

Thanks</original-body>
  <latest-body>This is minor, but inflections.rb probably should have a case for strings that look like /^(.*)class$/ and perhaps even more generic as /^(.*)ss$/

Currently, calling &quot;event_class&quot;.singularize returns &quot;event_clas&quot;  Adding inflect.singular /^(.*)class$/, '\1class' fixes it.

I noticed that inflections.rb you already have a special case to handle trailing 'ss' : inflect.plural(/(x|ch|ss|sh)$/i, '\1es') inflect.singular(/(x|ch|ss|sh)es$/i, '\1')

but since most strings that already are singular are properly handled when calling singularize (&quot;foo&quot;.singularize returns &quot;foo&quot;) it probably makes sense to handle the case of &quot;class&quot;.singularize == &quot;class&quot;

Thanks</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is minor, but inflections.rb probably should have a case
for strings that look like /^(.&lt;em&gt;)class$/ and perhaps even more
generic as /^(.&lt;/em&gt;)ss$/&lt;/p&gt;
&lt;p&gt;Currently, calling &quot;event_class&quot;.singularize returns
&quot;event_clas&quot; Adding inflect.singular /^(.*)class$/, '\1class' fixes
it.&lt;/p&gt;
&lt;p&gt;I noticed that inflections.rb you already have a special case to
handle trailing 'ss' : inflect.plural(/(x|ch|ss|sh)$/i, '\1es')
inflect.singular(/(x|ch|ss|sh)es$/i, '\1')&lt;/p&gt;
&lt;p&gt;but since most strings that already are singular are properly
handled when calling singularize (&quot;foo&quot;.singularize returns &quot;foo&quot;)
it probably makes sense to handle the case of &quot;class&quot;.singularize
== &quot;class&quot;&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is minor, but inflections.rb probably should have a case for strings that look like /^(.*)class$/ and perhaps even more generic as /^(.*)ss$/

Currently, calling &quot;event_class&quot;.singularize returns &quot;event_clas&quot;  Adding inflect.singular /^(.*)class$/, '\1class' fixes it.

I noticed that inflections.rb you already have a special case to handle trailing 'ss' : inflect.plural(/(x|ch|ss|sh)$/i, '\1es') inflect.singular(/(x|ch|ss|sh)es$/i, '\1')

but since most strings that already are singular are properly handled when calling singularize (&quot;foo&quot;.singularize returns &quot;foo&quot;) it probably makes sense to handle the case of &quot;class&quot;.singularize == &quot;class&quot;

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is minor, but inflections.rb probably should have a case
for strings that look like /^(.&lt;em&gt;)class$/ and perhaps even more
generic as /^(.&lt;/em&gt;)ss$/&lt;/p&gt;
&lt;p&gt;Currently, calling &quot;event_class&quot;.singularize returns
&quot;event_clas&quot; Adding inflect.singular /^(.*)class$/, '\1class' fixes
it.&lt;/p&gt;
&lt;p&gt;I noticed that inflections.rb you already have a special case to
handle trailing 'ss' : inflect.plural(/(x|ch|ss|sh)$/i, '\1es')
inflect.singular(/(x|ch|ss|sh)es$/i, '\1')&lt;/p&gt;
&lt;p&gt;but since most strings that already are singular are properly
handled when calling singularize (&quot;foo&quot;.singularize returns &quot;foo&quot;)
it probably makes sense to handle the case of &quot;class&quot;.singularize
== &quot;class&quot;&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-05T23:02:26+00:00</created-at>
      <creator-id type="integer">20594</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1521</number>
      <permalink>strings-that-end-in-class-are-not-properly-singularized</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>improvement inflections minor</tag>
      <title>Strings That End in class Are Not Properly Singularized</title>
      <updated-at type="datetime">2008-12-05T23:02:29+00:00</updated-at>
      <user-id type="integer">20594</user-id>
      <version type="integer">1</version>
      <user-name>Seth Ladd</user-name>
      <creator-name>Seth Ladd</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1521</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>To quote [inflector.rb](http://github.com/rails/rails/tree/2-2-stable/activesupport/lib/active_support/inflector.rb):

&gt; The Rails core team has stated patches for the inflections library will not be accepted
&gt; in order to avoid breaking legacy applications which may be relying on errant inflections.
&gt; If you discover an incorrect inflection and require it for your application, you'll need
&gt; to correct it yourself (explained below).

Sorry!</body>
      <body-html>&lt;div&gt;&lt;p&gt;To quote &lt;a href=&quot;http://github.com/rails/rails/tree/2-2-stable/activesupport/lib/active_support/inflector.rb&quot;&gt;
inflector.rb&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Rails core team has stated patches for the inflections
library will not be accepted in order to avoid breaking legacy
applications which may be relying on errant inflections. If you
discover an incorrect inflection and require it for your
application, you'll need to correct it yourself (explained
below).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sorry!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-07T14:47:51+00:00</created-at>
      <creator-id type="integer">20594</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1521</number>
      <permalink>strings-that-end-in-class-are-not-properly-singularized</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>improvement inflections minor</tag>
      <title>Strings That End in class Are Not Properly Singularized</title>
      <updated-at type="datetime">2008-12-07T14:47:53+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Seth Ladd</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1521</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
