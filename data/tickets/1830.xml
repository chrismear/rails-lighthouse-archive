<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-31T22:19:29+00:00</created-at>
  <creator-id type="integer">29345</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1830</number>
  <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
  <priority type="integer">1117</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activesupport cache false fetch</tag>
  <title>Rails.cache.fetch does not work with false boolean as cached value</title>
  <updated-at type="datetime">2011-02-02T17:18:33+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">15</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Thijs de Vries</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>If I run
@@@ ruby
some_bool_value = Rails.cache.fetch(&quot;some_key&quot;) {expensive_function_returns_false()}
@@@
Rails will miss on the fetch every time. However if I do
@@@ ruby
if Rails.cache.exist?(&quot;some_key&quot;)
  some_bool_value = Rails.cache.read(&quot;some_key&quot;)
else
  some_bool_value = Rails.cache.write(&quot;some_key&quot;, expensive_function_returns_false())
end
@@@
I was looking at the code in rails / activesupport / lib / active_support / cache.rb and noticed on line 141 there is the following if statement:
@@@ ruby
if !options[:force] &amp;&amp; value = read(key, options)
@@@
value is set to false in the if statement, causing the condition to fail and miss. It would be better if value was read after the if statement and the if statement would be changed to 
@@@ ruby
if !options[:force] &amp;&amp; exist?(key)
@@@</original-body>
  <latest-body>If I run
@@@ ruby
some_bool_value = Rails.cache.fetch(&quot;some_key&quot;) {expensive_function_returns_false()}
@@@
Rails will miss on the fetch every time. However if I do
@@@ ruby
if Rails.cache.exist?(&quot;some_key&quot;)
  some_bool_value = Rails.cache.read(&quot;some_key&quot;)
else
  some_bool_value = Rails.cache.write(&quot;some_key&quot;, expensive_function_returns_false())
end
@@@
I was looking at the code in rails / activesupport / lib / active_support / cache.rb and noticed on line 141 there is the following if statement:
@@@ ruby
if !options[:force] &amp;&amp; value = read(key, options)
@@@
value is set to false in the if statement, causing the condition to fail and miss. It would be better if value was read after the if statement and the if statement would be changed to 
@@@ ruby
if !options[:force] &amp;&amp; exist?(key)
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If I run&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
some_bool_value = Rails.cache.fetch(&amp;quot;some_key&amp;quot;) {expensive_function_returns_false()}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rails will miss on the fetch every time. However if I do&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if Rails.cache.exist?(&amp;quot;some_key&amp;quot;)
  some_bool_value = Rails.cache.read(&amp;quot;some_key&amp;quot;)
else
  some_bool_value = Rails.cache.write(&amp;quot;some_key&amp;quot;, expensive_function_returns_false())
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I was looking at the code in rails / activesupport / lib /
active_support / cache.rb and noticed on line 141 there is the
following if statement:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if !options[:force] &amp;amp;&amp;amp; value = read(key, options)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;value is set to false in the if statement, causing the condition
to fail and miss. It would be better if value was read after the if
statement and the if statement would be changed to&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if !options[:force] &amp;amp;&amp;amp; exist?(key)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If I run
@@@ ruby
some_bool_value = Rails.cache.fetch(&quot;some_key&quot;) {expensive_function_returns_false()}
@@@
Rails will miss on the fetch every time. However if I do
@@@ ruby
if Rails.cache.exist?(&quot;some_key&quot;)
  some_bool_value = Rails.cache.read(&quot;some_key&quot;)
else
  some_bool_value = Rails.cache.write(&quot;some_key&quot;, expensive_function_returns_false())
end
@@@
The cache will miss the first time and than hit every time after that.
I was looking at the code in rails / activesupport / lib / active_support / cache.rb and noticed on line 141 there is the following if statement:
@@@ ruby
if !options[:force] &amp;&amp; value = read(key, options)
@@@
value is set to false in the if statement, causing the condition to fail and miss. It would be better if value was read after the if statement and the if statement would be changed to 
@@@ ruby
if !options[:force] &amp;&amp; exist?(key)
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;If I run&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
some_bool_value = Rails.cache.fetch(&amp;quot;some_key&amp;quot;) {expensive_function_returns_false()}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rails will miss on the fetch every time. However if I do&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if Rails.cache.exist?(&amp;quot;some_key&amp;quot;)
  some_bool_value = Rails.cache.read(&amp;quot;some_key&amp;quot;)
else
  some_bool_value = Rails.cache.write(&amp;quot;some_key&amp;quot;, expensive_function_returns_false())
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The cache will miss the first time and than hit every time after
that. I was looking at the code in rails / activesupport / lib /
active_support / cache.rb and noticed on line 141 there is the
following if statement:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if !options[:force] &amp;amp;&amp;amp; value = read(key, options)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;value is set to false in the if statement, causing the condition
to fail and miss. It would be better if value was read after the if
statement and the if statement would be changed to&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if !options[:force] &amp;amp;&amp;amp; exist?(key)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-31T22:19:30+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-01-31T22:20:28+00:00</updated-at>
      <user-id type="integer">29345</user-id>
      <version type="integer">1</version>
      <user-name>Thijs de Vries</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a patch that should do it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a patch that should do it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-31T22:32:09+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-01-31T22:32:15+00:00</updated-at>
      <user-id type="integer">29345</user-id>
      <version type="integer">2</version>
      <user-name>Thijs de Vries</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That last patch I sent caused some of the tests to fail.
This one won't fail any tests and allows for the new ones to pass.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That last patch I sent caused some of the tests to fail. This
one won't fail any tests and allows for the new ones to pass.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-31T23:34:28+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-01-31T23:34:32+00:00</updated-at>
      <user-id type="integer">29345</user-id>
      <version type="integer">3</version>
      <user-name>Thijs de Vries</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Won't this lead to a race condition? You have two calls to the separate cache to check for the same key. The key could have come and gone in between those two calls.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Won't this lead to a race condition? You have two calls to the
separate cache to check for the same key. The key could have come
and gone in between those two calls.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-05T20:01:40+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-02-05T20:01:44+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">4</version>
      <user-name>DHH</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Would it be better to have the following:

        if !options[:force] &amp;&amp; ((value = read(key, options)) != nil)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Would it be better to have the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    if !options[:force] &amp;amp;&amp;amp; ((value = read(key, options)) != nil)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-12T15:01:27+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-03-12T15:01:33+00:00</updated-at>
      <user-id type="integer">30625</user-id>
      <version type="integer">5</version>
      <user-name>Derek McLoughlin</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@@@ruby
if !options[:force] &amp;&amp; ((value = read(key, options)) != nil)
@@@
won't let you store nil as a value. In case a really expensive function returns nil, one may still wanna store nil so they don't have to run the really expensive function again. Probably have to work with thread locks to make this work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@@@ruby if !options[:force] &amp;amp;&amp;amp; ((value = read(key,
options)) != nil)&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
won't let you store nil as a value. In case a really expensive function returns nil, one may still wanna store nil so they don't have to run the really expensive function again. Probably have to work with thread locks to make this work.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-12T15:10:13+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-03-12T15:10:19+00:00</updated-at>
      <user-id type="integer">29345</user-id>
      <version type="integer">6</version>
      <user-name>Thijs de Vries</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>True, but nil is currently being used as meaning &quot;the thing isn't in the cache&quot;. The above solution works for cached values of 'false'.</body>
      <body-html>&lt;div&gt;&lt;p&gt;True, but nil is currently being used as meaning &quot;the thing
isn't in the cache&quot;. The above solution works for cached values of
'false'.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-13T16:17:18+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-03-13T16:17:24+00:00</updated-at>
      <user-id type="integer">30625</user-id>
      <version type="integer">7</version>
      <user-name>Derek McLoughlin</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>hey,
what happened to this?

The &quot;false&quot; case of this bit me and a colleague again this week.
Spent ages wondering why using memcache was even slower than hitting our DB.

So here is a patch, just to deal with the &quot;false&quot; case.

But I feel that there should be a more clever way to deal with a nil store.

Anyway,
here is my patch.

http://github.com/matthewrudy/rude-rails/commit/37d50e8e4d4eec27e0615cda0c6866c27d2b77dc</body>
      <body-html>&lt;div&gt;&lt;p&gt;hey,&lt;br&gt;
what happened to this?&lt;/p&gt;
&lt;p&gt;The &quot;false&quot; case of this bit me and a colleague again this
week.&lt;br&gt;
Spent ages wondering why using memcache was even slower than
hitting our DB.&lt;/p&gt;
&lt;p&gt;So here is a patch, just to deal with the &quot;false&quot; case.&lt;/p&gt;
&lt;p&gt;But I feel that there should be a more clever way to deal with a
nil store.&lt;/p&gt;
&lt;p&gt;Anyway,&lt;br&gt;
here is my patch.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/matthewrudy/rude-rails/commit/37d50e8e4d4eec27e0615cda0c6866c27d2b77dc&quot;&gt;
http://github.com/matthewrudy/rude-rails/commit/37d50e8e4d4eec27e06...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-28T18:09:37+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-11-28T18:09:41+00:00</updated-at>
      <user-id type="integer">18469</user-id>
      <version type="integer">8</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-28T22:17:38+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-11-28T22:17:40+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">9</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>living the dream!</body>
      <body-html>&lt;div&gt;&lt;p&gt;living the dream!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-29T02:05:40+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2009-11-29T02:05:41+00:00</updated-at>
      <user-id type="integer">18469</user-id>
      <version type="integer">10</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>my patch still works
http://github.com/matthewrudy/rude-rails/commit/6cb522c735d8fa9895b39fc0421583fd4e9f38e8

and I upped the patch
but now its a bit weird
(I think because of the rebase)</body>
      <body-html>&lt;div&gt;&lt;p&gt;my patch still works&lt;br&gt;
&lt;a href=
&quot;http://github.com/matthewrudy/rude-rails/commit/6cb522c735d8fa9895b39fc0421583fd4e9f38e8&quot;&gt;
http://github.com/matthewrudy/rude-rails/commit/6cb522c735d8fa9895b...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;and I upped the patch&lt;br&gt;
but now its a bit weird&lt;br&gt;
(I think because of the rebase)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-02T03:59:22+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2010-03-02T03:59:26+00:00</updated-at>
      <user-id type="integer">18469</user-id>
      <version type="integer">11</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:38+01:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2010-05-04T18:48:38+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">12</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Chris Kampmeier in #3482 appears to have come up with a patch that does not introduce a race condition.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Chris Kampmeier in &lt;a href=&quot;/projects/8994/tickets/3482&quot; title=
&quot;Ticket #3482&quot;&gt;#3482&lt;/a&gt; appears to have come up with a patch that
does not introduce a race condition.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-16T21:16:12+01:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2010-06-16T21:19:36+01:00</updated-at>
      <user-id type="integer">15047</user-id>
      <version type="integer">13</version>
      <user-name>W. Andrew Loe III</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:37:09+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">1117</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2011-02-02T17:18:33+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">14</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:37:10+00:00</created-at>
      <creator-id type="integer">29345</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1830</number>
      <permalink>railscachefetch-does-not-work-with-false-boolean-as-cached-value</permalink>
      <priority type="integer">1117</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activesupport cache false fetch</tag>
      <title>Rails.cache.fetch does not work with false boolean as cached value</title>
      <updated-at type="datetime">2011-02-02T17:18:04+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">15</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Thijs de Vries</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1830</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>81f5c85a1a738266de85316e3915e9318bec257a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-31T22:32:10+00:00</created-at>
      <filename>fetch_allow_false.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">83601</id>
      <size type="integer">957</size>
      <uploader-id type="integer">29345</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/83601/fetch_allow_false.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>525ba342fc257cd41a66c2506ce7dd4c0a530eaf</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-31T23:34:28+00:00</created-at>
      <filename>patch-with-tests.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">83604</id>
      <size type="integer">2010</size>
      <uploader-id type="integer">29345</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/83604/patch-with-tests.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>14ab213325265f348f2b6f4b5dd0eca7c4a41b3d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-11-28T18:09:37+00:00</created-at>
      <filename>make-cache-fetch-respect-false.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">335698</id>
      <size type="integer">2124</size>
      <uploader-id type="integer">18469</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/335698/make-cache-fetch-respect-false.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>70a32af451cd3dea284e37b8d4fea7de2c10adaa</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-03-02T03:59:22+00:00</created-at>
      <filename>make-cache-fetch-work-with-false.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">428314</id>
      <size type="integer">4253</size>
      <uploader-id type="integer">18469</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/428314/make-cache-fetch-work-with-false.patch</url>
    </attachment>
  </attachments>
</ticket>
