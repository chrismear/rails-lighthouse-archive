<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15783</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-01-29T13:33:21+00:00</created-at>
  <creator-id type="integer">15783</creator-id>
  <milestone-due-on type="datetime">2011-03-27T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">103410</milestone-id>
  <number type="integer">2946</number>
  <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
  <priority type="integer">4</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>active_record postgresql timezone</tag>
  <title>quoted_date converts time objects to default_timezone</title>
  <updated-at type="datetime">2011-04-20T11:28:18+01:00</updated-at>
  <user-id type="integer">39898</user-id>
  <version type="integer">37</version>
  <user-name>Espen Antonsen</user-name>
  <creator-name>Geoff Buesing</creator-name>
  <assigned-user-name>Geoff Buesing</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
  <milestone-title>3.0.6</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This patch adds functionality to ActiveRecord::ConnectionAdapters::Quoting#quoted_date so that Time and time-like objects are converted to ActiveRecord::Base.default_timezone before being sent to the database.

Currently, if ActiveRecord::Base.default_timezone == :utc (the Rails default as of 2.1), and you use Time.now in find conditions, ex:

@@@ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', Time.now]
@@@

...you'll create a query for a posted_at time that will be off by however many hours your system time zone differs from UTC. Given that Rails does automatic time zone conversions when reading and assigning model attributes, you'd expect that it would handle time zone conversions for you in find conditions (I've seen many reports of people being confused by this.)

To further confuse things, this query *will* work correctly with default_timezone == :utc:

@@@ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', 1.day.ago]
@@@

...but this one won't:

@@@ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', Time.now - 1.day]
@@@

This patch will fix this behavior, so that any time-like object passed in to find conditions will be sent to the database in the appropriate zone.

Another benefit of this patch: it will allow ActiveRecord time_zone_aware_attributes to be used with default_timezone == :local, a combination that doesn't work correctly right now. Tests still needed to confirm this.</original-body>
  <latest-body>This patch adds functionality to ActiveRecord::ConnectionAdapters::Quoting#quoted_date so that Time and time-like objects are converted to ActiveRecord::Base.default_timezone before being sent to the database.

Currently, if ActiveRecord::Base.default_timezone == :utc (the Rails default as of 2.1), and you use Time.now in find conditions, ex:

@@@ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', Time.now]
@@@

...you'll create a query for a posted_at time that will be off by however many hours your system time zone differs from UTC. Given that Rails does automatic time zone conversions when reading and assigning model attributes, you'd expect that it would handle time zone conversions for you in find conditions (I've seen many reports of people being confused by this.)

To further confuse things, this query *will* work correctly with default_timezone == :utc:

@@@ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', 1.day.ago]
@@@

...but this one won't:

@@@ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', Time.now - 1.day]
@@@

This patch will fix this behavior, so that any time-like object passed in to find conditions will be sent to the database in the appropriate zone.

Another benefit of this patch: it will allow ActiveRecord time_zone_aware_attributes to be used with default_timezone == :local, a combination that doesn't work correctly right now. Tests still needed to confirm this.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch adds functionality to
ActiveRecord::ConnectionAdapters::Quoting#quoted_date so that Time
and time-like objects are converted to
ActiveRecord::Base.default_timezone before being sent to the
database.&lt;/p&gt;
&lt;p&gt;Currently, if ActiveRecord::Base.default_timezone == :utc (the
Rails default as of 2.1), and you use Time.now in find conditions,
ex:&lt;/p&gt;
&lt;p&gt;@@@ruby Article.all :conditions =&amp;gt; ['posted_at &amp;lt; ?',
Time.now]&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

...you'll create a query for a posted_at time that will be off by however many hours your system time zone differs from UTC. Given that Rails does automatic time zone conversions when reading and assigning model attributes, you'd expect that it would handle time zone conversions for you in find conditions (I've seen many reports of people being confused by this.)

To further confuse things, this query *will* work correctly with default_timezone == :utc:

@@@ruby
Article.all :conditions =&amp;gt; ['posted_at &amp;lt; ?', 1.day.ago]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;...but this one won't:&lt;/p&gt;
&lt;p&gt;@@@ruby Article.all :conditions =&amp;gt; ['posted_at &amp;lt; ?',
Time.now - 1.day]&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

This patch will fix this behavior, so that any time-like object passed in to find conditions will be sent to the database in the appropriate zone.

Another benefit of this patch: it will allow ActiveRecord time_zone_aware_attributes to be used with default_timezone == :local, a combination that doesn't work correctly right now. Tests still needed to confirm this.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch adds functionality to ActiveRecord::ConnectionAdapters::Quoting#quoted_date so that Time and time-like objects are converted to ActiveRecord::Base.default_timezone before being sent to the database.

Currently, if ActiveRecord::Base.default_timezone == :utc (the Rails default as of 2.1), and you use Time.now in find conditions, ex:

@@@ ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', Time.now]
@@@

...you'll create a query for a posted_at time that will be off by however many hours your system time zone differs from UTC. Given that Rails does automatic time zone conversions when reading and assigning model attributes, you'd expect that it would handle time zone conversions for you in find conditions (I've seen many reports of people being confused by this.)

To further confuse things, this query *will* work correctly with default_timezone == :utc:

@@@ ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', 1.day.ago]
@@@

...but this one won't:

@@@ ruby
Article.all :conditions =&gt; ['posted_at &lt; ?', Time.now - 1.day]
@@@

This patch will fix this behavior, so that any time-like object passed in to find conditions will be sent to the database in the appropriate zone.

Another benefit of this patch: it will allow ActiveRecord time_zone_aware_attributes to be used with default_timezone == :local, a combination that doesn't work correctly right now. Tests still needed to confirm this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch adds functionality to
ActiveRecord::ConnectionAdapters::Quoting#quoted_date so that Time
and time-like objects are converted to
ActiveRecord::Base.default_timezone before being sent to the
database.&lt;/p&gt;
&lt;p&gt;Currently, if ActiveRecord::Base.default_timezone == :utc (the
Rails default as of 2.1), and you use Time.now in find conditions,
ex:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Article.all :conditions =&amp;gt; ['posted_at &amp;lt; ?', Time.now]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...you'll create a query for a posted_at time that will be off
by however many hours your system time zone differs from UTC. Given
that Rails does automatic time zone conversions when reading and
assigning model attributes, you'd expect that it would handle time
zone conversions for you in find conditions (I've seen many reports
of people being confused by this.)&lt;/p&gt;
&lt;p&gt;To further confuse things, this query &lt;em&gt;will&lt;/em&gt; work
correctly with default_timezone == :utc:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Article.all :conditions =&amp;gt; ['posted_at &amp;lt; ?', 1.day.ago]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...but this one won't:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Article.all :conditions =&amp;gt; ['posted_at &amp;lt; ?', Time.now - 1.day]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This patch will fix this behavior, so that any time-like object
passed in to find conditions will be sent to the database in the
appropriate zone.&lt;/p&gt;
&lt;p&gt;Another benefit of this patch: it will allow ActiveRecord
time_zone_aware_attributes to be used with default_timezone ==
:local, a combination that doesn't work correctly right now. Tests
still needed to confirm this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-24T04:23:39+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-24T04:24:33+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">1</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This seems reasonable to me,  it makes the query conversion match the input conversion right?

{{{

  n = Time.now
  @foo.bar = n
  @foo.save

  assert_equal @foo, Foo.find_by_bar(n)

}}}</body>
      <body-html>&lt;div&gt;&lt;p&gt;This seems reasonable to me, it makes the query conversion match
the input conversion right?&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;p&gt;n = Time.now @foo.bar = n @foo.save&lt;/p&gt;
&lt;p&gt;assert_equal @foo, Foo.find_by_bar(n)&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-24T05:09:54+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-24T05:09:55+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Big plus one from me as this recently bit me, the fixed behaviour makes much more sense.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Big plus one from me as this recently bit me, the fixed
behaviour makes much more sense.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-24T14:04:21+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-24T14:04:23+01:00</updated-at>
      <user-id type="integer">1741</user-id>
      <version type="integer">3</version>
      <user-name>Tekin</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah I've been bitten by that one as well. This is the behaviour I'd expect. +1.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah I've been bitten by that one as well. This is the behaviour
I'd expect. +1.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-25T09:18:24+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-25T09:18:25+01:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">4</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Alternatively, I'll just wait until winter when the clocks go forward. ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Alternatively, I'll just wait until winter when the clocks go
forward. ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-25T11:32:34+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-25T11:32:37+01:00</updated-at>
      <user-id type="integer">1741</user-id>
      <version type="integer">5</version>
      <user-name>Tekin</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm also fighting with this.

Agree with Tekin, we should just wait for the clocks to go forward and all will be well again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm also fighting with this.&lt;/p&gt;
&lt;p&gt;Agree with Tekin, we should just wait for the clocks to go
forward and all will be well again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-25T11:49:54+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-25T11:49:55+01:00</updated-at>
      <user-id type="integer">25421</user-id>
      <version type="integer">6</version>
      <user-name>Sam Oliver</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>So no objections, I say go for it geoff.</body>
      <body-html>&lt;div&gt;&lt;p&gt;So no objections, I say go for it geoff.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-26T22:21:54+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-26T22:21:56+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">7</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1.  I discovered the other day that if I have config.time_zone = 'Wellington', I need to explicitly convert my times using #utc before using them in certain conditions, or else they would be incorrectly expressed in the SQL - inconsistent with what we do elsewhere.

This patch removes the need for me to, and it doesn't fail the test for where I'm using the workaround either, so it looks good to me.  Tested against 2.3.</body>
      <body-html>&lt;div&gt;&lt;ol&gt;
&lt;li&gt;I discovered the other day that if I have config.time_zone =
'Wellington', I need to explicitly convert my times using #utc
before using them in certain conditions, or else they would be
incorrectly expressed in the SQL - inconsistent with what we do
elsewhere.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This patch removes the need for me to, and it doesn't fail the
test for where I'm using the workaround either, so it looks good to
me. Tested against 2.3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-27T12:43:26+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-27T12:43:30+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">8</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Great, thanks for the feedback, I'm going to write a few more tests around this, and then I'll pull it in.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great, thanks for the feedback, I'm going to write a few more
tests around this, and then I'll pull it in.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-27T13:44:07+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-27T13:44:12+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">9</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hmm, one thing that warrents note.  I tried this out in a second project and it did cause some spec failures.  The underlying problem is that String#to_time returns UTC by default -

&gt;&gt; Time.parse('2007-02-20 23:59:59')
=&gt; Tue Feb 20 23:59:59 +1300 2007
&gt;&gt; '2007-02-20 23:59:59'.to_time
=&gt; Tue Feb 20 23:59:59 UTC 2007
&gt;&gt; '2007-02-20 23:59:59'.to_time(:local)
=&gt; Tue Feb 20 23:59:59 +1300 2007

That's all fine.  However, if say you are running with no config.active_record.default_timezone - so the local db is in the local system time, as is the app - then if you ran #to_time on a string and used the result to initialize an attribute on a model, it would effectively be assumed to be already in the appropriate timezone, because the timezone conversion was not performed:

&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59')
=&gt; #&lt;MyModel id: 3, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 3, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59'.to_time)
=&gt; #&lt;MyModel id: 4, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 4, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;

This is wrong, but it seems pretty reasonable when you look at the above output.  What will happen with Geoff's patch applied looks like a bug:

&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59')
=&gt; #&lt;MyModel id: 1, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 1, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59'.to_time)
=&gt; #&lt;MyModel id: 2, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 2, some_datetime: &quot;2007-02-21 12:59:59&quot;&gt;

It's not though - it's now more consistent, but
1. You might assume otherwise, since the AR inspect format shows datetimes without a timezone, making it look like the time has changed on reload (it hasn't, it's just reported in a different timezone).
2. Anyone who's been misusing #to_time up till now will get regressions.

Time.parse already returns results in the local timezone by default, so no issue there - so I'm ok with this, I think people should be using Time.parse instead of String#to_time normally anyway.

But just wanted to get something in this ticket to help people confused by this breakage - and clarify that this patch doesn't only affect queries, it can also affect attribute writes in the (rare) case where you're parsing strings yourself using #to_time or any other function that returns times in a different timezone to the database timezone (itself rare, since most of us run the database in UTC, making this change have no behavioural impact).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hmm, one thing that warrents note. I tried this out in a second
project and it did cause some spec failures. The underlying problem
is that String#to_time returns UTC by default -&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Time.parse('2007-02-20 23:59:59') =&amp;gt; Tue Feb 20 23:59:59
+1300 2007 '2007-02-20 23:59:59'.to_time =&amp;gt; Tue Feb 20 23:59:59
UTC 2007 '2007-02-20 23:59:59'.to_time(:local) =&amp;gt; Tue Feb 20
23:59:59 +1300 2007&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;That's all fine. However, if say you are running with no
config.active_record.default_timezone - so the local db is in the
local system time, as is the app - then if you ran #to_time on a
string and used the result to initialize an attribute on a model,
it would effectively be assumed to be already in the appropriate
timezone, because the timezone conversion was not performed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;r = MyModel.create!(:some_datetime =&amp;gt; '2007-02-20 23:59:59')
=&amp;gt; # r.reload =&amp;gt; # r = MyModel.create!(:some_datetime =&amp;gt;
'2007-02-20 23:59:59'.to_time) =&amp;gt; # r.reload =&amp;gt; #&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is wrong, but it seems pretty reasonable when you look at
the above output. What will happen with Geoff's patch applied looks
like a bug:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;r = MyModel.create!(:some_datetime =&amp;gt; '2007-02-20 23:59:59')
=&amp;gt; # r.reload =&amp;gt; # r = MyModel.create!(:some_datetime =&amp;gt;
'2007-02-20 23:59:59'.to_time) =&amp;gt; # r.reload =&amp;gt; #&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's not though - it's now more consistent, but&lt;br&gt;
1. You might assume otherwise, since the AR inspect format shows
datetimes without a timezone, making it look like the time has
changed on reload (it hasn't, it's just reported in a different
timezone).&lt;br&gt;
2. Anyone who's been misusing #to_time up till now will get
regressions.&lt;/p&gt;
&lt;p&gt;Time.parse already returns results in the local timezone by
default, so no issue there - so I'm ok with this, I think people
should be using Time.parse instead of String#to_time normally
anyway.&lt;/p&gt;
&lt;p&gt;But just wanted to get something in this ticket to help people
confused by this breakage - and clarify that this patch doesn't
only affect queries, it can also affect attribute writes in the
(rare) case where you're parsing strings yourself using #to_time or
any other function that returns times in a different timezone to
the database timezone (itself rare, since most of us run the
database in UTC, making this change have no behavioural
impact).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-27T14:23:01+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-27T14:23:03+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">10</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Once again, with formatting:

Hmm, one thing that warrants note.  I tried this out in a second project and it did cause some spec failures.  The underlying problem is that String#to_time returns UTC by default -

@@@ ruby
&gt;&gt; Time.parse('2007-02-20 23:59:59')
=&gt; Tue Feb 20 23:59:59 +1300 2007
&gt;&gt; '2007-02-20 23:59:59'.to_time
=&gt; Tue Feb 20 23:59:59 UTC 2007
&gt;&gt; '2007-02-20 23:59:59'.to_time(:local)
=&gt; Tue Feb 20 23:59:59 +1300 2007
@@@

That's all fine.  However, if say you are running with no config.active_record.default_timezone - so the local db is in the local system time, as is the app - then if you ran #to_time on a string and used the result to initialize an attribute on a model, it would effectively be assumed to be already in the appropriate timezone, because the timezone conversion was not performed:

@@@ ruby
&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59')
=&gt; #&lt;MyModel id: 3, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 3, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59'.to_time)
=&gt; #&lt;MyModel id: 4, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 4, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
@@@

This is wrong, but it seems pretty reasonable when you look at the above output.  What will happen with Geoff's patch applied looks like a bug:

@@@ ruby
&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59')
=&gt; #&lt;MyModel id: 1, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 1, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r = MyModel.create!(:some_datetime =&gt; '2007-02-20 23:59:59'.to_time)
=&gt; #&lt;MyModel id: 2, some_datetime: &quot;2007-02-20 23:59:59&quot;&gt;
&gt;&gt; r.reload
=&gt; #&lt;MyModel id: 2, some_datetime: &quot;2007-02-21 12:59:59&quot;&gt;
@@@

It's not though - it's now more consistent, but
1. You might assume otherwise, since the AR inspect format shows datetimes without a timezone, making it look like the time has changed on reload (it hasn't, it's just reported in a different timezone).
2. Anyone who's been misusing #to_time up till now will get regressions.

Time.parse already returns results in the local timezone by default, so no issue there - so I'm ok with this, I think people should be using Time.parse instead of String#to_time normally anyway.

But just wanted to get something in this ticket to help people confused by this breakage - and clarify that this patch doesn't only affect queries, it can also affect attribute writes in the (rare) case where you're parsing strings yourself using #to_time or any other function that returns times in a different timezone to the database timezone (itself rare, since most of us run the database in UTC, making this change have no behavioural impact).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Once again, with formatting:&lt;/p&gt;
&lt;p&gt;Hmm, one thing that warrants note. I tried this out in a second
project and it did cause some spec failures. The underlying problem
is that String#to_time returns UTC by default -&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; Time.parse('2007-02-20 23:59:59')
=&amp;gt; Tue Feb 20 23:59:59 +1300 2007
&amp;gt;&amp;gt; '2007-02-20 23:59:59'.to_time
=&amp;gt; Tue Feb 20 23:59:59 UTC 2007
&amp;gt;&amp;gt; '2007-02-20 23:59:59'.to_time(:local)
=&amp;gt; Tue Feb 20 23:59:59 +1300 2007&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's all fine. However, if say you are running with no
config.active_record.default_timezone - so the local db is in the
local system time, as is the app - then if you ran #to_time on a
string and used the result to initialize an attribute on a model,
it would effectively be assumed to be already in the appropriate
timezone, because the timezone conversion was not performed:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt;&amp;gt; r = MyModel.create!(:some_datetime =&amp;gt; '2007-02-20 23:59:59')
=&amp;gt; #&amp;lt;MyModel id: 3, some_datetime: &quot;2007-02-20 23:59:59&quot;&amp;gt;
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;MyModel id: 3, some_datetime: &quot;2007-02-20 23:59:59&quot;&amp;gt;
&amp;gt;&amp;gt; r = MyModel.create!(:some_datetime =&amp;gt; '2007-02-20 23:59:59'.to_time)
=&amp;gt; #&amp;lt;MyModel id: 4, some_datetime: &quot;2007-02-20 23:59:59&quot;&amp;gt;
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;MyModel id: 4, some_datetime: &quot;2007-02-20 23:59:59&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is wrong, but it seems pretty reasonable when you look at
the above output. What will happen with Geoff's patch applied looks
like a bug:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt;&amp;gt; r = MyModel.create!(:some_datetime =&amp;gt; '2007-02-20 23:59:59')
=&amp;gt; #&amp;lt;MyModel id: 1, some_datetime: &quot;2007-02-20 23:59:59&quot;&amp;gt;
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;MyModel id: 1, some_datetime: &quot;2007-02-20 23:59:59&quot;&amp;gt;
&amp;gt;&amp;gt; r = MyModel.create!(:some_datetime =&amp;gt; '2007-02-20 23:59:59'.to_time)
=&amp;gt; #&amp;lt;MyModel id: 2, some_datetime: &quot;2007-02-20 23:59:59&quot;&amp;gt;
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;MyModel id: 2, some_datetime: &quot;2007-02-21 12:59:59&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It's not though - it's now more consistent, but&lt;br&gt;
1. You might assume otherwise, since the AR inspect format shows
datetimes without a timezone, making it look like the time has
changed on reload (it hasn't, it's just reported in a different
timezone).&lt;br&gt;
2. Anyone who's been misusing #to_time up till now will get
regressions.&lt;/p&gt;
&lt;p&gt;Time.parse already returns results in the local timezone by
default, so no issue there - so I'm ok with this, I think people
should be using Time.parse instead of String#to_time normally
anyway.&lt;/p&gt;
&lt;p&gt;But just wanted to get something in this ticket to help people
confused by this breakage - and clarify that this patch doesn't
only affect queries, it can also affect attribute writes in the
(rare) case where you're parsing strings yourself using #to_time or
any other function that returns times in a different timezone to
the database timezone (itself rare, since most of us run the
database in UTC, making this change have no behavioural
impact).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-27T14:25:40+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-27T14:25:43+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">11</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also, wanted to buy: accurate lighthouse list formatting instructions :|.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, wanted to buy: accurate lighthouse list formatting
instructions :|.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-27T14:26:43+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-27T14:26:49+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">12</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Will -- thanks for the report. Indeed, this change has the potential to break apps that use Time.utc and Time.local objects interchangeably when building find conditions, or, if time_zone_aware_attributes are turned off, assigning to model attributes.

Time#to_s(:db) doesn't do any zone conversion when it reports the time to the database, so you can currently get away with treating Time.utc and Time.local instances interchanegably:

@@@ ruby
&gt;&gt; Time.utc(2000).to_s(:db)
=&gt; &quot;2000-01-01 00:00:00&quot;
&gt;&gt; Time.local(2000).to_s(:db)
=&gt; &quot;2000-01-01 00:00:00&quot;
@@@

With this patch, Time.utc and Time.local report themselves in a zone appropriate manner (I'm adding in a #getutc call to illustrate coercion to default_timezone :utc):

@@@ ruby
&gt;&gt; Time.utc(2000).getutc.to_s(:db)
=&gt; &quot;2000-01-01 00:00:00&quot;
&gt;&gt; Time.local(2000).getutc.to_s(:db)
=&gt; &quot;2000-01-01 06:00:00&quot;
@@@

...which is more appropriate behavior, given that these two objects represent different times. Apps that treat them as the same will get breakage -- best we can do is, document this well. I'm putting together a Rails guide on time handling; I'll make sure add info about this as a potential gotcha.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Will -- thanks for the report. Indeed, this change has the
potential to break apps that use Time.utc and Time.local objects
interchangeably when building find conditions, or, if
time_zone_aware_attributes are turned off, assigning to model
attributes.&lt;/p&gt;
&lt;p&gt;Time#to_s(:db) doesn't do any zone conversion when it reports
the time to the database, so you can currently get away with
treating Time.utc and Time.local instances interchanegably:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; Time.utc(2000).to_s(:db)
=&amp;gt; &quot;2000-01-01 00:00:00&quot;
&amp;gt;&amp;gt; Time.local(2000).to_s(:db)
=&amp;gt; &quot;2000-01-01 00:00:00&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With this patch, Time.utc and Time.local report themselves in a
zone appropriate manner (I'm adding in a #getutc call to illustrate
coercion to default_timezone :utc):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; Time.utc(2000).getutc.to_s(:db)
=&amp;gt; &quot;2000-01-01 00:00:00&quot;
&amp;gt;&amp;gt; Time.local(2000).getutc.to_s(:db)
=&amp;gt; &quot;2000-01-01 06:00:00&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...which is more appropriate behavior, given that these two
objects represent different times. Apps that treat them as the same
will get breakage -- best we can do is, document this well. I'm
putting together a Rails guide on time handling; I'll make sure add
info about this as a potential gotcha.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-28T05:10:55+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-28T05:10:57+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">13</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah sounds good, thanks.

So, maybe this is a q for Koz - think this should land in 2.3 as well as 3.0?  I think the issue I mentioned is rare, so I wouldn't let that alone hold it back?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah sounds good, thanks.&lt;/p&gt;
&lt;p&gt;So, maybe this is a q for Koz - think this should land in 2.3 as
well as 3.0? I think the issue I mentioned is rare, so I wouldn't
let that alone hold it back?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-28T12:05:21+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-28T12:05:26+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">14</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm not 100% sure that it justifies a backport to 2-3-stable, but
could probably be convinced.

The behaviour has been present from the beginning, and dates and
timezones are ... tricky enough... to mean people are aware of this as
is?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not 100% sure that it justifies a backport to 2-3-stable,
but&lt;br&gt;
could probably be convinced.&lt;/p&gt;
&lt;p&gt;The behaviour has been present from the beginning, and dates
and&lt;br&gt;
timezones are ... tricky enough... to mean people are aware of this
as&lt;br&gt;
is?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-28T21:01:30+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-07-28T21:01:31+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">15</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [6f97ad07ded847f29159baf71050c63f04282170]) quoted_date converts time-like objects to ActiveRecord::Base.default_timezone before serialization. This allows you to use Time.now in find conditions and have it correctly be serialized as the current time in UTC when default_timezone == :utc [#2946 state:resolved]
http://github.com/rails/rails/commit/6f97ad07ded847f29159baf71050c63f04282170</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/6f97ad07ded847f29159baf71050c63f04282170&quot;
title=
&quot;Changeset [6f97ad07ded847f29159baf71050c63f04282170]&quot;&gt;[6f97ad07ded847f29159baf71050c63f04282170]&lt;/a&gt;)
quoted_date converts time-like objects to
ActiveRecord::Base.default_timezone before serialization. This
allows you to use Time.now in find conditions and have it correctly
be serialized as the current time in UTC when default_timezone ==
:utc [&lt;a href=&quot;/projects/8994/tickets/2946&quot; title=
&quot;Ticket #2946&quot;&gt;#2946&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/6f97ad07ded847f29159baf71050c63f04282170&quot;&gt;
http://github.com/rails/rails/commit/6f97ad07ded847f29159baf71050c6...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-04T04:04:47+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-08-04T04:04:48+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">16</version>
      <user-name>Repository</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah, we've fixed other timezone-handling bugs of similar magnitude in minor 2.x releases, so I'd vote for this to be applied to 2.3 too, personally.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, we've fixed other timezone-handling bugs of similar
magnitude in minor 2.x releases, so I'd vote for this to be applied
to 2.3 too, personally.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-04T11:50:59+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-08-04T11:51:04+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">17</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hello!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-04T13:36:09+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 15783
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-08-04T13:36:11+01:00</updated-at>
      <user-id type="integer">65064</user-id>
      <version type="integer">18</version>
      <user-name>r.s.seidler (at gmail)</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Already commented in github on this commit:

quoted_date will not change DateTime values local time zone if ActiveRecord::Base.default_timezone == :local
because DateTime objects do not have getlocal method (just getutc method).

Either this implementation should be changed or maybe ActiveSupport could add getlocal method to DateTime class (so that it would behave similar to Time class in this aspect).

Because of this issue test_saves_both_date_and_time in date_time_test.rb is not failing but should be failing (because DateTime UTC value is stored in database and then compared with local time zone Time value).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Already commented in github on this commit:&lt;/p&gt;
&lt;p&gt;quoted_date will not change DateTime values local time zone if
ActiveRecord::Base.default_timezone == :local&lt;br&gt;
because DateTime objects do not have getlocal method (just getutc
method).&lt;/p&gt;
&lt;p&gt;Either this implementation should be changed or maybe
ActiveSupport could add getlocal method to DateTime class (so that
it would behave similar to Time class in this aspect).&lt;/p&gt;
&lt;p&gt;Because of this issue test_saves_both_date_and_time in
date_time_test.rb is not failing but should be failing (because
DateTime UTC value is stored in database and then compared with
local time zone Time value).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-07T15:15:22+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-08-07T15:15:24+01:00</updated-at>
      <user-id type="integer">3839</user-id>
      <version type="integer">19</version>
      <user-name>Raimonds Simanovskis</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Raimonds Simanovskis -- thanks for catching this. Indeed, that's unexpected behavior, given that all other combinations of default_timezone and Time-like objects will do a conversion.

Makes sense to add a DateTime#getlocal method, so that conversion will occur.  test_saves_both_date_and_time should then be modified so that the now input value is in the proper local offset.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Raimonds Simanovskis -- thanks for catching this. Indeed,
that's unexpected behavior, given that all other combinations of
default_timezone and Time-like objects will do a conversion.&lt;/p&gt;
&lt;p&gt;Makes sense to add a DateTime#getlocal method, so that
conversion will occur. test_saves_both_date_and_time should then be
modified so that the now input value is in the proper local
offset.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-11T04:33:31+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-08-11T04:33:35+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">20</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-11T04:34:03+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 17477
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-08-11T04:34:05+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">21</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here is patch that I created (otherwise my Oracle enhanced adapter was failing on JRuby):

http://github.com/rsim/rails/commit/4ed223327c11b903904fd2bad8691c188a801d44</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is patch that I created (otherwise my Oracle enhanced
adapter was failing on JRuby):&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rsim/rails/commit/4ed223327c11b903904fd2bad8691c188a801d44&quot;&gt;
http://github.com/rsim/rails/commit/4ed223327c11b903904fd2bad8691c1...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-11T09:03:53+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2009-08-11T09:03:56+01:00</updated-at>
      <user-id type="integer">3839</user-id>
      <version type="integer">22</version>
      <user-name>Raimonds Simanovskis</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Any updates here?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Any updates here?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-03T07:47:59+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2010-08-03T07:48:01+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">23</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27625)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27625&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T04:10:30+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2010-08-30T04:10:31+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">24</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-15T23:01:34+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 82861
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2010-10-15T23:01:34+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">25</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/34353)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/34353&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T21:15:11+00:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 88038
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2010-11-15T21:15:11+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">26</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>00zoe
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT shoes&lt;/strong&gt;&lt;/a&gt;, Galin ang Na. 
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Timberland Boots Sale&lt;/strong&gt;&lt;/a&gt;, insulated boot and set. 
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face jacket&lt;/strong&gt;&lt;/a&gt;, have been the. 
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland boots&lt;/strong&gt;&lt;/a&gt;, &#32463;&#20856;1956. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;ugg boots sale&lt;/strong&gt;&lt;/a&gt;, qkl000. 
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland&lt;/strong&gt;&lt;/a&gt;, &#35199;&#38376;&#21561;&#38634;. 
&lt;a href=&quot;http://www.mbtclearance.org/&quot;&gt;&lt;strong&gt;MBT shoes clearance&lt;/strong&gt;&lt;/a&gt;, styles, sizes. 
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT shoes&lt;/strong&gt;&lt;/a&gt;, Galin ang Na. 
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT trainers&lt;/strong&gt;&lt;/a&gt;, boots sale online. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;cheap ugg boots uk&lt;/strong&gt;&lt;/a&gt;, making cutprice. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk/cheap-ugg-handbags-uk-c-23.html&quot;&gt;&lt;strong&gt;ugg handbags uk&lt;/strong&gt;&lt;/a&gt;, have not looked back.. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk/cheap-ugg-handbags-uk-c-23.html&quot;&gt;&lt;strong&gt;cheap ugg handbags&lt;/strong&gt;&lt;/a&gt;, The result was the. 
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT lami shoes&lt;/strong&gt;&lt;/a&gt;, We have a long term. 
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT tunisha&lt;/strong&gt;&lt;/a&gt;, cooperative manufacturer. 
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland boots sale&lt;/strong&gt;&lt;/a&gt;, The source of. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk/ugg-boots-sale-gissella-c-18.html&quot;&gt;&lt;strong&gt;ugg gissella&lt;/strong&gt;&lt;/a&gt;, &#24680;&#22312;&#20170;&#22825;&#25165;&#30456;&#36935;. 
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face outlet&lt;/strong&gt;&lt;/a&gt;, now timberland boots. 
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland roll top&lt;/strong&gt;&lt;/a&gt;, footwear. They. 
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland chukka&lt;/strong&gt;&lt;/a&gt;, &#31505;&#19977;&#23569;. 
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Cheap Timberland Boots&lt;/strong&gt;&lt;/a&gt;, &#21326;&#20180; a subsidiary. 
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Waterproof Boots&lt;/strong&gt;&lt;/a&gt;, Timberland. By 1978 more. 
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland Boots&lt;/strong&gt;&lt;/a&gt;, &#21338;&#23458;. 
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT UK&lt;/strong&gt;&lt;/a&gt;, Nothing to worry. 
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland UK&lt;/strong&gt;&lt;/a&gt;, ak11-. 
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland outlet&lt;/strong&gt;&lt;/a&gt;, myaifeili. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;ugg boots sale uk&lt;/strong&gt;&lt;/a&gt;, asisi. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;cheap ugg boots&lt;/strong&gt;&lt;/a&gt;, mercury. 
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Timberland Boots UK&lt;/strong&gt;&lt;/a&gt;, to produce it, under. 
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Timberland Boots&lt;/strong&gt;&lt;/a&gt;, &#22914;&#26085; the brand name. 
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Cheap Timberland Boots&lt;/strong&gt;&lt;/a&gt;, ak22-. 
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk/cheap-ugg-handbags-uk-c-23.html&quot;&gt;&lt;strong&gt;ugg handbags sale&lt;/strong&gt;&lt;/a&gt;, dry in Timberlands. And. 
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face boots sale&lt;/strong&gt;&lt;/a&gt;, on the Internet.. 
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face jacket sale&lt;/strong&gt;&lt;/a&gt;, in a river, and your. 
&lt;a href=&quot;http://www.bootsue.com/mbt-shoes-clearance-sale-c-5.html&quot;&gt;&lt;strong&gt;MBT shoes clearance&lt;/strong&gt;&lt;/a&gt;, can steadily. 
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT shoes UK&lt;/strong&gt;&lt;/a&gt;, &#28023;&#23376; 1990. 
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT sale&lt;/strong&gt;&lt;/a&gt;, about, you could. 
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;cheap timberland boots&lt;/strong&gt;&lt;/a&gt;, timberland is. 
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberlands&lt;/strong&gt;&lt;/a&gt;, an offshoot.</body>
      <body-html>&lt;div&gt;&lt;p&gt;00zoe&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT
shoes&lt;/strong&gt;&lt;/a&gt;, Galin ang Na.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Timberland
Boots Sale&lt;/strong&gt;&lt;/a&gt;, insulated boot and set.&lt;br&gt;
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face
jacket&lt;/strong&gt;&lt;/a&gt;, have been the.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland
boots&lt;/strong&gt;&lt;/a&gt;, &amp;#32463;&amp;#20856;1956.&lt;br&gt;
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;ugg boots
sale&lt;/strong&gt;&lt;/a&gt;, qkl000.&lt;br&gt;
&lt;a href=
&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland&lt;/strong&gt;&lt;/a&gt;,
&amp;#35199;&amp;#38376;&amp;#21561;&amp;#38634;.&lt;br&gt;
&lt;a href=&quot;http://www.mbtclearance.org/&quot;&gt;&lt;strong&gt;MBT shoes
clearance&lt;/strong&gt;&lt;/a&gt;, styles, sizes.&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT
shoes&lt;/strong&gt;&lt;/a&gt;, Galin ang Na.&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT
trainers&lt;/strong&gt;&lt;/a&gt;, boots sale online.&lt;br&gt;
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;cheap ugg
boots uk&lt;/strong&gt;&lt;/a&gt;, making cutprice.&lt;br&gt;
&lt;a href=
&quot;http://www.cheapuggbootssale.co.uk/cheap-ugg-handbags-uk-c-23.html&quot;&gt;
&lt;strong&gt;ugg handbags uk&lt;/strong&gt;&lt;/a&gt;, have not looked back..&lt;br&gt;
&lt;a href=
&quot;http://www.cheapuggbootssale.co.uk/cheap-ugg-handbags-uk-c-23.html&quot;&gt;
&lt;strong&gt;cheap ugg handbags&lt;/strong&gt;&lt;/a&gt;, The result was the.&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT lami
shoes&lt;/strong&gt;&lt;/a&gt;, We have a long term.&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT
tunisha&lt;/strong&gt;&lt;/a&gt;, cooperative manufacturer.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland
boots sale&lt;/strong&gt;&lt;/a&gt;, The source of.&lt;br&gt;
&lt;a href=
&quot;http://www.cheapuggbootssale.co.uk/ugg-boots-sale-gissella-c-18.html&quot;&gt;
&lt;strong&gt;ugg gissella&lt;/strong&gt;&lt;/a&gt;,
&amp;#24680;&amp;#22312;&amp;#20170;&amp;#22825;&amp;#25165;&amp;#30456;&amp;#36935;.&lt;br&gt;
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face
outlet&lt;/strong&gt;&lt;/a&gt;, now timberland boots.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland
roll top&lt;/strong&gt;&lt;/a&gt;, footwear. They.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberland
chukka&lt;/strong&gt;&lt;/a&gt;, &amp;#31505;&amp;#19977;&amp;#23569;.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Cheap
Timberland Boots&lt;/strong&gt;&lt;/a&gt;, &amp;#21326;&amp;#20180; a subsidiary.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Waterproof
Boots&lt;/strong&gt;&lt;/a&gt;, Timberland. By 1978 more.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland
Boots&lt;/strong&gt;&lt;/a&gt;, &amp;#21338;&amp;#23458;.&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT
UK&lt;/strong&gt;&lt;/a&gt;, Nothing to worry.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland
UK&lt;/strong&gt;&lt;/a&gt;, ak11-.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Timberland
outlet&lt;/strong&gt;&lt;/a&gt;, myaifeili.&lt;br&gt;
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;ugg boots sale
uk&lt;/strong&gt;&lt;/a&gt;, asisi.&lt;br&gt;
&lt;a href=&quot;http://www.cheapuggbootssale.co.uk&quot;&gt;&lt;strong&gt;cheap ugg
boots&lt;/strong&gt;&lt;/a&gt;, mercury.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Timberland
Boots UK&lt;/strong&gt;&lt;/a&gt;, to produce it, under.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots4sale.co.uk&quot;&gt;&lt;strong&gt;Timberland
Boots&lt;/strong&gt;&lt;/a&gt;, &amp;#22914;&amp;#26085; the brand name.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandboots2sale.co.uk&quot;&gt;&lt;strong&gt;Cheap
Timberland Boots&lt;/strong&gt;&lt;/a&gt;, ak22-.&lt;br&gt;
&lt;a href=
&quot;http://www.cheapuggbootssale.co.uk/cheap-ugg-handbags-uk-c-23.html&quot;&gt;
&lt;strong&gt;ugg handbags sale&lt;/strong&gt;&lt;/a&gt;, dry in Timberlands.
And.&lt;br&gt;
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face
boots sale&lt;/strong&gt;&lt;/a&gt;, on the Internet..&lt;br&gt;
&lt;a href=&quot;http://www.thenorthfaceoutlet.co.uk&quot;&gt;&lt;strong&gt;north face
jacket sale&lt;/strong&gt;&lt;/a&gt;, in a river, and your.&lt;br&gt;
&lt;a href=
&quot;http://www.bootsue.com/mbt-shoes-clearance-sale-c-5.html&quot;&gt;&lt;strong&gt;MBT
shoes clearance&lt;/strong&gt;&lt;/a&gt;, can steadily.&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT shoes
UK&lt;/strong&gt;&lt;/a&gt;, &amp;#28023;&amp;#23376; 1990.&lt;br&gt;
&lt;a href=&quot;http://www.mbtshoes4sale.co.uk&quot;&gt;&lt;strong&gt;MBT
sale&lt;/strong&gt;&lt;/a&gt;, about, you could.&lt;br&gt;
&lt;a href=&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;cheap
timberland boots&lt;/strong&gt;&lt;/a&gt;, timberland is.&lt;br&gt;
&lt;a href=
&quot;http://www.timberlandbootsale.co.uk&quot;&gt;&lt;strong&gt;Timberlands&lt;/strong&gt;&lt;/a&gt;,
an offshoot.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-17T01:55:05+00:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2010-11-17T01:58:29+00:00</updated-at>
      <user-id type="integer">125438</user-id>
      <version type="integer">27</version>
      <user-name>zoery</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Geoff,

We too have been burned by this problem so I was happy to see it addressed here.  We also patched our copy of Rails to fix it. Initially our patch matched yours, in the quoted_value method.  But we still found it very surprising that

@@@ ruby
  Time.now.to_s(:db)
@@@

returned a string in system local time zone whereas

@@@ ruby
  Time.zone.now.to_s(:db)
@@@

returned a string in UTC.  This was a problem because we have methods that were using to_s(:db) and counting on the conversion to UTC to happen.  Given Ruby's duck typing, the callers could pass either Time or TimeWithZone and it would appear to work but yield wrong results.

So we decided to fix this problem at its root:  we patched active_support/core_ext/time/conversions.rb.  Currently in Rails 3.0.3 that reads like:

@@@ ruby
  def to_formatted_s(format = :default)
    if formatter = DATE_FORMATS[format]
      formatter.respond_to?(:call) ? formatter.call(self).to_s : strftime(formatter)
    else
      to_default_s
    end
  end
@@@

Here it is patched:

@@@ ruby
  def to_formatted_s(format = :default)
    if formatter = DATE_FORMATS[format]
      instance =
        if format == :db
          ActiveRecord::Base.default_timezone == :utc ? dup.utc : dup.localtime # avoid changing self by calling utc or localtime
        else
          self
        end
      formatter.respond_to?(:call) ? formatter.call(instance).to_s : instance.strftime(formatter)
    else
      to_default_s
    end
  end
@@@

I believe ActiveSupport shouldn't be coupled to ActiveRecord like this, so one last step would be to move that default_time_zone down to ActiveSupport with a pass-through accessor at the ActiveRecord level.

What do you think of this approach?  If it looks good I could submit a patch with tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Geoff,&lt;/p&gt;
&lt;p&gt;We too have been burned by this problem so I was happy to see it
addressed here. We also patched our copy of Rails to fix it.
Initially our patch matched yours, in the quoted_value method. But
we still found it very surprising that&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  Time.now.to_s(:db)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;returned a string in system local time zone whereas&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  Time.zone.now.to_s(:db)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;returned a string in UTC. This was a problem because we have
methods that were using to_s(:db) and counting on the conversion to
UTC to happen. Given Ruby's duck typing, the callers could pass
either Time or TimeWithZone and it would appear to work but yield
wrong results.&lt;/p&gt;
&lt;p&gt;So we decided to fix this problem at its root: we patched
active_support/core_ext/time/conversions.rb. Currently in Rails
3.0.3 that reads like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  def to_formatted_s(format = :default)
    if formatter = DATE_FORMATS[format]
      formatter.respond_to?(:call) ? formatter.call(self).to_s : strftime(formatter)
    else
      to_default_s
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here it is patched:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  def to_formatted_s(format = :default)
    if formatter = DATE_FORMATS[format]
      instance =
        if format == :db
          ActiveRecord::Base.default_timezone == :utc ? dup.utc : dup.localtime # avoid changing self by calling utc or localtime
        else
          self
        end
      formatter.respond_to?(:call) ? formatter.call(instance).to_s : instance.strftime(formatter)
    else
      to_default_s
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I believe ActiveSupport shouldn't be coupled to ActiveRecord
like this, so one last step would be to move that default_time_zone
down to ActiveSupport with a pass-through accessor at the
ActiveRecord level.&lt;/p&gt;
&lt;p&gt;What do you think of this approach? If it looks good I could
submit a patch with tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-05T00:53:21+00:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2010-12-05T00:53:49+00:00</updated-at>
      <user-id type="integer">78404</user-id>
      <version type="integer">28</version>
      <user-name>Colin Kelley</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;&lt;strong&gt;beats by dre ferrari limitd edittion&lt;/strong&gt;&lt;/a&gt;| 
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;&lt;strong&gt;ferrari dre&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;&lt;strong&gt;ferrari Limited Edition Monster Beats by Dre Studio Headphones&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;&lt;strong&gt;ferrari dr dre headphones&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;&lt;strong&gt;dr dre studio ferrari&lt;/strong&gt;&lt;/a&gt;| 
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;&lt;strong&gt;monster beats headphones dr dre kobe edition&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;&lt;strong&gt;monster beats by dr dre studio headphones Kobe Bryant&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;&lt;strong&gt;monster beats by dr dre Kobe&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;&lt;strong&gt;koby bryant headphones&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;&lt;strong&gt;koby beats by dre pricing&lt;/strong&gt;&lt;/a&gt;| 
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;&lt;strong&gt;black and yellow beats by dre&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;&lt;strong&gt;beats by dre black and yellow&lt;/strong&gt;&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;beats by dre solo black and yellow&lt;/a&gt;|  
&lt;a href=&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;&lt;strong&gt;beats by dre lamborghini&lt;/strong&gt;&lt;/a&gt;|</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;
&lt;strong&gt;beats by dre ferrari limitd edittion&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;
&lt;strong&gt;ferrari dre&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;
&lt;strong&gt;ferrari Limited Edition Monster Beats by Dre Studio
Headphones&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;
&lt;strong&gt;ferrari dr dre headphones&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-by-dre-studio-headphones-ferrarilimited-edition-p-17.html&quot;&gt;
&lt;strong&gt;dr dre studio ferrari&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;
&lt;strong&gt;monster beats headphones dr dre kobe
edition&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;
&lt;strong&gt;monster beats by dr dre studio headphones Kobe
Bryant&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;
&lt;strong&gt;monster beats by dr dre Kobe&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;
&lt;strong&gt;koby bryant headphones&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-studio-kobe-bryant-limited-edition-headphones-p-16.html&quot;&gt;
&lt;strong&gt;koby beats by dre pricing&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;
&lt;strong&gt;black and yellow beats by dre&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;
&lt;strong&gt;beats by dre black and yellow&lt;/strong&gt;&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;
beats by dre solo black and yellow&lt;/a&gt;|&lt;br&gt;
&lt;a href=
&quot;http://www.beatsbydr-dre.com/monster-beats-lamboghini-studio-headphones-limited-yellow-p-15.html&quot;&gt;
&lt;strong&gt;beats by dre lamborghini&lt;/strong&gt;&lt;/a&gt;|&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-19T02:51:36+00:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-01-29T13:33:21+00:00</updated-at>
      <user-id type="integer">133191</user-id>
      <version type="integer">29</version>
      <user-name>beats by dr. dre</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/42275)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/42275&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T21:58:20+00:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 92071
</diffable-attributes>
      <milestone-id type="integer">101623</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-02-12T21:58:20+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">30</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.5</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/43692)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/43692&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-27T03:15:37+00:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 101623
</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-02-27T03:15:37+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">31</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Colin, I agree that passing the timezone setting down from activerecord to activesupport would be a much better approach (if #to_s needs to know about this at all).

Activesupport could/should ship without a :db format at all, and activerecord should add this format using the proc support already present, doing the necessary timezone conversion in the proc before calling the normal strftime.

Still not entirely convinced we need to do all this, since quoted_date and friends are actually used for any query stuff now, but at least it'd unbreak Rails 2 upgraders who have non-UTC databases.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Colin, I agree that passing the timezone setting down from
activerecord to activesupport would be a much better approach (if
#to_s needs to know about this at all).&lt;/p&gt;
&lt;p&gt;Activesupport could/should ship without a :db format at all, and
activerecord should add this format using the proc support already
present, doing the necessary timezone conversion in the proc before
calling the normal strftime.&lt;/p&gt;
&lt;p&gt;Still not entirely convinced we need to do all this, since
quoted_date and friends are actually used for any query stuff now,
but at least it'd unbreak Rails 2 upgraders who have non-UTC
databases.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-12T11:51:43+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-04-12T11:52:20+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">32</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Will,


&gt; Activesupport could/should ship without a :db format at all, and activerecord should add this format using the proc support already present, doing the necessary timezone conversion in the proc before calling the normal strftime.


I agree that shipping ActiveSupport without a :db format and then overriding it at the ActiveRecord level would work too.

The tie-breaker would probably be whether anyone who just uses ActiveSupport finds the :db format useful, or whether very many are using it already.  Both seem like decent possibilities to me.


&gt; Still not entirely convinced we need to do all this, since quoted_date and friends are actually used for any query stuff now, but at least it'd unbreak Rails 2 upgraders who have non-UTC databases.


I think it's important to do *something* because the current behavior violates the Principle of Least Surprise.  (I believe this principle is critical with duck typing since there is an implicit assumption in duck typing that methods with identical names accept the same parameters with the same calling contracts.  I guess overloading to_s() to take a parameter was already on this ice in this regard.)

Imagine a method write_to_file() that takes a timestamp parameter that it writes to the file in :db format.  It's really easy for calling code to be changed from this:

@@@ ruby
write_to_file(Time.now)
@@@

to this:

@@@ ruby
write_to_file(1.second.ago) # timestamp should always be in the past
@@@

How many would realize they just changed the parameter type from a Time to a TimeWithZone?

Currently making the change above causes time zone to shift unexpectedly, which you can't directly tell since the time zone is not included in the :db format.  You can waste a lot of time debugging this.  I know this from experience.  More than once in fact. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Will,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Activesupport could/should ship without a :db format at all, and
activerecord should add this format using the proc support already
present, doing the necessary timezone conversion in the proc before
calling the normal strftime.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I agree that shipping ActiveSupport without a :db format and
then overriding it at the ActiveRecord level would work too.&lt;/p&gt;
&lt;p&gt;The tie-breaker would probably be whether anyone who just uses
ActiveSupport finds the :db format useful, or whether very many are
using it already. Both seem like decent possibilities to me.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Still not entirely convinced we need to do all this, since
quoted_date and friends are actually used for any query stuff now,
but at least it'd unbreak Rails 2 upgraders who have non-UTC
databases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think it's important to do &lt;em&gt;something&lt;/em&gt; because the
current behavior violates the Principle of Least Surprise. (I
believe this principle is critical with duck typing since there is
an implicit assumption in duck typing that methods with identical
names accept the same parameters with the same calling contracts. I
guess overloading to_s() to take a parameter was already on this
ice in this regard.)&lt;/p&gt;
&lt;p&gt;Imagine a method write_to_file() that takes a timestamp
parameter that it writes to the file in :db format. It's really
easy for calling code to be changed from this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;write_to_file(Time.now)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;write_to_file(1.second.ago) # timestamp should always be in the past&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;How many would realize they just changed the parameter type from
a Time to a TimeWithZone?&lt;/p&gt;
&lt;p&gt;Currently making the change above causes time zone to shift
unexpectedly, which you can't directly tell since the time zone is
not included in the :db format. You can waste a lot of time
debugging this. I know this from experience. More than once in
fact. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-12T18:47:49+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-04-12T18:48:23+01:00</updated-at>
      <user-id type="integer">78404</user-id>
      <version type="integer">33</version>
      <user-name>Colin Kelley</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have been using this patch for so long I forgot I had it. Tried without it today and see that this is still not fixed in Rails 3.0.7. Is there a reason why this has not been implemented?
@@@ ruby 
ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.module_eval do
  def quoted_date(value)
    if value.acts_like?(:time) &amp;&amp; value.respond_to?(:usec)
      begin
        &quot;#{value.getutc.to_s(:db)}.#{sprintf(&quot;%06d&quot;, value.usec)} #{value.formatted_offset}&quot;
      rescue
        &quot;#{super}.#{sprintf(&quot;%06d&quot;, value.usec)}&quot;
      end
    else
      super
    end
  end
end
@@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have been using this patch for so long I forgot I had it.
Tried without it today and see that this is still not fixed in
Rails 3.0.7. Is there a reason why this has not been
implemented?&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.module_eval do
  def quoted_date(value)
    if value.acts_like?(:time) &amp;amp;&amp;amp; value.respond_to?(:usec)
      begin
        &quot;#{value.getutc.to_s(:db)}.#{sprintf(&quot;%06d&quot;, value.usec)} #{value.formatted_offset}&quot;
      rescue
        &quot;#{super}.#{sprintf(&quot;%06d&quot;, value.usec)}&quot;
      end
    else
      super
    end
  end
end
@@@@&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-20T09:39:45+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-04-20T09:40:16+01:00</updated-at>
      <user-id type="integer">39898</user-id>
      <version type="integer">34</version>
      <user-name>Espen Antonsen</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Person.where(:created_at =&gt; Time.zone.now).to_sql
 =&gt; &quot;SELECT \&quot;people\&quot;.* FROM \&quot;people\&quot; WHERE \&quot;people\&quot;.\&quot;created_at\&quot; = '2011-04-20 16:44:52.349977'&quot; 
Time.zone.now
 =&gt; Wed, 20 Apr 2011 10:44:57 CEST +02:00 
exit # apply override patch
Loading development environment (Rails 3.0.7)
Person.where(:created_at =&gt; Time.zone.now).to_sql
 =&gt; &quot;SELECT \&quot;people\&quot;.* FROM \&quot;people\&quot; WHERE \&quot;people\&quot;.\&quot;created_at\&quot; = '2011-04-20 08:45:16.063987 +02:00'&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Person.where(:created_at =&amp;gt; Time.zone.now).to_sql&lt;br&gt;
=&amp;gt; &quot;SELECT &quot;people&quot;. &lt;em&gt;FROM &quot;people&quot; WHERE
&quot;people&quot;.&quot;created_at&quot; = '2011-04-20 16:44:52.349977'&quot;
Time.zone.now&lt;br&gt;
=&amp;gt; Wed, 20 Apr 2011 10:44:57 CEST +02:00 exit # apply override
patch&lt;br&gt;
Loading development environment (Rails 3.0.7)&lt;br&gt;
Person.where(:created_at =&amp;gt; Time.zone.now).to_sql&lt;br&gt;
=&amp;gt; &quot;SELECT &quot;people&quot;.&lt;/em&gt; FROM &quot;people&quot; WHERE
&quot;people&quot;.&quot;created_at&quot; = '2011-04-20 08:45:16.063987 +02:00'&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-20T10:30:48+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-04-20T10:31:21+01:00</updated-at>
      <user-id type="integer">39898</user-id>
      <version type="integer">35</version>
      <user-name>Espen Antonsen</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-20T10:31:55+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record timezone
</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record postgresql timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-04-20T10:32:30+01:00</updated-at>
      <user-id type="integer">39898</user-id>
      <version type="integer">36</version>
      <user-name>Espen Antonsen</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Same bug? https://rails.lighthouseapp.com/projects/8994/tickets/1562-postgresql_adapter-include-time-zone-in-result-of-quoted_date</body>
      <body-html>&lt;div&gt;&lt;p&gt;Same bug? &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/1562-postgresql_adapter-include-time-zone-in-result-of-quoted_date&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/1562-postgres...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-20T11:27:45+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">2946</number>
      <permalink>quoted_date-converts-time-objects-to-default_timezone</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record postgresql timezone</tag>
      <title>quoted_date converts time objects to default_timezone</title>
      <updated-at type="datetime">2011-04-20T11:28:18+01:00</updated-at>
      <user-id type="integer">39898</user-id>
      <version type="integer">37</version>
      <user-name>Espen Antonsen</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2946</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0d8daac2cc43bd8df52a2a7bf77c3b46e834f77e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-07-24T04:23:39+01:00</created-at>
      <filename>quoted_date_with_zone_conversion.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">228496</id>
      <size type="integer">4701</size>
      <uploader-id type="integer">15783</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/228496/quoted_date_with_zone_conversion.diff</url>
    </attachment>
  </attachments>
</ticket>
