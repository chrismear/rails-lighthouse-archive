<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-09T19:36:02+00:00</created-at>
  <creator-id type="integer">140642</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6551</number>
  <permalink>calculationscount-ignores-order-with-offset</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Calculations#count ignores order with offset</title>
  <updated-at type="datetime">2011-03-09T19:45:27+00:00</updated-at>
  <user-id type="integer">43942</user-id>
  <version type="integer">2</version>
  <user-name>Dmitry Ratnikov</user-name>
  <creator-name>koichirose</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6551</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm executing a query with limit, offset and order.

Code:
@@@ rails
@restaurants = Restaurant.where(:city_id =&gt; params[:city_id]).geo_scope(:bounds =&gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start])
@@@
And here's the log:
@@@ rails
SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 0
@@@
Everything is ok for now.



If params[:start] (i.e. the offset) is &gt; 0 then only the following query is executed:
@@@ rails
SELECT COUNT(*) FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) LIMIT 12 OFFSET 12
@@@
This is returning an empty set, which is wrong.


If I add '.all' to the same query (overriding, I believe, the Rails optimization system), then it works:
@@@ rails
@restaurants = Restaurant.where(:city_id =&gt; params[:city_id]).geo_scope(:bounds =&gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start]).all
@@@

This is executed instead:
@@@ rails
SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 12
@@@
And it returns the expected set.

I'm sorry if this is not technical enough, but this is my very first experience with Rails.
I'll be happy to provide more details if needed.</original-body>
  <latest-body>I'm executing a query with limit, offset and order.

Code:
@@@ rails
@restaurants = Restaurant.where(:city_id =&gt; params[:city_id]).geo_scope(:bounds =&gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start])
@@@
And here's the log:
@@@ rails
SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 0
@@@
Everything is ok for now.



If params[:start] (i.e. the offset) is &gt; 0 then only the following query is executed:
@@@ rails
SELECT COUNT(*) FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) LIMIT 12 OFFSET 12
@@@
This is returning an empty set, which is wrong.


If I add '.all' to the same query (overriding, I believe, the Rails optimization system), then it works:
@@@ rails
@restaurants = Restaurant.where(:city_id =&gt; params[:city_id]).geo_scope(:bounds =&gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start]).all
@@@

This is executed instead:
@@@ rails
SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 12
@@@
And it returns the expected set.

I'm sorry if this is not technical enough, but this is my very first experience with Rails.
I'll be happy to provide more details if needed.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm executing a query with limit, offset and order.&lt;/p&gt;
&lt;p&gt;Code:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;@restaurants = Restaurant.where(:city_id =&amp;gt; params[:city_id]).geo_scope(:bounds =&amp;gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start])&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And here's the log:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&amp;gt;45.42787 AND restaurants.lat&amp;lt;45.500107 AND restaurants.lon&amp;gt;9.022518 AND restaurants.lon&amp;lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everything is ok for now.&lt;/p&gt;
&lt;p&gt;If params[:start] (i.e. the offset) is &amp;gt; 0 then only the
following query is executed:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;SELECT COUNT(*) FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&amp;gt;45.42787 AND restaurants.lat&amp;lt;45.500107 AND restaurants.lon&amp;gt;9.022518 AND restaurants.lon&amp;lt;9.355542) LIMIT 12 OFFSET 12&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is returning an empty set, which is wrong.&lt;/p&gt;
&lt;p&gt;If I add '.all' to the same query (overriding, I believe, the
Rails optimization system), then it works:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;@restaurants = Restaurant.where(:city_id =&amp;gt; params[:city_id]).geo_scope(:bounds =&amp;gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start]).all&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is executed instead:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&amp;gt;45.42787 AND restaurants.lat&amp;lt;45.500107 AND restaurants.lon&amp;gt;9.022518 AND restaurants.lon&amp;lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 12&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And it returns the expected set.&lt;/p&gt;
&lt;p&gt;I'm sorry if this is not technical enough, but this is my very
first experience with Rails.&lt;br&gt;
I'll be happy to provide more details if needed.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm executing a query with limit, offset and order.

Code:
@@@ rails
@restaurants = Restaurant.where(:city_id =&gt; params[:city_id]).geo_scope(:bounds =&gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start])
@@@
And here's the log:
@@@ rails
SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 0
@@@
Everything is ok for now.



If params[:start] (i.e. the offset) is &gt; 0 then only the following query is executed:
@@@ rails
SELECT COUNT(*) FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) LIMIT 12 OFFSET 12
@@@
This is returning an empty set, which is wrong.


If I add '.all' to the same query (overriding, I believe, the Rails optimization system), then it works:
@@@ rails
@restaurants = Restaurant.where(:city_id =&gt; params[:city_id]).geo_scope(:bounds =&gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start]).all
@@@

This is executed instead:
@@@ rails
SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&gt;45.42787 AND restaurants.lat&lt;45.500107 AND restaurants.lon&gt;9.022518 AND restaurants.lon&lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 12
@@@
And it returns the expected set.

I'm sorry if this is not technical enough, but this is my very first experience with Rails.
I'll be happy to provide more details if needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm executing a query with limit, offset and order.&lt;/p&gt;
&lt;p&gt;Code:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;@restaurants = Restaurant.where(:city_id =&amp;gt; params[:city_id]).geo_scope(:bounds =&amp;gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start])&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And here's the log:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&amp;gt;45.42787 AND restaurants.lat&amp;lt;45.500107 AND restaurants.lon&amp;gt;9.022518 AND restaurants.lon&amp;lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everything is ok for now.&lt;/p&gt;
&lt;p&gt;If params[:start] (i.e. the offset) is &amp;gt; 0 then only the
following query is executed:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;SELECT COUNT(*) FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&amp;gt;45.42787 AND restaurants.lat&amp;lt;45.500107 AND restaurants.lon&amp;gt;9.022518 AND restaurants.lon&amp;lt;9.355542) LIMIT 12 OFFSET 12&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is returning an empty set, which is wrong.&lt;/p&gt;
&lt;p&gt;If I add '.all' to the same query (overriding, I believe, the
Rails optimization system), then it works:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;@restaurants = Restaurant.where(:city_id =&amp;gt; params[:city_id]).geo_scope(:bounds =&amp;gt; [@sw, @ne]).order(&quot;name asc&quot;).limit(12).offset(params[:start]).all&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is executed instead:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;SELECT `restaurants`.* FROM `restaurants` WHERE `restaurants`.`is_active` = 1 AND `restaurants`.`city_id` = 1 AND (restaurants.lat&amp;gt;45.42787 AND restaurants.lat&amp;lt;45.500107 AND restaurants.lon&amp;gt;9.022518 AND restaurants.lon&amp;lt;9.355542) ORDER BY name asc LIMIT 12 OFFSET 12&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And it returns the expected set.&lt;/p&gt;
&lt;p&gt;I'm sorry if this is not technical enough, but this is my very
first experience with Rails.&lt;br&gt;
I'll be happy to provide more details if needed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-09T19:36:02+00:00</created-at>
      <creator-id type="integer">140642</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6551</number>
      <permalink>calculationscount-ignores-order-with-offset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Calculations#count ignores order with offset</title>
      <updated-at type="datetime">2011-03-09T19:36:04+00:00</updated-at>
      <user-id type="integer">140642</user-id>
      <version type="integer">1</version>
      <user-name>koichirose</user-name>
      <creator-name>koichirose</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6551</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a piece of code similar to what originally caused the issue:

  @posts = Post.offset(10).limit(10)

  &lt;% unless @posts.empty? -%&gt;
    &lt;% @posts.each do |post| -%&gt;
      &lt;%= post.title %&gt;
    &lt;% end -%&gt;
  &lt;% else -%&gt;
    No posts!
  &lt;% end -%&gt;

Since @posts.empty? issued count without order, it returned as if there were no objects, preventing the posts to be displayed.

After digging around, seems like the issue is with https://github.com/rails/rails/blob/master/activerecord/lib/active_record/relation/calculations.rb#L202 which was there intentional.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a piece of code similar to what originally caused the
issue:&lt;/p&gt;
&lt;p&gt;@posts = Post.offset(10).limit(10)&lt;/p&gt;
&lt;p&gt;&amp;lt;% unless @posts.empty? -%&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;% @posts.each do |post| -%&amp;gt;
  &amp;lt;%= post.title %&amp;gt;
&amp;lt;% end -%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;% else -%&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;No posts!&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;% end -%&amp;gt;&lt;/p&gt;
&lt;p&gt;Since @posts.empty? issued count without order, it returned as
if there were no objects, preventing the posts to be displayed.&lt;/p&gt;
&lt;p&gt;After digging around, seems like the issue is with &lt;a href=
&quot;https://github.com/rails/rails/blob/master/activerecord/lib/active_record/relation/calculations.rb#L202&quot;&gt;
https://github.com/rails/rails/blob/master/activerecord/lib/active_...&lt;/a&gt;
which was there intentional.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-09T19:45:23+00:00</created-at>
      <creator-id type="integer">140642</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6551</number>
      <permalink>calculationscount-ignores-order-with-offset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Calculations#count ignores order with offset</title>
      <updated-at type="datetime">2011-03-09T19:45:27+00:00</updated-at>
      <user-id type="integer">43942</user-id>
      <version type="integer">2</version>
      <user-name>Dmitry Ratnikov</user-name>
      <creator-name>koichirose</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6551</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
