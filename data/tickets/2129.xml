<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-04T19:29:40+00:00</created-at>
  <creator-id type="integer">49544</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2129</number>
  <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
  <priority type="integer">1347</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
  <updated-at type="datetime">2011-02-02T18:30:38+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">7</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Ranjeet Smith</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>It seems to be impossible to organize controllers into subdirectories without Rails assuming that this is being done out of some latent desire on the user's part to create additional namespaces. While I understand the utility of such a feature, there really should be an off switch for those of us who would like to use these subdirectories for purely organizational purposes and continue to have the controllers which they enclose behave as though they were at the root level. 

For example:

/app/controllers/subdir1/foo_controller.rb

should be able to be accessed by

/foo/index

rather than

/subdir1/foo/index

in cases where &quot;subdir1&quot; has no relevance to the site's public presentation and therefore no reason to be displayed to the public.

I can certainly create dozens of routes to accomplish this without any trouble, but it would be much better if there were simply a way of specifying a default namespace for a generic catch-all route, or a way to tell the dispatcher to stop expecting to find Subdir1::FooController just because I made a folder.</original-body>
  <latest-body>It seems to be impossible to organize controllers into subdirectories without Rails assuming that this is being done out of some latent desire on the user's part to create additional namespaces. While I understand the utility of such a feature, there really should be an off switch for those of us who would like to use these subdirectories for purely organizational purposes and continue to have the controllers which they enclose behave as though they were at the root level. 

For example:

/app/controllers/subdir1/foo_controller.rb

should be able to be accessed by

/foo/index

rather than

/subdir1/foo/index

in cases where &quot;subdir1&quot; has no relevance to the site's public presentation and therefore no reason to be displayed to the public.

I can certainly create dozens of routes to accomplish this without any trouble, but it would be much better if there were simply a way of specifying a default namespace for a generic catch-all route, or a way to tell the dispatcher to stop expecting to find Subdir1::FooController just because I made a folder.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It seems to be impossible to organize controllers into
subdirectories without Rails assuming that this is being done out
of some latent desire on the user's part to create additional
namespaces. While I understand the utility of such a feature, there
really should be an off switch for those of us who would like to
use these subdirectories for purely organizational purposes and
continue to have the controllers which they enclose behave as
though they were at the root level.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;/app/controllers/subdir1/foo_controller.rb&lt;/p&gt;
&lt;p&gt;should be able to be accessed by&lt;/p&gt;
&lt;p&gt;/foo/index&lt;/p&gt;
&lt;p&gt;rather than&lt;/p&gt;
&lt;p&gt;/subdir1/foo/index&lt;/p&gt;
&lt;p&gt;in cases where &quot;subdir1&quot; has no relevance to the site's public
presentation and therefore no reason to be displayed to the
public.&lt;/p&gt;
&lt;p&gt;I can certainly create dozens of routes to accomplish this
without any trouble, but it would be much better if there were
simply a way of specifying a default namespace for a generic
catch-all route, or a way to tell the dispatcher to stop expecting
to find Subdir1::FooController just because I made a folder.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It seems to be impossible to organize controllers into subdirectories without Rails assuming that this is being done out of some latent desire on the user's part to create additional namespaces. While I understand the utility of such a feature, there really should be an off switch for those of us who would like to use these subdirectories for purely organizational purposes and continue to have the controllers which they enclose behave as though they were at the root level. 

For example:

/app/controllers/subdir1/foo_controller.rb

should be able to be accessed by

/foo/index

rather than

/subdir1/foo/index

in cases where &quot;subdir1&quot; has no relevance to the site's public presentation and therefore no reason to be displayed to the public.

I can certainly create dozens of routes to accomplish this without any trouble, but it would be much better if there were simply a way of specifying a default namespace for a generic catch-all route, or a way to tell the dispatcher to stop expecting to find Subdir1::FooController just because I made a folder.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems to be impossible to organize controllers into
subdirectories without Rails assuming that this is being done out
of some latent desire on the user's part to create additional
namespaces. While I understand the utility of such a feature, there
really should be an off switch for those of us who would like to
use these subdirectories for purely organizational purposes and
continue to have the controllers which they enclose behave as
though they were at the root level.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;/app/controllers/subdir1/foo_controller.rb&lt;/p&gt;
&lt;p&gt;should be able to be accessed by&lt;/p&gt;
&lt;p&gt;/foo/index&lt;/p&gt;
&lt;p&gt;rather than&lt;/p&gt;
&lt;p&gt;/subdir1/foo/index&lt;/p&gt;
&lt;p&gt;in cases where &quot;subdir1&quot; has no relevance to the site's public
presentation and therefore no reason to be displayed to the
public.&lt;/p&gt;
&lt;p&gt;I can certainly create dozens of routes to accomplish this
without any trouble, but it would be much better if there were
simply a way of specifying a default namespace for a generic
catch-all route, or a way to tell the dispatcher to stop expecting
to find Subdir1::FooController just because I made a folder.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-04T19:29:40+00:00</created-at>
      <creator-id type="integer">49544</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2129</number>
      <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
      <updated-at type="datetime">2009-03-04T19:29:42+00:00</updated-at>
      <user-id type="integer">49544</user-id>
      <version type="integer">1</version>
      <user-name>Ranjeet Smith</user-name>
      <creator-name>Ranjeet Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I should add that in previous versions of Rails it was possible to simply append these subdirectories to config.load_paths and have their contents treated as regular, non-namespaced controllers. 2.3 breaks this capability.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I should add that in previous versions of Rails it was possible
to simply append these subdirectories to config.load_paths and have
their contents treated as regular, non-namespaced controllers. 2.3
breaks this capability.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-04T19:57:11+00:00</created-at>
      <creator-id type="integer">49544</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2129</number>
      <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
      <updated-at type="datetime">2009-03-04T19:57:16+00:00</updated-at>
      <user-id type="integer">49544</user-id>
      <version type="integer">2</version>
      <user-name>Ranjeet Smith</user-name>
      <creator-name>Ranjeet Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just tested this on 2.2.2, and it doesn't work unless both config.load_paths and config.controller_paths have the subdirectory added to them. Without the load_paths, the controller definition wasn't found; and without the controller_paths the route wouldn't resolve. Identical behavior on 2.3 edge.

@Ranjeet - when (what version) did this work in the way you've described? Can you write a test that passes on 2.2.2 but not 2.3?
Either a test or a sample app that demonstrates the behavior would be very helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just tested this on 2.2.2, and it doesn't work unless both
config.load_paths and config.controller_paths have the subdirectory
added to them. Without the load_paths, the controller definition
wasn't found; and without the controller_paths the route wouldn't
resolve. Identical behavior on 2.3 edge.&lt;/p&gt;
&lt;p&gt;@Ranjeet - when (what version) did this work in the way you've
described? Can you write a test that passes on 2.2.2 but not 2.3?
Either a test or a sample app that demonstrates the behavior would
be very helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-04T22:52:32+00:00</created-at>
      <creator-id type="integer">49544</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2129</number>
      <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
      <updated-at type="datetime">2009-03-04T22:52:36+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">3</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Ranjeet Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The following does the trick for me.  I don't know whether this is worth building into rails?

@@@ ruby
config.load_paths += Dir[&quot;#{RAILS_ROOT}/app/models/**/*&quot;].find_all { |f| File.stat(f).directory? }
config.load_paths += Dir[&quot;#{RAILS_ROOT}/app/controllers/**/*&quot;].find_all { |f| File.stat(f).directory? }
config.controller_paths += Dir[&quot;#{RAILS_ROOT}/app/controllers/**/*&quot;].find_all { |f| File.stat(f).directory? }
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The following does the trick for me. I don't know whether this
is worth building into rails?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;config.load_paths += Dir[&quot;#{RAILS_ROOT}/app/models/**/*&quot;].find_all { |f| File.stat(f).directory? }
config.load_paths += Dir[&quot;#{RAILS_ROOT}/app/controllers/**/*&quot;].find_all { |f| File.stat(f).directory? }
config.controller_paths += Dir[&quot;#{RAILS_ROOT}/app/controllers/**/*&quot;].find_all { |f| File.stat(f).directory? }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-20T01:18:51+01:00</created-at>
      <creator-id type="integer">49544</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2129</number>
      <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
      <updated-at type="datetime">2009-05-20T01:18:56+01:00</updated-at>
      <user-id type="integer">21356</user-id>
      <version type="integer">4</version>
      <user-name>Zyclops</user-name>
      <creator-name>Ranjeet Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:41+01:00</created-at>
      <creator-id type="integer">49544</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2129</number>
      <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
      <updated-at type="datetime">2010-05-04T18:48:41+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ranjeet Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:53:28+00:00</created-at>
      <creator-id type="integer">49544</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2129</number>
      <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
      <priority type="integer">1347</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
      <updated-at type="datetime">2011-02-02T18:30:03+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ranjeet Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:53:30+00:00</created-at>
      <creator-id type="integer">49544</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2129</number>
      <permalink>dispatcher-interprets-path-separators-in-controller-names-as-nested-modulesnamespaces-whether-you-like-it-or-not</permalink>
      <priority type="integer">1347</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Dispatcher interprets path separators in controller names as nested modules/namespaces whether you like it or not.</title>
      <updated-at type="datetime">2011-02-02T18:30:38+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ranjeet Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2129</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
