<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:21+00:00</created-at>
  <creator-id type="integer">14031</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">220</number>
  <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord bug has_and_belongs_to_many</tag>
  <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
  <updated-at type="datetime">2011-03-26T02:38:24+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">20</version>
  <user-name>bingbing</user-name>
  <creator-name>bentlegen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a habtm relationship between two models. When I try to #build one object through the collection helper of a record that persists in the database, it doesn't add any ids to that record. On the flip side, #create does store the ids.

Example:

@@@ ruby

class Project
  has_and_belongs_to_many :users
end

class User
  has_and_belongs_to_many :projects
end

# A db-persistent user record

user = User.find(10)

# collection.build

project = user.projects.build
project.users # [] (empty)
project.user_ids # [] (empty)

# collection.create

project = user.projects.create
project.users # [#&lt;Account id: 10 ...&gt;]
project.user_ids # [10]

@@@</original-body>
  <latest-body>I have a habtm relationship between two models. When I try to #build one object through the collection helper of a record that persists in the database, it doesn't add any ids to that record. On the flip side, #create does store the ids.

Example:

@@@ ruby

class Project
  has_and_belongs_to_many :users
end

class User
  has_and_belongs_to_many :projects
end

# A db-persistent user record

user = User.find(10)

# collection.build

project = user.projects.build
project.users # [] (empty)
project.user_ids # [] (empty)

# collection.create

project = user.projects.create
project.users # [#&lt;Account id: 10 ...&gt;]
project.user_ids # [10]

@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I have a habtm relationship between two models. When I try to #build one object through the collection helper of a record that persists in the database, it doesn't add any ids to that record. On the flip side, #create does store the ids.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Project
  has_and_belongs_to_many :users
end

class User
  has_and_belongs_to_many :projects
end

# A db-persistent user record

user = User.find(10)

# collection.build

project = user.projects.build
project.users # [] (empty)
project.user_ids # [] (empty)

# collection.create

project = user.projects.create
project.users # [#&amp;lt;Account id: 10 ...&amp;gt;]
project.user_ids # &lt;a href=&quot;/projects/8994/changesets/10&quot; title=&quot;Changeset #10&quot;&gt;[10]&lt;/a&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a habtm relationship between two models. When I try to #build one object through the collection helper of a record that persists in the database, it doesn't add any ids to that record. On the flip side, #create does store the ids.

Example:

@@@ ruby
class Project &lt; ActiveRecord::Base
  has_and_belongs_to_many :users
end

class User &lt; ActiveRecord::Base
  has_and_belongs_to_many :projects
end

# A db-persistent user record

user = User.find(10)

# collection.build

project = user.projects.build
project.users # [] (empty)
project.user_ids # [] (empty)

# collection.create

project = user.projects.create
project.users # [#&lt;Account id: 10 ...&gt;]
project.user_ids # [10]

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I have a habtm relationship between two models. When I try to #build one object through the collection helper of a record that persists in the database, it doesn't add any ids to that record. On the flip side, #create does store the ids.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Project &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :users
end

class User &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :projects
end

# A db-persistent user record

user = User.find(10)

# collection.build

project = user.projects.build
project.users # [] (empty)
project.user_ids # [] (empty)

# collection.create

project = user.projects.create
project.users # [#&amp;lt;Account id: 10 ...&amp;gt;]
project.user_ids # &lt;a href=&quot;/projects/8994/changesets/10&quot; title=&quot;Changeset #10&quot;&gt;[10]&lt;/a&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-18T20:54:17+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-18T20:54:17+01:00</updated-at>
      <user-id type="integer">14031</user-id>
      <version type="integer">1</version>
      <user-name>bentlegen</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Could you clarify what version of rails you are using? Edge rails includes tests which test this functionality, and they all pass.

Also, #build doesn't save the created records, and so they won't have IDs.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Could you clarify what version of rails you are using? Edge rails includes tests which test this functionality, and they all pass.
&lt;/p&gt;&lt;p&gt;
Also, #build doesn't save the created records, and so they won't have IDs.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T03:38:41+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T03:38:41+01:00</updated-at>
      <user-id type="integer">20641</user-id>
      <version type="integer">2</version>
      <user-name>Christopher Swasey (endash)</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>activerecord (2.0.2)

The problem is that, even if I call #save after #build, the associations aren't saved in the join table. The AR documentation suggests they should.

I'll give Edge Rails a try.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
activerecord (2.0.2)
&lt;/p&gt;&lt;p&gt;
The problem is that, even if I call #save after #build, the associations aren't saved in the join table. The AR documentation suggests they should.
&lt;/p&gt;&lt;p&gt;
I'll give Edge Rails a try.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T03:51:04+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T03:51:04+01:00</updated-at>
      <user-id type="integer">14031</user-id>
      <version type="integer">3</version>
      <user-name>bentlegen</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I misread the ticket, and I was wrong about the tests covering this case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I misread the ticket, and I was wrong about the tests covering this case.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T03:51:34+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T03:51:34+01:00</updated-at>
      <user-id type="integer">20641</user-id>
      <version type="integer">4</version>
      <user-name>Christopher Swasey (endash)</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>From what I can tell, this isn't a bug:

When you #build off an association, the join table is updated when you call #save on the object from which you called #build. 

The association collects all unsaved members, calls #insert_record for each record, and upon saving the record (and getting an ID to use in the join table) it  creates the join table record with the newly gotten ID, and the pre-existing ID of the record upon through you called #build.

Basically, what you're trying to do is to use the association in reverse. On a related note, ActiveRecord will not allow you to call #build through an association belonging to an unsaved object. Which is kind of what you're trying to do, in effect.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
From what I can tell, this isn't a bug:
&lt;/p&gt;&lt;p&gt;
When you #build off an association, the join table is updated when you call #save on the object from which you called #build.
&lt;/p&gt;&lt;p&gt;
The association collects all unsaved members, calls #insert_record for each record, and upon saving the record (and getting an ID to use in the join table) it  creates the join table record with the newly gotten ID, and the pre-existing ID of the record upon through you called #build.
&lt;/p&gt;&lt;p&gt;
Basically, what you're trying to do is to use the association in reverse. On a related note, ActiveRecord will not allow you to call #build through an association belonging to an unsaved object. Which is kind of what you're trying to do, in effect.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T04:10:14+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T04:10:14+01:00</updated-at>
      <user-id type="integer">20641</user-id>
      <version type="integer">5</version>
      <user-name>Christopher Swasey (endash)</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks for the explanation Chris - I understand now.

Still, it seems odd to me that these two code examples behave differently:

@@@ ruby
project = user.project.build
project.save

# vs

project = Project.new(:user_id =&gt; user)
project.save
@@@

I prefer the syntax of the first example, personally. Maybe I'll look into creating a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Thanks for the explanation Chris - I understand now.
&lt;/p&gt;&lt;p&gt;
Still, it seems odd to me that these two code examples behave differently:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;project = user.project.build
project.save

# vs

project = Project.new(:user_id =&amp;gt; user)
project.save&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I prefer the syntax of the first example, personally. Maybe I'll look into creating a patch.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T04:20:28+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T04:20:28+01:00</updated-at>
      <user-id type="integer">14031</user-id>
      <version type="integer">6</version>
      <user-name>bentlegen</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry - my bad, that 2nd example wouldn't work with habtm.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sorry - my bad, that 2nd example wouldn't work with habtm.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T10:21:43+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T10:21:43+01:00</updated-at>
      <user-id type="integer">14031</user-id>
      <version type="integer">7</version>
      <user-name>bentlegen</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A quick look through the source seems to suggest that simply adding the existing record to the association collection of the new record would create the desired symmetry. 

Then, calling #save on the new object would save it, and because it was a new_record before being saved, it's entire association collection would then be passed one at a time to insert_record, which would then save the existing record and then create the join table record.

I think that would do it, but that's just from 15 minutes of looking at the applicable source files.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
A quick look through the source seems to suggest that simply adding the existing record to the association collection of the new record would create the desired symmetry.
&lt;/p&gt;&lt;p&gt;
Then, calling #save on the new object would save it, and because it was a new_record before being saved, it's entire association collection would then be passed one at a time to insert_record, which would then save the existing record and then create the join table record.
&lt;/p&gt;&lt;p&gt;
I think that would do it, but that's just from 15 minutes of looking at the applicable source files.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T04:47:30+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T04:47:30+01:00</updated-at>
      <user-id type="integer">20641</user-id>
      <version type="integer">8</version>
      <user-name>Christopher Swasey (endash)</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ah... the two records want to validate each other. That results in a nice runaway loop. 

Code could be added to the validation to prevent looping, but I'm wondering if its worth the trouble. Something tells me this sort of change would turn into the programming equivalent of quickand: the more you struggle, the deeper you get, until there's no escape.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ah... the two records want to validate each other. That results in a nice runaway loop.
&lt;/p&gt;&lt;p&gt;
Code could be added to the validation to prevent looping, but I'm wondering if its worth the trouble. Something tells me this sort of change would turn into the programming equivalent of quickand: the more you struggle, the deeper you get, until there's no escape.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T05:27:42+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T05:27:42+01:00</updated-at>
      <user-id type="integer">20641</user-id>
      <version type="integer">9</version>
      <user-name>Christopher Swasey (endash)</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am just all kinds of wrong tonight. You can, of course, call #build on a new record just fine. (it's #create that you can't call on a new record)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I am just all kinds of wrong tonight. You can, of course, call #build on a new record just fine. (it's #create that you can't call on a new record)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-19T06:09:06+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-05-19T06:09:06+01:00</updated-at>
      <user-id type="integer">20641</user-id>
      <version type="integer">10</version>
      <user-name>Christopher Swasey (endash)</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-20T01:52:48+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2008-08-20T01:52:48+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">11</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is there a reason this was marked as stale? I'm seeing very something similar on rails 2.3.2. The bottom line is that record.habtm_association.create(...) does NOT work like record.habtm_association.build(...).save as it implies in the docs. 

Tested this a few ways locally and can confirm it consistently. If this is expected behavior, then we really should update the docs. If it should work this way, then it sounds like a patch is in order. Either way, this cost me a good part of a day, and I'd appreciate moving this back to new or open.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is there a reason this was marked as stale? I'm seeing very
something similar on rails 2.3.2. The bottom line is that
record.habtm_association.create(...) does NOT work like
record.habtm_association.build(...).save as it implies in the
docs.&lt;/p&gt;
&lt;p&gt;Tested this a few ways locally and can confirm it consistently.
If this is expected behavior, then we really should update the
docs. If it should work this way, then it sounds like a patch is in
order. Either way, this cost me a good part of a day, and I'd
appreciate moving this back to new or open.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-14T20:36:56+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2009-07-14T20:36:57+01:00</updated-at>
      <user-id type="integer">13272</user-id>
      <version type="integer">12</version>
      <user-name>jack dempsey (jackdempsey)</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is still an issue on Rails 2.3.5. Caused me a lot of headaches in the past days.
Full reproduction steps and a failing test case for added pleasure are in this gist:

http://gist.github.com/290695</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is still an issue on Rails 2.3.5. Caused me a lot of
headaches in the past days.&lt;br&gt;
Full reproduction steps and a failing test case for added pleasure
are in this gist:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/290695&quot;&gt;http://gist.github.com/290695&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-30T19:59:26+00:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2010-01-30T19:59:29+00:00</updated-at>
      <user-id type="integer">46476</user-id>
      <version type="integer">13</version>
      <user-name>Jonas Schneider</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Had a quick look at the gist, and this is not a bug.

You are saving the instance of the associated object,
but not the object carrying the association to be saved.

Following assumes habtm relations for projects and users.

&lt;pre&gt;

  @user = User.first
  @project = @user.projects.build(:name =&gt; &quot;Make your bed&quot;)

  # if you do @project.save here, as in the gist,
  # association will not be saved, but if you do :

  @user.save

  # it will save the @user with its associated projects

&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Had a quick look at the gist, and this is not a bug.&lt;/p&gt;
&lt;p&gt;You are saving the instance of the associated object,&lt;br&gt;
but not the object carrying the association to be saved.&lt;/p&gt;
&lt;p&gt;Following assumes habtm relations for projects and users.&lt;/p&gt;
&lt;pre&gt;

  @user = User.first
  @project = @user.projects.build(:name =&amp;gt; &quot;Make your bed&quot;)

  # if you do @project.save here, as in the gist,
  # association will not be saved, but if you do :

  @user.save

  # it will save the @user with its associated projects

&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-14T18:34:58+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2010-04-14T18:35:04+01:00</updated-at>
      <user-id type="integer">79823</user-id>
      <version type="integer">14</version>
      <user-name>Rolf Bjaanes</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ore comfortable &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/omega-constellation-quadra-ladies-mini-watch-1537-74-5025.html&quot;&gt;Omega Constellation Quadra Ladies Mini 1537.74&lt;/a&gt;&lt;/b&gt; experience. As the wax &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/jaeger-lecoultre-master-compressor-memovox-18kt-rose-gold-mens-watch-1702440-5916.html&quot;&gt;Jaeger LeCoultre Master Compressor Memovox 18kt Rose Gold Mens 1702440&lt;/a&gt;&lt;/b&gt; cools, it basically shrink-wraps &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; each hair and pulls &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; it out f &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;buy replica rolex&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;swiss rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;swiss rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;ore comfortable &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/omega-constellation-quadra-ladies-mini-watch-1537-74-5025.html&quot;&gt;
Omega Constellation Quadra Ladies Mini 1537.74&lt;/a&gt;&lt;/b&gt; experience.
As the wax &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/jaeger-lecoultre-master-compressor-memovox-18kt-rose-gold-mens-watch-1702440-5916.html&quot;&gt;
Jaeger LeCoultre Master Compressor Memovox 18kt Rose Gold Mens
1702440&lt;/a&gt;&lt;/b&gt; cools, it basically shrink-wraps &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; each hair
and pulls &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; it out f &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;buy
replica rolex&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;swiss rolex watches&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;swiss rolex
watches&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T07:45:06+01:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">13346</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2010-07-21T01:46:03+01:00</updated-at>
      <user-id type="integer">107771</user-id>
      <version type="integer">15</version>
      <user-name>zhuzhu</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:08:14+00:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2010-11-08T23:12:02+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">16</version>
      <user-name>jim123456</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;authentic nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale authentic nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;discount nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;cheap nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale nfl jerseys&lt;/a&gt;
&lt;a href=&quot; http://www.wholesale-nflshop.com/&quot;&gt;wholesale nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;nfl throwback jerseys&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;authentic nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale authentic nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;discount nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;cheap nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a&gt;wholesale nfl jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;nfl throwback
jerseys&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-04T06:14:07+00:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2011-01-04T16:24:42+00:00</updated-at>
      <user-id type="integer">131088</user-id>
      <version type="integer">17</version>
      <user-name>icooky</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T07:09:22+00:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2011-02-16T07:20:11+00:00</updated-at>
      <user-id type="integer">137258</user-id>
      <version type="integer">18</version>
      <user-name>fgfhnmn</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:56:47+00:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2011-02-19T09:28:21+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">19</version>
      <user-name>mklo</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:12:01+00:00</created-at>
      <creator-id type="integer">14031</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">220</number>
      <permalink>habtm-collection-build-doesn-t-build-join-associations-unlike-collection-create</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug has_and_belongs_to_many</tag>
      <title>habtm: collection.build doesn't build join associations (unlike collection.create)</title>
      <updated-at type="datetime">2011-03-26T02:38:24+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">20</version>
      <user-name>bingbing</user-name>
      <creator-name>bentlegen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/220</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
