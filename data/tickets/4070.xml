<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-28T06:03:06+00:00</created-at>
  <creator-id type="integer">88283</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4070</number>
  <permalink>sending-emtpy-params-to-a-xml-resource-throws-exception</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>actionpack activeresource middleware xml</tag>
  <title>Sending emtpy params to a xml resource throws exception</title>
  <updated-at type="datetime">2010-07-08T22:45:39+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Sam</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4070</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,
I am trying to use ActiveResource to build a new app. I discoverd the following bug.
If I send an empty request to a resource from ActiveResource like

ChannelResource.create

but the Channel on the other side expects a name param I get the following trace. I send as xml as you can see in the trace:

Started POST &quot;/channels.xml&quot; for 127.0.0.1 at 2010-02-28 01:25:53
  Processing by ChannelsController#create as XML
  Parameters: {&quot;channel&quot;=&gt;&quot;\n&quot;}

NoMethodError (undefined method `stringify_keys!' for &quot;\n&quot;:String):
  app/controllers/channels_controller.rb:31:in `new'
  app/controllers/channels_controller.rb:31:in `create'

Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.1ms)
Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (3.5ms)
Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/layout.erb (18.0ms)</original-body>
  <latest-body>Hi,
I am trying to use ActiveResource to build a new app. I discoverd the following bug.
If I send an empty request to a resource from ActiveResource like

ChannelResource.create

but the Channel on the other side expects a name param I get the following trace. I send as xml as you can see in the trace:

Started POST &quot;/channels.xml&quot; for 127.0.0.1 at 2010-02-28 01:25:53
  Processing by ChannelsController#create as XML
  Parameters: {&quot;channel&quot;=&gt;&quot;\n&quot;}

NoMethodError (undefined method `stringify_keys!' for &quot;\n&quot;:String):
  app/controllers/channels_controller.rb:31:in `new'
  app/controllers/channels_controller.rb:31:in `create'

Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.1ms)
Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (3.5ms)
Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/layout.erb (18.0ms)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
I am trying to use ActiveResource to build a new app. I discoverd
the following bug.&lt;br&gt;
If I send an empty request to a resource from ActiveResource
like&lt;/p&gt;
&lt;p&gt;ChannelResource.create&lt;/p&gt;
&lt;p&gt;but the Channel on the other side expects a name param I get the
following trace. I send as xml as you can see in the trace:&lt;/p&gt;
&lt;p&gt;Started POST &quot;/channels.xml&quot; for 127.0.0.1 at 2010-02-28
01:25:53&lt;br&gt;
Processing by ChannelsController#create as XML Parameters:
{&quot;channel&quot;=&amp;gt;&quot;\n&quot;}&lt;/p&gt;
&lt;p&gt;NoMethodError (undefined method &lt;code&gt;stringify_keys!' for
&quot;\n&quot;:String):&amp;lt;br/&amp;gt;
app/controllers/channels_controller.rb:31:in&lt;/code&gt;new'
app/controllers/channels_controller.rb:31:in
&lt;code&gt;create'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rendered
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/&lt;em&gt;trace.erb
(1.1ms)&lt;br&gt;
Rendered
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/&lt;/em&gt;request_and_response.erb
(3.5ms)&lt;br&gt;
Rendered
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb
within
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/layout.erb
(18.0ms)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,
I am trying to use ActiveResource to build a new app. I discoverd the following bug.
If I send an empty request to a resource from ActiveResource like

ChannelResource.create

but the Channel on the other side expects a name param I get the following trace. I send as xml as you can see in the trace:

Started POST &quot;/channels.xml&quot; for 127.0.0.1 at 2010-02-28 01:25:53
  Processing by ChannelsController#create as XML
  Parameters: {&quot;channel&quot;=&gt;&quot;\n&quot;}

NoMethodError (undefined method `stringify_keys!' for &quot;\n&quot;:String):
  app/controllers/channels_controller.rb:31:in `new'
  app/controllers/channels_controller.rb:31:in `create'

Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.1ms)
Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (3.5ms)
Rendered /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within /opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/layout.erb (18.0ms)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
I am trying to use ActiveResource to build a new app. I discoverd
the following bug.&lt;br&gt;
If I send an empty request to a resource from ActiveResource
like&lt;/p&gt;
&lt;p&gt;ChannelResource.create&lt;/p&gt;
&lt;p&gt;but the Channel on the other side expects a name param I get the
following trace. I send as xml as you can see in the trace:&lt;/p&gt;
&lt;p&gt;Started POST &quot;/channels.xml&quot; for 127.0.0.1 at 2010-02-28
01:25:53&lt;br&gt;
Processing by ChannelsController#create as XML Parameters:
{&quot;channel&quot;=&amp;gt;&quot;\n&quot;}&lt;/p&gt;
&lt;p&gt;NoMethodError (undefined method &lt;code&gt;stringify_keys!' for
&quot;\n&quot;:String):&amp;lt;br/&amp;gt;
app/controllers/channels_controller.rb:31:in&lt;/code&gt;new'
app/controllers/channels_controller.rb:31:in
&lt;code&gt;create'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rendered
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/&lt;em&gt;trace.erb
(1.1ms)&lt;br&gt;
Rendered
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/&lt;/em&gt;request_and_response.erb
(3.5ms)&lt;br&gt;
Rendered
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb
within
/opt/local/lib/ruby/gems/1.8/gems/actionpack-3.0.0.beta/lib/action_dispatch/middleware/templates/rescues/layout.erb
(18.0ms)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-28T06:03:06+00:00</created-at>
      <creator-id type="integer">88283</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4070</number>
      <permalink>sending-emtpy-params-to-a-xml-resource-throws-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack activeresource middleware xml</tag>
      <title>Sending emtpy params to a xml resource throws exception</title>
      <updated-at type="datetime">2010-02-28T06:03:09+00:00</updated-at>
      <user-id type="integer">88283</user-id>
      <version type="integer">1</version>
      <user-name>Sam</user-name>
      <creator-name>Sam</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4070</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've done some research and this is what I've come up with.

The root cause of this is really that the request body that Active Resource makes when you call `create` with no arguments looks like this:

@@@ xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;product&gt;
&lt;/product&gt;
@@@

When it reaches Rails, it'll use `Hash.from_xml` so it can convert that XML into something that fits in the `params` hash. `Hash.from_xml` will return this:

@@@ ruby
{&quot;product&quot;=&gt;&quot;\n&quot;}
@@@

Technically, that's correct because what's in between those tags is really a newline. The result is that `params[:product]` returns `&quot;\n&quot;`, which makes Active Record vomit here because strings don't respond to `stringify_keys`:

@@@ ruby
def attributes=(new_attributes, guard_protected_attributes = true)
  return if new_attributes.nil?
  attributes = new_attributes.stringify_keys

  # ...
end
@@@

I've attached a patch that fixes this. I believe it's the appropriate place fix it: The XML generated by Active Resource is correct and the return value of `Hash.from_xml` is also really correct. The fix will make `ActiveRecord::Base#attributes=` let nothing but hashes pass through.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've done some research and this is what I've come up with.&lt;/p&gt;
&lt;p&gt;The root cause of this is really that the request body that
Active Resource makes when you call &lt;code&gt;create&lt;/code&gt; with no
arguments looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;product&amp;gt;
&amp;lt;/product&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When it reaches Rails, it'll use &lt;code&gt;Hash.from_xml&lt;/code&gt; so
it can convert that XML into something that fits in the
&lt;code&gt;params&lt;/code&gt; hash. &lt;code&gt;Hash.from_xml&lt;/code&gt; will return
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;{&quot;product&quot;=&amp;gt;&quot;\n&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Technically, that's correct because what's in between those tags
is really a newline. The result is that
&lt;code&gt;params[:product]&lt;/code&gt; returns &lt;code&gt;&quot;\n&quot;&lt;/code&gt;, which
makes Active Record vomit here because strings don't respond to
&lt;code&gt;stringify_keys&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;def attributes=(new_attributes, guard_protected_attributes = true)
  return if new_attributes.nil?
  attributes = new_attributes.stringify_keys

  # ...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I've attached a patch that fixes this. I believe it's the
appropriate place fix it: The XML generated by Active Resource is
correct and the return value of &lt;code&gt;Hash.from_xml&lt;/code&gt; is also
really correct. The fix will make
&lt;code&gt;ActiveRecord::Base#attributes=&lt;/code&gt; let nothing but hashes
pass through.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T21:08:55+01:00</created-at>
      <creator-id type="integer">88283</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4070</number>
      <permalink>sending-emtpy-params-to-a-xml-resource-throws-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack activeresource middleware xml</tag>
      <title>Sending emtpy params to a xml resource throws exception</title>
      <updated-at type="datetime">2010-06-30T21:08:59+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">2</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Sam</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4070</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [786342e17f42799ef889cf6127fe97e9598272e0]) Return from ActiveRecord::Base#attributes= unless value is a hash [#4070 state:committed]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/786342e17f42799ef889cf6127fe97e9598272e0</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/786342e17f42799ef889cf6127fe97e9598272e0&quot;
title=
&quot;Changeset [786342e17f42799ef889cf6127fe97e9598272e0]&quot;&gt;[786342e17f42799ef889cf6127fe97e9598272e0]&lt;/a&gt;)
Return from ActiveRecord::Base#attributes= unless value is a hash
[&lt;a href=&quot;/projects/8994/tickets/4070&quot; title=
&quot;Ticket #4070&quot;&gt;#4070&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/786342e17f42799ef889cf6127fe97e9598272e0&quot;&gt;
http://github.com/rails/rails/commit/786342e17f42799ef889cf6127fe97...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-08T22:45:38+01:00</created-at>
      <creator-id type="integer">88283</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4070</number>
      <permalink>sending-emtpy-params-to-a-xml-resource-throws-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack activeresource middleware xml</tag>
      <title>Sending emtpy params to a xml resource throws exception</title>
      <updated-at type="datetime">2010-07-08T22:45:39+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Sam</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4070</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d41525a998c53094c4164aeed1b86ce86c305bc7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-30T21:08:55+01:00</created-at>
      <filename>4070.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">582426</id>
      <size type="integer">1664</size>
      <uploader-id type="integer">65050</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/582426/4070.diff</url>
    </attachment>
  </attachments>
</ticket>
