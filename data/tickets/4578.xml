<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-11T22:32:22+01:00</created-at>
  <creator-id type="integer">17848</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4578</number>
  <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord associations bugmash</tag>
  <title>has_many association proxy delete method sometimes deletes too liberally</title>
  <updated-at type="datetime">2010-10-07T05:21:20+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">7</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Gabe da Silveira</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
  <priority-name>Low</priority-name>
  <original-body>Really nasty bug bit me where I was doing something like this:

@@@ ruby
class Record &lt; ActiveRecord::Base
  has_many :translations
end

...

record.translations.each do |translation|
  record.translations.delete(translation) if translation.is_bad?
end
@@@

if translation is a new record (ie. no id), then all new records would be deleted from the association.

this ticket is just a placeholder for now, I'll write up a failing test case and patch when I have some time.</original-body>
  <latest-body>Really nasty bug bit me where I was doing something like this:

@@@ ruby
class Record &lt; ActiveRecord::Base
  has_many :translations
end

...

record.translations.each do |translation|
  record.translations.delete(translation) if translation.is_bad?
end
@@@

if translation is a new record (ie. no id), then all new records would be deleted from the association.

this ticket is just a placeholder for now, I'll write up a failing test case and patch when I have some time.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Really nasty bug bit me where I was doing something like
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Record &amp;lt; ActiveRecord::Base
  has_many :translations
end

...

record.translations.each do |translation|
  record.translations.delete(translation) if translation.is_bad?
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;if translation is a new record (ie. no id), then all new records
would be deleted from the association.&lt;/p&gt;
&lt;p&gt;this ticket is just a placeholder for now, I'll write up a
failing test case and patch when I have some time.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Really nasty bug bit me where I was doing something like this:

@@@ ruby
class Record &lt; ActiveRecord::Base
  has_many :translations
end

...

record.translations.each do |translation|
  record.translations.delete(translation) if translation.is_bad?
end
@@@

if translation is a new record (ie. no id), then all new records would be deleted from the association.

this ticket is just a placeholder for now, I'll write up a failing test case and patch when I have some time.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Really nasty bug bit me where I was doing something like
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Record &amp;lt; ActiveRecord::Base
  has_many :translations
end

...

record.translations.each do |translation|
  record.translations.delete(translation) if translation.is_bad?
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;if translation is a new record (ie. no id), then all new records
would be deleted from the association.&lt;/p&gt;
&lt;p&gt;this ticket is just a placeholder for now, I'll write up a
failing test case and patch when I have some time.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-11T22:32:22+01:00</created-at>
      <creator-id type="integer">17848</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4578</number>
      <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord associations&quot;</tag>
      <title>has_many association proxy delete method sometimes deletes too liberally</title>
      <updated-at type="datetime">2010-05-11T22:32:23+01:00</updated-at>
      <user-id type="integer">17848</user-id>
      <version type="integer">1</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>Gabe da Silveira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am not able to reproduce this case with rails3 edge.

@@@ ruby
class Car &lt; ActiveRecord::Base
  has_many :brakes

  def self.lab
    Car.create(:name =&gt; 'John')
    car = Car.last
    brakes = car.brakes
    brake = brakes.create(:name =&gt; 'wow')
    puts &quot;brake id is #{brake.id}&quot;
    brakes.build(:name =&gt; 'cursed brake')
    brakes.each do |brake|
      puts &quot;processing brake #{brake.name}&quot;
      car.brakes.delete(brake) 
    end
  end
end
@@@

The output of Car.lab is


SQL (0.4ms)  INSERT INTO &quot;cars&quot; (&quot;name&quot;) VALUES ('John')
  Car Load (0.3ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; ORDER BY cars.id DESC LIMIT 1
  SQL (0.4ms)  INSERT INTO &quot;brakes&quot; (&quot;car_id&quot;, &quot;name&quot;) VALUES (8, 'wow')
brake id is 13
  SQL (0.5ms)  INSERT INTO &quot;brakes&quot; (&quot;car_id&quot;, &quot;name&quot;) VALUES (8, 'airblad')
  Brake Load (0.3ms)  SELECT &quot;brakes&quot;.* FROM &quot;brakes&quot; WHERE (&quot;brakes&quot;.car_id = 8)
processing brake wow
  SQL (0.3ms)  UPDATE &quot;brakes&quot; SET &quot;car_id&quot; = NULL WHERE (&quot;brakes&quot;.&quot;car_id&quot; = 8 AND &quot;brakes&quot;.&quot;id&quot; IN (13))
processing brake cursed brake
 =&gt; [#&lt;Brake id: 14, name: &quot;airblad&quot;, car_id: 8&gt;] 

Everything looks okay to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not able to reproduce this case with rails3 edge.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Car &amp;lt; ActiveRecord::Base
  has_many :brakes

  def self.lab
    Car.create(:name =&amp;gt; 'John')
    car = Car.last
    brakes = car.brakes
    brake = brakes.create(:name =&amp;gt; 'wow')
    puts &quot;brake id is #{brake.id}&quot;
    brakes.build(:name =&amp;gt; 'cursed brake')
    brakes.each do |brake|
      puts &quot;processing brake #{brake.name}&quot;
      car.brakes.delete(brake) 
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The output of Car.lab is&lt;/p&gt;
&lt;p&gt;SQL (0.4ms) INSERT INTO &quot;cars&quot; (&quot;name&quot;) VALUES ('John')&lt;br&gt;
Car Load (0.3ms) SELECT &quot;cars&quot;. &lt;em&gt;FROM &quot;cars&quot; ORDER BY cars.id
DESC LIMIT 1 SQL (0.4ms) INSERT INTO &quot;brakes&quot; (&quot;car_id&quot;, &quot;name&quot;)
VALUES (8, 'wow') brake id is 13&lt;br&gt;
SQL (0.5ms) INSERT INTO &quot;brakes&quot; (&quot;car_id&quot;, &quot;name&quot;) VALUES (8,
'airblad') Brake Load (0.3ms) SELECT &quot;brakes&quot;.&lt;/em&gt; FROM &quot;brakes&quot;
WHERE (&quot;brakes&quot;.car_id = 8) processing brake wow&lt;br&gt;
SQL (0.3ms) UPDATE &quot;brakes&quot; SET &quot;car_id&quot; = NULL WHERE
(&quot;brakes&quot;.&quot;car_id&quot; = 8 AND &quot;brakes&quot;.&quot;id&quot; IN (13)) processing brake
cursed brake&lt;br&gt;
=&amp;gt; [#]&lt;/p&gt;
&lt;p&gt;Everything looks okay to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-12T03:46:52+01:00</created-at>
      <creator-id type="integer">17848</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4578</number>
      <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord associations&quot;</tag>
      <title>has_many association proxy delete method sometimes deletes too liberally</title>
      <updated-at type="datetime">2010-05-12T03:46:53+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Gabe da Silveira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please provide a failing test case and patch for this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please provide a failing test case and patch for this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-13T23:48:10+01:00</created-at>
      <creator-id type="integer">17848</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: &quot;\&quot;activerecord associations\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4578</number>
      <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;activerecord associations&quot; bugmash</tag>
      <title>has_many association proxy delete method sometimes deletes too liberally</title>
      <updated-at type="datetime">2010-05-13T23:48:13+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Gabe da Silveira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Gabe Let's say that I have added a new record to collection using build. Now I want to delete that record. All I have to do is collection.delete(record) and then new object previously added to collection gets deleted. This behavior looks okay to me.

If your proposal is accepted then how would anyone delete any new record from collection?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Gabe Let's say that I have added a new record to collection
using build. Now I want to delete that record. All I have to do is
collection.delete(record) and then new object previously added to
collection gets deleted. This behavior looks okay to me.&lt;/p&gt;
&lt;p&gt;If your proposal is accepted then how would anyone delete any
new record from collection?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T03:15:56+01:00</created-at>
      <creator-id type="integer">17848</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4578</number>
      <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;activerecord associations&quot; bugmash</tag>
      <title>has_many association proxy delete method sometimes deletes too liberally</title>
      <updated-at type="datetime">2010-07-15T03:16:01+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Gabe da Silveira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Actually I wasn't proposing anything, what I was experiencing was a straight-up bug.  However, I eventually tracked this down to a condition in my application, so there is in fact no bug here.  Please make this ticket invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually I wasn't proposing anything, what I was experiencing
was a straight-up bug. However, I eventually tracked this down to a
condition in my application, so there is in fact no bug here.
Please make this ticket invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T03:25:00+01:00</created-at>
      <creator-id type="integer">17848</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4578</number>
      <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;activerecord associations&quot; bugmash</tag>
      <title>has_many association proxy delete method sometimes deletes too liberally</title>
      <updated-at type="datetime">2010-07-15T03:25:02+01:00</updated-at>
      <user-id type="integer">17848</user-id>
      <version type="integer">5</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>Gabe da Silveira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-15T03:30:52+01:00</created-at>
      <creator-id type="integer">17848</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4578</number>
      <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;activerecord associations&quot; bugmash</tag>
      <title>has_many association proxy delete method sometimes deletes too liberally</title>
      <updated-at type="datetime">2010-07-15T03:30:57+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">6</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Gabe da Silveira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-07T05:21:20+01:00</created-at>
      <creator-id type="integer">17848</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord associations\&quot; bugmash&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4578</number>
      <permalink>has_many-association-proxy-delete-method-sometimes-deletes-too-liberally</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord associations bugmash</tag>
      <title>has_many association proxy delete method sometimes deletes too liberally</title>
      <updated-at type="datetime">2010-10-07T05:21:20+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">7</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Gabe da Silveira</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4578</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
