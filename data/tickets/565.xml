<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-07T15:20:55+01:00</created-at>
  <creator-id type="integer">25489</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">565</number>
  <permalink>datetime-associations-work-only-with-hour-containing-input</permalink>
  <priority type="integer">59</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord bug</tag>
  <title>datetime associations work only with hour-containing input</title>
  <updated-at type="datetime">2008-07-08T14:41:02+01:00</updated-at>
  <user-id type="integer">15783</user-id>
  <version type="integer">4</version>
  <user-name>Geoff Buesing</user-name>
  <creator-name>Tomash</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/565</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I don't know how Rails create accessors based on DBs column type, but accessors for SQL datetime time act weird.

The problem: assigning string (for example from a form) to datetime value (like begins_at) works good with full ISO-format string (&quot;YYYY-MM-DD hh:mm&quot;), but given a string without an hour (&quot;YYYY-MM-DD&quot;) sets the field to nil.
@@@
&gt;&gt; f.happened_at = &quot;2004-05-06 11:45&quot;
=&gt; &quot;2004-05-06 11:45&quot;
&gt;&gt; f.happened_at
=&gt; Thu May 06 11:45:00 +0200 2004
&gt;&gt; f.happened_at = &quot;2004-05-06&quot;
=&gt; &quot;2004-05-06&quot;
&gt;&gt; f.happened_at
=&gt; nil
@@@

(Which of course automatically breaks validates_date_time plugin, but this is irrelevant ATM).

The workaround: custom accessors work fine when using to_datetime on string, also on one without hours:
@@@ ruby
class CalendarEvent &lt; ActiveRecord::Base
  def begins_at=(datetime_str)
    write_attribute(:begins_at, datetime_str.to_datetime)
  end
end
@@@

Proposed solution: make datetime field accessors preprocess the value given with .to_datetime. Works like charm for Time, Date, Datetime and &quot;ill-formatted&quot; (i.e. ISO without an hour) strings described above.

I'd gladly do it myself (or at least cover it with a plugin), but don't know where to dig, i.e. which method of which class &amp; module to overload.</original-body>
  <latest-body>I don't know how Rails create accessors based on DBs column type, but accessors for SQL datetime time act weird.

The problem: assigning string (for example from a form) to datetime value (like begins_at) works good with full ISO-format string (&quot;YYYY-MM-DD hh:mm&quot;), but given a string without an hour (&quot;YYYY-MM-DD&quot;) sets the field to nil.
@@@
&gt;&gt; f.happened_at = &quot;2004-05-06 11:45&quot;
=&gt; &quot;2004-05-06 11:45&quot;
&gt;&gt; f.happened_at
=&gt; Thu May 06 11:45:00 +0200 2004
&gt;&gt; f.happened_at = &quot;2004-05-06&quot;
=&gt; &quot;2004-05-06&quot;
&gt;&gt; f.happened_at
=&gt; nil
@@@

(Which of course automatically breaks validates_date_time plugin, but this is irrelevant ATM).

The workaround: custom accessors work fine when using to_datetime on string, also on one without hours:
@@@ ruby
class CalendarEvent &lt; ActiveRecord::Base
  def begins_at=(datetime_str)
    write_attribute(:begins_at, datetime_str.to_datetime)
  end
end
@@@

Proposed solution: make datetime field accessors preprocess the value given with .to_datetime. Works like charm for Time, Date, Datetime and &quot;ill-formatted&quot; (i.e. ISO without an hour) strings described above.

I'd gladly do it myself (or at least cover it with a plugin), but don't know where to dig, i.e. which method of which class &amp; module to overload.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I don't know how Rails create accessors based on DBs column type, but accessors for SQL datetime time act weird.
&lt;/p&gt;&lt;p&gt;
The problem: assigning string (for example from a form) to datetime value (like begins_at) works good with full ISO-format string (&quot;YYYY-MM-DD hh:mm&quot;), but given a string without an hour (&quot;YYYY-MM-DD&quot;) sets the field to nil.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; f.happened_at = &amp;quot;2004-05-06 11:45&amp;quot;
=&amp;gt; &amp;quot;2004-05-06 11:45&amp;quot;
&amp;gt;&amp;gt; f.happened_at
=&amp;gt; Thu May 06 11:45:00 +0200 2004
&amp;gt;&amp;gt; f.happened_at = &amp;quot;2004-05-06&amp;quot;
=&amp;gt; &amp;quot;2004-05-06&amp;quot;
&amp;gt;&amp;gt; f.happened_at
=&amp;gt; nil&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(Which of course automatically breaks validates_date_time plugin, but this is irrelevant ATM).
&lt;/p&gt;&lt;p&gt;
The workaround: custom accessors work fine when using to_datetime on string, also on one without hours:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class CalendarEvent &amp;lt; ActiveRecord::Base
  def begins_at=(datetime_str)
    write_attribute(:begins_at, datetime_str.to_datetime)
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Proposed solution: make datetime field accessors preprocess the value given with .to_datetime. Works like charm for Time, Date, Datetime and &quot;ill-formatted&quot; (i.e. ISO without an hour) strings described above.
&lt;/p&gt;&lt;p&gt;
I'd gladly do it myself (or at least cover it with a plugin), but don't know where to dig, i.e. which method of which class &amp; module to overload.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't know how Rails create accessors based on DBs column type, but accessors for SQL datetime time act weird.

The problem: assigning string (for example from a form) to datetime value (like begins_at) works good with full ISO-format string (&quot;YYYY-MM-DD hh:mm&quot;), but given a string without an hour (&quot;YYYY-MM-DD&quot;) sets the field to nil.
@@@
&gt;&gt; f.happened_at = &quot;2004-05-06 11:45&quot;
=&gt; &quot;2004-05-06 11:45&quot;
&gt;&gt; f.happened_at
=&gt; Thu May 06 11:45:00 +0200 2004
&gt;&gt; f.happened_at = &quot;2004-05-06&quot;
=&gt; &quot;2004-05-06&quot;
&gt;&gt; f.happened_at
=&gt; nil
@@@

(Which of course automatically breaks validates_date_time plugin, but this is irrelevant ATM).

The workaround: custom accessors work fine when using to_datetime on string, also on one without hours:
@@@ ruby
class CalendarEvent &lt; ActiveRecord::Base
  def begins_at=(datetime_str)
    write_attribute(:begins_at, datetime_str.to_datetime)
  end
end
@@@

Proposed solution: make datetime field accessors preprocess the value given with .to_datetime. Works like charm for Time, Date, Datetime and &quot;ill-formatted&quot; (i.e. ISO without an hour) strings described above.

I'd gladly do it myself (or at least cover it with a plugin), but don't know where to dig, i.e. which method of which class &amp; module to overload.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I don't know how Rails create accessors based on DBs column type, but accessors for SQL datetime time act weird.
&lt;/p&gt;&lt;p&gt;
The problem: assigning string (for example from a form) to datetime value (like begins_at) works good with full ISO-format string (&quot;YYYY-MM-DD hh:mm&quot;), but given a string without an hour (&quot;YYYY-MM-DD&quot;) sets the field to nil.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; f.happened_at = &amp;quot;2004-05-06 11:45&amp;quot;
=&amp;gt; &amp;quot;2004-05-06 11:45&amp;quot;
&amp;gt;&amp;gt; f.happened_at
=&amp;gt; Thu May 06 11:45:00 +0200 2004
&amp;gt;&amp;gt; f.happened_at = &amp;quot;2004-05-06&amp;quot;
=&amp;gt; &amp;quot;2004-05-06&amp;quot;
&amp;gt;&amp;gt; f.happened_at
=&amp;gt; nil&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(Which of course automatically breaks validates_date_time plugin, but this is irrelevant ATM).
&lt;/p&gt;&lt;p&gt;
The workaround: custom accessors work fine when using to_datetime on string, also on one without hours:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class CalendarEvent &amp;lt; ActiveRecord::Base
  def begins_at=(datetime_str)
    write_attribute(:begins_at, datetime_str.to_datetime)
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Proposed solution: make datetime field accessors preprocess the value given with .to_datetime. Works like charm for Time, Date, Datetime and &quot;ill-formatted&quot; (i.e. ISO without an hour) strings described above.
&lt;/p&gt;&lt;p&gt;
I'd gladly do it myself (or at least cover it with a plugin), but don't know where to dig, i.e. which method of which class &amp; module to overload.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-07T15:20:55+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">565</number>
      <permalink>datetime-associations-work-only-with-hour-containing-input</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>datetime associations work only with hour-containing input</title>
      <updated-at type="datetime">2008-07-07T15:20:55+01:00</updated-at>
      <user-id type="integer">25489</user-id>
      <version type="integer">1</version>
      <user-name>Tomash</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/565</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can't reproduce this -- would you be able to submit a failing test case?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I can't reproduce this -- would you be able to submit a failing test case?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-07T21:39:21+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">565</number>
      <permalink>datetime-associations-work-only-with-hour-containing-input</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>datetime associations work only with hour-containing input</title>
      <updated-at type="datetime">2008-07-07T21:39:21+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/565</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Tried it with a clean app and... damn I'm dumb -- the bug also doesn't occur.

I've tracked down the bug to have its root in validates_date_time plugin which does some ugly monkeypatching and overloads rails date(time) parsing code with some crappy one of its own.

Ticket can be closed. 
Excuse me for generating noise in Rails tickets without thorough examination first.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Tried it with a clean app and... damn I'm dumb -- the bug also doesn't occur.
&lt;/p&gt;&lt;p&gt;
I've tracked down the bug to have its root in validates_date_time plugin which does some ugly monkeypatching and overloads rails date(time) parsing code with some crappy one of its own.
&lt;/p&gt;&lt;p&gt;
Ticket can be closed.
&lt;/p&gt;&lt;p&gt;
Excuse me for generating noise in Rails tickets without thorough examination first.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-08T08:39:08+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">565</number>
      <permalink>datetime-associations-work-only-with-hour-containing-input</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>datetime associations work only with hour-containing input</title>
      <updated-at type="datetime">2008-07-08T08:39:08+01:00</updated-at>
      <user-id type="integer">25489</user-id>
      <version type="integer">3</version>
      <user-name>Tomash</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/565</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-08T14:41:02+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">565</number>
      <permalink>datetime-associations-work-only-with-hour-containing-input</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord bug</tag>
      <title>datetime associations work only with hour-containing input</title>
      <updated-at type="datetime">2008-07-08T14:41:02+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">4</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/565</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
