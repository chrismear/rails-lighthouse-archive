From 1ff152aaed92896102210ff0a674902ccc76f6d0 Mon Sep 17 00:00:00 2001
From: Justin French <justin@indent.com.au>
Date: Wed, 4 Mar 2009 18:07:01 +1100
Subject: [PATCH] Changed ActiveRecord::Base.human_name to default to the titleized version of the class name (eg 'Post Comment' rather than the humanized version ('Postcomment'), with test coverage, since there wasn't any.

---
 activerecord/lib/active_record/base.rb     |    4 ++--
 activerecord/test/cases/reflection_test.rb |   10 ++++++++--
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index 206b4ef..9ede345 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -1378,14 +1378,14 @@ module ActiveRecord #:nodoc:
       end
 
       # Transform the modelname into a more humane format, using I18n.
-      # Defaults to the basic humanize method.
+      # Defaults to the basic titleize method (PriceEstimate.human_name #=> "Price Estimate").
       # Default scope of the translation is activerecord.models
       # Specify +options+ with additional translating options.
       def human_name(options = {})
         defaults = self_and_descendents_from_active_record.map do |klass|
           :"#{klass.name.underscore}"
         end 
-        defaults << self.name.humanize
+        defaults << self.name.titleize
         I18n.translate(defaults.shift, {:scope => [:activerecord, :models], :count => 1, :default => defaults}.merge(options))
       end
 
diff --git a/activerecord/test/cases/reflection_test.rb b/activerecord/test/cases/reflection_test.rb
index 8b1c714..2981638 100644
--- a/activerecord/test/cases/reflection_test.rb
+++ b/activerecord/test/cases/reflection_test.rb
@@ -4,9 +4,10 @@ require 'models/customer'
 require 'models/company'
 require 'models/company_in_module'
 require 'models/subscriber'
+require 'models/price_estimate'
 
 class ReflectionTest < ActiveRecord::TestCase
-  fixtures :topics, :customers, :companies, :subscribers
+  fixtures :topics, :customers, :companies, :subscribers, :price_estimates
 
   def setup
     @first = Topic.find(1)
@@ -51,7 +52,12 @@ class ReflectionTest < ActiveRecord::TestCase
     assert subscriber.column_for_attribute("name").null
     assert !subscriber.column_for_attribute("nick").null
   end
-
+  
+  def test_human_name
+    assert_equal "Price Estimate", PriceEstimate.human_name
+    assert_equal "Subscriber", Subscriber.human_name
+  end
+  
   def test_human_name_for_column
     assert_equal "Author name", @first.column_for_attribute("author_name").human_name
   end
-- 
1.5.5.3

