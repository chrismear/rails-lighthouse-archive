<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-16T04:14:42+01:00</created-at>
  <creator-id type="integer">37950</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2506</number>
  <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
  <priority type="integer">1652</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.3.4 migrations</tag>
  <title>models are not loaded in migrations when config.threadsafe! is set</title>
  <updated-at type="datetime">2009-10-21T16:35:48+01:00</updated-at>
  <user-id type="integer">60851</user-id>
  <version type="integer">16</version>
  <user-name>Ryan Daigle</user-name>
  <creator-name>Andrew Roth</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Make a new rails project
Make a new resource, and refer to the model somewhere in the migration
Enable config.threadsafe! in production mode, and migrate in production mode

 ex ruby script/generate resource Test

@@@
class CreateTests &lt; ActiveRecord::Migration
  def self.up
    Test

    create_table :tests do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :tests
  end
end
@@@

and config/environments/production.rb has

@@@
# Enable threaded mode
config.threadsafe!
@@@

rake db:migrate RAILS_ENV=production

@@@
(in /Users/andrewroth/Development/test_models_in_migration)
==  CreateTests: migrating ====================================================
rake aborted!
An error has occurred, this and all later migrations canceled:

uninitialized constant CreateTests::Test

(See full trace by running task with --trace)
@@@

without threadsafe! it loads Test correctly.</original-body>
  <latest-body>Make a new rails project
Make a new resource, and refer to the model somewhere in the migration
Enable config.threadsafe! in production mode, and migrate in production mode

 ex ruby script/generate resource Test

@@@
class CreateTests &lt; ActiveRecord::Migration
  def self.up
    Test

    create_table :tests do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :tests
  end
end
@@@

and config/environments/production.rb has

@@@
# Enable threaded mode
config.threadsafe!
@@@

rake db:migrate RAILS_ENV=production

@@@
(in /Users/andrewroth/Development/test_models_in_migration)
==  CreateTests: migrating ====================================================
rake aborted!
An error has occurred, this and all later migrations canceled:

uninitialized constant CreateTests::Test

(See full trace by running task with --trace)
@@@

without threadsafe! it loads Test correctly.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Make a new rails project Make a new resource, and refer to the
model somewhere in the migration Enable config.threadsafe! in
production mode, and migrate in production mode&lt;/p&gt;
&lt;p&gt;ex ruby script/generate resource Test&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class CreateTests &amp;lt; ActiveRecord::Migration
  def self.up
    Test

    create_table :tests do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :tests
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and config/environments/production.rb has&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
# Enable threaded mode
config.threadsafe!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;rake db:migrate RAILS_ENV=production&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
(in /Users/andrewroth/Development/test_models_in_migration)
==  CreateTests: migrating ====================================================
rake aborted!
An error has occurred, this and all later migrations canceled:

uninitialized constant CreateTests::Test

(See full trace by running task with --trace)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;without threadsafe! it loads Test correctly.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>- Make a new rails project
- Make a new model, and refer to the model somewhere in the migration
- Enable config.threadsafe! in production mode, and migrate in production mode

 ex ruby script/generate resource Test

@@@
class CreateTests &lt; ActiveRecord::Migration
  def self.up
    Test

    create_table :tests do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :tests
  end
end
@@@

and config/environments/production.rb has

@@@
# Enable threaded mode
config.threadsafe!
@@@

rake db:migrate RAILS_ENV=production produces

@@@
(in /Users/andrewroth/Development/test_models_in_migration)
==  CreateTests: migrating ====================================================
rake aborted!
An error has occurred, this and all later migrations canceled:

uninitialized constant CreateTests::Test

(See full trace by running task with --trace)
@@@

without threadsafe! it loads Test correctly.</body>
      <body-html>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;Make a new rails project&lt;/li&gt;
&lt;li&gt;Make a new model, and refer to the model somewhere in the
migration&lt;/li&gt;
&lt;li&gt;Enable config.threadsafe! in production mode, and migrate in
production mode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ex ruby script/generate resource Test&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class CreateTests &amp;lt; ActiveRecord::Migration
  def self.up
    Test

    create_table :tests do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :tests
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and config/environments/production.rb has&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
# Enable threaded mode
config.threadsafe!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;rake db:migrate RAILS_ENV=production produces&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
(in /Users/andrewroth/Development/test_models_in_migration)
==  CreateTests: migrating ====================================================
rake aborted!
An error has occurred, this and all later migrations canceled:

uninitialized constant CreateTests::Test

(See full trace by running task with --trace)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;without threadsafe! it loads Test correctly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-16T04:14:42+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-04-16T18:17:24+01:00</updated-at>
      <user-id type="integer">37950</user-id>
      <version type="integer">1</version>
      <user-name>Andrew Roth</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>the threadsafe option in production doesn't load the dependencies, you can configure it to load them with this option in your production.rb just after config.threadsafe!

@@@ ruby
config.dependency_loading = true
@@@

but I don't know how rails can behave with both options enabled in production</body>
      <body-html>&lt;div&gt;&lt;p&gt;the threadsafe option in production doesn't load the
dependencies, you can configure it to load them with this option in
your production.rb just after config.threadsafe!&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;config.dependency_loading = true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but I don't know how rails can behave with both options enabled
in production&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-28T17:00:53+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-05-28T17:00:59+01:00</updated-at>
      <user-id type="integer">11474</user-id>
      <version type="integer">2</version>
      <user-name>calavera</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm pretty sure `config.threadsafe!` auto-requires all `*.rb` files it can find in your app on start up.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm pretty sure &lt;code&gt;config.threadsafe!&lt;/code&gt; auto-requires
all &lt;code&gt;*.rb&lt;/code&gt; files it can find in your app on start
up.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-29T09:19:24+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-05-29T09:19:27+01:00</updated-at>
      <user-id type="integer">46643</user-id>
      <version type="integer">3</version>
      <user-name>thedarkone</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@thedarkone take a look at the threadsafe! source code:

@@@ ruby
# Enable threaded mode. Allows concurrent requests to controller actions and
# multiple database connections. Also disables automatic dependency loading
# after boot, and disables reloading code on every request, as these are
# fundamentally incompatible with thread safety.
    def threadsafe!
      self.preload_frameworks = true
      self.cache_classes = true
      self.dependency_loading = false
      self.action_controller.allow_concurrency = true
      self
    end
@@@

with dependency_loading = false rails doesn't autoload dependencies and models are a dependency of migrations</body>
      <body-html>&lt;div&gt;&lt;p&gt;@thedarkone take a look at the threadsafe! source code:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# Enable threaded mode. Allows concurrent requests to controller actions and
# multiple database connections. Also disables automatic dependency loading
# after boot, and disables reloading code on every request, as these are
# fundamentally incompatible with thread safety.
    def threadsafe!
      self.preload_frameworks = true
      self.cache_classes = true
      self.dependency_loading = false
      self.action_controller.allow_concurrency = true
      self
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;with dependency_loading = false rails doesn't autoload
dependencies and models are a dependency of migrations&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-29T09:42:01+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-05-29T09:42:05+01:00</updated-at>
      <user-id type="integer">11474</user-id>
      <version type="integer">4</version>
      <user-name>calavera</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic dependency loading is not thread safe, that's why it is being disabled.

Also checkout what happens in `load_application_classes` method if `cache_classes` is set to `true`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic dependency loading is not thread safe, that's why it
is being disabled.&lt;/p&gt;
&lt;p&gt;Also checkout what happens in
&lt;code&gt;load_application_classes&lt;/code&gt; method if
&lt;code&gt;cache_classes&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-30T16:48:50+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-05-30T16:48:52+01:00</updated-at>
      <user-id type="integer">46643</user-id>
      <version type="integer">5</version>
      <user-name>thedarkone</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-30T17:38:55+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-05-30T17:38:56+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't think there is a good fix here. The real issue is that turning off dependency_loading doesn't allow &quot;magic&quot; loading after boot. I would suggest requiring the models the you need in the migration, or better including the model definition again so the migration doesn't depend on its existence.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think there is a good fix here. The real issue is that
turning off dependency_loading doesn't allow &quot;magic&quot; loading after
boot. I would suggest requiring the models the you need in the
migration, or better including the model definition again so the
migration doesn't depend on its existence.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-09T15:07:52+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.2 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-06-09T15:07:57+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">7</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Could we add a warning about that problem somewhere near the config in environments/production.rb? Or perhaps even in the actual 'const missing' error message? 'This might be caused by the fact that you running your application in threadsafe! mode. Please require all dependencies explictily.

I could set up a proposel version on github, if you guys would support one of these measures.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could we add a warning about that problem somewhere near the
config in environments/production.rb? Or perhaps even in the actual
'const missing' error message? 'This might be caused by the fact
that you running your application in threadsafe! mode. Please
require all dependencies explictily.&lt;/p&gt;
&lt;p&gt;I could set up a proposel version on github, if you guys would
support one of these measures.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-27T13:30:13+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 migrations
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-07-27T13:30:16+01:00</updated-at>
      <user-id type="integer">62959</user-id>
      <version type="integer">8</version>
      <user-name>Reto</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Wouldn't that break lots of existing migrations?

What about making threadsafe! not be applied when doing migrations?  Even if it's set in the config file.  It really only benefits long-running apps, no?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Wouldn't that break lots of existing migrations?&lt;/p&gt;
&lt;p&gt;What about making threadsafe! not be applied when doing
migrations? Even if it's set in the config file. It really only
benefits long-running apps, no?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-28T20:19:00+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-07-28T20:19:07+01:00</updated-at>
      <user-id type="integer">37950</user-id>
      <version type="integer">9</version>
      <user-name>Andrew Roth</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Or could we even force a non-threadsafe environment for rake tasks? It doesn't make sense to be threadsafe there anyway.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Or could we even force a non-threadsafe environment for rake
tasks? It doesn't make sense to be threadsafe there anyway.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-28T20:19:06+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-07-28T20:19:14+01:00</updated-at>
      <user-id type="integer">62959</user-id>
      <version type="integer">10</version>
      <user-name>Reto</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>heh.</body>
      <body-html>&lt;div&gt;&lt;p&gt;heh.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-28T20:20:53+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-07-28T20:20:56+01:00</updated-at>
      <user-id type="integer">37950</user-id>
      <version type="integer">11</version>
      <user-name>Andrew Roth</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>lol, what a coincidence :). 

&quot;Wouldn't that break lots of existing migrations&quot;: No, why? I would only extend the text message of the 'no such constant' exception, of course only when the threadsafe option has been set. And perhaps only the first time.</body>
      <body-html>&lt;div&gt;&lt;p&gt;lol, what a coincidence :).&lt;/p&gt;
&lt;p&gt;&quot;Wouldn't that break lots of existing migrations&quot;: No, why? I
would only extend the text message of the 'no such constant'
exception, of course only when the threadsafe option has been set.
And perhaps only the first time.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-28T20:30:34+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-07-28T20:30:39+01:00</updated-at>
      <user-id type="integer">62959</user-id>
      <version type="integer">12</version>
      <user-name>Reto</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Regardless, you said yourself it at least doesn't make sense.  But it would make every migration that accesses a model invalid for any application that uses threadsafe!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Regardless, you said yourself it at least doesn't make sense.
But it would make every migration that accesses a model invalid for
any application that uses threadsafe!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-28T21:42:56+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-07-28T21:43:02+01:00</updated-at>
      <user-id type="integer">37950</user-id>
      <version type="integer">13</version>
      <user-name>Andrew Roth</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>hmm, I think I can't follow you? What exactly would make these migrations invalid? If they used to avoid that problem by explicitly require models then they shouldn't notice the difference. Or what do you mean?</body>
      <body-html>&lt;div&gt;&lt;p&gt;hmm, I think I can't follow you? What exactly would make these
migrations invalid? If they used to avoid that problem by
explicitly require models then they shouldn't notice the
difference. Or what do you mean?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-29T10:30:13+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-07-29T10:30:18+01:00</updated-at>
      <user-id type="integer">62959</user-id>
      <version type="integer">14</version>
      <user-name>Reto</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What I mean is that right now, people are writing migrations that access models.  I've done it myself when using a legacy database to get a table name, ex. add_column Person.table_name, ... or maybe to repair some inconsistent data put in by a bug, like orphaned or duplicate rows.

What it comes down to is whether the solution is to make people require models in migrations, or make migration loading work in migrations (when threadsafe! is on).  I would say that being able to access models in migration is reasonable, and being widely used right now, so the proper way to fix this is to make model accesses work in migrations.  The simplest way I can think of to do that is to disable threadsafe mode when migrating somehow.

Of course, an explanation in the error message is better than nothing though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What I mean is that right now, people are writing migrations
that access models. I've done it myself when using a legacy
database to get a table name, ex. add_column Person.table_name, ...
or maybe to repair some inconsistent data put in by a bug, like
orphaned or duplicate rows.&lt;/p&gt;
&lt;p&gt;What it comes down to is whether the solution is to make people
require models in migrations, or make migration loading work in
migrations (when threadsafe! is on). I would say that being able to
access models in migration is reasonable, and being widely used
right now, so the proper way to fix this is to make model accesses
work in migrations. The simplest way I can think of to do that is
to disable threadsafe mode when migrating somehow.&lt;/p&gt;
&lt;p&gt;Of course, an explanation in the error message is better than
nothing though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-18T03:45:47+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-08-18T03:45:51+01:00</updated-at>
      <user-id type="integer">37950</user-id>
      <version type="integer">15</version>
      <user-name>Andrew Roth</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm experiencing this behavior with rake tasks as well.  This would seem to be more problematic since there's no philosophical opposition to referencing models within rake tasks?

My specific scenario is that I have a rake bootstrap task that sets up some default system data.  Even when depending on the :environment task to load everything up for me, my models aren't found within the rake task unless explicitly required.  Disabling config.threadsafe! fixes the reference issues.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm experiencing this behavior with rake tasks as well. This
would seem to be more problematic since there's no philosophical
opposition to referencing models within rake tasks?&lt;/p&gt;
&lt;p&gt;My specific scenario is that I have a rake bootstrap task that
sets up some default system data. Even when depending on the
:environment task to load everything up for me, my models aren't
found within the rake task unless explicitly required. Disabling
config.threadsafe! fixes the reference issues.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-10-21T16:35:46+01:00</created-at>
      <creator-id type="integer">37950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2506</number>
      <permalink>models-are-not-loaded-in-migrations-when-configthreadsafe-is-set</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.4 migrations</tag>
      <title>models are not loaded in migrations when config.threadsafe! is set</title>
      <updated-at type="datetime">2009-10-21T16:35:48+01:00</updated-at>
      <user-id type="integer">60851</user-id>
      <version type="integer">16</version>
      <user-name>Ryan Daigle</user-name>
      <creator-name>Andrew Roth</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2506</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
