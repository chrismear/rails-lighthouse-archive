<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-29T02:29:23+01:00</created-at>
  <creator-id type="integer">106139</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5137</number>
  <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>associations belongs_to has_one_through patch</tag>
  <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
  <updated-at type="datetime">2011-03-29T02:29:23+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">19</version>
  <user-name>Repository</user-name>
  <creator-name>hjdivad</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>The following test should illustrate the problem:

@@@ ruby
    class Minivan &lt; ActiveRecord::Base
      set_primary_key :minivan_id

      belongs_to :speedometer
      has_one :dashboard, :through =&gt; :speedometer
    end


    def test_creating_association_builds_through_record_for_new_through_belongs_to
        new_minivan = Minivan.new
        assert_nothing_raised do
            new_minivan.dashboard = dashboards( :cool_first )
        end
        assert new_minivan.speedometer
        assert_equal dashboards( :cool_first ), new_minivan.speedometer.dashboard
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
        assert new_minivan.save
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
    end
@@@


There is a patch at &lt;http://github.com/hjdivad/rails/tree/issue-5137&gt;, or see
the attached file.</original-body>
  <latest-body>The following test should illustrate the problem:

@@@ ruby
    class Minivan &lt; ActiveRecord::Base
      set_primary_key :minivan_id

      belongs_to :speedometer
      has_one :dashboard, :through =&gt; :speedometer
    end


    def test_creating_association_builds_through_record_for_new_through_belongs_to
        new_minivan = Minivan.new
        assert_nothing_raised do
            new_minivan.dashboard = dashboards( :cool_first )
        end
        assert new_minivan.speedometer
        assert_equal dashboards( :cool_first ), new_minivan.speedometer.dashboard
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
        assert new_minivan.save
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
    end
@@@


There is a patch at &lt;http://github.com/hjdivad/rails/tree/issue-5137&gt;, or see
the attached file.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The following test should illustrate the problem:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    class Minivan &amp;lt; ActiveRecord::Base
      set_primary_key :minivan_id

      belongs_to :speedometer
      has_one :dashboard, :through =&amp;gt; :speedometer
    end


    def test_creating_association_builds_through_record_for_new_through_belongs_to
        new_minivan = Minivan.new
        assert_nothing_raised do
            new_minivan.dashboard = dashboards( :cool_first )
        end
        assert new_minivan.speedometer
        assert_equal dashboards( :cool_first ), new_minivan.speedometer.dashboard
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
        assert new_minivan.save
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There is a patch at &lt;a href=
&quot;http://github.com/hjdivad/rails/tree/issue-5137&quot;&gt;http://github.com/hjdivad/rails/tree/issue-5137&lt;/a&gt;,
or see&lt;br&gt;
the attached file.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The following test should illustrate the problem:

@@@ ruby
    class Minivan &lt; ActiveRecord::Base
      set_primary_key :minivan_id

      belongs_to :speedometer
      has_one :dashboard, :through =&gt; :speedometer
    end


    def test_creating_association_builds_through_record_for_new_through_belongs_to
        new_minivan = Minivan.new
        assert_nothing_raised do
            new_minivan.dashboard = dashboards( :cool_first )
        end
        assert new_minivan.speedometer
        assert_equal dashboards( :cool_first ), new_minivan.speedometer.dashboard
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
        assert new_minivan.save
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
    end
@@@


There is a patch at &lt;http://github.com/hjdivad/rails/tree/issue-5137&gt;, or see
the attached file.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The following test should illustrate the problem:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    class Minivan &amp;lt; ActiveRecord::Base
      set_primary_key :minivan_id

      belongs_to :speedometer
      has_one :dashboard, :through =&amp;gt; :speedometer
    end


    def test_creating_association_builds_through_record_for_new_through_belongs_to
        new_minivan = Minivan.new
        assert_nothing_raised do
            new_minivan.dashboard = dashboards( :cool_first )
        end
        assert new_minivan.speedometer
        assert_equal dashboards( :cool_first ), new_minivan.speedometer.dashboard
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
        assert new_minivan.save
        assert_equal dashboards( :cool_first ), new_minivan.dashboard
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There is a patch at &lt;a href=
&quot;http://github.com/hjdivad/rails/tree/issue-5137&quot;&gt;http://github.com/hjdivad/rails/tree/issue-5137&lt;/a&gt;,
or see&lt;br&gt;
the attached file.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T04:17:59+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-17T04:20:20+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">1</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T04:20:37+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-17T04:20:39+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">2</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The above test fails in the block because the association proxy is nil, because
of the following code:

@@@ ruby
    # 38f1ea8fe267947f4baf832d3b15ee5b83f18f71
    # associations.rb:1364
    if retval.nil? and association_proxy_class == BelongsToAssociation
        association_instance_set(reflection.name, nil)
        return nil
    end
@@@

I believe the motivation for the above code was to handle the case exemplified
by the following test:

@@@ ruby
    # 38f1ea8fe267947f4baf832d3b15ee5b83f18f71
    # belongs_to_associations_test.rb:305
    def test_forgetting_the_load_when_foreign_key_enters_late
        c = Client.new
        assert_nil c.firm_with_basic_id

        c.firm_id = 1
        # sometimes tests on Oracle fail if ORDER BY is not provided therefore add always :order with :first
        assert_equal Firm.find(:first, :order =&gt; &quot;id&quot;), c.firm_with_basic_id
    end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The above test fails in the block because the association proxy
is nil, because&lt;br&gt;
of the following code:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    # 38f1ea8fe267947f4baf832d3b15ee5b83f18f71
    # associations.rb:1364
    if retval.nil? and association_proxy_class == BelongsToAssociation
        association_instance_set(reflection.name, nil)
        return nil
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I believe the motivation for the above code was to handle the
case exemplified&lt;br&gt;
by the following test:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    # 38f1ea8fe267947f4baf832d3b15ee5b83f18f71
    # belongs_to_associations_test.rb:305
    def test_forgetting_the_load_when_foreign_key_enters_late
        c = Client.new
        assert_nil c.firm_with_basic_id

        c.firm_id = 1
        # sometimes tests on Oracle fail if ORDER BY is not provided therefore add always :order with :first
        assert_equal Firm.find(:first, :order =&amp;gt; &quot;id&quot;), c.firm_with_basic_id
    end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T04:26:52+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-17T04:26:56+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">3</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>In case it's not clear, the patch handles the test_forgetting_the_load_when_foreign_key_enters_late test (as well as the rest of the activerecord test suite, at least in my environment :-).</body>
      <body-html>&lt;div&gt;&lt;p&gt;In case it's not clear, the patch handles the
test_forgetting_the_load_when_foreign_key_enters_late test (as well
as the rest of the activerecord test suite, at least in my
environment :-).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T04:27:54+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-17T04:27:58+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">4</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [0e969bdaf8ff2e3384350687aa0b583f94d6dfbc]) fix escaping id and parameters in path [#5137 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/0e969bdaf8ff2e3384350687aa0b583f94d6dfbc</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/0e969bdaf8ff2e3384350687aa0b583f94d6dfbc&quot;
title=
&quot;Changeset [0e969bdaf8ff2e3384350687aa0b583f94d6dfbc]&quot;&gt;[0e969bdaf8ff2e3384350687aa0b583f94d6dfbc]&lt;/a&gt;)
fix escaping id and parameters in path [&lt;a href=
&quot;/projects/8994/tickets/5137&quot; title=&quot;Ticket #5137&quot;&gt;#5137&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/0e969bdaf8ff2e3384350687aa0b583f94d6dfbc&quot;&gt;
http://github.com/rails/rails/commit/0e969bdaf8ff2e3384350687aa0b58...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-26T16:50:17+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-26T16:50:18+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm fairly sure the linked commit actually resolves 5173, and not this bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm fairly sure the linked commit actually resolves 5173, and
not this bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-26T18:38:45+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-26T18:38:48+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">6</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry, my bad. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, my bad. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-26T18:42:39+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: resolved
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-26T18:42:41+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">7</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>No worries (^_^)</body>
      <body-html>&lt;div&gt;&lt;p&gt;No worries (^_^)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-26T18:47:42+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-26T18:47:47+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">8</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Simple ways to love your wardrobe.
An online shop specializing in &lt;a href='http://www.hervelegerbrand.com'&gt;Herve Leger&lt;/a&gt;, Herve Leger Dress, Herve Leger Skirt, 
Herve Leger Sale, Herve Leger Dresses.All new style in our store.

Shop the latest styles &lt;a href='http://www.juicyshoponline.com'&gt;Juicy Couture&lt;/a&gt; handbags, juicy couture tracksuit.
Juicy couture sale, juicy couture outlet,100% quality guarantee.

FashionStyleOnsale offer high quality Moncler Jackets at low price. 
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler Coats at FashionStyleOnsale
&lt;a href='http://www.fashionstyleonsale.com'&gt;moncler&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Simple ways to love your wardrobe.&lt;br&gt;
An online shop specializing in &lt;a href=
&quot;http://www.hervelegerbrand.com&quot;&gt;Herve Leger&lt;/a&gt;, Herve Leger
Dress, Herve Leger Skirt,&lt;br&gt;
Herve Leger Sale, Herve Leger Dresses.All new style in our
store.&lt;/p&gt;
&lt;p&gt;Shop the latest styles &lt;a href=
&quot;http://www.juicyshoponline.com&quot;&gt;Juicy Couture&lt;/a&gt; handbags, juicy
couture tracksuit.&lt;br&gt;
Juicy couture sale, juicy couture outlet,100% quality
guarantee.&lt;/p&gt;
&lt;p&gt;FashionStyleOnsale offer high quality Moncler Jackets at low
price.&lt;br&gt;
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler
Coats at FashionStyleOnsale&lt;br&gt;
&lt;a href=&quot;http://www.fashionstyleonsale.com&quot;&gt;moncler&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T15:14:11+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-07-27T17:39:53+01:00</updated-at>
      <user-id type="integer">109040</user-id>
      <version type="integer">9</version>
      <user-name>matin</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>created another ticket in regards to querying a has_one :through through a belongs_to.  figured id make it separate since this ticket is about creating the records.

#5512  i also have a test appended.</body>
      <body-html>&lt;div&gt;&lt;p&gt;created another ticket in regards to querying a has_one :through
through a belongs_to. figured id make it separate since this ticket
is about creating the records.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/5512&quot; title=
&quot;Ticket #5512&quot;&gt;#5512&lt;/a&gt; i also have a test appended.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T17:02:49+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-08-31T17:02:50+01:00</updated-at>
      <user-id type="integer">23839</user-id>
      <version type="integer">10</version>
      <user-name>Zachery Hostens</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I am not able to reproduce this problem with rails master. This is what I did.

@@@ ruby
require 'test/unit'
require 'test/unit/assertions'
class Object
  include Test::Unit::Assertions
end


ActiveRecord::Schema.define(:version =&gt; 20100511140856) do

  create_table &quot;dashboards&quot;, :force =&gt; true do |t|
    t.string &quot;name&quot;
  end

  create_table &quot;minivans&quot;, :force =&gt; true do |t|
    t.string &quot;name&quot;
  end

  create_table &quot;speedometers&quot;, :force =&gt; true do |t|
    t.string  &quot;name&quot;
    t.integer &quot;minivan_id&quot;
    t.integer &quot;dashboard_id&quot;
  end


end
class Dashboard &lt; ActiveRecord::Base
end

class Minivan &lt; ActiveRecord::Base

  has_one :speedometer
  has_one :dashboard, :through =&gt; :speedometer

  def self.lab
    minivan = Minivan.new(:name =&gt; 'm1')
    dashboard = Dashboard.create(:name =&gt; 'd1')

    minivan.dashboard = dashboard

    assert minivan.speedometer
    assert_equal dashboard, minivan.dashboard
    minivan.save
    assert_equal dashboard, minivan.dashboard
  end

end

class Speedometer &lt; ActiveRecord::Base
  belongs_to :minivan
  belongs_to :dashboard
end

&gt; Minivan.lab does not fail for me.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not able to reproduce this problem with rails master. This
is what I did.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'test/unit'
require 'test/unit/assertions'
class Object
  include Test::Unit::Assertions
end


ActiveRecord::Schema.define(:version =&amp;gt; 20100511140856) do

  create_table &quot;dashboards&quot;, :force =&amp;gt; true do |t|
    t.string &quot;name&quot;
  end

  create_table &quot;minivans&quot;, :force =&amp;gt; true do |t|
    t.string &quot;name&quot;
  end

  create_table &quot;speedometers&quot;, :force =&amp;gt; true do |t|
    t.string  &quot;name&quot;
    t.integer &quot;minivan_id&quot;
    t.integer &quot;dashboard_id&quot;
  end


end
class Dashboard &amp;lt; ActiveRecord::Base
end

class Minivan &amp;lt; ActiveRecord::Base

  has_one :speedometer
  has_one :dashboard, :through =&amp;gt; :speedometer

  def self.lab
    minivan = Minivan.new(:name =&amp;gt; 'm1')
    dashboard = Dashboard.create(:name =&amp;gt; 'd1')

    minivan.dashboard = dashboard

    assert minivan.speedometer
    assert_equal dashboard, minivan.dashboard
    minivan.save
    assert_equal dashboard, minivan.dashboard
  end

end

class Speedometer &amp;lt; ActiveRecord::Base
  belongs_to :minivan
  belongs_to :dashboard
end

&amp;gt; Minivan.lab does not fail for me.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T22:04:16+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-08-31T22:04:17+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok. The test provided in #5512 does fail for me. Looking into it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok. The test provided in &lt;a href=&quot;/projects/8994/tickets/5512&quot;
title=&quot;Ticket #5512&quot;&gt;#5512&lt;/a&gt; does fail for me. Looking into
it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T22:13:24+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-08-31T22:13:27+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">12</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Neeraj,

Thank you for looking into this.

Your code above does not test the problem: there, you have a has_one (dashboard)
through a has_one(speedometer).

If you change Minivan so it belongs_to(speedometer), instead of has_one, then
your test will exhibit the same failure.


@@@ 
    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord
    $ ruby --version
    ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]
    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord
    $ git rev-parse HEAD
    8b2e4fddbf7e9d204579cd87ac72f14bc592d5a5
    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord
@@@


@@@ ruby
    # cat test/cases/associations/issue_5137.rb
    require 'test/unit'
    require 'test/unit/assertions'
    require 'test/cases/helper'
    class Object
      include Test::Unit::Assertions
    end


    ActiveRecord::Schema.define(:version =&gt; 20100511140856) do

      create_table &quot;dashboards&quot;, :force =&gt; true do |t|
        t.string &quot;name&quot;
      end

      create_table &quot;minivans&quot;, :force =&gt; true do |t|
        t.string &quot;name&quot;
      end

      create_table &quot;speedometers&quot;, :force =&gt; true do |t|
        t.string  &quot;name&quot;
        t.integer &quot;minivan_id&quot;
        t.integer &quot;dashboard_id&quot;
      end


    end
    class Dashboard &lt; ActiveRecord::Base
    end

    class Minivan &lt; ActiveRecord::Base

      set_primary_key :minivan_id


      belongs_to :speedometer
      has_one :dashboard, :through =&gt; :speedometer

      def self.lab
        minivan = Minivan.new(:name =&gt; 'm1')
        dashboard = Dashboard.create(:name =&gt; 'd1')

        minivan.dashboard = dashboard

        assert minivan.speedometer
        assert_equal dashboard, minivan.dashboard
        minivan.save
        assert_equal dashboard, minivan.dashboard
      end

    end

    class Speedometer &lt; ActiveRecord::Base
      belongs_to :minivan
      belongs_to :dashboard
    end


    class MinivanTest &lt; ActiveRecord::TestCase
      def test_minivan_lab
        Minivan.lab
      end
    end
@@@


@@@
    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord
    $ ruby -I'test' -I'test/connections/native_sqlite3/' -I'.' test/cases/associations/issue_5137.rb
    Using native SQLite3
    -- create_table(&quot;dashboards&quot;, {:force=&gt;true})
       -&gt; 0.0052s
    -- create_table(&quot;minivans&quot;, {:force=&gt;true})
       -&gt; 0.0273s
    -- create_table(&quot;speedometers&quot;, {:force=&gt;true})
       -&gt; 0.0055s
    -- initialize_schema_migrations_table()
       -&gt; 0.0014s
    -- assume_migrated_upto_version(20100511140856, &quot;db/migrate&quot;)
       -&gt; 0.0003s
    Loaded suite test/cases/associations/issue_5137
    Started
    E
    Finished in 0.057919 seconds.

      1) Error:
    test_minivan_lab(MinivanTest):
    NoMethodError: undefined method `build' for nil:NilClass
        /home/davidjh/devel/foss/rails/activerecord/lib/active_record/associations/has_one_through_association.rb:27:in `create_through_record'
        /home/davidjh/devel/foss/rails/activerecord/lib/active_record/associations/has_one_through_association.rb:10:in `replace'
        /home/davidjh/devel/foss/rails/activerecord/lib/active_record/associations.rb:1474:in `block in association_accessor_methods'
        test/cases/associations/issue_5137.rb:42:in `lab'
        test/cases/associations/issue_5137.rb:60:in `test_minivan_lab'
        /home/davidjh/.rvm/gems/ruby-1.9.2-p0/gems/mocha-0.9.8/lib/mocha/integration/mini_test/version_131_and_above.rb:26:in `run'
        /home/davidjh/devel/foss/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run'
        /home/davidjh/devel/foss/rails/activesupport/lib/active_support/callbacks.rb:413:in `_run_setup_callbacks'
        /home/davidjh/devel/foss/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run'

    1 tests, 0 assertions, 0 failures, 1 errors, 0 skips

    Test run options: --seed 37085
@@@


I have rebased http://github.com/hjdivad/rails/tree/issue-5137 to the current
master, which as of now is  8b2e4fddbf7e9d204579cd87ac72f14bc592d5a5.  The diff
remains basically the same, but I have regenerated it again for your
convenience.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj,&lt;/p&gt;
&lt;p&gt;Thank you for looking into this.&lt;/p&gt;
&lt;p&gt;Your code above does not test the problem: there, you have a
has_one (dashboard)&lt;br&gt;
through a has_one(speedometer).&lt;/p&gt;
&lt;p&gt;If you change Minivan so it belongs_to(speedometer), instead of
has_one, then&lt;br&gt;
your test will exhibit the same failure.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord
    $ ruby --version
    ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]
    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord
    $ git rev-parse HEAD
    8b2e4fddbf7e9d204579cd87ac72f14bc592d5a5
    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    # cat test/cases/associations/issue_5137.rb
    require 'test/unit'
    require 'test/unit/assertions'
    require 'test/cases/helper'
    class Object
      include Test::Unit::Assertions
    end


    ActiveRecord::Schema.define(:version =&amp;gt; 20100511140856) do

      create_table &quot;dashboards&quot;, :force =&amp;gt; true do |t|
        t.string &quot;name&quot;
      end

      create_table &quot;minivans&quot;, :force =&amp;gt; true do |t|
        t.string &quot;name&quot;
      end

      create_table &quot;speedometers&quot;, :force =&amp;gt; true do |t|
        t.string  &quot;name&quot;
        t.integer &quot;minivan_id&quot;
        t.integer &quot;dashboard_id&quot;
      end


    end
    class Dashboard &amp;lt; ActiveRecord::Base
    end

    class Minivan &amp;lt; ActiveRecord::Base

      set_primary_key :minivan_id


      belongs_to :speedometer
      has_one :dashboard, :through =&amp;gt; :speedometer

      def self.lab
        minivan = Minivan.new(:name =&amp;gt; 'm1')
        dashboard = Dashboard.create(:name =&amp;gt; 'd1')

        minivan.dashboard = dashboard

        assert minivan.speedometer
        assert_equal dashboard, minivan.dashboard
        minivan.save
        assert_equal dashboard, minivan.dashboard
      end

    end

    class Speedometer &amp;lt; ActiveRecord::Base
      belongs_to :minivan
      belongs_to :dashboard
    end


    class MinivanTest &amp;lt; ActiveRecord::TestCase
      def test_minivan_lab
        Minivan.lab
      end
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;    [davidjh@nyx ((no branch); ruby-1.9.2-p0)] ~/devel/foss/rails/activerecord
    $ ruby -I'test' -I'test/connections/native_sqlite3/' -I'.' test/cases/associations/issue_5137.rb
    Using native SQLite3
    -- create_table(&quot;dashboards&quot;, {:force=&amp;gt;true})
       -&amp;gt; 0.0052s
    -- create_table(&quot;minivans&quot;, {:force=&amp;gt;true})
       -&amp;gt; 0.0273s
    -- create_table(&quot;speedometers&quot;, {:force=&amp;gt;true})
       -&amp;gt; 0.0055s
    -- initialize_schema_migrations_table()
       -&amp;gt; 0.0014s
    -- assume_migrated_upto_version(20100511140856, &quot;db/migrate&quot;)
       -&amp;gt; 0.0003s
    Loaded suite test/cases/associations/issue_5137
    Started
    E
    Finished in 0.057919 seconds.

      1) Error:
    test_minivan_lab(MinivanTest):
    NoMethodError: undefined method `build' for nil:NilClass
        /home/davidjh/devel/foss/rails/activerecord/lib/active_record/associations/has_one_through_association.rb:27:in `create_through_record'
        /home/davidjh/devel/foss/rails/activerecord/lib/active_record/associations/has_one_through_association.rb:10:in `replace'
        /home/davidjh/devel/foss/rails/activerecord/lib/active_record/associations.rb:1474:in `block in association_accessor_methods'
        test/cases/associations/issue_5137.rb:42:in `lab'
        test/cases/associations/issue_5137.rb:60:in `test_minivan_lab'
        /home/davidjh/.rvm/gems/ruby-1.9.2-p0/gems/mocha-0.9.8/lib/mocha/integration/mini_test/version_131_and_above.rb:26:in `run'
        /home/davidjh/devel/foss/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run'
        /home/davidjh/devel/foss/rails/activesupport/lib/active_support/callbacks.rb:413:in `_run_setup_callbacks'
        /home/davidjh/devel/foss/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run'

    1 tests, 0 assertions, 0 failures, 1 errors, 0 skips

    Test run options: --seed 37085&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have rebased &lt;a href=
&quot;http://github.com/hjdivad/rails/tree/issue-5137&quot;&gt;http://github.com/hjdivad/rails/tree/issue-5137&lt;/a&gt;
to the current&lt;br&gt;
master, which as of now is
8b2e4fddbf7e9d204579cd87ac72f14bc592d5a5. The diff&lt;br&gt;
remains basically the same, but I have regenerated it again for
your&lt;br&gt;
convenience.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T00:08:12+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-09-01T00:08:16+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">13</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I am unable to follow the logic why key_changed is needed. 

@@@ ruby
  key_changed = send(&quot;#{reflection.primary_key_name}_changed?&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am unable to follow the logic why key_changed is needed.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  key_changed = send(&quot;#{reflection.primary_key_name}_changed?&quot;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T21:43:47+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-09-01T21:43:49+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">14</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Neeraj,

The test for invoking association.reload was to handle the following case,
exhibited in a test in test/cases/associations/belongs_to_association_test.rb.

@@@ ruby
 def test_forgetting_the_load_when_foreign_key_enters_late
   c = Client.new
   assert_nil c.firm_with_basic_id

   c.firm_id = 1
   # sometimes tests on Oracle fail if ORDER BY is not provided
therefore add always :order with :first
   assert_equal Firm.find(:first, :order =&gt; &quot;id&quot;), c.firm_with_basic_id
 end
@@@

i.e. if the key changes, reload the association.  However, the original logic I
had did not properly handle all cases.  I have updated the patch branch with a
better patch that is also hopefully more clear.  Attached is the new patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj,&lt;/p&gt;
&lt;p&gt;The test for invoking association.reload was to handle the
following case,&lt;br&gt;
exhibited in a test in
test/cases/associations/belongs_to_association_test.rb.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; def test_forgetting_the_load_when_foreign_key_enters_late
   c = Client.new
   assert_nil c.firm_with_basic_id

   c.firm_id = 1
   # sometimes tests on Oracle fail if ORDER BY is not provided
therefore add always :order with :first
   assert_equal Firm.find(:first, :order =&amp;gt; &quot;id&quot;), c.firm_with_basic_id
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;i.e. if the key changes, reload the association. However, the
original logic I&lt;br&gt;
had did not properly handle all cases. I have updated the patch
branch with a&lt;br&gt;
better patch that is also hopefully more clear. Attached is the new
patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T19:31:29+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-09-02T19:31:31+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">15</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I finally got the minivan example failing. However the attached fix is not passing. I am leaving for the long weekend. Will take a look when I come back.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I finally got the minivan example failing. However the attached
fix is not passing. I am leaving for the long weekend. Will take a
look when I come back.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-03T15:46:38+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-09-03T15:46:39+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">16</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T01:09:59+00:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-11-08T23:12:04+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">17</version>
      <user-name>jim123456</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>This bug seems to be related to (or possibly a duplicate of) #142.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This bug seems to be related to (or possibly a duplicate of)
&lt;a href=&quot;/projects/8994/tickets/142&quot; title=
&quot;Ticket #142&quot;&gt;#142&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-21T12:12:13+00:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2010-12-21T12:12:26+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">18</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [a0be389d39b790e0625339251d2674b8250b16b1]) Allow assignment on has_one :through where the owner is a new record [#5137 state:resolved]

This required changing the code to keep the association proxy for a belongs_to around, despite its target being nil. Which in turn required various changes to the way that stale target checking is handled, in order to support various edge cases (loaded target is nil then foreign key added, foreign key is changed and then changed back, etc). A side effect is that the code is nicer and more succinct.

Note that I am removing test_no_unexpected_aliasing since that is basically checking that the proxy for a belongs_to *does* change, which is the exact opposite of the intention of this commit. Also adding various tests for various edge cases and related things.

Phew, long commit message!
https://github.com/rails/rails/commit/a0be389d39b790e0625339251d2674b8250b16b1</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/a0be389d39b790e0625339251d2674b8250b16b1&quot;
title=
&quot;Changeset [a0be389d39b790e0625339251d2674b8250b16b1]&quot;&gt;[a0be389d39b790e0625339251d2674b8250b16b1]&lt;/a&gt;)
Allow assignment on has_one :through where the owner is a new
record [&lt;a href=&quot;/projects/8994/tickets/5137&quot; title=
&quot;Ticket #5137&quot;&gt;#5137&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;This required changing the code to keep the association proxy
for a belongs_to around, despite its target being nil. Which in
turn required various changes to the way that stale target checking
is handled, in order to support various edge cases (loaded target
is nil then foreign key added, foreign key is changed and then
changed back, etc). A side effect is that the code is nicer and
more succinct.&lt;/p&gt;
&lt;p&gt;Note that I am removing test_no_unexpected_aliasing since that
is basically checking that the proxy for a belongs_to &lt;em&gt;does&lt;/em&gt;
change, which is the exact opposite of the intention of this
commit. Also adding various tests for various edge cases and
related things.&lt;/p&gt;
&lt;p&gt;Phew, long commit message!&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/a0be389d39b790e0625339251d2674b8250b16b1&quot;&gt;
https://github.com/rails/rails/commit/a0be389d39b790e0625339251d267...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-04T00:28:02+00:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2011-01-04T00:28:15+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">19</version>
      <user-name>Repository</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&lt;a href=&quot;http://www.hdvideoconverter-mac.com&quot;&gt;Video Converter for Mac&lt;/a&gt;
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-converter-for-mac.html&quot;&gt;DVD Converter for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/blu-ray-ripper-for-mac.html&quot;&gt;Blu-Ray Ripper for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-maker-suite-for-mac.html&quot;&gt;DVD Maker Suite for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-creator-for-mac.html&quot;&gt;DVD Creator for Mac&lt;/a&gt; 	
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-ripper-for-mac.html&quot;&gt;DVD Ripper for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-copy-for-mac.html&quot;&gt;DVD Copy for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/blu-ray-video-converter.html&quot;&gt;Blu-Ray Video Converter&lt;/a&gt;     
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-converter.html&quot;&gt;DVD Converter&lt;/a&gt;  
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-burner.html&quot;&gt;DVD Burner&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.hdvideoconverter-mac.com&quot;&gt;Video Converter
for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-converter-for-mac.html&quot;&gt;DVD
Converter for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/blu-ray-ripper-for-mac.html&quot;&gt;Blu-Ray
Ripper for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-maker-suite-for-mac.html&quot;&gt;DVD
Maker Suite for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-creator-for-mac.html&quot;&gt;DVD
Creator for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-ripper-for-mac.html&quot;&gt;DVD
Ripper for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-copy-for-mac.html&quot;&gt;DVD
Copy for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/blu-ray-video-converter.html&quot;&gt;Blu-Ray
Video Converter&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-converter.html&quot;&gt;DVD
Converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-burner.html&quot;&gt;DVD
Burner&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-29T02:26:03+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5137</number>
      <permalink>patch-has_one-through-through-belongs_to-associations-does-not-build-through-record-when-assigning-the-has_one-record</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>associations belongs_to has_one_through patch</tag>
      <title>[PATCH] has_one :through through belongs_to associations does not build through record when assigning the has_one record</title>
      <updated-at type="datetime">2011-03-29T02:29:23+01:00</updated-at>
      <user-id type="integer">143271</user-id>
      <version type="integer">20</version>
      <user-name>happy2011</user-name>
      <creator-name>hjdivad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5137</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0f2430d0ed68a7681da8837487ddbdd3623f21e3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-17T04:20:37+01:00</created-at>
      <filename>issue-5137.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">595602</id>
      <size type="integer">2826</size>
      <uploader-id type="integer">106139</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/595602/issue-5137.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>0f2a5b623044844326ce9a0e1a2027934e3dd7a6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-01T00:08:12+01:00</created-at>
      <filename>issue-5137.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">654080</id>
      <size type="integer">2308</size>
      <uploader-id type="integer">106139</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/654080/issue-5137.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>353e28779055fe4a163ce1bd379ecdefe68d10cf</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-02T19:31:29+01:00</created-at>
      <filename>issue-5137.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">657063</id>
      <size type="integer">4155</size>
      <uploader-id type="integer">106139</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/657063/issue-5137.diff</url>
    </attachment>
  </attachments>
</ticket>
