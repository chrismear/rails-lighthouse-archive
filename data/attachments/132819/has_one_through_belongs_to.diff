From 69acd47d1140bb37080eafa2f9c5e242fda209a8 Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Jos=C3=A9=20Valim?= <jose.valim@gmail.com>
Date: Wed, 3 Jun 2009 09:37:23 +0200
Subject: [PATCH] Added has_one :though a belongs to association.

---
 activerecord/lib/active_record/associations.rb |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index 157716a..72806db 100755
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -2045,17 +2045,23 @@ module ActiveRecord
                     when reflection.options[:through]
                       through_conditions = through_reflection.options[:conditions] ? "AND #{interpolate_sql(sanitize_sql(through_reflection.options[:conditions]))}" : ''
 
-                      jt_foreign_key = jt_as_extra = jt_source_extra = jt_sti_extra = nil
+                      jt_foreign_key = jt_as_extra = jt_source_extra = jt_sti_extra = jt_parent_key = nil
                       first_key = second_key = as_extra = nil
 
-                      if through_reflection.options[:as] # has_many :through against a polymorphic join
+                      case
+                      when through_reflection.options[:as] # has_many :through against a polymorphic join
+                        jt_parent_key  = parent.primary_key
                         jt_foreign_key = through_reflection.options[:as].to_s + '_id'
                         jt_as_extra = " AND %s.%s = %s" % [
                           connection.quote_table_name(aliased_join_table_name),
                           connection.quote_column_name(through_reflection.options[:as].to_s + '_type'),
                           klass.quote_value(parent.active_record.base_class.name)
                         ]
+                      when through_reflection.macro == :belongs_to
+                        jt_parent_key  = through_reflection.primary_key_name
+                        jt_foreign_key = through_reflection.klass.primary_key
                       else
+                        jt_parent_key  = parent.primary_key
                         jt_foreign_key = through_reflection.primary_key_name
                       end
 
@@ -2097,7 +2103,7 @@ module ActiveRecord
                       " #{join_type} %s ON (%s.%s = %s.%s%s%s%s) " % [
                         table_alias_for(through_reflection.klass.table_name, aliased_join_table_name),
                         connection.quote_table_name(parent.aliased_table_name),
-                        connection.quote_column_name(parent.primary_key),
+                        connection.quote_column_name(jt_parent_key),
                         connection.quote_table_name(aliased_join_table_name),
                         connection.quote_column_name(jt_foreign_key),
                         jt_as_extra, jt_source_extra, jt_sti_extra
-- 
1.5.4.3

