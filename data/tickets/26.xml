<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-04-19T21:02:03+01:00</created-at>
  <creator-id type="integer">14994</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">26</number>
  <permalink>patch-fix-for-change_column-null-true-in-migrations</permalink>
  <priority type="integer">9451</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord migrations patch</tag>
  <title>Fix for change_column :null =&gt; true in migrations</title>
  <updated-at type="datetime">2008-04-29T22:53:11+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>Nate Wiger</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/26</url>
  <priority-name nil="true"></priority-name>
  <original-body>Currently, using change_column with :null =&gt; true on a formerly :null =&gt; false column does not have the proper effect. This patch fixes this issue by explicitly checking the keys for :null. I have been using this in a production setting for a while with no issues.

Note: This patch can't be compressed further (outside of syntactic trickery). It's very important to not do anything unless the :null option is present. Otherwise, you can generate bad SQL which attempts to re-set a NOT NULL column to NOT NULL, and Oracle in particular will generate a fatal error.

I couldn't figure out how to test this patch within the AR test framework, as the actual table definition needs to be reverified. I have tested this on mysql and Oracle on my end and it works well.

Thanks, Nate</original-body>
  <latest-body>Currently, using change_column with :null =&gt; true on a formerly :null =&gt; false column does not have the proper effect. This patch fixes this issue by explicitly checking the keys for :null. I have been using this in a production setting for a while with no issues.

Note: This patch can't be compressed further (outside of syntactic trickery). It's very important to not do anything unless the :null option is present. Otherwise, you can generate bad SQL which attempts to re-set a NOT NULL column to NOT NULL, and Oracle in particular will generate a fatal error.

I couldn't figure out how to test this patch within the AR test framework, as the actual table definition needs to be reverified. I have tested this on mysql and Oracle on my end and it works well.

Thanks, Nate</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Currently, using change_column with :null =&gt; true on a formerly :null =&gt; false column does not have the proper effect. This patch fixes this issue by explicitly checking the keys for :null. I have been using this in a production setting for a while with no issues.
&lt;/p&gt;&lt;p&gt;
Note: This patch can't be compressed further (outside of syntactic trickery). It's very important to not do anything unless the :null option is present. Otherwise, you can generate bad SQL which attempts to re-set a NOT NULL column to NOT NULL, and Oracle in particular will generate a fatal error.
&lt;/p&gt;&lt;p&gt;
I couldn't figure out how to test this patch within the AR test framework, as the actual table definition needs to be reverified. I have tested this on mysql and Oracle on my end and it works well.
&lt;/p&gt;&lt;p&gt;
Thanks, Nate
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Currently, using change_column with :null =&gt; true on a formerly :null =&gt; false column does not have the proper effect. This patch fixes this issue by explicitly checking the keys for :null. I have been using this in a production setting for a while with no issues.

Note: This patch can't be compressed further (outside of syntactic trickery). It's very important to not do anything unless the :null option is present. Otherwise, you can generate bad SQL which attempts to re-set a NOT NULL column to NOT NULL, and Oracle in particular will generate a fatal error.

I couldn't figure out how to test this patch within the AR test framework, as the actual table definition needs to be reverified. I have tested this on mysql and Oracle on my end and it works well.

Thanks, Nate</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Currently, using change_column with :null =&gt; true on a formerly :null =&gt; false column does not have the proper effect. This patch fixes this issue by explicitly checking the keys for :null. I have been using this in a production setting for a while with no issues.
&lt;/p&gt;&lt;p&gt;
Note: This patch can't be compressed further (outside of syntactic trickery). It's very important to not do anything unless the :null option is present. Otherwise, you can generate bad SQL which attempts to re-set a NOT NULL column to NOT NULL, and Oracle in particular will generate a fatal error.
&lt;/p&gt;&lt;p&gt;
I couldn't figure out how to test this patch within the AR test framework, as the actual table definition needs to be reverified. I have tested this on mysql and Oracle on my end and it works well.
&lt;/p&gt;&lt;p&gt;
Thanks, Nate
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-19T21:02:03+01:00</created-at>
      <creator-id type="integer">14994</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">26</number>
      <permalink>patch-fix-for-change_column-null-true-in-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Fix for change_column :null =&gt; true in migrations</title>
      <updated-at type="datetime">2008-04-19T21:02:03+01:00</updated-at>
      <user-id type="integer">14994</user-id>
      <version type="integer">1</version>
      <user-name>Nate Wiger</user-name>
      <creator-name>Nate Wiger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/26</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 from ddollar

Just copying a +1 from old Rails Trac</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1 from ddollar
&lt;/p&gt;&lt;p&gt;
Just copying a +1 from old Rails Trac
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-19T21:02:34+01:00</created-at>
      <creator-id type="integer">14994</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">26</number>
      <permalink>patch-fix-for-change_column-null-true-in-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Fix for change_column :null =&gt; true in migrations</title>
      <updated-at type="datetime">2008-04-19T21:02:34+01:00</updated-at>
      <user-id type="integer">14994</user-id>
      <version type="integer">2</version>
      <user-name>Nate Wiger</user-name>
      <creator-name>Nate Wiger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/26</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-22T08:24:43+01:00</created-at>
      <creator-id type="integer">14994</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[PATCH] Fix for change_column :null =&gt; true in migrations&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">26</number>
      <permalink>patch-fix-for-change_column-null-true-in-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fix for change_column :null =&gt; true in migrations</title>
      <updated-at type="datetime">2008-04-22T08:24:43+01:00</updated-at>
      <user-id type="integer">474</user-id>
      <version type="integer">3</version>
      <user-name>John Barnette</user-name>
      <creator-name>Nate Wiger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/26</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [10ef65a3b054270ed3d458ec8eb7c2b9a3e638f7]) Fixed that change_column should be able to use :null =&gt; true on a field that formerly had false [Nate Wiger] [#26 state:resolved]
http://github.com/rails/rails/commit/10ef65a3b054270ed3d458ec8eb7c2b9a3e638f7</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [10ef65a3b054270ed3d458ec8eb7c2b9a3e638f7]) Fixed that change_column should be able to use :null =&gt; true on a field that formerly had false [Nate Wiger] [#26 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/10ef65a3b054270ed3d458ec8eb7c2b9a3e638f7&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-04-29T22:53:11+01:00</created-at>
      <creator-id type="integer">14994</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">26</number>
      <permalink>patch-fix-for-change_column-null-true-in-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Fix for change_column :null =&gt; true in migrations</title>
      <updated-at type="datetime">2008-04-29T22:53:11+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Nate Wiger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/26</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>6109fce9f73fd0f0df9ff8a3684c9a00155c4b5f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-04-19T21:02:03+01:00</created-at>
      <filename>schema_statements.rb.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">19319</id>
      <size type="integer">1003</size>
      <uploader-id type="integer">14994</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/19319/schema_statements.rb.patch</url>
    </attachment>
  </attachments>
</ticket>
