<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-21T14:04:58+00:00</created-at>
  <creator-id type="integer">18887</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">990</number>
  <permalink>associationbuild-inconsistency</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug edge</tag>
  <title>association#build inconsistency</title>
  <updated-at type="datetime">2011-02-21T14:04:58+00:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">9</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Mathijs Kwik</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>When building an object through an association, the resulting object isn't bound to the proxy owner if the proxy owner is a new record. If the proxy owner is already saved, it _is_ bound.

I think this is inconsistent.

This also boils down to using find_or_initialize_by or find_or_create_by on associations on new records.

@@@ruby
class User &lt; ActiveRecord::Base
  has_many :posts, :dependent =&gt; :destroy
end

class Post &lt; ActiveRecord::Base
  belongs_to :user
end

&gt;&gt; u=User.first
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2=User.new
=&gt; #&lt;User id: nil, name: nil, created_at: nil, updated_at: nil&gt;

&gt;&gt; u.posts.build.user
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2.posts.build.user
=&gt; nil

&gt;&gt; u.posts.find_or_initialize_by_title('title').user
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2.posts.find_or_initialize_by_title('title').user
=&gt; nil
@@@</original-body>
  <latest-body>When building an object through an association, the resulting object isn't bound to the proxy owner if the proxy owner is a new record. If the proxy owner is already saved, it _is_ bound.

I think this is inconsistent.

This also boils down to using find_or_initialize_by or find_or_create_by on associations on new records.

@@@ruby
class User &lt; ActiveRecord::Base
  has_many :posts, :dependent =&gt; :destroy
end

class Post &lt; ActiveRecord::Base
  belongs_to :user
end

&gt;&gt; u=User.first
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2=User.new
=&gt; #&lt;User id: nil, name: nil, created_at: nil, updated_at: nil&gt;

&gt;&gt; u.posts.build.user
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2.posts.build.user
=&gt; nil

&gt;&gt; u.posts.find_or_initialize_by_title('title').user
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2.posts.find_or_initialize_by_title('title').user
=&gt; nil
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When building an object through an association, the resulting
object isn't bound to the proxy owner if the proxy owner is a new
record. If the proxy owner is already saved, it &lt;em&gt;is&lt;/em&gt;
bound.&lt;/p&gt;
&lt;p&gt;I think this is inconsistent.&lt;/p&gt;
&lt;p&gt;This also boils down to using find_or_initialize_by or
find_or_create_by on associations on new records.&lt;/p&gt;
&lt;p&gt;@@@ruby class User &amp;lt; ActiveRecord::Base has_many :posts,
:dependent =&amp;gt; :destroy end&lt;/p&gt;
&lt;p&gt;class Post &amp;lt; ActiveRecord::Base belongs_to :user end&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;u=User.first =&amp;gt; #u2=User.new =&amp;gt; #&lt;/p&gt;
&lt;p&gt;u.posts.build.user =&amp;gt; #u2.posts.build.user =&amp;gt; nil&lt;/p&gt;
&lt;p&gt;u.posts.find_or_initialize_by_title('title').user =&amp;gt;
#u2.posts.find_or_initialize_by_title('title').user =&amp;gt; nil&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;


&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When building an object through an association, the resulting object isn't bound to the proxy owner if the proxy owner is a new record. If the proxy owner is already saved, it _is_ bound.

I think this is inconsistent.

This also boils down to using find_or_initialize_by or find_or_create_by on associations on new records.

@@@ ruby
class User &lt; ActiveRecord::Base
  has_many :posts, :dependent =&gt; :destroy
end

class Post &lt; ActiveRecord::Base
  belongs_to :user
end

&gt;&gt; u=User.first
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2=User.new
=&gt; #&lt;User id: nil, name: nil, created_at: nil, updated_at: nil&gt;

&gt;&gt; u.posts.build.user
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2.posts.build.user
=&gt; nil

&gt;&gt; u.posts.find_or_initialize_by_title('title').user
=&gt; #&lt;User id: 1, name: &quot;user 1&quot;, created_at: &quot;2008-09-07 22:07:35&quot;, updated_at: &quot;2008-09-07 22:07:35&quot;&gt;
&gt;&gt; u2.posts.find_or_initialize_by_title('title').user
=&gt; nil
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;When building an object through an association, the resulting
object isn't bound to the proxy owner if the proxy owner is a new
record. If the proxy owner is already saved, it &lt;em&gt;is&lt;/em&gt;
bound.&lt;/p&gt;
&lt;p&gt;I think this is inconsistent.&lt;/p&gt;
&lt;p&gt;This also boils down to using find_or_initialize_by or
find_or_create_by on associations on new records.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class User &amp;lt; ActiveRecord::Base
  has_many :posts, :dependent =&amp;gt; :destroy
end

class Post &amp;lt; ActiveRecord::Base
  belongs_to :user
end

&amp;gt;&amp;gt; u=User.first
=&amp;gt; #&amp;lt;User id: 1, name: &amp;quot;user 1&amp;quot;, created_at: &amp;quot;2008-09-07 22:07:35&amp;quot;, updated_at: &amp;quot;2008-09-07 22:07:35&amp;quot;&amp;gt;
&amp;gt;&amp;gt; u2=User.new
=&amp;gt; #&amp;lt;User id: nil, name: nil, created_at: nil, updated_at: nil&amp;gt;

&amp;gt;&amp;gt; u.posts.build.user
=&amp;gt; #&amp;lt;User id: 1, name: &amp;quot;user 1&amp;quot;, created_at: &amp;quot;2008-09-07 22:07:35&amp;quot;, updated_at: &amp;quot;2008-09-07 22:07:35&amp;quot;&amp;gt;
&amp;gt;&amp;gt; u2.posts.build.user
=&amp;gt; nil

&amp;gt;&amp;gt; u.posts.find_or_initialize_by_title('title').user
=&amp;gt; #&amp;lt;User id: 1, name: &amp;quot;user 1&amp;quot;, created_at: &amp;quot;2008-09-07 22:07:35&amp;quot;, updated_at: &amp;quot;2008-09-07 22:07:35&amp;quot;&amp;gt;
&amp;gt;&amp;gt; u2.posts.find_or_initialize_by_title('title').user
=&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-07T23:22:56+01:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2008-09-07T23:24:29+01:00</updated-at>
      <user-id type="integer">18887</user-id>
      <version type="integer">1</version>
      <user-name>Mathijs Kwik</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please reopen once we have a patch for this.

This looks similar to an ID map patch Koz has been involved with, so assigning the ticket to him.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please reopen once we have a patch for this.&lt;/p&gt;
&lt;p&gt;This looks similar to an ID map patch Koz has been involved
with, so assigning the ticket to him.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-20T15:32:30+00:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2008-12-20T15:32:36+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just wonder ..

I've looked at the code, and I found out that the association's build method is done by setting `foreign_key` to be the parent's `id`. Can we also do something like set the attribute with the name of the parent object to be refer to parent object?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just wonder ..&lt;/p&gt;
&lt;p&gt;I've looked at the code, and I found out that the association's
build method is done by setting &lt;code&gt;foreign_key&lt;/code&gt; to be the
parent's &lt;code&gt;id&lt;/code&gt;. Can we also do something like set the
attribute with the name of the parent object to be refer to parent
object?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-01T06:24:20+00:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2009-02-01T06:24:23+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">3</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marked a similar ticket, #4497, as a duplicate of this one and asked the user to submit a patch here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marked a similar ticket, &lt;a href=&quot;/projects/8994/tickets/4497&quot;
title=&quot;Ticket #4497&quot;&gt;#4497&lt;/a&gt;, as a duplicate of this one and
asked the user to submit a patch here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T00:52:35+01:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: wontfix
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2010-04-29T00:52:38+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Btw. shouldn't `:inverse_of` association options handle this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Btw. shouldn't &lt;code&gt;:inverse_of&lt;/code&gt; association options
handle this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T07:08:06+01:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2010-04-29T07:08:10+01:00</updated-at>
      <user-id type="integer">43210</user-id>
      <version type="integer">5</version>
      <user-name>Evgeniy Dolzhenko</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:34+01:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2010-05-04T18:48:34+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>lining. &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net/fashion-jewelry/cartier-jewelry.html&quot;&gt;high replica Cartier&lt;/a&gt;&lt;/b&gt; make-believe commodities regularly trust &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;discount jewlery&lt;/a&gt;&lt;/b&gt; incorrectly spelled words useful &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net/fashion-jewelry/juicy-couture-jewelry.html&quot;&gt;Juicy Couture wholesale&lt;/a&gt;&lt;/b&gt; to in rags morale &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net/fashion-jewelry/tiffany-1837.html&quot;&gt;Tiffany 1837 wholesale&lt;/a&gt;&lt;/b&gt; oversee and the items &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net/fashion-jewelry/christian-dior-jewelry.html&quot;&gt;cheap Christian Dior wholesale&lt;/a&gt;&lt;/b&gt; for replicated imprint regions &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;designer fashion jewelry&lt;/a&gt;&lt;/b&gt; locus English isn't the &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;cheap wholesale fashion jewelry&lt;/a&gt;&lt;/b&gt; leading language. # Step &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net/fashion-jewelry/chanel-bangles.html&quot;&gt;cheap Chanel Bangles for sale&lt;/a&gt;&lt;/b&gt; 3 Examine the watch's &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;fashion jewelry&lt;/a&gt;&lt;/b&gt; craftsmanship. The doll should &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;cheap jewelry stores&lt;/a&gt;&lt;/b&gt; body well-made further lifelong. review extr</body>
      <body-html>&lt;div&gt;&lt;p&gt;lining. &lt;b&gt;&lt;a href=
&quot;http://www.jewelry1.net/fashion-jewelry/cartier-jewelry.html&quot;&gt;high
replica Cartier&lt;/a&gt;&lt;/b&gt; make-believe commodities regularly trust
&lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;discount jewlery&lt;/a&gt;&lt;/b&gt;
incorrectly spelled words useful &lt;b&gt;&lt;a href=
&quot;http://www.jewelry1.net/fashion-jewelry/juicy-couture-jewelry.html&quot;&gt;
Juicy Couture wholesale&lt;/a&gt;&lt;/b&gt; to in rags morale &lt;b&gt;&lt;a href=
&quot;http://www.jewelry1.net/fashion-jewelry/tiffany-1837.html&quot;&gt;Tiffany
1837 wholesale&lt;/a&gt;&lt;/b&gt; oversee and the items &lt;b&gt;&lt;a href=
&quot;http://www.jewelry1.net/fashion-jewelry/christian-dior-jewelry.html&quot;&gt;
cheap Christian Dior wholesale&lt;/a&gt;&lt;/b&gt; for replicated imprint
regions &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;designer fashion
jewelry&lt;/a&gt;&lt;/b&gt; locus English isn't the &lt;b&gt;&lt;a href=
&quot;http://www.jewelry1.net&quot;&gt;cheap wholesale fashion jewelry&lt;/a&gt;&lt;/b&gt;
leading language. # Step &lt;b&gt;&lt;a href=
&quot;http://www.jewelry1.net/fashion-jewelry/chanel-bangles.html&quot;&gt;cheap
Chanel Bangles for sale&lt;/a&gt;&lt;/b&gt; 3 Examine the watch's &lt;b&gt;&lt;a href=
&quot;http://www.jewelry1.net&quot;&gt;fashion jewelry&lt;/a&gt;&lt;/b&gt; craftsmanship.
The doll should &lt;b&gt;&lt;a href=&quot;http://www.jewelry1.net&quot;&gt;cheap jewelry
stores&lt;/a&gt;&lt;/b&gt; body well-made further lifelong. review extr&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T12:08:48+01:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">432</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2010-07-21T01:47:08+01:00</updated-at>
      <user-id type="integer">107778</user-id>
      <version type="integer">7</version>
      <user-name>xiaobao</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Have the same problem. Using the workaround. Will this be fixed in Rails 3 final?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Have the same problem. Using the workaround. Will this be fixed
in Rails 3 final?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-31T00:05:46+01:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2010-07-31T00:05:48+01:00</updated-at>
      <user-id type="integer">77317</user-id>
      <version type="integer">8</version>
      <user-name>Andreas Mayer</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As Evgeniy Dolzhenko suggested setting inverse_of resolves the issue.

@@@ ruby
class Car &lt; ActiveRecord::Base
  has_many :brakes, :inverse_of =&gt; :car
end

class Brake &lt; ActiveRecord::Base
  belongs_to :car, :inverse_of =&gt; :brakes
end
@@@

@@@ ruby
&gt; Car.first.brakes.build.car
  Car Load (0.4ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; LIMIT 1
 =&gt; #&lt;Car id: 1, name: nil&gt; 

&gt; Car.new.brakes.build.car
 =&gt; #&lt;Car id: nil, name: nil&gt; 

&gt; Car.create.brakes.build.car
  SQL (0.5ms)  INSERT INTO &quot;cars&quot; (&quot;name&quot;) VALUES (NULL)
 =&gt; #&lt;Car id: 2, name: nil&gt;


&gt; Car.last.brakes.find_or_initialize_by_name('cool').car
  Car Load (0.6ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; ORDER BY cars.id DESC LIMIT 1
  Brake Load (0.2ms)  SELECT &quot;brakes&quot;.* FROM &quot;brakes&quot; WHERE (&quot;brakes&quot;.car_id = 2) AND (&quot;brakes&quot;.&quot;name&quot; = 'cool') LIMIT 1
  Car Load (0.1ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; WHERE (&quot;cars&quot;.&quot;id&quot; = 2) LIMIT 1
 =&gt; #&lt;Car id: 2, name: nil&gt; 

&gt; Car.last.brakes.find_or_create_by_name('cool').car
  Car Load (0.4ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; ORDER BY cars.id DESC LIMIT 1
  Brake Load (0.3ms)  SELECT &quot;brakes&quot;.* FROM &quot;brakes&quot; WHERE (&quot;brakes&quot;.car_id = 2) AND (&quot;brakes&quot;.&quot;name&quot; = 'cool') LIMIT 1
  SQL (0.3ms)  INSERT INTO &quot;brakes&quot; (&quot;car_id&quot;, &quot;name&quot;) VALUES (2, 'cool')
 =&gt; #&lt;Car id: 2, name: nil&gt; 

@@@

tested with rails edge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As Evgeniy Dolzhenko suggested setting inverse_of resolves the
issue.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Car &amp;lt; ActiveRecord::Base
  has_many :brakes, :inverse_of =&amp;gt; :car
end

class Brake &amp;lt; ActiveRecord::Base
  belongs_to :car, :inverse_of =&amp;gt; :brakes
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt; Car.first.brakes.build.car
  Car Load (0.4ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; LIMIT 1
 =&amp;gt; #&amp;lt;Car id: 1, name: nil&amp;gt; 

&amp;gt; Car.new.brakes.build.car
 =&amp;gt; #&amp;lt;Car id: nil, name: nil&amp;gt; 

&amp;gt; Car.create.brakes.build.car
  SQL (0.5ms)  INSERT INTO &quot;cars&quot; (&quot;name&quot;) VALUES (NULL)
 =&amp;gt; #&amp;lt;Car id: 2, name: nil&amp;gt;


&amp;gt; Car.last.brakes.find_or_initialize_by_name('cool').car
  Car Load (0.6ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; ORDER BY cars.id DESC LIMIT 1
  Brake Load (0.2ms)  SELECT &quot;brakes&quot;.* FROM &quot;brakes&quot; WHERE (&quot;brakes&quot;.car_id = 2) AND (&quot;brakes&quot;.&quot;name&quot; = 'cool') LIMIT 1
  Car Load (0.1ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; WHERE (&quot;cars&quot;.&quot;id&quot; = 2) LIMIT 1
 =&amp;gt; #&amp;lt;Car id: 2, name: nil&amp;gt; 

&amp;gt; Car.last.brakes.find_or_create_by_name('cool').car
  Car Load (0.4ms)  SELECT &quot;cars&quot;.* FROM &quot;cars&quot; ORDER BY cars.id DESC LIMIT 1
  Brake Load (0.3ms)  SELECT &quot;brakes&quot;.* FROM &quot;brakes&quot; WHERE (&quot;brakes&quot;.car_id = 2) AND (&quot;brakes&quot;.&quot;name&quot; = 'cool') LIMIT 1
  SQL (0.3ms)  INSERT INTO &quot;brakes&quot; (&quot;car_id&quot;, &quot;name&quot;) VALUES (2, 'cool')
 =&amp;gt; #&amp;lt;Car id: 2, name: nil&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;tested with rails edge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-13T15:03:26+01:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2010-08-13T15:03:28+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">9</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Replica Tag Watches sell at low prices. Buy Tag Heuer Replica Watches, Fake TAG Heuer Watches please come to our &lt;a href=&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag Heuer watches&lt;/a&gt;.Look no further for &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches, Ladies Omega Replica Watches from our &lt;a href=&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega watches&lt;/a&gt; store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Replica Tag Watches sell at low prices. Buy Tag Heuer Replica
Watches, Fake TAG Heuer Watches please come to our &lt;a href=
&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag
Heuer watches&lt;/a&gt;.Look no further for &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica
Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss
replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches,
Ladies Omega Replica Watches from our &lt;a href=
&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega
watches&lt;/a&gt; store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-21T14:00:33+00:00</created-at>
      <creator-id type="integer">18887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">990</number>
      <permalink>associationbuild-inconsistency</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug edge</tag>
      <title>association#build inconsistency</title>
      <updated-at type="datetime">2011-02-21T14:04:58+00:00</updated-at>
      <user-id type="integer">138022</user-id>
      <version type="integer">10</version>
      <user-name>benben</user-name>
      <creator-name>Mathijs Kwik</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/990</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
