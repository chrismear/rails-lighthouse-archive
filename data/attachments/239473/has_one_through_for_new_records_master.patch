From e87db2a66ff6d08eb98aff6a312a3c269a0d017f Mon Sep 17 00:00:00 2001
From: Tristan Dunn <tristanzdunn@gmail.com>
Date: Sun, 9 Aug 2009 19:37:12 -0400
Subject: [PATCH] has_one :through builds a new object when owner is a new record.

---
 .../associations/has_one_through_association.rb    |   12 +++++++++---
 .../has_one_through_associations_test.rb           |   10 ++++++++++
 2 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/associations/has_one_through_association.rb b/activerecord/lib/active_record/associations/has_one_through_association.rb
index 830aa18..a79bf94 100644
--- a/activerecord/lib/active_record/associations/has_one_through_association.rb
+++ b/activerecord/lib/active_record/associations/has_one_through_association.rb
@@ -18,9 +18,15 @@ module ActiveRecord
         current_object = @owner.send(@reflection.through_reflection.name)
 
         if current_object
-          new_value ? current_object.update_attributes(construct_join_attributes(new_value)) : current_object.destroy
-        else
-          @owner.send(@reflection.through_reflection.name,  klass.send(:create, construct_join_attributes(new_value))) if new_value
+           new_value ? current_object.update_attributes(construct_join_attributes(new_value)) : current_object.destroy
+        elsif new_value
+          if @owner.new_record?
+            self.target = new_value
+            through_association = @owner.send(:association_instance_get, @reflection.through_reflection.name)
+            through_association.build(construct_join_attributes(new_value))
+          else
+            @owner.send(@reflection.through_reflection.name, klass.create(construct_join_attributes(new_value)))
+          end
         end
       end
 
diff --git a/activerecord/test/cases/associations/has_one_through_associations_test.rb b/activerecord/test/cases/associations/has_one_through_associations_test.rb
index ab6e6d2..9aef3eb 100644
--- a/activerecord/test/cases/associations/has_one_through_associations_test.rb
+++ b/activerecord/test/cases/associations/has_one_through_associations_test.rb
@@ -28,6 +28,16 @@ class HasOneThroughAssociationsTest < ActiveRecord::TestCase
     assert_not_nil new_member.current_membership
     assert_not_nil new_member.club
   end
+
+  def test_creating_association_builds_through_record_for_new
+    new_member = Member.new(:name => "Jane")
+    new_member.club = clubs(:moustache_club)
+    assert new_member.current_membership
+    assert_equal clubs(:moustache_club), new_member.current_membership.club
+    assert_equal clubs(:moustache_club), new_member.club
+    assert new_member.save
+    assert_equal clubs(:moustache_club), new_member.club
+  end
   
   def test_replace_target_record
     new_club = Club.create(:name => "Marx Bros")
-- 
1.6.3.3

