<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-11T06:37:24+01:00</created-at>
  <creator-id type="integer">31686</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1018</number>
  <permalink>benchmark-db-time-should-calculate-all-db-connections-instead-of-only-the-default-one</permalink>
  <priority type="integer">457</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>benchmark DB time should calculate all DB connections instead of only the default one.</title>
  <updated-at type="datetime">2010-01-22T08:52:28+00:00</updated-at>
  <user-id type="integer">25293</user-id>
  <version type="integer">3</version>
  <user-name>Prem Sichanugrist (sikachu)</user-name>
  <creator-name>sliu</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1018</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>bug:
benchmark DB time, rails only considered the default DB connection(in multiple DB situation).

check
http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/benchmarking.rb
line 55, 101

it only picked the run timing of the default DB connection:

@@@ruby
ActionRecord::Base.connection.reset_runtime
@@@

thus, any other connections(i.e. connection to my reporting DB) is wrongly ignored.
the result is:
in production.log, you will see Rendering time nearly 100%, while DB time 0%.

solution:
define ActiveRecord::Base::reset_db_runtime

@@@ruby
def self.reset_db_runtime
      timing = 0
      self.active_connections.each_value do |conn|
        timing += conn.reset_runtime
      end
      timing
end
@@@

replace every call in benchmarking.rb 
@@@ruby
ActiveRecord::Base.connection.reset_runtime 
@@@
to 
@@@ruby
ActiveRecord::Base.reset_db_runtime
@@@
I am using rails-1.2.3, but it seems the latest code still have the issue.</original-body>
  <latest-body>bug:
benchmark DB time, rails only considered the default DB connection(in multiple DB situation).

check
http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/benchmarking.rb
line 55, 101

it only picked the run timing of the default DB connection:

@@@ruby
ActionRecord::Base.connection.reset_runtime
@@@

thus, any other connections(i.e. connection to my reporting DB) is wrongly ignored.
the result is:
in production.log, you will see Rendering time nearly 100%, while DB time 0%.

solution:
define ActiveRecord::Base::reset_db_runtime

@@@ruby
def self.reset_db_runtime
      timing = 0
      self.active_connections.each_value do |conn|
        timing += conn.reset_runtime
      end
      timing
end
@@@

replace every call in benchmarking.rb 
@@@ruby
ActiveRecord::Base.connection.reset_runtime 
@@@
to 
@@@ruby
ActiveRecord::Base.reset_db_runtime
@@@
I am using rails-1.2.3, but it seems the latest code still have the issue.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;bug: benchmark DB time, rails only considered the default DB
connection(in multiple DB situation).&lt;/p&gt;
&lt;p&gt;check &lt;a href=&quot;http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/benchmarking.rb&quot;&gt;
http://github.com/rails/rails/tr...&lt;/a&gt; line 55, 101&lt;/p&gt;
&lt;p&gt;it only picked the run timing of the default DB connection:&lt;/p&gt;
&lt;p&gt;@@@ruby ActionRecord::Base.connection.reset_runtime&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

thus, any other connections(i.e. connection to my reporting DB) is wrongly ignored.
the result is:
in production.log, you will see Rendering time nearly 100%, while DB time 0%.

solution:
define ActiveRecord::Base::reset_db_runtime

@@@ruby
def self.reset_db_runtime
      timing = 0
      self.active_connections.each_value do |conn|
        timing += conn.reset_runtime
      end
      timing
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;replace every call in benchmarking.rb @@@ruby
ActiveRecord::Base.connection.reset_runtime&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
to
@@@ruby
ActiveRecord::Base.reset_db_runtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I am using rails-1.2.3, but it seems the latest code still have
the issue.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>## description ##
benchmark DB time, rails only considered the default DB connection(in multiple DB situation).

## details ##
check
http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/benchmarking.rb
line 55, 101

it only picked the run timing of the default DB connection:

&lt;code&gt;
ActionRecord::Base.connection.reset_runtime
&lt;/code&gt;

thus, any other connections(i.e. connection to my reporting DB) is wrongly ignored.
the result is:
in production.log, you will see Rendering time nearly 100%, while DB time 0%.

## solution ##
define ActiveRecord::Base::reset_db_runtime

&lt;code&gt;
def self.reset_db_runtime
      timing = 0
      self.active_connections.each_value do |conn|
        timing += conn.reset_runtime
      end
      timing
end
&lt;/code&gt;

replace every call in benchmarking.rb 
&lt;code&gt;
ActiveRecord::Base.connection.reset_runtime 
&lt;/code&gt;
to 
&lt;code&gt;
ActiveRecord::Base.reset_db_runtime
&lt;/code&gt;

## others ##
I am using rails-1.2.3, but it seems the latest code still have the issue.</body>
      <body-html>&lt;div&gt;&lt;h2&gt;description&lt;/h2&gt;
&lt;p&gt;benchmark DB time, rails only considered the default DB
connection(in multiple DB situation).&lt;/p&gt;
&lt;h2&gt;details&lt;/h2&gt;
&lt;p&gt;check &lt;a href=&quot;http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/benchmarking.rb&quot;&gt;
http://github.com/rails/rails/tr...&lt;/a&gt; line 55, 101&lt;/p&gt;
&lt;p&gt;it only picked the run timing of the default DB connection:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ActionRecord::Base.connection.reset_runtime&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;thus, any other connections(i.e. connection to my reporting DB)
is wrongly ignored. the result is: in production.log, you will see
Rendering time nearly 100%, while DB time 0%.&lt;/p&gt;
&lt;h2&gt;solution&lt;/h2&gt;
&lt;p&gt;define ActiveRecord::Base::reset_db_runtime&lt;/p&gt;
&lt;p&gt;&lt;code&gt;def self.reset_db_runtime&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  timing = 0
  self.active_connections.each_value do |conn|
    timing += conn.reset_runtime
  end
  timing
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;replace every call in benchmarking.rb
&lt;code&gt;ActiveRecord::Base.connection.reset_runtime&lt;/code&gt; to
&lt;code&gt;ActiveRecord::Base.reset_db_runtime&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;others&lt;/h2&gt;
&lt;p&gt;I am using rails-1.2.3, but it seems the latest code still have
the issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-11T06:37:24+01:00</created-at>
      <creator-id type="integer">31686</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1018</number>
      <permalink>benchmark-db-time-should-calculate-all-db-connections-instead-of-only-the-default-one</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>benchmark DB time should calculate all DB connections instead of only the default one.</title>
      <updated-at type="datetime">2008-09-11T06:43:02+01:00</updated-at>
      <user-id type="integer">31686</user-id>
      <version type="integer">1</version>
      <user-name>sliu</user-name>
      <creator-name>sliu</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1018</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sounds like a valid issue. Could you please upload a patch here - http://rails.lighthouseapp.com/projects/8994/sending-patches ?

Also, I think it's worth adding a method like ActiveRecord::Base.connection.reset_all_runtime.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sounds like a valid issue. Could you please upload a patch here
- &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;
?&lt;/p&gt;
&lt;p&gt;Also, I think it's worth adding a method like
ActiveRecord::Base.connection.reset_all_runtime.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-20T18:19:24+00:00</created-at>
      <creator-id type="integer">31686</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1018</number>
      <permalink>benchmark-db-time-should-calculate-all-db-connections-instead-of-only-the-default-one</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>benchmark DB time should calculate all DB connections instead of only the default one.</title>
      <updated-at type="datetime">2008-12-20T18:19:29+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>sliu</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1018</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-22T08:52:24+00:00</created-at>
      <creator-id type="integer">31686</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1018</number>
      <permalink>benchmark-db-time-should-calculate-all-db-connections-instead-of-only-the-default-one</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>benchmark DB time should calculate all DB connections instead of only the default one.</title>
      <updated-at type="datetime">2010-01-22T08:52:28+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">3</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>sliu</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1018</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
