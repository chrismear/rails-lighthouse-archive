<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-25T03:23:40+01:00</created-at>
  <creator-id type="integer">38989</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2207</number>
  <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
  <updated-at type="datetime">2010-10-25T03:23:40+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">8</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Emmanuel Nicolau</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ ruby
class Person &lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &lt; ActiveRecord::Base
  belongs_to :person
  after_update :do_something
  
  def do_something
    puts 'on after_update'
  end
end

p = Person.create!(:name =&gt; &quot;Smith&quot;, :children_attributes =&gt; {&quot;new_1&quot; =&gt; {:name =&gt; &quot;John&quot;}})
# =&gt; #&lt;Person id: 5 ...&gt;

p.update_attributes :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; {p.children.first.id =&gt; {:name =&gt; &quot;John&quot;}} 
# &quot;on after_update&quot;

p.update_attributes! :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; {p.children.first.id =&gt; {:name =&gt; &quot;John&quot;}} 
# prints nothing
@@@</original-body>
  <latest-body>@@@ ruby
class Person &lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &lt; ActiveRecord::Base
  belongs_to :person
  after_update :do_something
  
  def do_something
    puts 'on after_update'
  end
end

p = Person.create!(:name =&gt; &quot;Smith&quot;, :children_attributes =&gt; {&quot;new_1&quot; =&gt; {:name =&gt; &quot;John&quot;}})
# =&gt; #&lt;Person id: 5 ...&gt;

p.update_attributes :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; {p.children.first.id =&gt; {:name =&gt; &quot;John&quot;}} 
# &quot;on after_update&quot;

p.update_attributes! :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; {p.children.first.id =&gt; {:name =&gt; &quot;John&quot;}} 
# prints nothing
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person &amp;lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &amp;lt; ActiveRecord::Base
  belongs_to :person
  after_update :do_something
  
  def do_something
    puts 'on after_update'
  end
end

p = Person.create!(:name =&amp;gt; &amp;quot;Smith&amp;quot;, :children_attributes =&amp;gt; {&amp;quot;new_1&amp;quot; =&amp;gt; {:name =&amp;gt; &amp;quot;John&amp;quot;}})
# =&amp;gt; #&amp;lt;Person id: 5 ...&amp;gt;

p.update_attributes :name =&amp;gt; &amp;quot;Smith29&amp;quot;, :children_attributes =&amp;gt; {p.children.first.id =&amp;gt; {:name =&amp;gt; &amp;quot;John&amp;quot;}} 
# &amp;quot;on after_update&amp;quot;

p.update_attributes! :name =&amp;gt; &amp;quot;Smith29&amp;quot;, :children_attributes =&amp;gt; {p.children.first.id =&amp;gt; {:name =&amp;gt; &amp;quot;John&amp;quot;}} 
# prints nothing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
class Person &lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &lt; ActiveRecord::Base
  belongs_to :person
  after_update :do_something
  
  def do_something
    puts 'on after_update'
  end
end

p = Person.create!(:name =&gt; &quot;Smith&quot;, :children_attributes =&gt; {&quot;new_1&quot; =&gt; {:name =&gt; &quot;John&quot;}})
# =&gt; #&lt;Person id: 5 ...&gt;

p.update_attributes :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; {p.children.first.id =&gt; {:name =&gt; &quot;John&quot;}} 
# &quot;on after_update&quot;

p.update_attributes! :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; {p.children.first.id =&gt; {:name =&gt; &quot;John&quot;}} 
# prints nothing
@@@</body>
      <body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person &amp;lt; ActiveRecord::Base
  has_many :children
  accepts_nested_attributes_for :children
end

class Child &amp;lt; ActiveRecord::Base
  belongs_to :person
  after_update :do_something
  
  def do_something
    puts 'on after_update'
  end
end

p = Person.create!(:name =&amp;gt; &amp;quot;Smith&amp;quot;, :children_attributes =&amp;gt; {&amp;quot;new_1&amp;quot; =&amp;gt; {:name =&amp;gt; &amp;quot;John&amp;quot;}})
# =&amp;gt; #&amp;lt;Person id: 5 ...&amp;gt;

p.update_attributes :name =&amp;gt; &amp;quot;Smith29&amp;quot;, :children_attributes =&amp;gt; {p.children.first.id =&amp;gt; {:name =&amp;gt; &amp;quot;John&amp;quot;}} 
# &amp;quot;on after_update&amp;quot;

p.update_attributes! :name =&amp;gt; &amp;quot;Smith29&amp;quot;, :children_attributes =&amp;gt; {p.children.first.id =&amp;gt; {:name =&amp;gt; &amp;quot;John&amp;quot;}} 
# prints nothing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T02:19:45+00:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2009-03-11T03:09:30+00:00</updated-at>
      <user-id type="integer">38989</user-id>
      <version type="integer">1</version>
      <user-name>Emmanuel Nicolau</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T02:23:58+00:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- 
:title: When using accepts_nested_attributes_for update_attributes! on association doesn't call after_update callback
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2009-03-11T03:13:54+00:00</updated-at>
      <user-id type="integer">38989</user-id>
      <version type="integer">2</version>
      <user-name>Emmanuel Nicolau</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T14:53:05+00:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2009-03-11T14:55:22+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">3</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T15:05:36+00:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 24544
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2009-03-11T15:07:15+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">4</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>update_attributes! doesn't call after_save either.</body>
      <body-html>&lt;div&gt;&lt;p&gt;update_attributes! doesn't call after_save either.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T22:32:30+00:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2009-03-11T22:32:36+00:00</updated-at>
      <user-id type="integer">38989</user-id>
      <version type="integer">5</version>
      <user-name>Emmanuel Nicolau</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This works fine for me in Rails 2.3.5 and Ruby 1.8.7, and the correct syntax is:

@@@ rails
p.update_attributes! :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; [{ :id =&gt; p.children.first.id, :name =&gt; &quot;John&quot; }] 
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;This works fine for me in Rails 2.3.5 and Ruby 1.8.7, and the
correct syntax is:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;rails&quot;&gt;p.update_attributes! :name =&amp;gt; &quot;Smith29&quot;, :children_attributes =&amp;gt; [{ :id =&amp;gt; p.children.first.id, :name =&amp;gt; &quot;John&quot; }]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T21:48:24+01:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2010-04-21T21:48:27+01:00</updated-at>
      <user-id type="integer">31882</user-id>
      <version type="integer">6</version>
      <user-name>rdavila</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This actually looks like it's not a bug -- it's the dirty attributes behaving correctly

@@@ ruby
p = Person.create!(:name =&gt; &quot;Smith&quot;, :children_attributes =&gt; {&quot;new_1&quot; =&gt; {:name =&gt; &quot;John&quot;}})
# after save
# =&gt; #&lt;Person id: 3 ...&gt;

p.update_attributes! :name =&gt; &quot;Smith29&quot;, :children_attributes =&gt; [{ :id =&gt; p.children.first.id, :name =&gt; &quot;John&quot; }]
# =&gt; true 

p.update_attributes! :name =&gt; &quot;Smith30&quot;, :children_attributes =&gt; [{ :id =&gt; p.children.first.id, :name =&gt; &quot;Joe&quot; }]
after update
after save
# =&gt; true 
@@@

First update doesn't actually change the child's attributes, so it's never marked as dirty, so it's never acutally saved.

Second update changes the child's attributes, and the callbacks work fine.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This actually looks like it's not a bug -- it's the dirty
attributes behaving correctly&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;p = Person.create!(:name =&amp;gt; &quot;Smith&quot;, :children_attributes =&amp;gt; {&quot;new_1&quot; =&amp;gt; {:name =&amp;gt; &quot;John&quot;}})
# after save
# =&amp;gt; #&amp;lt;Person id: 3 ...&amp;gt;

p.update_attributes! :name =&amp;gt; &quot;Smith29&quot;, :children_attributes =&amp;gt; [{ :id =&amp;gt; p.children.first.id, :name =&amp;gt; &quot;John&quot; }]
# =&amp;gt; true 

p.update_attributes! :name =&amp;gt; &quot;Smith30&quot;, :children_attributes =&amp;gt; [{ :id =&amp;gt; p.children.first.id, :name =&amp;gt; &quot;Joe&quot; }]
after update
after save
# =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;First update doesn't actually change the child's attributes, so
it's never marked as dirty, so it's never acutally saved.&lt;/p&gt;
&lt;p&gt;Second update changes the child's attributes, and the callbacks
work fine.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-24T19:56:26+01:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2010-04-24T19:56:31+01:00</updated-at>
      <user-id type="integer">44869</user-id>
      <version type="integer">7</version>
      <user-name>Chris Flipse</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-24T21:57:30+01:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2010-04-24T21:57:35+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Every &lt;a href=&quot;http://www.gamevive.com/WoW/WoW-CD-Key/WoW-CD-Key.html&quot;&gt;Cataclysm  Collector's Edition&lt;/a&gt; year thousands of tourists visit Cannes to experience its  excellent vicinity and lavish living. Situated in the South of &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/gw2-gold.php&quot;&gt;buy gw2 gold&lt;/a&gt;&lt;/strong&gt; France,  Cannes comprises of some of the most beautiful hot spots around the world. If  you wish to take pleasure both natural &lt;strong&gt;&lt;a href=&quot;http://www.power2level.com/gw2-pwl.html&quot;&gt;guild  wars 2 power level&lt;/a&gt;&lt;/strong&gt; ambiance and posh art of living,  this is a perfect place to visit. The way to a perfect holiday starts from a &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/ffxiv-account.php&quot;&gt;buy ffxiv account&lt;/a&gt;&lt;/strong&gt; luxury stay. Though there are many options available in this  destination however, luxury Cannes apartments are the best &lt;a href=&quot;http://www.gamevive.com/Aion-eu/Aion-gold-eu/Aion-gold-eu.html&quot;&gt;buy aion  kinah&lt;/a&gt; among  all. You may buy or rent them as per your convenience and enjoy your vacation.  No matter whether &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/Aion-eu/Aion-Account-eu/Cheap-Aion-Account-eu.html&quot;&gt;aion  online account&lt;/a&gt;&lt;/strong&gt; you want a couple sweet or a  family stay, you can choose from cozy Cannes apartment rentals to villas in  Cannes. With wide &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/ffxiv-power-leveling.php&quot;&gt;buy final  fantasy xiv power leveling&lt;/a&gt;&lt;/strong&gt; variety of  accommodation suiting your budget, comfort and necessary living amenities,  Cannes is &lt;a href=&quot;http://www.gamevive.com/Aion/Aion-CD-key/Aion-CD-key.html&quot;&gt;aion time card&lt;/a&gt; considered  as one of the favorite destinations for tourists throughout the world. 
  Lavish &lt;a href=&quot;http://www.gamevive.com/aion-accounts.php&quot;&gt;buy aion account&lt;/a&gt; malls,  designer shops, festivals and carnivals, amusement parks, opera and theatre,  desirable accommodation, commuting &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/gw2-gold.php&quot;&gt;gw2 gold&lt;/a&gt;&lt;/strong&gt; convenience and what not, this place has something or the other to  offer you all. Besides, if you have a dream to meet your favorite celebrities &lt;a href=&quot;http://wow.gamevive.com/WoW/WoW-CD-Key/WoW-CD-Key.html&quot;&gt;buy  wow game card&lt;/a&gt; from Hollywood you must visit this place. Every year almost all  Hollywood starts and renowned actors &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/gw2-power-leveling.php&quot;&gt;gw2 power leveling&lt;/a&gt;&lt;/strong&gt; from all  across the world &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/WoW/WoW-Power-Leveling/WoW-Power-Leveling.html&quot;&gt;wow  power leveling&lt;/a&gt;&lt;/strong&gt; come to Cannes Film Festival to  tribute this event. Also, Cannes is like a second home for few of the high  profile actors and theatre personals. You certainly do not want to miss this  opportunity to &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/WoW-EU/Cheap-WoW-CD-Key/Cheap-WoW-CD-Key.html&quot;&gt;world  of warcraft cd key&lt;/a&gt;&lt;/strong&gt; make your dream come true, right? 
  Besides this &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/gw2-gold.php&quot;&gt;cheap guild wars 2 gold&lt;/a&gt;&lt;/strong&gt; star quotient, Cannes is a very convenient option for tourists. It  offers rentals for almost everything. No matter &lt;a href=&quot;http://www.gamevive.com/Warhammer/Warhammer-Account/Cheap-Warhammer-Account.html&quot;&gt;warhammer  account&lt;/a&gt; whether you need a car rental to visit the hot spots or rentals  for luxury Cannes apartments , you will get it without any hassle and that &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/gw2-cdkey.php&quot;&gt;gw2 cd key&lt;/a&gt;&lt;/strong&gt; too in a  very reasonable price. Cannes is a mix of luxury and convenience- everything  within your budget. 
  Rentals in Cannes are quite famous because they offer &lt;a href=&quot;http://www.gamevive.com/lineage2/Lineage-2-Adena/cheap-lineage2-account.html&quot;&gt;lineage  2 account&lt;/a&gt; everyone a desirable experience. Over the years this place has  gained a great stand among its tourists around the world. Once you visit this  place, you certainly get attached to its undying &lt;strong&gt;&lt;a href=&quot;http://www.gamevive.com/gw2-cdkey.php&quot;&gt;guild wars 2 cd key&lt;/a&gt;&lt;/strong&gt; charm forever. Even &lt;a href=&quot;http://www.gamevive.com/Age-of-Conan/Age-of-conan-CD-key/Cheap-Age-of-Conan-CD-key.html&quot;&gt;aoc time card&lt;/a&gt; for those  who have a limited budget, consider this place as a perfect holiday destination!  This place offers lavish &lt;a href=&quot;http://www.gamevive.com/Lotro/Lotro-CD-Key/Lotro-CD-Key.html&quot;&gt;lotro cd key&lt;/a&gt; and cozy  rental apartments that would not only suit your pocket but, offers you minimal  luxury amenities as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Every &lt;a href=
&quot;http://www.gamevive.com/WoW/WoW-CD-Key/WoW-CD-Key.html&quot;&gt;Cataclysm
Collector's Edition&lt;/a&gt; year thousands of tourists visit Cannes to
experience its excellent vicinity and lavish living. Situated in
the South of &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/gw2-gold.php&quot;&gt;buy gw2 gold&lt;/a&gt;&lt;/strong&gt;
France, Cannes comprises of some of the most beautiful hot spots
around the world. If you wish to take pleasure both natural
&lt;strong&gt;&lt;a href=&quot;http://www.power2level.com/gw2-pwl.html&quot;&gt;guild
wars 2 power level&lt;/a&gt;&lt;/strong&gt; ambiance and posh art of living,
this is a perfect place to visit. The way to a perfect holiday
starts from a &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/ffxiv-account.php&quot;&gt;buy ffxiv
account&lt;/a&gt;&lt;/strong&gt; luxury stay. Though there are many options
available in this destination however, luxury Cannes apartments are
the best &lt;a href=
&quot;http://www.gamevive.com/Aion-eu/Aion-gold-eu/Aion-gold-eu.html&quot;&gt;buy
aion kinah&lt;/a&gt; among all. You may buy or rent them as per your
convenience and enjoy your vacation. No matter whether
&lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/Aion-eu/Aion-Account-eu/Cheap-Aion-Account-eu.html&quot;&gt;
aion online account&lt;/a&gt;&lt;/strong&gt; you want a couple sweet or a
family stay, you can choose from cozy Cannes apartment rentals to
villas in Cannes. With wide &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/ffxiv-power-leveling.php&quot;&gt;buy final
fantasy xiv power leveling&lt;/a&gt;&lt;/strong&gt; variety of accommodation
suiting your budget, comfort and necessary living amenities, Cannes
is &lt;a href=
&quot;http://www.gamevive.com/Aion/Aion-CD-key/Aion-CD-key.html&quot;&gt;aion
time card&lt;/a&gt; considered as one of the favorite destinations for
tourists throughout the world.&lt;br&gt;
Lavish &lt;a href=&quot;http://www.gamevive.com/aion-accounts.php&quot;&gt;buy aion
account&lt;/a&gt; malls, designer shops, festivals and carnivals,
amusement parks, opera and theatre, desirable accommodation,
commuting &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/gw2-gold.php&quot;&gt;gw2 gold&lt;/a&gt;&lt;/strong&gt;
convenience and what not, this place has something or the other to
offer you all. Besides, if you have a dream to meet your favorite
celebrities &lt;a href=
&quot;http://wow.gamevive.com/WoW/WoW-CD-Key/WoW-CD-Key.html&quot;&gt;buy wow
game card&lt;/a&gt; from Hollywood you must visit this place. Every year
almost all Hollywood starts and renowned actors &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/gw2-power-leveling.php&quot;&gt;gw2 power
leveling&lt;/a&gt;&lt;/strong&gt; from all across the world &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/WoW/WoW-Power-Leveling/WoW-Power-Leveling.html&quot;&gt;
wow power leveling&lt;/a&gt;&lt;/strong&gt; come to Cannes Film Festival to
tribute this event. Also, Cannes is like a second home for few of
the high profile actors and theatre personals. You certainly do not
want to miss this opportunity to &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/WoW-EU/Cheap-WoW-CD-Key/Cheap-WoW-CD-Key.html&quot;&gt;
world of warcraft cd key&lt;/a&gt;&lt;/strong&gt; make your dream come true,
right? Besides this &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/gw2-gold.php&quot;&gt;cheap guild wars 2
gold&lt;/a&gt;&lt;/strong&gt; star quotient, Cannes is a very convenient option
for tourists. It offers rentals for almost everything. No matter
&lt;a href=
&quot;http://www.gamevive.com/Warhammer/Warhammer-Account/Cheap-Warhammer-Account.html&quot;&gt;
warhammer account&lt;/a&gt; whether you need a car rental to visit the
hot spots or rentals for luxury Cannes apartments , you will get it
without any hassle and that &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/gw2-cdkey.php&quot;&gt;gw2 cd key&lt;/a&gt;&lt;/strong&gt; too
in a very reasonable price. Cannes is a mix of luxury and
convenience- everything within your budget. Rentals in Cannes are
quite famous because they offer &lt;a href=
&quot;http://www.gamevive.com/lineage2/Lineage-2-Adena/cheap-lineage2-account.html&quot;&gt;
lineage 2 account&lt;/a&gt; everyone a desirable experience. Over the
years this place has gained a great stand among its tourists around
the world. Once you visit this place, you certainly get attached to
its undying &lt;strong&gt;&lt;a href=
&quot;http://www.gamevive.com/gw2-cdkey.php&quot;&gt;guild wars 2 cd
key&lt;/a&gt;&lt;/strong&gt; charm forever. Even &lt;a href=
&quot;http://www.gamevive.com/Age-of-Conan/Age-of-conan-CD-key/Cheap-Age-of-Conan-CD-key.html&quot;&gt;
aoc time card&lt;/a&gt; for those who have a limited budget, consider
this place as a perfect holiday destination! This place offers
lavish &lt;a href=
&quot;http://www.gamevive.com/Lotro/Lotro-CD-Key/Lotro-CD-Key.html&quot;&gt;lotro
cd key&lt;/a&gt; and cozy rental apartments that would not only suit your
pocket but, offers you minimal luxury amenities as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-23T07:19:08+01:00</created-at>
      <creator-id type="integer">38989</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2207</number>
      <permalink>when-using-accepts_nested_attributes_for-update_attributes-on-association-doesnt-call-after_update-callback</permalink>
      <priority type="integer">1405</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>When using accepts_nested_attributes_for, update_attributes! on association doesn't call after_update callback</title>
      <updated-at type="datetime">2010-10-25T03:23:40+01:00</updated-at>
      <user-id type="integer">121508</user-id>
      <version type="integer">9</version>
      <user-name>ffxivgil</user-name>
      <creator-name>Emmanuel Nicolau</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2207</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
