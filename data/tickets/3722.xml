<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-17T09:52:03+00:00</created-at>
  <creator-id type="integer">11378</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3722</number>
  <permalink>define-anonyomous-classes-to-be-reachable</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>&quot;activesupport reachable&quot;</tag>
  <title>define anonymous modules to be reachable</title>
  <updated-at type="datetime">2010-01-29T17:25:49+00:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">7</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Xavier Noria</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
  <priority-name>Low</priority-name>
  <original-body>Class#reachable? is defined for all classes, but the predicate raises an error if the class is anonymous because it evals malformed Ruby.

The goal of reachable? seems to be to look for class objects that are not anonymous but whose constant is gone or stores another object.

So the behaviour with anonymous classes seems to be just a technical detail and it would be easier if that was checked by the predicate itself (currently client code calls name.blank? by hand before). Also documentation would be clearer because now we have to say that subclasses_of returns descendants except for anonymous or reachable ones. It would be better if we could document subclasses_of returns all reachable descendants.

The patch adds tests for reachable? (there were none before), and defines also anonymous?.</original-body>
  <latest-body>Class#reachable? is defined for all classes, but the predicate raises an error if the class is anonymous because it evals malformed Ruby.

The goal of reachable? seems to be to look for class objects that are not anonymous but whose constant is gone or stores another object.

So the behaviour with anonymous classes seems to be just a technical detail and it would be easier if that was checked by the predicate itself (currently client code calls name.blank? by hand before). Also documentation would be clearer because now we have to say that subclasses_of returns descendants except for anonymous or reachable ones. It would be better if we could document subclasses_of returns all reachable descendants.

The patch adds tests for reachable? (there were none before), and defines also anonymous?.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Class#reachable? is defined for all classes, but the predicate
raises an error if the class is anonymous because it evals
malformed Ruby.&lt;/p&gt;
&lt;p&gt;The goal of reachable? seems to be to look for class objects
that are not anonymous but whose constant is gone or stores another
object.&lt;/p&gt;
&lt;p&gt;So the behaviour with anonymous classes seems to be just a
technical detail and it would be easier if that was checked by the
predicate itself (currently client code calls name.blank? by hand
before). Also documentation would be clearer because now we have to
say that subclasses_of returns descendants except for anonymous or
reachable ones. It would be better if we could document
subclasses_of returns all reachable descendants.&lt;/p&gt;
&lt;p&gt;The patch adds tests for reachable? (there were none before),
and defines also anonymous?.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Class#reachable? is defined for all classes, but the predicate raises an error if the class is anonymous because it evals malformed Ruby.

The goal of reachable? seems to be to look for class objects that are not anonymous but whose constant is gone or stores another object.

So the behaviour with anonymous classes seems to be just a technical detail and it would be easier if that was checked by the predicate itself (currently client code calls name.blank? by hand before). Also documentation would be clearer because now we have to say that subclasses_of returns descendants except for anonymous or reachable ones. It would be better if we could document subclasses_of returns all reachable descendants.

The patch adds tests for reachable? (there were none before), and defines also anonymous?.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Class#reachable? is defined for all classes, but the predicate
raises an error if the class is anonymous because it evals
malformed Ruby.&lt;/p&gt;
&lt;p&gt;The goal of reachable? seems to be to look for class objects
that are not anonymous but whose constant is gone or stores another
object.&lt;/p&gt;
&lt;p&gt;So the behaviour with anonymous classes seems to be just a
technical detail and it would be easier if that was checked by the
predicate itself (currently client code calls name.blank? by hand
before). Also documentation would be clearer because now we have to
say that subclasses_of returns descendants except for anonymous or
reachable ones. It would be better if we could document
subclasses_of returns all reachable descendants.&lt;/p&gt;
&lt;p&gt;The patch adds tests for reachable? (there were none before),
and defines also anonymous?.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T09:52:03+00:00</created-at>
      <creator-id type="integer">11378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3722</number>
      <permalink>define-anonyomous-classes-to-be-reachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activesupport reachable&quot;</tag>
      <title>define anonyomous classes to be reachable</title>
      <updated-at type="datetime">2010-01-17T09:52:05+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">1</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Xavier Noria</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T09:53:08+00:00</created-at>
      <creator-id type="integer">11378</creator-id>
      <diffable-attributes type="yaml">--- 
:title: define anonyomous classes to be reachable
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3722</number>
      <permalink>define-anonyomous-classes-to-be-reachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activesupport reachable&quot;</tag>
      <title>define anonymous classes to be reachable</title>
      <updated-at type="datetime">2010-01-17T09:53:11+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">2</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Xavier Noria</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I messed up with subclasses_of, it returns descendants which are either anonymous or reachable. That is an error probably in favour of this patch haha.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I messed up with subclasses_of, it returns descendants which are
either anonymous or reachable. That is an error probably in favour
of this patch haha.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T09:55:55+00:00</created-at>
      <creator-id type="integer">11378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3722</number>
      <permalink>define-anonyomous-classes-to-be-reachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activesupport reachable&quot;</tag>
      <title>define anonymous classes to be reachable</title>
      <updated-at type="datetime">2010-01-17T09:55:57+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">3</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Xavier Noria</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T19:35:04+00:00</created-at>
      <creator-id type="integer">11378</creator-id>
      <diffable-attributes type="yaml">--- 
:title: define anonymous classes to be reachable
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3722</number>
      <permalink>define-anonyomous-classes-to-be-reachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activesupport reachable&quot;</tag>
      <title>define anonymous modules to be reachable</title>
      <updated-at type="datetime">2010-01-17T19:35:08+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">4</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Xavier Noria</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Being anonymous or reachable makes sense for modules. I've prepared a second patch with the definitions moved to Module, and with proper file organization.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Being anonymous or reachable makes sense for modules. I've
prepared a second patch with the definitions moved to Module, and
with proper file organization.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-17T19:38:05+00:00</created-at>
      <creator-id type="integer">11378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3722</number>
      <permalink>define-anonyomous-classes-to-be-reachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activesupport reachable&quot;</tag>
      <title>define anonymous modules to be reachable</title>
      <updated-at type="datetime">2010-01-17T19:38:05+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">5</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Xavier Noria</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This ticket can be closed since reachable? is gone after http://github.com/rails/rails/commit/5f981ff0294ba45aa44ad15aa063970b29aeec44</body>
      <body-html>&lt;div&gt;&lt;p&gt;This ticket can be closed since reachable? is gone after
&lt;a href=&quot;http://github.com/rails/rails/commit/5f981ff0294ba45aa44ad15aa063970b29aeec44&quot;&gt;
http://github.com/rails/rails/commit/5f981ff0294ba45aa44ad15aa06397...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-29T10:13:45+00:00</created-at>
      <creator-id type="integer">11378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3722</number>
      <permalink>define-anonyomous-classes-to-be-reachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activesupport reachable&quot;</tag>
      <title>define anonymous modules to be reachable</title>
      <updated-at type="datetime">2010-01-29T10:13:46+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">6</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Xavier Noria</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-29T17:25:47+00:00</created-at>
      <creator-id type="integer">11378</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3722</number>
      <permalink>define-anonyomous-classes-to-be-reachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>&quot;activesupport reachable&quot;</tag>
      <title>define anonymous modules to be reachable</title>
      <updated-at type="datetime">2010-01-29T17:25:49+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Xavier Noria</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3722</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c9d3d7a3153c141b8d2d1ffe8a2afd40071265b2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-17T19:38:05+00:00</created-at>
      <filename>reachable_and_anonymous.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">380880</id>
      <size type="integer">6888</size>
      <uploader-id type="integer">11378</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/380880/reachable_and_anonymous.diff</url>
    </attachment>
  </attachments>
</ticket>
