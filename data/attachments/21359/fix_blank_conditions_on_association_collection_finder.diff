diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index ffefc3c..acddce1 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -1917,6 +1917,8 @@ module ActiveRecord #:nodoc:
         #   { :name => "foo'bar", :group_id => 4 }  returns "name='foo''bar' and group_id='4'"
         #   "name='foo''bar' and group_id='4'" returns "name='foo''bar' and group_id='4'"
         def sanitize_sql_for_conditions(condition)
+          return nil if condition.blank?
+          
           case condition
             when Array; sanitize_sql_array(condition)
             when Hash;  sanitize_sql_hash_for_conditions(condition)
diff --git a/activerecord/test/cases/associations/has_many_associations_test.rb b/activerecord/test/cases/associations/has_many_associations_test.rb
index 7b97afe..8c134d3 100644
--- a/activerecord/test/cases/associations/has_many_associations_test.rb
+++ b/activerecord/test/cases/associations/has_many_associations_test.rb
@@ -47,6 +47,12 @@ class HasManyAssociationsTest < ActiveRecord::TestCase
   def test_finding
     assert_equal 2, Firm.find(:first).clients.length
   end
+  
+  def test_find_with_blank_conditions
+    [[], {}, nil, ""].each do |blank|
+      assert_equal 2, Firm.find(:first).clients.find(:all, :conditions => blank).size
+    end
+  end
 
   def test_find_many_with_merged_options
     assert_equal 1, companies(:first_firm).limited_clients.size
@@ -851,4 +857,4 @@ class HasManyAssociationsTest < ActiveRecord::TestCase
     assert ! firm.clients.include?(client)
   end
 
-end
\ No newline at end of file
+end
