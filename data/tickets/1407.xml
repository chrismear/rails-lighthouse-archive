<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">17393</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-18T20:55:41+00:00</created-at>
  <creator-id type="integer">38014</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1407</number>
  <permalink>console-sandbox-212-not-fixed</permalink>
  <priority type="integer">647</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.1.2 activerecord console console_sandbox.rb sandbox transactions</tag>
  <title>Console --sandbox 2.1.2 not fixed?</title>
  <updated-at type="datetime">2008-12-14T17:45:39+00:00</updated-at>
  <user-id type="integer">17477</user-id>
  <version type="integer">2</version>
  <user-name>Frederick Cheung</user-name>
  <creator-name>MarcD</creator-name>
  <assigned-user-name>Repository</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1407</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Even though it seems there is a patch for this in rails 2.1.2, I am still getting this error. Any ideas why? Maybe this ticket should be reopened? I have a clean install of rails 2.1.2, mysql-2.7. I should not be getting this error.

Loading development environment in sandbox (Rails 2.1.2) Any modifications you make will be rolled back on exit /usr/lib/ruby/gems/1.8/gems/rails-2.1.2/lib/console_sandbox.rb:2:NoMethodError: undefined method increment_open_transactions' for #&lt;ActiveRecord::ConnectionAdapters::MysqlAdapter:0xb6e89fe8&gt;

If I revert the diff back to the way it was in rails 2.1.0 before it was changed, then the warning goes away. Here is the revert of the diff.

+ActiveRecord::Base.send :increment_open_transactions -ActiveRecord::Base.connection.increment_open_transactions ActiveRecord::Base.connection.begin_db_transaction at_exit do ActiveRecord::Base.connection.rollback_db_transaction  +ActiveRecord::Base.send :decrement_open_transactions -ActiveRecord::Base.connection.decrement_open_transactions end

Not sure if this is related to the above errors, but I am also getting errors in the console for what it seems to be is transactions.  If it is not related, then disregard the below errors.

This is with using the facebooker plugin and registering templates with facebook.  

I am getting the same errors for changes before the diff, and after the diff.

ArgumentError: wrong number of arguments (0 for 1)

    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `changed?'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `update'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2483:in `create_or_update_without_callbacks'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/callbacks.rb:207:in `create_or_update'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2217:in `save_without_validation!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/validations.rb:921:in `save_without_dirty!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/dirty.rb:83:in `save_without_transactions!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:79:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:98:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:118:in `rollback_active_record_state!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:116:in `register'
    from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:423:in `method_missing'
    from (irb):4&gt;&gt;</original-body>
  <latest-body>Even though it seems there is a patch for this in rails 2.1.2, I am still getting this error. Any ideas why? Maybe this ticket should be reopened? I have a clean install of rails 2.1.2, mysql-2.7. I should not be getting this error.

Loading development environment in sandbox (Rails 2.1.2) Any modifications you make will be rolled back on exit /usr/lib/ruby/gems/1.8/gems/rails-2.1.2/lib/console_sandbox.rb:2:NoMethodError: undefined method increment_open_transactions' for #&lt;ActiveRecord::ConnectionAdapters::MysqlAdapter:0xb6e89fe8&gt;

If I revert the diff back to the way it was in rails 2.1.0 before it was changed, then the warning goes away. Here is the revert of the diff.

+ActiveRecord::Base.send :increment_open_transactions -ActiveRecord::Base.connection.increment_open_transactions ActiveRecord::Base.connection.begin_db_transaction at_exit do ActiveRecord::Base.connection.rollback_db_transaction  +ActiveRecord::Base.send :decrement_open_transactions -ActiveRecord::Base.connection.decrement_open_transactions end

Not sure if this is related to the above errors, but I am also getting errors in the console for what it seems to be is transactions.  If it is not related, then disregard the below errors.

This is with using the facebooker plugin and registering templates with facebook.  

I am getting the same errors for changes before the diff, and after the diff.

ArgumentError: wrong number of arguments (0 for 1)

    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `changed?'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `update'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2483:in `create_or_update_without_callbacks'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/callbacks.rb:207:in `create_or_update'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2217:in `save_without_validation!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/validations.rb:921:in `save_without_dirty!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/dirty.rb:83:in `save_without_transactions!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:79:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:98:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:118:in `rollback_active_record_state!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:116:in `register'
    from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:423:in `method_missing'
    from (irb):4&gt;&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Even though it seems there is a patch for this in rails 2.1.2, I
am still getting this error. Any ideas why? Maybe this ticket
should be reopened? I have a clean install of rails 2.1.2,
mysql-2.7. I should not be getting this error.&lt;/p&gt;
&lt;p&gt;Loading development environment in sandbox (Rails 2.1.2) Any
modifications you make will be rolled back on exit
/usr/lib/ruby/gems/1.8/gems/rails-2.1.2/lib/console_sandbox.rb:2:NoMethodError:
undefined method increment_open_transactions' for #&lt;/p&gt;
&lt;p&gt;If I revert the diff back to the way it was in rails 2.1.0
before it was changed, then the warning goes away. Here is the
revert of the diff.&lt;/p&gt;
&lt;p&gt;+ActiveRecord::Base.send :increment_open_transactions
-ActiveRecord::Base.connection.increment_open_transactions
ActiveRecord::Base.connection.begin_db_transaction at_exit do
ActiveRecord::Base.connection.rollback_db_transaction
+ActiveRecord::Base.send :decrement_open_transactions
-ActiveRecord::Base.connection.decrement_open_transactions end&lt;/p&gt;
&lt;p&gt;Not sure if this is related to the above errors, but I am also
getting errors in the console for what it seems to be is
transactions. If it is not related, then disregard the below
errors.&lt;/p&gt;
&lt;p&gt;This is with using the facebooker plugin and registering
templates with facebook.&lt;/p&gt;
&lt;p&gt;I am getting the same errors for changes before the diff, and
after the diff.&lt;/p&gt;
&lt;p&gt;ArgumentError: wrong number of arguments (0 for 1)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `changed?'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `update'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2483:in `create_or_update_without_callbacks'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/callbacks.rb:207:in `create_or_update'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2217:in `save_without_validation!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/validations.rb:921:in `save_without_dirty!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/dirty.rb:83:in `save_without_transactions!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:79:in `transaction'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:98:in `transaction'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:118:in `rollback_active_record_state!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:116:in `register'
from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:423:in `method_missing'
from (irb):4&amp;gt;&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17393</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Even though it seems there is a patch for this in rails 2.1.2, I am still getting this error. Any ideas why? Maybe this ticket should be reopened? I have a clean install of rails 2.1.2, mysql-2.7. I should not be getting this error.

Loading development environment in sandbox (Rails 2.1.2) Any modifications you make will be rolled back on exit /usr/lib/ruby/gems/1.8/gems/rails-2.1.2/lib/console_sandbox.rb:2:NoMethodError: undefined method increment_open_transactions' for #&lt;ActiveRecord::ConnectionAdapters::MysqlAdapter:0xb6e89fe8&gt;

If I revert the diff back to the way it was in rails 2.1.0 before it was changed, then the warning goes away. Here is the revert of the diff.

+ActiveRecord::Base.send :increment_open_transactions 

   -ActiveRecord::Base.connection.increment_open_transactions 

  ActiveRecord::Base.connection.begin_db_transaction at_exit do 
     ActiveRecord::Base.connection.rollback_db_transaction  
    +ActiveRecord::Base.send :decrement_open_transactions 
    -ActiveRecord::Base.connection.decrement_open_transactions 
end

Not sure if this is related to the above errors, but I am also getting errors in the console for what it seems to be is transactions.  If it is not related, then disregard the below errors.

This is with using the facebooker plugin and registering templates with facebook.  

I am getting the same errors for changes before the diff, and after the diff.

ArgumentError: wrong number of arguments (0 for 1)

    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `changed?'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `update'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2483:in `create_or_update_without_callbacks'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/callbacks.rb:207:in `create_or_update'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2217:in `save_without_validation!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/validations.rb:921:in `save_without_dirty!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/dirty.rb:83:in `save_without_transactions!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:79:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:98:in `transaction'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:118:in `rollback_active_record_state!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
    from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:116:in `register'
    from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:423:in `method_missing'
    from (irb):4&gt;&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Even though it seems there is a patch for this in rails 2.1.2, I
am still getting this error. Any ideas why? Maybe this ticket
should be reopened? I have a clean install of rails 2.1.2,
mysql-2.7. I should not be getting this error.&lt;/p&gt;
&lt;p&gt;Loading development environment in sandbox (Rails 2.1.2) Any
modifications you make will be rolled back on exit
/usr/lib/ruby/gems/1.8/gems/rails-2.1.2/lib/console_sandbox.rb:2:NoMethodError:
undefined method increment_open_transactions' for
#&amp;lt;ActiveRecord::ConnectionAdapters::MysqlAdapter:0xb6e89fe8&amp;gt;&lt;/p&gt;
&lt;p&gt;If I revert the diff back to the way it was in rails 2.1.0
before it was changed, then the warning goes away. Here is the
revert of the diff.&lt;/p&gt;
&lt;p&gt;+ActiveRecord::Base.send :increment_open_transactions&lt;/p&gt;
&lt;p&gt;-ActiveRecord::Base.connection.increment_open_transactions&lt;/p&gt;
&lt;p&gt;ActiveRecord::Base.connection.begin_db_transaction at_exit
do&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; ActiveRecord::Base.connection.rollback_db_transaction
+ActiveRecord::Base.send :decrement_open_transactions
-ActiveRecord::Base.connection.decrement_open_transactions
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Not sure if this is related to the above errors, but I am also
getting errors in the console for what it seems to be is
transactions. If it is not related, then disregard the below
errors.&lt;/p&gt;
&lt;p&gt;This is with using the facebooker plugin and registering
templates with facebook.&lt;/p&gt;
&lt;p&gt;I am getting the same errors for changes before the diff, and
after the diff.&lt;/p&gt;
&lt;p&gt;ArgumentError: wrong number of arguments (0 for 1)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `changed?'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/timestamp.rb:33:in `update'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2483:in `create_or_update_without_callbacks'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/callbacks.rb:207:in `create_or_update'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:2217:in `save_without_validation!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/validations.rb:921:in `save_without_dirty!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/dirty.rb:83:in `save_without_transactions!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:79:in `transaction'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:98:in `transaction'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:118:in `rollback_active_record_state!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/transactions.rb:110:in `save!'
from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:116:in `register'
from /home/marc/rails_projects/fb_app/vendor/plugins/facebooker/lib/facebooker/rails/publisher.rb:423:in `method_missing'
from (irb):4&amp;gt;&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-18T20:55:41+00:00</created-at>
      <creator-id type="integer">38014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1407</number>
      <permalink>console-sandbox-212-not-fixed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.2 activerecord console console_sandbox.rb sandbox transactions</tag>
      <title>Console --sandbox 2.1.2 not fixed?</title>
      <updated-at type="datetime">2008-11-19T19:50:30+00:00</updated-at>
      <user-id type="integer">38014</user-id>
      <version type="integer">1</version>
      <user-name>MarcD</user-name>
      <creator-name>MarcD</creator-name>
      <assigned-user-name>Repository</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1407</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17393</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This was indeed fixed [here](http://github.com/rails/rails/commit/aa4a7c35309ff95ef1165844d637f7e583ac20dd), but that commit was on the 24th october and 2.1.2 was released on the 23rd :-) So the fix will be in 2.1.3 but for now you'll just have to either apply that patch yourself or do without</body>
      <body-html>&lt;div&gt;&lt;p&gt;This was indeed fixed &lt;a href=&quot;http://github.com/rails/rails/commit/aa4a7c35309ff95ef1165844d637f7e583ac20dd&quot;&gt;
here&lt;/a&gt;, but that commit was on the 24th october and 2.1.2 was
released on the 23rd :-) So the fix will be in 2.1.3 but for now
you'll just have to either apply that patch yourself or do
without&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-14T17:45:38+00:00</created-at>
      <creator-id type="integer">38014</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1407</number>
      <permalink>console-sandbox-212-not-fixed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1.2 activerecord console console_sandbox.rb sandbox transactions</tag>
      <title>Console --sandbox 2.1.2 not fixed?</title>
      <updated-at type="datetime">2008-12-14T17:45:39+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>MarcD</creator-name>
      <assigned-user-name>Repository</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1407</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
