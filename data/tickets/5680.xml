<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">12714</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-22T07:54:51+01:00</created-at>
  <creator-id type="integer">1075</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5680</number>
  <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>after_update callback called when cascade destroying an association</title>
  <updated-at type="datetime">2011-04-04T23:31:38+01:00</updated-at>
  <user-id type="integer">144245</user-id>
  <version type="integer">9</version>
  <user-name>Geoffrey Hichborn</user-name>
  <creator-name>Claudio Poli</creator-name>
  <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
  <priority-name>Low</priority-name>
  <original-body>Rails 3 installed with:
gem &quot;rails&quot;, :git =&gt; &quot;git://github.com/rails/rails.git&quot;, :branch =&gt; &quot;3-0-stable&quot;

@@@
class User &lt; ActiveRecord::Base
  ...
  has_one :subscription, :dependent =&gt; :destroy, :inverse_of =&gt; :user

class Subscription &lt; ActiveRecord::Base
  belongs_to :user
  has_many :transactions, :class_name =&gt; 'SubscriptionTransaction', :foreign_key =&gt; 'subscription_id', :dependent =&gt; :nullify

  after_update :async_adjust_user_library
@@@

Calling User#destroy
@@@
  ...
  Subscription Load (0.4ms)  SELECT `subscriptions`.* FROM `subscriptions` WHERE (`subscriptions`.user_id = 8168) LIMIT 1
  SQL (3.7ms)  UPDATE `subscription_transactions` SET subscription_id = NULL WHERE ((subscription_id = 8081))
[log] calling async_adjust_user_library
@@@

To my knowledge this should not happen. Sadly I don't have time right now to delve deeper in AR to write test/patch but if is there anything I can do let me know.</original-body>
  <latest-body>Rails 3 installed with:
gem &quot;rails&quot;, :git =&gt; &quot;git://github.com/rails/rails.git&quot;, :branch =&gt; &quot;3-0-stable&quot;

@@@
class User &lt; ActiveRecord::Base
  ...
  has_one :subscription, :dependent =&gt; :destroy, :inverse_of =&gt; :user

class Subscription &lt; ActiveRecord::Base
  belongs_to :user
  has_many :transactions, :class_name =&gt; 'SubscriptionTransaction', :foreign_key =&gt; 'subscription_id', :dependent =&gt; :nullify

  after_update :async_adjust_user_library
@@@

Calling User#destroy
@@@
  ...
  Subscription Load (0.4ms)  SELECT `subscriptions`.* FROM `subscriptions` WHERE (`subscriptions`.user_id = 8168) LIMIT 1
  SQL (3.7ms)  UPDATE `subscription_transactions` SET subscription_id = NULL WHERE ((subscription_id = 8081))
[log] calling async_adjust_user_library
@@@

To my knowledge this should not happen. Sadly I don't have time right now to delve deeper in AR to write test/patch but if is there anything I can do let me know.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails 3 installed with:&lt;br&gt;
gem &quot;rails&quot;, :git =&amp;gt; &quot;git://github.com/rails/rails.git&quot;, :branch
=&amp;gt; &quot;3-0-stable&quot;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  ...
  has_one :subscription, :dependent =&amp;gt; :destroy, :inverse_of =&amp;gt; :user

class Subscription &amp;lt; ActiveRecord::Base
  belongs_to :user
  has_many :transactions, :class_name =&amp;gt; 'SubscriptionTransaction', :foreign_key =&amp;gt; 'subscription_id', :dependent =&amp;gt; :nullify

  after_update :async_adjust_user_library&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Calling User#destroy&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  ...
  Subscription Load (0.4ms)  SELECT &lt;/code&gt;subscriptions.* FROM &lt;code&gt;subscriptions&lt;/code&gt; WHERE (&lt;code&gt;subscriptions&lt;/code&gt;.user_id = 8168) LIMIT 1
  SQL (3.7ms)  UPDATE &lt;code&gt;subscription_transactions&lt;/code&gt; SET subscription_id = NULL WHERE ((subscription_id = 8081))
[log] calling async_adjust_user_library
&lt;/pre&gt;
&lt;p&gt;To my knowledge this should not happen. Sadly I don't have time
right now to delve deeper in AR to write test/patch but if is there
anything I can do let me know.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 3 installed with:
gem &quot;rails&quot;, :git =&gt; &quot;git://github.com/rails/rails.git&quot;, :branch =&gt; &quot;3-0-stable&quot;

@@@
class User &lt; ActiveRecord::Base
  ...
  has_one :subscription, :dependent =&gt; :destroy, :inverse_of =&gt; :user

class Subscription &lt; ActiveRecord::Base
  belongs_to :user
  has_many :transactions, :class_name =&gt; 'SubscriptionTransaction', :foreign_key =&gt; 'subscription_id', :dependent =&gt; :nullify

  after_update :async_adjust_user_library
@@@

Calling User#destroy
@@@
  ...
  Subscription Load (0.4ms)  SELECT `subscriptions`.* FROM `subscriptions` WHERE (`subscriptions`.user_id = 8168) LIMIT 1
  SQL (3.7ms)  UPDATE `subscription_transactions` SET subscription_id = NULL WHERE ((subscription_id = 8081))
[log] calling async_adjust_user_library
@@@

To my knowledge this should not happen. Sadly I don't have time right now to delve deeper in AR to write test/patch but if is there anything I can do let me know.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails 3 installed with:&lt;br&gt;
gem &quot;rails&quot;, :git =&amp;gt; &quot;git://github.com/rails/rails.git&quot;, :branch
=&amp;gt; &quot;3-0-stable&quot;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  ...
  has_one :subscription, :dependent =&amp;gt; :destroy, :inverse_of =&amp;gt; :user

class Subscription &amp;lt; ActiveRecord::Base
  belongs_to :user
  has_many :transactions, :class_name =&amp;gt; 'SubscriptionTransaction', :foreign_key =&amp;gt; 'subscription_id', :dependent =&amp;gt; :nullify

  after_update :async_adjust_user_library&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Calling User#destroy&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  ...
  Subscription Load (0.4ms)  SELECT &lt;/code&gt;subscriptions.* FROM &lt;code&gt;subscriptions&lt;/code&gt; WHERE (&lt;code&gt;subscriptions&lt;/code&gt;.user_id = 8168) LIMIT 1
  SQL (3.7ms)  UPDATE &lt;code&gt;subscription_transactions&lt;/code&gt; SET subscription_id = NULL WHERE ((subscription_id = 8081))
[log] calling async_adjust_user_library
&lt;/pre&gt;
&lt;p&gt;To my knowledge this should not happen. Sadly I don't have time
right now to delve deeper in AR to write test/patch but if is there
anything I can do let me know.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-22T07:54:51+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2010-09-22T07:54:55+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">1</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; To my knowledge this should not happen

What is this. Can you elaborate?</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;To my knowledge this should not happen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What is this. Can you elaborate?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-22T14:34:26+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2010-09-22T14:34:29+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I simply assume that an after_update callback should not be triggered on a destroy action.

The Subscription object is being destroyed due to the :dependent option, but not updated.

Yehuda said in IRC that this may be intended, though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I simply assume that an after_update callback should not be
triggered on a destroy action.&lt;/p&gt;
&lt;p&gt;The Subscription object is being destroyed due to the :dependent
option, but not updated.&lt;/p&gt;
&lt;p&gt;Yehuda said in IRC that this may be intended, though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-22T14:38:40+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2010-09-22T14:38:43+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">3</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-22T14:40:34+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2010-09-22T14:40:38+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've been trying to work around this and noticed that before_destroy isn't called before the association is flushed either, so I can't set an instance variable on my model for the after_update callback to check for to see if its actually being deleted and should therefore not perform its task.

It would be nice if ActiveRecord::Base#destroyed? actually returned true before the associations were flushed, this would help in having after_update return early.

I've also tried looking at after_commit but that doesn't seem to fit my requirements as its not possible to discern if a model has been recently created or not. I should be able to hack something together, but it feels like AR::Base#destroyed? should return true once #destroy has been called, I'd love to hear thoughts on this. Additionally I find it a bit surprising that before_destroy isn't called before the association is flushed, but this could be an ordering issue perhaps.

It is probably worth noting all of my callbacks are in an Observer rather than the model, but I wouldn't have thought that would make a substantial difference with the possible exception of ordering callbacks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've been trying to work around this and noticed that
before_destroy isn't called before the association is flushed
either, so I can't set an instance variable on my model for the
after_update callback to check for to see if its actually being
deleted and should therefore not perform its task.&lt;/p&gt;
&lt;p&gt;It would be nice if ActiveRecord::Base#destroyed? actually
returned true before the associations were flushed, this would help
in having after_update return early.&lt;/p&gt;
&lt;p&gt;I've also tried looking at after_commit but that doesn't seem to
fit my requirements as its not possible to discern if a model has
been recently created or not. I should be able to hack something
together, but it feels like AR::Base#destroyed? should return true
once #destroy has been called, I'd love to hear thoughts on this.
Additionally I find it a bit surprising that before_destroy isn't
called before the association is flushed, but this could be an
ordering issue perhaps.&lt;/p&gt;
&lt;p&gt;It is probably worth noting all of my callbacks are in an
Observer rather than the model, but I wouldn't have thought that
would make a substantial difference with the possible exception of
ordering callbacks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-03T17:42:33+00:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2010-11-03T17:42:36+00:00</updated-at>
      <user-id type="integer">15060</user-id>
      <version type="integer">5</version>
      <user-name>Geoff Garside</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-05T20:56:39+00:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2011-02-05T20:58:08+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-05T20:56:39+00:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2011-02-05T20:58:36+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have confirmed that this does indeed occur in the 3-0-6 branch. Running the tests in my rails 3.0.6 branch of my delete_paranoid gem will reveal this:

https://github.com/phene/delete_paranoid/tree/rails-3-0-6</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have confirmed that this does indeed occur in the 3-0-6
branch. Running the tests in my rails 3.0.6 branch of my
delete_paranoid gem will reveal this:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://github.com/phene/delete_paranoid/tree/rails-3-0-6&quot;&gt;https://github.com/phene/delete_paranoid/tree/rails-3-0-6&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-04T20:29:54+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2011-04-04T20:30:04+01:00</updated-at>
      <user-id type="integer">144245</user-id>
      <version type="integer">8</version>
      <user-name>Geoffrey Hichborn</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Actually, I just found an issue in my test and confirmed that this works properly in Rails.

https://github.com/phene/rails/tree/update-callbacks-triggered-on-dependent-destroy</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually, I just found an issue in my test and confirmed that
this works properly in Rails.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://github.com/phene/rails/tree/update-callbacks-triggered-on-dependent-destroy&quot;&gt;
https://github.com/phene/rails/tree/update-callbacks-triggered-on-d...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-04T23:31:29+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5680</number>
      <permalink>after_update-callback-called-when-cascade-destroying-an-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>after_update callback called when cascade destroying an association</title>
      <updated-at type="datetime">2011-04-04T23:31:38+01:00</updated-at>
      <user-id type="integer">144245</user-id>
      <version type="integer">9</version>
      <user-name>Geoffrey Hichborn</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5680</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
