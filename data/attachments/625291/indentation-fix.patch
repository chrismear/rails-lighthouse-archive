From 0da26bd6710058efe1cea0bc5f4f6251470589b3 Mon Sep 17 00:00:00 2001
From: Mark Turner <mark@amerine.net>
Date: Wed, 11 Aug 2010 23:17:01 -0700
Subject: [PATCH] fixed indentation in test cases

---
 .../test/cases/adapters/mysql/connection_test.rb   |    2 +-
 .../test/cases/associations/extension_test.rb      |    3 +--
 activerecord/test/cases/nested_attributes_test.rb  |    2 +-
 3 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/activerecord/test/cases/adapters/mysql/connection_test.rb b/activerecord/test/cases/adapters/mysql/connection_test.rb
index 8e4842a..782aad7 100644
--- a/activerecord/test/cases/adapters/mysql/connection_test.rb
+++ b/activerecord/test/cases/adapters/mysql/connection_test.rb
@@ -41,7 +41,7 @@ class MysqlConnectionTest < ActiveRecord::TestCase
     sleep 2
     @connection.verify!
     assert @connection.active?
- end
+  end
 
   # Test that MySQL allows multiple results for stored procedures
   if Mysql.const_defined?(:CLIENT_MULTI_RESULTS)
diff --git a/activerecord/test/cases/associations/extension_test.rb b/activerecord/test/cases/associations/extension_test.rb
index 9390633..e9240de 100644
--- a/activerecord/test/cases/associations/extension_test.rb
+++ b/activerecord/test/cases/associations/extension_test.rb
@@ -52,8 +52,7 @@ class AssociationsExtensionsTest < ActiveRecord::TestCase
 	  name = :association_name
 
 	  assert_equal 'DeveloperAssociationNameAssociationExtension', Developer.send(:create_extension_modules, name, extension, []).first.name
-	  assert_equal 'MyApplication::Business::DeveloperAssociationNameAssociationExtension',
-MyApplication::Business::Developer.send(:create_extension_modules, name, extension, []).first.name
+	  assert_equal 'MyApplication::Business::DeveloperAssociationNameAssociationExtension', MyApplication::Business::Developer.send(:create_extension_modules, name, extension, []).first.name
     assert_equal 'MyApplication::Business::DeveloperAssociationNameAssociationExtension', MyApplication::Business::Developer.send(:create_extension_modules, name, extension, []).first.name
     assert_equal 'MyApplication::Business::DeveloperAssociationNameAssociationExtension', MyApplication::Business::Developer.send(:create_extension_modules, name, extension, []).first.name
   end
diff --git a/activerecord/test/cases/nested_attributes_test.rb b/activerecord/test/cases/nested_attributes_test.rb
index df09bbd..dbe17a1 100644
--- a/activerecord/test/cases/nested_attributes_test.rb
+++ b/activerecord/test/cases/nested_attributes_test.rb
@@ -356,7 +356,7 @@ class TestNestedAttributesOnABelongsToAssociation < ActiveRecord::TestCase
 
     assert_equal @ship.name, 'Nights Dirty Lightning'
     assert_equal @pirate, @ship.pirate
-   end
+  end
 
   def test_should_take_a_hash_with_string_keys_and_update_the_associated_model
     @ship.reload.pirate_attributes = { 'id' => @pirate.id, 'catchphrase' => 'Arr' }
-- 
1.7.1

