From daf41b093e63de77fe9bbceb8edb555893bfe1ea Mon Sep 17 00:00:00 2001
From: Jay Pignata <john.pignata@gmail.com>
Date: Thu, 13 Aug 2009 09:41:00 -0400
Subject: [PATCH] Adding a call to logger from params_parser to give detailed debug information when invalid xml or json is posted

---
 actionpack/lib/action_controller/params_parser.rb  |    9 ++++++
 .../controller/request/json_params_parsing_test.rb |   28 +++++++++++++++++---
 .../controller/request/xml_params_parsing_test.rb  |   15 ++++++++++
 3 files changed, 48 insertions(+), 4 deletions(-)

diff --git a/actionpack/lib/action_controller/params_parser.rb b/actionpack/lib/action_controller/params_parser.rb
index d269fe0..1d86289 100644
--- a/actionpack/lib/action_controller/params_parser.rb
+++ b/actionpack/lib/action_controller/params_parser.rb
@@ -47,6 +47,8 @@ module ActionController
             false
         end
       rescue Exception => e # YAML, XML or Ruby code block errors
+        logger.fatal "Error occurred while parsing request parameters.\nContents:\n\n#{request.raw_post}"
+
         raise
           { "body" => request.raw_post,
             "content_type" => request.content_type,
@@ -67,5 +69,12 @@ module ActionController
 
         nil
       end
+      
+      private
+        
+        def logger
+          defined?(Rails.logger) ? Rails.logger : Logger.new($stderr)
+        end
+
   end
 end
diff --git a/actionpack/test/controller/request/json_params_parsing_test.rb b/actionpack/test/controller/request/json_params_parsing_test.rb
index a3dde72..27b385a 100644
--- a/actionpack/test/controller/request/json_params_parsing_test.rb
+++ b/actionpack/test/controller/request/json_params_parsing_test.rb
@@ -29,17 +29,37 @@ class JsonParamsParsingTest < ActionController::IntegrationTest
       "{\"person\": {\"name\": \"David\"}}", { 'CONTENT_TYPE' => 'application/jsonrequest' }
     )
   end
+  
+  test "logs error if parsing unsuccessful" do
+    with_test_routing do      
+      begin
+        $stderr = StringIO.new
+        json = "[\"person]\": {\"name\": \"David\"}}"
+        post "/parse", json, {'CONTENT_TYPE' => 'application/json'}
+        assert_response :error
+        $stderr.rewind && err = $stderr.read
+        assert err =~ /Error occurred while parsing request parameters/
+      ensure
+        $stderr = STDERR
+      end      
+    end  
+  end  
 
   private
     def assert_parses(expected, actual, headers = {})
+      with_test_routing do
+        post "/parse", actual, headers
+        assert_response :ok
+        assert_equal(expected, TestController.last_request_parameters)
+      end
+    end
+    
+    def with_test_routing
       with_routing do |set|
         set.draw do |map|
           map.connect ':action', :controller => "json_params_parsing_test/test"
         end
-
-        post "/parse", actual, headers
-        assert_response :ok
-        assert_equal(expected, TestController.last_request_parameters)
+        yield
       end
     end
 end
diff --git a/actionpack/test/controller/request/xml_params_parsing_test.rb b/actionpack/test/controller/request/xml_params_parsing_test.rb
index ee764e7..29bb470 100644
--- a/actionpack/test/controller/request/xml_params_parsing_test.rb
+++ b/actionpack/test/controller/request/xml_params_parsing_test.rb
@@ -38,6 +38,21 @@ class XmlParamsParsingTest < ActionController::IntegrationTest
     end
   end
 
+  test "logs error if parsing unsuccessful" do
+    with_test_routing do      
+      begin
+        $stderr = StringIO.new
+        xml = "<person><name>David</name><avatar type='file' name='me.jpg' content_type='image/jpg'>#{ActiveSupport::Base64.encode64('ABC')}</avatar></pineapple>"
+        post "/parse", xml, default_headers
+        assert_response :error
+        $stderr.rewind && err = $stderr.read
+        assert err =~ /Error occurred while parsing request parameters/
+      ensure
+        $stderr = STDERR
+      end      
+    end  
+  end
+
   test "parses multiple files" do
     xml = <<-end_body
       <person>
-- 
1.5.6.5

