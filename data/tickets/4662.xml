<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-08T12:16:09+00:00</created-at>
  <creator-id type="integer">100102</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4662</number>
  <permalink>habtm-collection_singular_ids-bug-with-include</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>:include habtm has_and_belongs_to_many missingattributeerror</tag>
  <title>Habtm collection_singular_ids bug with :include</title>
  <updated-at type="datetime">2011-02-08T12:16:09+00:00</updated-at>
  <user-id type="integer">100395</user-id>
  <version type="integer">2</version>
  <user-name>Craig S Walker</user-name>
  <creator-name>dalyons</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4662</url>
  <priority-name nil="true"></priority-name>
  <original-body>This is my first ticket, so be gentle :)

Summary: when I use `:include` on a `has_and_belongs_to_many` association, it causes `collection_singular_ids` to fail with **ActiveRecord::MissingAttributeError**.

Rails v2.3.5

### Code: ###
*classes*

@@@ ruby
class Product &lt; ActiveRecord::Base
  has_and_belongs_to_many :vendors, :include =&gt; :state
end

class Vendor &lt; ActiveRecord::Base
  has_and_belongs_to_many :products
  belongs_to :state
end

class State &lt; ActiveRecord::Base
  has_many :vendors
end
@@@

*Failing code:*

@@@ ruby
v = Vendor.create
p = Product.create
p.vendors &lt;&lt; v
p.vendor_ids  #works as expected, returns [v.id]

Product.find(p.id).vendor_ids         #re-fetch the product and try again
**ActiveRecord::MissingAttributeError: missing attribute: state_id**

p = Product.find(p.id)
p.vendors               #force an association load
p.vendor_ids            #works as expected, returns [v.id]

@@@

### backtrace ###
@@@
&gt;&gt;Product.find(p.id).vendor_ids
ActiveRecord::MissingAttributeError: missing attribute: state_id
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `preload_belongs_to_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `preload_belongs_to_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `preload_one_association'
	from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:114:in `preload_one_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:91:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:1550:in `find_every'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:615:in `find'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:635:in `all'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2143:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:376:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1313:in `vendor_ids'
	from (irb):14&gt;&gt; 
@@@

It only occurs if you try and access the `vendor_ids` property before the `vendors` association collection has been loaded(eg by accessing that property)

I just tested that code with a new, clean 2.3.5 app with just the classes above, and I get the errors as described.
I can work around it by not using the :include option, but I thought id record it here as I couldn't find any info on this behaviour anywhere else on the net.

If i need to include any other info please let me know!</original-body>
  <latest-body>This is my first ticket, so be gentle :)

Summary: when I use `:include` on a `has_and_belongs_to_many` association, it causes `collection_singular_ids` to fail with **ActiveRecord::MissingAttributeError**.

Rails v2.3.5

### Code: ###
*classes*

@@@ ruby
class Product &lt; ActiveRecord::Base
  has_and_belongs_to_many :vendors, :include =&gt; :state
end

class Vendor &lt; ActiveRecord::Base
  has_and_belongs_to_many :products
  belongs_to :state
end

class State &lt; ActiveRecord::Base
  has_many :vendors
end
@@@

*Failing code:*

@@@ ruby
v = Vendor.create
p = Product.create
p.vendors &lt;&lt; v
p.vendor_ids  #works as expected, returns [v.id]

Product.find(p.id).vendor_ids         #re-fetch the product and try again
**ActiveRecord::MissingAttributeError: missing attribute: state_id**

p = Product.find(p.id)
p.vendors               #force an association load
p.vendor_ids            #works as expected, returns [v.id]

@@@

### backtrace ###
@@@
&gt;&gt;Product.find(p.id).vendor_ids
ActiveRecord::MissingAttributeError: missing attribute: state_id
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `preload_belongs_to_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `preload_belongs_to_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `preload_one_association'
	from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:114:in `preload_one_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:91:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:1550:in `find_every'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:615:in `find'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:635:in `all'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2143:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:376:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1313:in `vendor_ids'
	from (irb):14&gt;&gt; 
@@@

It only occurs if you try and access the `vendor_ids` property before the `vendors` association collection has been loaded(eg by accessing that property)

I just tested that code with a new, clean 2.3.5 app with just the classes above, and I get the errors as described.
I can work around it by not using the :include option, but I thought id record it here as I couldn't find any info on this behaviour anywhere else on the net.

If i need to include any other info please let me know!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is my first ticket, so be gentle :)&lt;/p&gt;
&lt;p&gt;Summary: when I use &lt;code&gt;:include&lt;/code&gt; on a
&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association, it causes
&lt;code&gt;collection_singular_ids&lt;/code&gt; to fail with
&lt;strong&gt;ActiveRecord::MissingAttributeError&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Rails v2.3.5&lt;/p&gt;
&lt;h3&gt;Code:&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;classes&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Product &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :vendors, :include =&amp;gt; :state
end

class Vendor &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :products
  belongs_to :state
end

class State &amp;lt; ActiveRecord::Base
  has_many :vendors
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Failing code:&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;v = Vendor.create
p = Product.create
p.vendors &amp;lt;&amp;lt; v
p.vendor_ids  #works as expected, returns [v.id]

Product.find(p.id).vendor_ids         #re-fetch the product and try again
**ActiveRecord::MissingAttributeError: missing attribute: state_id**

p = Product.find(p.id)
p.vendors               #force an association load
p.vendor_ids            #works as expected, returns [v.id]&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;backtrace&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;Product.find(p.id).vendor_ids
ActiveRecord::MissingAttributeError: missing attribute: state_id
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `preload_belongs_to_association'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `preload_belongs_to_association'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `preload_one_association'
    from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:114:in `preload_one_association'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:91:in `preload_associations'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:1550:in `find_every'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:615:in `find'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:635:in `all'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `method_missing'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2143:in `with_scope'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `with_scope'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:376:in `method_missing'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1313:in `vendor_ids'
    from (irb):14&amp;gt;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It only occurs if you try and access the &lt;code&gt;vendor_ids&lt;/code&gt;
property before the &lt;code&gt;vendors&lt;/code&gt; association collection has
been loaded(eg by accessing that property)&lt;/p&gt;
&lt;p&gt;I just tested that code with a new, clean 2.3.5 app with just
the classes above, and I get the errors as described.&lt;br&gt;
I can work around it by not using the :include option, but I
thought id record it here as I couldn't find any info on this
behaviour anywhere else on the net.&lt;/p&gt;
&lt;p&gt;If i need to include any other info please let me know!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is my first ticket, so be gentle :)

Summary: when I use `:include` on a `has_and_belongs_to_many` association, it causes `collection_singular_ids` to fail with **ActiveRecord::MissingAttributeError**.

Rails v2.3.5

### Code: ###
*classes*

@@@ ruby
class Product &lt; ActiveRecord::Base
  has_and_belongs_to_many :vendors, :include =&gt; :state
end

class Vendor &lt; ActiveRecord::Base
  has_and_belongs_to_many :products
  belongs_to :state
end

class State &lt; ActiveRecord::Base
  has_many :vendors
end
@@@

*Failing code:*

@@@ ruby
v = Vendor.create
p = Product.create
p.vendors &lt;&lt; v
p.vendor_ids  #works as expected, returns [v.id]

Product.find(p.id).vendor_ids         #re-fetch the product and try again
**ActiveRecord::MissingAttributeError: missing attribute: state_id**

p = Product.find(p.id)
p.vendors               #force an association load
p.vendor_ids            #works as expected, returns [v.id]

@@@

### backtrace ###
@@@
&gt;&gt;Product.find(p.id).vendor_ids
ActiveRecord::MissingAttributeError: missing attribute: state_id
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `preload_belongs_to_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `preload_belongs_to_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `preload_one_association'
	from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:114:in `preload_one_association'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:91:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:1550:in `find_every'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:615:in `find'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:635:in `all'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2143:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:376:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1313:in `vendor_ids'
	from (irb):14&gt;&gt; 
@@@

It only occurs if you try and access the `vendor_ids` property before the `vendors` association collection has been loaded(eg by accessing that property)

I just tested that code with a new, clean 2.3.5 app with just the classes above, and I get the errors as described.
I can work around it by not using the :include option, but I thought id record it here as I couldn't find any info on this behaviour anywhere else on the net.

If i need to include any other info please let me know!</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is my first ticket, so be gentle :)&lt;/p&gt;
&lt;p&gt;Summary: when I use &lt;code&gt;:include&lt;/code&gt; on a
&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association, it causes
&lt;code&gt;collection_singular_ids&lt;/code&gt; to fail with
&lt;strong&gt;ActiveRecord::MissingAttributeError&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Rails v2.3.5&lt;/p&gt;
&lt;h3&gt;Code:&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;classes&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Product &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :vendors, :include =&amp;gt; :state
end

class Vendor &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :products
  belongs_to :state
end

class State &amp;lt; ActiveRecord::Base
  has_many :vendors
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Failing code:&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;v = Vendor.create
p = Product.create
p.vendors &amp;lt;&amp;lt; v
p.vendor_ids  #works as expected, returns [v.id]

Product.find(p.id).vendor_ids         #re-fetch the product and try again
**ActiveRecord::MissingAttributeError: missing attribute: state_id**

p = Product.find(p.id)
p.vendors               #force an association load
p.vendor_ids            #works as expected, returns [v.id]&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;backtrace&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;Product.find(p.id).vendor_ids
ActiveRecord::MissingAttributeError: missing attribute: state_id
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:309:in `preload_belongs_to_association'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:308:in `preload_belongs_to_association'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:120:in `preload_one_association'
    from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.5/lib/active_support/ordered_hash.rb:97:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:114:in `preload_one_association'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:91:in `preload_associations'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/association_preload.rb:90:in `preload_associations'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:1550:in `find_every'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:615:in `find'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:635:in `all'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:380:in `method_missing'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/base.rb:2143:in `with_scope'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `send'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_proxy.rb:206:in `with_scope'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:376:in `method_missing'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1313:in `vendor_ids'
    from (irb):14&amp;gt;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It only occurs if you try and access the &lt;code&gt;vendor_ids&lt;/code&gt;
property before the &lt;code&gt;vendors&lt;/code&gt; association collection has
been loaded(eg by accessing that property)&lt;/p&gt;
&lt;p&gt;I just tested that code with a new, clean 2.3.5 app with just
the classes above, and I get the errors as described.&lt;br&gt;
I can work around it by not using the :include option, but I
thought id record it here as I couldn't find any info on this
behaviour anywhere else on the net.&lt;/p&gt;
&lt;p&gt;If i need to include any other info please let me know!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-21T02:41:43+01:00</created-at>
      <creator-id type="integer">100102</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4662</number>
      <permalink>habtm-collection_singular_ids-bug-with-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include habtm has_and_belongs_to_many missingattributeerror</tag>
      <title>Habtm collection_singular_ids bug with :include</title>
      <updated-at type="datetime">2010-05-21T02:42:14+01:00</updated-at>
      <user-id type="integer">100102</user-id>
      <version type="integer">1</version>
      <user-name>dalyons</user-name>
      <creator-name>dalyons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4662</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've hit this error too; same stack trace, same conditions, same version of Rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've hit this error too; same stack trace, same conditions, same
version of Rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-26T21:13:04+00:00</created-at>
      <creator-id type="integer">100102</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4662</number>
      <permalink>habtm-collection_singular_ids-bug-with-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include habtm has_and_belongs_to_many missingattributeerror</tag>
      <title>Habtm collection_singular_ids bug with :include</title>
      <updated-at type="datetime">2010-11-26T21:13:15+00:00</updated-at>
      <user-id type="integer">100395</user-id>
      <version type="integer">2</version>
      <user-name>Craig S Walker</user-name>
      <creator-name>dalyons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4662</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>thank you very much......&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/&quot;&gt;&#1605;&#1606;&#1578;&#1583;&#1610;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&#1605;&#1603;&#1610;&#1575;&#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1575;&#1586;&#1610;&#1575;&#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1601;&#1587;&#1575;&#1578;&#1610;&#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&#1585;&#1587;&#1575;&#1574;&#1604; 
- &#1605;&#1587;&#1580;&#1575;&#1578; - &#1608;&#1587;&#1575;&#1574;&#1591;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&#1578;&#1608;&#1576;&#1610;&#1603;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&#1608;&#1592;&#1575;&#1574;&#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&#1576;&#1585;&#1608;&#1603;&#1587;&#1610;&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt; &lt;a href=&quot;http://forum.line-sport.tv/&quot;&gt;&#1604;&#1575;&#1610;&#1606; &#1587;&#1576;&#1608;&#1585;&#1578;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;thank you very much......&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/&quot;&gt;&amp;#1605;&amp;#1606;&amp;#1578;&amp;#1583;&amp;#1610;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&amp;#1605;&amp;#1603;&amp;#1610;&amp;#1575;&amp;#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1575;&amp;#1586;&amp;#1610;&amp;#1575;&amp;#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1601;&amp;#1587;&amp;#1575;&amp;#1578;&amp;#1610;&amp;#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&amp;#1585;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1604;&lt;br&gt;
- &amp;#1605;&amp;#1587;&amp;#1580;&amp;#1575;&amp;#1578; -
&amp;#1608;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1591;&lt;/a&gt;&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&amp;#1578;&amp;#1608;&amp;#1576;&amp;#1610;&amp;#1603;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&amp;#1608;&amp;#1592;&amp;#1575;&amp;#1574;&amp;#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt;
&lt;a href=
&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&amp;#1576;&amp;#1585;&amp;#1608;&amp;#1603;&amp;#1587;&amp;#1610;&lt;/a&gt;
&lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt; &lt;a href=
&quot;http://forum.line-sport.tv/&quot;&gt;&amp;#1604;&amp;#1575;&amp;#1610;&amp;#1606;
&amp;#1587;&amp;#1576;&amp;#1608;&amp;#1585;&amp;#1578;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-08T11:25:20+00:00</created-at>
      <creator-id type="integer">100102</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4662</number>
      <permalink>habtm-collection_singular_ids-bug-with-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include habtm has_and_belongs_to_many missingattributeerror</tag>
      <title>Habtm collection_singular_ids bug with :include</title>
      <updated-at type="datetime">2011-02-08T12:16:09+00:00</updated-at>
      <user-id type="integer">136126</user-id>
      <version type="integer">3</version>
      <user-name>alasiri1</user-name>
      <creator-name>dalyons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4662</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
