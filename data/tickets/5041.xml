<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40263</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-28T03:36:09+00:00</created-at>
  <creator-id type="integer">105339</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5041</number>
  <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
  <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
  <updated-at type="datetime">2010-12-28T03:36:09+00:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">8</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Aaron Lifton</creator-name>
  <assigned-user-name>Neeraj Singh</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
  <priority-name>Low</priority-name>
  <original-body>I have a debate model, which should have at least 2 sides.
Here's some code:
    has_many :sides, :dependent =&gt; :destroy
    accepts_nested_attributes_for :sides, :allow_destroy =&gt; true
    validate :has_enough_sides
    # ...
    def has_enough_sides
        unmarked_sides = sides.reject { |side| side.marked_for_destruction? }
        errors[:sides] &lt;&lt; &quot;A debate must have at least 2 sides.&quot; if unmarked_sides.size &lt; 2
    end

When I comment out &quot;validate :has_enough_sides&quot;, changes are made to the nested sides when the debate model is updated with a nested form, as a normal nested form should. When I don't use the &quot;marked_for_destruction?&quot; function it also works fine.

However, when I include that validation, with the use of &quot;marked_for_destruction?&quot;, all changes made to the nested models are ignored and no SQL is actually run, and the debate still saves and validates.

Oddly enough, if a side is invalid, the form is rendered again with the attributes of the original sides as if no changes were made.

I've looked through the source code and I'm pretty sure the problem is in here, but I cannot trace it: http://github.com/rails/rails/blob/76f024ac8db82490a99c71d0d8951d677e3bc9bc/activerecord/lib/active_record/nested_attributes.rb</original-body>
  <latest-body>I have a debate model, which should have at least 2 sides.
Here's some code:
    has_many :sides, :dependent =&gt; :destroy
    accepts_nested_attributes_for :sides, :allow_destroy =&gt; true
    validate :has_enough_sides
    # ...
    def has_enough_sides
        unmarked_sides = sides.reject { |side| side.marked_for_destruction? }
        errors[:sides] &lt;&lt; &quot;A debate must have at least 2 sides.&quot; if unmarked_sides.size &lt; 2
    end

When I comment out &quot;validate :has_enough_sides&quot;, changes are made to the nested sides when the debate model is updated with a nested form, as a normal nested form should. When I don't use the &quot;marked_for_destruction?&quot; function it also works fine.

However, when I include that validation, with the use of &quot;marked_for_destruction?&quot;, all changes made to the nested models are ignored and no SQL is actually run, and the debate still saves and validates.

Oddly enough, if a side is invalid, the form is rendered again with the attributes of the original sides as if no changes were made.

I've looked through the source code and I'm pretty sure the problem is in here, but I cannot trace it: http://github.com/rails/rails/blob/76f024ac8db82490a99c71d0d8951d677e3bc9bc/activerecord/lib/active_record/nested_attributes.rb</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a debate model, which should have at least 2 sides.&lt;br&gt;
Here's some code:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :sides, :dependent =&amp;gt; :destroy
accepts_nested_attributes_for :sides, :allow_destroy =&amp;gt; true
validate :has_enough_sides
# ...
def has_enough_sides
    unmarked_sides = sides.reject { |side| side.marked_for_destruction? }
    errors[:sides] &amp;lt;&amp;lt; &quot;A debate must have at least 2 sides.&quot; if unmarked_sides.size &amp;lt; 2
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I comment out &quot;validate :has_enough_sides&quot;, changes are
made to the nested sides when the debate model is updated with a
nested form, as a normal nested form should. When I don't use the
&quot;marked_for_destruction?&quot; function it also works fine.&lt;/p&gt;
&lt;p&gt;However, when I include that validation, with the use of
&quot;marked_for_destruction?&quot;, all changes made to the nested models
are ignored and no SQL is actually run, and the debate still saves
and validates.&lt;/p&gt;
&lt;p&gt;Oddly enough, if a side is invalid, the form is rendered again
with the attributes of the original sides as if no changes were
made.&lt;/p&gt;
&lt;p&gt;I've looked through the source code and I'm pretty sure the
problem is in here, but I cannot trace it: &lt;a href=
&quot;http://github.com/rails/rails/blob/76f024ac8db82490a99c71d0d8951d677e3bc9bc/activerecord/lib/active_record/nested_attributes.rb&quot;&gt;
http://github.com/rails/rails/blob/76f024ac8db82490a99c71d0d8951d67...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a debate model, which should have at least 2 sides.
Here's some code:
    has_many :sides, :dependent =&gt; :destroy
    accepts_nested_attributes_for :sides, :allow_destroy =&gt; true
    validate :has_enough_sides
    # ...
    def has_enough_sides
        unmarked_sides = sides.reject { |side| side.marked_for_destruction? }
        errors[:sides] &lt;&lt; &quot;A debate must have at least 2 sides.&quot; if unmarked_sides.size &lt; 2
    end

When I comment out &quot;validate :has_enough_sides&quot;, changes are made to the nested sides when the debate model is updated with a nested form, as a normal nested form should. When I don't use the &quot;marked_for_destruction?&quot; function it also works fine.

However, when I include that validation, with the use of &quot;marked_for_destruction?&quot;, all changes made to the nested models are ignored and no SQL is actually run, and the debate still saves and validates.

Oddly enough, if a side is invalid, the form is rendered again with the attributes of the original sides as if no changes were made.

I've looked through the source code and I'm pretty sure the problem is in here, but I cannot trace it: http://github.com/rails/rails/blob/76f024ac8db82490a99c71d0d8951d677e3bc9bc/activerecord/lib/active_record/nested_attributes.rb</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a debate model, which should have at least 2 sides.&lt;br&gt;
Here's some code:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :sides, :dependent =&amp;gt; :destroy
accepts_nested_attributes_for :sides, :allow_destroy =&amp;gt; true
validate :has_enough_sides
# ...
def has_enough_sides
    unmarked_sides = sides.reject { |side| side.marked_for_destruction? }
    errors[:sides] &amp;lt;&amp;lt; &quot;A debate must have at least 2 sides.&quot; if unmarked_sides.size &amp;lt; 2
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I comment out &quot;validate :has_enough_sides&quot;, changes are
made to the nested sides when the debate model is updated with a
nested form, as a normal nested form should. When I don't use the
&quot;marked_for_destruction?&quot; function it also works fine.&lt;/p&gt;
&lt;p&gt;However, when I include that validation, with the use of
&quot;marked_for_destruction?&quot;, all changes made to the nested models
are ignored and no SQL is actually run, and the debate still saves
and validates.&lt;/p&gt;
&lt;p&gt;Oddly enough, if a side is invalid, the form is rendered again
with the attributes of the original sides as if no changes were
made.&lt;/p&gt;
&lt;p&gt;I've looked through the source code and I'm pretty sure the
problem is in here, but I cannot trace it: &lt;a href=
&quot;http://github.com/rails/rails/blob/76f024ac8db82490a99c71d0d8951d677e3bc9bc/activerecord/lib/active_record/nested_attributes.rb&quot;&gt;
http://github.com/rails/rails/blob/76f024ac8db82490a99c71d0d8951d67...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-04T04:42:53+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-04T04:45:10+01:00</updated-at>
      <user-id type="integer">105339</user-id>
      <version type="integer">1</version>
      <user-name>Aaron Lifton</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ticket #4642 should have solved this problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;ticket &lt;a href=&quot;/projects/8994/tickets/4642&quot; title=
&quot;Ticket #4642&quot;&gt;#4642&lt;/a&gt; should have solved this problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-07T19:38:32+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-07T19:38:33+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am not able to reproduce your case with rails edge. Here is my setup.

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100707175023) do

  create_table &quot;questions&quot;, :force =&gt; true do |t|
    t.text    &quot;name&quot;
    t.integer &quot;survey_id&quot;
  end

  create_table &quot;surveys&quot;, :force =&gt; true do |t|
    t.string &quot;name&quot;
  end

end
class Question &lt; ActiveRecord::Base
  belongs_to :survey
end
class Survey &lt; ActiveRecord::Base

  has_many :questions, :dependent =&gt; :destroy

  accepts_nested_attributes_for :questions, :allow_destroy =&gt; true

  validate :has_enough_questions

  def self.lab
    Survey.delete_all
    Question.delete_all
    survey = Survey.new(:name =&gt; 'cool_survey')
    q1 = survey.questions.build(:name =&gt; 'q1')
    q2 = survey.questions.build(:name =&gt; 'q2')
    survey.save!
    
    survey = Survey.first
    survey.update_attributes({:name =&gt; 'super_cool_survery', :questions_attributes =&gt; { '0' =&gt; {:id =&gt; q1.id.to_s, :name =&gt; 'q11'},
    '1' =&gt; {:id =&gt; q2.id.to_s, :name =&gt; 'q22'}}})
    puts survey.questions(true).inspect
  end

  private

  def has_enough_questions
    unmarked_questions = questions.reject { |q| q.marked_for_destruction? }
    errors[:questions] &lt;&lt; &quot;A survery must have at least 2 questions.&quot; if unmarked_questions.size &lt; 2
  end

end
@@@

Just run Survey.lab and you will see the updated result. You can also see the sql statements for the update.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not able to reproduce your case with rails edge. Here is my
setup.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100707175023) do

  create_table &quot;questions&quot;, :force =&amp;gt; true do |t|
    t.text    &quot;name&quot;
    t.integer &quot;survey_id&quot;
  end

  create_table &quot;surveys&quot;, :force =&amp;gt; true do |t|
    t.string &quot;name&quot;
  end

end
class Question &amp;lt; ActiveRecord::Base
  belongs_to :survey
end
class Survey &amp;lt; ActiveRecord::Base

  has_many :questions, :dependent =&amp;gt; :destroy

  accepts_nested_attributes_for :questions, :allow_destroy =&amp;gt; true

  validate :has_enough_questions

  def self.lab
    Survey.delete_all
    Question.delete_all
    survey = Survey.new(:name =&amp;gt; 'cool_survey')
    q1 = survey.questions.build(:name =&amp;gt; 'q1')
    q2 = survey.questions.build(:name =&amp;gt; 'q2')
    survey.save!
    
    survey = Survey.first
    survey.update_attributes({:name =&amp;gt; 'super_cool_survery', :questions_attributes =&amp;gt; { '0' =&amp;gt; {:id =&amp;gt; q1.id.to_s, :name =&amp;gt; 'q11'},
    '1' =&amp;gt; {:id =&amp;gt; q2.id.to_s, :name =&amp;gt; 'q22'}}})
    puts survey.questions(true).inspect
  end

  private

  def has_enough_questions
    unmarked_questions = questions.reject { |q| q.marked_for_destruction? }
    errors[:questions] &amp;lt;&amp;lt; &quot;A survery must have at least 2 questions.&quot; if unmarked_questions.size &amp;lt; 2
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Just run Survey.lab and you will see the updated result. You can
also see the sql statements for the update.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-07T21:54:01+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-07T21:54:04+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Great, thanks a lot for helping and trying to reproduce the error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great, thanks a lot for helping and trying to reproduce the
error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T23:06:59+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-08T23:07:01+01:00</updated-at>
      <user-id type="integer">105339</user-id>
      <version type="integer">4</version>
      <user-name>Aaron Lifton</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Aaron Is your problem gone or are you still able to reproduce this on rails edge?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Aaron Is your problem gone or are you still able to reproduce
this on rails edge?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T23:09:14+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-08T23:09:15+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well I was on Rails 3.0.0.beta4, I'll install rails edge and let you know.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well I was on Rails 3.0.0.beta4, I'll install rails edge and let
you know.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-11T17:20:23+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-11T17:20:24+01:00</updated-at>
      <user-id type="integer">105339</user-id>
      <version type="integer">6</version>
      <user-name>Aaron Lifton</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Neeraj,
i tried the above case it seems working for me also.
as you pointed out 4642 fixed this. 

@@@ ruby


class Car &lt; ActiveRecord::Base
  has_many :brakes
  accepts_nested_attributes_for :brakes, :allow_destroy =&gt; true
  validate :has_enough_brakes

  def has_enough_brakes
    unmarked_sides = brakes.reject { |side| side.marked_for_destruction? }
    if unmarked_sides.size &lt; 2
      errors[:sides] &lt;&lt; &quot;A debate must have at least 2 sides.&quot;
    end
  end

  def self.lab
    car   = Car.new(:name =&gt; 'Toyota')
    car.brakes.build(:name =&gt; &quot;middle&quot;)
    car.brakes.build(:name =&gt; &quot;disc&quot;)
    car.save
    left  = car.brakes.create(:name =&gt; &quot;left&quot;)
    car.update_attributes({
      :name =&gt; 'Toyota',
      :brakes_attributes =&gt; {
        &quot;0&quot; =&gt; {
          &quot;name&quot; =&gt; &quot;right&quot;
        },
        &quot;1&quot; =&gt;{
          &quot;id&quot; =&gt; left.id.to_s,
          &quot;_destroy&quot; =&gt; &quot;1&quot;
        }
      }
    })
  end

end


@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj,&lt;br&gt;
i tried the above case it seems working for me also.&lt;br&gt;
as you pointed out 4642 fixed this.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;

class Car &amp;lt; ActiveRecord::Base
  has_many :brakes
  accepts_nested_attributes_for :brakes, :allow_destroy =&amp;gt; true
  validate :has_enough_brakes

  def has_enough_brakes
    unmarked_sides = brakes.reject { |side| side.marked_for_destruction? }
    if unmarked_sides.size &amp;lt; 2
      errors[:sides] &amp;lt;&amp;lt; &quot;A debate must have at least 2 sides.&quot;
    end
  end

  def self.lab
    car   = Car.new(:name =&amp;gt; 'Toyota')
    car.brakes.build(:name =&amp;gt; &quot;middle&quot;)
    car.brakes.build(:name =&amp;gt; &quot;disc&quot;)
    car.save
    left  = car.brakes.create(:name =&amp;gt; &quot;left&quot;)
    car.update_attributes({
      :name =&amp;gt; 'Toyota',
      :brakes_attributes =&amp;gt; {
        &quot;0&quot; =&amp;gt; {
          &quot;name&quot; =&amp;gt; &quot;right&quot;
        },
        &quot;1&quot; =&amp;gt;{
          &quot;id&quot; =&amp;gt; left.id.to_s,
          &quot;_destroy&quot; =&amp;gt; &quot;1&quot;
        }
      }
    })
  end

end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-16T21:29:23+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-16T21:29:25+01:00</updated-at>
      <user-id type="integer">54456</user-id>
      <version type="integer">7</version>
      <user-name>Subba</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>marking this ticket as resolved. If it is still an issue please report it and it can be reopened.</body>
      <body-html>&lt;div&gt;&lt;p&gt;marking this ticket as resolved. If it is still an issue please
report it and it can be reopened.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-16T21:33:09+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-16T21:33:11+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>re also &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;designer handbags&lt;/a&gt;&lt;/b&gt; different kinds of handbag &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;handbags on sale&lt;/a&gt;&lt;/b&gt; owners. The original type &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/lateral-shoulder-bags.html&quot;&gt;Lateral shoulder bags cheap sale&lt;/a&gt;&lt;/b&gt; of owner it they &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;fake designer handbags cheap&lt;/a&gt;&lt;/b&gt; type that has had &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/birkin-35.html&quot;&gt;Birkin 35 outlet&lt;/a&gt;&lt;/b&gt; the same one since &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/tahitienne.html&quot;&gt;Tahitienne cheap sale&lt;/a&gt;&lt;/b&gt; the 1980's or earlier &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;cheap designer handbags online&lt;/a&gt;&lt;/b&gt; and they never are &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;designer handbags&lt;/a&gt;&lt;/b&gt; more than a few &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/valentino-handbags.html&quot;&gt;replica Valentino Handbags handbags&lt;/a&gt;&lt;/b&gt; feet from this bag. &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/burberry-handbags.html&quot;&gt;replica Burberry Handbags handbags sale&lt;/a&gt;&lt;/b&gt; Their world is contained inside and they would be lost without it. Somehow I got it into my head to buy my f</body>
      <body-html>&lt;div&gt;&lt;p&gt;re also &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;designer
handbags&lt;/a&gt;&lt;/b&gt; different kinds of handbag &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com&quot;&gt;handbags on sale&lt;/a&gt;&lt;/b&gt; owners.
The original type &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/lateral-shoulder-bags.html&quot;&gt;
Lateral shoulder bags cheap sale&lt;/a&gt;&lt;/b&gt; of owner it they
&lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;fake designer handbags
cheap&lt;/a&gt;&lt;/b&gt; type that has had &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/birkin-35.html&quot;&gt;Birkin
35 outlet&lt;/a&gt;&lt;/b&gt; the same one since &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/tahitienne.html&quot;&gt;
Tahitienne cheap sale&lt;/a&gt;&lt;/b&gt; the 1980's or earlier &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com&quot;&gt;cheap designer handbags
online&lt;/a&gt;&lt;/b&gt; and they never are &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com&quot;&gt;designer handbags&lt;/a&gt;&lt;/b&gt; more
than a few &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/valentino-handbags.html&quot;&gt;
replica Valentino Handbags handbags&lt;/a&gt;&lt;/b&gt; feet from this bag.
&lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/burberry-handbags.html&quot;&gt;
replica Burberry Handbags handbags sale&lt;/a&gt;&lt;/b&gt; Their world is
contained inside and they would be lost without it. Somehow I got
it into my head to buy my f&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T09:17:51+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-07-21T01:45:58+01:00</updated-at>
      <user-id type="integer">107781</user-id>
      <version type="integer">9</version>
      <user-name>echo</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Chopard Replica.aspx&quot;&gt;Ladies Chopard Replica&lt;/a&gt;has the soft pliable skin of the sheep facing out as &lt;a href=&quot;http://www.egacn.com/Watches-Mens Hublot Replica.aspx&quot;&gt;Mens Hublot Replica&lt;/a&gt; has the woollen part of the skin facing in. This &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Hublot Replica.aspx&quot;&gt;Ladies Hublot Replica&lt;/a&gt; results in a soft outer or exterior skin to the &lt;a href=&quot;http://www.egacn.com/Watches-Mens IWC Replica.aspx&quot;&gt;Mens IWC Replica&lt;/a&gt; that means that &lt;a href=&quot;http://www.egacn.com/Watches-Ladies IWC Replica.aspx&quot;&gt;Ladies IWC Replica&lt;/a&gt;can be a damageUGG&lt;a href=&quot;http://www.egacn.com/Watches-Mens Patek Philippe Replica.aspx&quot;&gt;Mens Patek Philippe Replica&lt;/a&gt; and wear when used in wet weather or inclement, dirty or muddy conditions. The&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Patek Philippe Replica.aspx&quot;&gt;Ladies Patek Philippe Replica&lt;/a&gt;not the most hard wearing of &lt;a href=&quot;http://www.egacn.com/Watches-Mens Audemars Piguet Replica.aspx&quot;&gt;Mens Audemars Piguet Replica&lt;/a&gt;, and so wearers of&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Audemars Piguet Replica.aspx&quot;&gt;Ladies Audemars Piguet Replica&lt;/a&gt; quickly that they need to use some &lt;a href=&quot;http://www.egacn.com/Watches-watches large women.aspx&quot;&gt;large women&lt;/a&gt;when selecting which day to wear their &lt;a href=&quot;http://www.egacn.com/Watches-deals on mens watches.aspx&quot;&gt;deals on mens watches&lt;/a&gt;.
The &lt;a href=&quot;http://www.egacn.com/Watches-omega automatic watches.aspx&quot;&gt;omega automatic watches&lt;/a&gt; is usually sewn onto a plastic sole,&lt;a href=&quot;http://www.egacn.com/Watches-discount designer watches women.aspx&quot;&gt;discount designer watches women&lt;/a&gt;and so the &lt;a href=&quot;http://www.egacn.com/Watches-tag carrera watches manufacturers.aspx&quot;&gt;tag carrera watches manufacturers&lt;/a&gt; is not entirely waterproof. Water can enter around the sole, and although &lt;a href=&quot;http://www.egacn.com/Watches-ulysse nardin marine chronograph w.aspx&quot;&gt;ulysse nardin marine chronograph w&lt;/a&gt; is possible to buy&lt;a href=&quot;http://www.egacn.com/Watches-inexpensive wrist watches.aspx&quot;&gt;inexpensive wrist watches&lt;/a&gt; waterproofing &lt;a href=&quot;http://www.egacn.com/Watches-cheap wrist watches.aspx&quot;&gt;cheap wrist watches&lt;/a&gt;is not a total solution. If you own a pair of Ugg Sale it&#8217;s better to treat your &lt;a href=&quot;http://www.egacn.com/Watches-discount wrist watches.aspx&quot;&gt;discount wrist watches&lt;/a&gt;care and respect and understand that even the best &lt;a href=&quot;http://www.egacn.com/Watches-omega watches price list.aspx&quot;&gt;omega watches price list&lt;/a&gt; are not ideal for hard outdoor get dirty quite quickly if &lt;a href=&quot;http://www.egacn.com/Watches-stainless steel mens watches.aspx&quot;&gt;stainless steel mens watches&lt;/a&gt;too harshly.Despite the comfort&lt;a href=&quot;http://www.egacn.com/Watches-stainless steel womens watches.aspx&quot;&gt;stainless steel womens watches&lt;/a&gt;, many people will still not wear these &lt;a href=&quot;http://www.egacn.com/Watches-iwc watches replica.aspx&quot;&gt;iwc watches replica&lt;/a&gt;because of their &lt;a href=&quot;http://www.egacn.com/Watches-Cartier gentle men watches.aspx&quot;&gt;Cartier gentle men watches&lt;/a&gt;. But &lt;a href=&quot;http://www.egacn.com/Watches-discount zenith watches.aspx&quot;&gt;discount zenith watches&lt;/a&gt; now come in a variety of &lt;a href=&quot;http://www.egacn.com/Watches-chinese mechanical watches.aspx&quot;&gt;chinese mechanical watches&lt;/a&gt;, sizes and colors &lt;a href=&quot;http://www.egacn.com/Watches-top brand watches.aspx&quot;&gt;top brand watches&lt;/a&gt; and can generally be incorporated in any kind of apparel you on wearing. Typically since these &lt;a href=&quot;http://www.egacn.com/Watches-most expensive women watches.aspx&quot;&gt;most expensive women watches&lt;/a&gt; are usually worn in the winter for thermal insulation, you can wear any kind of Ski wear or even &lt;a href=&quot;http://www.egacn.com/Watches-brand name watches women.aspx&quot;&gt;brand name watches women&lt;/a&gt;.
Those who want to become most beautiful in the world should try them. Just ones can make you different. Girls who want to grab your boyfriends's heart is necessary to use&lt;a href=&quot;http://www.egacn.com/Watches-designer watches women.aspx&quot;&gt;designer watches women&lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Chopard%20Replica.aspx&quot;&gt;Ladies
Chopard Replica&lt;/a&gt;has the soft pliable skin of the sheep facing
out as &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Hublot%20Replica.aspx&quot;&gt;Mens
Hublot Replica&lt;/a&gt; has the woollen part of the skin facing in. This
&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Hublot%20Replica.aspx&quot;&gt;Ladies
Hublot Replica&lt;/a&gt; results in a soft outer or exterior skin to the
&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20IWC%20Replica.aspx&quot;&gt;Mens IWC
Replica&lt;/a&gt; that means that &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20IWC%20Replica.aspx&quot;&gt;Ladies
IWC Replica&lt;/a&gt;can be a damageUGG&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Patek%20Philippe%20Replica.aspx&quot;&gt;Mens
Patek Philippe Replica&lt;/a&gt; and wear when used in wet weather or
inclement, dirty or muddy conditions. The&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Patek%20Philippe%20Replica.aspx&quot;&gt;Ladies
Patek Philippe Replica&lt;/a&gt;not the most hard wearing of &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Audemars%20Piguet%20Replica.aspx&quot;&gt;
Mens Audemars Piguet Replica&lt;/a&gt;, and so wearers of&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Audemars%20Piguet%20Replica.aspx&quot;&gt;Ladies
Audemars Piguet Replica&lt;/a&gt; quickly that they need to use some
&lt;a href=
&quot;http://www.egacn.com/Watches-watches%20large%20women.aspx&quot;&gt;large
women&lt;/a&gt;when selecting which day to wear their &lt;a href=
&quot;http://www.egacn.com/Watches-deals%20on%20mens%20watches.aspx&quot;&gt;deals
on mens watches&lt;/a&gt;.&lt;br&gt;
The &lt;a href=
&quot;http://www.egacn.com/Watches-omega%20automatic%20watches.aspx&quot;&gt;omega
automatic watches&lt;/a&gt; is usually sewn onto a plastic sole,&lt;a href=
&quot;http://www.egacn.com/Watches-discount%20designer%20watches%20women.aspx&quot;&gt;discount
designer watches women&lt;/a&gt;and so the &lt;a href=
&quot;http://www.egacn.com/Watches-tag%20carrera%20watches%20manufacturers.aspx&quot;&gt;
tag carrera watches manufacturers&lt;/a&gt; is not entirely waterproof.
Water can enter around the sole, and although &lt;a href=
&quot;http://www.egacn.com/Watches-ulysse%20nardin%20marine%20chronograph%20w.aspx&quot;&gt;
ulysse nardin marine chronograph w&lt;/a&gt; is possible to buy&lt;a href=
&quot;http://www.egacn.com/Watches-inexpensive%20wrist%20watches.aspx&quot;&gt;inexpensive
wrist watches&lt;/a&gt; waterproofing &lt;a href=
&quot;http://www.egacn.com/Watches-cheap%20wrist%20watches.aspx&quot;&gt;cheap
wrist watches&lt;/a&gt;is not a total solution. If you own a pair of Ugg
Sale it&amp;#8217;s better to treat your &lt;a href=
&quot;http://www.egacn.com/Watches-discount%20wrist%20watches.aspx&quot;&gt;discount
wrist watches&lt;/a&gt;care and respect and understand that even the best
&lt;a href=
&quot;http://www.egacn.com/Watches-omega%20watches%20price%20list.aspx&quot;&gt;omega
watches price list&lt;/a&gt; are not ideal for hard outdoor get dirty
quite quickly if &lt;a href=
&quot;http://www.egacn.com/Watches-stainless%20steel%20mens%20watches.aspx&quot;&gt;
stainless steel mens watches&lt;/a&gt;too harshly.Despite the
comfort&lt;a href=
&quot;http://www.egacn.com/Watches-stainless%20steel%20womens%20watches.aspx&quot;&gt;stainless
steel womens watches&lt;/a&gt;, many people will still not wear these
&lt;a href=
&quot;http://www.egacn.com/Watches-iwc%20watches%20replica.aspx&quot;&gt;iwc
watches replica&lt;/a&gt;because of their &lt;a href=
&quot;http://www.egacn.com/Watches-Cartier%20gentle%20men%20watches.aspx&quot;&gt;
Cartier gentle men watches&lt;/a&gt;. But &lt;a href=
&quot;http://www.egacn.com/Watches-discount%20zenith%20watches.aspx&quot;&gt;discount
zenith watches&lt;/a&gt; now come in a variety of &lt;a href=
&quot;http://www.egacn.com/Watches-chinese%20mechanical%20watches.aspx&quot;&gt;chinese
mechanical watches&lt;/a&gt;, sizes and colors &lt;a href=
&quot;http://www.egacn.com/Watches-top%20brand%20watches.aspx&quot;&gt;top brand
watches&lt;/a&gt; and can generally be incorporated in any kind of
apparel you on wearing. Typically since these &lt;a href=
&quot;http://www.egacn.com/Watches-most%20expensive%20women%20watches.aspx&quot;&gt;
most expensive women watches&lt;/a&gt; are usually worn in the winter for
thermal insulation, you can wear any kind of Ski wear or even
&lt;a href=
&quot;http://www.egacn.com/Watches-brand%20name%20watches%20women.aspx&quot;&gt;brand
name watches women&lt;/a&gt;.&lt;br&gt;
Those who want to become most beautiful in the world should try
them. Just ones can make you different. Girls who want to grab your
boyfriends's heart is necessary to use&lt;a href=
&quot;http://www.egacn.com/Watches-designer%20watches%20women.aspx&quot;&gt;designer
watches women&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-25T00:29:29+01:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-10-25T03:19:11+01:00</updated-at>
      <user-id type="integer">121592</user-id>
      <version type="integer">10</version>
      <user-name>weifeng</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T02:38:33+00:00</created-at>
      <creator-id type="integer">105339</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5041</number>
      <permalink>use-of-marked_for_destruction-in-validation-callback-breaks-autosave-association-behavior</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>marked_for_destruction nested &quot;nested attributes&quot; &quot;nested form&quot; &quot;nested objects&quot; nested_attributes_for</tag>
      <title>Use of marked_for_destruction? in validation callback breaks autosave association behavior</title>
      <updated-at type="datetime">2010-12-28T03:36:09+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">11</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Aaron Lifton</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5041</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
