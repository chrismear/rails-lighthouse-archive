From e1bddf85b6130e9463029686cb1072a1140906fc Mon Sep 17 00:00:00 2001
From: Tekin Suleyman <tekin@tekin.co.uk>
Date: Thu, 6 Nov 2008 20:00:54 +0000
Subject: [PATCH] Added :counter_sql as a valid key for habtm associations

---
 activerecord/lib/active_record/associations.rb |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index c7cb6eb..7f78191 100755
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1609,7 +1609,7 @@ module ActiveRecord
           :class_name, :table_name, :join_table, :foreign_key, :association_foreign_key,
           :select, :conditions, :include, :order, :group, :limit, :offset,
           :uniq,
-          :finder_sql, :delete_sql, :insert_sql,
+          :finder_sql, :counter_sql, :delete_sql, :insert_sql,
           :before_add, :after_add, :before_remove, :after_remove,
           :extend, :readonly,
           :validate
-- 
1.5.5.4


From 39e1248ddfe5eeebc1f1843e84fb9856f75ea1d3 Mon Sep 17 00:00:00 2001
From: Tekin Suleyman <tekin@tekin.co.uk>
Date: Thu, 6 Nov 2008 21:06:40 +0000
Subject: [PATCH] Added tests for HABTM associations with counter_sql

---
 .../has_and_belongs_to_many_associations_test.rb   |   23 ++++++++++++++++++++
 1 files changed, 23 insertions(+), 0 deletions(-)

diff --git a/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb b/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb
index 2949f1d..bfa5aa6 100644
--- a/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb
+++ b/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb
@@ -68,6 +68,16 @@ class DeveloperWithSymbolsForKeys < ActiveRecord::Base
     :foreign_key => "developer_id"
 end
 
+class DeveloperWithCounterSQL < ActiveRecord::Base
+  set_table_name 'developers'
+  has_and_belongs_to_many :projects,
+    :class_name => "DeveloperWithCounterSQL",
+    :join_table => "developers_projects",
+    :association_foreign_key => "project_id",
+    :foreign_key => "developer_id",
+    :counter_sql => 'SELECT COUNT(*) AS count_all FROM projects INNER JOIN developers_projects ON projects.id = developers_projects.project_id WHERE developers_projects.developer_id =#{id}'
+end
+
 class HasAndBelongsToManyAssociationsTest < ActiveRecord::TestCase
   fixtures :accounts, :companies, :categories, :posts, :categories_posts, :developers, :projects, :developers_projects,
            :parrots, :pirates, :treasures, :price_estimates, :tags, :taggings
@@ -738,6 +748,19 @@ class HasAndBelongsToManyAssociationsTest < ActiveRecord::TestCase
     # Array#count in Ruby >=1.8.7, which would raise an ArgumentError
     assert_nothing_raised { david.projects.count(:all, :conditions => '1=1') }
   end
+  
+  def test_count
+    david = Developer.find(1)
+    assert_equal 2, david.projects.count
+  end
+  
+  def test_count_with_counter_sql
+    developer  = DeveloperWithCounterSQL.create(:name => 'tekin')
+    developer.project_ids = [projects(:active_record).id]
+    developer.save
+    developer.reload
+    assert_equal 1, developer.projects.count
+  end
 
   uses_mocha 'mocking Post.transaction' do
     def test_association_proxy_transaction_method_starts_transaction_in_association_class
-- 
1.5.5.4

