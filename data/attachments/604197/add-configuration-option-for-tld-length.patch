From 8d7e5627bde2648bc3325c457ac39fc3842ac911 Mon Sep 17 00:00:00 2001
From: Simon Jefford <simon.jefford@gmail.com>
Date: Tue, 27 Jul 2010 15:39:28 +0100
Subject: [PATCH] Add configuration option for tld length

---
 actionpack/lib/action_dispatch/http/url.rb |    6 ++++--
 actionpack/lib/action_dispatch/railtie.rb  |    5 +++++
 actionpack/test/dispatch/request_test.rb   |    5 +++++
 3 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/actionpack/lib/action_dispatch/http/url.rb b/actionpack/lib/action_dispatch/http/url.rb
index b64a83c..1cde0d9 100644
--- a/actionpack/lib/action_dispatch/http/url.rb
+++ b/actionpack/lib/action_dispatch/http/url.rb
@@ -1,6 +1,8 @@
 module ActionDispatch
   module Http
     module URL
+      mattr_accessor :tld_length
+
       # Returns the complete URL used for this request.
       def url
         protocol + host_with_port + fullpath
@@ -75,13 +77,13 @@ module ActionDispatch
       # returned for "dev.www.rubyonrails.org". You can specify a different <tt>tld_length</tt>,
       # such as 2 to catch <tt>["www"]</tt> instead of <tt>["www", "rubyonrails"]</tt>
       # in "www.rubyonrails.co.uk".
-      def subdomains(tld_length = 1)
+      def subdomains(tld_length = @@tld_length)
         return [] unless named_host?(host)
         parts = host.split('.')
         parts[0..-(tld_length+2)]
       end
 
-      def subdomain(tld_length = 1)
+      def subdomain(tld_length = @@tld_length)
         subdomains(tld_length).join('.')
       end
 
diff --git a/actionpack/lib/action_dispatch/railtie.rb b/actionpack/lib/action_dispatch/railtie.rb
index ed93211..b5d5300 100644
--- a/actionpack/lib/action_dispatch/railtie.rb
+++ b/actionpack/lib/action_dispatch/railtie.rb
@@ -7,10 +7,15 @@ module ActionDispatch
     config.action_dispatch.x_sendfile_header = ""
     config.action_dispatch.ip_spoofing_check = true
     config.action_dispatch.show_exceptions = true
+    config.action_dispatch.tld_length = 1
 
     # Prepare dispatcher callbacks and run 'prepare' callbacks
     initializer "action_dispatch.prepare_dispatcher" do |app|
       ActionDispatch::Callbacks.to_prepare { app.routes_reloader.execute_if_updated }
     end
+
+    initializer "action_dispatch.configure" do |app|
+      ActionDispatch::Http::URL.tld_length = app.config.action_dispatch.tld_length
+    end
   end
 end
\ No newline at end of file
diff --git a/actionpack/test/dispatch/request_test.rb b/actionpack/test/dispatch/request_test.rb
index c8947aa..d329777 100644
--- a/actionpack/test/dispatch/request_test.rb
+++ b/actionpack/test/dispatch/request_test.rb
@@ -116,6 +116,9 @@ class RequestTest < ActiveSupport::TestCase
     request = stub_request 'HTTP_HOST' => "dev.www.rubyonrails.co.uk"
     assert_equal %w( dev www ), request.subdomains(2)
 
+    request = stub_request 'HTTP_HOST' => "dev.www.rubyonrails.co.uk", :tld_length => 2
+    assert_equal %w( dev www ), request.subdomains
+
     request = stub_request 'HTTP_HOST' => "foobar.foobar.com"
     assert_equal %w( foobar ), request.subdomains
 
@@ -436,7 +439,9 @@ protected
   def stub_request(env = {})
     ip_spoofing_check = env.key?(:ip_spoofing_check) ? env.delete(:ip_spoofing_check) : true
     ip_app = ActionDispatch::RemoteIp.new(Proc.new { }, ip_spoofing_check, @trusted_proxies)
+    tld_length = env.key?(:tld_length) ? env.delete(:tld_length) : 1
     ip_app.call(env)
+    ActionDispatch::Http::URL.tld_length = tld_length
     ActionDispatch::Request.new(env)
   end
 
-- 
1.7.1.1

