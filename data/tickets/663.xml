<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-21T01:45:56+01:00</created-at>
  <creator-id type="integer">20657</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">663</number>
  <permalink>optional-null-via-condition-hash</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord patch tested</tag>
  <title>Optional NULL via condition hash</title>
  <updated-at type="datetime">2010-07-21T01:45:56+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">2</version>
  <user-name>Pratik</user-name>
  <creator-name>pelzrutsche</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/663</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The following code:
@@@ ruby
Page.find(:all, :conditions =&gt; { :author =&gt; ['Anonymous', nil]})
@@@
resutls in an SQL query like this:
@@@ sql
[...] WHERE `author` IN ('Anonymous', NULL)
@@@
However, it does _not_ return any pages with author = nil/NULL.

I fixed this by factroing out
@@@ ruby
active_record/base.rb in sanitize_sql_hash_for_conditions

&quot;#{table_name}.#{connection.quote_column_name(attr)} #{attribute_condition(value)}&quot;
@@@ 
into a new method, advanced_attribute_condition. It checks for an array-argument including nil and builds the sql snippet accordingly.

This may also be handy when working with LEFT OUTER JOIN, as conditions affecting a associated table result in a RecordNotFound if no matching record can be found in it.</original-body>
  <latest-body>The following code:
@@@ ruby
Page.find(:all, :conditions =&gt; { :author =&gt; ['Anonymous', nil]})
@@@
resutls in an SQL query like this:
@@@ sql
[...] WHERE `author` IN ('Anonymous', NULL)
@@@
However, it does _not_ return any pages with author = nil/NULL.

I fixed this by factroing out
@@@ ruby
active_record/base.rb in sanitize_sql_hash_for_conditions

&quot;#{table_name}.#{connection.quote_column_name(attr)} #{attribute_condition(value)}&quot;
@@@ 
into a new method, advanced_attribute_condition. It checks for an array-argument including nil and builds the sql snippet accordingly.

This may also be handy when working with LEFT OUTER JOIN, as conditions affecting a associated table result in a RecordNotFound if no matching record can be found in it.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
The following code:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;Page.find(:all, :conditions =&amp;gt; { :author =&amp;gt; ['Anonymous', nil]})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
resutls in an SQL query like this:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;[...] WHERE `author` IN ('Anonymous', NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
However, it does &lt;em&gt;not&lt;/em&gt; return any pages with author = nil/NULL.
&lt;/p&gt;&lt;p&gt;
I fixed this by factroing out
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;active_record/base.rb in sanitize_sql_hash_for_conditions

&amp;quot;#{table_name}.#{connection.quote_column_name(attr)} #{attribute_condition(value)}&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
into a new method, advanced_attribute_condition. It checks for an array-argument including nil and builds the sql snippet accordingly.
&lt;/p&gt;&lt;p&gt;
This may also be handy when working with LEFT OUTER JOIN, as conditions affecting a associated table result in a RecordNotFound if no matching record can be found in it.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The following code:
@@@ ruby
Page.find(:all, :conditions =&gt; { :author =&gt; ['Anonymous', nil]})
@@@
resutls in an SQL query like this:
@@@ sql
[...] WHERE `author` IN ('Anonymous', NULL)
@@@
However, it does _not_ return any pages with author = nil/NULL (using MySQL).

I fixed this by factroing out
@@@ ruby
active_record/base.rb in sanitize_sql_hash_for_conditions

&quot;#{table_name}.#{connection.quote_column_name(attr)} #{attribute_condition(value)}&quot;
@@@ 
into a new method, advanced_attribute_condition. It checks for an array-argument including nil and builds the SQL snippet accordingly. For example: 
@@@ ruby
{ :author =&gt; ['Anonymous', nil] } #=&gt; [...] WHERE (author = 'Anonymous' OR author IS NULL)
{ :type =&gt; ['a', 'b', nil] } #=&gt; [...] WHERE (type IN ('a', 'b') OR type IS NULL)
@@@

This may also be handy when working with LEFT OUTER JOIN, as conditions affecting a associated table result in a RecordNotFound if no matching record can be found in it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The following code:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;Page.find(:all, :conditions =&amp;gt; { :author =&amp;gt; ['Anonymous', nil]})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
resutls in an SQL query like this:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;[...] WHERE `author` IN ('Anonymous', NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
However, it does &lt;em&gt;not&lt;/em&gt; return any pages with author = nil/NULL (using MySQL).
&lt;/p&gt;&lt;p&gt;
I fixed this by factroing out
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;active_record/base.rb in sanitize_sql_hash_for_conditions

&amp;quot;#{table_name}.#{connection.quote_column_name(attr)} #{attribute_condition(value)}&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
into a new method, advanced_attribute_condition. It checks for an array-argument including nil and builds the SQL snippet accordingly. For example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;{ :author =&amp;gt; ['Anonymous', nil] } #=&amp;gt; [...] WHERE (author = 'Anonymous' OR author IS NULL)
{ :type =&amp;gt; ['a', 'b', nil] } #=&amp;gt; [...] WHERE (type IN ('a', 'b') OR type IS NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This may also be handy when working with LEFT OUTER JOIN, as conditions affecting a associated table result in a RecordNotFound if no matching record can be found in it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-20T14:55:22+01:00</created-at>
      <creator-id type="integer">20657</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">663</number>
      <permalink>optional-null-via-condition-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch tested</tag>
      <title>Optional NULL via condition hash</title>
      <updated-at type="datetime">2008-07-20T14:55:22+01:00</updated-at>
      <user-id type="integer">20657</user-id>
      <version type="integer">1</version>
      <user-name>pelzrutsche</user-name>
      <creator-name>pelzrutsche</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/663</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I understand that this is an issue. But I don't think this corner case justifies the added complexity in the code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I understand that this is an issue. But I don't think this corner case justifies the added complexity in the code.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-20T18:37:53+01:00</created-at>
      <creator-id type="integer">20657</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">663</number>
      <permalink>optional-null-via-condition-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord patch tested</tag>
      <title>Optional NULL via condition hash</title>
      <updated-at type="datetime">2008-07-20T18:37:53+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>pelzrutsche</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/663</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>e best &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; market of replica Rolex &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt; watches is internet and &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; online trading. There are &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;imitation rolex watches&lt;/a&gt;&lt;/b&gt; lot of B2C portals &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watch sale&lt;/a&gt;&lt;/b&gt; which sale Rolex replica. &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;replica rolex watch&lt;/a&gt;&lt;/b&gt; There are a lot &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; of websites which sell &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; replica Rolex watches. You &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; can get any quality &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; of replica Rolex through internet. From the low quality Chinese grade to highest quality</body>
      <body-html>&lt;div&gt;&lt;p&gt;e best &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; market of replica Rolex &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt;
watches is internet and &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; online
trading. There are &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;imitation rolex watches&lt;/a&gt;&lt;/b&gt;
lot of B2C portals &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watch sale&lt;/a&gt;&lt;/b&gt; which
sale Rolex replica. &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;replica rolex watch&lt;/a&gt;&lt;/b&gt; There
are a lot &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; of websites which sell &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; replica
Rolex watches. You &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; can get any
quality &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; of replica Rolex through internet. From the low
quality Chinese grade to highest quality&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T07:05:18+01:00</created-at>
      <creator-id type="integer">20657</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">663</number>
      <permalink>optional-null-via-condition-hash</permalink>
      <priority type="integer">145</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord patch tested</tag>
      <title>Optional NULL via condition hash</title>
      <updated-at type="datetime">2010-07-21T01:45:56+01:00</updated-at>
      <user-id type="integer">107781</user-id>
      <version type="integer">3</version>
      <user-name>echo</user-name>
      <creator-name>pelzrutsche</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/663</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a8fafe07939a1b6d7f9d9456a3c4fd4c367470b9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-20T11:09:13+01:00</created-at>
      <filename>advanced_attribute_condition.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">33750</id>
      <size type="integer">2938</size>
      <uploader-id type="integer">20657</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/33750/advanced_attribute_condition.diff</url>
    </attachment>
  </attachments>
</ticket>
