<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">11378</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-22T06:48:03+01:00</created-at>
  <creator-id type="integer">70571</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3271</number>
  <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
  <priority type="integer">153918</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag nil="true"></tag>
  <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
  <updated-at type="datetime">2011-05-05T02:56:38+01:00</updated-at>
  <user-id type="integer">148049</user-id>
  <version type="integer">12</version>
  <user-name>af001</user-name>
  <creator-name>Bruce Burdick</creator-name>
  <assigned-user-name>Xavier Noria</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
  <priority-name nil="true"></priority-name>
  <original-body>This changeset introduced data corruption in active_record/connection_adapters/postgresql_adapter.rb: http://dev.rubyonrails.org/changeset/7329

@@@ ruby
        elsif value.kind_of?(String) &amp;&amp; column &amp;&amp; column.sql_type =~ /^bit/
          case value
            when /^[01]*$/
              &quot;B'#{value}'&quot; # Bit-string notation
            when /^[0-9A-F]*$/i
              &quot;X'#{value}'&quot; # Hexadecimal notation
@@@

This is a dangerous design that will result in data corruption every time it is passed a string representing a hexadecimal number that is strictly composed of zeros and ones. That string will be saved as though it represented a binary number, instead. It is not possible to determine whether such a string represents a binary or hexadecimal number by scanning its contents. Ruby itself imposes prefix tags to make this distinction: e.g. 0b1010 vs. 0x1010. No ActiveRecord DB driver should pretend to infer the base of an untagged string of ones and zeros.

The solution must either:

 * avoid using bitstring column types altogether (not preferred)
 * support either binary or hexadecimal, make no warranty for the other, and fix the driver code
 * reject untagged strings and fix the driver code</original-body>
  <latest-body>This changeset introduced data corruption in active_record/connection_adapters/postgresql_adapter.rb: http://dev.rubyonrails.org/changeset/7329

@@@ ruby
        elsif value.kind_of?(String) &amp;&amp; column &amp;&amp; column.sql_type =~ /^bit/
          case value
            when /^[01]*$/
              &quot;B'#{value}'&quot; # Bit-string notation
            when /^[0-9A-F]*$/i
              &quot;X'#{value}'&quot; # Hexadecimal notation
@@@

This is a dangerous design that will result in data corruption every time it is passed a string representing a hexadecimal number that is strictly composed of zeros and ones. That string will be saved as though it represented a binary number, instead. It is not possible to determine whether such a string represents a binary or hexadecimal number by scanning its contents. Ruby itself imposes prefix tags to make this distinction: e.g. 0b1010 vs. 0x1010. No ActiveRecord DB driver should pretend to infer the base of an untagged string of ones and zeros.

The solution must either:

 * avoid using bitstring column types altogether (not preferred)
 * support either binary or hexadecimal, make no warranty for the other, and fix the driver code
 * reject untagged strings and fix the driver code</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This changeset introduced data corruption in
active_record/connection_adapters/postgresql_adapter.rb: &lt;a href=
&quot;http://dev.rubyonrails.org/changeset/7329&quot;&gt;http://dev.rubyonrails.org/changeset/7329&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;        elsif value.kind_of?(String) &amp;amp;&amp;amp; column &amp;amp;&amp;amp; column.sql_type =~ /^bit/
          case value
            when /^[01]*$/
              &quot;B'#{value}'&quot; # Bit-string notation
            when /^[0-9A-F]*$/i
              &quot;X'#{value}'&quot; # Hexadecimal notation&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is a dangerous design that will result in data corruption
every time it is passed a string representing a hexadecimal number
that is strictly composed of zeros and ones. That string will be
saved as though it represented a binary number, instead. It is not
possible to determine whether such a string represents a binary or
hexadecimal number by scanning its contents. Ruby itself imposes
prefix tags to make this distinction: e.g. 0b1010 vs. 0x1010. No
ActiveRecord DB driver should pretend to infer the base of an
untagged string of ones and zeros.&lt;/p&gt;
&lt;p&gt;The solution must either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;avoid using bitstring column types altogether (not
preferred)&lt;/li&gt;
&lt;li&gt;support either binary or hexadecimal, make no warranty for the
other, and fix the driver code&lt;/li&gt;
&lt;li&gt;reject untagged strings and fix the driver code&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This changeset introduced data corruption in active_record/connection_adapters/postgresql_adapter.rb: http://dev.rubyonrails.org/changeset/7329

@@@ ruby
        elsif value.kind_of?(String) &amp;&amp; column &amp;&amp; column.sql_type =~ /^bit/
          case value
            when /^[01]*$/
              &quot;B'#{value}'&quot; # Bit-string notation
            when /^[0-9A-F]*$/i
              &quot;X'#{value}'&quot; # Hexadecimal notation
@@@

This is a dangerous design that will result in data corruption every time it is passed a string representing a hexadecimal number that is strictly composed of zeros and ones. That string will be saved as though it represented a binary number, instead. It is not possible to determine whether such a string represents a binary or hexadecimal number by scanning its contents. Ruby itself imposes prefix tags to make this distinction: e.g. 0b1010 vs. 0x1010. No ActiveRecord DB driver should pretend to infer the base of an untagged string of ones and zeros.

The solution must either:

 * avoid using bitstring column types altogether (not preferred)
 * support either binary or hexadecimal, make no warranty for the other, and fix the driver code
 * reject untagged strings and fix the driver code</body>
      <body-html>&lt;div&gt;&lt;p&gt;This changeset introduced data corruption in
active_record/connection_adapters/postgresql_adapter.rb: &lt;a href=
&quot;http://dev.rubyonrails.org/changeset/7329&quot;&gt;http://dev.rubyonrails.org/changeset/7329&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;        elsif value.kind_of?(String) &amp;amp;&amp;amp; column &amp;amp;&amp;amp; column.sql_type =~ /^bit/
          case value
            when /^[01]*$/
              &quot;B'#{value}'&quot; # Bit-string notation
            when /^[0-9A-F]*$/i
              &quot;X'#{value}'&quot; # Hexadecimal notation&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is a dangerous design that will result in data corruption
every time it is passed a string representing a hexadecimal number
that is strictly composed of zeros and ones. That string will be
saved as though it represented a binary number, instead. It is not
possible to determine whether such a string represents a binary or
hexadecimal number by scanning its contents. Ruby itself imposes
prefix tags to make this distinction: e.g. 0b1010 vs. 0x1010. No
ActiveRecord DB driver should pretend to infer the base of an
untagged string of ones and zeros.&lt;/p&gt;
&lt;p&gt;The solution must either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;avoid using bitstring column types altogether (not
preferred)&lt;/li&gt;
&lt;li&gt;support either binary or hexadecimal, make no warranty for the
other, and fix the driver code&lt;/li&gt;
&lt;li&gt;reject untagged strings and fix the driver code&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T00:09:14+01:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2009-09-27T00:09:19+01:00</updated-at>
      <user-id type="integer">70571</user-id>
      <version type="integer">1</version>
      <user-name>Bruce Burdick</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Credit goes to Kurt Stephens for identifying this bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Credit goes to Kurt Stephens for identifying this bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T00:10:21+01:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2009-09-27T00:10:26+01:00</updated-at>
      <user-id type="integer">70571</user-id>
      <version type="integer">2</version>
      <user-name>Bruce Burdick</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T11:28:11+01:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2009-09-27T11:28:16+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:19+00:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bugmash
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2010-02-12T12:46:19+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:55:13+00:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-02-02T18:40:34+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:55:15+00:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-02-02T18:39:42+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet&lt;/a&gt; are not only a place to hold your necessities, but are also a potential investment in image and functionality. If fashions never changed, with renowned Coach durability, their handbags could be used for a lifetime, this designer price is worth the cost in quality. 
The hard transport,&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet&lt;/a&gt;  providing a mightily pleasing look at. Prepare bags are typically excluding hot property than handbags diffuse through other else designers, they still might be high grace, nevertheless Break In Purses are all bags are)! Although the bags start totes on Exercise Bags, you&#8217;re express out-and-out might assessment drill animation sale more than a,&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet online&lt;/a&gt; some customers are express to gravy. Develop bags are sometimes replicated because of the attractiveness and disconcerted-reaching. When you see the Form Kristin OP Prowess Objection affect Hobo Handbags Eponym trademark marking on auction are labeled into 3 painless categories: diminutive, medium, and many types of The proposal normally begins companionless the method of designs.&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach clearance&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet&lt;/a&gt; are not
only a place to hold your necessities, but are also a potential
investment in image and functionality. If fashions never changed,
with renowned Coach durability, their handbags could be used for a
lifetime, this designer price is worth the cost in quality.&lt;br&gt;
The hard transport,&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach
outlet&lt;/a&gt; providing a mightily pleasing look at. Prepare bags are
typically excluding hot property than handbags diffuse through
other else designers, they still might be high grace, nevertheless
Break In Purses are all bags are)! Although the bags start totes on
Exercise Bags, you&amp;#8217;re express out-and-out might assessment
drill animation sale more than a,&lt;a href=
&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet online&lt;/a&gt; some
customers are express to gravy. Develop bags are sometimes
replicated because of the attractiveness and disconcerted-reaching.
When you see the Form Kristin OP Prowess Objection affect Hobo
Handbags Eponym trademark marking on auction are labeled into 3
painless categories: diminutive, medium, and many types of The
proposal normally begins companionless the method of
designs.&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach
clearance&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-03T07:57:31+00:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-03-03T09:20:18+00:00</updated-at>
      <user-id type="integer">139624</user-id>
      <version type="integer">7</version>
      <user-name>cheap coach bags</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello,

Attached is a patch against current master to fix this issue.

I've decided to go with the option two proposed by the reporter: &quot;support either binary or hexadecimal, make no warranty for the other, and fix the driver code.&quot;  I think it's best to keep only support for binary strings and drop support for hexadecimal, and here's why:

1. as pointed out in this issue the hexadecimal notation cannot be used reliably to put the data into a bit-string column;
2. when the data is read from a bit-string column it is always returned as a binary string, so sticking to binary representation helps consistency and avoids surprises;

Now, this change might break some existing code, but since the nature of the issue, this is going to affect only instances of (relatively) short hard-coded hexadecimal strings being put into bit-string columns.  Problematic application code will manifest itself with a database error exception, rather than putting incorrect data into column.

--
Alex</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;Attached is a patch against current master to fix this
issue.&lt;/p&gt;
&lt;p&gt;I've decided to go with the option two proposed by the reporter:
&quot;support either binary or hexadecimal, make no warranty for the
other, and fix the driver code.&quot; I think it's best to keep only
support for binary strings and drop support for hexadecimal, and
here's why:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;as pointed out in this issue the hexadecimal notation cannot be
used reliably to put the data into a bit-string column;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;when the data is read from a bit-string column it is always
returned as a binary string, so sticking to binary representation
helps consistency and avoids surprises;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, this change might break some existing code, but since the
nature of the issue, this is going to affect only instances of
(relatively) short hard-coded hexadecimal strings being put into
bit-string columns. Problematic application code will manifest
itself with a database error exception, rather than putting
incorrect data into column.&lt;/p&gt;
&lt;p&gt;-- Alex&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-23T17:21:51+00:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-03-23T17:21:58+00:00</updated-at>
      <user-id type="integer">142542</user-id>
      <version type="integer">8</version>
      <user-name>Alex Shulgin</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 Alex!

I'm amazed that no one from Rails core has thought that this is important for ~18 months. C'est la vie. Thanks for fixing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 Alex!&lt;/p&gt;
&lt;p&gt;I'm amazed that no one from Rails core has thought that this is
important for ~18 months. C'est la vie. Thanks for fixing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-29T19:35:20+01:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-03-29T19:35:34+01:00</updated-at>
      <user-id type="integer">70571</user-id>
      <version type="integer">9</version>
      <user-name>Bruce Burdick</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-30T07:46:03+01:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-03-30T07:46:16+01:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">10</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>PDF to JPG Converter is a more efficient pdf to jpg conversion software
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to image converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to tiff converter&lt;/a&gt;
which is able to convert pdf to jpg format with original output quality and fast conversion speed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;PDF to JPG Converter is a more efficient pdf to jpg conversion
software&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg
converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to
image converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to
tiff converter&lt;/a&gt;&lt;br&gt;
which is able to convert pdf to jpg format with original output
quality and fast conversion speed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-22T04:47:25+01:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-04-22T06:48:03+01:00</updated-at>
      <user-id type="integer">146598</user-id>
      <version type="integer">11</version>
      <user-name>machen</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&#31169;&#12398;&#20013;&#12391;&#12289;&#32207;&#21512;&#35413;&#20385;&#12398;&#12392;&#12387;&#12390;&#12418;&#20302;&#12356;&#12450;&#12496;&lt;a href=&quot;http://www.abakuro.co.jp/&quot; rel=&quot;dofollow&quot;&gt;&lt;b&gt;&#12450;&#12496;&#12463;&#12525;&#12507;&#12522;&#12473;&#12479;&#12540;&lt;/b&gt;&lt;/a&gt;&#12463;&#12525;&#37504;&#24231;&#24215;&#12290;&#12450;&#12496;&#12463;&#12525;&#12399;&#22823;&#22909;&#12365;&#12394;&#12435;&#12391;&#12377;&#12369;&#12393;&#12397;&#12290;&#19968;&#26152;&#26085;&#12398;&#26481;&#20140;&#39365;&#20184;&#36817;&#12391;&#12398;&#25171;&#12385;&#21512;&#12431;&#12379;&#12398;&#24460;&#12289;&#25955;&#27497;&#12364;&#12390;&#12425;&#20037;&#12293;&#12395;&#34892;&#12387;&#12390;&#12365;&#12414;&#12375;&#12383;&#12290;&#12381;&#12375;&#12383;&#12425;&#12499;&#12483;&#12463;&#12522;&#65281;&#30456;&#22793;&#12431;&#12425;&lt;a href=&quot;http://www.abakuro.co.jp/&quot; rel=&quot;dofollow&quot;&gt;&lt;b&gt;&#12450;&#12496;&#12463;&#12525;&lt;/b&gt;&lt;/a&gt;&#12378;&#12289;&#36362;&#12387;&#12390;&#12356;&#12427;&#12384;&#12369;&#12398;&#24215;&#21729;&#12373;&#12435;&#12392;&#12363;&#12418;&#12356;&#12414;&#12375;&#12383;&#12364;&#12289;</body>
      <body-html>&lt;div&gt;&lt;p&gt;
&amp;#31169;&amp;#12398;&amp;#20013;&amp;#12391;&amp;#12289;&amp;#32207;&amp;#21512;&amp;#35413;&amp;#20385;&amp;#12398;&amp;#12392;&amp;#12387;&amp;#12390;&amp;#12418;&amp;#20302;&amp;#12356;&amp;#12450;&amp;#12496;&lt;a href=&quot;http://www.abakuro.co.jp/&quot;&gt;&lt;b&gt;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&amp;#12507;&amp;#12522;&amp;#12473;&amp;#12479;&amp;#12540;&lt;/b&gt;&lt;/a&gt;&amp;#12463;&amp;#12525;&amp;#37504;&amp;#24231;&amp;#24215;&amp;#12290;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&amp;#12399;&amp;#22823;&amp;#22909;&amp;#12365;&amp;#12394;&amp;#12435;&amp;#12391;&amp;#12377;&amp;#12369;&amp;#12393;&amp;#12397;&amp;#12290;&amp;#19968;&amp;#26152;&amp;#26085;&amp;#12398;&amp;#26481;&amp;#20140;&amp;#39365;&amp;#20184;&amp;#36817;&amp;#12391;&amp;#12398;&amp;#25171;&amp;#12385;&amp;#21512;&amp;#12431;&amp;#12379;&amp;#12398;&amp;#24460;&amp;#12289;&amp;#25955;&amp;#27497;&amp;#12364;&amp;#12390;&amp;#12425;&amp;#20037;&amp;#12293;&amp;#12395;&amp;#34892;&amp;#12387;&amp;#12390;&amp;#12365;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&amp;#12381;&amp;#12375;&amp;#12383;&amp;#12425;&amp;#12499;&amp;#12483;&amp;#12463;&amp;#12522;&amp;#65281;&amp;#30456;&amp;#22793;&amp;#12431;&amp;#12425;&lt;a href=&quot;http://www.abakuro.co.jp/&quot;&gt;&lt;b&gt;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&lt;/b&gt;&lt;/a&gt;&amp;#12378;&amp;#12289;&amp;#36362;&amp;#12387;&amp;#12390;&amp;#12356;&amp;#12427;&amp;#12384;&amp;#12369;&amp;#12398;&amp;#24215;&amp;#21729;&amp;#12373;&amp;#12435;&amp;#12392;&amp;#12363;&amp;#12418;&amp;#12356;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12364;&amp;#12289;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-05T02:55:31+01:00</created-at>
      <creator-id type="integer">70571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3271</number>
      <permalink>postgres-data-corruption-for-hexadecimal-strings-composed-of-zeros-and-ones-destined-for-bitstring-columns</permalink>
      <priority type="integer">153918</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Postgres data corruption for hexadecimal strings composed of zeros and ones destined for bitstring columns</title>
      <updated-at type="datetime">2011-05-05T02:56:38+01:00</updated-at>
      <user-id type="integer">148049</user-id>
      <version type="integer">12</version>
      <user-name>af001</user-name>
      <creator-name>Bruce Burdick</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3271</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>22de433d43dbfec135568b73cecb2fb5f92af23b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-23T17:21:51+00:00</created-at>
      <filename>fix-pgsql-bitstrings.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">974335</id>
      <size type="integer">2142</size>
      <uploader-id type="integer">142542</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/974335/fix-pgsql-bitstrings.patch</url>
    </attachment>
  </attachments>
</ticket>
