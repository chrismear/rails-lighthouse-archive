From 8219c075d76544357c341cea27e49d8be2d56e23 Mon Sep 17 00:00:00 2001
From: Steffen Bartsch <sbartsch@tzi.org>
Date: Mon, 12 Oct 2009 15:33:33 +0200
Subject: [PATCH] Allow for ActiveResource request in tests to use IntegrationTests

---
 .../active_resource/integration_test_support.rb    |   54 ++++++++++++++++++++
 1 files changed, 54 insertions(+), 0 deletions(-)
 create mode 100644 activeresource/lib/active_resource/integration_test_support.rb

diff --git a/activeresource/lib/active_resource/integration_test_support.rb b/activeresource/lib/active_resource/integration_test_support.rb
new file mode 100644
index 0000000..f4bf220
--- /dev/null
+++ b/activeresource/lib/active_resource/integration_test_support.rb
@@ -0,0 +1,54 @@
+module ActiveResource
+  class Connection
+    # Allows you to do end-to-end tests of REST APIs with ActiveResource and
+    # Rails integration tests.
+    #
+    # ActiveResource requests will use the supplied
+    # ActionController::Integration::Session to execute its requests in the
+    # given block.  All requests are thus sent to the controllers through
+    # the Rails integration test API.
+    #
+    # Example:
+    #   require 'active_resource/integration_test_support'
+    #   class APIIntegrationTest < ActionController::IntegrationTest
+    #     test "API requests work end-to-end" do
+    #       ActiveResource::Connection.with_integration_test_session(open_session) do
+    #         result = APIClient.some_method_that_requires_api_access
+    #         assert result
+    #       end
+    #     end
+    #   end
+    #
+    def self.with_integration_test_session (session)
+      previous_session = Connection.integration_test_session
+      begin
+        Connection.integration_test_session = session
+        yield
+      ensure
+        Connection.integration_test_session = previous_session
+      end
+    end
+
+    private
+    mattr_accessor :integration_test_session
+
+    def request_with_integration_test_support (method, path, *arguments)
+      if self.class.integration_test_session
+        # arguments are data, header for post, put; else header
+        header = arguments.last
+        data = arguments.length > 1 ? arguments.first : nil
+
+        Rails.logger.debug("#{method.to_s.upcase} #{path}")
+        self.class.integration_test_session.send(method, path, data, header)
+        #Rails.logger.debug(self.class.integration_test_session.response.body)
+
+        handle_response(self.class.integration_test_session.response)
+        self.class.integration_test_session.response
+      else
+        Rails.logger.debug("No session set, using default ActiveResource requests")
+        request_without_integration_test_support(method, path, *arguments)
+      end
+    end
+    alias_method_chain :request, :integration_test_support
+  end
+end
-- 
1.6.0.4

