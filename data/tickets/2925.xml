<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-07-20T17:31:57+01:00</created-at>
  <creator-id type="integer">32570</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2925</number>
  <permalink>datetimeto_sdb-does-not-convert-to-utc</permalink>
  <priority type="integer">2007</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>activerecord core_ext</tag>
  <title>DateTime:to_s(:db) does not convert to UTC</title>
  <updated-at type="datetime">2009-07-24T04:31:53+01:00</updated-at>
  <user-id type="integer">15783</user-id>
  <version type="integer">2</version>
  <user-name>Geoff Buesing</user-name>
  <creator-name>Ari Epstein</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2925</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>ActiveRecord saves datetime fields in UTC, but in prepared statements (for select queries), the quote method does not perform the same conversion.  So, for example:

(using US Eastern Time)
Shift.create(:starts_at =&gt; DateTime.now - 100.minutes, :ends_at =&gt; DateTime.now - 50.minutes)
Shift.find(:conditions =&gt; ['ends_at &lt; ?',DateTime.now])
=&gt; []
Shift.find(:conditions =&gt; ['ends_at &lt; ?',DateTime.now.utc])
=&gt; Shift(Shift id: 1, starts_at: ...)

This doesn't seem the right behavior to me.  Shouldn't quote automatically convert to UTC since that's the zone in which the database stores times?  Could be done in the to_s(:db) formatter perhaps?</original-body>
  <latest-body>ActiveRecord saves datetime fields in UTC, but in prepared statements (for select queries), the quote method does not perform the same conversion.  So, for example:

(using US Eastern Time)
Shift.create(:starts_at =&gt; DateTime.now - 100.minutes, :ends_at =&gt; DateTime.now - 50.minutes)
Shift.find(:conditions =&gt; ['ends_at &lt; ?',DateTime.now])
=&gt; []
Shift.find(:conditions =&gt; ['ends_at &lt; ?',DateTime.now.utc])
=&gt; Shift(Shift id: 1, starts_at: ...)

This doesn't seem the right behavior to me.  Shouldn't quote automatically convert to UTC since that's the zone in which the database stores times?  Could be done in the to_s(:db) formatter perhaps?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ActiveRecord saves datetime fields in UTC, but in prepared
statements (for select queries), the quote method does not perform
the same conversion. So, for example:&lt;/p&gt;
&lt;p&gt;(using US Eastern Time) Shift.create(:starts_at =&amp;gt;
DateTime.now - 100.minutes, :ends_at =&amp;gt; DateTime.now -
50.minutes) Shift.find(:conditions =&amp;gt; ['ends_at &amp;lt;
?',DateTime.now]) =&amp;gt; [] Shift.find(:conditions =&amp;gt; ['ends_at
&amp;lt; ?',DateTime.now.utc]) =&amp;gt; Shift(Shift id: 1, starts_at:
...)&lt;/p&gt;
&lt;p&gt;This doesn't seem the right behavior to me. Shouldn't quote
automatically convert to UTC since that's the zone in which the
database stores times? Could be done in the to_s(:db) formatter
perhaps?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveRecord saves datetime fields in UTC, but in prepared statements (for select queries), the quote method does not perform the same conversion.  So, for example:

(using US Eastern Time)
Shift.create(:starts_at =&gt; DateTime.now - 100.minutes, :ends_at =&gt; DateTime.now - 50.minutes)
Shift.find(:conditions =&gt; ['ends_at &lt; ?',DateTime.now])
=&gt; []
Shift.find(:conditions =&gt; ['ends_at &lt; ?',DateTime.now.utc])
=&gt; Shift(Shift id: 1, starts_at: ...)

This doesn't seem the right behavior to me.  Shouldn't quote automatically convert to UTC since that's the zone in which the database stores times?  Could be done in the to_s(:db) formatter perhaps?</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveRecord saves datetime fields in UTC, but in prepared
statements (for select queries), the quote method does not perform
the same conversion. So, for example:&lt;/p&gt;
&lt;p&gt;(using US Eastern Time) Shift.create(:starts_at =&amp;gt;
DateTime.now - 100.minutes, :ends_at =&amp;gt; DateTime.now -
50.minutes)&lt;br&gt;
Shift.find(:conditions =&amp;gt; ['ends_at &amp;lt; ?',DateTime.now])&lt;br&gt;
=&amp;gt; [] Shift.find(:conditions =&amp;gt; ['ends_at &amp;lt;
?',DateTime.now.utc])&lt;br&gt;
=&amp;gt; Shift(Shift id: 1, starts_at: ...)&lt;/p&gt;
&lt;p&gt;This doesn't seem the right behavior to me. Shouldn't quote
automatically convert to UTC since that's the zone in which the
database stores times? Could be done in the to_s(:db) formatter
perhaps?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-20T17:31:57+01:00</created-at>
      <creator-id type="integer">32570</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2925</number>
      <permalink>datetimeto_sdb-does-not-convert-to-utc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord core_ext</tag>
      <title>DateTime:to_s(:db) does not convert to UTC</title>
      <updated-at type="datetime">2009-07-20T17:32:00+01:00</updated-at>
      <user-id type="integer">32570</user-id>
      <version type="integer">1</version>
      <user-name>Ari Epstein</user-name>
      <creator-name>Ari Epstein</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2925</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree the current behavior is confusing. Please see this ticket, which addresses this issue: https://rails.lighthouseapp.com/projects/8994/tickets/2946-quoted_date-converts-time-objects-to-default_timezone</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree the current behavior is confusing. Please see this
ticket, which addresses this issue: &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2946-quoted_date-converts-time-objects-to-default_timezone&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2946-quoted_d...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-24T04:31:48+01:00</created-at>
      <creator-id type="integer">32570</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2925</number>
      <permalink>datetimeto_sdb-does-not-convert-to-utc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord core_ext</tag>
      <title>DateTime:to_s(:db) does not convert to UTC</title>
      <updated-at type="datetime">2009-07-24T04:31:53+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Ari Epstein</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2925</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
