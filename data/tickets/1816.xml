<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-29T06:14:59+00:00</created-at>
  <creator-id type="integer">8819</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1816</number>
  <permalink>constant_watch_stack-must-be-protected-by-a-mutex</permalink>
  <priority type="integer">1106</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>active_support dependencies synchronization</tag>
  <title>constant_watch_stack must be protected by a mutex</title>
  <updated-at type="datetime">2009-01-30T16:27:45+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>Charles Oliver Nutter</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1816</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>For http://jira.codehaus.org/browse/JRUBY-3310 I investigated what looked like an Array being concurrently modified by multiple threads. The backtrace led me to active_support/dependencies.rb and the constant_watch_stack. This stack is an array updated during requires. Concurrent requires can cause the array to become corrupted under parallel Ruby implementations like JRuby.

The user provided the following script to reproduce it. It's not consistent, but with enough runs it does fail under JRuby:

@@@
require 'rubygems'
require 'active_record'
require 'thread'
require 'rexml/encoding'

#This will ensure activesupport will override Kernel.require
class MyTable &lt; ActiveRecord::Base
  set_table_name &quot;table&quot;
end


#build a test case with enough iterations to reproduce the problem.
#Since it's a race condition it'll occur randomly throughout the test
#
#if you can't reproduce the problem on your computer, try to increase the number of iterations
th = []
100.times do
  th &lt;&lt; Thread.new {
    #this is what REXML is doing in $ruby_home/lib/ruby/1.8/rexml/encoding.rb (line 48)
    require 'rexml/encodings/UTF-8.rb' #active_support will try to load the file
  }
end
th.each do |t|
  t.join
end
@@@

I whipped together a patch that adds a mutex alongside constant_watch_stack and uses it to synchronize all mutations and iterations over the stack. The patch is at http://gist.github.com/54401 and is against rails master@e6493eb9b76de73afef2706493efd090dfff4ecc.

Feel free to contact me with questions.</original-body>
  <latest-body>For http://jira.codehaus.org/browse/JRUBY-3310 I investigated what looked like an Array being concurrently modified by multiple threads. The backtrace led me to active_support/dependencies.rb and the constant_watch_stack. This stack is an array updated during requires. Concurrent requires can cause the array to become corrupted under parallel Ruby implementations like JRuby.

The user provided the following script to reproduce it. It's not consistent, but with enough runs it does fail under JRuby:

@@@
require 'rubygems'
require 'active_record'
require 'thread'
require 'rexml/encoding'

#This will ensure activesupport will override Kernel.require
class MyTable &lt; ActiveRecord::Base
  set_table_name &quot;table&quot;
end


#build a test case with enough iterations to reproduce the problem.
#Since it's a race condition it'll occur randomly throughout the test
#
#if you can't reproduce the problem on your computer, try to increase the number of iterations
th = []
100.times do
  th &lt;&lt; Thread.new {
    #this is what REXML is doing in $ruby_home/lib/ruby/1.8/rexml/encoding.rb (line 48)
    require 'rexml/encodings/UTF-8.rb' #active_support will try to load the file
  }
end
th.each do |t|
  t.join
end
@@@

I whipped together a patch that adds a mutex alongside constant_watch_stack and uses it to synchronize all mutations and iterations over the stack. The patch is at http://gist.github.com/54401 and is against rails master@e6493eb9b76de73afef2706493efd090dfff4ecc.

Feel free to contact me with questions.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;For &lt;a href=&quot;http://jira.codehaus.org/browse/JRUBY-3310&quot;&gt;http://jira.codehaus.org/browse/...&lt;/a&gt;
I investigated what looked like an Array being concurrently
modified by multiple threads. The backtrace led me to
active_support/dependencies.rb and the constant_watch_stack. This
stack is an array updated during requires. Concurrent requires can
cause the array to become corrupted under parallel Ruby
implementations like JRuby.&lt;/p&gt;
&lt;p&gt;The user provided the following script to reproduce it. It's not
consistent, but with enough runs it does fail under JRuby:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
require 'rubygems'
require 'active_record'
require 'thread'
require 'rexml/encoding'

#This will ensure activesupport will override Kernel.require
class MyTable &amp;lt; ActiveRecord::Base
  set_table_name &amp;quot;table&amp;quot;
end


#build a test case with enough iterations to reproduce the problem.
#Since it's a race condition it'll occur randomly throughout the test
#
#if you can't reproduce the problem on your computer, try to increase the number of iterations
th = []
100.times do
  th &amp;lt;&amp;lt; Thread.new {
    #this is what REXML is doing in $ruby_home/lib/ruby/1.8/rexml/encoding.rb (line 48)
    require 'rexml/encodings/UTF-8.rb' #active_support will try to load the file
  }
end
th.each do |t|
  t.join
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I whipped together a patch that adds a mutex alongside
constant_watch_stack and uses it to synchronize all mutations and
iterations over the stack. The patch is at &lt;a href=&quot;http://gist.github.com/54401&quot;&gt;http://gist.github.com/54401&lt;/a&gt; and
is against rails
master@e6493eb9b76de73afef2706493efd090dfff4ecc.&lt;/p&gt;
&lt;p&gt;Feel free to contact me with questions.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For http://jira.codehaus.org/browse/JRUBY-3310 I investigated what looked like an Array being concurrently modified by multiple threads. The backtrace led me to active_support/dependencies.rb and the constant_watch_stack. This stack is an array updated during requires. Concurrent requires can cause the array to become corrupted under parallel Ruby implementations like JRuby.

The user provided the following script to reproduce it. It's not consistent, but with enough runs it does fail under JRuby:

@@@
require 'rubygems'
require 'active_record'
require 'thread'
require 'rexml/encoding'

#This will ensure activesupport will override Kernel.require
class MyTable &lt; ActiveRecord::Base
  set_table_name &quot;table&quot;
end


#build a test case with enough iterations to reproduce the problem.
#Since it's a race condition it'll occur randomly throughout the test
#
#if you can't reproduce the problem on your computer, try to increase the number of iterations
th = []
100.times do
  th &lt;&lt; Thread.new {
    #this is what REXML is doing in $ruby_home/lib/ruby/1.8/rexml/encoding.rb (line 48)
    require 'rexml/encodings/UTF-8.rb' #active_support will try to load the file
  }
end
th.each do |t|
  t.join
end
@@@

I whipped together a patch that adds a mutex alongside constant_watch_stack and uses it to synchronize all mutations and iterations over the stack. The patch is at http://gist.github.com/54401 and is against rails master@e6493eb9b76de73afef2706493efd090dfff4ecc.

Feel free to contact me with questions.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For &lt;a href=&quot;http://jira.codehaus.org/browse/JRUBY-3310&quot;&gt;http://jira.codehaus.org/browse/...&lt;/a&gt;
I investigated what looked like an Array being concurrently
modified by multiple threads. The backtrace led me to
active_support/dependencies.rb and the constant_watch_stack. This
stack is an array updated during requires. Concurrent requires can
cause the array to become corrupted under parallel Ruby
implementations like JRuby.&lt;/p&gt;
&lt;p&gt;The user provided the following script to reproduce it. It's not
consistent, but with enough runs it does fail under JRuby:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
require 'rubygems'
require 'active_record'
require 'thread'
require 'rexml/encoding'

#This will ensure activesupport will override Kernel.require
class MyTable &amp;lt; ActiveRecord::Base
  set_table_name &amp;quot;table&amp;quot;
end


#build a test case with enough iterations to reproduce the problem.
#Since it's a race condition it'll occur randomly throughout the test
#
#if you can't reproduce the problem on your computer, try to increase the number of iterations
th = []
100.times do
  th &amp;lt;&amp;lt; Thread.new {
    #this is what REXML is doing in $ruby_home/lib/ruby/1.8/rexml/encoding.rb (line 48)
    require 'rexml/encodings/UTF-8.rb' #active_support will try to load the file
  }
end
th.each do |t|
  t.join
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I whipped together a patch that adds a mutex alongside
constant_watch_stack and uses it to synchronize all mutations and
iterations over the stack. The patch is at &lt;a href=&quot;http://gist.github.com/54401&quot;&gt;http://gist.github.com/54401&lt;/a&gt; and
is against rails
master@e6493eb9b76de73afef2706493efd090dfff4ecc.&lt;/p&gt;
&lt;p&gt;Feel free to contact me with questions.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T06:14:59+00:00</created-at>
      <creator-id type="integer">8819</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1816</number>
      <permalink>constant_watch_stack-must-be-protected-by-a-mutex</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support dependencies synchronization</tag>
      <title>constant_watch_stack must be protected by a mutex</title>
      <updated-at type="datetime">2009-01-29T06:15:00+00:00</updated-at>
      <user-id type="integer">8819</user-id>
      <version type="integer">1</version>
      <user-name>Charles Oliver Nutter</user-name>
      <creator-name>Charles Oliver Nutter</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1816</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I confirmed the provided script fails on unpatched activesupport and succeeds (or at least succeeds for about an hour of my testing) on a patched activesupport. I used the following command line:

@@@
jruby -e &quot;10000.times { system 'jruby test.rb' or fail }&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I confirmed the provided script fails on unpatched activesupport
and succeeds (or at least succeeds for about an hour of my testing)
on a patched activesupport. I used the following command line:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
jruby -e &amp;quot;10000.times { system 'jruby test.rb' or fail }&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T06:27:43+00:00</created-at>
      <creator-id type="integer">8819</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1816</number>
      <permalink>constant_watch_stack-must-be-protected-by-a-mutex</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support dependencies synchronization</tag>
      <title>constant_watch_stack must be protected by a mutex</title>
      <updated-at type="datetime">2009-01-29T06:27:44+00:00</updated-at>
      <user-id type="integer">8819</user-id>
      <version type="integer">2</version>
      <user-name>Charles Oliver Nutter</user-name>
      <creator-name>Charles Oliver Nutter</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1816</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ahh, contributor guides are nice. Re-attaching patch as format-patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ahh, contributor guides are nice. Re-attaching patch as
format-patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T06:34:07+00:00</created-at>
      <creator-id type="integer">8819</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1816</number>
      <permalink>constant_watch_stack-must-be-protected-by-a-mutex</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support dependencies synchronization</tag>
      <title>constant_watch_stack must be protected by a mutex</title>
      <updated-at type="datetime">2009-01-29T06:34:11+00:00</updated-at>
      <user-id type="integer">8819</user-id>
      <version type="integer">3</version>
      <user-name>Charles Oliver Nutter</user-name>
      <creator-name>Charles Oliver Nutter</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1816</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-30T15:35:27+00:00</created-at>
      <creator-id type="integer">8819</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1816</number>
      <permalink>constant_watch_stack-must-be-protected-by-a-mutex</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support dependencies synchronization</tag>
      <title>constant_watch_stack must be protected by a mutex</title>
      <updated-at type="datetime">2009-01-30T15:35:29+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>Charles Oliver Nutter</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1816</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [ed0e5640879fd42c00fc5900e0355a0ea1dcf2ad]) Ensure constant_watch_stack is protected by a mutex, so concurrent requires do not corrupt it.

[#1816 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/ed0e5640879fd42c00fc5900e0355a0ea1dcf2ad</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [ed0e5640879fd42c00fc5900e0355a0ea1dcf2ad]) Ensure
constant_watch_stack is protected by a mutex, so concurrent
requires do not corrupt it.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/1816&quot; title=&quot;Ticket #1816&quot;&gt;#1816&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/ed0e5640879fd42c00fc5900e0355a0ea1dcf2ad&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-30T16:27:45+00:00</created-at>
      <creator-id type="integer">8819</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1816</number>
      <permalink>constant_watch_stack-must-be-protected-by-a-mutex</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>active_support dependencies synchronization</tag>
      <title>constant_watch_stack must be protected by a mutex</title>
      <updated-at type="datetime">2009-01-30T16:27:45+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Charles Oliver Nutter</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1816</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>fc84b7fc9b7e075b4ac584c3c98f88a125147986</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-29T06:34:07+00:00</created-at>
      <filename>0001-Ensure-constant_watch_stack-is-protected-by-a-mutex.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">82786</id>
      <size type="integer">2455</size>
      <uploader-id type="integer">8819</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/82786/0001-Ensure-constant_watch_stack-is-protected-by-a-mutex.patch</url>
    </attachment>
  </attachments>
</ticket>
