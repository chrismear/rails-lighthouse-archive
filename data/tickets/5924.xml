<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-17T06:48:05+00:00</created-at>
  <creator-id type="integer">20836</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5924</number>
  <permalink>mysql-collation_connection-gets-wrong-value</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag nil="true"></tag>
  <title>mysql collation_connection gets wrong value</title>
  <updated-at type="datetime">2011-02-17T06:48:05+00:00</updated-at>
  <user-id type="integer">20836</user-id>
  <version type="integer">4</version>
  <user-name>Lawrence Pit</user-name>
  <creator-name>Lawrence Pit</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5924</url>
  <priority-name nil="true"></priority-name>
  <original-body>The create_database method of databases.rake creates a mysql database with default charset utf8 and default collation of utf8_unicode_ci. These values can be overridden by providing a :charset resp. :collation key/values in database.yml.

When connecting to the database though by default it will use these values:

@@@ ruby
 {&quot;Variable_name&quot;=&gt;&quot;character_set_client&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_database&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_results&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_server&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_system&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_connection&quot;, &quot;Value&quot;=&gt;&quot;latin1_swedish_ci&quot;}
 {&quot;Variable_name&quot;=&gt;&quot;collation_database&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_server&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}
@@@

The only way to get some control over this by explicitly defining encoding:utf8 in database.yml. You'd then get:

@@@ ruby
 {&quot;Variable_name&quot;=&gt;&quot;character_set_client&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_database&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_results&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_server&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_system&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_connection&quot;, &quot;Value&quot;=&gt;&quot;utf8_general_ci&quot;}
 {&quot;Variable_name&quot;=&gt;&quot;collation_database&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}, 
 {&quot;Variable_name&quot;=&gt;&quot;collation_server&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}
@@@

I.e., the collation_connection value is still using a wrong value in this case (it's value is always the default collation for the character set of the connection, in this case of the utf8 character set).

The only solution I see is by patching the +configure_connection+ method of the mysql adapter.

There are two options:

1. Instead of doing SET NAMES 'utf8' it should be possible to do SET NAMES 'utf8' COLLATE 'utf8_unicode_ci'. For this I propose the +configure_connection+ method should (re)use the :charset and :collation values from database.yml (in favor of :encoding), just like the databases rake tasks do.

2. Instead of doing SET NAMES 'utf8' it should do SET CHARACTER SET 'utf8'. In that case the collation_connection value will be set to the value of collation_database.

Which option is preferable?</original-body>
  <latest-body>The create_database method of databases.rake creates a mysql database with default charset utf8 and default collation of utf8_unicode_ci. These values can be overridden by providing a :charset resp. :collation key/values in database.yml.

When connecting to the database though by default it will use these values:

@@@ ruby
 {&quot;Variable_name&quot;=&gt;&quot;character_set_client&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_database&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_results&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_server&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_system&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_connection&quot;, &quot;Value&quot;=&gt;&quot;latin1_swedish_ci&quot;}
 {&quot;Variable_name&quot;=&gt;&quot;collation_database&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_server&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}
@@@

The only way to get some control over this by explicitly defining encoding:utf8 in database.yml. You'd then get:

@@@ ruby
 {&quot;Variable_name&quot;=&gt;&quot;character_set_client&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_database&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_results&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_server&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_system&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_connection&quot;, &quot;Value&quot;=&gt;&quot;utf8_general_ci&quot;}
 {&quot;Variable_name&quot;=&gt;&quot;collation_database&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}, 
 {&quot;Variable_name&quot;=&gt;&quot;collation_server&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}
@@@

I.e., the collation_connection value is still using a wrong value in this case (it's value is always the default collation for the character set of the connection, in this case of the utf8 character set).

The only solution I see is by patching the +configure_connection+ method of the mysql adapter.

There are two options:

1. Instead of doing SET NAMES 'utf8' it should be possible to do SET NAMES 'utf8' COLLATE 'utf8_unicode_ci'. For this I propose the +configure_connection+ method should (re)use the :charset and :collation values from database.yml (in favor of :encoding), just like the databases rake tasks do.

2. Instead of doing SET NAMES 'utf8' it should do SET CHARACTER SET 'utf8'. In that case the collation_connection value will be set to the value of collation_database.

Which option is preferable?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The create_database method of databases.rake creates a mysql
database with default charset utf8 and default collation of
utf8_unicode_ci. These values can be overridden by providing a
:charset resp. :collation key/values in database.yml.&lt;/p&gt;
&lt;p&gt;When connecting to the database though by default it will use
these values:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_client&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_results&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_system&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1_swedish_ci&quot;}
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The only way to get some control over this by explicitly
defining encoding:utf8 in database.yml. You'd then get:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_client&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_results&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_system&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_general_ci&quot;}
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;}, 
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I.e., the collation_connection value is still using a wrong
value in this case (it's value is always the default collation for
the character set of the connection, in this case of the utf8
character set).&lt;/p&gt;
&lt;p&gt;The only solution I see is by patching the
+configure_connection+ method of the mysql adapter.&lt;/p&gt;
&lt;p&gt;There are two options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Instead of doing SET NAMES 'utf8' it should be possible to do
SET NAMES 'utf8' COLLATE 'utf8_unicode_ci'. For this I propose the
+configure_connection+ method should (re)use the :charset and
:collation values from database.yml (in favor of :encoding), just
like the databases rake tasks do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instead of doing SET NAMES 'utf8' it should do SET CHARACTER SET
'utf8'. In that case the collation_connection value will be set to
the value of collation_database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Which option is preferable?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The create_database method of databases.rake creates a mysql database with default charset utf8 and default collation of utf8_unicode_ci. These values can be overridden by providing a :charset resp. :collation key/values in database.yml.

When connecting to the database though by default it will use these values:

@@@ ruby
 {&quot;Variable_name&quot;=&gt;&quot;character_set_client&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_database&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_results&quot;, &quot;Value&quot;=&gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_server&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_system&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_connection&quot;, &quot;Value&quot;=&gt;&quot;latin1_swedish_ci&quot;}
 {&quot;Variable_name&quot;=&gt;&quot;collation_database&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_server&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}
@@@

The only way to get some control over this by explicitly defining encoding:utf8 in database.yml. You'd then get:

@@@ ruby
 {&quot;Variable_name&quot;=&gt;&quot;character_set_client&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_database&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_results&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_server&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;character_set_system&quot;, &quot;Value&quot;=&gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&gt;&quot;collation_connection&quot;, &quot;Value&quot;=&gt;&quot;utf8_general_ci&quot;}
 {&quot;Variable_name&quot;=&gt;&quot;collation_database&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}, 
 {&quot;Variable_name&quot;=&gt;&quot;collation_server&quot;, &quot;Value&quot;=&gt;&quot;utf8_unicode_ci&quot;}
@@@

I.e., the collation_connection value is still using a wrong value in this case (it's value is always the default collation for the character set of the connection, in this case of the utf8 character set).

The only solution I see is by patching the +configure_connection+ method of the mysql adapter.

There are two options:

1. Instead of doing SET NAMES 'utf8' it should be possible to do SET NAMES 'utf8' COLLATE 'utf8_unicode_ci'. For this I propose the +configure_connection+ method should (re)use the :charset and :collation values from database.yml (in favor of :encoding), just like the databases rake tasks do.

2. Instead of doing SET NAMES 'utf8' it should do SET CHARACTER SET 'utf8'. In that case the collation_connection value will be set to the value of collation_database.

Which option is preferable?</body>
      <body-html>&lt;div&gt;&lt;p&gt;The create_database method of databases.rake creates a mysql
database with default charset utf8 and default collation of
utf8_unicode_ci. These values can be overridden by providing a
:charset resp. :collation key/values in database.yml.&lt;/p&gt;
&lt;p&gt;When connecting to the database though by default it will use
these values:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_client&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_results&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_system&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;latin1_swedish_ci&quot;}
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The only way to get some control over this by explicitly
defining encoding:utf8 in database.yml. You'd then get:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_client&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_results&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;character_set_system&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8&quot;},
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_connection&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_general_ci&quot;}
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_database&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;}, 
 {&quot;Variable_name&quot;=&amp;gt;&quot;collation_server&quot;, &quot;Value&quot;=&amp;gt;&quot;utf8_unicode_ci&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I.e., the collation_connection value is still using a wrong
value in this case (it's value is always the default collation for
the character set of the connection, in this case of the utf8
character set).&lt;/p&gt;
&lt;p&gt;The only solution I see is by patching the
+configure_connection+ method of the mysql adapter.&lt;/p&gt;
&lt;p&gt;There are two options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Instead of doing SET NAMES 'utf8' it should be possible to do
SET NAMES 'utf8' COLLATE 'utf8_unicode_ci'. For this I propose the
+configure_connection+ method should (re)use the :charset and
:collation values from database.yml (in favor of :encoding), just
like the databases rake tasks do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instead of doing SET NAMES 'utf8' it should do SET CHARACTER SET
'utf8'. In that case the collation_connection value will be set to
the value of collation_database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Which option is preferable?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-06T04:41:41+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5924</number>
      <permalink>mysql-collation_connection-gets-wrong-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>mysql collation_connection gets wrong value</title>
      <updated-at type="datetime">2010-11-06T04:41:45+00:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">1</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5924</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-06T21:01:38+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5924</number>
      <permalink>mysql-collation_connection-gets-wrong-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>mysql collation_connection gets wrong value</title>
      <updated-at type="datetime">2011-02-06T21:01:42+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5924</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-06T21:01:38+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5924</number>
      <permalink>mysql-collation_connection-gets-wrong-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>mysql collation_connection gets wrong value</title>
      <updated-at type="datetime">2011-02-06T21:01:44+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5924</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[state:open] must be fixed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open] must be fixed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-06T22:46:23+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5924</number>
      <permalink>mysql-collation_connection-gets-wrong-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>mysql collation_connection gets wrong value</title>
      <updated-at type="datetime">2011-02-06T22:46:24+00:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">4</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5924</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T05:49:49+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5924</number>
      <permalink>mysql-collation_connection-gets-wrong-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>mysql collation_connection gets wrong value</title>
      <updated-at type="datetime">2011-02-17T06:48:05+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">5</version>
      <user-name>gfh</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5924</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
