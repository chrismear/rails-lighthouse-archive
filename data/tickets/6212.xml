<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">11330</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-22T22:18:20+00:00</created-at>
  <creator-id type="integer">11330</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">6212</number>
  <permalink>it-should-be-invalid-to-go-through-a-polymorphic-belongs_to</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>It should be invalid to go :through a polymorphic belongs_to</title>
  <updated-at type="datetime">2010-12-23T23:56:42+00:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">3</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>Jon Leighton</creator-name>
  <assigned-user-name>Jon Leighton</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6212</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Consider the following:

@@@ ruby
    class Tagging
      belongs_to :taggable, :polymorphic =&gt; true
      has_many :something, :through =&gt; :taggable
    end
@@@

Obviously the `something` association on the `taggable` might only be available at certain times, depending on what the `taggable` actually is.

At the moment, the above example fails, because it tries to look up the source reflection, which involves getting the `through_reflection.klass`, which doesn't exist.

Whilst it would be theoretically possible to support the above, it's basically insane. I suggest we add in a `HasManyCantAssociateThroughPolymorphicBelongsToReflection` and raise it properly in `ThroughReflection#check_validity!`.</original-body>
  <latest-body>Consider the following:

@@@ ruby
    class Tagging
      belongs_to :taggable, :polymorphic =&gt; true
      has_many :something, :through =&gt; :taggable
    end
@@@

Obviously the `something` association on the `taggable` might only be available at certain times, depending on what the `taggable` actually is.

At the moment, the above example fails, because it tries to look up the source reflection, which involves getting the `through_reflection.klass`, which doesn't exist.

Whilst it would be theoretically possible to support the above, it's basically insane. I suggest we add in a `HasManyCantAssociateThroughPolymorphicBelongsToReflection` and raise it properly in `ThroughReflection#check_validity!`.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Consider the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    class Tagging
      belongs_to :taggable, :polymorphic =&amp;gt; true
      has_many :something, :through =&amp;gt; :taggable
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Obviously the &lt;code&gt;something&lt;/code&gt; association on the
&lt;code&gt;taggable&lt;/code&gt; might only be available at certain times,
depending on what the &lt;code&gt;taggable&lt;/code&gt; actually is.&lt;/p&gt;
&lt;p&gt;At the moment, the above example fails, because it tries to look
up the source reflection, which involves getting the
&lt;code&gt;through_reflection.klass&lt;/code&gt;, which doesn't exist.&lt;/p&gt;
&lt;p&gt;Whilst it would be theoretically possible to support the above,
it's basically insane. I suggest we add in a
&lt;code&gt;HasManyCantAssociateThroughPolymorphicBelongsToReflection&lt;/code&gt;
and raise it properly in
&lt;code&gt;ThroughReflection#check_validity!&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11330</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Consider the following:

@@@ ruby
    class Tagging
      belongs_to :taggable, :polymorphic =&gt; true
      has_many :something, :through =&gt; :taggable
    end
@@@

Obviously the `something` association on the `taggable` might only be available at certain times, depending on what the `taggable` actually is.

At the moment, the above example fails, because it tries to look up the source reflection, which involves getting the `through_reflection.klass`, which doesn't exist.

Whilst it would be theoretically possible to support the above, it's basically insane. I suggest we add in a `HasManyCantAssociateThroughPolymorphicBelongsToReflection` and raise it properly in `ThroughReflection#check_validity!`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Consider the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    class Tagging
      belongs_to :taggable, :polymorphic =&amp;gt; true
      has_many :something, :through =&amp;gt; :taggable
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Obviously the &lt;code&gt;something&lt;/code&gt; association on the
&lt;code&gt;taggable&lt;/code&gt; might only be available at certain times,
depending on what the &lt;code&gt;taggable&lt;/code&gt; actually is.&lt;/p&gt;
&lt;p&gt;At the moment, the above example fails, because it tries to look
up the source reflection, which involves getting the
&lt;code&gt;through_reflection.klass&lt;/code&gt;, which doesn't exist.&lt;/p&gt;
&lt;p&gt;Whilst it would be theoretically possible to support the above,
it's basically insane. I suggest we add in a
&lt;code&gt;HasManyCantAssociateThroughPolymorphicBelongsToReflection&lt;/code&gt;
and raise it properly in
&lt;code&gt;ThroughReflection#check_validity!&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-22T22:18:20+00:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6212</number>
      <permalink>it-should-be-invalid-to-go-through-a-polymorphic-belongs_to</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>It should be invalid to go :through a polymorphic belongs_to</title>
      <updated-at type="datetime">2010-12-22T22:19:03+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">1</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Jon Leighton</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6212</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11330</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-23T14:19:38+00:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6212</number>
      <permalink>it-should-be-invalid-to-go-through-a-polymorphic-belongs_to</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>It should be invalid to go :through a polymorphic belongs_to</title>
      <updated-at type="datetime">2010-12-23T14:19:46+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">2</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Jon Leighton</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6212</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11330</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-23T23:56:19+00:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6212</number>
      <permalink>it-should-be-invalid-to-go-through-a-polymorphic-belongs_to</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>It should be invalid to go :through a polymorphic belongs_to</title>
      <updated-at type="datetime">2010-12-23T23:56:42+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">3</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Jon Leighton</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6212</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c360f8e84e589821ca0ac26acf3677bf373d61e3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-23T14:19:38+00:00</created-at>
      <filename>6212_has_many_through_polymorphic_invalid.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">833344</id>
      <size type="integer">5023</size>
      <uploader-id type="integer">11330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/833344/6212_has_many_through_polymorphic_invalid.diff</url>
    </attachment>
  </attachments>
</ticket>
