<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-21T22:20:27+00:00</created-at>
  <creator-id type="integer">38760</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3769</number>
  <permalink>patch-activesupport-marshaling-time-objects-modify-the-source-object-and-leave-around-an-instance-variable-affecting-serialized-attributes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.2-stable 2.3-stable 3.0 activesupport marshal time &quot;time zone&quot;</tag>
  <title>[Patch] ActiveSupport: Marshaling time objects modify the source object and leave around an instance variable affecting serialized attributes</title>
  <updated-at type="datetime">2010-03-27T11:34:01+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>Joe Rafaniello</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3769</url>
  <priority-name nil="true"></priority-name>
  <original-body>Marshaling a time object added an instance variable to the object which affected the quoting of serialized attributes because the yaml'ized version of the original object did not match the marshaled one.  

For example, after marshaling a time object such as Time.local(2000), the instance variable: marshal_with_utc_coercion is set but never removed.  In addition, the client could Marshal an object and then use the original object and never know that it was modified. 

See attached patch and test.

Before patch:
  1) Failure:
test_marshaling_does_not_affect_yaml_dump(TimeExtMarshalingTest)
    [core_ext/time_ext_test.rb:756:in `test_marshaling_does_not_affect_yaml_dump'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:
&lt;&quot;--- 2000-01-01 00:00:00 -05:00\n&quot;&gt; expected but was
&lt;&quot;--- !timestamp \nat: \&quot;2000-01-01 00:00:00 -05:00\&quot;\n\&quot;@marshal_with_utc_coercion\&quot;: false\n&quot;&gt;.

  2) Failure:
test_marshaling_does_not_modify_source_object(TimeExtMarshalingTest)
    [core_ext/time_ext_test.rb:748:in `test_marshaling_does_not_modify_source_object'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:
&lt;false&gt; expected but was
&lt;true&gt;.</original-body>
  <latest-body>Marshaling a time object added an instance variable to the object which affected the quoting of serialized attributes because the yaml'ized version of the original object did not match the marshaled one.  

For example, after marshaling a time object such as Time.local(2000), the instance variable: marshal_with_utc_coercion is set but never removed.  In addition, the client could Marshal an object and then use the original object and never know that it was modified. 

See attached patch and test.

Before patch:
  1) Failure:
test_marshaling_does_not_affect_yaml_dump(TimeExtMarshalingTest)
    [core_ext/time_ext_test.rb:756:in `test_marshaling_does_not_affect_yaml_dump'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:
&lt;&quot;--- 2000-01-01 00:00:00 -05:00\n&quot;&gt; expected but was
&lt;&quot;--- !timestamp \nat: \&quot;2000-01-01 00:00:00 -05:00\&quot;\n\&quot;@marshal_with_utc_coercion\&quot;: false\n&quot;&gt;.

  2) Failure:
test_marshaling_does_not_modify_source_object(TimeExtMarshalingTest)
    [core_ext/time_ext_test.rb:748:in `test_marshaling_does_not_modify_source_object'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:
&lt;false&gt; expected but was
&lt;true&gt;.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Marshaling a time object added an instance variable to the
object which affected the quoting of serialized attributes because
the yaml'ized version of the original object did not match the
marshaled one.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;For example, after marshaling a time object such as
Time.local(2000), the instance variable: marshal_with_utc_coercion
is set but never removed. In addition, the client could Marshal an
object and then use the original object and never know that it was
modified.&lt;/p&gt;
&lt;p&gt;See attached patch and test.&lt;/p&gt;
&lt;p&gt;Before patch:&lt;br&gt;
1) Failure:
test_marshaling_does_not_affect_yaml_dump(TimeExtMarshalingTest)&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[core_ext/time_ext_test.rb:756:in `test_marshaling_does_not_affect_yaml_dump'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;&quot;--- 2000-01-01 00:00:00 -05:00\n&quot;&amp;gt; expected but was&lt;br&gt;
&amp;lt;&quot;--- !timestamp \nat: &quot;2000-01-01 00:00:00
-05:00&quot;\n&quot;@marshal_with_utc_coercion&quot;: false\n&quot;&amp;gt;.&lt;/p&gt;
&lt;p&gt;2) Failure:
test_marshaling_does_not_modify_source_object(TimeExtMarshalingTest)&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[core_ext/time_ext_test.rb:748:in `test_marshaling_does_not_modify_source_object'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;expected but was&lt;br&gt;
.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marshaling a time object added an instance variable to the object which affected the quoting of serialized attributes because the yaml'ized version of the original object did not match the marshaled one.  

For example, after marshaling a time object such as Time.local(2000), the instance variable: marshal_with_utc_coercion is set but never removed.  In addition, the client could Marshal an object and then use the original object and never know that it was modified. 

See attached patch and test.

Before patch:
  1) Failure:
test_marshaling_does_not_affect_yaml_dump(TimeExtMarshalingTest)
    [core_ext/time_ext_test.rb:756:in `test_marshaling_does_not_affect_yaml_dump'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:
&lt;&quot;--- 2000-01-01 00:00:00 -05:00\n&quot;&gt; expected but was
&lt;&quot;--- !timestamp \nat: \&quot;2000-01-01 00:00:00 -05:00\&quot;\n\&quot;@marshal_with_utc_coercion\&quot;: false\n&quot;&gt;.

  2) Failure:
test_marshaling_does_not_modify_source_object(TimeExtMarshalingTest)
    [core_ext/time_ext_test.rb:748:in `test_marshaling_does_not_modify_source_object'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
     /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:
&lt;false&gt; expected but was
&lt;true&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marshaling a time object added an instance variable to the
object which affected the quoting of serialized attributes because
the yaml'ized version of the original object did not match the
marshaled one.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;For example, after marshaling a time object such as
Time.local(2000), the instance variable: marshal_with_utc_coercion
is set but never removed. In addition, the client could Marshal an
object and then use the original object and never know that it was
modified.&lt;/p&gt;
&lt;p&gt;See attached patch and test.&lt;/p&gt;
&lt;p&gt;Before patch:&lt;br&gt;
1) Failure:
test_marshaling_does_not_affect_yaml_dump(TimeExtMarshalingTest)&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[core_ext/time_ext_test.rb:756:in `test_marshaling_does_not_affect_yaml_dump'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;&quot;--- 2000-01-01 00:00:00 -05:00\n&quot;&amp;gt; expected but was&lt;br&gt;
&amp;lt;&quot;--- !timestamp \nat: &quot;2000-01-01 00:00:00
-05:00&quot;\n&quot;@marshal_with_utc_coercion&quot;: false\n&quot;&amp;gt;.&lt;/p&gt;
&lt;p&gt;2) Failure:
test_marshaling_does_not_modify_source_object(TimeExtMarshalingTest)&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[core_ext/time_ext_test.rb:748:in `test_marshaling_does_not_modify_source_object'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `__send__'
 /usr/lib/ruby/gems/1.8/gems/mocha-0.9.8/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:19:in `run']:&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;expected but was&lt;br&gt;
.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-21T22:20:27+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3769</number>
      <permalink>patch-activesupport-marshaling-time-objects-modify-the-source-object-and-leave-around-an-instance-variable-affecting-serialized-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport marshal time</tag>
      <title>Patch: ActiveSupport: Marshaling time objects modify the source object and leave around an instance variable affecting serialized attributes</title>
      <updated-at type="datetime">2010-01-21T22:31:43+00:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">1</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3769</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm not sure who to assign this ticket to so please forgive me if someone else works on ActiveSupport.

The original commit which fixed the unmarshaling of UTC time objects for pre-ruby 1.9:
http://github.com/rails/rails/commit/ce65a05c5b027175c3c541055081f82c8bfc36bf

This followup commit changed the marshal load to do a get instead of removing the instance variable if it exists:
http://github.com/rails/rails/commit/2c62baf4bf221aa8aa67f4625fe7011d40c44e82

The problem with the followup commit above is that it adds the instance variable but never removes it.  The original commit also makes changes to the object itself if it's not frozen.  It's not clear to me that this method should ever modify the object in place.  The provided patch attempts to fix this.

Any code that relies on the original object remaining &quot;untouched&quot; or that the unmarshaled object is the same as the original object will be wrong.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure who to assign this ticket to so please forgive me
if someone else works on ActiveSupport.&lt;/p&gt;
&lt;p&gt;The original commit which fixed the unmarshaling of UTC time
objects for pre-ruby 1.9:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/ce65a05c5b027175c3c541055081f82c8bfc36bf&quot;&gt;
http://github.com/rails/rails/commit/ce65a05c5b027175c3c541055081f8...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This followup commit changed the marshal load to do a get
instead of removing the instance variable if it exists:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/2c62baf4bf221aa8aa67f4625fe7011d40c44e82&quot;&gt;
http://github.com/rails/rails/commit/2c62baf4bf221aa8aa67f4625fe701...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The problem with the followup commit above is that it adds the
instance variable but never removes it. The original commit also
makes changes to the object itself if it's not frozen. It's not
clear to me that this method should ever modify the object in
place. The provided patch attempts to fix this.&lt;/p&gt;
&lt;p&gt;Any code that relies on the original object remaining
&quot;untouched&quot; or that the unmarshaled object is the same as the
original object will be wrong.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-25T15:31:37+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3769</number>
      <permalink>patch-activesupport-marshaling-time-objects-modify-the-source-object-and-leave-around-an-instance-variable-affecting-serialized-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport marshal time</tag>
      <title>Patch: ActiveSupport: Marshaling time objects modify the source object and leave around an instance variable affecting serialized attributes</title>
      <updated-at type="datetime">2010-01-25T15:31:40+00:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">2</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3769</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I forgot to mention that this issue was found in rails 2.2-stable but also is in 2.3-stable and current 3.0 code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I forgot to mention that this issue was found in rails
2.2-stable but also is in 2.3-stable and current 3.0 code.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-25T16:08:49+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport marshal time
:title: &quot;Patch: ActiveSupport: Marshaling time objects modify the source object and leave around an instance variable affecting serialized attributes&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3769</number>
      <permalink>patch-activesupport-marshaling-time-objects-modify-the-source-object-and-leave-around-an-instance-variable-affecting-serialized-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable activesupport marshal time</tag>
      <title>[Patch] ActiveSupport: Marshaling time objects modify the source object and leave around an instance variable affecting serialized attributes</title>
      <updated-at type="datetime">2010-01-25T16:08:50+00:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">3</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3769</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Adding tag for 3.0 code since this issue is still a problem even though the code has been moved around in 3.0.  Ie, the bug still exists and is only moved in 3.0

The provided patch for 2.3 allows for us to properly marshal dump/load both local/utc time objects without modifying the object in place and without leaving around an instance variable after load which did not exist prior to dump.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adding tag for 3.0 code since this issue is still a problem even
though the code has been moved around in 3.0. Ie, the bug still
exists and is only moved in 3.0&lt;/p&gt;
&lt;p&gt;The provided patch for 2.3 allows for us to properly marshal
dump/load both local/utc time objects without modifying the object
in place and without leaving around an instance variable after load
which did not exist prior to dump.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-17T16:35:42+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2-stable 2.3-stable activesupport marshal time
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3769</number>
      <permalink>patch-activesupport-marshaling-time-objects-modify-the-source-object-and-leave-around-an-instance-variable-affecting-serialized-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable 2.3-stable 3.0 activesupport marshal time &quot;time zone&quot;</tag>
      <title>[Patch] ActiveSupport: Marshaling time objects modify the source object and leave around an instance variable affecting serialized attributes</title>
      <updated-at type="datetime">2010-03-17T16:35:44+00:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">4</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3769</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [26e714d26eff2633fd33ba6f21295a376fcad091]) Remove stray instance variable to resolve serialization problem [#3769 state:resolved] (ht: Joe Rafaniello)
http://github.com/rails/rails/commit/26e714d26eff2633fd33ba6f21295a376fcad091</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/26e714d26eff2633fd33ba6f21295a376fcad091&quot;
title=
&quot;Changeset [26e714d26eff2633fd33ba6f21295a376fcad091]&quot;&gt;[26e714d26eff2633fd33ba6f21295a376fcad091]&lt;/a&gt;)
Remove stray instance variable to resolve serialization problem
[&lt;a href=&quot;/projects/8994/tickets/3769&quot; title=
&quot;Ticket #3769&quot;&gt;#3769&lt;/a&gt; state:resolved] (ht: Joe Rafaniello)
&lt;a href=
&quot;http://github.com/rails/rails/commit/26e714d26eff2633fd33ba6f21295a376fcad091&quot;&gt;
http://github.com/rails/rails/commit/26e714d26eff2633fd33ba6f21295a...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-27T11:34:00+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3769</number>
      <permalink>patch-activesupport-marshaling-time-objects-modify-the-source-object-and-leave-around-an-instance-variable-affecting-serialized-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2-stable 2.3-stable 3.0 activesupport marshal time &quot;time zone&quot;</tag>
      <title>[Patch] ActiveSupport: Marshaling time objects modify the source object and leave around an instance variable affecting serialized attributes</title>
      <updated-at type="datetime">2010-03-27T11:34:01+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3769</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>29274e252b6e140ba32cdce76aebe5c57297a15c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-21T22:20:27+00:00</created-at>
      <filename>marshaling_time.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">384286</id>
      <size type="integer">2416</size>
      <uploader-id type="integer">38760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/384286/marshaling_time.diff</url>
    </attachment>
  </attachments>
</ticket>
