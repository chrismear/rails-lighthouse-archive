<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-02T16:07:52+00:00</created-at>
  <creator-id type="integer">25650</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1845</number>
  <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
  <priority type="integer">981</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>:include :through eagerloading eager_loading find finder</tag>
  <title>Finder methods ignore :include in has_many :through</title>
  <updated-at type="datetime">2009-11-17T19:50:07+00:00</updated-at>
  <user-id type="integer">10915</user-id>
  <version type="integer">12</version>
  <user-name>Josh N. Abbott</user-name>
  <creator-name>Eduardo</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
  <priority-name nil="true"></priority-name>
  <original-body>If an has_many :through association has an :include and :conditions in it, calling a finder method on it will fail if the conditions refer to the included table, because the :include is ignored.

With this simple class definitions:

&lt;block&gt;
class Author &lt; ActiveRecord::Base
has_many :authorships
has_many :books_with_preview, :source =&gt; :book, :through =&gt; :authorships, :include =&gt; :chapters, :conditions =&gt; ['chapters.preview = 1']
end

class Authorship &lt; ActiveRecord::Base
belongs_to :author
belongs_to :book
end

class Book &lt; ActiveRecord::Base
has_many :authorship
has_many :chapters
end

class Chapter &lt; ActiveRecord::Base
belongs_to :book
end
&lt;/block&gt;

you can call

&lt;block&gt;
author.books_with_preview
&lt;/block&gt;

but the following call will fail:

&lt;block&gt;
author.books_with_preview.find(:all)
&lt;/block&gt;

I'm using rails 2.1.0 but I've been told that it's the same in rails 2.2.2.  I tested mysql and sqlite, and I get the same error:

ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'chapters.preview' in 'where clause': SELECT `books`.* FROM `books`    INNER JOIN authorships ON books.id = authorships.book_id    WHERE ((`authorships`.author_id = 1) AND ((chapters.preview = 1)))</original-body>
  <latest-body>If an has_many :through association has an :include and :conditions in it, calling a finder method on it will fail if the conditions refer to the included table, because the :include is ignored.

With this simple class definitions:

&lt;block&gt;
class Author &lt; ActiveRecord::Base
has_many :authorships
has_many :books_with_preview, :source =&gt; :book, :through =&gt; :authorships, :include =&gt; :chapters, :conditions =&gt; ['chapters.preview = 1']
end

class Authorship &lt; ActiveRecord::Base
belongs_to :author
belongs_to :book
end

class Book &lt; ActiveRecord::Base
has_many :authorship
has_many :chapters
end

class Chapter &lt; ActiveRecord::Base
belongs_to :book
end
&lt;/block&gt;

you can call

&lt;block&gt;
author.books_with_preview
&lt;/block&gt;

but the following call will fail:

&lt;block&gt;
author.books_with_preview.find(:all)
&lt;/block&gt;

I'm using rails 2.1.0 but I've been told that it's the same in rails 2.2.2.  I tested mysql and sqlite, and I get the same error:

ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'chapters.preview' in 'where clause': SELECT `books`.* FROM `books`    INNER JOIN authorships ON books.id = authorships.book_id    WHERE ((`authorships`.author_id = 1) AND ((chapters.preview = 1)))</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If an has_many :through association has an :include and
:conditions in it, calling a finder method on it will fail if the
conditions refer to the included table, because the :include is
ignored.&lt;/p&gt;
&lt;p&gt;With this simple class definitions:&lt;/p&gt;
&lt;p&gt;class Author &amp;lt; ActiveRecord::Base has_many :authorships
has_many :books_with_preview, :source =&amp;gt; :book, :through =&amp;gt;
:authorships, :include =&amp;gt; :chapters, :conditions =&amp;gt;
['chapters.preview = 1'] end&lt;/p&gt;
&lt;p&gt;class Authorship &amp;lt; ActiveRecord::Base belongs_to :author
belongs_to :book end&lt;/p&gt;
&lt;p&gt;class Book &amp;lt; ActiveRecord::Base has_many :authorship has_many
:chapters end&lt;/p&gt;
&lt;p&gt;class Chapter &amp;lt; ActiveRecord::Base belongs_to :book end&lt;/p&gt;
&lt;p&gt;you can call&lt;/p&gt;
&lt;p&gt;author.books_with_preview&lt;/p&gt;
&lt;p&gt;but the following call will fail:&lt;/p&gt;
&lt;p&gt;author.books_with_preview.find(:all)&lt;/p&gt;
&lt;p&gt;I'm using rails 2.1.0 but I've been told that it's the same in
rails 2.2.2. I tested mysql and sqlite, and I get the same
error:&lt;/p&gt;
&lt;p&gt;ActiveRecord::StatementInvalid: Mysql::Error: Unknown column
'chapters.preview' in 'where clause': SELECT &lt;code&gt;books&lt;/code&gt;.*
FROM &lt;code&gt;books&lt;/code&gt; INNER JOIN authorships ON books.id =
authorships.book_id WHERE ((&lt;code&gt;authorships&lt;/code&gt;.author_id = 1)
AND ((chapters.preview = 1)))&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If an has_many :through association has an :include and :conditions in it, calling a finder method on it will fail if the conditions refer to the included table, because the :include is ignored.

With this simple class definitions:

@@@ ruby
class Author &lt; ActiveRecord::Base
has_many :authorships
has_many :books_with_preview, :source =&gt; :book,
         :through =&gt; :authorships, :include =&gt; :chapters,
         :conditions =&gt; ['chapters.preview = 1']
end

class Authorship &lt; ActiveRecord::Base
belongs_to :author
belongs_to :book
end

class Book &lt; ActiveRecord::Base
has_many :authorship
has_many :chapters
end

class Chapter &lt; ActiveRecord::Base
belongs_to :book
end
@@@

you can call

@@@ ruby
author.books_with_preview
@@@

but the following call will fail:

@@@ ruby
author.books_with_preview.find(:all)
@@@

I'm using rails 2.1.0 but I've been told that it's the same in rails 2.2.2.  I tested mysql and sqlite, and I get the same error:

ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'chapters.preview' in 'where clause': SELECT `books`.* FROM `books`    INNER JOIN authorships ON books.id = authorships.book_id    WHERE ((`authorships`.author_id = 1) AND ((chapters.preview = 1)))</body>
      <body-html>&lt;div&gt;&lt;p&gt;If an has_many :through association has an :include and
:conditions in it, calling a finder method on it will fail if the
conditions refer to the included table, because the :include is
ignored.&lt;/p&gt;
&lt;p&gt;With this simple class definitions:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Author &amp;lt; ActiveRecord::Base
has_many :authorships
has_many :books_with_preview, :source =&amp;gt; :book,
         :through =&amp;gt; :authorships, :include =&amp;gt; :chapters,
         :conditions =&amp;gt; ['chapters.preview = 1']
end

class Authorship &amp;lt; ActiveRecord::Base
belongs_to :author
belongs_to :book
end

class Book &amp;lt; ActiveRecord::Base
has_many :authorship
has_many :chapters
end

class Chapter &amp;lt; ActiveRecord::Base
belongs_to :book
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you can call&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
author.books_with_preview
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but the following call will fail:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
author.books_with_preview.find(:all)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'm using rails 2.1.0 but I've been told that it's the same in
rails 2.2.2. I tested mysql and sqlite, and I get the same
error:&lt;/p&gt;
&lt;p&gt;ActiveRecord::StatementInvalid: Mysql::Error: Unknown column
'chapters.preview' in 'where clause': SELECT &lt;code&gt;books&lt;/code&gt;.*
FROM &lt;code&gt;books&lt;/code&gt; INNER JOIN authorships ON books.id =
authorships.book_id WHERE ((&lt;code&gt;authorships&lt;/code&gt;.author_id = 1)
AND ((chapters.preview = 1)))&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-02T16:07:52+00:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-02-02T16:10:52+00:00</updated-at>
      <user-id type="integer">25650</user-id>
      <version type="integer">1</version>
      <user-name>Eduardo</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is also an issue in 2.3 RC1.

I've also found that all works even the find(:all) doesn't.

It seems to be fixable by inserting the following line at line 52.

@@@
options[:include] = @reflection.options[:include]
@@@

But I don't know enough about the ActiveRecord internals to know if this will break something.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is also an issue in 2.3 RC1.&lt;/p&gt;
&lt;p&gt;I've also found that all works even the find(:all) doesn't.&lt;/p&gt;
&lt;p&gt;It seems to be fixable by inserting the following line at line
52.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
options[:include] = @reflection.options[:include]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But I don't know enough about the ActiveRecord internals to know
if this will break something.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-18T17:27:37+00:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;:include :through finder&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-02-18T17:27:41+00:00</updated-at>
      <user-id type="integer">22224</user-id>
      <version type="integer">2</version>
      <user-name>JackC</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Line 52 of active_record/associations/association_collection.rb that is.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Line 52 of active_record/associations/association_collection.rb
that is.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-18T17:28:39+00:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-02-18T17:28:42+00:00</updated-at>
      <user-id type="integer">22224</user-id>
      <version type="integer">3</version>
      <user-name>JackC</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T13:47:20+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;:include :through eagerloading eager_loading find finder&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through bugmash eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-05T13:47:22+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">4</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>verified

This error is reproducible. The error is caused because options[:include] was assigned nil in has_many_through_association.rb.

@@@ ruby
def construct_find_options!(options)
  options[:select]  = construct_select(options[:select])
  options[:from]  ||= construct_from
  options[:joins]   = construct_joins(options[:joins])
  options[:include] = @reflection.source_reflection.options[:include] if options[:include].nil? 
end
@@@

options[:include] should not be nil, because the reverse_merge! prohibits assignment from @reflection.options[:include] in  merge_options_from_reflection!(options) method (association_proxy.rb), even if the value is nil. 
The solution is not to have options[:include] if the value is nil and appropriate :include options are picked from reflection.

I have attached a patch with corresponding test, which fixed the issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified&lt;/p&gt;
&lt;p&gt;This error is reproducible. The error is caused because
options[:include] was assigned nil in
has_many_through_association.rb.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def construct_find_options!(options)
  options[:select]  = construct_select(options[:select])
  options[:from]  ||= construct_from
  options[:joins]   = construct_joins(options[:joins])
  options[:include] = @reflection.source_reflection.options[:include] if options[:include].nil? 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;options[:include] should not be nil, because the reverse_merge!
prohibits assignment from @reflection.options[:include] in
merge_options_from_reflection!(options) method
(association_proxy.rb), even if the value is nil.&lt;br&gt;
The solution is not to have options[:include] if the value is nil
and appropriate :include options are picked from reflection.&lt;/p&gt;
&lt;p&gt;I have attached a patch with corresponding test, which fixed the
issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T13:08:20+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through bugmash eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-09T13:08:23+01:00</updated-at>
      <user-id type="integer">54601</user-id>
      <version type="integer">5</version>
      <user-name>railsbob</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 railsbob's patch works fine in both 2-3-stable and master, and without the fix the test fails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 railsbob's patch works fine in both 2-3-stable and master,
and without the fix the test fails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T13:29:41+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through bugmash eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-09T13:29:43+01:00</updated-at>
      <user-id type="integer">30376</user-id>
      <version type="integer">6</version>
      <user-name>Hugo Peixoto</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>verified

+1 The patch works perfectly under master and 2-3-stable. All tests pass.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified&lt;/p&gt;
&lt;p&gt;+1 The patch works perfectly under master and 2-3-stable. All
tests pass.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T15:06:57+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through bugmash eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-09T15:07:02+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">7</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

Bug verified to be reproducible. Patch applies cleanly to edge Rails and all tests are passing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;Bug verified to be reproducible. Patch applies cleanly to edge
Rails and all tests are passing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T16:00:07+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :through bugmash eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-09T16:00:09+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">8</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [076ca48bd649ddea4dd1a320879c03a9fe7a0a6d]) Ensure hm:t#find does not assign nil to :include [#1845 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/076ca48bd649ddea4dd1a320879c03a9fe7a0a6d</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/076ca48bd649ddea4dd1a320879c03a9fe7a0a6d&quot;
title=
&quot;Changeset [076ca48bd649ddea4dd1a320879c03a9fe7a0a6d]&quot;&gt;[076ca48bd649ddea4dd1a320879c03a9fe7a0a6d]&lt;/a&gt;)
Ensure hm:t#find does not assign nil to :include [&lt;a href=
&quot;/projects/8994/tickets/1845&quot; title=&quot;Ticket #1845&quot;&gt;#1845&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a&gt;pratiknaik@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/076ca48bd649ddea4dd1a320879c03a9fe7a0a6d&quot;&gt;
http://github.com/rails/rails/commit/076ca48bd649ddea4dd1a320879c03...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T17:06:57+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>:include :through bugmash eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-09T17:06:59+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [80d8608102cce64805e7573f6b97d8561f7f11ea]) Ensure hm:t#find does not assign nil to :include [#1845 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/80d8608102cce64805e7573f6b97d8561f7f11ea</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/80d8608102cce64805e7573f6b97d8561f7f11ea&quot;
title=
&quot;Changeset [80d8608102cce64805e7573f6b97d8561f7f11ea]&quot;&gt;[80d8608102cce64805e7573f6b97d8561f7f11ea]&lt;/a&gt;)
Ensure hm:t#find does not assign nil to :include [&lt;a href=
&quot;/projects/8994/tickets/1845&quot; title=&quot;Ticket #1845&quot;&gt;#1845&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a&gt;pratiknaik@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/80d8608102cce64805e7573f6b97d8561f7f11ea&quot;&gt;
http://github.com/rails/rails/commit/80d8608102cce64805e7573f6b97d8...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T17:06:59+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>:include :through bugmash eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-09T17:07:00+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">10</version>
      <user-name>Repository</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T17:13:51+01:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;:include :through bugmash eagerloading eager_loading find finder&quot;
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>:include :through eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-08-09T17:13:57+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">11</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Has this issue really been resolved? I'm running Rails 2.3.4 and when I try to load a has_many :through association, the construct_find_options! method doesn't get called. The find_target method is what gets called and in spite of the fact that it *appears* that the :include option is getting passed to the subsequently called 'find' method, the associations are being ignored.

Another odd thing is that when I call #count on the association everything loads fine.

So the question is, did this patch actually solve the original problem the ticket was opened for? It seems to me that it didn't.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Has this issue really been resolved? I'm running Rails 2.3.4 and
when I try to load a has_many :through association, the
construct_find_options! method doesn't get called. The find_target
method is what gets called and in spite of the fact that it
&lt;em&gt;appears&lt;/em&gt; that the :include option is getting passed to the
subsequently called 'find' method, the associations are being
ignored.&lt;/p&gt;
&lt;p&gt;Another odd thing is that when I call #count on the association
everything loads fine.&lt;/p&gt;
&lt;p&gt;So the question is, did this patch actually solve the original
problem the ticket was opened for? It seems to me that it
didn't.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-17T19:50:03+00:00</created-at>
      <creator-id type="integer">25650</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1845</number>
      <permalink>finder-methods-ignore-include-in-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>:include :through eagerloading eager_loading find finder</tag>
      <title>Finder methods ignore :include in has_many :through</title>
      <updated-at type="datetime">2009-11-17T19:50:07+00:00</updated-at>
      <user-id type="integer">10915</user-id>
      <version type="integer">12</version>
      <user-name>Josh N. Abbott</user-name>
      <creator-name>Eduardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1845</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>361447a7d71b7e6c0e2774aeb9a435078889ce3b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T13:08:20+01:00</created-at>
      <filename>1845_fixed_has_many_through_find.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239337</id>
      <size type="integer">2232</size>
      <uploader-id type="integer">54601</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239337/1845_fixed_has_many_through_find.diff</url>
    </attachment>
  </attachments>
</ticket>
