From d42a8c5d498d567c4aab8fae9b3c63d92a066624 Mon Sep 17 00:00:00 2001
From: Daniel Guettler <daniel.guettler@gmail.com>
Date: Wed, 18 Jun 2008 01:36:13 -0400
Subject: [PATCH] NamedScope
 - added build, create and create! methods which will apply conditions passed as hash to named_scope

---
 activerecord/lib/active_record/named_scope.rb |   23 +++++++++++++++++++++++
 activerecord/test/cases/named_scope_test.rb   |   15 +++++++++++++++
 2 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/named_scope.rb b/activerecord/lib/active_record/named_scope.rb
index b0c8a8b..d7d76e5 100644
--- a/activerecord/lib/active_record/named_scope.rb
+++ b/activerecord/lib/active_record/named_scope.rb
@@ -138,6 +138,29 @@ module ActiveRecord
       def empty?
         @found ? @found.empty? : count.zero?
       end
+      
+      def build(attrs = {})
+        if attrs.is_a?(Array)
+          attrs.collect { |attr| build(attr) }
+        else
+          attrs.update(proxy_options[:conditions]) if proxy_options[:conditions].is_a?(Hash)
+          proxy_scope.new(attrs)
+        end
+      end
+      
+      def create(attrs = {})
+        if attrs.is_a?(Array)
+          attrs.collect { |attr| create(attr) }
+        else
+          attrs.update(proxy_options[:conditions]) if proxy_options[:conditions].is_a?(Hash)
+          proxy_scope.create(attrs)
+        end
+      end
+
+      def create!(attrs = {})
+        attrs.update(proxy_options[:conditions]) if proxy_options[:conditions].is_a?(Hash)
+        proxy_scope.create!(attrs)
+      end
 
       protected
       def proxy_found
diff --git a/activerecord/test/cases/named_scope_test.rb b/activerecord/test/cases/named_scope_test.rb
index d890cf7..ceabc41 100644
--- a/activerecord/test/cases/named_scope_test.rb
+++ b/activerecord/test/cases/named_scope_test.rb
@@ -154,4 +154,19 @@ class NamedScopeTest < ActiveRecord::TestCase
       topics.empty?  # use loaded (no query)
     end
   end
+  
+  def test_should_build_with_proxy_options
+    topic = Topic.approved.build({})
+    assert topic.approved
+  end
+  
+  def test_should_create_with_proxy_options
+    topic = Topic.approved.create({})
+    assert topic.approved
+  end
+  
+  def test_should_create_with_bang_with_proxy_options
+    topic = Topic.approved.create!({})
+    assert topic.approved
+  end
 end
-- 
1.5.4

