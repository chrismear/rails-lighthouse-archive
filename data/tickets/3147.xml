<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-04T16:33:00+01:00</created-at>
  <creator-id type="integer">36907</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3147</number>
  <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2-3-stable active_record autosave_association bug i18n</tag>
  <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
  <updated-at type="datetime">2010-05-15T18:41:00+01:00</updated-at>
  <user-id type="integer">65556</user-id>
  <version type="integer">25</version>
  <user-name>Rizwan Reza</user-name>
  <creator-name>Anders Carling</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
  <priority-name>Low</priority-name>
  <original-body>@@@ ruby
ActiveRecord::Schema.define do
  create_table(:owners) { |o| }
  create_table(:items)  { |i| i.string :property }
end
class Owner &lt; ActiveRecord::Base
  has_one :item, :autosave =&gt; true
  def self.human_attribute_name(attr)
    puts &quot;Owner received: #{attr}&quot;
    super
  end
end

class Item &lt; ActiveRecord::Base
  validates_presence_of :property
  def self.human_attribute_name(attr)
    puts &quot;Item received: #{attr}&quot;
    super
  end
end
owner = Owner.new
owner.build_item
owner.valid?
owner.errors.full_messages
@@@

The above code will using Rails 2.3.4 output:
*Item received: item_property*

On 2.3.3 it would however output:
*Owner received: item_property*

I.e. the attribute name for the error message caused by validates_presence_of :property and copied to owner.errors by ActiveRecord::AutosaveAssociation now get it's human_attribute_name from the child object (Item) instead of the parent (Owner).

This changes the I18N key used to find the attribute name from 'activerecord.attributes.owner.item_property' to 'activerecord.attributes.item.item_property', which breaks any locales depending on the previous implementation.

I tracked it down to the changes caused by the new ActiveRecord::Error class introduced in 13fb26b714dec0874303f51cc125ff62f65a2729. As the new Error#generate_full_message calls human_name and human_attribute_name on its @base.class and thus will get them from the child class (Item). To avoid that we could set @base to the parent instance when we're copying the error to the parent's Errors instance.

That copying is done in ActiveRecord::AutosaveAssociation#association_valid? Something like this should restore the previous behaviour: 
@@@
--- a/activerecord/lib/active_record/autosave_association.rb
+++ b/activerecord/lib/active_record/autosave_association.rb
@@ -251,6 +251,7 @@ module ActiveRecord
           unless association.marked_for_destruction?
             association.errors.each_error do |attribute, error|
               error = error.dup
+              error.base = self
               error.attribute = &quot;#{reflection.name}_#{attribute}&quot;
               errors.add(error) unless errors.on(error.attribute)
             end
@@@

I'm not sure about this (and the rewriting of error.attribute) as a long term solution, as I feel the Error should probably keep its connection to the object that actually caused it, but for now this should restore compatibility with the way it worked in 2.3.3.</original-body>
  <latest-body>@@@ ruby
ActiveRecord::Schema.define do
  create_table(:owners) { |o| }
  create_table(:items)  { |i| i.string :property }
end
class Owner &lt; ActiveRecord::Base
  has_one :item, :autosave =&gt; true
  def self.human_attribute_name(attr)
    puts &quot;Owner received: #{attr}&quot;
    super
  end
end

class Item &lt; ActiveRecord::Base
  validates_presence_of :property
  def self.human_attribute_name(attr)
    puts &quot;Item received: #{attr}&quot;
    super
  end
end
owner = Owner.new
owner.build_item
owner.valid?
owner.errors.full_messages
@@@

The above code will using Rails 2.3.4 output:
*Item received: item_property*

On 2.3.3 it would however output:
*Owner received: item_property*

I.e. the attribute name for the error message caused by validates_presence_of :property and copied to owner.errors by ActiveRecord::AutosaveAssociation now get it's human_attribute_name from the child object (Item) instead of the parent (Owner).

This changes the I18N key used to find the attribute name from 'activerecord.attributes.owner.item_property' to 'activerecord.attributes.item.item_property', which breaks any locales depending on the previous implementation.

I tracked it down to the changes caused by the new ActiveRecord::Error class introduced in 13fb26b714dec0874303f51cc125ff62f65a2729. As the new Error#generate_full_message calls human_name and human_attribute_name on its @base.class and thus will get them from the child class (Item). To avoid that we could set @base to the parent instance when we're copying the error to the parent's Errors instance.

That copying is done in ActiveRecord::AutosaveAssociation#association_valid? Something like this should restore the previous behaviour: 
@@@
--- a/activerecord/lib/active_record/autosave_association.rb
+++ b/activerecord/lib/active_record/autosave_association.rb
@@ -251,6 +251,7 @@ module ActiveRecord
           unless association.marked_for_destruction?
             association.errors.each_error do |attribute, error|
               error = error.dup
+              error.base = self
               error.attribute = &quot;#{reflection.name}_#{attribute}&quot;
               errors.add(error) unless errors.on(error.attribute)
             end
@@@

I'm not sure about this (and the rewriting of error.attribute) as a long term solution, as I feel the Error should probably keep its connection to the object that actually caused it, but for now this should restore compatibility with the way it worked in 2.3.3.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;ActiveRecord::Schema.define do
  create_table(:owners) { |o| }
  create_table(:items)  { |i| i.string :property }
end
class Owner &amp;lt; ActiveRecord::Base
  has_one :item, :autosave =&amp;gt; true
  def self.human_attribute_name(attr)
    puts &quot;Owner received: #{attr}&quot;
    super
  end
end

class Item &amp;lt; ActiveRecord::Base
  validates_presence_of :property
  def self.human_attribute_name(attr)
    puts &quot;Item received: #{attr}&quot;
    super
  end
end
owner = Owner.new
owner.build_item
owner.valid?
owner.errors.full_messages&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The above code will using Rails 2.3.4 output:&lt;br&gt;
&lt;em&gt;Item received: item_property&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On 2.3.3 it would however output:&lt;br&gt;
&lt;em&gt;Owner received: item_property&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I.e. the attribute name for the error message caused by
validates_presence_of :property and copied to owner.errors by
ActiveRecord::AutosaveAssociation now get it's human_attribute_name
from the child object (Item) instead of the parent (Owner).&lt;/p&gt;
&lt;p&gt;This changes the I18N key used to find the attribute name from
'activerecord.attributes.owner.item_property' to
'activerecord.attributes.item.item_property', which breaks any
locales depending on the previous implementation.&lt;/p&gt;
&lt;p&gt;I tracked it down to the changes caused by the new
ActiveRecord::Error class introduced in
13fb26b714dec0874303f51cc125ff62f65a2729. As the new
Error#generate_full_message calls human_name and
human_attribute_name on its @base.class and thus will get them from
the child class (Item). To avoid that we could set @base to the
parent instance when we're copying the error to the parent's Errors
instance.&lt;/p&gt;
&lt;p&gt;That copying is done in
ActiveRecord::AutosaveAssociation#association_valid? Something like
this should restore the previous behaviour:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;--- a/activerecord/lib/active_record/autosave_association.rb
+++ b/activerecord/lib/active_record/autosave_association.rb
@@ -251,6 +251,7 @@ module ActiveRecord&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&lt;code&gt;       unless association.marked_for_destruction?
         association.errors.each_error do |attribute, error|
           error = error.dup&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;       error.base = self
       error.attribute = &amp;amp;quot;#{reflection.name}_#{attribute}&amp;amp;quot;
       errors.add(error) unless errors.on(error.attribute)
     end&amp;lt;/code&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;



&lt;br&gt;
I'm not sure about this (and the rewriting of error.attribute) as a long term solution, as I feel the Error should probably keep its connection to the object that actually caused it, but for now this should restore compatibility with the way it worked in 2.3.3.
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
ActiveRecord::Schema.define do
  create_table(:owners) { |o| }
  create_table(:items)  { |i| i.string :property }
end
class Owner &lt; ActiveRecord::Base
  has_one :item, :autosave =&gt; true
  def self.human_attribute_name(attr)
    puts &quot;Owner received: #{attr}&quot;
    super
  end
end

class Item &lt; ActiveRecord::Base
  validates_presence_of :property
  def self.human_attribute_name(attr)
    puts &quot;Item received: #{attr}&quot;
    super
  end
end
owner = Owner.new
owner.build_item
owner.valid?
owner.errors.full_messages
@@@

The above code will using Rails 2.3.4 output:
*Item received: item_property*

On 2.3.3 it would however output:
*Owner received: item_property*

I.e. the attribute name for the error message caused by validates_presence_of :property and copied to owner.errors by ActiveRecord::AutosaveAssociation now get it's human_attribute_name from the child object (Item) instead of the parent (Owner).

This changes the I18N key used to find the attribute name from 'activerecord.attributes.owner.item_property' to 'activerecord.attributes.item.item_property', which breaks any locales depending on the previous implementation.

I tracked it down to the changes caused by the new ActiveRecord::Error class introduced in 13fb26b714dec0874303f51cc125ff62f65a2729. As the new Error#generate_full_message calls human_name and human_attribute_name on its @base.class and thus will get them from the child class (Item). To avoid that we could set @base to the parent instance when we're copying the error to the parent's Errors instance.

That copying is done in ActiveRecord::AutosaveAssociation#association_valid? Something like this should restore the previous behaviour: 
(Lighthouse doesn't like me pasting in patches, you'll find the code in an attached file below.)

I'm not sure about this (and the rewriting of error.attribute) as a long term solution, as I feel the Error should probably keep its connection to the object that actually caused it, but for now this should restore compatibility with the way it worked in 2.3.3.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;ActiveRecord::Schema.define do
  create_table(:owners) { |o| }
  create_table(:items)  { |i| i.string :property }
end
class Owner &amp;lt; ActiveRecord::Base
  has_one :item, :autosave =&amp;gt; true
  def self.human_attribute_name(attr)
    puts &quot;Owner received: #{attr}&quot;
    super
  end
end

class Item &amp;lt; ActiveRecord::Base
  validates_presence_of :property
  def self.human_attribute_name(attr)
    puts &quot;Item received: #{attr}&quot;
    super
  end
end
owner = Owner.new
owner.build_item
owner.valid?
owner.errors.full_messages&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The above code will using Rails 2.3.4 output:&lt;br&gt;
&lt;em&gt;Item received: item_property&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On 2.3.3 it would however output:&lt;br&gt;
&lt;em&gt;Owner received: item_property&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I.e. the attribute name for the error message caused by
validates_presence_of :property and copied to owner.errors by
ActiveRecord::AutosaveAssociation now get it's human_attribute_name
from the child object (Item) instead of the parent (Owner).&lt;/p&gt;
&lt;p&gt;This changes the I18N key used to find the attribute name from
'activerecord.attributes.owner.item_property' to
'activerecord.attributes.item.item_property', which breaks any
locales depending on the previous implementation.&lt;/p&gt;
&lt;p&gt;I tracked it down to the changes caused by the new
ActiveRecord::Error class introduced in
13fb26b714dec0874303f51cc125ff62f65a2729. As the new
Error#generate_full_message calls human_name and
human_attribute_name on its @base.class and thus will get them from
the child class (Item). To avoid that we could set @base to the
parent instance when we're copying the error to the parent's Errors
instance.&lt;/p&gt;
&lt;p&gt;That copying is done in
ActiveRecord::AutosaveAssociation#association_valid? Something like
this should restore the previous behaviour:&lt;br&gt;
(Lighthouse doesn't like me pasting in patches, you'll find the
code in an attached file below.)&lt;/p&gt;
&lt;p&gt;I'm not sure about this (and the rewriting of error.attribute)
as a long term solution, as I feel the Error should probably keep
its connection to the object that actually caused it, but for now
this should restore compatibility with the way it worked in
2.3.3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-04T16:33:00+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-04T16:39:32+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">1</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oops, didn't realise lighthouse wouldn't like the patch text. The same text is in the attached file</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, didn't realise lighthouse wouldn't like the patch text.
The same text is in the attached file&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-04T16:37:49+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-04T16:37:54+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">2</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Anders, do you mind writing a test to ensure it won't happen again?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Anders, do you mind writing a test to ensure it won't happen
again?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-05T19:08:01+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-05T19:08:05+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Had a quick look at a test yesterday but didn't have time to write anything then, wasn't really sure about how to go about it and where to place it (first time really messing around inside the activerecord code). I think I could have another look at it tomorrow.

Should I target the test patch against master or 2-3-stable? There seems to be some changes among the tests (new and restructured files and such) in master, not sure if it even affects the autosave_association-tests that much though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Had a quick look at a test yesterday but didn't have time to
write anything then, wasn't really sure about how to go about it
and where to place it (first time really messing around inside the
activerecord code). I think I could have another look at it
tomorrow.&lt;/p&gt;
&lt;p&gt;Should I target the test patch against master or 2-3-stable?
There seems to be some changes among the tests (new and
restructured files and such) in master, not sure if it even affects
the autosave_association-tests that much though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-06T01:11:32+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-06T01:11:33+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">4</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Anders, the functionality is definitely available in ActiveRecord::Error, but is not being used properly by autosave association. So I would say that the test should be added in autosave_association, which is likely to be the same in both 2-3-stable and master.

Thanks for working on this!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Anders, the functionality is definitely available in
ActiveRecord::Error, but is not being used properly by autosave
association. So I would say that the test should be added in
autosave_association, which is likely to be the same in both
2-3-stable and master.&lt;/p&gt;
&lt;p&gt;Thanks for working on this!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-06T01:17:05+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-06T01:17:07+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Do you think the test should be &quot;low level&quot; and just check that #base is changed on the copied Error or should I write something &quot;high level&quot; that checks if the correct I18n-key is being used?

I feel the low level variant really test the stuff that AutosaveAssociation is responsible to do and leaves the ActiveRecord::Error responsible for what it does with the information it has. Still, the high level test has more of a &quot;test what the user/developer cares about&quot; feel to it, but it covers a lot of different modules and their responsibilities in one go. I'm not sure what kind of tests you're generally aiming for in that regard?

Thanks for your tips, I might have a lot of question for just a one line patch but as I said, I'm still trying to find my way around the rails codebase and I'm very grateful for any advice.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Do you think the test should be &quot;low level&quot; and just check that
#base is changed on the copied Error or should I write something
&quot;high level&quot; that checks if the correct I18n-key is being used?&lt;/p&gt;
&lt;p&gt;I feel the low level variant really test the stuff that
AutosaveAssociation is responsible to do and leaves the
ActiveRecord::Error responsible for what it does with the
information it has. Still, the high level test has more of a &quot;test
what the user/developer cares about&quot; feel to it, but it covers a
lot of different modules and their responsibilities in one go. I'm
not sure what kind of tests you're generally aiming for in that
regard?&lt;/p&gt;
&lt;p&gt;Thanks for your tips, I might have a lot of question for just a
one line patch but as I said, I'm still trying to find my way
around the rails codebase and I'm very grateful for any advice.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-06T01:46:07+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-06T01:46:10+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">6</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think checking for error.base would be too tied to the implementation. If we change the API again, someone might just remove the API test and we would be &quot;unprotected&quot; again. So I suggest a &quot;full stack&quot; test. :)

No problem! Glad to help! :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think checking for error.base would be too tied to the
implementation. If we change the API again, someone might just
remove the API test and we would be &quot;unprotected&quot; again. So I
suggest a &quot;full stack&quot; test. :)&lt;/p&gt;
&lt;p&gt;No problem! Glad to help! :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-06T01:55:15+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-06T01:55:20+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">7</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just when I found some time to write the test I found another, related, issue in that the changing of @base, and indeed the changing of @attribute that is already done, breaks Error#value's ability to get the value for the erroneous attribute. This breaks the ability for the attributes values to be interpolated in translations strings (#value is called from both #generate_full_message and #generate_message). The easiest way to solve it would probably be to preload the attribute value in Error#initialize and make Error#value an attr_accessor.

@@@
def value
  @base.respond_to?(attribute) ? @base.send(attribute) : nil
end
@@@

So, currently, by fixing the first issue (previous patch, upcoming test) we would make Error#value even more unable to get the attribute value, and fixing something by making something else even more broke doesn't quite feel right.

For now will I go ahead and fix this issue by changing error.base and create a separate ticket for #value, but maybe it'd be a good idea to look at a better solution to contain AutosaveValidation specific error logic that would keep a reference to the real base and attribute while allowing I18n lookups on the parent class?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just when I found some time to write the test I found another,
related, issue in that the changing of @base, and indeed the
changing of @attribute that is already done, breaks Error#value's
ability to get the value for the erroneous attribute. This breaks
the ability for the attributes values to be interpolated in
translations strings (#value is called from both
#generate_full_message and #generate_message). The easiest way to
solve it would probably be to preload the attribute value in
Error#initialize and make Error#value an attr_accessor.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def value
  @base.respond_to?(attribute) ? @base.send(attribute) : nil
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So, currently, by fixing the first issue (previous patch,
upcoming test) we would make Error#value even more unable to get
the attribute value, and fixing something by making something else
even more broke doesn't quite feel right.&lt;/p&gt;
&lt;p&gt;For now will I go ahead and fix this issue by changing
error.base and create a separate ticket for #value, but maybe it'd
be a good idea to look at a better solution to contain
AutosaveValidation specific error logic that would keep a reference
to the real base and attribute while allowing I18n lookups on the
parent class?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T00:12:50+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-08T00:12:56+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">8</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>So I guess the solution would really be to apply the ticket #2904. It would solve both cases. I was planning to do it only on master, but I guess a backport will be needed. What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;So I guess the solution would really be to apply the ticket
&lt;a href=&quot;/projects/8994/tickets/2904&quot; title=
&quot;Ticket #2904&quot;&gt;#2904&lt;/a&gt;. It would solve both cases. I was planning
to do it only on master, but I guess a backport will be needed.
What do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T00:35:28+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-08T00:35:33+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">9</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It seems to me like #2904 is the way to go, but as far as I could tell it would still break I18n lookup as we knew it in 2.3.3, but since it's already changed in 2.3.4 maybe that isn't that big of a problem?

2.3.3 uses activerecord.attributes.parentmodel.childmodel_attribute
2.3.4 uses activerecord.attributes.childmodel.childmodel_attribute
#2904 seems to use activerecord.attributes.childmodel.attribute

The way 2.3.4 currently does it is just weird. In my opinion childmodel.attribute is the most logical way to do this but one loses some of the flexibility that parentmodel.childmodel_attribute provides for those few (I can't think of any?) cases where you'd like to give a column on the associated model a completely different name if it's presented as an association then if it's presented alone.

Other than that it seems to me like the patch is backwards compatibile with everything written for 2.3.* as it concats association errors that's not specified in options[:associations] to the parents full_messages in Errors#include_association_errors, right?

To backport 0002_add_nested_errors_support.diff to 2-3-stable I think you'll need to add support for nested Errors objects in Errors#each (which will fail calling Errors#message) and maybe add some documentation on the fact that Errors#each_error might yield an Errors object and Errors#each_full might yield an hash (with full messages for an association). Hopefully that was of some help.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems to me like &lt;a href=&quot;/projects/8994/tickets/2904&quot; title=
&quot;Ticket #2904&quot;&gt;#2904&lt;/a&gt; is the way to go, but as far as I could
tell it would still break I18n lookup as we knew it in 2.3.3, but
since it's already changed in 2.3.4 maybe that isn't that big of a
problem?&lt;/p&gt;
&lt;p&gt;2.3.3 uses
activerecord.attributes.parentmodel.childmodel_attribute&lt;br&gt;
2.3.4 uses
activerecord.attributes.childmodel.childmodel_attribute&lt;br&gt;
&lt;a href=&quot;/projects/8994/tickets/2904&quot; title=
&quot;Ticket #2904&quot;&gt;#2904&lt;/a&gt; seems to use
activerecord.attributes.childmodel.attribute&lt;/p&gt;
&lt;p&gt;The way 2.3.4 currently does it is just weird. In my opinion
childmodel.attribute is the most logical way to do this but one
loses some of the flexibility that parentmodel.childmodel_attribute
provides for those few (I can't think of any?) cases where you'd
like to give a column on the associated model a completely
different name if it's presented as an association then if it's
presented alone.&lt;/p&gt;
&lt;p&gt;Other than that it seems to me like the patch is backwards
compatibile with everything written for 2.3.* as it concats
association errors that's not specified in options[:associations]
to the parents full_messages in Errors#include_association_errors,
right?&lt;/p&gt;
&lt;p&gt;To backport 0002_add_nested_errors_support.diff to 2-3-stable I
think you'll need to add support for nested Errors objects in
Errors#each (which will fail calling Errors#message) and maybe add
some documentation on the fact that Errors#each_error might yield
an Errors object and Errors#each_full might yield an hash (with
full messages for an association). Hopefully that was of some
help.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T11:08:34+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-08T11:08:38+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">10</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Exactly. Everything you said is right.

Indeed we would lose the flexibility that &quot;parentmodel.childmodel_attribute&quot; but so far it proved more to be a pain than a feature. If we need to manipulate a specific message, I guess we could do that with AR callbacks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Exactly. Everything you said is right.&lt;/p&gt;
&lt;p&gt;Indeed we would lose the flexibility that
&quot;parentmodel.childmodel_attribute&quot; but so far it proved more to be
a pain than a feature. If we need to manipulate a specific message,
I guess we could do that with AR callbacks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T11:11:40+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-08T11:11:42+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">11</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Aye, sounds good.

Then I'll drop my changes and wait for your patch to be backported (don't think I've enough time the next few days to look at it myself, sorry).

Shall we close this ticket as a duplicate of #2904 or keep it along until the issue is fixed?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Aye, sounds good.&lt;/p&gt;
&lt;p&gt;Then I'll drop my changes and wait for your patch to be
backported (don't think I've enough time the next few days to look
at it myself, sorry).&lt;/p&gt;
&lt;p&gt;Shall we close this ticket as a duplicate of &lt;a href=
&quot;/projects/8994/tickets/2904&quot; title=&quot;Ticket #2904&quot;&gt;#2904&lt;/a&gt; or
keep it along until the issue is fixed?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T11:33:21+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-08T11:33:25+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">12</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I will let this one opened until the other one get applied.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I will let this one opened until the other one get applied.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T13:13:34+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">41987</milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-08T13:13:40+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">13</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <milestone-title>2.3.4</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[milestone:id#50064 bulk edit command]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[milestone:id#50064 bulk edit command]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-11T23:04:38+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 41987
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-11T23:04:38+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">14</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <milestone-title>2.3.6</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Anders, I'm attaching a patch for this bug, since we could not have an agreement to solve #2904.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Anders, I'm attaching a patch for this bug, since we could not
have an agreement to solve &lt;a href=&quot;/projects/8994/tickets/2904&quot;
title=&quot;Ticket #2904&quot;&gt;#2904&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-22T13:48:44+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-25T12:43:50+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">15</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title>2.3.6</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Great, the patch looks good to me. Hugely appreciated.

In my opinion it also puts us in a slightly better position to start looking at something in the spirit of #2904 in the future.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great, the patch looks good to me. Hugely appreciated.&lt;/p&gt;
&lt;p&gt;In my opinion it also puts us in a slightly better position to
start looking at something in the spirit of &lt;a href=
&quot;/projects/8994/tickets/2904&quot; title=&quot;Ticket #2904&quot;&gt;#2904&lt;/a&gt; in the
future.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T10:37:21+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-25T10:37:25+01:00</updated-at>
      <user-id type="integer">36907</user-id>
      <version type="integer">16</version>
      <user-name>Anders Carling</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title>2.3.6</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T23:42:12+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable active_record autosave_association bug i18n
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug bugmash i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-25T23:42:17+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">17</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title>2.3.6</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I applied the patch and tested it. It looks to me. So +1

One thing though: currently the relationship of the Error object with the specific association is removed. I think this is a loss. E.g., if a pirate has_many :books and has_many :special_books, and the error is generated on the :special_books collection, then the Error object should know that for i18n purposes.

My suggestion is that autosave_association sets an +association+ attribute on the dup'ed Error object before adding it. In +generate_message+ you'd then also have this key:

@@@ ruby
  :&quot;models.#{klass.name.underscore}.association.#{association}.attributes.#{attribute}.#{message}&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I applied the patch and tested it. It looks to me. So +1&lt;/p&gt;
&lt;p&gt;One thing though: currently the relationship of the Error object
with the specific association is removed. I think this is a loss.
E.g., if a pirate has_many :books and has_many :special_books, and
the error is generated on the :special_books collection, then the
Error object should know that for i18n purposes.&lt;/p&gt;
&lt;p&gt;My suggestion is that autosave_association sets an +association+
attribute on the dup'ed Error object before adding it. In
+generate_message+ you'd then also have this key:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  :&quot;models.#{klass.name.underscore}.association.#{association}.attributes.#{attribute}.#{message}&quot;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T08:34:38+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug bugmash i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-27T08:34:41+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">18</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title>2.3.6</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T11:59:44+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 50064
:tag: 2-3-stable active_record autosave_association bug bugmash i18n
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug bugmash-review i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-09-27T11:59:48+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">19</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Lawrence, I didn't add that because I never had to use it. :) If someone needs such feature, another patch can be done.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Lawrence, I didn't add that because I never had to use it. :) If
someone needs such feature, another patch can be done.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-18T03:55:52+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable active_record autosave_association bug bugmash-review i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-10-18T03:55:53+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">20</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab]) Fix nested attributes error messages which is broken in 2.3.4. It still copies the message from child to parent, but does the lookup in the child, not in the parent, avoiding error messages duplication (as happened in 2.3.3). [#3147 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab&quot;
title=
&quot;Changeset [f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab]&quot;&gt;[f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab]&lt;/a&gt;)
Fix nested attributes error messages which is broken in 2.3.4. It
still copies the message from child to parent, but does the lookup
in the child, not in the parent, avoiding error messages
duplication (as happened in 2.3.3). [&lt;a href=
&quot;/projects/8994/tickets/3147&quot; title=&quot;Ticket #3147&quot;&gt;#3147&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Joshua Peek &lt;a&gt;josh@joshpeek.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab&quot;&gt;
http://github.com/rails/rails/commit/f5f7c40f3aedf88b2aef4e83602a4f...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-10-28T18:46:16+00:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable active_record autosave_association bug bugmash-review i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-10-28T18:46:17+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">21</version>
      <user-name>Repository</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This commit (f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab) introduces a new limitation for ActiveRecord::Base instances that has (to my knowledge) never been discussed.

Briefly: an error on an attribute cannot be set as the result of an exception computing the value of the attribute.

For example:

@@@ ruby
  def v
    compute_it
  rescue
    errors.add(:v, &quot;Dadgummit&quot;)
  end
@@@

After the aforementioned commit, when compute_it raise an exception, ActiveRecord::Error#initialize references v, which in turn raises another exception, which adds another error, which in turn proves that my stack is not infinitely deep.

Is it reasonable to assume that ActiveRecord::Error instances can reference its erroneous attribute's value?  If so, the above pattern won't work and instead a sentinel value will need to be set (U-G-L-Y).</body>
      <body-html>&lt;div&gt;&lt;p&gt;This commit (f5f7c40f3aedf88b2aef4e83602a4f41ffa5d0ab)
introduces a new limitation for ActiveRecord::Base instances that
has (to my knowledge) never been discussed.&lt;/p&gt;
&lt;p&gt;Briefly: an error on an attribute cannot be set as the result of
an exception computing the value of the attribute.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  def v
    compute_it
  rescue
    errors.add(:v, &quot;Dadgummit&quot;)
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After the aforementioned commit, when compute_it raise an
exception, ActiveRecord::Error#initialize references v, which in
turn raises another exception, which adds another error, which in
turn proves that my stack is not infinitely deep.&lt;/p&gt;
&lt;p&gt;Is it reasonable to assume that ActiveRecord::Error instances
can reference its erroneous attribute's value? If so, the above
pattern won't work and instead a sentinel value will need to be set
(U-G-L-Y).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-07T20:49:36+00:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable active_record autosave_association bug bugmash-review i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-11-07T20:49:40+00:00</updated-at>
      <user-id type="integer">17461</user-id>
      <version type="integer">22</version>
      <user-name>Chris Hapgood</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Hey @Chris, I cannot understand why exactly this error happens. Could you please provide a failing test so I can provide a fix?

Feel free to open a new ticket and assign it to me. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey @Chris, I cannot understand why exactly this error happens.
Could you please provide a failing test so I can provide a fix?&lt;/p&gt;
&lt;p&gt;Feel free to open a new ticket and assign it to me. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-08T01:58:46+00:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable active_record autosave_association bug bugmash-review i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-11-08T01:58:49+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">23</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Chris, I debugged a little bit. This error happens since ActiveRecord::Error was added and not after this commit. I created a new ticket with this issue at #3477.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Chris, I debugged a little bit. This error happens since
ActiveRecord::Error was added and not after this commit. I created
a new ticket with this issue at &lt;a href=
&quot;/projects/8994/tickets/3477&quot; title=&quot;Ticket #3477&quot;&gt;#3477&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-10T13:20:30+00:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable active_record autosave_association bug bugmash-review i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2009-11-10T13:20:33+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">24</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-15T18:40:56+01:00</created-at>
      <creator-id type="integer">36907</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable active_record autosave_association bug bugmash-review i18n
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3147</number>
      <permalink>activerecorderrorfull_message-broken-when-used-with-i18n-and-autosave-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable active_record autosave_association bug i18n</tag>
      <title>ActiveRecord::Error#full_message broken when used with I18n and autosave associations</title>
      <updated-at type="datetime">2010-05-15T18:41:00+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">25</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Anders Carling</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3147</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1d56d063b9503e5315594e7de2e804e8e7742b52</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-04T16:37:49+01:00</created-at>
      <filename>autosave_association_assocation_valid.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">261379</id>
      <size type="integer">498</size>
      <uploader-id type="integer">36907</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/261379/autosave_association_assocation_valid.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>71288383edfa1e6d1bbae26ba02fb1c8d162c941</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-22T13:48:45+01:00</created-at>
      <filename>0001-error-messages-nested-attributes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">275038</id>
      <size type="integer">7654</size>
      <uploader-id type="integer">19965</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/275038/0001-error-messages-nested-attributes.diff</url>
    </attachment>
  </attachments>
</ticket>
