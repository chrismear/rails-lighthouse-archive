<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-29T18:19:35+01:00</created-at>
  <creator-id type="integer">82384</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6644</number>
  <permalink>rails-generator-fails-with-existing-migration</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Rails Generator Fails with Existing Migration</title>
  <updated-at type="datetime">2011-03-29T18:19:36+01:00</updated-at>
  <user-id type="integer">82384</user-id>
  <version type="integer">1</version>
  <user-name>ramaboo</user-name>
  <creator-name>ramaboo</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6644</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a basic rails project and run a generator

$ rails g scaffold foo name:string

Pretty straight forward. I am creating a Foo model with a name field. The controller runs fine however if I run the same command again say something like this (realizing that I forgot the age field):

$ rails g scaffold foo name:string age:string

I get the following error
Another migration is already named create_foos: /var/www/chimporter.com/db/migrate/20110329171246_create_foos.rb

The preferred action would be some sort of Do you want to override prompt that is common on the other controller actions. If I delete the above migration file I can then run the second migration and overwrite the existing files as expected.

Solution
Add an overwrite prompt to the active_record generator.

David</original-body>
  <latest-body>I have a basic rails project and run a generator

$ rails g scaffold foo name:string

Pretty straight forward. I am creating a Foo model with a name field. The controller runs fine however if I run the same command again say something like this (realizing that I forgot the age field):

$ rails g scaffold foo name:string age:string

I get the following error
Another migration is already named create_foos: /var/www/chimporter.com/db/migrate/20110329171246_create_foos.rb

The preferred action would be some sort of Do you want to override prompt that is common on the other controller actions. If I delete the above migration file I can then run the second migration and overwrite the existing files as expected.

Solution
Add an overwrite prompt to the active_record generator.

David</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a basic rails project and run a generator&lt;/p&gt;
&lt;p&gt;$ rails g scaffold foo name:string&lt;/p&gt;
&lt;p&gt;Pretty straight forward. I am creating a Foo model with a name
field. The controller runs fine however if I run the same command
again say something like this (realizing that I forgot the age
field):&lt;/p&gt;
&lt;p&gt;$ rails g scaffold foo name:string age:string&lt;/p&gt;
&lt;p&gt;I get the following error&lt;br&gt;
Another migration is already named create_foos:
/var/www/chimporter.com/db/migrate/20110329171246_create_foos.rb&lt;/p&gt;
&lt;p&gt;The preferred action would be some sort of Do you want to
override prompt that is common on the other controller actions. If
I delete the above migration file I can then run the second
migration and overwrite the existing files as expected.&lt;/p&gt;
&lt;p&gt;Solution&lt;br&gt;
Add an overwrite prompt to the active_record generator.&lt;/p&gt;
&lt;p&gt;David&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a basic rails project and run a generator

$ rails g scaffold foo name:string

Pretty straight forward. I am creating a Foo model with a name field. The controller runs fine however if I run the same command again say something like this (realizing that I forgot the age field):

$ rails g scaffold foo name:string age:string

I get the following error
Another migration is already named create_foos: /var/www/chimporter.com/db/migrate/20110329171246_create_foos.rb

The preferred action would be some sort of Do you want to override prompt that is common on the other controller actions. If I delete the above migration file I can then run the second migration and overwrite the existing files as expected.

Solution
Add an overwrite prompt to the active_record generator.

David</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a basic rails project and run a generator&lt;/p&gt;
&lt;p&gt;$ rails g scaffold foo name:string&lt;/p&gt;
&lt;p&gt;Pretty straight forward. I am creating a Foo model with a name
field. The controller runs fine however if I run the same command
again say something like this (realizing that I forgot the age
field):&lt;/p&gt;
&lt;p&gt;$ rails g scaffold foo name:string age:string&lt;/p&gt;
&lt;p&gt;I get the following error&lt;br&gt;
Another migration is already named create_foos:
/var/www/chimporter.com/db/migrate/20110329171246_create_foos.rb&lt;/p&gt;
&lt;p&gt;The preferred action would be some sort of Do you want to
override prompt that is common on the other controller actions. If
I delete the above migration file I can then run the second
migration and overwrite the existing files as expected.&lt;/p&gt;
&lt;p&gt;Solution&lt;br&gt;
Add an overwrite prompt to the active_record generator.&lt;/p&gt;
&lt;p&gt;David&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-29T18:19:35+01:00</created-at>
      <creator-id type="integer">82384</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6644</number>
      <permalink>rails-generator-fails-with-existing-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails Generator Fails with Existing Migration</title>
      <updated-at type="datetime">2011-03-29T18:19:36+01:00</updated-at>
      <user-id type="integer">82384</user-id>
      <version type="integer">1</version>
      <user-name>ramaboo</user-name>
      <creator-name>ramaboo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6644</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
