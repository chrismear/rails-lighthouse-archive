<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-11T18:11:15+00:00</created-at>
  <creator-id type="integer">119123</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5955</number>
  <permalink>rails3-activerecordautosaveassociationvalidate_single_association-being-triggered-when-it-shouldnt</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>rails3: ActiveRecord::AutosaveAssociation.validate_single_association being triggered when it shouldn't</title>
  <updated-at type="datetime">2011-02-11T19:18:59+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>John G.</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5955</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm noticing Rails call [`ActiveRecord::AutosaveAssociation.validate_single_association`][1] when I save a model that belongs to another, though it shouldn't be according to the documentation. The documentation says that this method will be called when `:validate` or `:autosave` is turned on for an association, and I haven't done that.

This is causing me an issue because of the way I have set up my models and the actions that are performed before validation occurs. Let's take for example a User and Post model. 

 - A user has many posts. 
 - A post belongs to a user.


**`abstract_model.rb`**

    class AbstractModel &lt; ActiveRecord::Base
      self.abstract_class = true
      before_validation :foo
      attr_accessor :special_msg
      
      def foo
        puts special_msg
      end
    end

**`user.rb`**

    class User &lt; AbstractModel
       has_many :posts
    end

**`post.rb`**

    class Post &lt; AbstractModel
      belongs_to :user
    end

Notice that I haven't defined `:validate` or `:autosave` on the association.

**`PostsController.update`**
    def update
      @post = Post.find(params[:id]
      @post.special_msg = &quot;Dumbledore dies, so does Hedwig&quot;
      @post.update_attributes(params[:post])
    end

Using the debugger, I noticed the following:

 * `AbstractModel.foo` gets called 3 times from the last line of `PostsController.update`
   * The first and second calls:
     * It is being called on an instance of `Post`
     * It is being called via
       * `ActiveRecord::Validations`
       * `ActiveModel::Validations`
     * `special_msg` is not blank
   * The third call:
     * It is being called on a instance of **`User`**, ***not*** `Post`
     * it is being called via 
       * `ActiveRecord::Validations`
       * **`ActiveRecord::AutosaveAssociation.validate_single_association`**
       * `ActiveModel::Validations`
     * `special_msg` is **blank** (`nil`)

I've actually posted this question on [Stackoverflow][2] as well, but so far, no answers.

  [1]: http://api.rubyonrails.org/classes/ActiveRecord/AutosaveAssociation.html#method-i-validate_single_association
  [2]: http://stackoverflow.com/questions/4148397/rails3-activerecordautosaveassociation-validate-single-association-being-trigg</original-body>
  <latest-body>I'm noticing Rails call [`ActiveRecord::AutosaveAssociation.validate_single_association`][1] when I save a model that belongs to another, though it shouldn't be according to the documentation. The documentation says that this method will be called when `:validate` or `:autosave` is turned on for an association, and I haven't done that.

This is causing me an issue because of the way I have set up my models and the actions that are performed before validation occurs. Let's take for example a User and Post model. 

 - A user has many posts. 
 - A post belongs to a user.


**`abstract_model.rb`**

    class AbstractModel &lt; ActiveRecord::Base
      self.abstract_class = true
      before_validation :foo
      attr_accessor :special_msg
      
      def foo
        puts special_msg
      end
    end

**`user.rb`**

    class User &lt; AbstractModel
       has_many :posts
    end

**`post.rb`**

    class Post &lt; AbstractModel
      belongs_to :user
    end

Notice that I haven't defined `:validate` or `:autosave` on the association.

**`PostsController.update`**
    def update
      @post = Post.find(params[:id]
      @post.special_msg = &quot;Dumbledore dies, so does Hedwig&quot;
      @post.update_attributes(params[:post])
    end

Using the debugger, I noticed the following:

 * `AbstractModel.foo` gets called 3 times from the last line of `PostsController.update`
   * The first and second calls:
     * It is being called on an instance of `Post`
     * It is being called via
       * `ActiveRecord::Validations`
       * `ActiveModel::Validations`
     * `special_msg` is not blank
   * The third call:
     * It is being called on a instance of **`User`**, ***not*** `Post`
     * it is being called via 
       * `ActiveRecord::Validations`
       * **`ActiveRecord::AutosaveAssociation.validate_single_association`**
       * `ActiveModel::Validations`
     * `special_msg` is **blank** (`nil`)

I've actually posted this question on [Stackoverflow][2] as well, but so far, no answers.

  [1]: http://api.rubyonrails.org/classes/ActiveRecord/AutosaveAssociation.html#method-i-validate_single_association
  [2]: http://stackoverflow.com/questions/4148397/rails3-activerecordautosaveassociation-validate-single-association-being-trigg</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm noticing Rails call &lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveRecord/AutosaveAssociation.html#method-i-validate_single_association&quot;&gt;
&lt;code&gt;ActiveRecord::AutosaveAssociation.validate_single_association&lt;/code&gt;&lt;/a&gt;
when I save a model that belongs to another, though it shouldn't be
according to the documentation. The documentation says that this
method will be called when &lt;code&gt;:validate&lt;/code&gt; or
&lt;code&gt;:autosave&lt;/code&gt; is turned on for an association, and I
haven't done that.&lt;/p&gt;
&lt;p&gt;This is causing me an issue because of the way I have set up my
models and the actions that are performed before validation occurs.
Let's take for example a User and Post model.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A user has many posts.&lt;/li&gt;
&lt;li&gt;A post belongs to a user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;abstract_model.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class AbstractModel &amp;lt; ActiveRecord::Base
  self.abstract_class = true
  before_validation :foo
  attr_accessor :special_msg

  def foo
    puts special_msg
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;user.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class User &amp;lt; AbstractModel
   has_many :posts
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;post.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post &amp;lt; AbstractModel
  belongs_to :user
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that I haven't defined &lt;code&gt;:validate&lt;/code&gt; or
&lt;code&gt;:autosave&lt;/code&gt; on the association.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PostsController.update&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def update
  @post = Post.find(params[:id]
  @post.special_msg = &quot;Dumbledore dies, so does Hedwig&quot;
  @post.update_attributes(params[:post])
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Using the debugger, I noticed the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AbstractModel.foo&lt;/code&gt; gets called 3 times from the
last line of &lt;code&gt;PostsController.update&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;The first and second calls:
&lt;ul&gt;
&lt;li&gt;It is being called on an instance of &lt;code&gt;Post&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It is being called via
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ActiveRecord::Validations&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ActiveModel::Validations&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;special_msg&lt;/code&gt; is not blank&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The third call:
&lt;ul&gt;
&lt;li&gt;It is being called on a instance of
&lt;strong&gt;&lt;code&gt;User&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt;
&lt;code&gt;Post&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;it is being called via
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ActiveRecord::Validations&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;ActiveRecord::AutosaveAssociation.validate_single_association&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ActiveModel::Validations&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;special_msg&lt;/code&gt; is &lt;strong&gt;blank&lt;/strong&gt;
(&lt;code&gt;nil&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've actually posted this question on &lt;a href=
&quot;http://stackoverflow.com/questions/4148397/rails3-activerecordautosaveassociation-validate-single-association-being-trigg&quot;&gt;
Stackoverflow&lt;/a&gt; as well, but so far, no answers.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm noticing Rails call [`ActiveRecord::AutosaveAssociation.validate_single_association`][1] when I save a model that belongs to another, though it shouldn't be according to the documentation. The documentation says that this method will be called when `:validate` or `:autosave` is turned on for an association, and I haven't done that.

This is causing me an issue because of the way I have set up my models and the actions that are performed before validation occurs. Let's take for example a User and Post model. 

 - A user has many posts. 
 - A post belongs to a user.


**`abstract_model.rb`**

    class AbstractModel &lt; ActiveRecord::Base
      self.abstract_class = true
      before_validation :foo
      attr_accessor :special_msg
      
      def foo
        puts special_msg
      end
    end

**`user.rb`**

    class User &lt; AbstractModel
       has_many :posts
    end

**`post.rb`**

    class Post &lt; AbstractModel
      belongs_to :user
    end

Notice that I haven't defined `:validate` or `:autosave` on the association.

**`PostsController.update`**
    def update
      @post = Post.find(params[:id]
      @post.special_msg = &quot;Dumbledore dies, so does Hedwig&quot;
      @post.update_attributes(params[:post])
    end

Using the debugger, I noticed the following:

 * `AbstractModel.foo` gets called 3 times from the last line of `PostsController.update`
   * The first and second calls:
     * It is being called on an instance of `Post`
     * It is being called via
       * `ActiveRecord::Validations`
       * `ActiveModel::Validations`
     * `special_msg` is not blank
   * The third call:
     * It is being called on a instance of **`User`**, ***not*** `Post`
     * it is being called via 
       * `ActiveRecord::Validations`
       * **`ActiveRecord::AutosaveAssociation.validate_single_association`**
       * `ActiveModel::Validations`
     * `special_msg` is **blank** (`nil`)

I've actually posted this question on [Stackoverflow][2] as well, but so far, no answers.

  [1]: http://api.rubyonrails.org/classes/ActiveRecord/AutosaveAssociation.html#method-i-validate_single_association
  [2]: http://stackoverflow.com/questions/4148397/rails3-activerecordautosaveassociation-validate-single-association-being-trigg</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm noticing Rails call &lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveRecord/AutosaveAssociation.html#method-i-validate_single_association&quot;&gt;
&lt;code&gt;ActiveRecord::AutosaveAssociation.validate_single_association&lt;/code&gt;&lt;/a&gt;
when I save a model that belongs to another, though it shouldn't be
according to the documentation. The documentation says that this
method will be called when &lt;code&gt;:validate&lt;/code&gt; or
&lt;code&gt;:autosave&lt;/code&gt; is turned on for an association, and I
haven't done that.&lt;/p&gt;
&lt;p&gt;This is causing me an issue because of the way I have set up my
models and the actions that are performed before validation occurs.
Let's take for example a User and Post model.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A user has many posts.&lt;/li&gt;
&lt;li&gt;A post belongs to a user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;abstract_model.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class AbstractModel &amp;lt; ActiveRecord::Base
  self.abstract_class = true
  before_validation :foo
  attr_accessor :special_msg

  def foo
    puts special_msg
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;user.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class User &amp;lt; AbstractModel
   has_many :posts
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;post.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post &amp;lt; AbstractModel
  belongs_to :user
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that I haven't defined &lt;code&gt;:validate&lt;/code&gt; or
&lt;code&gt;:autosave&lt;/code&gt; on the association.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PostsController.update&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def update
  @post = Post.find(params[:id]
  @post.special_msg = &quot;Dumbledore dies, so does Hedwig&quot;
  @post.update_attributes(params[:post])
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Using the debugger, I noticed the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AbstractModel.foo&lt;/code&gt; gets called 3 times from the
last line of &lt;code&gt;PostsController.update&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;The first and second calls:
&lt;ul&gt;
&lt;li&gt;It is being called on an instance of &lt;code&gt;Post&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It is being called via
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ActiveRecord::Validations&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ActiveModel::Validations&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;special_msg&lt;/code&gt; is not blank&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The third call:
&lt;ul&gt;
&lt;li&gt;It is being called on a instance of
&lt;strong&gt;&lt;code&gt;User&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt;
&lt;code&gt;Post&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;it is being called via
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ActiveRecord::Validations&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;ActiveRecord::AutosaveAssociation.validate_single_association&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ActiveModel::Validations&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;special_msg&lt;/code&gt; is &lt;strong&gt;blank&lt;/strong&gt;
(&lt;code&gt;nil&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've actually posted this question on &lt;a href=
&quot;http://stackoverflow.com/questions/4148397/rails3-activerecordautosaveassociation-validate-single-association-being-trigg&quot;&gt;
Stackoverflow&lt;/a&gt; as well, but so far, no answers.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T18:11:15+00:00</created-at>
      <creator-id type="integer">119123</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5955</number>
      <permalink>rails3-activerecordautosaveassociationvalidate_single_association-being-triggered-when-it-shouldnt</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rails3: ActiveRecord::AutosaveAssociation.validate_single_association being triggered when it shouldn't</title>
      <updated-at type="datetime">2010-11-11T18:32:47+00:00</updated-at>
      <user-id type="integer">119123</user-id>
      <version type="integer">1</version>
      <user-name>John G.</user-name>
      <creator-name>John G.</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5955</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-11T19:18:04+00:00</created-at>
      <creator-id type="integer">119123</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5955</number>
      <permalink>rails3-activerecordautosaveassociationvalidate_single_association-being-triggered-when-it-shouldnt</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>rails3: ActiveRecord::AutosaveAssociation.validate_single_association being triggered when it shouldn't</title>
      <updated-at type="datetime">2011-02-11T19:18:59+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>John G.</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5955</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-11T19:18:04+00:00</created-at>
      <creator-id type="integer">119123</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5955</number>
      <permalink>rails3-activerecordautosaveassociationvalidate_single_association-being-triggered-when-it-shouldnt</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>rails3: ActiveRecord::AutosaveAssociation.validate_single_association being triggered when it shouldn't</title>
      <updated-at type="datetime">2011-02-11T19:18:15+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>John G.</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5955</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
