<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-02T12:34:31+01:00</created-at>
  <creator-id type="integer">37240</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3312</number>
  <permalink>patch-remote_function-shouldnt-escape-string-urls</permalink>
  <priority type="integer">156613</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>actionpack actionview action_pack action_view patch remote_function</tag>
  <title>[PATCH] remote_function shouldn't escape string urls</title>
  <updated-at type="datetime">2010-10-06T06:41:27+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Phil Ross</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3312</url>
  <priority-name nil="true"></priority-name>
  <original-body>When a URL specified as a hash is passed to remote_function, it (correctly) does not HTML-escape the URL in the output:

@@@ ruby
  remote_function(:url =&gt; {:action =&gt; &quot;whatnot&quot;, :a =&gt; 10, :b =&gt; 20})
@@@

results in:

@@@ javascript
  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;b=20', {asynchronous:true, evalScripts:true})
@@@

However, when a string is specified, the URL is escaped:

@@@ ruby
  remote_function(:url =&gt; 'http://www.example.com/whatnot?a=10&amp;b=20')
@@@

results in:

@@@ javascript
  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;amp;b=20', {asynchronous:true, evalScripts:true})
@@@

This results in a problem when using named routes with remote_function in &lt;script&gt; blocks. &lt;script&gt; is CDATA in HTML, so the &amp;amp; gets passed to the server.

The attached patch causes string URLs to no longer be HTML-escaped. It applies cleanly against master and 2-3-stable.

Note that this is similar to #2593 which adds an :escape_url option.</original-body>
  <latest-body>When a URL specified as a hash is passed to remote_function, it (correctly) does not HTML-escape the URL in the output:

@@@ ruby
  remote_function(:url =&gt; {:action =&gt; &quot;whatnot&quot;, :a =&gt; 10, :b =&gt; 20})
@@@

results in:

@@@ javascript
  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;b=20', {asynchronous:true, evalScripts:true})
@@@

However, when a string is specified, the URL is escaped:

@@@ ruby
  remote_function(:url =&gt; 'http://www.example.com/whatnot?a=10&amp;b=20')
@@@

results in:

@@@ javascript
  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;amp;b=20', {asynchronous:true, evalScripts:true})
@@@

This results in a problem when using named routes with remote_function in &lt;script&gt; blocks. &lt;script&gt; is CDATA in HTML, so the &amp;amp; gets passed to the server.

The attached patch causes string URLs to no longer be HTML-escaped. It applies cleanly against master and 2-3-stable.

Note that this is similar to #2593 which adds an :escape_url option.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When a URL specified as a hash is passed to remote_function, it
(correctly) does not HTML-escape the URL in the output:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  remote_function(:url =&amp;gt; {:action =&amp;gt; &quot;whatnot&quot;, :a =&amp;gt; 10, :b =&amp;gt; 20})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;results in:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;javascript&quot;&gt;  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;amp;b=20', {asynchronous:true, evalScripts:true})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, when a string is specified, the URL is escaped:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  remote_function(:url =&amp;gt; 'http://www.example.com/whatnot?a=10&amp;amp;b=20')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;results in:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;javascript&quot;&gt;  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;amp;amp;b=20', {asynchronous:true, evalScripts:true})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This results in a problem when using named routes with
remote_function in&lt;/p&gt;
&lt;p&gt;The attached patch causes string URLs to no longer be
HTML-escaped. It applies cleanly against master and 2-3-stable.&lt;/p&gt;
&lt;p&gt;Note that this is similar to &lt;a href=
&quot;/projects/8994/tickets/2593&quot; title=&quot;Ticket #2593&quot;&gt;#2593&lt;/a&gt; which
adds an :escape_url option.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When a URL specified as a hash is passed to remote_function, it (correctly) does not HTML-escape the URL in the output:

@@@ ruby
  remote_function(:url =&gt; {:action =&gt; &quot;whatnot&quot;, :a =&gt; 10, :b =&gt; 20})
@@@

results in:

@@@ javascript
  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;b=20', {asynchronous:true, evalScripts:true})
@@@

However, when a string is specified, the URL is escaped:

@@@ ruby
  remote_function(:url =&gt; 'http://www.example.com/whatnot?a=10&amp;b=20')
@@@

results in:

@@@ javascript
  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;amp;b=20', {asynchronous:true, evalScripts:true})
@@@

This results in a problem when using named routes with remote_function in &lt;script&gt; blocks. &lt;script&gt; is CDATA in HTML, so the &amp;amp; gets passed to the server.

The attached patch causes string URLs to no longer be HTML-escaped. It applies cleanly against master and 2-3-stable.

Note that this is similar to #2593 which adds an :escape_url option.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When a URL specified as a hash is passed to remote_function, it
(correctly) does not HTML-escape the URL in the output:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  remote_function(:url =&amp;gt; {:action =&amp;gt; &quot;whatnot&quot;, :a =&amp;gt; 10, :b =&amp;gt; 20})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;results in:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;javascript&quot;&gt;  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;amp;b=20', {asynchronous:true, evalScripts:true})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, when a string is specified, the URL is escaped:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  remote_function(:url =&amp;gt; 'http://www.example.com/whatnot?a=10&amp;amp;b=20')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;results in:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;javascript&quot;&gt;  new Ajax.Request('http://www.example.com/whatnot?a=10&amp;amp;amp;b=20', {asynchronous:true, evalScripts:true})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This results in a problem when using named routes with
remote_function in&lt;/p&gt;
&lt;p&gt;The attached patch causes string URLs to no longer be
HTML-escaped. It applies cleanly against master and 2-3-stable.&lt;/p&gt;
&lt;p&gt;Note that this is similar to &lt;a href=
&quot;/projects/8994/tickets/2593&quot; title=&quot;Ticket #2593&quot;&gt;#2593&lt;/a&gt; which
adds an :escape_url option.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-02T12:34:31+01:00</created-at>
      <creator-id type="integer">37240</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3312</number>
      <permalink>patch-remote_function-shouldnt-escape-string-urls</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack actionview action_pack action_view patch remote_function</tag>
      <title>[PATCH] remote_function shouldn't escape string urls</title>
      <updated-at type="datetime">2009-10-02T12:34:35+01:00</updated-at>
      <user-id type="integer">37240</user-id>
      <version type="integer">1</version>
      <user-name>Phil Ross</user-name>
      <creator-name>Phil Ross</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3312</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've just looked at #2593 more closely. #2593 is about disabling the escape_javascript part of remote_function, which isn't related to this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've just looked at &lt;a href=&quot;/projects/8994/tickets/2593&quot; title=
&quot;Ticket #2593&quot;&gt;#2593&lt;/a&gt; more closely. &lt;a href=
&quot;/projects/8994/tickets/2593&quot; title=&quot;Ticket #2593&quot;&gt;#2593&lt;/a&gt; is
about disabling the escape_javascript part of remote_function,
which isn't related to this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-02T12:36:41+01:00</created-at>
      <creator-id type="integer">37240</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3312</number>
      <permalink>patch-remote_function-shouldnt-escape-string-urls</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack actionview action_pack action_view patch remote_function</tag>
      <title>[PATCH] remote_function shouldn't escape string urls</title>
      <updated-at type="datetime">2009-10-02T12:36:46+01:00</updated-at>
      <user-id type="integer">37240</user-id>
      <version type="integer">2</version>
      <user-name>Phil Ross</user-name>
      <creator-name>Phil Ross</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3312</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:41:25+01:00</created-at>
      <creator-id type="integer">37240</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3312</number>
      <permalink>patch-remote_function-shouldnt-escape-string-urls</permalink>
      <priority type="integer">156613</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack actionview action_pack action_view patch remote_function</tag>
      <title>[PATCH] remote_function shouldn't escape string urls</title>
      <updated-at type="datetime">2010-10-06T06:41:27+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Phil Ross</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3312</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f872e7324a609b201d3627b3a77107a9148131ea</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-02T12:34:33+01:00</created-at>
      <filename>fix_remote_function_string_url_escape.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">284687</id>
      <size type="integer">3175</size>
      <uploader-id type="integer">37240</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/284687/fix_remote_function_string_url_escape.patch</url>
    </attachment>
  </attachments>
</ticket>
