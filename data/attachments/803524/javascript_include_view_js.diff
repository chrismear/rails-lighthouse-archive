From bec5aae28542c83989a8b3bf00eb1fc2bc89303d Mon Sep 17 00:00:00 2001
From: Matt D <calcop@gmail.com>
Date: Sun, 5 Dec 2010 17:12:04 -0800
Subject: [PATCH] Created javascript_include_view_js helper method. This method automatically includes JavaScript sources based on the current controller.

---
 .../asset_tag_helpers/javascript_tag_helpers.rb    |   30 ++++++++++++++++++++
 1 files changed, 30 insertions(+), 0 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers.rb b/actionpack/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers.rb
index 6581e1d..9e42762 100644
--- a/actionpack/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers.rb
+++ b/actionpack/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers.rb
@@ -165,6 +165,36 @@ module ActionView
           @javascript_include ||= JavascriptIncludeTag.new(config, asset_paths)
           @javascript_include.include_tag(*sources)
         end
+        
+        # Returns an HTML script tag for a JavaScript +source+ named after the current 
+        # respective Controller. A Controller's JavaScript source is named after the
+        # controller with '_java.js' appended to the end. This method automatically
+        # includes the correct Controlelr JavaScript source without the need to specify
+        # any arguments.
+        #
+        # * = A JavaScript tag will only be created if the JavaScript file exists
+        # 
+        # ==== Example
+        #   To demonstrate the usefulness of this method, assume you have a controller
+        #   named *login*. Becuase you like to stick with the newest standars, you want
+        #   to use some unobtrusive JavaScript. Instead of cluttering your HTML with
+        #   JavaScript tags, you can just create a JavaScript source named: *login_java.js*
+        #   and place it in _public/javascripts_. Now, when the the following method is
+        #   called, the following is generated (assuming the source file exists):
+        #
+        #   javascript_include_view_js # => 
+        #     <script type="text/javascript" src="/javascripts/login_java.js?6172409507"></script>
+        #
+        #   Mulitpul path Controllers are also supported with this method. Instead of using
+        #   a forward slash _/_ an underscore is used *_* instead. Review the following
+        #   example for a Controller named *management/login*:
+        #
+        #   javascript_include_view_js # => 
+        #     <script type="text/javascript" src="/javascript/management_login_java.js?6172409507"></script>
+        def javascript_include_view_js
+          jsfile = "#{controller.controller_path}_java.js".gsub(/\//, '_')
+          javascript_include_tag jsfile if File.exists?("#{config.javascripts_dir}/#{jsfile}")
+        end
 
       end
 
-- 
1.7.2.3

