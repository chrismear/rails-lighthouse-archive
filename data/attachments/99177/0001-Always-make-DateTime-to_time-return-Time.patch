From 9ed05cdebfd518978c867636b83d6a299a28f754 Mon Sep 17 00:00:00 2001
From: Magnus Holm <judofyr@gmail.com>
Date: Wed, 7 Jan 2009 23:03:19 +0100
Subject: [PATCH] Always make DateTime#to_time return Time

---
 .../core_ext/date_time/conversions.rb              |   11 ++++++++---
 activesupport/test/core_ext/date_time_ext_test.rb  |    3 +--
 2 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/date_time/conversions.rb b/activesupport/lib/active_support/core_ext/date_time/conversions.rb
index c0175a5..5647cc3 100644
--- a/activesupport/lib/active_support/core_ext/date_time/conversions.rb
+++ b/activesupport/lib/active_support/core_ext/date_time/conversions.rb
@@ -69,10 +69,15 @@ module ActiveSupport #:nodoc:
           ::Date.new(year, month, day)
         end
 
-        # Attempts to convert self to a Ruby Time object; returns self if out of range of Ruby Time class
-        # If self has an offset other than 0, self will just be returned unaltered, since there's no clean way to map it to a Time
+        # Attempts to convert self to a Ruby Time object.
+        # The resulting Time will _always_ end up in UTC.
         def to_time
-          self.offset == 0 ? ::Time.utc_time(year, month, day, hour, min, sec) : self
+          dt = if self.offset == 0
+            self
+          else
+            new_offset(0)
+          end
+          ::Time.utc_time(dt.year, dt.month, dt.day, dt.hour, dt.min, dt.sec)
         end
 
         # To be able to keep Times, Dates and DateTimes interchangeable on conversions
diff --git a/activesupport/test/core_ext/date_time_ext_test.rb b/activesupport/test/core_ext/date_time_ext_test.rb
index 45eb52c..5a75307 100644
--- a/activesupport/test/core_ext/date_time_ext_test.rb
+++ b/activesupport/test/core_ext/date_time_ext_test.rb
@@ -35,8 +35,7 @@ class DateTimeExtCalculationsTest < Test::Unit::TestCase
   def test_to_time
     assert_equal Time.utc(2005, 2, 21, 10, 11, 12), DateTime.new(2005, 2, 21, 10, 11, 12, 0, 0).to_time
     assert_equal Time.utc_time(2039, 2, 21, 10, 11, 12), DateTime.new(2039, 2, 21, 10, 11, 12, 0, 0).to_time
-    # DateTimes with offsets other than 0 are returned unaltered
-    assert_equal DateTime.new(2005, 2, 21, 10, 11, 12, Rational(-5, 24)), DateTime.new(2005, 2, 21, 10, 11, 12, Rational(-5, 24)).to_time
+    assert_equal Time.utc(2005, 2, 21, 15, 11, 12), DateTime.new(2005, 2, 21, 10, 11, 12, Rational(-5, 24)).to_time
   end
 
   def test_seconds_since_midnight
-- 
1.5.5.1

