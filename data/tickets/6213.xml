<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-22T23:07:29+00:00</created-at>
  <creator-id type="integer">130030</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6213</number>
  <permalink>should-pass-tableengine-in-sanitize_sql_hash_for_conditions</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>should pass table.engine in sanitize_sql_hash_for_conditions</title>
  <updated-at type="datetime">2011-03-23T00:00:15+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">3</version>
  <user-name>rails</user-name>
  <creator-name>bewang</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6213</url>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ ruby
class MyBase &lt; ActiveRecord::Base
end

class Rule &lt; MyBase
  has_many :rule_associations
  has_many :evaluations, :through=&gt;:rule_associations, 
    :conditions =&gt; { 'join_table.column' =&gt; 'T' }
end

MyBase.establish_connection
@@@

ActiveRecord will fail in sanitize_sql_hash_for_conditions with error like

@@@
[INFO]       undefined method `spec' for nil:NilClass (NoMethodError)
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:26
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `call'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `default'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `visitor_for'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/nodes/node.rb:32:in `to_sql'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `map'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1225:in `sanitize_sql_for_conditions'
@@@

passing tabl.engine to b.to_sql fix the issue.

@@@
        def sanitize_sql_hash_for_conditions(attrs, default_table_name = self.table_name)
          attrs = expand_hash_conditions_for_aggregates(attrs)

          table = Arel::Table.new(self.table_name, :engine =&gt; arel_engine, :as =&gt; default_table_name)
          builder = PredicateBuilder.new(arel_engine)
          builder.build_from_hash(attrs, table).map{ |b| b.to_sql *table.engine* }.join(' AND ')
        end
@@@

Environments:
jruby-1.5.6
activerecord_3.0.3</original-body>
  <latest-body>@@@ ruby
class MyBase &lt; ActiveRecord::Base
end

class Rule &lt; MyBase
  has_many :rule_associations
  has_many :evaluations, :through=&gt;:rule_associations, 
    :conditions =&gt; { 'join_table.column' =&gt; 'T' }
end

MyBase.establish_connection
@@@

ActiveRecord will fail in sanitize_sql_hash_for_conditions with error like

@@@
[INFO]       undefined method `spec' for nil:NilClass (NoMethodError)
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:26
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `call'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `default'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `visitor_for'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/nodes/node.rb:32:in `to_sql'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `map'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1225:in `sanitize_sql_for_conditions'
@@@

passing tabl.engine to b.to_sql fix the issue.

@@@
        def sanitize_sql_hash_for_conditions(attrs, default_table_name = self.table_name)
          attrs = expand_hash_conditions_for_aggregates(attrs)

          table = Arel::Table.new(self.table_name, :engine =&gt; arel_engine, :as =&gt; default_table_name)
          builder = PredicateBuilder.new(arel_engine)
          builder.build_from_hash(attrs, table).map{ |b| b.to_sql *table.engine* }.join(' AND ')
        end
@@@

Environments:
jruby-1.5.6
activerecord_3.0.3</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class MyBase &amp;lt; ActiveRecord::Base
end

class Rule &amp;lt; MyBase
  has_many :rule_associations
  has_many :evaluations, :through=&amp;gt;:rule_associations, 
    :conditions =&amp;gt; { 'join_table.column' =&amp;gt; 'T' }
end

MyBase.establish_connection&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;ActiveRecord will fail in sanitize_sql_hash_for_conditions with
error like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[INFO]       undefined method `spec' for nil:NilClass (NoMethodError)
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:26
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `call'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `default'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `visitor_for'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/nodes/node.rb:32:in `to_sql'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `map'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1225:in `sanitize_sql_for_conditions'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;passing tabl.engine to b.to_sql fix the issue.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;        def sanitize_sql_hash_for_conditions(attrs, default_table_name = self.table_name)
          attrs = expand_hash_conditions_for_aggregates(attrs)

          table = Arel::Table.new(self.table_name, :engine =&amp;gt; arel_engine, :as =&amp;gt; default_table_name)
          builder = PredicateBuilder.new(arel_engine)
          builder.build_from_hash(attrs, table).map{ |b| b.to_sql *table.engine* }.join(' AND ')
        end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Environments:&lt;br&gt;
jruby-1.5.6&lt;br&gt;
activerecord_3.0.3&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
class MyBase &lt; ActiveRecord::Base
end

class Rule &lt; MyBase
  has_many :rule_associations
  has_many :evaluations, :through=&gt;:rule_associations, 
    :conditions =&gt; { 'join_table.column' =&gt; 'T' }
end

MyBase.establish_connection
@@@

ActiveRecord will fail in sanitize_sql_hash_for_conditions with error like

@@@
[INFO]       undefined method `spec' for nil:NilClass (NoMethodError)
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:26
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `call'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `default'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `visitor_for'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/nodes/node.rb:32:in `to_sql'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `map'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1225:in `sanitize_sql_for_conditions'
@@@

passing tabl.engine to b.to_sql fix the issue.

@@@
        def sanitize_sql_hash_for_conditions(attrs, default_table_name = self.table_name)
          attrs = expand_hash_conditions_for_aggregates(attrs)

          table = Arel::Table.new(self.table_name, :engine =&gt; arel_engine, :as =&gt; default_table_name)
          builder = PredicateBuilder.new(arel_engine)
          builder.build_from_hash(attrs, table).map{ |b| b.to_sql *table.engine* }.join(' AND ')
        end
@@@

Environments:
jruby-1.5.6
activerecord_3.0.3</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class MyBase &amp;lt; ActiveRecord::Base
end

class Rule &amp;lt; MyBase
  has_many :rule_associations
  has_many :evaluations, :through=&amp;gt;:rule_associations, 
    :conditions =&amp;gt; { 'join_table.column' =&amp;gt; 'T' }
end

MyBase.establish_connection&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;ActiveRecord will fail in sanitize_sql_hash_for_conditions with
error like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[INFO]       undefined method `spec' for nil:NilClass (NoMethodError)
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:26
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `call'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `default'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/visitors.rb:31:in `visitor_for'
[INFO]       c:/temp/.m2/repository/.jruby/gems/arel-2.0.6/lib/arel/nodes/node.rb:32:in `to_sql'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `map'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1296:in `sanitize_sql_hash_for_conditions'
[INFO]       c:/temp/.m2/repository/.jruby/gems/activerecord-3.0.3/lib/active_record/base.rb:1225:in `sanitize_sql_for_conditions'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;passing tabl.engine to b.to_sql fix the issue.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;        def sanitize_sql_hash_for_conditions(attrs, default_table_name = self.table_name)
          attrs = expand_hash_conditions_for_aggregates(attrs)

          table = Arel::Table.new(self.table_name, :engine =&amp;gt; arel_engine, :as =&amp;gt; default_table_name)
          builder = PredicateBuilder.new(arel_engine)
          builder.build_from_hash(attrs, table).map{ |b| b.to_sql *table.engine* }.join(' AND ')
        end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Environments:&lt;br&gt;
jruby-1.5.6&lt;br&gt;
activerecord_3.0.3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-22T23:07:29+00:00</created-at>
      <creator-id type="integer">130030</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6213</number>
      <permalink>should-pass-tableengine-in-sanitize_sql_hash_for_conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>should pass table.engine in sanitize_sql_hash_for_conditions</title>
      <updated-at type="datetime">2010-12-22T23:07:31+00:00</updated-at>
      <user-id type="integer">130030</user-id>
      <version type="integer">1</version>
      <user-name>bewang</user-name>
      <creator-name>bewang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6213</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-23T00:00:08+00:00</created-at>
      <creator-id type="integer">130030</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6213</number>
      <permalink>should-pass-tableengine-in-sanitize_sql_hash_for_conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>should pass table.engine in sanitize_sql_hash_for_conditions</title>
      <updated-at type="datetime">2011-03-23T00:00:11+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>bewang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6213</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-23T00:00:09+00:00</created-at>
      <creator-id type="integer">130030</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6213</number>
      <permalink>should-pass-tableengine-in-sanitize_sql_hash_for_conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>should pass table.engine in sanitize_sql_hash_for_conditions</title>
      <updated-at type="datetime">2011-03-23T00:00:15+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>bewang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6213</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
