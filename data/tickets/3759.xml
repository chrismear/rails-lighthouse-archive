<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-20T22:14:15+00:00</created-at>
  <creator-id type="integer">14714</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3759</number>
  <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>active_record performance rails3</tag>
  <title>Rails 3 AR performance has regressed since Rails 2</title>
  <updated-at type="datetime">2010-08-29T08:49:17+01:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">7</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Sam Saffron</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
  <priority-name>Low</priority-name>
  <original-body>Using a trivial model on both Rails 2 and 3: 

script/generate scaffold post title:string body:text 

I'm noticing both insert and create performance are much slower. This is for both dev and production environments. 

Rails 2 results: 

&lt;pre&gt;
ree-1.8.7-2009.10 &gt;  puts Benchmark.measure{1000.times{Post.create(:title =&gt; &quot;bla&quot;, :body =&gt; &quot;x&quot; * 1000)}}
  0.970000   0.480000   1.450000 (  2.923408)
 =&gt; nil
ree-1.8.7-2009.10 &gt;  puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.280000   0.320000   0.600000 (  0.593748)
&lt;/pre&gt;

Rails 3 results: 

&lt;pre&gt;
ree-1.8.7-2009.10 &gt; puts Benchmark.measure{1000.times{Post.create(:title =&gt; &quot;bla&quot;, :body =&gt; &quot;x&quot; * 1000)}}
  1.940000   0.590000   2.530000 (  3.883329)
ree-1.8.7-2009.10 &gt; puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.450000   0.710000   1.160000 (  1.162713)
&lt;/pre&gt;</original-body>
  <latest-body>Using a trivial model on both Rails 2 and 3: 

script/generate scaffold post title:string body:text 

I'm noticing both insert and create performance are much slower. This is for both dev and production environments. 

Rails 2 results: 

&lt;pre&gt;
ree-1.8.7-2009.10 &gt;  puts Benchmark.measure{1000.times{Post.create(:title =&gt; &quot;bla&quot;, :body =&gt; &quot;x&quot; * 1000)}}
  0.970000   0.480000   1.450000 (  2.923408)
 =&gt; nil
ree-1.8.7-2009.10 &gt;  puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.280000   0.320000   0.600000 (  0.593748)
&lt;/pre&gt;

Rails 3 results: 

&lt;pre&gt;
ree-1.8.7-2009.10 &gt; puts Benchmark.measure{1000.times{Post.create(:title =&gt; &quot;bla&quot;, :body =&gt; &quot;x&quot; * 1000)}}
  1.940000   0.590000   2.530000 (  3.883329)
ree-1.8.7-2009.10 &gt; puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.450000   0.710000   1.160000 (  1.162713)
&lt;/pre&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using a trivial model on both Rails 2 and 3:&lt;/p&gt;
&lt;p&gt;script/generate scaffold post title:string body:text&lt;/p&gt;
&lt;p&gt;I'm noticing both insert and create performance are much slower.
This is for both dev and production environments.&lt;/p&gt;
&lt;p&gt;Rails 2 results:&lt;/p&gt;
&lt;pre&gt;
ree-1.8.7-2009.10 &amp;gt;  puts Benchmark.measure{1000.times{Post.create(:title =&amp;gt; &quot;bla&quot;, :body =&amp;gt; &quot;x&quot; * 1000)}}
  0.970000   0.480000   1.450000 (  2.923408)
 =&amp;gt; nil
ree-1.8.7-2009.10 &amp;gt;  puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.280000   0.320000   0.600000 (  0.593748)
&lt;/pre&gt;
&lt;p&gt;Rails 3 results:&lt;/p&gt;
&lt;pre&gt;
ree-1.8.7-2009.10 &amp;gt; puts Benchmark.measure{1000.times{Post.create(:title =&amp;gt; &quot;bla&quot;, :body =&amp;gt; &quot;x&quot; * 1000)}}
  1.940000   0.590000   2.530000 (  3.883329)
ree-1.8.7-2009.10 &amp;gt; puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.450000   0.710000   1.160000 (  1.162713)
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using a trivial model on both Rails 2 and 3: 

script/generate scaffold post title:string body:text 

I'm noticing both insert and create performance are much slower. This is for both dev and production environments. 

Rails 2 results: 

&lt;pre&gt;
ree-1.8.7-2009.10 &gt;  puts Benchmark.measure{1000.times{Post.create(:title =&gt; &quot;bla&quot;, :body =&gt; &quot;x&quot; * 1000)}}
  0.970000   0.480000   1.450000 (  2.923408)
 =&gt; nil
ree-1.8.7-2009.10 &gt;  puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.280000   0.320000   0.600000 (  0.593748)
&lt;/pre&gt;

Rails 3 results: 

&lt;pre&gt;
ree-1.8.7-2009.10 &gt; puts Benchmark.measure{1000.times{Post.create(:title =&gt; &quot;bla&quot;, :body =&gt; &quot;x&quot; * 1000)}}
  1.940000   0.590000   2.530000 (  3.883329)
ree-1.8.7-2009.10 &gt; puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.450000   0.710000   1.160000 (  1.162713)
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using a trivial model on both Rails 2 and 3:&lt;/p&gt;
&lt;p&gt;script/generate scaffold post title:string body:text&lt;/p&gt;
&lt;p&gt;I'm noticing both insert and create performance are much slower.
This is for both dev and production environments.&lt;/p&gt;
&lt;p&gt;Rails 2 results:&lt;/p&gt;
&lt;pre&gt;
ree-1.8.7-2009.10 &amp;gt;  puts Benchmark.measure{1000.times{Post.create(:title =&amp;gt; &quot;bla&quot;, :body =&amp;gt; &quot;x&quot; * 1000)}}
  0.970000   0.480000   1.450000 (  2.923408)
 =&amp;gt; nil
ree-1.8.7-2009.10 &amp;gt;  puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.280000   0.320000   0.600000 (  0.593748)
&lt;/pre&gt;
&lt;p&gt;Rails 3 results:&lt;/p&gt;
&lt;pre&gt;
ree-1.8.7-2009.10 &amp;gt; puts Benchmark.measure{1000.times{Post.create(:title =&amp;gt; &quot;bla&quot;, :body =&amp;gt; &quot;x&quot; * 1000)}}
  1.940000   0.590000   2.530000 (  3.883329)
ree-1.8.7-2009.10 &amp;gt; puts Benchmark.measure{1000.times{Post.find((rand * 1000 + 1).to_i)}}
  0.450000   0.710000   1.160000 (  1.162713)
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-20T22:14:15+00:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3759</number>
      <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3 AR performance has regressed since Rails 2</title>
      <updated-at type="datetime">2010-01-20T22:14:18+00:00</updated-at>
      <user-id type="integer">14714</user-id>
      <version type="integer">1</version>
      <user-name>Sam Saffron</user-name>
      <creator-name>Sam Saffron</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-21T00:01:54+00:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3759</number>
      <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record performance rails3</tag>
      <title>Rails 3 AR performance has regressed since Rails 2</title>
      <updated-at type="datetime">2010-01-21T00:01:55+00:00</updated-at>
      <user-id type="integer">14714</user-id>
      <version type="integer">2</version>
      <user-name>Sam Saffron</user-name>
      <creator-name>Sam Saffron</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Has there been any update to your issue? I am using Rails 3.0 Beta 4 and am finding it is much slower than Rails 2.3.5

I am using Ruby Enterprise 1.8.7 and Passenger 2.2.15

I go from 5.31 trans/sec to 3.05 trans/sec per AWS EC2 instance.

@@@ 
$ siege -c 5 -t 1M http://localhost

RAILS 2.3.5 RESULTS
Transactions:             320 hits
Availability:          100.00 %
Elapsed time:           60.26 secs
Data transferred:          6.76 MB
Response time:            0.45 secs
Transaction rate:          5.31 trans/sec
Throughput:            0.11 MB/sec
Concurrency:            2.41
Successful transactions:         320
Failed transactions:             0
Longest transaction:          1.05
Shortest transaction:          0.25

RAILS 3
Transactions:             169 hits
Availability:          100.00 %
Elapsed time:           55.38 secs
Data transferred:          3.72 MB
Response time:            1.06 secs
Transaction rate:          3.05 trans/sec
Throughput:            0.07 MB/sec
Concurrency:            3.23
Successful transactions:         169
Failed transactions:             0
Longest transaction:          1.74
Shortest transaction:          0.58
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Has there been any update to your issue? I am using Rails 3.0
Beta 4 and am finding it is much slower than Rails 2.3.5&lt;/p&gt;
&lt;p&gt;I am using Ruby Enterprise 1.8.7 and Passenger 2.2.15&lt;/p&gt;
&lt;p&gt;I go from 5.31 trans/sec to 3.05 trans/sec per AWS EC2
instance.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ siege -c 5 -t 1M http://localhost

RAILS 2.3.5 RESULTS
Transactions:             320 hits
Availability:          100.00 %
Elapsed time:           60.26 secs
Data transferred:          6.76 MB
Response time:            0.45 secs
Transaction rate:          5.31 trans/sec
Throughput:            0.11 MB/sec
Concurrency:            2.41
Successful transactions:         320
Failed transactions:             0
Longest transaction:          1.05
Shortest transaction:          0.25

RAILS 3
Transactions:             169 hits
Availability:          100.00 %
Elapsed time:           55.38 secs
Data transferred:          3.72 MB
Response time:            1.06 secs
Transaction rate:          3.05 trans/sec
Throughput:            0.07 MB/sec
Concurrency:            3.23
Successful transactions:         169
Failed transactions:             0
Longest transaction:          1.74
Shortest transaction:          0.58&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T16:59:58+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3759</number>
      <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record performance rails3</tag>
      <title>Rails 3 AR performance has regressed since Rails 2</title>
      <updated-at type="datetime">2010-07-12T17:00:01+01:00</updated-at>
      <user-id type="integer">105742</user-id>
      <version type="integer">3</version>
      <user-name>drjoke</user-name>
      <creator-name>Sam Saffron</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Tried this on a slightly more formal benchmark, with a test script like this:

@@@
10.times do
  1000.times{ Post.create(:title =&gt; &quot;bla&quot;, :body =&gt; &quot;x&quot; * 1000) }
  max = Post.maximum(:id)
  1000.times{ Post.find(rand(max) + 1) }
end
@@@

Invoked like this:
@@@

[21:14:57] miles slopper ~/c/perftest2
$ rake db:drop; rake db:create; rake db:migrate; time ./script/runner -e production ~/tmp/posttest 
...
real	2m12.275s
user	0m41.200s
sys	0m1.640s
@@@

and this:
@@@

$ rake db:drop; rake db:create; rake db:migrate; time ~/c/rails/bin/rails runner -e production ~/tmp/posttest 
...
real	3m21.563s
user	1m8.380s
sys	0m1.920s
@@@

This is with a postgres database on a Ubuntu 10.04 machine. So I'm seeing a similar slowdown. Of course, benchmarking is a notoriously tricky business so it's hard to be sure to what extent this reflects a real-world workload.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tried this on a slightly more formal benchmark, with a test
script like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;10.times do
  1000.times{ Post.create(:title =&amp;gt; &quot;bla&quot;, :body =&amp;gt; &quot;x&quot; * 1000) }
  max = Post.maximum(:id)
  1000.times{ Post.find(rand(max) + 1) }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Invoked like this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
[21:14:57] miles slopper ~/c/perftest2
$ rake db:drop; rake db:create; rake db:migrate; time ./script/runner -e production ~/tmp/posttest 
...
real    2m12.275s
user    0m41.200s
sys 0m1.640s&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
$ rake db:drop; rake db:create; rake db:migrate; time ~/c/rails/bin/rails runner -e production ~/tmp/posttest 
...
real    3m21.563s
user    1m8.380s
sys 0m1.920s&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is with a postgres database on a Ubuntu 10.04 machine. So
I'm seeing a similar slowdown. Of course, benchmarking is a
notoriously tricky business so it's hard to be sure to what extent
this reflects a real-world workload.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T05:32:55+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3759</number>
      <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record performance rails3</tag>
      <title>Rails 3 AR performance has regressed since Rails 2</title>
      <updated-at type="datetime">2010-07-13T05:32:57+01:00</updated-at>
      <user-id type="integer">105668</user-id>
      <version type="integer">4</version>
      <user-name>Miles Egan</user-name>
      <creator-name>Sam Saffron</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll take a look in to this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll take a look in to this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T16:12:20+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3759</number>
      <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record performance rails3</tag>
      <title>Rails 3 AR performance has regressed since Rails 2</title>
      <updated-at type="datetime">2010-07-15T16:12:26+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">5</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Sam Saffron</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This ticket should be merged into this: 

https://rails.lighthouseapp.com/projects/8994/tickets/5098-rails-3-beta-4-activerecord-5x-slower-than-rails-235 

I don't know how to do it, but the same problem is better identified there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This ticket should be merged into this:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/5098-rails-3-beta-4-activerecord-5x-slower-than-rails-235&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/5098-rails-3-...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don't know how to do it, but the same problem is better
identified there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T16:41:40+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3759</number>
      <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record performance rails3</tag>
      <title>Rails 3 AR performance has regressed since Rails 2</title>
      <updated-at type="datetime">2010-07-15T16:41:42+01:00</updated-at>
      <user-id type="integer">105742</user-id>
      <version type="integer">6</version>
      <user-name>drjoke</user-name>
      <creator-name>Sam Saffron</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking as a duplicate of #5098.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking as a duplicate of &lt;a href=&quot;/projects/8994/tickets/5098&quot;
title=&quot;Ticket #5098&quot;&gt;#5098&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-29T08:49:15+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3759</number>
      <permalink>rails-3-ar-performance-has-regressed-since-rails-2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>active_record performance rails3</tag>
      <title>Rails 3 AR performance has regressed since Rails 2</title>
      <updated-at type="datetime">2010-08-29T08:49:17+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">7</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Sam Saffron</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3759</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
