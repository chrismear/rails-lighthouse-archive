<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-04-25T23:57:26+01:00</created-at>
  <creator-id type="integer">11372</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">49</number>
  <permalink>add-has_element-method-to-models-with-has_many-through-associations</permalink>
  <priority type="integer">10147</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord patch</tag>
  <title>add has_element? method to models with has_many/through associations</title>
  <updated-at type="datetime">2008-04-29T23:18:05+01:00</updated-at>
  <user-id type="integer">83</user-id>
  <version type="integer">6</version>
  <user-name>DHH</user-name>
  <creator-name>Josh Susser</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/49</url>
  <priority-name nil="true"></priority-name>
  <original-body>When using a model that is associated (via has_many) with other models, it is often convenient to be able to ask the containing model whether it contains (or &quot;has&quot;) a specific item. This patch adds such a method to the containing class. So, for example, if

User.has_many :friends
alex.has_friend?(josh)

will return true if josh is a friend of alex.

Works for both has_many and has_many_through associations.

Written (as a monkey patch) by Nick Kallen, patched by Josh Susser and Alex Chaffee.</original-body>
  <latest-body>When using a model that is associated (via has_many) with other models, it is often convenient to be able to ask the containing model whether it contains (or &quot;has&quot;) a specific item. This patch adds such a method to the containing class. So, for example, if

User.has_many :friends
alex.has_friend?(josh)

will return true if josh is a friend of alex.

Works for both has_many and has_many_through associations.

Written (as a monkey patch) by Nick Kallen, patched by Josh Susser and Alex Chaffee.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When using a model that is associated (via has_many) with other models, it is often convenient to be able to ask the containing model whether it contains (or &quot;has&quot;) a specific item. This patch adds such a method to the containing class. So, for example, if
&lt;/p&gt;&lt;p&gt;
User.has_many :friends
&lt;/p&gt;&lt;p&gt;
alex.has_friend?(josh)
&lt;/p&gt;&lt;p&gt;
will return true if josh is a friend of alex.
&lt;/p&gt;&lt;p&gt;
Works for both has_many and has_many_through associations.
&lt;/p&gt;&lt;p&gt;
Written (as a monkey patch) by Nick Kallen, patched by Josh Susser and Alex Chaffee.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using a model that is associated (via has_many) with other models, it is often convenient to be able to ask the containing model whether it contains (or &quot;has&quot;) a specific item. This patch adds such a method to the containing class. So, for example, if

User.has_many :friends
alex.has_friend?(josh)

will return true if josh is a friend of alex.

Works for both has_many and has_many_through associations.

Written (as a monkey patch) by Nick Kallen, patched by Josh Susser and Alex Chaffee.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When using a model that is associated (via has_many) with other models, it is often convenient to be able to ask the containing model whether it contains (or &quot;has&quot;) a specific item. This patch adds such a method to the containing class. So, for example, if
&lt;/p&gt;&lt;p&gt;
User.has_many :friends
&lt;/p&gt;&lt;p&gt;
alex.has_friend?(josh)
&lt;/p&gt;&lt;p&gt;
will return true if josh is a friend of alex.
&lt;/p&gt;&lt;p&gt;
Works for both has_many and has_many_through associations.
&lt;/p&gt;&lt;p&gt;
Written (as a monkey patch) by Nick Kallen, patched by Josh Susser and Alex Chaffee.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-25T23:57:26+01:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">49</number>
      <permalink>add-has_element-method-to-models-with-has_many-through-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>add has_element? method to models with has_many/through associations</title>
      <updated-at type="datetime">2008-04-25T23:57:26+01:00</updated-at>
      <user-id type="integer">11372</user-id>
      <version type="integer">1</version>
      <user-name>Josh Susser</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/49</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attaching new patch - previous one was missing a test case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Attaching new patch - previous one was missing a test case.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-28T16:06:31+01:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">49</number>
      <permalink>add-has_element-method-to-models-with-has_many-through-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>add has_element? method to models with has_many/through associations</title>
      <updated-at type="datetime">2008-04-28T16:06:31+01:00</updated-at>
      <user-id type="integer">11372</user-id>
      <version type="integer">2</version>
      <user-name>Josh Susser</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/49</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Instead of invoking find_by_id and instantiating a new model, could you instead rely on the optimized include? association method?

http://dev.rubyonrails.org/changeset/9200</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Instead of invoking find_by_id and instantiating a new model, could you instead rely on the optimized include? association method?
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://dev.rubyonrails.org/changeset/9200&quot;&gt;http://dev.rubyonrails.org/chang...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-29T20:01:25+01:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">49</number>
      <permalink>add-has_element-method-to-models-with-has_many-through-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>add has_element? method to models with has_many/through associations</title>
      <updated-at type="datetime">2008-04-29T20:01:25+01:00</updated-at>
      <user-id type="integer">18106</user-id>
      <version type="integer">3</version>
      <user-name>duncanbeevers</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/49</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't think I understand the difference between alex.friends.include?(josh) and alex.has_friend?(josh)? (now that the include? call has been optimized to not load the whole collection).</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I don't think I understand the difference between alex.friends.include?(josh) and alex.has_friend?(josh)? (now that the include? call has been optimized to not load the whole collection).
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-29T22:27:30+01:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">49</number>
      <permalink>add-has_element-method-to-models-with-has_many-through-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>add has_element? method to models with has_many/through associations</title>
      <updated-at type="datetime">2008-04-29T22:27:30+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">4</version>
      <user-name>DHH</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/49</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>David, this was an extract of something we wrote before include? got that optimization, so yes, it's equivalent functionality now.  If you care about Law of Demeter, this little bit of magic lets you avoid chaining off the association. Maybe it's just fluff now.  I guess it's all a question of which API you like better.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
David, this was an extract of something we wrote before include? got that optimization, so yes, it's equivalent functionality now.  If you care about Law of Demeter, this little bit of magic lets you avoid chaining off the association. Maybe it's just fluff now.  I guess it's all a question of which API you like better.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-29T23:13:00+01:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">49</number>
      <permalink>add-has_element-method-to-models-with-has_many-through-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>add has_element? method to models with has_many/through associations</title>
      <updated-at type="datetime">2008-04-29T23:13:00+01:00</updated-at>
      <user-id type="integer">11372</user-id>
      <version type="integer">5</version>
      <user-name>Josh Susser</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/49</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ah, okay. Yeah, I could definitely see this make sense before the include? fix. I don't think we need it now, though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ah, okay. Yeah, I could definitely see this make sense before the include? fix. I don't think we need it now, though.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-04-29T23:18:05+01:00</created-at>
      <creator-id type="integer">11372</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">49</number>
      <permalink>add-has_element-method-to-models-with-has_many-through-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>add has_element? method to models with has_many/through associations</title>
      <updated-at type="datetime">2008-04-29T23:18:05+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">6</version>
      <user-name>DHH</user-name>
      <creator-name>Josh Susser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/49</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>92e7c14f3708bd985dd00bcd3965aa3d9fac76b4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-04-28T16:06:31+01:00</created-at>
      <filename>has_many_has_element.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">20458</id>
      <size type="integer">3294</size>
      <uploader-id type="integer">11372</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/20458/has_many_has_element.patch</url>
    </attachment>
  </attachments>
</ticket>
