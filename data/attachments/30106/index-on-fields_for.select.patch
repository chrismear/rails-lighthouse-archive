From 934e254ee58e6da5963fe734a7f4dc87d3ad5a07 Mon Sep 17 00:00:00 2001
From: Kevin Glowacz <kevin@chaptercommunications.com>
Date: Mon, 30 Jun 2008 14:19:36 -0500
Subject: [PATCH] index on fields_for.select

---
 .../lib/action_view/helpers/form_options_helper.rb |   16 ++-
 .../test/template/form_options_helper_test.rb      |  109 ++++++++++++++++++++
 2 files changed, 121 insertions(+), 4 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_options_helper.rb b/actionpack/lib/action_view/helpers/form_options_helper.rb
index b3f8e63..0cda3cd 100644
--- a/actionpack/lib/action_view/helpers/form_options_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_options_helper.rb
@@ -438,19 +438,27 @@ module ActionView
 
     class FormBuilder
       def select(method, choices, options = {}, html_options = {})
-        @template.select(@object_name, method, choices, options.merge(:object => @object), html_options)
+        options = objectify_options(options)
+        html_options = html_options.merge(:index => options.delete(:index)) if options.has_key?(:index)
+        @template.select(@object_name, method, choices, options, html_options)
       end
 
       def collection_select(method, collection, value_method, text_method, options = {}, html_options = {})
-        @template.collection_select(@object_name, method, collection, value_method, text_method, options.merge(:object => @object), html_options)
+        options = objectify_options(options)
+        html_options = html_options.merge(:index => options.delete(:index)) if options.has_key?(:index)
+        @template.collection_select(@object_name, method, collection, value_method, text_method, options, html_options)
       end
 
       def country_select(method, priority_countries = nil, options = {}, html_options = {})
-        @template.country_select(@object_name, method, priority_countries, options.merge(:object => @object), html_options)
+        options = objectify_options(options)
+        html_options = html_options.merge(:index => options.delete(:index)) if options.has_key?(:index)
+        @template.country_select(@object_name, method, priority_countries, options, html_options)
       end
 
       def time_zone_select(method, priority_zones = nil, options = {}, html_options = {})
-        @template.time_zone_select(@object_name, method, priority_zones, options.merge(:object => @object), html_options)
+        options = objectify_options(options)
+        html_options = html_options.merge(:index => options.delete(:index)) if options.has_key?(:index)
+        @template.time_zone_select(@object_name, method, priority_zones, options, html_options)
       end
     end
   end
diff --git a/actionpack/test/template/form_options_helper_test.rb b/actionpack/test/template/form_options_helper_test.rb
index 3f89a5e..da69301 100644
--- a/actionpack/test/template/form_options_helper_test.rb
+++ b/actionpack/test/template/form_options_helper_test.rb
@@ -241,6 +241,35 @@ class FormOptionsHelperTest < ActionView::TestCase
     )
   end
 
+  def test_select_under_fields_for_with_index
+    @post = Post.new
+    @post.category = "<mus>"
+
+    fields_for :post, @post, :index => 1 do |f|
+      concat f.select(:category, %w( abe <mus> hest))
+    end
+    
+    assert_dom_equal(
+      "<select id=\"post_1_category\" name=\"post[1][category]\"><option value=\"abe\">abe</option>\n<option value=\"&lt;mus&gt;\" selected=\"selected\">&lt;mus&gt;</option>\n<option value=\"hest\">hest</option></select>",
+      output_buffer
+    )
+  end
+
+  def test_select_under_fields_for_with_auto_index
+    @post = Post.new
+    @post.category = "<mus>"
+    def @post.to_param; '123'; end
+
+    fields_for "post[]", @post do |f|
+      concat f.select(:category, %w( abe <mus> hest))
+    end
+    
+    assert_dom_equal(
+      "<select id=\"post_123_category\" name=\"post[123][category]\"><option value=\"abe\">abe</option>\n<option value=\"&lt;mus&gt;\" selected=\"selected\">&lt;mus&gt;</option>\n<option value=\"hest\">hest</option></select>",
+      output_buffer
+    )
+  end
+
   def test_select_with_blank
     @post = Post.new
     @post.category = "<mus>"
@@ -361,6 +390,47 @@ class FormOptionsHelperTest < ActionView::TestCase
     )
   end
 
+  def test_collection_select_under_fields_for_with_index
+    @posts = [
+      Post.new("<Abe> went home", "<Abe>", "To a little house", "shh!"),
+      Post.new("Babe went home", "Babe", "To a little house", "shh!"),
+      Post.new("Cabe went home", "Cabe", "To a little house", "shh!")
+    ]
+
+    @post = Post.new
+    @post.author_name = "Babe"
+
+    fields_for :post, @post, :index => 1 do |f|
+      concat f.collection_select(:author_name, @posts, :author_name, :author_name)
+    end
+    
+    assert_dom_equal(
+      "<select id=\"post_1_author_name\" name=\"post[1][author_name]\"><option value=\"&lt;Abe&gt;\">&lt;Abe&gt;</option>\n<option value=\"Babe\" selected=\"selected\">Babe</option>\n<option value=\"Cabe\">Cabe</option></select>",
+      output_buffer
+    )
+  end
+
+  def test_collection_select_under_fields_for_with_auto_index
+    @posts = [
+      Post.new("<Abe> went home", "<Abe>", "To a little house", "shh!"),
+      Post.new("Babe went home", "Babe", "To a little house", "shh!"),
+      Post.new("Cabe went home", "Cabe", "To a little house", "shh!")
+    ]
+
+    @post = Post.new
+    @post.author_name = "Babe"
+    def @post.to_param; 123; end;
+
+    fields_for "post[]", @post do |f|
+      concat f.collection_select(:author_name, @posts, :author_name, :author_name)
+    end
+    
+    assert_dom_equal(
+      "<select id=\"post_123_author_name\" name=\"post[123][author_name]\"><option value=\"&lt;Abe&gt;\">&lt;Abe&gt;</option>\n<option value=\"Babe\" selected=\"selected\">Babe</option>\n<option value=\"Cabe\">Cabe</option></select>",
+      output_buffer
+    )
+  end
+
   def test_collection_select_with_blank_and_style
     @posts = [
       Post.new("<Abe> went home", "<Abe>", "To a little house", "shh!"),
@@ -1207,6 +1277,45 @@ COUNTRIES
     )
   end
 
+  def test_time_zone_select_under_fields_for_with_index
+    @firm = Firm.new("D")
+
+    fields_for :firm, @firm, :index => 1 do |f|
+      concat f.time_zone_select(:time_zone)
+    end
+    
+    assert_dom_equal(
+      "<select id=\"firm_1_time_zone\" name=\"firm[1][time_zone]\">" +
+      "<option value=\"A\">A</option>\n" +
+      "<option value=\"B\">B</option>\n" +
+      "<option value=\"C\">C</option>\n" +
+      "<option value=\"D\" selected=\"selected\">D</option>\n" +
+      "<option value=\"E\">E</option>" +
+      "</select>",
+      output_buffer
+    )
+  end
+
+  def test_time_zone_select_under_fields_for_with_auto_index
+    @firm = Firm.new("D")
+    def @firm.to_param; 123; end;
+
+    fields_for "firm[]", @firm do |f|
+      concat f.time_zone_select(:time_zone)
+    end
+    
+    assert_dom_equal(
+      "<select id=\"firm_123_time_zone\" name=\"firm[123][time_zone]\">" +
+      "<option value=\"A\">A</option>\n" +
+      "<option value=\"B\">B</option>\n" +
+      "<option value=\"C\">C</option>\n" +
+      "<option value=\"D\" selected=\"selected\">D</option>\n" +
+      "<option value=\"E\">E</option>" +
+      "</select>",
+      output_buffer
+    )
+  end
+
   def test_time_zone_select_with_blank
     @firm = Firm.new("D")
     html = time_zone_select("firm", "time_zone", nil, :include_blank => true)
-- 
1.5.6.1

