From 28eeea37976e40c780100739d20c5e3398669363 Mon Sep 17 00:00:00 2001
From: Charles Nutter <charles.nutter@sun.com>
Date: Thu, 29 Jan 2009 00:31:07 -0600
Subject: [PATCH] Ensure constant_watch_stack is protected by a mutex, so concurrent requires do not corrupt it.

---
 activesupport/lib/active_support/dependencies.rb |   19 ++++++++++++++-----
 1 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/activesupport/lib/active_support/dependencies.rb b/activesupport/lib/active_support/dependencies.rb
index 7ce9ade..2badad5 100644
--- a/activesupport/lib/active_support/dependencies.rb
+++ b/activesupport/lib/active_support/dependencies.rb
@@ -51,6 +51,9 @@ module ActiveSupport #:nodoc:
     mattr_accessor :constant_watch_stack
     self.constant_watch_stack = []
 
+    mattr_accessor :constant_watch_stack_mutex
+    self.constant_watch_stack_mutex = Mutex.new
+
     # Module includes this module
     module ModuleConstMissing #:nodoc:
       def self.included(base) #:nodoc:
@@ -509,7 +512,9 @@ module ActiveSupport #:nodoc:
         [mod_name, initial_constants]
       end
 
-      constant_watch_stack.concat watch_frames
+      constant_watch_stack_mutex.synchronize do
+        constant_watch_stack.concat watch_frames
+      end
 
       aborting = true
       begin
@@ -526,8 +531,10 @@ module ActiveSupport #:nodoc:
           new_constants = mod.local_constant_names - prior_constants
 
           # Make sure no other frames takes credit for these constants.
-          constant_watch_stack.each do |frame_name, constants|
-            constants.concat new_constants if frame_name == mod_name
+          constant_watch_stack_mutex.synchronize do
+            constant_watch_stack.each do |frame_name, constants|
+              constants.concat new_constants if frame_name == mod_name
+            end
           end
 
           new_constants.collect do |suffix|
@@ -549,8 +556,10 @@ module ActiveSupport #:nodoc:
       # Remove the stack frames that we added.
       if defined?(watch_frames) && ! watch_frames.blank?
         frame_ids = watch_frames.collect { |frame| frame.object_id }
-        constant_watch_stack.delete_if do |watch_frame|
-          frame_ids.include? watch_frame.object_id
+        constant_watch_stack_mutex.synchronize do
+          constant_watch_stack.delete_if do |watch_frame|
+            frame_ids.include? watch_frame.object_id
+          end
         end
       end
     end
-- 
1.6.0.2

