<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-30T12:25:42+00:00</created-at>
  <creator-id type="integer">93243</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6089</number>
  <permalink>cant-overwrite-select-for-has_many-through</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;activerecord rails3&quot; has_many_through patch select</tag>
  <title>Can't overwrite select for has_many through</title>
  <updated-at type="datetime">2010-12-23T23:21:24+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>Micha&#322; &#321;omnicki</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6089</url>
  <priority-name>Low</priority-name>
  <original-body>rails 3.0.3
ruby 1.9.2p53

Using association.select('...') for has_many through appends columns instead of overwriting them. With rails 2.3 it works as intended

@@@ ruby
class Group &lt; ActiveRecord::Base
end

class MessageGroup &lt; ActiveRecord::Base
    belongs_to :message
    belongs_to :group
end

class Message &lt; ActiveRecord::Base
   has_many :message_groups
   has_many :groups, :through =&gt; :message_groups
end
@@@

@@@ ruby
Message.find(8).groups.select('groups.id')
@@@
@@@ sql
SELECT &quot;groups&quot;.*, groups.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; 
ON &quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE ((&quot;message_groups&quot;.message_id = 8))
@@@
Correct query should look like
@@@ sql
SELECT &quot;groups&quot;.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; ON 
&quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE 
((&quot;message_groups&quot;.message_id = 8))
@@@

Using 
@@@ ruby
Message.find(8).groups.all(:select =&gt; 'groups.id')
@@@
produces the same wrong result</original-body>
  <latest-body>rails 3.0.3
ruby 1.9.2p53

Using association.select('...') for has_many through appends columns instead of overwriting them. With rails 2.3 it works as intended

@@@ ruby
class Group &lt; ActiveRecord::Base
end

class MessageGroup &lt; ActiveRecord::Base
    belongs_to :message
    belongs_to :group
end

class Message &lt; ActiveRecord::Base
   has_many :message_groups
   has_many :groups, :through =&gt; :message_groups
end
@@@

@@@ ruby
Message.find(8).groups.select('groups.id')
@@@
@@@ sql
SELECT &quot;groups&quot;.*, groups.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; 
ON &quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE ((&quot;message_groups&quot;.message_id = 8))
@@@
Correct query should look like
@@@ sql
SELECT &quot;groups&quot;.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; ON 
&quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE 
((&quot;message_groups&quot;.message_id = 8))
@@@

Using 
@@@ ruby
Message.find(8).groups.all(:select =&gt; 'groups.id')
@@@
produces the same wrong result</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;rails 3.0.3&lt;br&gt;
ruby 1.9.2p53&lt;/p&gt;
&lt;p&gt;Using association.select('...') for has_many through appends
columns instead of overwriting them. With rails 2.3 it works as
intended&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Group &amp;lt; ActiveRecord::Base
end

class MessageGroup &amp;lt; ActiveRecord::Base
    belongs_to :message
    belongs_to :group
end

class Message &amp;lt; ActiveRecord::Base
   has_many :message_groups
   has_many :groups, :through =&amp;gt; :message_groups
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Message.find(8).groups.select('groups.id')&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;groups&quot;.*, groups.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; 
ON &quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE ((&quot;message_groups&quot;.message_id = 8))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Correct query should look like&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;groups&quot;.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; ON 
&quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE 
((&quot;message_groups&quot;.message_id = 8))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Using&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Message.find(8).groups.all(:select =&amp;gt; 'groups.id')&lt;/code&gt;
&lt;/pre&gt;
produces the same wrong result&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>rails 3.0.3
ruby 1.9.2p53

Using association.select('...') for has_many through appends columns instead of overwriting them. With rails 2.3 it works as intended

@@@ ruby
class Group &lt; ActiveRecord::Base
end

class MessageGroup &lt; ActiveRecord::Base
    belongs_to :message
    belongs_to :group
end

class Message &lt; ActiveRecord::Base
   has_many :message_groups
   has_many :groups, :through =&gt; :message_groups
end
@@@

@@@ ruby
Message.find(8).groups.select('groups.id')
@@@
@@@ sql
SELECT &quot;groups&quot;.*, groups.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; 
ON &quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE ((&quot;message_groups&quot;.message_id = 8))
@@@
Correct query should look like
@@@ sql
SELECT &quot;groups&quot;.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; ON 
&quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE 
((&quot;message_groups&quot;.message_id = 8))
@@@

Using 
@@@ ruby
Message.find(8).groups.all(:select =&gt; 'groups.id')
@@@
produces the same wrong result</body>
      <body-html>&lt;div&gt;&lt;p&gt;rails 3.0.3&lt;br&gt;
ruby 1.9.2p53&lt;/p&gt;
&lt;p&gt;Using association.select('...') for has_many through appends
columns instead of overwriting them. With rails 2.3 it works as
intended&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Group &amp;lt; ActiveRecord::Base
end

class MessageGroup &amp;lt; ActiveRecord::Base
    belongs_to :message
    belongs_to :group
end

class Message &amp;lt; ActiveRecord::Base
   has_many :message_groups
   has_many :groups, :through =&amp;gt; :message_groups
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Message.find(8).groups.select('groups.id')&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;groups&quot;.*, groups.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; 
ON &quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE ((&quot;message_groups&quot;.message_id = 8))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Correct query should look like&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;groups&quot;.id FROM &quot;groups&quot; INNER JOIN &quot;message_groups&quot; ON 
&quot;groups&quot;.id = &quot;message_groups&quot;.group_id WHERE 
((&quot;message_groups&quot;.message_id = 8))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Using&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Message.find(8).groups.all(:select =&amp;gt; 'groups.id')&lt;/code&gt;
&lt;/pre&gt;
produces the same wrong result&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-30T12:25:42+00:00</created-at>
      <creator-id type="integer">93243</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6089</number>
      <permalink>cant-overwrite-select-for-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; has_many_through select</tag>
      <title>Can't overwrite select for has_many through</title>
      <updated-at type="datetime">2010-12-01T05:15:22+00:00</updated-at>
      <user-id type="integer">93243</user-id>
      <version type="integer">1</version>
      <user-name>Micha&#322; &#321;omnicki</user-name>
      <creator-name>Micha&#322; &#321;omnicki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6089</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've prepared patch and test case for this issue</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've prepared patch and test case for this issue&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-12T00:50:52+00:00</created-at>
      <creator-id type="integer">93243</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord rails3\&quot; has_many_through select&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6089</number>
      <permalink>cant-overwrite-select-for-has_many-through</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; has_many_through patch select</tag>
      <title>Can't overwrite select for has_many through</title>
      <updated-at type="datetime">2010-12-12T00:50:54+00:00</updated-at>
      <user-id type="integer">93243</user-id>
      <version type="integer">2</version>
      <user-name>Micha&#322; &#321;omnicki</user-name>
      <creator-name>Micha&#322; &#321;omnicki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6089</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I can confirm this is an issue and that the proposed patch fixes it. However, it did not apply cleanly, so I've updated it and attached. I've also removed the modification to `:readonly` in `construct_find_scope` as it's not clear what this change is for, and it lacks a test. Please open another issue for that change if necessary (perhaps look at #5442?)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this is an issue and that the proposed patch fixes
it. However, it did not apply cleanly, so I've updated it and
attached. I've also removed the modification to
&lt;code&gt;:readonly&lt;/code&gt; in &lt;code&gt;construct_find_scope&lt;/code&gt; as it's
not clear what this change is for, and it lacks a test. Please open
another issue for that change if necessary (perhaps look at
&lt;a href=&quot;/projects/8994/tickets/5442&quot; title=
&quot;Ticket #5442&quot;&gt;#5442&lt;/a&gt;?)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-21T21:38:40+00:00</created-at>
      <creator-id type="integer">93243</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6089</number>
      <permalink>cant-overwrite-select-for-has_many-through</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; has_many_through patch select</tag>
      <title>Can't overwrite select for has_many through</title>
      <updated-at type="datetime">2010-12-21T21:39:00+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">3</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Micha&#322; &#321;omnicki</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6089</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [030480ac1f4fbf8bf74a0d9298544426caf26894]) Fix behaviour of foo.has_many_through_association.select('custom select') [#6089 state:resolved]
https://github.com/rails/rails/commit/030480ac1f4fbf8bf74a0d9298544426caf26894</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/030480ac1f4fbf8bf74a0d9298544426caf26894&quot;
title=
&quot;Changeset [030480ac1f4fbf8bf74a0d9298544426caf26894]&quot;&gt;[030480ac1f4fbf8bf74a0d9298544426caf26894]&lt;/a&gt;)
Fix behaviour of foo.has_many_through_association.select('custom
select') [&lt;a href=&quot;/projects/8994/tickets/6089&quot; title=
&quot;Ticket #6089&quot;&gt;#6089&lt;/a&gt; state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/030480ac1f4fbf8bf74a0d9298544426caf26894&quot;&gt;
https://github.com/rails/rails/commit/030480ac1f4fbf8bf74a0d9298544...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-23T23:20:16+00:00</created-at>
      <creator-id type="integer">93243</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6089</number>
      <permalink>cant-overwrite-select-for-has_many-through</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord rails3&quot; has_many_through patch select</tag>
      <title>Can't overwrite select for has_many through</title>
      <updated-at type="datetime">2010-12-23T23:21:24+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Micha&#322; &#321;omnicki</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6089</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>594c96f2f55d2df30424f7967722a433d0bc0e46</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-12T00:50:52+00:00</created-at>
      <filename>fix-overwriting-selected-fields-for-has_many-through.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">814679</id>
      <size type="integer">2363</size>
      <uploader-id type="integer">93243</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/814679/fix-overwriting-selected-fields-for-has_many-through.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>1a9aefeea7242d7f3afc44855d31799e00622aee</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-21T21:38:40+00:00</created-at>
      <filename>6089_has_many_through_select.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">830308</id>
      <size type="integer">1980</size>
      <uploader-id type="integer">11330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/830308/6089_has_many_through_select.diff</url>
    </attachment>
  </attachments>
</ticket>
