#!/usr/bin/ruby

# adjust as necessary
RAILS=File.expand_path('~/git/rails')
TMP=File.expand_path('~/tmp')
TEST='accept_test'

require 'fileutils'
require 'net/http'

# verify that port is available for testing
if (Net::HTTP.get_response('localhost','/',3000).code == '200' rescue false)
  STDERR.puts 'local server already running on port 3000'
  exit
end

Dir.chdir(TMP) do
  FileUtils.rm_rf TEST
  system "ruby #{RAILS}/railties/bin/rails #{TEST}"
  Dir.chdir TEST do
    system "ln -s #{RAILS} vendor/rails"
    system "ruby script/generate controller store index"
    system "rake db:migrate"

    server = fork
    if server

      # wait for server to start
      60.times do
        sleep 0.5
        begin
          status = Net::HTTP.get_response('localhost','/',3000).code
          break if %(200 404).include? status
        rescue Errno::ECONNREFUSED
        end
      end

      p Net::HTTP.get_response('localhost','/store',3000).body

      # shut down server
      Process.kill 'INT', server
      Process.wait server
    else

      # start server
      begin
        require 'config/boot'
        require 'commands/server'
      rescue
        STDERR.puts $!
        $!.backtrace.each {|method| STDERR.puts "\tfrom " + method}
      ensure
        Process.exit!
      end
    end
  end
end
