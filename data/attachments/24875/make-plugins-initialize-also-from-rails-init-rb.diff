From 63a4ff8fdd8f39c75893f4e9cfcd93941d4a411a Mon Sep 17 00:00:00 2001
From: Jacek Becela <jacek.becela@gmail.com>
Date: Wed, 28 May 2008 21:30:44 +0200
Subject: [PATCH] Make plugins initialize also from rails/init.rb to ensure consistency with gems used as plugins

---
 railties/lib/rails/plugin.rb                       |   10 +++++++++-
 .../test/fixtures/plugins/default/gemlike/init.rb  |    1 +
 .../plugins/default/gemlike/lib/gemlike.rb         |    2 ++
 .../fixtures/plugins/default/gemlike/rails/init.rb |    7 +++++++
 railties/test/initializer_test.rb                  |    6 +++---
 railties/test/plugin_loader_test.rb                |   12 ++++++------
 railties/test/plugin_locator_test.rb               |    4 ++--
 railties/test/plugin_test.rb                       |   16 ++++++++++++----
 8 files changed, 42 insertions(+), 16 deletions(-)
 create mode 100644 railties/test/fixtures/plugins/default/gemlike/init.rb
 create mode 100644 railties/test/fixtures/plugins/default/gemlike/lib/gemlike.rb
 create mode 100644 railties/test/fixtures/plugins/default/gemlike/rails/init.rb

diff --git a/railties/lib/rails/plugin.rb b/railties/lib/rails/plugin.rb
index 04f7e37..cce6755 100644
--- a/railties/lib/rails/plugin.rb
+++ b/railties/lib/rails/plugin.rb
@@ -74,9 +74,17 @@ module Rails
         File.join(directory, 'lib')
       end
 
-      def init_path
+      def classic_init_path
         File.join(directory, 'init.rb')
       end
+      
+      def gem_init_path
+        File.join(directory, 'rails', 'init.rb')
+      end
+      
+      def init_path
+        File.file?(gem_init_path) ? gem_init_path : classic_init_path
+      end
 
       def has_lib_directory?
         File.directory?(lib_path)
diff --git a/railties/test/fixtures/plugins/default/gemlike/init.rb b/railties/test/fixtures/plugins/default/gemlike/init.rb
new file mode 100644
index 0000000..6a771b5
--- /dev/null
+++ b/railties/test/fixtures/plugins/default/gemlike/init.rb
@@ -0,0 +1 @@
+raise 'This init.rb should not be evaluated because rails/init.rb exists'
diff --git a/railties/test/fixtures/plugins/default/gemlike/lib/gemlike.rb b/railties/test/fixtures/plugins/default/gemlike/lib/gemlike.rb
new file mode 100644
index 0000000..2088103
--- /dev/null
+++ b/railties/test/fixtures/plugins/default/gemlike/lib/gemlike.rb
@@ -0,0 +1,2 @@
+module Gemlike
+end
\ No newline at end of file
diff --git a/railties/test/fixtures/plugins/default/gemlike/rails/init.rb b/railties/test/fixtures/plugins/default/gemlike/rails/init.rb
new file mode 100644
index 0000000..171a293
--- /dev/null
+++ b/railties/test/fixtures/plugins/default/gemlike/rails/init.rb
@@ -0,0 +1,7 @@
+# I have access to my directory and the Rails config.
+raise 'directory expected but undefined in init.rb' unless defined? directory
+raise 'config expected but undefined in init.rb' unless defined? config
+
+# My lib/ dir must be in the load path.
+require 'gemlike'
+raise 'missing mixin from my lib/ dir' unless defined? Gemlike
diff --git a/railties/test/initializer_test.rb b/railties/test/initializer_test.rb
index 0df0164..bdb9c80 100644
--- a/railties/test/initializer_test.rb
+++ b/railties/test/initializer_test.rb
@@ -171,7 +171,7 @@ uses_mocha "Initializer plugin loading tests" do
     def test_all_plugins_are_loaded_when_registered_plugin_list_is_untouched
       failure_tip = "It's likely someone has added a new plugin fixture without updating this list"
       load_plugins!
-      assert_plugins [:a, :acts_as_chunky_bacon, :plugin_with_no_lib_dir, :stubby], @initializer.loaded_plugins, failure_tip
+      assert_plugins [:a, :acts_as_chunky_bacon, :gemlike, :plugin_with_no_lib_dir, :stubby], @initializer.loaded_plugins, failure_tip
     end
 
     def test_all_plugins_loaded_when_all_is_used
@@ -179,7 +179,7 @@ uses_mocha "Initializer plugin loading tests" do
       only_load_the_following_plugins! plugin_names
       load_plugins!
       failure_tip = "It's likely someone has added a new plugin fixture without updating this list"
-      assert_plugins [:stubby, :acts_as_chunky_bacon, :a, :plugin_with_no_lib_dir], @initializer.loaded_plugins, failure_tip
+      assert_plugins [:stubby, :acts_as_chunky_bacon, :a, :gemlike, :plugin_with_no_lib_dir], @initializer.loaded_plugins, failure_tip
     end
 
     def test_all_plugins_loaded_after_all
@@ -187,7 +187,7 @@ uses_mocha "Initializer plugin loading tests" do
       only_load_the_following_plugins! plugin_names
       load_plugins!
       failure_tip = "It's likely someone has added a new plugin fixture without updating this list"
-      assert_plugins [:stubby, :a, :plugin_with_no_lib_dir, :acts_as_chunky_bacon], @initializer.loaded_plugins, failure_tip
+      assert_plugins [:stubby, :a, :gemlike, :plugin_with_no_lib_dir, :acts_as_chunky_bacon], @initializer.loaded_plugins, failure_tip
     end
 
     def test_plugin_names_may_be_strings
diff --git a/railties/test/plugin_loader_test.rb b/railties/test/plugin_loader_test.rb
index 41bd6ec..2110644 100644
--- a/railties/test/plugin_loader_test.rb
+++ b/railties/test/plugin_loader_test.rb
@@ -48,16 +48,16 @@ uses_mocha "Plugin Loader Tests" do
     end
 
     def test_should_find_all_availble_plugins_and_return_as_all_plugins
-      assert_plugins [:stubby, :plugin_with_no_lib_dir, :acts_as_chunky_bacon, :a], @loader.all_plugins.reverse, @failure_tip
+      assert_plugins [:stubby, :plugin_with_no_lib_dir, :gemlike, :acts_as_chunky_bacon, :a], @loader.all_plugins.reverse, @failure_tip
     end
 
     def test_should_return_all_plugins_as_plugins_when_registered_plugin_list_is_untouched
-      assert_plugins [:a, :acts_as_chunky_bacon, :plugin_with_no_lib_dir, :stubby], @loader.plugins, @failure_tip
+      assert_plugins [:a, :acts_as_chunky_bacon, :gemlike, :plugin_with_no_lib_dir, :stubby], @loader.plugins, @failure_tip
     end
 
     def test_should_return_all_plugins_as_plugins_when_registered_plugin_list_is_nil
       @configuration.plugins = nil
-      assert_plugins [:a, :acts_as_chunky_bacon, :plugin_with_no_lib_dir, :stubby], @loader.plugins, @failure_tip
+      assert_plugins [:a, :acts_as_chunky_bacon, :gemlike, :plugin_with_no_lib_dir, :stubby], @loader.plugins, @failure_tip
     end
 
     def test_should_return_specific_plugins_named_in_config_plugins_array_if_set
@@ -74,17 +74,17 @@ uses_mocha "Plugin Loader Tests" do
 
     def test_should_load_all_plugins_in_natural_order_when_all_is_used
       only_load_the_following_plugins! [:all]
-      assert_plugins [:a, :acts_as_chunky_bacon, :plugin_with_no_lib_dir, :stubby], @loader.plugins, @failure_tip
+      assert_plugins [:a, :acts_as_chunky_bacon, :gemlike, :plugin_with_no_lib_dir, :stubby], @loader.plugins, @failure_tip
     end
 
     def test_should_load_specified_plugins_in_order_and_then_all_remaining_plugins_when_all_is_used
       only_load_the_following_plugins! [:stubby, :acts_as_chunky_bacon, :all]
-      assert_plugins [:stubby, :acts_as_chunky_bacon, :a, :plugin_with_no_lib_dir], @loader.plugins, @failure_tip
+      assert_plugins [:stubby, :acts_as_chunky_bacon, :a, :gemlike, :plugin_with_no_lib_dir], @loader.plugins, @failure_tip
     end
 
     def test_should_be_able_to_specify_loading_of_plugins_loaded_after_all
       only_load_the_following_plugins!  [:stubby, :all, :acts_as_chunky_bacon]
-      assert_plugins [:stubby, :a, :plugin_with_no_lib_dir, :acts_as_chunky_bacon], @loader.plugins, @failure_tip
+      assert_plugins [:stubby, :a, :gemlike, :plugin_with_no_lib_dir, :acts_as_chunky_bacon], @loader.plugins, @failure_tip
     end
 
     def test_should_accept_plugin_names_given_as_strings
diff --git a/railties/test/plugin_locator_test.rb b/railties/test/plugin_locator_test.rb
index 5f1dd99..363fa27 100644
--- a/railties/test/plugin_locator_test.rb
+++ b/railties/test/plugin_locator_test.rb
@@ -47,12 +47,12 @@ uses_mocha "Plugin Locator Tests" do
     end
   
     def test_should_return_all_plugins_found_under_the_set_plugin_paths
-      assert_equal ["a", "acts_as_chunky_bacon", "plugin_with_no_lib_dir", "stubby"].sort, @locator.plugins.map(&:name).sort
+      assert_equal ["a", "acts_as_chunky_bacon", "gemlike", "plugin_with_no_lib_dir", "stubby"].sort, @locator.plugins.map(&:name).sort
     end
   
     def test_should_find_plugins_only_under_the_plugin_paths_set_in_configuration
       @configuration.plugin_paths = [File.join(plugin_fixture_root_path, "default")]
-      assert_equal ["acts_as_chunky_bacon", "plugin_with_no_lib_dir", "stubby"].sort, @locator.plugins.map(&:name).sort
+      assert_equal ["acts_as_chunky_bacon", "gemlike", "plugin_with_no_lib_dir", "stubby"].sort, @locator.plugins.map(&:name).sort
     
       @configuration.plugin_paths = [File.join(plugin_fixture_root_path, "alternate")]
       assert_equal ["a"], @locator.plugins.map(&:name)
diff --git a/railties/test/plugin_test.rb b/railties/test/plugin_test.rb
index 1445338..de10a8c 100644
--- a/railties/test/plugin_test.rb
+++ b/railties/test/plugin_test.rb
@@ -5,9 +5,10 @@ uses_mocha "Plugin Tests" do
   class PluginTest < Test::Unit::TestCase
 
     def setup
-      @initializer       = Rails::Initializer.new(Rails::Configuration.new)
-      @valid_plugin_path = plugin_fixture_path('default/stubby')
-      @empty_plugin_path = plugin_fixture_path('default/empty')    
+      @initializer         = Rails::Initializer.new(Rails::Configuration.new)
+      @valid_plugin_path   = plugin_fixture_path('default/stubby')
+      @empty_plugin_path   = plugin_fixture_path('default/empty')
+      @gemlike_plugin_path = plugin_fixture_path('default/gemlike')    
     end
 
     def test_should_determine_plugin_name_from_the_directory_of_the_plugin
@@ -70,7 +71,14 @@ uses_mocha "Plugin Tests" do
         plugin.stubs(:evaluate_init_rb)
         plugin.send(:load, @initializer)
       end
-    
+      
+      # This path is fine so nothing is raised
+      assert_nothing_raised do
+        plugin = plugin_for(@gemlike_plugin_path)
+        plugin.stubs(:evaluate_init_rb)
+        plugin.send(:load, @initializer)
+      end
+         
       # This is an empty path so it raises
       assert_raises(LoadError) do
         plugin = plugin_for(@empty_plugin_path)
-- 
1.5.4.5

