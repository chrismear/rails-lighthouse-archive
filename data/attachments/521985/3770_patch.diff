From aadc42635e39f05bc6f29ff80fcaa7c04c5825c0 Mon Sep 17 00:00:00 2001
From: Christopher Redinger <chris@thinkrelevance.com>
Date: Fri, 14 May 2010 15:14:57 -0400
Subject: [PATCH] [PATCH] Fix defaulting include_root_in_json = true

---
 activemodel/lib/active_model/serializers/json.rb   |    3 +-
 .../serializeration/json_serialization_test.rb     |   38 +++++++------------
 activerecord/test/cases/json_serialization_test.rb |    6 ++--
 activeresource/test/cases/base_test.rb             |    2 -
 4 files changed, 19 insertions(+), 30 deletions(-)

diff --git a/activemodel/lib/active_model/serializers/json.rb b/activemodel/lib/active_model/serializers/json.rb
index ffdfbfc..80ebc50 100644
--- a/activemodel/lib/active_model/serializers/json.rb
+++ b/activemodel/lib/active_model/serializers/json.rb
@@ -10,7 +10,8 @@ module ActiveModel
       included do
         extend ActiveModel::Naming
 
-        cattr_accessor :include_root_in_json, :instance_writer => true
+        cattr_accessor :include_root_in_json, :instance_writer => false
+        self.include_root_in_json = true
       end
 
       # Returns a JSON string representing the model. Some configuration is
diff --git a/activemodel/test/cases/serializeration/json_serialization_test.rb b/activemodel/test/cases/serializeration/json_serialization_test.rb
index 7e89815..c5a04bd 100644
--- a/activemodel/test/cases/serializeration/json_serialization_test.rb
+++ b/activemodel/test/cases/serializeration/json_serialization_test.rb
@@ -22,35 +22,25 @@ class JsonSerializationTest < ActiveModel::TestCase
   end
 
   test "should include root in json" do
-    begin
-      Contact.include_root_in_json = true
-      json = @contact.to_json
-
-      assert_match %r{^\{"contact":\{}, json
-      assert_match %r{"name":"Konata Izumi"}, json
-      assert_match %r{"age":16}, json
-      assert json.include?(%("created_at":#{ActiveSupport::JSON.encode(Time.utc(2006, 8, 1))}))
-      assert_match %r{"awesome":true}, json
-      assert_match %r{"preferences":\{"shows":"anime"\}}, json
-    ensure
-      Contact.include_root_in_json = false
-    end
+    json = @contact.to_json
+
+    assert_match %r{^\{"contact":\{}, json
+    assert_match %r{"name":"Konata Izumi"}, json
+    assert_match %r{"age":16}, json
+    assert json.include?(%("created_at":#{ActiveSupport::JSON.encode(Time.utc(2006, 8, 1))}))
+    assert_match %r{"awesome":true}, json
+    assert_match %r{"preferences":\{"shows":"anime"\}}, json
   end
 
   test "should include custom root in json" do
-    begin
-      Contact.include_root_in_json = true
-      json = @contact.to_json(:root => 'json_contact')
-
-      assert_match %r{^\{"json_contact":\{}, json
-      assert_match %r{"name":"Konata Izumi"}, json
-      assert_match %r{"age":16}, json
-      assert json.include?(%("created_at":#{ActiveSupport::JSON.encode(Time.utc(2006, 8, 1))}))
-      assert_match %r{"awesome":true}, json
-      assert_match %r{"preferences":\{"shows":"anime"\}}, json
-    ensure
-      Contact.include_root_in_json = false
-    end
+    json = @contact.to_json(:root => 'json_contact')
+
+    assert_match %r{^\{"json_contact":\{}, json
+    assert_match %r{"name":"Konata Izumi"}, json
+    assert_match %r{"age":16}, json
+    assert json.include?(%("created_at":#{ActiveSupport::JSON.encode(Time.utc(2006, 8, 1))}))
+    assert_match %r{"awesome":true}, json
+    assert_match %r{"preferences":\{"shows":"anime"\}}, json
   end
 
   test "should encode all encodable attributes" do
diff --git a/activerecord/test/cases/json_serialization_test.rb b/activerecord/test/cases/json_serialization_test.rb
index a3145d2..9a4e09d 100644
--- a/activerecord/test/cases/json_serialization_test.rb
+++ b/activerecord/test/cases/json_serialization_test.rb
@@ -172,13 +172,13 @@ class DatabaseConnectedJsonEncodingTest < ActiveRecord::TestCase
   def test_should_allow_only_option_for_list_of_authors
     authors = [@david, @mary]
 
-    assert_equal %([{"name":"David"},{"name":"Mary"}]), ActiveSupport::JSON.encode(authors, :only => :name)
+    assert_equal %([{"author":{"name":"David"}},{"author":{"name":"Mary"}}]), ActiveSupport::JSON.encode(authors, :only => :name)
   end
 
   def test_should_allow_except_option_for_list_of_authors
     authors = [@david, @mary]
 
-    assert_equal %([{"id":1},{"id":2}]), ActiveSupport::JSON.encode(authors, :except => [:name, :author_address_id, :author_address_extra_id])
+    assert_equal %([{"author":{"id":1}},{"author":{"id":2}}]), ActiveSupport::JSON.encode(authors, :except => [:name, :author_address_id, :author_address_extra_id])
   end
 
   def test_should_allow_includes_for_list_of_authors
@@ -202,6 +202,6 @@ class DatabaseConnectedJsonEncodingTest < ActiveRecord::TestCase
       2 => @mary
     }
 
-    assert_equal %({"1":{"name":"David"}}), ActiveSupport::JSON.encode(authors_hash, :only => [1, :name])
+    assert_equal %({"1":{"author":{"name":"David"}}}), ActiveSupport::JSON.encode(authors_hash, :only => [1, :name])
   end
 end
diff --git a/activeresource/test/cases/base_test.rb b/activeresource/test/cases/base_test.rb
index 5df1f41..c757f5a 100644
--- a/activeresource/test/cases/base_test.rb
+++ b/activeresource/test/cases/base_test.rb
@@ -1036,7 +1036,6 @@ class BaseTest < Test::Unit::TestCase
   end
 
   def test_to_json
-    Person.include_root_in_json = true
     Person.format = :json
     joe = Person.find(6)
     encode = joe.encode
@@ -1052,7 +1051,6 @@ class BaseTest < Test::Unit::TestCase
 
   def test_to_json_with_element_name
     old_elem_name = Person.element_name
-    Person.include_root_in_json = true
     Person.format = :json
     joe = Person.find(6)
     Person.element_name = 'ruby_creator'
-- 
1.7.0.2

