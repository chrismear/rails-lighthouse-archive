<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:13+00:00</created-at>
  <creator-id type="integer">61625</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3359</number>
  <permalink>invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord</permalink>
  <priority type="integer">159932</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord conditions invalidstatement</tag>
  <title>Invalid SQL Generated by Mixed Relative / Qualified Conditions in ActiveRecord</title>
  <updated-at type="datetime">2011-02-19T09:28:13+00:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">2</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Steven Hartland</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3359</url>
  <priority-name nil="true"></priority-name>
  <original-body>If you mix relative and fully qualified conditions in ActiveRecord, your in for random results with the potential for invalid SQL.

The problem lies in the base method sanitize_sql_hash_for_conditions that generates the fully qualified SQL statements. It takes a &#8220;default&#8221; table name that&#8217;s used for unqualified conditions, however it overwrites this variable if it comes across an fully qualified condition. This means that the generation of the SQL depends on the internal order of the hash resulting in unpredictable output.

The fix for this is simply to ensure that fully qualified conditions don&#8217;t overwrite the default for relative conditions, the attached patch achieves this.

More info on this issue is available here:
http://blog.multiplay.co.uk/2009/10/invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord/</original-body>
  <latest-body>If you mix relative and fully qualified conditions in ActiveRecord, your in for random results with the potential for invalid SQL.

The problem lies in the base method sanitize_sql_hash_for_conditions that generates the fully qualified SQL statements. It takes a &#8220;default&#8221; table name that&#8217;s used for unqualified conditions, however it overwrites this variable if it comes across an fully qualified condition. This means that the generation of the SQL depends on the internal order of the hash resulting in unpredictable output.

The fix for this is simply to ensure that fully qualified conditions don&#8217;t overwrite the default for relative conditions, the attached patch achieves this.

More info on this issue is available here:
http://blog.multiplay.co.uk/2009/10/invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord/</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If you mix relative and fully qualified conditions in
ActiveRecord, your in for random results with the potential for
invalid SQL.&lt;/p&gt;
&lt;p&gt;The problem lies in the base method
sanitize_sql_hash_for_conditions that generates the fully qualified
SQL statements. It takes a &amp;#8220;default&amp;#8221; table name
that&amp;#8217;s used for unqualified conditions, however it overwrites
this variable if it comes across an fully qualified condition. This
means that the generation of the SQL depends on the internal order
of the hash resulting in unpredictable output.&lt;/p&gt;
&lt;p&gt;The fix for this is simply to ensure that fully qualified
conditions don&amp;#8217;t overwrite the default for relative
conditions, the attached patch achieves this.&lt;/p&gt;
&lt;p&gt;More info on this issue is available here:&lt;br&gt;
&lt;a href=
&quot;http://blog.multiplay.co.uk/2009/10/invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord/&quot;&gt;
http://blog.multiplay.co.uk/2009/10/invalid-sql-generated-by-mixed-...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you mix relative and fully qualified conditions in ActiveRecord, your in for random results with the potential for invalid SQL.

The problem lies in the base method sanitize_sql_hash_for_conditions that generates the fully qualified SQL statements. It takes a &#8220;default&#8221; table name that&#8217;s used for unqualified conditions, however it overwrites this variable if it comes across an fully qualified condition. This means that the generation of the SQL depends on the internal order of the hash resulting in unpredictable output.

The fix for this is simply to ensure that fully qualified conditions don&#8217;t overwrite the default for relative conditions, the attached patch achieves this.

More info on this issue is available here:
http://blog.multiplay.co.uk/2009/10/invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord/</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you mix relative and fully qualified conditions in
ActiveRecord, your in for random results with the potential for
invalid SQL.&lt;/p&gt;
&lt;p&gt;The problem lies in the base method
sanitize_sql_hash_for_conditions that generates the fully qualified
SQL statements. It takes a &amp;#8220;default&amp;#8221; table name
that&amp;#8217;s used for unqualified conditions, however it overwrites
this variable if it comes across an fully qualified condition. This
means that the generation of the SQL depends on the internal order
of the hash resulting in unpredictable output.&lt;/p&gt;
&lt;p&gt;The fix for this is simply to ensure that fully qualified
conditions don&amp;#8217;t overwrite the default for relative
conditions, the attached patch achieves this.&lt;/p&gt;
&lt;p&gt;More info on this issue is available here:&lt;br&gt;
&lt;a href=
&quot;http://blog.multiplay.co.uk/2009/10/invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord/&quot;&gt;
http://blog.multiplay.co.uk/2009/10/invalid-sql-generated-by-mixed-...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-09T11:59:01+01:00</created-at>
      <creator-id type="integer">61625</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3359</number>
      <permalink>invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord conditions invalidstatement</tag>
      <title>Invalid SQL Generated by Mixed Relative / Qualified Conditions in ActiveRecord</title>
      <updated-at type="datetime">2009-10-09T12:01:03+01:00</updated-at>
      <user-id type="integer">61625</user-id>
      <version type="integer">1</version>
      <user-name>Steven Hartland</user-name>
      <creator-name>Steven Hartland</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3359</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:38:30+01:00</created-at>
      <creator-id type="integer">61625</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3359</number>
      <permalink>invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord</permalink>
      <priority type="integer">159932</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord conditions invalidstatement</tag>
      <title>Invalid SQL Generated by Mixed Relative / Qualified Conditions in ActiveRecord</title>
      <updated-at type="datetime">2010-10-06T06:38:33+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Steven Hartland</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3359</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T00:31:51+00:00</created-at>
      <creator-id type="integer">61625</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3359</number>
      <permalink>invalid-sql-generated-by-mixed-relative-qualified-conditions-in-activerecord</permalink>
      <priority type="integer">159932</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord conditions invalidstatement</tag>
      <title>Invalid SQL Generated by Mixed Relative / Qualified Conditions in ActiveRecord</title>
      <updated-at type="datetime">2011-02-19T09:28:13+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">3</version>
      <user-name>mklo</user-name>
      <creator-name>Steven Hartland</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3359</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
