<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:20+00:00</created-at>
  <creator-id type="integer">7325</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2578</number>
  <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
  <priority type="integer">1718</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>accepts_nested_attributes_for causes stack level too deep</title>
  <updated-at type="datetime">2011-03-26T02:44:04+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">26</version>
  <user-name>bingbing</user-name>
  <creator-name>Theodore Mills</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Here's a simple example. The after_save callback in the associated model causes a stack level too deep exception. There's needs to be an :if or :unless option in accepts_nested_attributes_for so you can skip it when necessary.

class Invoice &lt; ActiveRecord::Base
  has_many :line_items
  accepts_nested_attributes_for :line_items
  
  def paid?
  ...
  end
end

class LineItem &lt; ActiveRecord::Base
  belongs_to :invoice  
  after_save :mark_as_paid

  def mark_as_paid
    invoice.update_attribute :paid_at, Time.now if invoice.paid?
  end
end</original-body>
  <latest-body>Here's a simple example. The after_save callback in the associated model causes a stack level too deep exception. There's needs to be an :if or :unless option in accepts_nested_attributes_for so you can skip it when necessary.

class Invoice &lt; ActiveRecord::Base
  has_many :line_items
  accepts_nested_attributes_for :line_items
  
  def paid?
  ...
  end
end

class LineItem &lt; ActiveRecord::Base
  belongs_to :invoice  
  after_save :mark_as_paid

  def mark_as_paid
    invoice.update_attribute :paid_at, Time.now if invoice.paid?
  end
end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Here's a simple example. The after_save callback in the
associated model causes a stack level too deep exception. There's
needs to be an :if or :unless option in
accepts_nested_attributes_for so you can skip it when
necessary.&lt;/p&gt;
&lt;p&gt;class Invoice &amp;lt; ActiveRecord::Base has_many :line_items
accepts_nested_attributes_for :line_items&lt;/p&gt;
&lt;p&gt;def paid? ... end end&lt;/p&gt;
&lt;p&gt;class LineItem &amp;lt; ActiveRecord::Base belongs_to :invoice&lt;br&gt;
after_save :mark_as_paid&lt;/p&gt;
&lt;p&gt;def mark_as_paid&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;invoice.update_attribute :paid_at, Time.now if invoice.paid?
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a simple example. The after_save callback in the associated model causes a stack level too deep exception. There's needs to be an :if or :unless option in accepts_nested_attributes_for so you can skip it when necessary.

class Invoice &lt; ActiveRecord::Base
  has_many :line_items
  accepts_nested_attributes_for :line_items
  
  def paid?
  ...
  end
end

class LineItem &lt; ActiveRecord::Base
  belongs_to :invoice  
  after_save :mark_as_paid

  def mark_as_paid
    invoice.update_attribute :paid_at, Time.now if invoice.paid?
  end
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a simple example. The after_save callback in the
associated model causes a stack level too deep exception. There's
needs to be an :if or :unless option in
accepts_nested_attributes_for so you can skip it when
necessary.&lt;/p&gt;
&lt;p&gt;class Invoice &amp;lt; ActiveRecord::Base has_many :line_items
accepts_nested_attributes_for :line_items&lt;/p&gt;
&lt;p&gt;def paid? ... end end&lt;/p&gt;
&lt;p&gt;class LineItem &amp;lt; ActiveRecord::Base belongs_to :invoice&lt;br&gt;
after_save :mark_as_paid&lt;/p&gt;
&lt;p&gt;def mark_as_paid&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;invoice.update_attribute :paid_at, Time.now if invoice.paid?
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-28T18:41:12+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-04-28T18:41:16+01:00</updated-at>
      <user-id type="integer">7325</user-id>
      <version type="integer">1</version>
      <user-name>Theodore Mills</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a simple example. The after_save callback in the associated model causes a stack level too deep exception. There's needs to be an :if or :unless option in accepts_nested_attributes_for so you can skip it when necessary.

@@@ ruby
class Invoice &lt; ActiveRecord::Base
  has_many :line_items
  accepts_nested_attributes_for :line_items
  
  def paid?
  ...
  end
end

class LineItem &lt; ActiveRecord::Base
  belongs_to :invoice  
  after_save :mark_as_paid

  def mark_as_paid
    invoice.update_attribute :paid_at, Time.now if invoice.paid?
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a simple example. The after_save callback in the
associated model causes a stack level too deep exception. There's
needs to be an :if or :unless option in
accepts_nested_attributes_for so you can skip it when
necessary.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Invoice &amp;lt; ActiveRecord::Base
  has_many :line_items
  accepts_nested_attributes_for :line_items
  
  def paid?
  ...
  end
end

class LineItem &amp;lt; ActiveRecord::Base
  belongs_to :invoice  
  after_save :mark_as_paid

  def mark_as_paid
    invoice.update_attribute :paid_at, Time.now if invoice.paid?
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-28T18:43:04+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-04-28T18:43:09+01:00</updated-at>
      <user-id type="integer">7325</user-id>
      <version type="integer">2</version>
      <user-name>Theodore Mills</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A workaround that I was able to use in a similar situation was to use `ActiveRecord::Dirty#changed?` to short-circuit the recursion.  So in your case:

@@@ ruby
  def mark_as_paid
    return unless changed?
    invoice.update_attribute :paid_at, Time.now if invoice.paid?
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;A workaround that I was able to use in a similar situation was
to use &lt;code&gt;ActiveRecord::Dirty#changed?&lt;/code&gt; to short-circuit
the recursion. So in your case:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  def mark_as_paid
    return unless changed?
    invoice.update_attribute :paid_at, Time.now if invoice.paid?
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-29T22:11:21+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-09-29T22:11:22+01:00</updated-at>
      <user-id type="integer">46640</user-id>
      <version type="integer">3</version>
      <user-name>Denis</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think my problem (which [I asked about on rails-core](http://groups.google.com/group/rubyonrails-core/browse_thread/thread/4aa9ab9371699b67 &quot;my message on rails-core&quot;)) is the same as this: I even used an Invoice/LineItem example! My Invoice has a `before_save` that sums LineItems' amounts, my LineItem has `belongs_to :invoice, :touch =&gt; true`, and I get the same stack overflow when I try to save a LineItem:

@@@ ruby
class LineItem &lt; ActiveRecord::Base
  # t.integer :amount
  # t.integer :invoice_id
  belongs_to :invoice, :touch =&gt; true
end

class Invoice &lt; ActiveRecord::Base
  # t.integer :total
  # t.timestamps
  has_many :line_items
  accepts_nested_attributes_for :line_items
  before_save :summarize

  def summarize
    self.total = line_items.map(&amp;:amount).sum
  end
end
@@@

With these models, in script/console:
@@@
&gt;&gt; Invoice.create
=&gt; #&lt;Invoice id: 1, total: 0, created_at: &quot;2009-09-30 05:04:41&quot;, updated_at:
&quot;2009-09-30 05:04:41&quot;&gt;
&gt;&gt; LineItem.create(:invoice_id =&gt; 1, :amount =&gt; 10)
@@@

This fails:

*  The LineItem saves itself, then the generated `belongs_to_touch_after_save_or_destroy_for_invoice` causes the invoice's `updated_at` to be changed, then the invoice to be saved.
*  Saving the invoice fires its `before_save` callback, which sums up its total, which is then saved.
*  Because `accepts_nested_models_for` turns on autosave for the association, the invoice then saves its lineitems.
*  Saving the lineitems triggers `belongs_to_touch_after_save_or_destroy_for_invoice` again, and the cycle repeats until the stack overflows.

I was hoping there's a way to break this cycle. I don't want to get rid of my use of `:touch`; it not only simplifies doing this sort of summarization in the database, it also makes it easy to come up with cache keys for UI fragments (I can just use the parent model's `updated_at` time).

So, I focused on why the lineitems were being saved again after the parent model was touched; this led me to [AutosaveAssociation#save\_collection\_association](http://github.com/rails/rails/blob/v2.3.4/activerecord/lib/active_record/autosave_association.rb#L272), which iterates over the loaded records and saves them, apparently even if they're not new or dirty (the `save(false)` call on line 295). This surprised me, so I tried hacking my version to change line 294 from _`elsif autosave`_ to _`elsif autosave &amp;&amp; record.changed?`_ -- and my problem went away. Unfortunately, I now find that this change causes a dozen existing ActiveRecord tests to fail, though I'm not sure why. (This change is attached below as nested\_plus\_touch\_\_save\_collection\_association.diff anyway.)

Lawrence Pit responded to my original message, suggesting that it would be better to modify the method that produces the list of records that `save_collection_association` will iterate over. (His suggestion also causes a bunch of test failures, but I've attached it as a separate independent patch as nested\_plus\_touch\_\_associated\_records\_to\_validate\_or\_save.diff anyway.)

I'm going to continue looking into this, but I'd appreciate more suggestions on where to look!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think my problem (which &lt;a href=
&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/4aa9ab9371699b67&quot;
title=&quot;my message on rails-core&quot;&gt;I asked about on rails-core&lt;/a&gt;)
is the same as this: I even used an Invoice/LineItem example! My
Invoice has a &lt;code&gt;before_save&lt;/code&gt; that sums LineItems'
amounts, my LineItem has &lt;code&gt;belongs_to :invoice, :touch =&amp;gt;
true&lt;/code&gt;, and I get the same stack overflow when I try to save a
LineItem:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class LineItem &amp;lt; ActiveRecord::Base
  # t.integer :amount
  # t.integer :invoice_id
  belongs_to :invoice, :touch =&amp;gt; true
end

class Invoice &amp;lt; ActiveRecord::Base
  # t.integer :total
  # t.timestamps
  has_many :line_items
  accepts_nested_attributes_for :line_items
  before_save :summarize

  def summarize
    self.total = line_items.map(&amp;amp;:amount).sum
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With these models, in script/console:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; Invoice.create
=&amp;gt; #&amp;lt;Invoice id: 1, total: 0, created_at: &quot;2009-09-30 05:04:41&quot;, updated_at:
&quot;2009-09-30 05:04:41&quot;&amp;gt;
&amp;gt;&amp;gt; LineItem.create(:invoice_id =&amp;gt; 1, :amount =&amp;gt; 10)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This fails:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The LineItem saves itself, then the generated
&lt;code&gt;belongs_to_touch_after_save_or_destroy_for_invoice&lt;/code&gt;
causes the invoice's &lt;code&gt;updated_at&lt;/code&gt; to be changed, then
the invoice to be saved.&lt;/li&gt;
&lt;li&gt;Saving the invoice fires its &lt;code&gt;before_save&lt;/code&gt; callback,
which sums up its total, which is then saved.&lt;/li&gt;
&lt;li&gt;Because &lt;code&gt;accepts_nested_models_for&lt;/code&gt; turns on
autosave for the association, the invoice then saves its
lineitems.&lt;/li&gt;
&lt;li&gt;Saving the lineitems triggers
&lt;code&gt;belongs_to_touch_after_save_or_destroy_for_invoice&lt;/code&gt;
again, and the cycle repeats until the stack overflows.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was hoping there's a way to break this cycle. I don't want to
get rid of my use of &lt;code&gt;:touch&lt;/code&gt;; it not only simplifies
doing this sort of summarization in the database, it also makes it
easy to come up with cache keys for UI fragments (I can just use
the parent model's &lt;code&gt;updated_at&lt;/code&gt; time).&lt;/p&gt;
&lt;p&gt;So, I focused on why the lineitems were being saved again after
the parent model was touched; this led me to &lt;a href=
&quot;http://github.com/rails/rails/blob/v2.3.4/activerecord/lib/active_record/autosave_association.rb#L272&quot;&gt;
AutosaveAssociation#save_collection_association&lt;/a&gt;, which iterates
over the loaded records and saves them, apparently even if they're
not new or dirty (the &lt;code&gt;save(false)&lt;/code&gt; call on line 295).
This surprised me, so I tried hacking my version to change line 294
from &lt;em&gt;&lt;code&gt;elsif autosave&lt;/code&gt;&lt;/em&gt; to &lt;em&gt;&lt;code&gt;elsif
autosave &amp;amp;&amp;amp; record.changed?&lt;/code&gt;&lt;/em&gt; -- and my problem
went away. Unfortunately, I now find that this change causes a
dozen existing ActiveRecord tests to fail, though I'm not sure why.
(This change is attached below as
nested_plus_touch__save_collection_association.diff anyway.)&lt;/p&gt;
&lt;p&gt;Lawrence Pit responded to my original message, suggesting that
it would be better to modify the method that produces the list of
records that &lt;code&gt;save_collection_association&lt;/code&gt; will iterate
over. (His suggestion also causes a bunch of test failures, but
I've attached it as a separate independent patch as
nested_plus_touch__associated_records_to_validate_or_save.diff
anyway.)&lt;/p&gt;
&lt;p&gt;I'm going to continue looking into this, but I'd appreciate more
suggestions on where to look!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T02:59:21+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-01T02:59:24+01:00</updated-at>
      <user-id type="integer">71551</user-id>
      <version type="integer">4</version>
      <user-name>Bryan Stearns</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The suggestion was from the top of my head ;-) The following works a lot better, though still 2 failing tests (actually it's 1 test)... but I'm thinking the test is wrong.

@@@ ruby
   def associated_records_to_validate_or_save(association, new_record, autosave)
      if new_record
        association
      elsif autosave
        association.target.select { |record| record.new_record? || record.changed? || record.marked_for_destruction? }
      else
        association.target.select { |record| record.new_record? }
      end
    end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The suggestion was from the top of my head ;-) The following
works a lot better, though still 2 failing tests (actually it's 1
test)... but I'm thinking the test is wrong.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;   def associated_records_to_validate_or_save(association, new_record, autosave)
      if new_record
        association
      elsif autosave
        association.target.select { |record| record.new_record? || record.changed? || record.marked_for_destruction? }
      else
        association.target.select { |record| record.new_record? }
      end
    end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T04:20:58+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-01T04:21:04+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">5</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The test was indeed faulty in my opinion. Attached is a patch with all tests passing.

What remains is to add a test that mimics your original scenario.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The test was indeed faulty in my opinion. Attached is a patch
with all tests passing.&lt;/p&gt;
&lt;p&gt;What remains is to add a test that mimics your original
scenario.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T04:37:52+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-01T04:37:55+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">6</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Thanks, Lawrence! OK, here's your patch, combined with a test that looks for the stack overflow; only the new test fails without your patch, and passes with it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks, Lawrence! OK, here's your patch, combined with a test
that looks for the stack overflow; only the new test fails without
your patch, and passes with it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T08:19:40+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-01T08:19:46+01:00</updated-at>
      <user-id type="integer">71551</user-id>
      <version type="integer">7</version>
      <user-name>Bryan Stearns</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T09:00:15+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-01T09:00:19+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">8</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Bryan, applied your patch again, confirmed that without my patch your test will go into a stack overflow.

+1, if I may :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Bryan, applied your patch again, confirmed that without my patch
your test will go into a stack overflow.&lt;/p&gt;
&lt;p&gt;+1, if I may :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T09:27:10+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-01T09:27:14+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">9</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>OK, then! Thanks, Lawrence - Hi Eloy. Was I supposed to add a &quot;patch&quot; tag? Oh, look, here's one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, then! Thanks, Lawrence - Hi Eloy. Was I supposed to add a
&quot;patch&quot; tag? Oh, look, here's one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T16:04:42+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-01T16:27:14+01:00</updated-at>
      <user-id type="integer">71551</user-id>
      <version type="integer">10</version>
      <user-name>Bryan Stearns</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Hm. I'm now back to working on the problem this patch was supposed to fix, and it's not fixing it (I'm still seeing the stack overflow). I'm trying to figure out what's different, and will update the patch once I figure it out. (I'm removing the patch tag in the meantime.)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hm. I'm now back to working on the problem this patch was
supposed to fix, and it's not fixing it (I'm still seeing the stack
overflow). I'm trying to figure out what's different, and will
update the patch once I figure it out. (I'm removing the patch tag
in the meantime.)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-09T00:23:45+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-09T00:23:49+01:00</updated-at>
      <user-id type="integer">71551</user-id>
      <version type="integer">11</version>
      <user-name>Bryan Stearns</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Aha: In my situation, the child model wants to validate\_presence\_of the parent reference, but the parent reference isn't included in the hash used to create the child. This is discussed in #1943, with a fix (for Rails 3.0? I'm not sure) in #2815.

In my case, I'd tried to work around it using a before\_validation\_on\_create callback on the parent, (like Ari Epstein suggested in a #2815 comment)[https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2815-nested-models-build-should-directly-assign-the-parent#ticket-2815-15], but the 'late' setting of the parent reference is resurrecting the stack overflow problem for me.

From reading #2815, it sounds like I should be able to include :inverse\_of =&gt; :invoice in Invoice's has_many :line\_items declaration, but that doesn't seem to help - I'd expect to see something looking at the inverse in nested\_attributes.rb's ActiveRecord::NestedAttributes::ClassMethods#assign\_nested\_attributes\_for\_collection\_association (so that it could include the inverse reference in the child's original attribute hash), but I don't see that.

(I'm not sure whether this is the right tree to be barking up... Eloy?)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Aha: In my situation, the child model wants to
validate_presence_of the parent reference, but the parent reference
isn't included in the hash used to create the child. This is
discussed in &lt;a href=&quot;/projects/8994/tickets/1943&quot; title=
&quot;Ticket #1943&quot;&gt;#1943&lt;/a&gt;, with a fix (for Rails 3.0? I'm not sure)
in &lt;a href=&quot;/projects/8994/tickets/2815&quot; title=
&quot;Ticket #2815&quot;&gt;#2815&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In my case, I'd tried to work around it using a
before_validation_on_create callback on the parent, (like Ari
Epstein suggested in a &lt;a href=&quot;/projects/8994/tickets/2815&quot; title=
&quot;Ticket #2815&quot;&gt;#2815&lt;/a&gt; comment)[&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2815-nested-models-build-should-directly-assign-the-parent#ticket-2815-15]&quot;&gt;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets...&lt;/a&gt;,
but the 'late' setting of the parent reference is resurrecting the
stack overflow problem for me.&lt;/p&gt;
&lt;p&gt;From reading &lt;a href=&quot;/projects/8994/tickets/2815&quot; title=
&quot;Ticket #2815&quot;&gt;#2815&lt;/a&gt;, it sounds like I should be able to
include :inverse_of =&amp;gt; :invoice in Invoice's has_many
:line_items declaration, but that doesn't seem to help - I'd expect
to see something looking at the inverse in nested_attributes.rb's
ActiveRecord::NestedAttributes::ClassMethods#assign_nested_attributes_for_collection_association
(so that it could include the inverse reference in the child's
original attribute hash), but I don't see that.&lt;/p&gt;
&lt;p&gt;(I'm not sure whether this is the right tree to be barking up...
Eloy?)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-12T02:20:08+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-12T02:20:14+01:00</updated-at>
      <user-id type="integer">71551</user-id>
      <version type="integer">12</version>
      <user-name>Bryan Stearns</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&gt; Aha: In my situation, the child model wants to validate_presence_of the parent reference, but the parent reference isn't included in the hash used to create the child.

Yes that's true, but that's because we are calling #build on the association which will set the appropriate foreign keys. Although it doesn't do this at the same time in all cases, which can make some situations hard. Passing in the instance from nested attributes would mean we'd have to duplicate this logic to set the appropriate field. Where field is the parent association on the child. I'd rather see #build on all associations work in a way where the parent is available before save.

&gt; From reading #2815, it sounds like I should be able to include :inverse_of =&gt; :invoice in Invoice's has_many :line_items declaration

I couldn't figure out if you mentioned which Rails you're using, but be advised that this unfortunately only works in master, ie Rails 3.0pre.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;Aha: In my situation, the child model wants to
validate_presence_of the parent reference, but the parent reference
isn't included in the hash used to create the child.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yes that's true, but that's because we are calling #build on the
association which will set the appropriate foreign keys. Although
it doesn't do this at the same time in all cases, which can make
some situations hard. Passing in the instance from nested
attributes would mean we'd have to duplicate this logic to set the
appropriate field. Where field is the parent association on the
child. I'd rather see #build on all associations work in a way
where the parent is available before save.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From reading &lt;a href=&quot;/projects/8994/tickets/2815&quot; title=
&quot;Ticket #2815&quot;&gt;#2815&lt;/a&gt;, it sounds like I should be able to
include :inverse_of =&amp;gt; :invoice in Invoice's has_many
:line_items declaration&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I couldn't figure out if you mentioned which Rails you're using,
but be advised that this unfortunately only works in master, ie
Rails 3.0pre.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-12T08:34:14+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-10-12T08:34:17+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">13</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@Bryan: After some discussion the :inverse_of patches have been backported. It would be great if you could verify that they fix the problem you had. All the patches are in: http://github.com/Fingertips/rails/tree/2-3-stable

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Bryan: After some discussion the :inverse_of patches have been
backported. It would be great if you could verify that they fix the
problem you had. All the patches are in: &lt;a href=
&quot;http://github.com/Fingertips/rails/tree/2-3-stable&quot;&gt;http://github.com/Fingertips/rails/tree/2-3-stable&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-17T15:01:03+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-12-17T15:01:07+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">14</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>The :inverse_of patches have been pushed to 2.3-stable, closing for now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The :inverse_of patches have been pushed to 2.3-stable, closing
for now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-12-28T20:51:44+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2009-12-28T20:51:46+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">15</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [5193fe9dd730f9bbb72db055f37625fe9558b6ca]) Exclude unchanged records from the collection being considered for autosave. [#2578 state:resolved]

Signed-off-by: Eloy Duran &lt;eloy.de.enige@gmail.com&gt;
http://github.com/rails/rails/commit/5193fe9dd730f9bbb72db055f37625fe9558b6ca</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/5193fe9dd730f9bbb72db055f37625fe9558b6ca&quot;
title=
&quot;Changeset [5193fe9dd730f9bbb72db055f37625fe9558b6ca]&quot;&gt;[5193fe9dd730f9bbb72db055f37625fe9558b6ca]&lt;/a&gt;)
Exclude unchanged records from the collection being considered for
autosave. [&lt;a href=&quot;/projects/8994/tickets/2578&quot; title=
&quot;Ticket #2578&quot;&gt;#2578&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Eloy Duran &lt;a&gt;eloy.de.enige@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/5193fe9dd730f9bbb72db055f37625fe9558b6ca&quot;&gt;
http://github.com/rails/rails/commit/5193fe9dd730f9bbb72db055f37625...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-08T23:24:11+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2010-01-08T23:24:14+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">16</version>
      <user-name>Repository</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [eb22c248de8a867d3ffef09ff8575409918c9011]) Exclude unchanged records from the collection being considered for autosave. [#2578 state:resolved]

Signed-off-by: Eloy Duran &lt;eloy.de.enige@gmail.com&gt;
http://github.com/rails/rails/commit/eb22c248de8a867d3ffef09ff8575409918c9011</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/eb22c248de8a867d3ffef09ff8575409918c9011&quot;
title=
&quot;Changeset [eb22c248de8a867d3ffef09ff8575409918c9011]&quot;&gt;[eb22c248de8a867d3ffef09ff8575409918c9011]&lt;/a&gt;)
Exclude unchanged records from the collection being considered for
autosave. [&lt;a href=&quot;/projects/8994/tickets/2578&quot; title=
&quot;Ticket #2578&quot;&gt;#2578&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Eloy Duran &lt;a&gt;eloy.de.enige@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/eb22c248de8a867d3ffef09ff8575409918c9011&quot;&gt;
http://github.com/rails/rails/commit/eb22c248de8a867d3ffef09ff85754...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-08T23:28:25+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2010-01-08T23:28:27+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">17</version>
      <user-name>Repository</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Hi,

I'm not sure if this is the right place to ask, but I can't find anywhere else.

I am using Rails 2.3.8 and this problem still seems to occur. Were these commits ever merged into a released version of Rails?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I'm not sure if this is the right place to ask, but I can't find
anywhere else.&lt;/p&gt;
&lt;p&gt;I am using Rails 2.3.8 and this problem still seems to occur.
Were these commits ever merged into a released version of
Rails?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-07T06:44:29+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2010-07-07T06:44:32+01:00</updated-at>
      <user-id type="integer">53013</user-id>
      <version type="integer">18</version>
      <user-name>Wil Gieseler</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I have the same observation as Wil Gieseler. It seems like this section of the codebase got some work in the 2.3.6 release, but the problem in this ticket still occurs. References:

http://github.com/rails/rails/commit/eb22c248de8a867d3ffef09ff8575409918c9011
http://github.com/rails/rails/commit/a5696e36c6b49381e84184fcc2f164285a26a166
http://github.com/rails/rails/blob/v2.3.6/activerecord/lib/active_record/autosave_association.rb
http://github.com/rails/rails/commits/v2.3.6/activerecord/lib/active_record/autosave_association.rb

Anyone know what happened? My AR-fu is not strong enough to figure out what is going on in those updates.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the same observation as Wil Gieseler. It seems like this
section of the codebase got some work in the 2.3.6 release, but the
problem in this ticket still occurs. References:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/eb22c248de8a867d3ffef09ff8575409918c9011&quot;&gt;
http://github.com/rails/rails/commit/eb22c248de8a867d3ffef09ff85754...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/a5696e36c6b49381e84184fcc2f164285a26a166&quot;&gt;
http://github.com/rails/rails/commit/a5696e36c6b49381e84184fcc2f164...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/blob/v2.3.6/activerecord/lib/active_record/autosave_association.rb&quot;&gt;
http://github.com/rails/rails/blob/v2.3.6/activerecord/lib/active_r...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commits/v2.3.6/activerecord/lib/active_record/autosave_association.rb&quot;&gt;
http://github.com/rails/rails/commits/v2.3.6/activerecord/lib/activ...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Anyone know what happened? My AR-fu is not strong enough to
figure out what is going on in those updates.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-25T21:49:10+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2010-09-25T21:49:14+01:00</updated-at>
      <user-id type="integer">34964</user-id>
      <version type="integer">19</version>
      <user-name>Todd Eichel</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:53:34+01:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2010-10-09T21:53:38+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">21</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:10:10+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2010-11-08T23:12:04+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">22</version>
      <user-name>jim123456</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T03:30:00+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2010-12-28T03:36:23+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">23</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T06:57:07+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2011-02-16T07:20:10+00:00</updated-at>
      <user-id type="integer">137258</user-id>
      <version type="integer">24</version>
      <user-name>fgfhnmn</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:48:28+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2011-02-19T09:28:20+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">25</version>
      <user-name>mklo</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:13:58+00:00</created-at>
      <creator-id type="integer">7325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2578</number>
      <permalink>accepts_nested_attributes_for-causes-stack-level-too-deep</permalink>
      <priority type="integer">1718</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>accepts_nested_attributes_for causes stack level too deep</title>
      <updated-at type="datetime">2011-03-26T02:44:04+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">26</version>
      <user-name>bingbing</user-name>
      <creator-name>Theodore Mills</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2578</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>591ba883d1016594b82b7b41b217b11bb94aa4de</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-01T02:59:21+01:00</created-at>
      <filename>nested_plus_touch__save_collection_association.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">283284</id>
      <size type="integer">1055</size>
      <uploader-id type="integer">71551</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/283284/nested_plus_touch__save_collection_association.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>cada387752507fbc122df8a1427da8b3f7445bbb</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-01T02:59:21+01:00</created-at>
      <filename>nested_plus_touch__associated_records_to_validate_or_save.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">283285</id>
      <size type="integer">1519</size>
      <uploader-id type="integer">71551</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/283285/nested_plus_touch__associated_records_to_validate_or_save.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>5244f29fa5ffccbb03f900403bbcd17b1c37ba49</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-01T04:37:53+01:00</created-at>
      <filename>autosave_changes_only.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">283311</id>
      <size type="integer">4205</size>
      <uploader-id type="integer">20836</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/283311/autosave_changes_only.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>7408f81d954f74e9d329f170735843a3f4f999df</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-01T08:19:40+01:00</created-at>
      <filename>autosave_changes_with_test.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">283366</id>
      <size type="integer">5945</size>
      <uploader-id type="integer">71551</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/283366/autosave_changes_with_test.diff</url>
    </attachment>
  </attachments>
</ticket>
