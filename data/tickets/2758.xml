<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-06-04T14:26:04+01:00</created-at>
  <creator-id type="integer">39771</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2758</number>
  <permalink>take-profit-of-model-columns-translations</permalink>
  <priority type="integer">1867</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>form_for helper i18n label</tag>
  <title>Take profit of model columns' translations</title>
  <updated-at type="datetime">2009-06-05T12:16:09+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">4</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Hector Parra</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2758</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>With the incorpored I18n is possible to specify the right transalations for model names, model columns and model errors.
I was surprised when I defined them in one of my projects and realized that the &quot;label&quot; function didn't cared about my columns transalation.

Example, in a view:

&lt;% form_for @user do |f| %&gt;

    &lt;%= f.label :name %&gt;
    &lt;%= f.text_field :name %&gt;

    &lt;%= f.submit t('create') %&gt;
&lt;% end %&gt;

The text of the label is by default &quot;Name&quot;, no matter which language I have selected.

The easy solution:

&lt;%= f.label :name, User.human_attribute_name(&quot;name&quot;) %&gt;

I just thought it would be interesting that Rails tryed to translate it by default.
I changed the behaviour with a little patch, but maybe there's a better solution. My patch:

module ActionView
  module Helpers
    module FormHelper
      InstanceTag.class_eval do
        alias_method :to_label_tag_old, :to_label_tag
        def to_label_tag(text = nil, options = {})
          begin
            text ||= object_name.to_s.classify.constantize.human_attribute_name(method_name)
          rescue NameError =&gt; e; end
          to_label_tag_old(text,options)
        end
      end
    end
  end
end</original-body>
  <latest-body>With the incorpored I18n is possible to specify the right transalations for model names, model columns and model errors.
I was surprised when I defined them in one of my projects and realized that the &quot;label&quot; function didn't cared about my columns transalation.

Example, in a view:

&lt;% form_for @user do |f| %&gt;

    &lt;%= f.label :name %&gt;
    &lt;%= f.text_field :name %&gt;

    &lt;%= f.submit t('create') %&gt;
&lt;% end %&gt;

The text of the label is by default &quot;Name&quot;, no matter which language I have selected.

The easy solution:

&lt;%= f.label :name, User.human_attribute_name(&quot;name&quot;) %&gt;

I just thought it would be interesting that Rails tryed to translate it by default.
I changed the behaviour with a little patch, but maybe there's a better solution. My patch:

module ActionView
  module Helpers
    module FormHelper
      InstanceTag.class_eval do
        alias_method :to_label_tag_old, :to_label_tag
        def to_label_tag(text = nil, options = {})
          begin
            text ||= object_name.to_s.classify.constantize.human_attribute_name(method_name)
          rescue NameError =&gt; e; end
          to_label_tag_old(text,options)
        end
      end
    end
  end
end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With the incorpored I18n is possible to specify the right
transalations for model names, model columns and model errors. I
was surprised when I defined them in one of my projects and
realized that the &quot;label&quot; function didn't cared about my columns
transalation.&lt;/p&gt;
&lt;p&gt;Example, in a view:&lt;/p&gt;
&lt;p&gt;&amp;lt;% form_for @user do |f| %&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= f.label :name %&amp;gt;
&amp;lt;%= f.text_field :name %&amp;gt;

&amp;lt;%= f.submit t('create') %&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;% end %&amp;gt;&lt;/p&gt;
&lt;p&gt;The text of the label is by default &quot;Name&quot;, no matter which
language I have selected.&lt;/p&gt;
&lt;p&gt;The easy solution:&lt;/p&gt;
&lt;p&gt;&amp;lt;%= f.label :name, User.human_attribute_name(&quot;name&quot;)
%&amp;gt;&lt;/p&gt;
&lt;p&gt;I just thought it would be interesting that Rails tryed to
translate it by default. I changed the behaviour with a little
patch, but maybe there's a better solution. My patch:&lt;/p&gt;
&lt;p&gt;module ActionView module Helpers&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module FormHelper
  InstanceTag.class_eval do
    alias_method :to_label_tag_old, :to_label_tag
    def to_label_tag(text = nil, options = {})
      begin
        text ||= object_name.to_s.classify.constantize.human_attribute_name(method_name)
      rescue NameError =&amp;gt; e; end
      to_label_tag_old(text,options)
    end
  end
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With the incorpored I18n is possible to specify the right transalations for model names, model columns and model errors.
I was surprised when I defined them in one of my projects and realized that the &quot;label&quot; function didn't cared about my columns transalation.

Example, in a view:

&lt;% form_for @user do |f| %&gt;

    &lt;%= f.label :name %&gt;
    &lt;%= f.text_field :name %&gt;

    &lt;%= f.submit t('create') %&gt;
&lt;% end %&gt;

The text of the label is by default &quot;Name&quot;, no matter which language I have selected.

The easy solution:

&lt;%= f.label :name, User.human_attribute_name(&quot;name&quot;) %&gt;

I just thought it would be interesting that Rails tryed to translate it by default.
I changed the behaviour with a little patch, but maybe there's a better solution. My patch:

module ActionView
  module Helpers
    module FormHelper
      InstanceTag.class_eval do
        alias_method :to_label_tag_old, :to_label_tag
        def to_label_tag(text = nil, options = {})
          begin
            text ||= object_name.to_s.classify.constantize.human_attribute_name(method_name)
          rescue NameError =&gt; e; end
          to_label_tag_old(text,options)
        end
      end
    end
  end
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;With the incorpored I18n is possible to specify the right
transalations for model names, model columns and model errors.&lt;br&gt;
I was surprised when I defined them in one of my projects and
realized that the &quot;label&quot; function didn't cared about my columns
transalation.&lt;/p&gt;
&lt;p&gt;Example, in a view:&lt;/p&gt;
&lt;p&gt;&amp;lt;% form_for @user do |f| %&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= f.label :name %&amp;gt;
&amp;lt;%= f.text_field :name %&amp;gt;

&amp;lt;%= f.submit t('create') %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;% end %&amp;gt;&lt;/p&gt;
&lt;p&gt;The text of the label is by default &quot;Name&quot;, no matter which
language I have selected.&lt;/p&gt;
&lt;p&gt;The easy solution:&lt;/p&gt;
&lt;p&gt;&amp;lt;%= f.label :name, User.human_attribute_name(&quot;name&quot;)
%&amp;gt;&lt;/p&gt;
&lt;p&gt;I just thought it would be interesting that Rails tryed to
translate it by default.&lt;br&gt;
I changed the behaviour with a little patch, but maybe there's a
better solution. My patch:&lt;/p&gt;
&lt;p&gt;module ActionView&lt;br&gt;
module Helpers&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module FormHelper
  InstanceTag.class_eval do
    alias_method :to_label_tag_old, :to_label_tag
    def to_label_tag(text = nil, options = {})
      begin
        text ||= object_name.to_s.classify.constantize.human_attribute_name(method_name)
      rescue NameError =&amp;gt; e; end
      to_label_tag_old(text,options)
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-04T14:26:05+01:00</created-at>
      <creator-id type="integer">39771</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2758</number>
      <permalink>take-profit-of-model-columns-translations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for helper i18n label</tag>
      <title>Take profit of model columns' translations</title>
      <updated-at type="datetime">2009-06-04T14:26:10+01:00</updated-at>
      <user-id type="integer">39771</user-id>
      <version type="integer">1</version>
      <user-name>Hector Parra</user-name>
      <creator-name>Hector Parra</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2758</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This seems related to or duplicate of 
https://rails.lighthouseapp.com/projects/8994/tickets/745-form-label-should-use-i18n</body>
      <body-html>&lt;div&gt;&lt;p&gt;This seems related to or duplicate of&lt;br&gt;
&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/745-form-label-should-use-i18n&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/745-form-labe...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-05T09:19:14+01:00</created-at>
      <creator-id type="integer">39771</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2758</number>
      <permalink>take-profit-of-model-columns-translations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for helper i18n label</tag>
      <title>Take profit of model columns' translations</title>
      <updated-at type="datetime">2009-06-05T09:19:16+01:00</updated-at>
      <user-id type="integer">59006</user-id>
      <version type="integer">2</version>
      <user-name>Ronald Sacher</user-name>
      <creator-name>Hector Parra</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2758</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, you are right. I'm sorry I didn't see it before. This ticket can be closed :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, you are right. I'm sorry I didn't see it before. This
ticket can be closed :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-05T10:58:18+01:00</created-at>
      <creator-id type="integer">39771</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2758</number>
      <permalink>take-profit-of-model-columns-translations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for helper i18n label</tag>
      <title>Take profit of model columns' translations</title>
      <updated-at type="datetime">2009-06-05T10:58:22+01:00</updated-at>
      <user-id type="integer">39771</user-id>
      <version type="integer">3</version>
      <user-name>Hector Parra</user-name>
      <creator-name>Hector Parra</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2758</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicate of #745</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicate of &lt;a href=&quot;/projects/8994/tickets/745&quot; title=
&quot;Ticket #745&quot;&gt;#745&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-05T12:16:08+01:00</created-at>
      <creator-id type="integer">39771</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2758</number>
      <permalink>take-profit-of-model-columns-translations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>form_for helper i18n label</tag>
      <title>Take profit of model columns' translations</title>
      <updated-at type="datetime">2009-06-05T12:16:09+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">4</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Hector Parra</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2758</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
