diff --git a/activerecord/lib/active_record/dirty.rb b/activerecord/lib/active_record/dirty.rb
index c6d89e3..abeb489 100644
--- a/activerecord/lib/active_record/dirty.rb
+++ b/activerecord/lib/active_record/dirty.rb
@@ -117,14 +117,7 @@ module ActiveRecord
         # The attribute already has an unsaved change.
         unless changed_attributes.include?(attr)
           old = clone_attribute_value(:read_attribute, attr)
-
-          # Remember the original value if it's different.
-          typecasted = if column = column_for_attribute(attr)
-                         column.type_cast(value)
-                       else
-                         value
-                       end
-          changed_attributes[attr] = old unless old == typecasted
+          changed_attributes[attr] = old unless field_unchanged?(attr, old, value)
         end
 
         # Carry on.
@@ -138,5 +131,20 @@ module ActiveRecord
           update_without_dirty
         end
       end
+
+      def field_unchanged? attr, old, new
+        column = column_for_attribute(attr)
+
+        if column
+          if column.type == :integer and column.null and old.nil?
+            new = nil if new.blank?
+          else
+            new = column.type_cast(new)
+          end
+        end
+
+        old == new
+      end
+
   end
 end
diff --git a/activerecord/test/cases/dirty_test.rb b/activerecord/test/cases/dirty_test.rb
index 7412e63..b8fef22 100644
--- a/activerecord/test/cases/dirty_test.rb
+++ b/activerecord/test/cases/dirty_test.rb
@@ -44,6 +44,14 @@ class DirtyTest < ActiveRecord::TestCase
     assert_nil pirate.catchphrase_change
   end
 
+  def test_nullable_integer_not_marked_as_changed_if_new_value_is_blank
+    pirate = Pirate.new
+
+    pirate.parrot_id = ""
+    assert !pirate.parrot_id_changed?
+    assert_nil pirate.parrot_id_change
+  end
+
   def test_object_should_be_changed_if_any_attribute_is_changed
     pirate = Pirate.new
     assert !pirate.changed?
