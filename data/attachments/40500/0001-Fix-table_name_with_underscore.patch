From e25424a7a12ba392210c5466b4367ee880d033a5 Mon Sep 17 00:00:00 2001
From: Morgan Schweers <mrs@jobster.com>
Date: Wed, 20 Aug 2008 11:32:20 -0700
Subject: [PATCH] Fix :table_name_with_underscore by altering create_table to singularize
 the table name before passing it to the Base primary_key method.  This
 is consistent with Model.find(1) which uses the singular model name as
 the primary key.

---
 .../abstract/schema_statements.rb                  |    2 +-
 activerecord/test/cases/migration_test.rb          |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb b/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb
index 55f6799..0c5bb48 100644
--- a/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb
+++ b/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb
@@ -93,7 +93,7 @@ module ActiveRecord
       # See also TableDefinition#column for details on how to create columns.
       def create_table(table_name, options = {})
         table_definition = TableDefinition.new(self)
-        table_definition.primary_key(options[:primary_key] || Base.get_primary_key(table_name)) unless options[:id] == false
+        table_definition.primary_key(options[:primary_key] || Base.get_primary_key(table_name.to_s.singularize)) unless options[:id] == false
 
         yield table_definition
 
diff --git a/activerecord/test/cases/migration_test.rb b/activerecord/test/cases/migration_test.rb
index 7ecf755..da36431 100644
--- a/activerecord/test/cases/migration_test.rb
+++ b/activerecord/test/cases/migration_test.rb
@@ -200,7 +200,7 @@ if ActiveRecord::Base.connection.supports_migrations?
           t.column :foo, :string
       end
 
-      assert_equal %w(foo testings_id), Person.connection.columns(:testings).map { |c| c.name }.sort
+      assert_equal %w(foo testing_id), Person.connection.columns(:testings).map { |c| c.name }.sort
     ensure
       Person.connection.drop_table :testings rescue nil
       ActiveRecord::Base.primary_key_prefix_type = nil
@@ -213,7 +213,7 @@ if ActiveRecord::Base.connection.supports_migrations?
           t.column :foo, :string
       end
 
-      assert_equal %w(foo testingsid), Person.connection.columns(:testings).map { |c| c.name }.sort
+      assert_equal %w(foo testingid), Person.connection.columns(:testings).map { |c| c.name }.sort
     ensure
       Person.connection.drop_table :testings rescue nil
       ActiveRecord::Base.primary_key_prefix_type = nil
-- 
1.5.6.2

