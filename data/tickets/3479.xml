<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T07:38:08+00:00</created-at>
  <creator-id type="integer">76108</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">82855</milestone-id>
  <number type="integer">3479</number>
  <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activesupport decode json newline patch yaml</tag>
  <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
  <updated-at type="datetime">2011-03-26T02:25:27+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">14</version>
  <user-name>bingbing</user-name>
  <creator-name>Ethan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
  <milestone-title>2.3.10</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>With the YAML backend, ActiveSupport::JSON decodes a unicode-escaped newline (or CRLF) as a space. It does the same with a literal newline. But, it deals correctly with a \n-escaped newline. 

@@@ ruby
# unicode-escaped LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)
=&gt; &quot; &quot;
# unicode-escaped CRLF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000d\\u000a\&quot;&quot;)
=&gt; &quot; &quot;
# literal LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\n\&quot;&quot;)
=&gt; &quot; &quot;
# normal backslash-escaped LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\n\&quot;&quot;)
=&gt; &quot;\n&quot;
@@@

The JSON gem does this correctly:

@@@ ruby
&gt;&gt; JSON.parse &quot;[\&quot;\\u000a\&quot;]&quot;
=&gt; [&quot;\n&quot;]
@@@

(note that it's in an array because the JSON gem doesn't seem to like decoding just strings. but that's not at issue here; the YAML backend fails when it's in an array too) 

This is because the method convert_json_to_yaml changes the escaped newline to a literal newline:

@@@ ruby
&gt;&gt; ActiveSupport::JSON::Backends::Yaml.send(:convert_json_to_yaml, &quot;[\&quot;\\u000a\&quot;]&quot;)
=&gt; &quot;[\&quot;\n\&quot;]&quot;
@@@
and then calls YAML.load(&quot;[\&quot;\n\&quot;]&quot;) which changes the newline to a space:

@@@ ruby
&gt;&gt; YAML.load &quot;[\&quot;\n\&quot;]&quot;
=&gt; [&quot; &quot;]
@@@

I'm not sure if that's correct behavior for YAML or not. But, the result is certainly incorrect for JSON. 
A workaround could be to escape newlines in strings before passing them to YAML, after converting from unicode-escaped newline to literal newline. that is, change &quot;\n&quot; to &quot;\\n&quot;; change &quot;\r\n&quot; to &quot;\\r\\n&quot;, as YAML correctly converts those to literal newlines.</original-body>
  <latest-body>With the YAML backend, ActiveSupport::JSON decodes a unicode-escaped newline (or CRLF) as a space. It does the same with a literal newline. But, it deals correctly with a \n-escaped newline. 

@@@ ruby
# unicode-escaped LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)
=&gt; &quot; &quot;
# unicode-escaped CRLF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000d\\u000a\&quot;&quot;)
=&gt; &quot; &quot;
# literal LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\n\&quot;&quot;)
=&gt; &quot; &quot;
# normal backslash-escaped LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\n\&quot;&quot;)
=&gt; &quot;\n&quot;
@@@

The JSON gem does this correctly:

@@@ ruby
&gt;&gt; JSON.parse &quot;[\&quot;\\u000a\&quot;]&quot;
=&gt; [&quot;\n&quot;]
@@@

(note that it's in an array because the JSON gem doesn't seem to like decoding just strings. but that's not at issue here; the YAML backend fails when it's in an array too) 

This is because the method convert_json_to_yaml changes the escaped newline to a literal newline:

@@@ ruby
&gt;&gt; ActiveSupport::JSON::Backends::Yaml.send(:convert_json_to_yaml, &quot;[\&quot;\\u000a\&quot;]&quot;)
=&gt; &quot;[\&quot;\n\&quot;]&quot;
@@@
and then calls YAML.load(&quot;[\&quot;\n\&quot;]&quot;) which changes the newline to a space:

@@@ ruby
&gt;&gt; YAML.load &quot;[\&quot;\n\&quot;]&quot;
=&gt; [&quot; &quot;]
@@@

I'm not sure if that's correct behavior for YAML or not. But, the result is certainly incorrect for JSON. 
A workaround could be to escape newlines in strings before passing them to YAML, after converting from unicode-escaped newline to literal newline. that is, change &quot;\n&quot; to &quot;\\n&quot;; change &quot;\r\n&quot; to &quot;\\r\\n&quot;, as YAML correctly converts those to literal newlines.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With the YAML backend, ActiveSupport::JSON decodes a
unicode-escaped newline (or CRLF) as a space. It does the same with
a literal newline. But, it deals correctly with a \n-escaped
newline.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# unicode-escaped LF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)
=&amp;gt; &quot; &quot;
# unicode-escaped CRLF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000d\\u000a\&quot;&quot;)
=&amp;gt; &quot; &quot;
# literal LF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\n\&quot;&quot;)
=&amp;gt; &quot; &quot;
# normal backslash-escaped LF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\\n\&quot;&quot;)
=&amp;gt; &quot;\n&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The JSON gem does this correctly:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; JSON.parse &quot;[\&quot;\\u000a\&quot;]&quot;
=&amp;gt; [&quot;\n&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(note that it's in an array because the JSON gem doesn't seem to
like decoding just strings. but that's not at issue here; the YAML
backend fails when it's in an array too)&lt;/p&gt;
&lt;p&gt;This is because the method convert_json_to_yaml changes the
escaped newline to a literal newline:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt;&amp;gt; ActiveSupport::JSON::Backends::Yaml.send(:convert_json_to_yaml, &quot;[\&quot;\\u000a\&quot;]&quot;)
=&amp;gt; &quot;[\&quot;\n\&quot;]&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and then calls YAML.load(&quot;[&quot;\n&quot;]&quot;) which changes the newline to
a space:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; YAML.load &quot;[\&quot;\n\&quot;]&quot;
=&amp;gt; [&quot; &quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm not sure if that's correct behavior for YAML or not. But,
the result is certainly incorrect for JSON.&lt;br&gt;
A workaround could be to escape newlines in strings before passing
them to YAML, after converting from unicode-escaped newline to
literal newline. that is, change &quot;\n&quot; to &quot;\n&quot;; change &quot;\r\n&quot; to
&quot;\r\n&quot;, as YAML correctly converts those to literal newlines.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With the YAML backend, ActiveSupport::JSON decodes a unicode-escaped newline (or CRLF) as a space. It does the same with a literal newline. But, it deals correctly with a \n-escaped newline. 

@@@ ruby
# unicode-escaped LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)
=&gt; &quot; &quot;
# unicode-escaped CRLF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000d\\u000a\&quot;&quot;)
=&gt; &quot; &quot;
# literal LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\n\&quot;&quot;)
=&gt; &quot; &quot;
# normal backslash-escaped LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\n\&quot;&quot;)
=&gt; &quot;\n&quot;
@@@

The JSON gem does this correctly:

@@@ ruby
&gt;&gt; JSON.parse &quot;[\&quot;\\u000a\&quot;]&quot;
=&gt; [&quot;\n&quot;]
@@@

(note that it's in an array because the JSON gem doesn't seem to like decoding just strings. but that's not at issue here; the YAML backend fails when it's in an array too) 

This is because the method convert_json_to_yaml changes the escaped newline to a literal newline:

@@@ ruby
&gt;&gt; ActiveSupport::JSON::Backends::Yaml.send(:convert_json_to_yaml, &quot;[\&quot;\\u000a\&quot;]&quot;)
=&gt; &quot;[\&quot;\n\&quot;]&quot;
@@@
and then calls YAML.load(&quot;[\&quot;\n\&quot;]&quot;) which changes the newline to a space:

@@@ ruby
&gt;&gt; YAML.load &quot;[\&quot;\n\&quot;]&quot;
=&gt; [&quot; &quot;]
@@@

I'm not sure if that's correct behavior for YAML or not. But, the result is certainly incorrect for JSON. 
A workaround could be to escape newlines in strings before passing them to YAML, after converting from unicode-escaped newline to literal newline. that is, change &quot;\n&quot; to &quot;\\n&quot;; change &quot;\r\n&quot; to &quot;\\r\\n&quot;, as YAML correctly converts those to literal newlines.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With the YAML backend, ActiveSupport::JSON decodes a
unicode-escaped newline (or CRLF) as a space. It does the same with
a literal newline. But, it deals correctly with a \n-escaped
newline.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# unicode-escaped LF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)
=&amp;gt; &quot; &quot;
# unicode-escaped CRLF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000d\\u000a\&quot;&quot;)
=&amp;gt; &quot; &quot;
# literal LF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\n\&quot;&quot;)
=&amp;gt; &quot; &quot;
# normal backslash-escaped LF
&amp;gt;&amp;gt; ActiveSupport::JSON.decode(&quot;\&quot;\\n\&quot;&quot;)
=&amp;gt; &quot;\n&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The JSON gem does this correctly:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; JSON.parse &quot;[\&quot;\\u000a\&quot;]&quot;
=&amp;gt; [&quot;\n&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(note that it's in an array because the JSON gem doesn't seem to
like decoding just strings. but that's not at issue here; the YAML
backend fails when it's in an array too)&lt;/p&gt;
&lt;p&gt;This is because the method convert_json_to_yaml changes the
escaped newline to a literal newline:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt;&amp;gt; ActiveSupport::JSON::Backends::Yaml.send(:convert_json_to_yaml, &quot;[\&quot;\\u000a\&quot;]&quot;)
=&amp;gt; &quot;[\&quot;\n\&quot;]&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and then calls YAML.load(&quot;[&quot;\n&quot;]&quot;) which changes the newline to
a space:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; YAML.load &quot;[\&quot;\n\&quot;]&quot;
=&amp;gt; [&quot; &quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm not sure if that's correct behavior for YAML or not. But,
the result is certainly incorrect for JSON.&lt;br&gt;
A workaround could be to escape newlines in strings before passing
them to YAML, after converting from unicode-escaped newline to
literal newline. that is, change &quot;\n&quot; to &quot;\n&quot;; change &quot;\r\n&quot; to
&quot;\r\n&quot;, as YAML correctly converts those to literal newlines.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-10T23:08:12+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport decode json newline yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2009-11-10T23:08:17+00:00</updated-at>
      <user-id type="integer">76108</user-id>
      <version type="integer">1</version>
      <user-name>Ethan</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>formatting seems to have gotten lost; that last line was supposed to say:

@@@
change &quot;\n&quot; to &quot;\\n&quot;; change &quot;\r\n&quot; to &quot;\\r\\n&quot;, as YAML correctly converts those to literal newlines. 
@@@

 (maybe it will work this time? where's the preview function on this thing?)</body>
      <body-html>&lt;div&gt;&lt;p&gt;formatting seems to have gotten lost; that last line was
supposed to say:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;change &quot;\n&quot; to &quot;\\n&quot;; change &quot;\r\n&quot; to &quot;\\r\\n&quot;, as YAML correctly converts those to literal newlines.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(maybe it will work this time? where's the preview function on
this thing?)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-11T02:01:44+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport decode json newline yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2009-11-11T02:01:45+00:00</updated-at>
      <user-id type="integer">76108</user-id>
      <version type="integer">2</version>
      <user-name>Ethan</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As you previously reported it, ActiveSupport::JSON fails to decode a unicode-escaped newline with the YAML backend :

# unicode-escaped LF
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)
=&gt; &quot; &quot;

With the new Yajl backend, same code works :

# unicode-escaped LF (with Yajl backend)
&gt;&gt; ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)
=&gt; &quot;\n&quot;

I did not test with JSON gem, since it's not a default json backend since rails 2.3.6.

I believe &quot;\n&quot; char is interpreted in YAML as a formatting instruction of the file.
So newlines need to be escaped as &quot;\\n&quot; before passing yaml string to &quot;YAML.load&quot; method.

I also think it's a newline-only bug. Other &quot;backslash-chars&quot; like &quot;\r&quot; are correctly handled without extra escaping.

I propose the attached patch to fix the issue in &quot;convert_json_to_yaml&quot; method.
I added 3 tests to check that bug is fixed with any backend.

Did you have any other feedback on this issue ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;As you previously reported it, ActiveSupport::JSON fails to
decode a unicode-escaped newline with the YAML backend :&lt;/p&gt;
&lt;h1&gt;unicode-escaped LF&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ActiveSupport::JSON.decode(&quot;&quot;\u000a&quot;&quot;) =&amp;gt; &quot; &quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;With the new Yajl backend, same code works :&lt;/p&gt;
&lt;h1&gt;unicode-escaped LF (with Yajl backend)&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ActiveSupport::JSON.decode(&quot;&quot;\u000a&quot;&quot;) =&amp;gt; &quot;\n&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I did not test with JSON gem, since it's not a default json
backend since rails 2.3.6.&lt;/p&gt;
&lt;p&gt;I believe &quot;\n&quot; char is interpreted in YAML as a formatting
instruction of the file.&lt;br&gt;
So newlines need to be escaped as &quot;\n&quot; before passing yaml string
to &quot;YAML.load&quot; method.&lt;/p&gt;
&lt;p&gt;I also think it's a newline-only bug. Other &quot;backslash-chars&quot;
like &quot;\r&quot; are correctly handled without extra escaping.&lt;/p&gt;
&lt;p&gt;I propose the attached patch to fix the issue in
&quot;convert_json_to_yaml&quot; method.&lt;br&gt;
I added 3 tests to check that bug is fixed with any backend.&lt;/p&gt;
&lt;p&gt;Did you have any other feedback on this issue ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-14T15:41:07+01:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport decode json newline yaml
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2010-06-14T15:41:12+01:00</updated-at>
      <user-id type="integer">103208</user-id>
      <version type="integer">3</version>
      <user-name>Maxime RETY</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Oops i should have read formatting help more carefully !


As you previously reported it, ActiveSupport::JSON fails to decode a unicode-escaped newline with the YAML backend :

 # unicode-escaped LF  
 ActiveSupport::JSON.decode(&quot;\\&quot;\\\\u000a\\&quot;&quot;)  
 =&gt; &quot; &quot;

With the new Yajl backend, same code works :

 # unicode-escaped LF (with Yajl backend)   
 ActiveSupport::JSON.decode(&quot;\\&quot;\\\\u000a\\&quot;&quot;)  
 =&gt; &quot;\n&quot;


I did not test with JSON gem, since it's not a default json backend since rails 2.3.6.

I believe &quot;\n&quot; char is interpreted in YAML as a formatting instruction of the file.
So newlines need to be escaped as &quot;\\\n&quot; before passing yaml string to &quot;YAML.load&quot; method.

I propose the attached patch to fix the issue in &quot;convert\_json\_to\_yaml&quot; method.
I added 3 tests to check that bug is fixed with any backend.

Did you have any other feedback on this issue ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops i should have read formatting help more carefully !&lt;/p&gt;
&lt;p&gt;As you previously reported it, ActiveSupport::JSON fails to
decode a unicode-escaped newline with the YAML backend :&lt;/p&gt;
&lt;p&gt;# unicode-escaped LF&lt;br&gt;
ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)&lt;br&gt;
=&amp;gt; &quot; &quot;&lt;/p&gt;
&lt;p&gt;With the new Yajl backend, same code works :&lt;/p&gt;
&lt;p&gt;# unicode-escaped LF (with Yajl backend)&lt;br&gt;
ActiveSupport::JSON.decode(&quot;\&quot;\\u000a\&quot;&quot;)&lt;br&gt;
=&amp;gt; &quot;\n&quot;&lt;/p&gt;
&lt;p&gt;I did not test with JSON gem, since it's not a default json
backend since rails 2.3.6.&lt;/p&gt;
&lt;p&gt;I believe &quot;\n&quot; char is interpreted in YAML as a formatting
instruction of the file.&lt;br&gt;
So newlines need to be escaped as &quot;\\n&quot; before passing yaml string
to &quot;YAML.load&quot; method.&lt;/p&gt;
&lt;p&gt;I propose the attached patch to fix the issue in
&quot;convert_json_to_yaml&quot; method.&lt;br&gt;
I added 3 tests to check that bug is fixed with any backend.&lt;/p&gt;
&lt;p&gt;Did you have any other feedback on this issue ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-14T15:59:03+01:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2010-06-14T15:59:09+01:00</updated-at>
      <user-id type="integer">103208</user-id>
      <version type="integer">4</version>
      <user-name>Maxime RETY</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-15T04:36:58+01:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2010-06-15T04:37:06+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">5</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>a contrive &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/cartier-tank-basculante-mens-watch-w1011358-watch.html&quot;&gt;Cartier Tank Basculante Mens W1011358&lt;/a&gt;&lt;/b&gt; tally about yourself, the &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/longines-master-collection-mens-watch-l2-666-8-78-2-watch.html&quot;&gt;Longines Master Collection Mens L2.666.8.78.2 sale&lt;/a&gt;&lt;/b&gt; manipulate that you are &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/franck-muller-watch.html&quot;&gt;Replica Franck Muller watches&lt;/a&gt;&lt;/b&gt; wearing does the like &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/omega-seamaster-300-m-quartz-mens-watch-2265-80-00-watch.html&quot;&gt;Omega Seamaster 300 M Quartz Mens 2265.80.00 sale&lt;/a&gt;&lt;/b&gt; to a choice neb. &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; You trust speak for &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/jaeger-lecoultre-reverso-grande-date-mens-watch-300-11-20-watch.html&quot;&gt;Jaeger-LeCoultre Reverso Grande Date Mens 300.11.20&lt;/a&gt;&lt;/b&gt; press on hopeful that &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/ulysse-nardin-sonata-mens-watch-666-88-watch.html&quot;&gt;fake Ulysse Nardin Sonata Mens 666-88&lt;/a&gt;&lt;/b&gt; when you languid Cartier &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; replica Watches exhaustive multitude &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; consign bent towards you. &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/rolex-watch.html&quot;&gt;Replica Rolex watches&lt;/a&gt;&lt;/b&gt; These connections discharge not ken that what you are draining is not</body>
      <body-html>&lt;div&gt;&lt;p&gt;a contrive &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/cartier-tank-basculante-mens-watch-w1011358-watch.html&quot;&gt;
Cartier Tank Basculante Mens W1011358&lt;/a&gt;&lt;/b&gt; tally about yourself,
the &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/longines-master-collection-mens-watch-l2-666-8-78-2-watch.html&quot;&gt;
Longines Master Collection Mens L2.666.8.78.2 sale&lt;/a&gt;&lt;/b&gt;
manipulate that you are &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/franck-muller-watch.html&quot;&gt;Replica
Franck Muller watches&lt;/a&gt;&lt;/b&gt; wearing does the like &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/omega-seamaster-300-m-quartz-mens-watch-2265-80-00-watch.html&quot;&gt;
Omega Seamaster 300 M Quartz Mens 2265.80.00 sale&lt;/a&gt;&lt;/b&gt; to a
choice neb. &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake
watches&lt;/a&gt;&lt;/b&gt; You trust speak for &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/jaeger-lecoultre-reverso-grande-date-mens-watch-300-11-20-watch.html&quot;&gt;
Jaeger-LeCoultre Reverso Grande Date Mens 300.11.20&lt;/a&gt;&lt;/b&gt; press
on hopeful that &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/ulysse-nardin-sonata-mens-watch-666-88-watch.html&quot;&gt;
fake Ulysse Nardin Sonata Mens 666-88&lt;/a&gt;&lt;/b&gt; when you languid
Cartier &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake
watches&lt;/a&gt;&lt;/b&gt; replica Watches exhaustive multitude &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; consign bent
towards you. &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/rolex-watch.html&quot;&gt;Replica Rolex
watches&lt;/a&gt;&lt;/b&gt; These connections discharge not ken that what you
are draining is not&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T09:34:36+01:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">176552</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2010-07-19T10:05:00+01:00</updated-at>
      <user-id type="integer">107783</user-id>
      <version type="integer">6</version>
      <user-name>LYN</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27613)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27613&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T02:28:50+01:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 73534
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2010-08-30T02:28:50+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:49:45+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2011-02-02T18:13:51+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:49:47+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2011-02-02T18:14:08+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This is still reproducing in ActiveSupport 3.0.3. Maxime's patch should be applied. 

[state:open]</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is still reproducing in ActiveSupport 3.0.3. Maxime's patch
should be applied.&lt;/p&gt;
&lt;p&gt;[state:open]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T20:38:10+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2011-02-02T20:47:09+00:00</updated-at>
      <user-id type="integer">76108</user-id>
      <version type="integer">10</version>
      <user-name>Ethan</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [68e3fb81090ba67575e513407fc2463dba3b002b]) Fix JSON decoding of newline character with Yaml backend [#3479 state:resolved]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/68e3fb81090ba67575e513407fc2463dba3b002b</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/68e3fb81090ba67575e513407fc2463dba3b002b&quot;
title=
&quot;Changeset [68e3fb81090ba67575e513407fc2463dba3b002b]&quot;&gt;[68e3fb81090ba67575e513407fc2463dba3b002b]&lt;/a&gt;)
Fix JSON decoding of newline character with Yaml backend [&lt;a href=
&quot;/projects/8994/tickets/3479&quot; title=&quot;Ticket #3479&quot;&gt;#3479&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino &lt;a href=
&quot;mailto:santiago@wyeworks.com&quot;&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/68e3fb81090ba67575e513407fc2463dba3b002b&quot;&gt;
https://github.com/rails/rails/commit/68e3fb81090ba67575e513407fc24...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T21:03:19+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2011-02-02T21:03:34+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">11</version>
      <user-name>Repository</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T02:56:08+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2011-02-14T05:41:57+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">12</version>
      <user-name>xixi</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T07:30:06+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2011-02-17T07:38:08+00:00</updated-at>
      <user-id type="integer">137451</user-id>
      <version type="integer">13</version>
      <user-name>fghgghjg</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:06:18+00:00</created-at>
      <creator-id type="integer">76108</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3479</number>
      <permalink>activesupportjson-fails-to-decode-unicode-escaped-newline-and-literal-newlines</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport decode json newline patch yaml</tag>
      <title>ActiveSupport::JSON fails to decode unicode-escaped newline and literal newlines </title>
      <updated-at type="datetime">2011-03-26T02:25:27+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">14</version>
      <user-name>bingbing</user-name>
      <creator-name>Ethan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3479</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9066d9a83c0658e3d75ca2ddbd1945bb25c23e3d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-14T15:41:07+01:00</created-at>
      <filename>json-newline-decoding-with-yaml-backend.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">557915</id>
      <size type="integer">2638</size>
      <uploader-id type="integer">103208</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/557915/json-newline-decoding-with-yaml-backend.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>866b25a7b5bc53aed020381e68bbcde0251ddfaa</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-14T15:59:03+01:00</created-at>
      <filename>json-newline-decoding-with-yaml-backend.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">557952</id>
      <size type="integer">2638</size>
      <uploader-id type="integer">103208</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/557952/json-newline-decoding-with-yaml-backend.diff</url>
    </attachment>
  </attachments>
</ticket>
