<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-26T14:34:22+01:00</created-at>
  <creator-id type="integer">23439</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">492</number>
  <permalink>content_tag-should-accept-block</permalink>
  <priority type="integer">17694</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>content_tag enhancement helper patch view</tag>
  <title>content_tag should accept block using variable</title>
  <updated-at type="datetime">2008-11-16T21:06:36+00:00</updated-at>
  <user-id type="integer">83</user-id>
  <version type="integer">8</version>
  <user-name>DHH</user-name>
  <creator-name>Alex</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
  <priority-name nil="true"></priority-name>
  <original-body>When using content_tag inside of a helper method, there is not currently a nice way of returning strings that contain more than one variable. 

Examples:

@@@ruby
content_tag do
string_one = fetch_value
string_two = fetch_value(2)
string_three = another_value
string_one + string_two + string_three
# or even [string_one, string_two, string_three].join
end
@@@

Code could be cleaner if you used the following approach, which I believe is also used in form_for.

@@@ruby
content_tag do |content|
content &lt;&lt; fetch_value
content &lt;&lt; fetch_value(2)
content &lt;&lt; another_value
end
@@@</original-body>
  <latest-body>When using content_tag inside of a helper method, there is not currently a nice way of returning strings that contain more than one variable. 

Examples:

@@@ruby
content_tag do
string_one = fetch_value
string_two = fetch_value(2)
string_three = another_value
string_one + string_two + string_three
# or even [string_one, string_two, string_three].join
end
@@@

Code could be cleaner if you used the following approach, which I believe is also used in form_for.

@@@ruby
content_tag do |content|
content &lt;&lt; fetch_value
content &lt;&lt; fetch_value(2)
content &lt;&lt; another_value
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When using content_tag inside of a helper method, there is not currently a nice way of returning strings that contain more than one variable.
&lt;/p&gt;&lt;p&gt;
Examples:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;content_tag do
string_one = fetch_value
string_two = fetch_value(2)
string_three = another_value
string_one + string_two + string_three
# or even [string_one, string_two, string_three].join
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Code could be cleaner if you used the following approach, which I believe is also used in form_for.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;content_tag do |content|
content &amp;lt;&amp;lt; fetch_value
content &amp;lt;&amp;lt; fetch_value(2)
content &amp;lt;&amp;lt; another_value
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using content_tag inside of a helper method, there is not currently a nice way of returning strings that contain more than one variable. 

Examples:

@@@ruby
content_tag(:p) do
string_one = fetch_value
string_two = fetch_value(2)
string_three = another_value
string_one + string_two + string_three
# or even [string_one, string_two, string_three].join
end
@@@

Code could be cleaner if you used the following approach, which I believe is also used in form_for.

@@@ruby
content_tag(:p) do |content|
content &lt;&lt; fetch_value
content &lt;&lt; fetch_value(2)
content &lt;&lt; another_value
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When using content_tag inside of a helper method, there is not currently a nice way of returning strings that contain more than one variable.
&lt;/p&gt;&lt;p&gt;
Examples:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;content_tag(:p) do
string_one = fetch_value
string_two = fetch_value(2)
string_three = another_value
string_one + string_two + string_three
# or even [string_one, string_two, string_three].join
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Code could be cleaner if you used the following approach, which I believe is also used in form_for.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;content_tag(:p) do |content|
content &amp;lt;&amp;lt; fetch_value
content &amp;lt;&amp;lt; fetch_value(2)
content &amp;lt;&amp;lt; another_value
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T14:40:05+01:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>content_tag enhancement helper view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-06-26T14:40:05+01:00</updated-at>
      <user-id type="integer">23439</user-id>
      <version type="integer">1</version>
      <user-name>Alex</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Nice proposal! Where is a patch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Nice proposal! Where is a patch?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T15:08:22+01:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>content_tag enhancement helper view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-06-26T15:08:22+01:00</updated-at>
      <user-id type="integer">8322</user-id>
      <version type="integer">2</version>
      <user-name>wildchild</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I would have submitted one but I'm not sure how to do it without breaking compatibility with the standard use in the view.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I would have submitted one but I'm not sure how to do it without breaking compatibility with the standard use in the view.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-27T04:33:16+01:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>content_tag enhancement helper view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-06-27T04:33:16+01:00</updated-at>
      <user-id type="integer">23439</user-id>
      <version type="integer">3</version>
      <user-name>Alex</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't like this idea at all. If you feel that you have to do something complex like modifying the output multiple times, you should consider refactoring it out into a helper method.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I don't like this idea at all. If you feel that you have to do something complex like modifying the output multiple times, you should consider refactoring it out into a helper method.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-30T21:15:10+01:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>content_tag enhancement helper view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-06-30T21:15:10+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">4</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Clemens,
I don't really understand what the problem is with this proposal.  I don't see why this:

@@@
content_tag(:p) do |content|
  content &lt;&lt; fetch_value
  content &lt;&lt; fetch_value(2)
  content &lt;&lt; another_value
end
@@@

would be any worse than what you have to do now which is:

@@@
content_tag(:p) do
  content = &quot;&quot;
  content &lt;&lt; fetch_value
  content &lt;&lt; fetch_value(2)
  content &lt;&lt; another_value
  content
end
@@@

And I believe the point was that this whole call *should* in fact be in a helper method, as stated in the original post, but that it would be nicer to have the content variable passed to the content_tag block.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Clemens,
I don't really understand what the problem is with this proposal.  I don't see why this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
content_tag(:p) do |content|
  content &amp;lt;&amp;lt; fetch_value
  content &amp;lt;&amp;lt; fetch_value(2)
  content &amp;lt;&amp;lt; another_value
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;would be any worse than what you have to do now which is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
content_tag(:p) do
  content = &amp;quot;&amp;quot;
  content &amp;lt;&amp;lt; fetch_value
  content &amp;lt;&amp;lt; fetch_value(2)
  content &amp;lt;&amp;lt; another_value
  content
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I believe the point was that this whole call &lt;em&gt;should&lt;/em&gt; in fact be in a helper method, as stated in the original post, but that it would be nicer to have the content variable passed to the content_tag block.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-10T09:04:12+01:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>content_tag enhancement helper view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-08-10T09:04:12+01:00</updated-at>
      <user-id type="integer">27185</user-id>
      <version type="integer">5</version>
      <user-name>Glenn Powell</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Glenn, I see your point but I still think the only way to keep it really clean is a helper method - and while I do care about style in the helper, I don't care that much that the two examples you gave would really make a difference for me.
I didn't like the whole &quot;view helpers now accept blocks&quot; thing in the first place because IMO it clutters up the view (like when you use the block style with link_to), so I may be biased here ...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Glenn, I see your point but I still think the only way to keep it really clean is a helper method - and while I do care about style in the helper, I don't care that much that the two examples you gave would really make a difference for me.
I didn't like the whole &quot;view helpers now accept blocks&quot; thing in the first place because IMO it clutters up the view (like when you use the block style with link_to), so I may be biased here ...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-10T13:24:42+01:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>content_tag enhancement helper view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-08-10T13:24:42+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">6</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What about...

@@@ ruby
content_tag(:p) do
  returning(&quot;&quot;) do |content|
    content &lt;&lt; fetch_value
    content &lt;&lt; fetch_value(2)
    content &lt;&lt; another_value
  end
end
@@@

...as a middle ground?

Either way, I've attached a patch to do what you describe... but I don't think it's quite what's needed yet.

h4. Issue:
content += &quot;fish&quot; will simply loose the initial object reference. This would be a bit of a suprise for some users.

h4. Fix:
Use a subclass of String that aliases += to &lt;&lt; or similar.

h4. Enhancement:
Allow something as follows:

@@@ ruby
content_tag(:div) do |div|
  my_text.each_line do |line|
    div.content_tag(:p, line)
  end
end
@@@

but if we allow this, we would also want to allow:

@@@ ruby
content_tag(:div) do |div|
  div.form_for(:magic) do |f|
    ...
  end
end
@@@

So we would end up having to proxy calls to all helpers... eugh!</body>
      <body-html>&lt;div&gt;&lt;p&gt;What about...&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
content_tag(:p) do
  returning(&amp;quot;&amp;quot;) do |content|
    content &amp;lt;&amp;lt; fetch_value
    content &amp;lt;&amp;lt; fetch_value(2)
    content &amp;lt;&amp;lt; another_value
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;...as a middle ground?&lt;/p&gt;

&lt;p&gt;Either way, I've attached a patch to do what you describe... but I don't think it's quite what's needed yet.&lt;/p&gt;

&lt;h4&gt;Issue:&lt;/h4&gt;

&lt;p&gt;content += &quot;fish&quot; will simply loose the initial object reference. This would be a bit of a suprise for some users.&lt;/p&gt;

&lt;h4&gt;Fix:&lt;/h4&gt;

&lt;p&gt;Use a subclass of String that aliases += to &amp;lt;&amp;lt; or similar.&lt;/p&gt;

&lt;h4&gt;Enhancement:&lt;/h4&gt;

&lt;p&gt;Allow something as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
content_tag(:div) do |div|
  my_text.each_line do |line|
    div.content_tag(:p, line)
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but if we allow this, we would also want to allow:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
content_tag(:div) do |div|
  div.form_for(:magic) do |f|
    ...
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So we would end up having to proxy calls to all helpers... eugh!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-13T14:20:16+01:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: content_tag enhancement helper view
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>content_tag enhancement helper patch view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-08-13T14:20:16+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">7</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think this is probably too clever for its own good when it has to work in the view too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this is probably too clever for its own good when it has
to work in the view too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-16T21:06:31+00:00</created-at>
      <creator-id type="integer">23439</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">492</number>
      <permalink>content_tag-should-accept-block</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>content_tag enhancement helper patch view</tag>
      <title>content_tag should accept block using variable</title>
      <updated-at type="datetime">2008-11-16T21:06:36+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">8</version>
      <user-name>DHH</user-name>
      <creator-name>Alex</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/492</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a2a3f593355be018fe0bb9c4f3d0c708a74a9b0a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-13T14:20:16+01:00</created-at>
      <filename>content_tag_with_block_param.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">38850</id>
      <size type="integer">2800</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/38850/content_tag_with_block_param.diff</url>
    </attachment>
  </attachments>
</ticket>
