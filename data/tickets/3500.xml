<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-19T07:05:16+01:00</created-at>
  <creator-id type="integer">17505</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3500</number>
  <permalink>configlog_level-is-ignored-when-setting-a-custom-logger</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>configuration logger logging log_level</tag>
  <title>config.log_level is ignored when setting a custom logger</title>
  <updated-at type="datetime">2010-07-19T07:05:16+01:00</updated-at>
  <user-id type="integer">22589</user-id>
  <version type="integer">4</version>
  <user-name>Matt Jones</user-name>
  <creator-name>Andrew Vit</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3500</url>
  <priority-name nil="true"></priority-name>
  <original-body>This behaviour is the same whether the log_level is set before or after setting the logger:

@@@
# config.log_level = :info
config.logger = Logger.new(config.log_path, 30, 1.megabyte)
config.log_level = :info
@@@

What happens is that the log output is unfiltered (as in :debug). It still says Rails.configuration.log_level is :info, but the log output includes SQL queries, etc.

I worked around it by setting it thus:

@@@
config.logger = Logger.new(config.log_path, 50, 1.megabyte)
config.log_level = :info
config.logger.level = Logger::INFO
@@@</original-body>
  <latest-body>This behaviour is the same whether the log_level is set before or after setting the logger:

@@@
# config.log_level = :info
config.logger = Logger.new(config.log_path, 30, 1.megabyte)
config.log_level = :info
@@@

What happens is that the log output is unfiltered (as in :debug). It still says Rails.configuration.log_level is :info, but the log output includes SQL queries, etc.

I worked around it by setting it thus:

@@@
config.logger = Logger.new(config.log_path, 50, 1.megabyte)
config.log_level = :info
config.logger.level = Logger::INFO
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This behaviour is the same whether the log_level is set before
or after setting the logger:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# config.log_level = :info
config.logger = Logger.new(config.log_path, 30, 1.megabyte)
config.log_level = :info&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What happens is that the log output is unfiltered (as in
:debug). It still says Rails.configuration.log_level is :info, but
the log output includes SQL queries, etc.&lt;/p&gt;
&lt;p&gt;I worked around it by setting it thus:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;config.logger = Logger.new(config.log_path, 50, 1.megabyte)
config.log_level = :info
config.logger.level = Logger::INFO&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This behaviour is the same whether the log_level is set before or after setting the logger:

@@@
# config.log_level = :info
config.logger = Logger.new(config.log_path, 30, 1.megabyte)
config.log_level = :info
@@@

What happens is that the log output is unfiltered (as in :debug). It still says Rails.configuration.log_level is :info, but the log output includes SQL queries, etc.

I worked around it by setting it thus:

@@@
config.logger = Logger.new(config.log_path, 50, 1.megabyte)
config.log_level = :info
config.logger.level = Logger::INFO
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;This behaviour is the same whether the log_level is set before
or after setting the logger:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# config.log_level = :info
config.logger = Logger.new(config.log_path, 30, 1.megabyte)
config.log_level = :info&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What happens is that the log output is unfiltered (as in
:debug). It still says Rails.configuration.log_level is :info, but
the log output includes SQL queries, etc.&lt;/p&gt;
&lt;p&gt;I worked around it by setting it thus:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;config.logger = Logger.new(config.log_path, 50, 1.megabyte)
config.log_level = :info
config.logger.level = Logger::INFO&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-20T22:59:16+00:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3500</number>
      <permalink>configlog_level-is-ignored-when-setting-a-custom-logger</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>configuration logger logging log_level</tag>
      <title>config.log_level is ignored when setting a custom logger</title>
      <updated-at type="datetime">2009-11-20T22:59:21+00:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">1</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3500</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is the expected behavior - if you're setting config.logger explictly, Rails uses whatever you're passing in without further configuration.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is the expected behavior - if you're setting config.logger
explictly, Rails uses whatever you're passing in without further
configuration.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-22T07:54:31+00:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3500</number>
      <permalink>configlog_level-is-ignored-when-setting-a-custom-logger</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>configuration logger logging log_level</tag>
      <title>config.log_level is ignored when setting a custom logger</title>
      <updated-at type="datetime">2009-11-22T07:54:32+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">2</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Andrew Vit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3500</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In that case, wouldn't it make sense to remove/deprecate config.log_level in favour of setting it directly on the logger object via config.logger.level=... ?

The way it currently works just adds confusion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In that case, wouldn't it make sense to remove/deprecate
config.log_level in favour of setting it directly on the logger
object via config.logger.level=... ?&lt;/p&gt;
&lt;p&gt;The way it currently works just adds confusion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-22T08:18:54+00:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3500</number>
      <permalink>configlog_level-is-ignored-when-setting-a-custom-logger</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>configuration logger logging log_level</tag>
      <title>config.log_level is ignored when setting a custom logger</title>
      <updated-at type="datetime">2009-11-22T08:18:55+00:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">3</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3500</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you're using the standard logger, config.logger.level= will blow up (NoMethodError on nil), as the logger doesn't exist yet when the environment is being loaded. (it gets set up in initialize_logger)</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you're using the standard logger, config.logger.level= will
blow up (NoMethodError on nil), as the logger doesn't exist yet
when the environment is being loaded. (it gets set up in
initialize_logger)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-22T08:24:15+00:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3500</number>
      <permalink>configlog_level-is-ignored-when-setting-a-custom-logger</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>configuration logger logging log_level</tag>
      <title>config.log_level is ignored when setting a custom logger</title>
      <updated-at type="datetime">2009-11-22T08:24:18+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">4</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Andrew Vit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3500</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>er replica &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/ulysse-nardin-sonata-cathedral-dual-time-mens-watch-670-88-213-881.html&quot;&gt;Ulysse Nardin Sonata Cathedral Dual Time Mens 670-88-213&lt;/a&gt;&lt;/b&gt; watches are also using &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/breitling-windrider-chronomat-evolution-18kt-yellow-gold-steel-mens-watch-b1335611-g5-739p-1124.html&quot;&gt;Breitling Breitling Windrider Chronomat Evolution 18kt Yellow Gold Steel Mens B1335611-G5-739P&lt;/a&gt;&lt;/b&gt; the same technology to &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; manufacture their Tag Heuer &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;high replica rolex&lt;/a&gt;&lt;/b&gt; replica watches &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;cheapest rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/collection/tag-heuer-2000-aquaracer.html&quot;&gt;TAG Heuer 2000 AquaRacer&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;ladies rolex watch&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/omega-constellation-mens-watch-1512-30-4570.html&quot;&gt;Omega Omega Constellation Mens 1512.30&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/a-lange-sohne-grand-lange-1-mens-watch-115-032-204.html&quot;&gt;A Lange &amp; Sohne Grand Lange 1 Mens 115.032&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;er replica &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/ulysse-nardin-sonata-cathedral-dual-time-mens-watch-670-88-213-881.html&quot;&gt;
Ulysse Nardin Sonata Cathedral Dual Time Mens 670-88-213&lt;/a&gt;&lt;/b&gt;
watches are also using &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/breitling-windrider-chronomat-evolution-18kt-yellow-gold-steel-mens-watch-b1335611-g5-739p-1124.html&quot;&gt;
Breitling Breitling Windrider Chronomat Evolution 18kt Yellow Gold
Steel Mens B1335611-G5-739P&lt;/a&gt;&lt;/b&gt; the same technology to
&lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; manufacture their Tag Heuer &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;high replica rolex&lt;/a&gt;&lt;/b&gt;
replica watches &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;cheapest rolex watches&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/collection/tag-heuer-2000-aquaracer.html&quot;&gt;
TAG Heuer 2000 AquaRacer&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;ladies rolex watch&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/omega-constellation-mens-watch-1512-30-4570.html&quot;&gt;
Omega Omega Constellation Mens 1512.30&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/a-lange-sohne-grand-lange-1-mens-watch-115-032-204.html&quot;&gt;
A Lange &amp;amp; Sohne Grand Lange 1 Mens 115.032&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T05:23:23+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3500</number>
      <permalink>configlog_level-is-ignored-when-setting-a-custom-logger</permalink>
      <priority type="integer">178768</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>configuration logger logging log_level</tag>
      <title>config.log_level is ignored when setting a custom logger</title>
      <updated-at type="datetime">2010-07-19T07:05:16+01:00</updated-at>
      <user-id type="integer">107771</user-id>
      <version type="integer">5</version>
      <user-name>zhuzhu</user-name>
      <creator-name>Andrew Vit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3500</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
