<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">94458</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-09T11:07:19+00:00</created-at>
  <creator-id type="integer">2958</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6259</number>
  <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>documentation validate_presence_of</tag>
  <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
  <updated-at type="datetime">2011-03-14T05:58:13+00:00</updated-at>
  <user-id type="integer">117417</user-id>
  <version type="integer">18</version>
  <user-name>Joey</user-name>
  <creator-name>bmihelac (at mihelac)</creator-name>
  <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
  <priority-name>Low</priority-name>
  <original-body>Documentation guide states that :allow_nil and :allow_blank can be used by all validation helpers:

http://edgeguides.rubyonrails.org/active_record_validations_callbacks.html#common-validation-options

This is not the case for PresenceValidator:

@@@
class Article &lt; ActiveRecord::Base
  validates_presence_of :subject, :allow_nil =&gt; true
end

ruby-1.9.2-p0 &gt; Article.new.valid?
 =&gt; false 
@@@</original-body>
  <latest-body>Documentation guide states that :allow_nil and :allow_blank can be used by all validation helpers:

http://edgeguides.rubyonrails.org/active_record_validations_callbacks.html#common-validation-options

This is not the case for PresenceValidator:

@@@
class Article &lt; ActiveRecord::Base
  validates_presence_of :subject, :allow_nil =&gt; true
end

ruby-1.9.2-p0 &gt; Article.new.valid?
 =&gt; false 
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Documentation guide states that :allow_nil and :allow_blank can
be used by all validation helpers:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://edgeguides.rubyonrails.org/active_record_validations_callbacks.html#common-validation-options&quot;&gt;
http://edgeguides.rubyonrails.org/active_record_validations_callbac...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is not the case for PresenceValidator:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Article &amp;lt; ActiveRecord::Base
  validates_presence_of :subject, :allow_nil =&amp;gt; true
end

ruby-1.9.2-p0 &amp;gt; Article.new.valid?
 =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Documentation guide states that :allow_nil and :allow_blank can be used by all validation helpers:

http://edgeguides.rubyonrails.org/active_record_validations_callbacks.html#common-validation-options

This is not the case for PresenceValidator:

@@@
class Article &lt; ActiveRecord::Base
  validates_presence_of :subject, :allow_nil =&gt; true
end

ruby-1.9.2-p0 &gt; Article.new.valid?
 =&gt; false 
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Documentation guide states that :allow_nil and :allow_blank can
be used by all validation helpers:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://edgeguides.rubyonrails.org/active_record_validations_callbacks.html#common-validation-options&quot;&gt;
http://edgeguides.rubyonrails.org/active_record_validations_callbac...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is not the case for PresenceValidator:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Article &amp;lt; ActiveRecord::Base
  validates_presence_of :subject, :allow_nil =&amp;gt; true
end

ruby-1.9.2-p0 &amp;gt; Article.new.valid?
 =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-07T08:16:48+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:allow_nil documentation presencevalidator validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-01-07T08:16:50+00:00</updated-at>
      <user-id type="integer">2958</user-id>
      <version type="integer">1</version>
      <user-name>bmihelac (at mihelac)</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I did a quick test and it seems you're right: https://gist.github.com/858816

`allow_blank` doesn't do anything when validating presence, which seems sensible to me. This should be fixed in the docs and maybe even throw a warning to avoid confusion if anybody ever uses it. What do you think?

`allow_nil` should just work if you ask me and the example above should return true. I'll look into this one. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I did a quick test and it seems you're right: &lt;a href=
&quot;https://gist.github.com/858816&quot;&gt;https://gist.github.com/858816&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_blank&lt;/code&gt; doesn't do anything when validating
presence, which seems sensible to me. This should be fixed in the
docs and maybe even throw a warning to avoid confusion if anybody
ever uses it. What do you think?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_nil&lt;/code&gt; should just work if you ask me and the
example above should return true. I'll look into this one. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-07T17:58:15+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>:allow_nil documentation presencevalidator validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-07T17:58:25+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">2</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The validates_presence_of method has historically ignored the difference between nil and zero lengths strings because any empty fields from a form will be a zero length string. Given this I don't think it'd be wise to change the semantics of its behaviour now.

The validates_length_of combined with the :allow_nil option can be used to achieved the desired outcome:

@@@ ruby
  # Allow nil values but not zero length strings
  validates_length_of :title, :minimum =&gt; 1, :allow_nil =&gt; true

  # Allow zero length strings but not nils
  validates_length_of :body, :minimum =&gt; 0, :allow_nil =&gt; false
@@@

You'd probably want to adjust the error messages to something other than the default 'is too short (minimum is {count} characters'.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The validates_presence_of method has historically ignored the
difference between nil and zero lengths strings because any empty
fields from a form will be a zero length string. Given this I don't
think it'd be wise to change the semantics of its behaviour
now.&lt;/p&gt;
&lt;p&gt;The validates_length_of combined with the :allow_nil option can
be used to achieved the desired outcome:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  # Allow nil values but not zero length strings
  validates_length_of :title, :minimum =&amp;gt; 1, :allow_nil =&amp;gt; true

  # Allow zero length strings but not nils
  validates_length_of :body, :minimum =&amp;gt; 0, :allow_nil =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You'd probably want to adjust the error messages to something
other than the default 'is too short (minimum is {count}
characters'.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-07T20:10:09+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>:allow_nil documentation presencevalidator validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-07T20:10:19+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Andrew, so your proposition is to update the documentation and describe that :allow_nil and :allow_blank in valid_presence_of would throw validation error for empty and nil string? Should use of it be deprecated also?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Andrew, so your proposition is to update the documentation and
describe that :allow_nil and :allow_blank in valid_presence_of
would throw validation error for empty and nil string? Should use
of it be deprecated also?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T08:20:43+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>:allow_nil documentation presencevalidator validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T08:20:55+00:00</updated-at>
      <user-id type="integer">2958</user-id>
      <version type="integer">4</version>
      <user-name>bmihelac (at mihelac)</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>`:allow_nil` and `allow_blank` now both et ignored on presence validations. Andrew's right, if we want to do some kind of zero-length validation that allows `nil` for some reason, you should validate length.

+1 for firing a warning when `allow_nil` or `allow_blank`. Any objections? Otherwise I'll add it tonight probably and I'll update the docs. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;:allow_nil&lt;/code&gt; and &lt;code&gt;allow_blank&lt;/code&gt; now both et
ignored on presence validations. Andrew's right, if we want to do
some kind of zero-length validation that allows &lt;code&gt;nil&lt;/code&gt;
for some reason, you should validate length.&lt;/p&gt;
&lt;p&gt;+1 for firing a warning when &lt;code&gt;allow_nil&lt;/code&gt; or
&lt;code&gt;allow_blank&lt;/code&gt;. Any objections? Otherwise I'll add it
tonight probably and I'll update the docs. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T10:46:10+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>:allow_nil documentation presencevalidator validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T10:46:25+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">5</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure that it's worth the cpu cycles - validates_presence_of, allow_nil and allow_blank have been around for a while and this is the first bug report I can find that has brought the issue up. I think a document clarification is all that's needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure that it's worth the cpu cycles -
validates_presence_of, allow_nil and allow_blank have been around
for a while and this is the first bug report I can find that has
brought the issue up. I think a document clarification is all
that's needed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T10:57:40+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>:allow_nil documentation presencevalidator validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T10:57:55+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">6</version>
      <user-name>Andrew White</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 on firing a warning if using `:allow_nil` or `:allow_blank` with the presence validator + some documentation to to guides and presence validator about using length validator + `allow_nil`</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 on firing a warning if using &lt;code&gt;:allow_nil&lt;/code&gt; or
&lt;code&gt;:allow_blank&lt;/code&gt; with the presence validator + some
documentation to to guides and presence validator about using
length validator + &lt;code&gt;allow_nil&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T11:14:20+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;:allow_nil documentation presencevalidator validate_presence_of&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T11:14:32+00:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">7</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also, I think a warning would help new users as using the presence validator with `allow_nil` does seem logical to a certain degree.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, I think a warning would help new users as using the
presence validator with &lt;code&gt;allow_nil&lt;/code&gt; does seem logical to
a certain degree.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T11:28:07+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T11:28:21+00:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">8</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While adding a note to the guides telling users not to use `allow_nil` or `allow_blank`, I found this:

@@@
Using +:allow_nil+ with +validates_presence_of+ allows for +nil+, but any other +blank?+ value will still be rejected.
@@@

That explicitly tells users that `allow_nil` should work, making me wonder if this is a bug after all. Could that be the case? Otherwise I'll add a note and remove that line. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;While adding a note to the guides telling users not to use
&lt;code&gt;allow_nil&lt;/code&gt; or &lt;code&gt;allow_blank&lt;/code&gt;, I found
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Using +:allow_nil+ with +validates_presence_of+ allows for +nil+, but any other +blank?+ value will still be rejected.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That explicitly tells users that &lt;code&gt;allow_nil&lt;/code&gt; should
work, making me wonder if this is a bug after all. Could that be
the case? Otherwise I'll add a note and remove that line. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T11:46:41+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T12:49:35+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">9</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>hmmmmmmmm, this make it seem like a bug to me.

Personally I would like the presence validator to respect `allow_nil`, otherwise a warning is the very very least it should be doing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;hmmmmmmmm, this make it seem like a bug to me.&lt;/p&gt;
&lt;p&gt;Personally I would like the presence validator to respect
&lt;code&gt;allow_nil&lt;/code&gt;, otherwise a warning is the very very least
it should be doing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T11:49:35+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T11:49:50+00:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">10</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After talking to Jos&#233; and Santaigo, the agreed solution is to update the docs accordingly and note that `:allow_blank` and `:allow_nil` do not work with the presence validator and will be ignored.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After talking to Jos&amp;eacute; and Santaigo, the agreed solution
is to update the docs accordingly and note that
&lt;code&gt;:allow_blank&lt;/code&gt; and &lt;code&gt;:allow_nil&lt;/code&gt; do not work
with the presence validator and will be ignored.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T21:59:03+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-08T21:59:17+00:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">11</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I pushed a patch to docrails: https://github.com/lifo/docrails/commit/e05e9979075b37342b7c88e557dbffd672b2086a

What do you think? I'll mark this ticket as resolved when the doc patch is merged into rails and you're all okay with it. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I pushed a patch to docrails: &lt;a href=
&quot;https://github.com/lifo/docrails/commit/e05e9979075b37342b7c88e557dbffd672b2086a&quot;&gt;
https://github.com/lifo/docrails/commit/e05e9979075b37342b7c88e557d...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What do you think? I'll mark this ticket as resolved when the
doc patch is merged into rails and you're all okay with it. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-09T10:21:24+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-09T10:21:37+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">12</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I also think warning should be nice.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I also think warning should be nice.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-09T11:03:18+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-09T11:03:32+00:00</updated-at>
      <user-id type="integer">2958</user-id>
      <version type="integer">13</version>
      <user-name>bmihelac (at mihelac)</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Jeff, in future add `[#{num} state:resolved]` to your docrails commit and the ticket state will be automatically updated when it's merged into master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jeff, in future add &lt;code&gt;[#{num} state:resolved]&lt;/code&gt; to your
docrails commit and the ticket state will be automatically updated
when it's merged into master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-09T11:07:19+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-09T11:07:59+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">14</version>
      <user-name>Andrew White</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Will do, somehow I thought I wasn't supposed to do that for docrails patches. Thanks :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Will do, somehow I thought I wasn't supposed to do that for
docrails patches. Thanks :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-09T12:14:27+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-09T12:14:45+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">15</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With this change, how would I be able to allow a nil/blank value when using validates_presence_of to verify the existence of an associated record for a belongs_to association only when the id is present? 

class Student
has_many :students_teachers
end

class Teacher
has_many :students_teachers

end

class StudentsTeacher
belongs_to :student
belongs_to :teacher
belongs_to :assistant_teacher, :class_name =&gt; 'Teacher'

validates_associated :student, :teacher, :assistant_teacher
validates_presence_of :student, :teacher
validates_presence_of :assistant_teacher, :allow_nil =&gt; true #student might not always have an assistant teacher
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;With this change, how would I be able to allow a nil/blank value
when using validates_presence_of to verify the existence of an
associated record for a belongs_to association only when the id is
present?&lt;/p&gt;
&lt;p&gt;class Student&lt;br&gt;
has_many :students_teachers&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;class Teacher&lt;br&gt;
has_many :students_teachers&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class StudentsTeacher&lt;br&gt;
belongs_to :student&lt;br&gt;
belongs_to :teacher&lt;br&gt;
belongs_to :assistant_teacher, :class_name =&amp;gt; 'Teacher'&lt;/p&gt;
&lt;p&gt;validates_associated :student, :teacher, :assistant_teacher&lt;br&gt;
validates_presence_of :student, :teacher&lt;br&gt;
validates_presence_of :assistant_teacher, :allow_nil =&amp;gt; true
#student might not always have an assistant teacher&lt;br&gt;
end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-13T09:49:13+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-13T09:49:30+00:00</updated-at>
      <user-id type="integer">117417</user-id>
      <version type="integer">16</version>
      <user-name>Joey</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's actually a non-change :)

I'm not sure what you're to achieve - the validates_associated will ensure :assistant_teacher is valid if it's present. If you're trying to ensure that :assistant_teacher exists if :assistant_teacher_id is not nil then making validates_presence_of work with :allow_nil won't help as the association would still return nil. You can write a custom validation method to achieve what you need:

@@@ ruby
class StudentTeacher
  validate :existence_of_associated_teacher, :if =&gt; :associated_teacher_id?

  def existence_of_associated_teacher
    associated_teacher.present?
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's actually a non-change :)&lt;/p&gt;
&lt;p&gt;I'm not sure what you're to achieve - the validates_associated
will ensure :assistant_teacher is valid if it's present. If you're
trying to ensure that :assistant_teacher exists if
:assistant_teacher_id is not nil then making validates_presence_of
work with :allow_nil won't help as the association would still
return nil. You can write a custom validation method to achieve
what you need:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class StudentTeacher
  validate :existence_of_associated_teacher, :if =&amp;gt; :associated_teacher_id?

  def existence_of_associated_teacher
    associated_teacher.present?
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-13T10:12:36+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-13T10:12:50+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">17</version>
      <user-name>Andrew White</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>that works..thanks Andrew</body>
      <body-html>&lt;div&gt;&lt;p&gt;that works..thanks Andrew&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-14T05:57:59+00:00</created-at>
      <creator-id type="integer">2958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6259</number>
      <permalink>validate_presence_of-does-not-work-with-allow_nil-true</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>documentation validate_presence_of</tag>
      <title>validate_presence_of does not work with :allow_nil =&gt; true</title>
      <updated-at type="datetime">2011-03-14T05:58:13+00:00</updated-at>
      <user-id type="integer">117417</user-id>
      <version type="integer">18</version>
      <user-name>Joey</user-name>
      <creator-name>bmihelac (at mihelac)</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6259</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
