From a26abc19bfde54b765d4320b34e3cfb490a2a546 Mon Sep 17 00:00:00 2001
From: Levin Alexander <mail@levinalex.net>
Date: Tue, 8 Dec 2009 17:39:59 +0100
Subject: [PATCH] add ActiveRecord::AutosaveAssociation#unmark_for_destruction

---
 .../lib/active_record/autosave_association.rb      |    7 +++++++
 .../test/cases/autosave_association_test.rb        |   16 +++++++++++++++-
 2 files changed, 22 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/autosave_association.rb b/activerecord/lib/active_record/autosave_association.rb
index 049fb6e..a87ed49 100644
--- a/activerecord/lib/active_record/autosave_association.rb
+++ b/activerecord/lib/active_record/autosave_association.rb
@@ -206,6 +206,13 @@ module ActiveRecord
       @marked_for_destruction = true
     end
 
+    # removes a mark for destruction without reloading the record so that it will not be destroyed as
+    # part of the parents save transaction.
+    #
+    def unmark_for_destruction
+      @marked_for_destruction = false
+    end
+
     # Returns whether or not this record will be destroyed as part of the parents save transaction.
     #
     # Only useful if the <tt>:autosave</tt> option on the parent is enabled for this associated model.
diff --git a/activerecord/test/cases/autosave_association_test.rb b/activerecord/test/cases/autosave_association_test.rb
index bd55bc5..c935216 100644
--- a/activerecord/test/cases/autosave_association_test.rb
+++ b/activerecord/test/cases/autosave_association_test.rb
@@ -517,6 +517,13 @@ class TestDestroyAsPartOfAutosaveAssociation < ActiveRecord::TestCase
     assert !@pirate.ship.marked_for_destruction?
   end
 
+  def test_a_marked_for_destruction_record_should_not_be_marked_after_unmarking
+    @pirate.mark_for_destruction
+    @pirate.unmark_for_destruction
+
+    assert !@pirate.marked_for_destruction?
+  end
+
   # has_one
   def test_should_destroy_a_child_association_as_part_of_the_save_transaction_if_it_was_marked_for_destroyal
     assert !@pirate.ship.marked_for_destruction?
@@ -548,6 +555,13 @@ class TestDestroyAsPartOfAutosaveAssociation < ActiveRecord::TestCase
     assert @pirate.save
   end
 
+  def test_a_marked_for_destruction_record_should_not_be_destroyed_when_unmark_is_called
+    @pirate.ship.mark_for_destruction
+    @pirate.ship.unmark_for_destruction
+    @pirate.ship.expects(:destroy).never
+    assert @pirate.save
+  end
+
   def test_should_rollback_destructions_if_an_exception_occurred_while_saving_a_child
     # Stub the save method of the @pirate.ship instance to destroy and then raise an exception
     class << @pirate.ship
@@ -639,7 +653,7 @@ class TestDestroyAsPartOfAutosaveAssociation < ActiveRecord::TestCase
       end
       assert_difference("#{association_name.classify}.count", -2) { @pirate.save! }
     end
-    
+
     define_method("test_should_skip_validation_on_the_#{association_name}_association_if_destroyed") do
       @pirate.send(association_name).create!(:name => "#{association_name}_1")
       children = @pirate.send(association_name)
-- 
1.6.4.4

