<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-14T11:17:34+01:00</created-at>
  <creator-id type="integer">71483</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6491</number>
  <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>active_record arel databases establish_connection</tag>
  <title>Arel not picking up on ActiveRecord establish_connection settings</title>
  <updated-at type="datetime">2011-04-14T11:17:34+01:00</updated-at>
  <user-id type="integer">143958</user-id>
  <version type="integer">6</version>
  <user-name>Ibrahim</user-name>
  <creator-name>Sebastian Vogelsang</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi there,

in my 3.0.4 application I'm trying to set an individual databases for some of my models in the following way within the environment.rb:
@@@
models.each do |klass|
  next unless klass &lt; ActiveRecord::Base
  klass.establish_connection &quot;processing_#{Rails.env}&quot;
end
@@@
When doing a `Channel.connection.instance_eval {@config[:database]}` afterwards (Channel being one of my models), all appears correct. However, when doing a `Channel.arel_engine.connection.instance_eval {@config[:database]}`, I get the standard ActiveRecord database connection returned. It appears as if Arel does not pick up on the modified `active_record` connection. The funny thing is that this only appears for some of my models. Others return the correct database for both connection and arel_engine. 

Another thing to notice is that while `Channel.first` works fine, I get the following error, when doing a `Channel.find(1)`:
@@@
NoMethodError: undefined method `eq' for nil:NilClass
@@@
Regards,

Sebastian</original-body>
  <latest-body>Hi there,

in my 3.0.4 application I'm trying to set an individual databases for some of my models in the following way within the environment.rb:
@@@
models.each do |klass|
  next unless klass &lt; ActiveRecord::Base
  klass.establish_connection &quot;processing_#{Rails.env}&quot;
end
@@@
When doing a `Channel.connection.instance_eval {@config[:database]}` afterwards (Channel being one of my models), all appears correct. However, when doing a `Channel.arel_engine.connection.instance_eval {@config[:database]}`, I get the standard ActiveRecord database connection returned. It appears as if Arel does not pick up on the modified `active_record` connection. The funny thing is that this only appears for some of my models. Others return the correct database for both connection and arel_engine. 

Another thing to notice is that while `Channel.first` works fine, I get the following error, when doing a `Channel.find(1)`:
@@@
NoMethodError: undefined method `eq' for nil:NilClass
@@@
Regards,

Sebastian</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;in my 3.0.4 application I'm trying to set an individual
databases for some of my models in the following way within the
environment.rb:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;models.each do |klass|
  next unless klass &amp;lt; ActiveRecord::Base
  klass.establish_connection &quot;processing_#{Rails.env}&quot;
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When doing a &lt;code&gt;Channel.connection.instance_eval
{@config[:database]}&lt;/code&gt; afterwards (Channel being one of my
models), all appears correct. However, when doing a
&lt;code&gt;Channel.arel_engine.connection.instance_eval
{@config[:database]}&lt;/code&gt;, I get the standard ActiveRecord
database connection returned. It appears as if Arel does not pick
up on the modified &lt;code&gt;active_record&lt;/code&gt; connection. The funny
thing is that this only appears for some of my models. Others
return the correct database for both connection and
arel_engine.&lt;/p&gt;
&lt;p&gt;Another thing to notice is that while &lt;code&gt;Channel.first&lt;/code&gt;
works fine, I get the following error, when doing a
&lt;code&gt;Channel.find(1)&lt;/code&gt;:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError: undefined method `eq' for nil:NilClass&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Regards,&lt;/p&gt;
&lt;p&gt;Sebastian&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi there,

in my 3.0.4 application I'm trying to set an individual databases for some of my models in the following way within the environment.rb:
@@@
models.each do |klass|
  next unless klass &lt; ActiveRecord::Base
  klass.establish_connection &quot;processing_#{Rails.env}&quot;
end
@@@
When doing a `Channel.connection.instance_eval {@config[:database]}` afterwards (Channel being one of my models), all appears correct. However, when doing a `Channel.arel_engine.connection.instance_eval {@config[:database]}`, I get the standard ActiveRecord database connection returned. It appears as if Arel does not pick up on the modified `active_record` connection. The funny thing is that this only appears for some of my models. Others return the correct database for both connection and arel_engine. 

Another thing to notice is that while `Channel.first` works fine, I get the following error, when doing a `Channel.find(1)`:
@@@
NoMethodError: undefined method `eq' for nil:NilClass
@@@
Regards,

Sebastian</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;in my 3.0.4 application I'm trying to set an individual
databases for some of my models in the following way within the
environment.rb:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;models.each do |klass|
  next unless klass &amp;lt; ActiveRecord::Base
  klass.establish_connection &quot;processing_#{Rails.env}&quot;
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When doing a &lt;code&gt;Channel.connection.instance_eval
{@config[:database]}&lt;/code&gt; afterwards (Channel being one of my
models), all appears correct. However, when doing a
&lt;code&gt;Channel.arel_engine.connection.instance_eval
{@config[:database]}&lt;/code&gt;, I get the standard ActiveRecord
database connection returned. It appears as if Arel does not pick
up on the modified &lt;code&gt;active_record&lt;/code&gt; connection. The funny
thing is that this only appears for some of my models. Others
return the correct database for both connection and
arel_engine.&lt;/p&gt;
&lt;p&gt;Another thing to notice is that while &lt;code&gt;Channel.first&lt;/code&gt;
works fine, I get the following error, when doing a
&lt;code&gt;Channel.find(1)&lt;/code&gt;:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError: undefined method `eq' for nil:NilClass&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Regards,&lt;/p&gt;
&lt;p&gt;Sebastian&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-01T11:46:18+00:00</created-at>
      <creator-id type="integer">71483</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6491</number>
      <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record arel databases establish_connection</tag>
      <title>Arel not picking up on ActiveRecord establish_connection settings</title>
      <updated-at type="datetime">2011-03-01T11:46:21+00:00</updated-at>
      <user-id type="integer">71483</user-id>
      <version type="integer">1</version>
      <user-name>Sebastian Vogelsang</user-name>
      <creator-name>Sebastian Vogelsang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Wide range of web hosting services are accessible, such as cheap vps , email hosting, Unix hosting, &lt;a href=&quot;http://www.ucvhost.com/VPS/Forex/ForexVps.aspx&quot;&gt;forex vps&lt;/a&gt; , Windows hosting, Linux web hosting &lt;a href=&quot;http://www.ucvhost.com/VPS/EntryLevelVPS/EntryLevelVps.aspx&quot;&gt;windows vps&lt;/a&gt;   etc. We hope you will find a  &lt;a href=&quot;http://www.ucvhost.com/&quot;&gt;cheap hosting&lt;/a&gt; company.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Wide range of web hosting services are accessible, such as cheap
vps , email hosting, Unix hosting, &lt;a href=
&quot;http://www.ucvhost.com/VPS/Forex/ForexVps.aspx&quot;&gt;forex vps&lt;/a&gt; ,
Windows hosting, Linux web hosting &lt;a href=
&quot;http://www.ucvhost.com/VPS/EntryLevelVPS/EntryLevelVps.aspx&quot;&gt;windows
vps&lt;/a&gt; etc. We hope you will find a &lt;a href=
&quot;http://www.ucvhost.com/&quot;&gt;cheap hosting&lt;/a&gt; company.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-01T15:10:43+00:00</created-at>
      <creator-id type="integer">71483</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6491</number>
      <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record arel databases establish_connection</tag>
      <title>Arel not picking up on ActiveRecord establish_connection settings</title>
      <updated-at type="datetime">2011-03-01T15:14:04+00:00</updated-at>
      <user-id type="integer">139262</user-id>
      <version type="integer">2</version>
      <user-name>piter</user-name>
      <creator-name>Sebastian Vogelsang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ok, I got it working by changing my code to the following:

@@@
models.each do |klass|
  next unless klass &lt; ActiveRecord::Base
  klass.establish_connection &quot;processing_#{Rails.env}&quot;
  klass.class_eval do
    @arel_engine = klass
    @arel_table = Arel::Table.new(klass.table_name, klass)
    @relation = ActiveRecord::Relation.new(klass, @arel_table)
  end
end
@@@

I hope this is not the way we have to do it from now?!? Shouldn't establish_connection take care of setting up the AREL Relations appropriately?

Sebastian</body>
      <body-html>&lt;div&gt;&lt;p&gt;ok, I got it working by changing my code to the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;models.each do |klass|
  next unless klass &amp;lt; ActiveRecord::Base
  klass.establish_connection &quot;processing_#{Rails.env}&quot;
  klass.class_eval do
    @arel_engine = klass
    @arel_table = Arel::Table.new(klass.table_name, klass)
    @relation = ActiveRecord::Relation.new(klass, @arel_table)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I hope this is not the way we have to do it from now?!?
Shouldn't establish_connection take care of setting up the AREL
Relations appropriately?&lt;/p&gt;
&lt;p&gt;Sebastian&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-01T18:21:38+00:00</created-at>
      <creator-id type="integer">71483</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6491</number>
      <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record arel databases establish_connection</tag>
      <title>Arel not picking up on ActiveRecord establish_connection settings</title>
      <updated-at type="datetime">2011-03-01T18:21:42+00:00</updated-at>
      <user-id type="integer">71483</user-id>
      <version type="integer">3</version>
      <user-name>Sebastian Vogelsang</user-name>
      <creator-name>Sebastian Vogelsang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>HasAndBelongsToMany did not work with multiple database, this fixed it for me:
@@@
module ActiveRecord
  # = Active Record Has And Belongs To Many Association
  module Associations
    class HasAndBelongsToManyAssociation &lt; AssociationCollection
      protected
        def insert_record(record, force = true, validate = true)
          if record.new_record?
            if force
              record.save!
            else
              return false unless record.save(:validate =&gt; validate)
            end
          end

          if @reflection.options[:insert_sql]
            @owner.connection.insert(interpolate_and_sanitize_sql(@reflection.options[:insert_sql], record))
          else
            # IMPORTANT!!!
            # here active record does not pass the engine to Arel::Table and thus Arel::Table uses Table.engine = ActiveRecord::Base
            # IMPORTANT!!!
            relation   = Arel::Table.new(@reflection.options[:join_table], @owner.class.arel_engine)
            timestamps = record_timestamp_columns(record)
            timezone   = record.send(:current_time_from_proper_timezone) if timestamps.any?


            # debugger
            attributes = Hash[columns.map do |column|
                                name = column.name
                                value = case name.to_s
                                when @reflection.primary_key_name.to_s
                                  @owner.id
                                when @reflection.association_foreign_key.to_s
                                  record.id
                                when *timestamps
                                  timezone
                                else
                                  @owner.send(:quote_value, record[name], column) if record.has_attribute?(name)
                                end

                                [relation[name], value] unless value.nil?
            end]
            relation.insert(attributes)
          end

          return true
        end
        
        def delete_records(records)
          if sql = @reflection.options[:delete_sql]
            records.each { |record| @owner.connection.delete(interpolate_and_sanitize_sql(sql, record)) }
          else
            # IMPORTANT!!!
            # here active record does not pass the engine to Arel::Table and thus Arel::Table uses Table.engine = ActiveRecord::Base
            # IMPORTANT!!!            
            relation = Arel::Table.new(@reflection.options[:join_table], @owner.class.arel_engine)
            relation.where(relation[@reflection.primary_key_name].eq(@owner.id).
              and(relation[@reflection.association_foreign_key].in(records.map { |x| x.id }.compact))
            ).delete
          end
        end
                
    end
  end
end

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;HasAndBelongsToMany did not work with multiple database, this
fixed it for me:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module ActiveRecord
  # = Active Record Has And Belongs To Many Association
  module Associations
    class HasAndBelongsToManyAssociation &amp;lt; AssociationCollection
      protected
        def insert_record(record, force = true, validate = true)
          if record.new_record?
            if force
              record.save!
            else
              return false unless record.save(:validate =&amp;gt; validate)
            end
          end

          if @reflection.options[:insert_sql]
            @owner.connection.insert(interpolate_and_sanitize_sql(@reflection.options[:insert_sql], record))
          else
            # IMPORTANT!!!
            # here active record does not pass the engine to Arel::Table and thus Arel::Table uses Table.engine = ActiveRecord::Base
            # IMPORTANT!!!
            relation   = Arel::Table.new(@reflection.options[:join_table], @owner.class.arel_engine)
            timestamps = record_timestamp_columns(record)
            timezone   = record.send(:current_time_from_proper_timezone) if timestamps.any?


            # debugger
            attributes = Hash[columns.map do |column|
                                name = column.name
                                value = case name.to_s
                                when @reflection.primary_key_name.to_s
                                  @owner.id
                                when @reflection.association_foreign_key.to_s
                                  record.id
                                when *timestamps
                                  timezone
                                else
                                  @owner.send(:quote_value, record[name], column) if record.has_attribute?(name)
                                end

                                [relation[name], value] unless value.nil?
            end]
            relation.insert(attributes)
          end

          return true
        end
        
        def delete_records(records)
          if sql = @reflection.options[:delete_sql]
            records.each { |record| @owner.connection.delete(interpolate_and_sanitize_sql(sql, record)) }
          else
            # IMPORTANT!!!
            # here active record does not pass the engine to Arel::Table and thus Arel::Table uses Table.engine = ActiveRecord::Base
            # IMPORTANT!!!            
            relation = Arel::Table.new(@reflection.options[:join_table], @owner.class.arel_engine)
            relation.where(relation[@reflection.primary_key_name].eq(@owner.id).
              and(relation[@reflection.association_foreign_key].in(records.map { |x| x.id }.compact))
            ).delete
          end
        end
                
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-22T11:20:41+00:00</created-at>
      <creator-id type="integer">71483</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6491</number>
      <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record arel databases establish_connection</tag>
      <title>Arel not picking up on ActiveRecord establish_connection settings</title>
      <updated-at type="datetime">2011-03-22T11:20:44+00:00</updated-at>
      <user-id type="integer">17434</user-id>
      <version type="integer">4</version>
      <user-name>atomgas</user-name>
      <creator-name>Sebastian Vogelsang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>anyone? This is a rather serious issue! I can't imagine that nobody else has encountered these problems when connecting to multiple databases?!</body>
      <body-html>&lt;div&gt;&lt;p&gt;anyone? This is a rather serious issue! I can't imagine that
nobody else has encountered these problems when connecting to
multiple databases?!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-12T11:52:22+01:00</created-at>
      <creator-id type="integer">71483</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6491</number>
      <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record arel databases establish_connection</tag>
      <title>Arel not picking up on ActiveRecord establish_connection settings</title>
      <updated-at type="datetime">2011-04-12T11:52:24+01:00</updated-at>
      <user-id type="integer">71483</user-id>
      <version type="integer">5</version>
      <user-name>Sebastian Vogelsang</user-name>
      <creator-name>Sebastian Vogelsang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You don't need to do this in the environment.rb If you want separate connections in your models, use the ActiveRecord::Base.establish_connection method that takes a options hash. Place your database configuration in the appropriate config file and use that in your model:

@@@ ruby
class User &lt; ActiveRecord::Base
  establish_connection(
    :adapter =&gt; &quot;mysql&quot;
    :host    =&gt; &quot;localhost&quot;
  )
end
@@@

If you want to use your YAML, it is available as a symbol within ActiveRecord::Base like so:
@@@ ruby
class User &lt; ActiveRecord::Base
  establish_connection :from_yaml
end
@@@

And to keep things dry, you can setup a parent model that establishes the connection to the other database and let your models inherit from it, since establish_connection stays in the family!

@@@ ruby
class Person &lt; ActiveRecord::Base
  establish_connection :private_government_database
end

class User &lt; Person
end

class Admin &lt; User
end
@@@

Hope this helps you ;-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;You don't need to do this in the environment.rb If you want
separate connections in your models, use the
ActiveRecord::Base.establish_connection method that takes a options
hash. Place your database configuration in the appropriate config
file and use that in your model:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  establish_connection(
    :adapter =&amp;gt; &quot;mysql&quot;
    :host    =&amp;gt; &quot;localhost&quot;
  )
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you want to use your YAML, it is available as a symbol within
ActiveRecord::Base like so:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  establish_connection :from_yaml
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And to keep things dry, you can setup a parent model that
establishes the connection to the other database and let your
models inherit from it, since establish_connection stays in the
family!&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base
  establish_connection :private_government_database
end

class User &amp;lt; Person
end

class Admin &amp;lt; User
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Hope this helps you ;-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-13T12:55:56+01:00</created-at>
      <creator-id type="integer">71483</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6491</number>
      <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record arel databases establish_connection</tag>
      <title>Arel not picking up on ActiveRecord establish_connection settings</title>
      <updated-at type="datetime">2011-04-13T12:56:04+01:00</updated-at>
      <user-id type="integer">143958</user-id>
      <version type="integer">6</version>
      <user-name>Ibrahim</user-name>
      <creator-name>Sebastian Vogelsang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>thanx
&lt;a href=&quot;http://www.liderserver.com&quot; title=&quot;ucuz hosting, kaliteli hosting,&quot; target=&quot;_blank&quot;&gt;ucuz hosting&lt;/a&gt;
thanx
&lt;a href=&quot;http://www.bilgibaz.net&quot; title=&quot;Bilgibaz, g&#252;ncel payla&#351;&#305;m platformu, bilgi payla&#351;&#305;m, program, oyun, film, mp3&quot; target=&quot;_blank&quot;&gt;bilgi payla&#351;&#305;m&lt;/a&gt;

&lt;a href=&quot;http://www.fixizle.net&quot; title=&quot;fix izle film, dizi izle, g&#252;ncel film, g&#252;ncel dizi&quot; target=&quot;_blank&quot;&gt;film, dizi izle&lt;/a&gt;
thanx
&lt;a href=&quot;http://www.teknopaylasim.net&quot; title=&quot;g&#252;ncel payla&#351;&#305;m sitesi, Program, Film, Oyun, Driver, wireless &#351;ifre k&#305;rma program&#305;&quot; target=&quot;_blank&quot;&gt;Teknopaylasim.net&lt;/a&gt;
thanx</body>
      <body-html>&lt;div&gt;&lt;p&gt;thanx&lt;br&gt;
&lt;a href=&quot;http://www.liderserver.com&quot; title=
&quot;ucuz hosting, kaliteli hosting,&quot;&gt;ucuz hosting&lt;/a&gt;&lt;br&gt;
thanx&lt;br&gt;
&lt;a href=&quot;http://www.bilgibaz.net&quot; title=
&quot;Bilgibaz, g&amp;uuml;ncel payla&amp;#351;&amp;#305;m platformu, bilgi payla&amp;#351;&amp;#305;m, program, oyun, film, mp3&quot;&gt;
bilgi payla&amp;#351;&amp;#305;m&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.fixizle.net&quot; title=
&quot;fix izle film, dizi izle, g&amp;uuml;ncel film, g&amp;uuml;ncel dizi&quot;&gt;film,
dizi izle&lt;/a&gt;&lt;br&gt;
thanx&lt;br&gt;
&lt;a href=&quot;http://www.teknopaylasim.net&quot; title=
&quot;g&amp;uuml;ncel payla&amp;#351;&amp;#305;m sitesi, Program, Film, Oyun, Driver, wireless &amp;#351;ifre k&amp;#305;rma program&amp;#305;&quot;&gt;
Teknopaylasim.net&lt;/a&gt;&lt;br&gt;
thanx&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-14T01:34:22+01:00</created-at>
      <creator-id type="integer">71483</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6491</number>
      <permalink>arel-not-picking-up-on-activerecord-establish_connection-settings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record arel databases establish_connection</tag>
      <title>Arel not picking up on ActiveRecord establish_connection settings</title>
      <updated-at type="datetime">2011-04-14T11:17:34+01:00</updated-at>
      <user-id type="integer">145562</user-id>
      <version type="integer">7</version>
      <user-name>engincik</user-name>
      <creator-name>Sebastian Vogelsang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6491</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
