<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-12T18:50:12+00:00</created-at>
  <creator-id type="integer">65953</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">6422</number>
  <permalink>pacth-postgres-adapter-optimization-for-add_column-method</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>patch postgresql</tag>
  <title>[PATCH] Postgres adapter optimization for add_column method</title>
  <updated-at type="datetime">2011-02-15T18:55:29+00:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">5</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>2kan</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6422</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Looking at postgres adapter I found that `add_column` works not optimal. First it executes `ALTER TABLE ADD COLUMN` query and only then sets defaults and `NOT NULL` if they are needed. But in the real production environment it takes hours to run such migrations.

For example we run: 

@@@
add_column :users, :failed_attempts, :integer, :null=&gt;false, :default=&gt;0
@@@

this migration executes:

@@@
UPDATE &quot;users&quot; SET &quot;failed_attempts&quot;=0 WHERE &quot;failed_attempts&quot; IS NULL 
@@@

which took more then one hour to complete for the table with 2M+ records.

But:

@@@
ALTER TABLE users ADD COLUMN failed_attempts INTEGER NOT NULL DEFAULT 0;
@@@

took just 2 minutes to complete for the same table.

So such migration will lock the users table for an hour (or even more) and so stop the whole application for hours instead of just 2 minutes.

In the assigned patch I've fixed it in the manner it was done for the mysql.</original-body>
  <latest-body>Looking at postgres adapter I found that `add_column` works not optimal. First it executes `ALTER TABLE ADD COLUMN` query and only then sets defaults and `NOT NULL` if they are needed. But in the real production environment it takes hours to run such migrations.

For example we run: 

@@@
add_column :users, :failed_attempts, :integer, :null=&gt;false, :default=&gt;0
@@@

this migration executes:

@@@
UPDATE &quot;users&quot; SET &quot;failed_attempts&quot;=0 WHERE &quot;failed_attempts&quot; IS NULL 
@@@

which took more then one hour to complete for the table with 2M+ records.

But:

@@@
ALTER TABLE users ADD COLUMN failed_attempts INTEGER NOT NULL DEFAULT 0;
@@@

took just 2 minutes to complete for the same table.

So such migration will lock the users table for an hour (or even more) and so stop the whole application for hours instead of just 2 minutes.

In the assigned patch I've fixed it in the manner it was done for the mysql.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Looking at postgres adapter I found that &lt;code&gt;add_column&lt;/code&gt;
works not optimal. First it executes &lt;code&gt;ALTER TABLE ADD
COLUMN&lt;/code&gt; query and only then sets defaults and &lt;code&gt;NOT
NULL&lt;/code&gt; if they are needed. But in the real production
environment it takes hours to run such migrations.&lt;/p&gt;
&lt;p&gt;For example we run:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;add_column :users, :failed_attempts, :integer, :null=&amp;gt;false, :default=&amp;gt;0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this migration executes:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;UPDATE &quot;users&quot; SET &quot;failed_attempts&quot;=0 WHERE &quot;failed_attempts&quot; IS NULL&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;which took more then one hour to complete for the table with 2M+
records.&lt;/p&gt;
&lt;p&gt;But:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ALTER TABLE users ADD COLUMN failed_attempts INTEGER NOT NULL DEFAULT 0;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;took just 2 minutes to complete for the same table.&lt;/p&gt;
&lt;p&gt;So such migration will lock the users table for an hour (or even
more) and so stop the whole application for hours instead of just 2
minutes.&lt;/p&gt;
&lt;p&gt;In the assigned patch I've fixed it in the manner it was done
for the mysql.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Looking at postgres adapter I found that `add_column` works not optimal. First it executes `ALTER TABLE ADD COLUMN` query and only then sets defaults and `NOT NULL` if they are needed. But in the real production environment it takes hours to run such migrations.

For example we run: 

@@@
add_column :users, :failed_attempts, :integer, :null=&gt;false, :default=&gt;0
@@@

this migration executes:

@@@
UPDATE &quot;users&quot; SET &quot;failed_attempts&quot;=0 WHERE &quot;failed_attempts&quot; IS NULL 
@@@

which took more then one hour to complete for the table with 2M+ records.

But:

@@@
ALTER TABLE users ADD COLUMN failed_attempts INTEGER NOT NULL DEFAULT 0;
@@@

took just 2 minutes to complete for the same table.

So such migration will lock the users table for an hour (or even more) and so stop the whole application for hours instead of just 2 minutes.

In the assigned patch I've fixed it in the manner it was done for the mysql.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looking at postgres adapter I found that &lt;code&gt;add_column&lt;/code&gt;
works not optimal. First it executes &lt;code&gt;ALTER TABLE ADD
COLUMN&lt;/code&gt; query and only then sets defaults and &lt;code&gt;NOT
NULL&lt;/code&gt; if they are needed. But in the real production
environment it takes hours to run such migrations.&lt;/p&gt;
&lt;p&gt;For example we run:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;add_column :users, :failed_attempts, :integer, :null=&amp;gt;false, :default=&amp;gt;0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this migration executes:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;UPDATE &quot;users&quot; SET &quot;failed_attempts&quot;=0 WHERE &quot;failed_attempts&quot; IS NULL&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;which took more then one hour to complete for the table with 2M+
records.&lt;/p&gt;
&lt;p&gt;But:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ALTER TABLE users ADD COLUMN failed_attempts INTEGER NOT NULL DEFAULT 0;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;took just 2 minutes to complete for the same table.&lt;/p&gt;
&lt;p&gt;So such migration will lock the users table for an hour (or even
more) and so stop the whole application for hours instead of just 2
minutes.&lt;/p&gt;
&lt;p&gt;In the assigned patch I've fixed it in the manner it was done
for the mysql.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T18:50:12+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6422</number>
      <permalink>pacth-postgres-adapter-optimization-for-add_column-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PACTH] Postgres adapter optimization for add_column method</title>
      <updated-at type="datetime">2011-02-12T18:50:16+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">1</version>
      <user-name>2kan</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6422</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T18:50:44+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6422</number>
      <permalink>pacth-postgres-adapter-optimization-for-add_column-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch postgresql</tag>
      <title>[PACTH] Postgres adapter optimization for add_column method</title>
      <updated-at type="datetime">2011-02-12T18:50:49+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">2</version>
      <user-name>2kan</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6422</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T19:15:02+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[PACTH] Postgres adapter optimization for add_column method&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6422</number>
      <permalink>pacth-postgres-adapter-optimization-for-add_column-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch postgresql</tag>
      <title>[PATCH] Postgres adapter optimization for add_column method</title>
      <updated-at type="datetime">2011-02-12T19:15:08+00:00</updated-at>
      <user-id type="integer">82083</user-id>
      <version type="integer">3</version>
      <user-name>Vijay Dev</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6422</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T19:17:57+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 
:assigned_user: 40272
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6422</number>
      <permalink>pacth-postgres-adapter-optimization-for-add_column-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch postgresql</tag>
      <title>[PATCH] Postgres adapter optimization for add_column method</title>
      <updated-at type="datetime">2011-02-12T19:18:08+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6422</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>seems good.  Merged and pushed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;seems good. Merged and pushed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-15T18:55:17+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6422</number>
      <permalink>pacth-postgres-adapter-optimization-for-add_column-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>patch postgresql</tag>
      <title>[PATCH] Postgres adapter optimization for add_column method</title>
      <updated-at type="datetime">2011-02-15T18:55:29+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">5</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6422</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>885801a1c11ee9d529ac3e829579610f46a5bbc9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-12T18:50:12+00:00</created-at>
      <filename>postgres_adapter_performance_optimization_against-rails-edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">909595</id>
      <size type="integer">2356</size>
      <uploader-id type="integer">65953</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/909595/postgres_adapter_performance_optimization_against-rails-edge.diff</url>
    </attachment>
  </attachments>
</ticket>
