<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40272</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-03T15:51:16+01:00</created-at>
  <creator-id type="integer">89656</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5286</number>
  <permalink>activerecordbaseabstract_class-should-return-false-not-nil</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;active record&quot;</tag>
  <title>ActiveRecord::Base.abstract_class? should return false not nil</title>
  <updated-at type="datetime">2010-10-15T23:02:00+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">5</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Rohit Arondekar</creator-name>
  <assigned-user-name>Santiago Pastorino</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5286</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Although this doesn't break anything, but ActiveRecord::Base.abstract_class? returns nil when @abstract_class is not defined. This still works as nil and false are treated as false in conditionals. But Ruby methods ending with a ?, by convention should return true/false. The attached patch ensures that it does return false if @abstract_class is not defined.

IMHO no test was needed as the existing tests cover the functionality provided by the method.

Credit: Neeraj Singh for originally spotting the discrepancy.</original-body>
  <latest-body>Although this doesn't break anything, but ActiveRecord::Base.abstract_class? returns nil when @abstract_class is not defined. This still works as nil and false are treated as false in conditionals. But Ruby methods ending with a ?, by convention should return true/false. The attached patch ensures that it does return false if @abstract_class is not defined.

IMHO no test was needed as the existing tests cover the functionality provided by the method.

Credit: Neeraj Singh for originally spotting the discrepancy.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Although this doesn't break anything, but
ActiveRecord::Base.abstract_class? returns nil when @abstract_class
is not defined. This still works as nil and false are treated as
false in conditionals. But Ruby methods ending with a ?, by
convention should return true/false. The attached patch ensures
that it does return false if @abstract_class is not defined.&lt;/p&gt;
&lt;p&gt;IMHO no test was needed as the existing tests cover the
functionality provided by the method.&lt;/p&gt;
&lt;p&gt;Credit: Neeraj Singh for originally spotting the
discrepancy.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Although this doesn't break anything, but ActiveRecord::Base.abstract_class? returns nil when @abstract_class is not defined. This still works as nil and false are treated as false in conditionals. But Ruby methods ending with a ?, by convention should return true/false. The attached patch ensures that it does return false if @abstract_class is not defined.

IMHO no test was needed as the existing tests cover the functionality provided by the method.

Credit: Neeraj Singh for originally spotting the discrepancy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Although this doesn't break anything, but
ActiveRecord::Base.abstract_class? returns nil when @abstract_class
is not defined. This still works as nil and false are treated as
false in conditionals. But Ruby methods ending with a ?, by
convention should return true/false. The attached patch ensures
that it does return false if @abstract_class is not defined.&lt;/p&gt;
&lt;p&gt;IMHO no test was needed as the existing tests cover the
functionality provided by the method.&lt;/p&gt;
&lt;p&gt;Credit: Neeraj Singh for originally spotting the
discrepancy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-03T15:51:16+01:00</created-at>
      <creator-id type="integer">89656</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5286</number>
      <permalink>activerecordbaseabstract_class-should-return-false-not-nil</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot;</tag>
      <title>ActiveRecord::Base.abstract_class? should return false not nil</title>
      <updated-at type="datetime">2010-08-03T15:51:40+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">1</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Rohit Arondekar</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5286</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think you should add the test that method returns false and not nil :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think you should add the test that method returns false and
not nil :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-03T16:16:01+01:00</created-at>
      <creator-id type="integer">89656</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5286</number>
      <permalink>activerecordbaseabstract_class-should-return-false-not-nil</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot;</tag>
      <title>ActiveRecord::Base.abstract_class? should return false not nil</title>
      <updated-at type="datetime">2010-08-03T16:16:02+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Rohit Arondekar</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5286</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>New patch with a test. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;New patch with a test. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T02:24:51+01:00</created-at>
      <creator-id type="integer">89656</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5286</number>
      <permalink>activerecordbaseabstract_class-should-return-false-not-nil</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot;</tag>
      <title>ActiveRecord::Base.abstract_class? should return false not nil</title>
      <updated-at type="datetime">2010-08-04T02:24:52+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Rohit Arondekar</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5286</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This is actually not needed as both nil and false behave the same. Also it's acceptable that a method ending with a ? return either nil or false if the condition is not satisfied. Closing ticket. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is actually not needed as both nil and false behave the
same. Also it's acceptable that a method ending with a ? return
either nil or false if the condition is not satisfied. Closing
ticket. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-04T03:29:21+01:00</created-at>
      <creator-id type="integer">89656</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5286</number>
      <permalink>activerecordbaseabstract_class-should-return-false-not-nil</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;active record&quot;</tag>
      <title>ActiveRecord::Base.abstract_class? should return false not nil</title>
      <updated-at type="datetime">2010-08-04T03:29:22+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">4</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Rohit Arondekar</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5286</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:02:00+01:00</created-at>
      <creator-id type="integer">89656</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5286</number>
      <permalink>activerecordbaseabstract_class-should-return-false-not-nil</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;active record&quot;</tag>
      <title>ActiveRecord::Base.abstract_class? should return false not nil</title>
      <updated-at type="datetime">2010-10-15T23:02:00+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Rohit Arondekar</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5286</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>41b682359b1870315c736743097bbb6af2d286bb</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-03T15:51:16+01:00</created-at>
      <filename>abstract_class.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">613088</id>
      <size type="integer">899</size>
      <uploader-id type="integer">89656</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/613088/abstract_class.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>5466e2e76b2463ef95d5cc3e0b5e02e03ab7e12c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-04T02:24:51+01:00</created-at>
      <filename>ar_base.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">614228</id>
      <size type="integer">1653</size>
      <uploader-id type="integer">89656</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/614228/ar_base.diff</url>
    </attachment>
  </attachments>
</ticket>
