From eef86f6167ba0969c9e2388b5cad5412b8562404 Mon Sep 17 00:00:00 2001
From: Miles Egan <milesegan@gmail.com>
Date: Sat, 10 Jul 2010 18:59:55 -0700
Subject: [PATCH] add patch and test to handle rack parse typeerror [#3030 state:resolved]

---
 actionpack/lib/action_dispatch/http/request.rb |    4 ++--
 actionpack/test/dispatch/request_test.rb       |   10 ++++++++++
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/actionpack/lib/action_dispatch/http/request.rb b/actionpack/lib/action_dispatch/http/request.rb
index fd23b1d..1abbc1a 100644
--- a/actionpack/lib/action_dispatch/http/request.rb
+++ b/actionpack/lib/action_dispatch/http/request.rb
@@ -212,13 +212,13 @@ module ActionDispatch
 
     # Override Rack's GET method to support indifferent access
     def GET
-      @env["action_dispatch.request.query_parameters"] ||= normalize_parameters(super)
+      @env["action_dispatch.request.query_parameters"] ||= (normalize_parameters(super) || {})
     end
     alias :query_parameters :GET
 
     # Override Rack's POST method to support indifferent access
     def POST
-      @env["action_dispatch.request.request_parameters"] ||= normalize_parameters(super)
+      @env["action_dispatch.request.request_parameters"] ||= (normalize_parameters(super) || {})
     end
     alias :request_parameters :POST
 
diff --git a/actionpack/test/dispatch/request_test.rb b/actionpack/test/dispatch/request_test.rb
index e5ee412..7216de9 100644
--- a/actionpack/test/dispatch/request_test.rb
+++ b/actionpack/test/dispatch/request_test.rb
@@ -346,6 +346,16 @@ class RequestTest < ActiveSupport::TestCase
     assert_equal({"bar" => 2}, request.query_parameters)
   end
 
+  test "parameter parse error" do
+    mock_rack_env = { "QUERY_STRING" => "x[y]=1&x[y][][w]=2", "rack.input" => "foo" }
+    request = nil
+    assert_raise TypeError do
+      request = stub_request(mock_rack_env) 
+      request.parameters
+    end
+    assert_equal({}, request.parameters)
+  end
+
   test "formats with accept header" do
     request = stub_request 'HTTP_ACCEPT' => 'text/html'
     request.expects(:parameters).at_least_once.returns({})
-- 
1.7.0.4

