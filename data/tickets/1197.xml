<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-10T18:18:28+01:00</created-at>
  <creator-id type="integer">7315</creator-id>
  <milestone-due-on type="datetime">2009-01-31T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1197</number>
  <permalink>dbmigratedown-should-default-to-the-current-migration</permalink>
  <priority type="integer">23</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>db:migrate:down should default to the current migration</title>
  <updated-at type="datetime">2009-01-18T04:11:36+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">4</version>
  <user-name>Pratik</user-name>
  <creator-name>David Chelimsky</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1197</url>
  <priority-name nil="true"></priority-name>
  <original-body>@@@
$ rake -T | grep down
rake db:migrate:down    # Runs the &quot;down&quot; for a given migration VERSION.
$ rake db:migrate:down
rake aborted!
VERSION is required
@@@

Most of the time I use this, it's while I'm developing a migration and I want to run the down for the one I'm working on. I think that if you don't set a VERSION that it should just figure out the current version and use that.

Similarly, db:migrate:up should default to the one greater than the one you're working on, though that could be trickier because it would have to deduce this from the file system.</original-body>
  <latest-body>@@@
$ rake -T | grep down
rake db:migrate:down    # Runs the &quot;down&quot; for a given migration VERSION.
$ rake db:migrate:down
rake aborted!
VERSION is required
@@@

Most of the time I use this, it's while I'm developing a migration and I want to run the down for the one I'm working on. I think that if you don't set a VERSION that it should just figure out the current version and use that.

Similarly, db:migrate:up should default to the one greater than the one you're working on, though that could be trickier because it would have to deduce this from the file system.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;&lt;code&gt;
$ rake -T | grep down
rake db:migrate:down    # Runs the &amp;quot;down&amp;quot; for a given migration VERSION.
$ rake db:migrate:down
rake aborted!
VERSION is required
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Most of the time I use this, it's while I'm developing a
migration and I want to run the down for the one I'm working on. I
think that if you don't set a VERSION that it should just figure
out the current version and use that.&lt;/p&gt;
&lt;p&gt;Similarly, db:migrate:up should default to the one greater than
the one you're working on, though that could be trickier because it
would have to deduce this from the file system.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
$ rake -T | grep down
rake db:migrate:down    # Runs the &quot;down&quot; for a given migration VERSION.
$ rake db:migrate:down
rake aborted!
VERSION is required
@@@

Most of the time I use this, it's while I'm developing a migration and I want to run the down for the one I'm working on. I think that if you don't set a VERSION that it should just figure out the current version and use that.

Similarly, db:migrate:up should default to the one greater than the one you're working on, though that could be trickier because it would have to deduce this from the file system.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;&lt;code&gt;
$ rake -T | grep down
rake db:migrate:down    # Runs the &amp;quot;down&amp;quot; for a given migration VERSION.
$ rake db:migrate:down
rake aborted!
VERSION is required
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Most of the time I use this, it's while I'm developing a
migration and I want to run the down for the one I'm working on. I
think that if you don't set a VERSION that it should just figure
out the current version and use that.&lt;/p&gt;
&lt;p&gt;Similarly, db:migrate:up should default to the one greater than
the one you're working on, though that could be trickier because it
would have to deduce this from the file system.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-10T18:18:28+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1197</number>
      <permalink>dbmigratedown-should-default-to-the-current-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>db:migrate:down should default to the current migration</title>
      <updated-at type="datetime">2008-10-10T18:18:31+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">1</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1197</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-11T14:55:49+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1197</number>
      <permalink>dbmigratedown-should-default-to-the-current-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>db:migrate:down should default to the current migration</title>
      <updated-at type="datetime">2009-01-11T18:20:27+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1197</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What about `db:migrate:rollback`?</body>
      <body-html>&lt;div&gt;&lt;p&gt;What about &lt;code&gt;db:migrate:rollback&lt;/code&gt;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-13T15:49:11+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1197</number>
      <permalink>dbmigratedown-should-default-to-the-current-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>db:migrate:down should default to the current migration</title>
      <updated-at type="datetime">2009-01-13T15:49:13+00:00</updated-at>
      <user-id type="integer">16279</user-id>
      <version type="integer">3</version>
      <user-name>michael (at mdaines)</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1197</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What michael said. db:migrate:rollback - rollbacks one version. It takes STEP env var argument too, in case you want to rollback more than 1 versions. And to migrate up, could just use the good ol' db:migrate :)

There's also db:migrate:redo which rollbacks a version and applies it again.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What michael said. db:migrate:rollback - rollbacks one version.
It takes STEP env var argument too, in case you want to rollback
more than 1 versions. And to migrate up, could just use the good
ol' db:migrate :)&lt;/p&gt;
&lt;p&gt;There's also db:migrate:redo which rollbacks a version and
applies it again.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-18T04:11:33+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1197</number>
      <permalink>dbmigratedown-should-default-to-the-current-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>db:migrate:down should default to the current migration</title>
      <updated-at type="datetime">2009-01-18T04:11:36+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1197</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
</ticket>
