From 35a814fcb27f9f4baa5c85bd9e2417cdb745285e Mon Sep 17 00:00:00 2001
From: Marcello Nuccio <marcello.nuccio@gmail.com>
Date: Mon, 29 Dec 2008 14:42:30 +0100
Subject: [PATCH] Make possible to change time_zone in application template.

---
 .../generators/applications/app/template_runner.rb |   35 ++++++++++++++++---
 .../test/generators/rails_template_runner_test.rb  |   27 ++++++++++++++-
 2 files changed, 54 insertions(+), 8 deletions(-)

diff --git a/railties/lib/rails_generator/generators/applications/app/template_runner.rb b/railties/lib/rails_generator/generators/applications/app/template_runner.rb
index bb7bd0e..7ca56d4 100644
--- a/railties/lib/rails_generator/generators/applications/app/template_runner.rb
+++ b/railties/lib/rails_generator/generators/applications/app/template_runner.rb
@@ -98,13 +98,31 @@ module Rails
 
     # Adds a line inside the Initializer block for config/environment.rb. Used by #gem
     def environment(data = nil, &block)
-      sentinel = 'Rails::Initializer.run do |config|'
+      sentinel = Regexp.escape('Rails::Initializer.run do |config|')
 
       data = block.call if !data && block_given?
-
-      in_root do
-        gsub_file 'config/environment.rb', /(#{Regexp.escape(sentinel)})/mi do |match|
-          "#{match}\n " << data
+      done = false
+      if data =~ /\A\s*config\.[.a-z0-9_]+\s*=/
+        parameter_name, parameter_value = data.split('=').map(&:strip)
+        if match_file('config/environment.rb', /(#{sentinel}.*?\n\s*#{parameter_name}\s*?=.*?)\nend$/m)
+          in_root do
+            gsub_file 'config/environment.rb',
+              /(#{sentinel}.*?)\n\s*#{parameter_name}\s*?=[^\n]+(.*?)\nend$/m,
+              "\\1\n  #{data}\\2\nend"
+          end
+          done = true
+        elsif match_file('config/environment.rb', /(#{sentinel}.*?\n\s*#\s*#{parameter_name}\s*?=.*?)\nend$/m)
+          in_root do
+            gsub_file 'config/environment.rb',
+              /(#{sentinel}.*\n\s*#\s*#{parameter_name}\s*?=[^\n]+)(.*?)\nend$/m,
+              "\\1\n  #{data}\\2\nend"
+          end
+          done = true
+        end
+      end
+      unless done
+        in_root do
+          gsub_file 'config/environment.rb', /(#{sentinel}.*?)\nend$/m, "\\1\n  #{data}\nend"
         end
       end
     end
@@ -338,6 +356,11 @@ module Rails
       !yes?(question)
     end
 
+    def match_file(relative_destination, regexp)
+      path = destination_path(relative_destination)
+      File.read(path).match(regexp)
+    end
+
     def gsub_file(relative_destination, regexp, *args, &block)
       path = destination_path(relative_destination)
       content = File.read(path).gsub(regexp, *args, &block)
@@ -366,4 +389,4 @@ module Rails
     end
 
   end
-end
\ No newline at end of file
+end
diff --git a/railties/test/generators/rails_template_runner_test.rb b/railties/test/generators/rails_template_runner_test.rb
index fcc0206..d8c7f9d 100644
--- a/railties/test/generators/rails_template_runner_test.rb
+++ b/railties/test/generators/rails_template_runner_test.rb
@@ -96,6 +96,22 @@ class RailsTemplateRunnerTest < GeneratorTestCase
     assert_rails_initializer_includes('# This will be added')
   end
 
+  def test_environment_should_override_existing_data_if_is_an_assignment
+    time_zone1 = "config.time_zone = 'Rome'"
+    run_template_method(:environment, time_zone1)
+    assert_rails_initializer_includes(time_zone1)
+    time_zone2 = "config.time_zone = 'UTC'"
+    run_template_method(:environment, time_zone2)
+    assert_rails_initializer_includes(time_zone2)
+    assert_rails_initializer_does_not_include(time_zone1)
+  end
+
+  def test_environment_should_ignore_existing_comments
+    ar_observers = "config.active_record.observers = :cacher"
+    run_template_method(:environment, ar_observers)
+    assert_rails_initializer_includes(ar_observers)
+  end
+
   def test_git_with_symbol_should_run_command_using_git_scm
     Rails::Git.expects(:run).once.with('init')
     run_template_method(:git, :init)
@@ -177,7 +193,14 @@ class RailsTemplateRunnerTest < GeneratorTestCase
   def assert_rails_initializer_includes(data, message = nil)
     message ||= "Rails::Initializer should include #{data}"
     assert_generated_file 'config/environment.rb' do |body|
-      assert_match(/#{Regexp.escape("Rails::Initializer.run do |config|")}.+#{Regexp.escape(data)}.+end/m, body, message)
+      assert_match(/#{Regexp.escape("Rails::Initializer.run do |config|")}.*\n\s*#{Regexp.escape(data)}.*\nend/m, body, message)
+    end
+  end
+
+  def assert_rails_initializer_does_not_include(data, message = nil)
+    message ||= "Rails::Initializer should not include #{data}"
+    assert_generated_file 'config/environment.rb' do |body|
+      assert_no_match(/#{Regexp.escape("Rails::Initializer.run do |config|")}.*\n\s*#{Regexp.escape(data)}\n.+end/m, body, message)
     end
   end
 
@@ -187,4 +210,4 @@ class RailsTemplateRunnerTest < GeneratorTestCase
       assert_match(/#{Regexp.escape(data)}/,file, message)
     end
   end
-end
\ No newline at end of file
+end
-- 
1.5.6.3

