From ad33e58dcec65bc0697d94c85e2eceb5643ad507 Mon Sep 17 00:00:00 2001
From: unknown <BANH@.ad2.ad.alcatel.com>
Date: Wed, 13 Aug 2008 16:51:13 +0200
Subject: [PATCH] Change all direct access to RAILS_ENV into ENV['RAILS_ENV']

---
 railties/lib/initializer.rb       |    2 +-
 railties/lib/tasks/databases.rake |   54 ++++++++++++++++++------------------
 2 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/railties/lib/initializer.rb b/railties/lib/initializer.rb
index 6576cd3..bee211c 100644
--- a/railties/lib/initializer.rb
+++ b/railties/lib/initializer.rb
@@ -45,7 +45,7 @@ module Rails
     end
 
     def env
-      ActiveSupport::StringInquirer.new(RAILS_ENV)
+      ActiveSupport::StringInquirer.new(ENV['RAILS_ENV'])
     end
 
     def cache
diff --git a/railties/lib/tasks/databases.rake b/railties/lib/tasks/databases.rake
index 21c81b3..0632e80 100644
--- a/railties/lib/tasks/databases.rake
+++ b/railties/lib/tasks/databases.rake
@@ -23,7 +23,7 @@ namespace :db do
 
   desc 'Create the database defined in config/database.yml for the current RAILS_ENV'
   task :create => :environment do
-    create_database(ActiveRecord::Base.configurations[RAILS_ENV])
+    create_database(ActiveRecord::Base.configurations[ENV['RAILS_ENV']])
   end
 
   def create_database(config)
@@ -76,7 +76,7 @@ namespace :db do
 
   desc 'Drops the database for the current RAILS_ENV'
   task :drop => :environment do
-    config = ActiveRecord::Base.configurations[RAILS_ENV || 'development']
+    config = ActiveRecord::Base.configurations[ENV['RAILS_ENV'] || 'development']
     begin
       drop_database(config)
     rescue Exception => e
@@ -136,7 +136,7 @@ namespace :db do
 
   desc "Retrieves the charset for the current environment's database"
   task :charset => :environment do
-    config = ActiveRecord::Base.configurations[RAILS_ENV || 'development']
+    config = ActiveRecord::Base.configurations[ENV['RAILS_ENV'] || 'development']
     case config['adapter']
     when 'mysql'
       ActiveRecord::Base.establish_connection(config)
@@ -151,7 +151,7 @@ namespace :db do
 
   desc "Retrieves the collation for the current environment's database"
   task :collation => :environment do
-    config = ActiveRecord::Base.configurations[RAILS_ENV || 'development']
+    config = ActiveRecord::Base.configurations[ENV['RAILS_ENV'] || 'development']
     case config['adapter']
     when 'mysql'
       ActiveRecord::Base.establish_connection(config)
@@ -238,34 +238,34 @@ namespace :db do
     desc "Dump the database structure to a SQL file"
     task :dump => :environment do
       abcs = ActiveRecord::Base.configurations
-      case abcs[RAILS_ENV]["adapter"]
+      case abcs[ENV['RAILS_ENV']]["adapter"]
       when "mysql", "oci", "oracle"
-        ActiveRecord::Base.establish_connection(abcs[RAILS_ENV])
-        File.open("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql", "w+") { |f| f << ActiveRecord::Base.connection.structure_dump }
+        ActiveRecord::Base.establish_connection(abcs[ENV['RAILS_ENV']])
+        File.open("#{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql", "w+") { |f| f << ActiveRecord::Base.connection.structure_dump }
       when "postgresql"
-        ENV['PGHOST']     = abcs[RAILS_ENV]["host"] if abcs[RAILS_ENV]["host"]
-        ENV['PGPORT']     = abcs[RAILS_ENV]["port"].to_s if abcs[RAILS_ENV]["port"]
-        ENV['PGPASSWORD'] = abcs[RAILS_ENV]["password"].to_s if abcs[RAILS_ENV]["password"]
-        search_path = abcs[RAILS_ENV]["schema_search_path"]
+        ENV['PGHOST']     = abcs[ENV['RAILS_ENV']]["host"] if abcs[ENV['RAILS_ENV']]["host"]
+        ENV['PGPORT']     = abcs[ENV['RAILS_ENV']]["port"].to_s if abcs[ENV['RAILS_ENV']]["port"]
+        ENV['PGPASSWORD'] = abcs[ENV['RAILS_ENV']]["password"].to_s if abcs[ENV['RAILS_ENV']]["password"]
+        search_path = abcs[ENV['RAILS_ENV']]["schema_search_path"]
         search_path = "--schema=#{search_path}" if search_path
-        `pg_dump -i -U "#{abcs[RAILS_ENV]["username"]}" -s -x -O -f db/#{RAILS_ENV}_structure.sql #{search_path} #{abcs[RAILS_ENV]["database"]}`
+        `pg_dump -i -U "#{abcs[ENV['RAILS_ENV']]["username"]}" -s -x -O -f db/#{ENV['RAILS_ENV']}_structure.sql #{search_path} #{abcs[ENV['RAILS_ENV']]["database"]}`
         raise "Error dumping database" if $?.exitstatus == 1
       when "sqlite", "sqlite3"
-        dbfile = abcs[RAILS_ENV]["database"] || abcs[RAILS_ENV]["dbfile"]
-        `#{abcs[RAILS_ENV]["adapter"]} #{dbfile} .schema > db/#{RAILS_ENV}_structure.sql`
+        dbfile = abcs[ENV['RAILS_ENV']]["database"] || abcs[ENV['RAILS_ENV']]["dbfile"]
+        `#{abcs[ENV['RAILS_ENV']]["adapter"]} #{dbfile} .schema > db/#{ENV['RAILS_ENV']}_structure.sql`
       when "sqlserver"
-        `scptxfr /s #{abcs[RAILS_ENV]["host"]} /d #{abcs[RAILS_ENV]["database"]} /I /f db\\#{RAILS_ENV}_structure.sql /q /A /r`
-        `scptxfr /s #{abcs[RAILS_ENV]["host"]} /d #{abcs[RAILS_ENV]["database"]} /I /F db\ /q /A /r`
+        `scptxfr /s #{abcs[ENV['RAILS_ENV']]["host"]} /d #{abcs[ENV['RAILS_ENV']]["database"]} /I /f db\\#{ENV['RAILS_ENV']}_structure.sql /q /A /r`
+        `scptxfr /s #{abcs[ENV['RAILS_ENV']]["host"]} /d #{abcs[ENV['RAILS_ENV']]["database"]} /I /F db\ /q /A /r`
       when "firebird"
-        set_firebird_env(abcs[RAILS_ENV])
-        db_string = firebird_db_string(abcs[RAILS_ENV])
-        sh "isql -a #{db_string} > #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql"
+        set_firebird_env(abcs[ENV['RAILS_ENV']])
+        db_string = firebird_db_string(abcs[ENV['RAILS_ENV']])
+        sh "isql -a #{db_string} > #{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql"
       else
         raise "Task not supported by '#{abcs["test"]["adapter"]}'"
       end
 
       if ActiveRecord::Base.connection.supports_migrations?
-        File.open("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql", "a") { |f| f << ActiveRecord::Base.connection.dump_schema_information }
+        File.open("#{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql", "a") { |f| f << ActiveRecord::Base.connection.dump_schema_information }
       end
     end
   end
@@ -288,28 +288,28 @@ namespace :db do
       when "mysql"
         ActiveRecord::Base.establish_connection(:test)
         ActiveRecord::Base.connection.execute('SET foreign_key_checks = 0')
-        IO.readlines("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql").join.split("\n\n").each do |table|
+        IO.readlines("#{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql").join.split("\n\n").each do |table|
           ActiveRecord::Base.connection.execute(table)
         end
       when "postgresql"
         ENV['PGHOST']     = abcs["test"]["host"] if abcs["test"]["host"]
         ENV['PGPORT']     = abcs["test"]["port"].to_s if abcs["test"]["port"]
         ENV['PGPASSWORD'] = abcs["test"]["password"].to_s if abcs["test"]["password"]
-        `psql -U "#{abcs["test"]["username"]}" -f #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql #{abcs["test"]["database"]}`
+        `psql -U "#{abcs["test"]["username"]}" -f #{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql #{abcs["test"]["database"]}`
       when "sqlite", "sqlite3"
         dbfile = abcs["test"]["database"] || abcs["test"]["dbfile"]
-        `#{abcs["test"]["adapter"]} #{dbfile} < #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql`
+        `#{abcs["test"]["adapter"]} #{dbfile} < #{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql`
       when "sqlserver"
-        `osql -E -S #{abcs["test"]["host"]} -d #{abcs["test"]["database"]} -i db\\#{RAILS_ENV}_structure.sql`
+        `osql -E -S #{abcs["test"]["host"]} -d #{abcs["test"]["database"]} -i db\\#{ENV['RAILS_ENV']}_structure.sql`
       when "oci", "oracle"
         ActiveRecord::Base.establish_connection(:test)
-        IO.readlines("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql").join.split(";\n\n").each do |ddl|
+        IO.readlines("#{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql").join.split(";\n\n").each do |ddl|
           ActiveRecord::Base.connection.execute(ddl)
         end
       when "firebird"
         set_firebird_env(abcs["test"])
         db_string = firebird_db_string(abcs["test"])
-        sh "isql -i #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql #{db_string}"
+        sh "isql -i #{RAILS_ROOT}/db/#{ENV['RAILS_ENV']}_structure.sql #{db_string}"
       else
         raise "Task not supported by '#{abcs["test"]["adapter"]}'"
       end
@@ -332,7 +332,7 @@ namespace :db do
       when "sqlserver"
         dropfkscript = "#{abcs["test"]["host"]}.#{abcs["test"]["database"]}.DP1".gsub(/\\/,'-')
         `osql -E -S #{abcs["test"]["host"]} -d #{abcs["test"]["database"]} -i db\\#{dropfkscript}`
-        `osql -E -S #{abcs["test"]["host"]} -d #{abcs["test"]["database"]} -i db\\#{RAILS_ENV}_structure.sql`
+        `osql -E -S #{abcs["test"]["host"]} -d #{abcs["test"]["database"]} -i db\\#{ENV['RAILS_ENV']}_structure.sql`
       when "oci", "oracle"
         ActiveRecord::Base.establish_connection(:test)
         ActiveRecord::Base.connection.structure_drop.split(";\n\n").each do |ddl|
-- 
1.5.6.1.1071.g76fb

