<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-04T20:22:59+01:00</created-at>
  <creator-id type="integer">36857</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5300</number>
  <permalink>activerecord-before_save-callback-not-working-with-update_attributes-method</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>ActiveRecord before_save callback not working with update_attributes method</title>
  <updated-at type="datetime">2011-02-02T18:53:49+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>&#193;lvaro Bautista</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5300</url>
  <priority-name nil="true"></priority-name>
  <original-body>Writing some specs for a before_save callback it was not being called when I used the update_attributes method in rails 3.0.0.rc.

I attach a patch that can be applied to a fresh rails app (I used `rails new lazytest -d sqlite3`), I don't know if there is a proper way to show the error.

Within the patch is the Gemfile.lock where every gem version can be checked.

I used sqlite3 to create the patch but I found the error in an application that is using mysql.</original-body>
  <latest-body>Writing some specs for a before_save callback it was not being called when I used the update_attributes method in rails 3.0.0.rc.

I attach a patch that can be applied to a fresh rails app (I used `rails new lazytest -d sqlite3`), I don't know if there is a proper way to show the error.

Within the patch is the Gemfile.lock where every gem version can be checked.

I used sqlite3 to create the patch but I found the error in an application that is using mysql.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Writing some specs for a before_save callback it was not being
called when I used the update_attributes method in rails
3.0.0.rc.&lt;/p&gt;
&lt;p&gt;I attach a patch that can be applied to a fresh rails app (I
used &lt;code&gt;rails new lazytest -d sqlite3&lt;/code&gt;), I don't know if
there is a proper way to show the error.&lt;/p&gt;
&lt;p&gt;Within the patch is the Gemfile.lock where every gem version can
be checked.&lt;/p&gt;
&lt;p&gt;I used sqlite3 to create the patch but I found the error in an
application that is using mysql.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Writing some specs for a before_save callback it was not being called when I used the update_attributes method in rails 3.0.0.rc.

I attach a patch that can be applied to a fresh rails app (I used `rails new lazytest -d sqlite3`), I don't know if there is a proper way to show the error.

Within the patch is the Gemfile.lock where every gem version can be checked.

I used sqlite3 to create the patch but I found the error in an application that is using mysql.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Writing some specs for a before_save callback it was not being
called when I used the update_attributes method in rails
3.0.0.rc.&lt;/p&gt;
&lt;p&gt;I attach a patch that can be applied to a fresh rails app (I
used &lt;code&gt;rails new lazytest -d sqlite3&lt;/code&gt;), I don't know if
there is a proper way to show the error.&lt;/p&gt;
&lt;p&gt;Within the patch is the Gemfile.lock where every gem version can
be checked.&lt;/p&gt;
&lt;p&gt;I used sqlite3 to create the patch but I found the error in an
application that is using mysql.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T20:22:59+01:00</created-at>
      <creator-id type="integer">36857</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5300</number>
      <permalink>activerecord-before_save-callback-not-working-with-update_attributes-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord before_save callback not working with update_attributes method</title>
      <updated-at type="datetime">2010-08-04T20:23:00+01:00</updated-at>
      <user-id type="integer">36857</user-id>
      <version type="integer">1</version>
      <user-name>&#193;lvaro Bautista</user-name>
      <creator-name>&#193;lvaro Bautista</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5300</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm sorry, the patch I submitted was wrong.

I can't reproduce the error in a fresh application. 

The main difference between the fresh application from which I created the patch and the one is failing is that in the one that fails I'm using RSpec2 instead of TestUnit, I don't know if that may be related to the issue.

What I actually have in my code is:

&lt;pre&gt;
before_save :copy_first_release_info

private 

def copy_first_release_info
  if original_release?
    self.first_release_editor = editor
    self.first_release_year = year
    self.first_release_country = country
  end
end
&lt;/pre&gt;

in my model, and

&lt;pre&gt;
it &quot;should copy edition info into first release info before save if original release is set to true&quot; do
  album = Album.create(:artist =&gt; &quot;Lovin' Spoonful&quot;, :title =&gt; &quot;Do you believe in magic&quot;,
    :editor =&gt; &quot;Kama Sutra&quot;,
    :year =&gt; 1965,
    :country =&gt; &quot;USA&quot;,
    :original_release =&gt; true
  )
  
  album.reload
  album.first_release_editor.should == &quot;Kama Sutra&quot;
  album.first_release_year.should == 1965
  album.first_release_country.should == &quot;USA&quot;
  
  album.update_attribute(:country, &quot;United States of America&quot;)
  album.reload
  album.first_release_country.should == &quot;United States of America&quot;
end
&lt;/pre&gt;

in my spec. The last should fails and I can't see why, because if I change the update_attribute call by an assignation and a save call it works fine.

Sorry again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm sorry, the patch I submitted was wrong.&lt;/p&gt;
&lt;p&gt;I can't reproduce the error in a fresh application.&lt;/p&gt;
&lt;p&gt;The main difference between the fresh application from which I
created the patch and the one is failing is that in the one that
fails I'm using RSpec2 instead of TestUnit, I don't know if that
may be related to the issue.&lt;/p&gt;
&lt;p&gt;What I actually have in my code is:&lt;/p&gt;
&lt;pre&gt;
before_save :copy_first_release_info

private 

def copy_first_release_info
  if original_release?
    self.first_release_editor = editor
    self.first_release_year = year
    self.first_release_country = country
  end
end
&lt;/pre&gt;
&lt;p&gt;in my model, and&lt;/p&gt;
&lt;pre&gt;
it &quot;should copy edition info into first release info before save if original release is set to true&quot; do
  album = Album.create(:artist =&amp;gt; &quot;Lovin' Spoonful&quot;, :title =&amp;gt; &quot;Do you believe in magic&quot;,
    :editor =&amp;gt; &quot;Kama Sutra&quot;,
    :year =&amp;gt; 1965,
    :country =&amp;gt; &quot;USA&quot;,
    :original_release =&amp;gt; true
  )
  
  album.reload
  album.first_release_editor.should == &quot;Kama Sutra&quot;
  album.first_release_year.should == 1965
  album.first_release_country.should == &quot;USA&quot;
  
  album.update_attribute(:country, &quot;United States of America&quot;)
  album.reload
  album.first_release_country.should == &quot;United States of America&quot;
end
&lt;/pre&gt;
&lt;p&gt;in my spec. The last should fails and I can't see why, because
if I change the update_attribute call by an assignation and a save
call it works fine.&lt;/p&gt;
&lt;p&gt;Sorry again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T20:34:34+01:00</created-at>
      <creator-id type="integer">36857</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5300</number>
      <permalink>activerecord-before_save-callback-not-working-with-update_attributes-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord before_save callback not working with update_attributes method</title>
      <updated-at type="datetime">2010-08-04T20:34:35+01:00</updated-at>
      <user-id type="integer">36857</user-id>
      <version type="integer">2</version>
      <user-name>&#193;lvaro Bautista</user-name>
      <creator-name>&#193;lvaro Bautista</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5300</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I found out my mistake. The method that fails is update_attribute. So my previous diff didn't fail because I was using update_attributes.

I attach the right patch now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I found out my mistake. The method that fails is
update_attribute. So my previous diff didn't fail because I was
using update_attributes.&lt;/p&gt;
&lt;p&gt;I attach the right patch now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T21:47:40+01:00</created-at>
      <creator-id type="integer">36857</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5300</number>
      <permalink>activerecord-before_save-callback-not-working-with-update_attributes-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord before_save callback not working with update_attributes method</title>
      <updated-at type="datetime">2010-08-04T21:47:41+01:00</updated-at>
      <user-id type="integer">36857</user-id>
      <version type="integer">3</version>
      <user-name>&#193;lvaro Bautista</user-name>
      <creator-name>&#193;lvaro Bautista</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5300</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After a quick look at the AR source code it seems that skipping callbacks in this method is intentional:

&lt;pre&gt;
# Updates a single attribute and saves the record.  
# This is especially useful for boolean flags on existing records. Also note that
#
# * validation is skipped
# * No callbacks are invoked 
# * updated_at/updated_on column is updated if that column is available
# * does not work on associations
# * does not work on attr_accessor attributes. The attribute that is being updated must be column name.
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;After a quick look at the AR source code it seems that skipping
callbacks in this method is intentional:&lt;/p&gt;
&lt;pre&gt;
# Updates a single attribute and saves the record.  
# This is especially useful for boolean flags on existing records. Also note that
#
# * validation is skipped
# * No callbacks are invoked 
# * updated_at/updated_on column is updated if that column is available
# * does not work on associations
# * does not work on attr_accessor attributes. The attribute that is being updated must be column name.
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-07T18:33:39+01:00</created-at>
      <creator-id type="integer">36857</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5300</number>
      <permalink>activerecord-before_save-callback-not-working-with-update_attributes-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord before_save callback not working with update_attributes method</title>
      <updated-at type="datetime">2010-08-07T18:33:41+01:00</updated-at>
      <user-id type="integer">36857</user-id>
      <version type="integer">4</version>
      <user-name>&#193;lvaro Bautista</user-name>
      <creator-name>&#193;lvaro Bautista</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5300</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:00:31+00:00</created-at>
      <creator-id type="integer">36857</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5300</number>
      <permalink>activerecord-before_save-callback-not-working-with-update_attributes-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>ActiveRecord before_save callback not working with update_attributes method</title>
      <updated-at type="datetime">2011-02-02T18:53:43+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>&#193;lvaro Bautista</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5300</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:00:32+00:00</created-at>
      <creator-id type="integer">36857</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5300</number>
      <permalink>activerecord-before_save-callback-not-working-with-update_attributes-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>ActiveRecord before_save callback not working with update_attributes method</title>
      <updated-at type="datetime">2011-02-02T18:53:49+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>&#193;lvaro Bautista</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5300</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>24f6d440df2d03639730cf576df8e9504819c0af</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-04T21:47:40+01:00</created-at>
      <filename>before_save_with_update_attributes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">615540</id>
      <size type="integer">6538</size>
      <uploader-id type="integer">36857</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/615540/before_save_with_update_attributes.diff</url>
    </attachment>
  </attachments>
</ticket>
