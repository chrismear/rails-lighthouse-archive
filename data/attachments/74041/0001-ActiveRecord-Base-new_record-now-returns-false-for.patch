From 7a1d08ac4b5061af0b94d1e877fb85e3401201ae Mon Sep 17 00:00:00 2001
From: Yaroslav Markin <yaroslav@markin.net>
Date: Sat, 27 Dec 2008 16:26:13 +0300
Subject: [PATCH] ActiveRecord::Base#new_record? now returns false for existing records (was nil)

---
 activerecord/lib/active_record/base.rb |    4 ++--
 activerecord/test/cases/base_test.rb   |    5 +++++
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index 9746a46..80c109a 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -2406,9 +2406,9 @@ module ActiveRecord #:nodoc:
         write_attribute(self.class.primary_key, value)
       end
 
-      # Returns true if this object hasn't been saved yet -- that is, a record for the object doesn't exist yet.
+      # Returns true if this object hasn't been saved yet -- that is, a record for the object doesn't exist yet; otherwise, returns false.
       def new_record?
-        defined?(@new_record) && @new_record
+        (defined?(@new_record) && @new_record) || false
       end
 
       # :call-seq:
diff --git a/activerecord/test/cases/base_test.rb b/activerecord/test/cases/base_test.rb
index ce77ba4..0f03dae 100755
--- a/activerecord/test/cases/base_test.rb
+++ b/activerecord/test/cases/base_test.rb
@@ -1198,6 +1198,11 @@ class BasicsTest < ActiveRecord::TestCase
     assert b_true.value?
   end
 
+  def test_new_record_returns_boolean
+    assert_equal Topic.new.new_record?, true
+    assert_equal Topic.find(1).new_record?, false
+  end
+
   def test_clone
     topic = Topic.find(1)
     cloned_topic = nil
-- 
1.6.0.4

