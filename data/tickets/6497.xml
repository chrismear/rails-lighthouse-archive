<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-01T19:39:04+00:00</created-at>
  <creator-id type="integer">39818</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6497</number>
  <permalink>memcachestore-shouldnt-raise-without-memcache-client</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>MemCacheStore shouldn't raise without memcache-client</title>
  <updated-at type="datetime">2011-04-18T18:53:20+01:00</updated-at>
  <user-id type="integer">146104</user-id>
  <version type="integer">2</version>
  <user-name>jkarlsson</user-name>
  <creator-name>Jesse Storimer</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6497</url>
  <priority-name nil="true"></priority-name>
  <original-body>Trying to use mem_cache_store with libmemcached (https://rubygems.org/gems/memcached) is difficult because mem_cache_store raises a LoadError unless the memcache-client gem is available. This isn't necessary because the 'memcached' gem provides a compatible API for devs who want a faster interface to memcached, but we still have to have memcache-client installed so ActiveSupport doesn't die.

The mem_cache_store class even mentions that it's compatible with libmemcached (https://github.com/rails/rails/blob/master/activesupport/lib/active_support/cache/mem_cache_store.rb#L52-53)

Rails should also mention somewhere (the Guides?) to use dalli. The memcache-client gem is no longer maintained, the dalli gem is the successor and already has a AS cache store implementation included with the gem.

I attached a patch that removes the re-raising of the LoadError.</original-body>
  <latest-body>Trying to use mem_cache_store with libmemcached (https://rubygems.org/gems/memcached) is difficult because mem_cache_store raises a LoadError unless the memcache-client gem is available. This isn't necessary because the 'memcached' gem provides a compatible API for devs who want a faster interface to memcached, but we still have to have memcache-client installed so ActiveSupport doesn't die.

The mem_cache_store class even mentions that it's compatible with libmemcached (https://github.com/rails/rails/blob/master/activesupport/lib/active_support/cache/mem_cache_store.rb#L52-53)

Rails should also mention somewhere (the Guides?) to use dalli. The memcache-client gem is no longer maintained, the dalli gem is the successor and already has a AS cache store implementation included with the gem.

I attached a patch that removes the re-raising of the LoadError.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Trying to use mem_cache_store with libmemcached (&lt;a href=
&quot;https://rubygems.org/gems/memcached&quot;&gt;https://rubygems.org/gems/memcached&lt;/a&gt;)
is difficult because mem_cache_store raises a LoadError unless the
memcache-client gem is available. This isn't necessary because the
'memcached' gem provides a compatible API for devs who want a
faster interface to memcached, but we still have to have
memcache-client installed so ActiveSupport doesn't die.&lt;/p&gt;
&lt;p&gt;The mem_cache_store class even mentions that it's compatible
with libmemcached (&lt;a href=
&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/cache/mem_cache_store.rb#L52-53&quot;&gt;https://github.com/rails/rails/blob/master/activesupport/lib/active...&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Rails should also mention somewhere (the Guides?) to use dalli.
The memcache-client gem is no longer maintained, the dalli gem is
the successor and already has a AS cache store implementation
included with the gem.&lt;/p&gt;
&lt;p&gt;I attached a patch that removes the re-raising of the
LoadError.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Trying to use mem_cache_store with libmemcached (https://rubygems.org/gems/memcached) is difficult because mem_cache_store raises a LoadError unless the memcache-client gem is available. This isn't necessary because the 'memcached' gem provides a compatible API for devs who want a faster interface to memcached, but we still have to have memcache-client installed so ActiveSupport doesn't die.

The mem_cache_store class even mentions that it's compatible with libmemcached (https://github.com/rails/rails/blob/master/activesupport/lib/active_support/cache/mem_cache_store.rb#L52-53)

Rails should also mention somewhere (the Guides?) to use dalli. The memcache-client gem is no longer maintained, the dalli gem is the successor and already has a AS cache store implementation included with the gem.

I attached a patch that removes the re-raising of the LoadError.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Trying to use mem_cache_store with libmemcached (&lt;a href=
&quot;https://rubygems.org/gems/memcached&quot;&gt;https://rubygems.org/gems/memcached&lt;/a&gt;)
is difficult because mem_cache_store raises a LoadError unless the
memcache-client gem is available. This isn't necessary because the
'memcached' gem provides a compatible API for devs who want a
faster interface to memcached, but we still have to have
memcache-client installed so ActiveSupport doesn't die.&lt;/p&gt;
&lt;p&gt;The mem_cache_store class even mentions that it's compatible
with libmemcached (&lt;a href=
&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/cache/mem_cache_store.rb#L52-53&quot;&gt;https://github.com/rails/rails/blob/master/activesupport/lib/active...&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Rails should also mention somewhere (the Guides?) to use dalli.
The memcache-client gem is no longer maintained, the dalli gem is
the successor and already has a AS cache store implementation
included with the gem.&lt;/p&gt;
&lt;p&gt;I attached a patch that removes the re-raising of the
LoadError.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-01T19:39:04+00:00</created-at>
      <creator-id type="integer">39818</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6497</number>
      <permalink>memcachestore-shouldnt-raise-without-memcache-client</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>MemCacheStore shouldn't raise without memcache-client</title>
      <updated-at type="datetime">2011-03-01T19:39:09+00:00</updated-at>
      <user-id type="integer">39818</user-id>
      <version type="integer">1</version>
      <user-name>Jesse Storimer</user-name>
      <creator-name>Jesse Storimer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6497</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I second this patch. I'm also using the memcached gem and was surprised when I was prompted to install memcache-client. I'm currently avoiding the problem by simply having an empty lib/memcache.rb file.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I second this patch. I'm also using the memcached gem and was
surprised when I was prompted to install memcache-client. I'm
currently avoiding the problem by simply having an empty
lib/memcache.rb file.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-18T18:53:16+01:00</created-at>
      <creator-id type="integer">39818</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6497</number>
      <permalink>memcachestore-shouldnt-raise-without-memcache-client</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>MemCacheStore shouldn't raise without memcache-client</title>
      <updated-at type="datetime">2011-04-18T18:53:20+01:00</updated-at>
      <user-id type="integer">146104</user-id>
      <version type="integer">2</version>
      <user-name>jkarlsson</user-name>
      <creator-name>Jesse Storimer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6497</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a832c9e5b84445917d929142e8d570bffde0b9dd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-01T19:39:04+00:00</created-at>
      <filename>memcache.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">936688</id>
      <size type="integer">919</size>
      <uploader-id type="integer">39818</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/936688/memcache.patch</url>
    </attachment>
  </attachments>
</ticket>
