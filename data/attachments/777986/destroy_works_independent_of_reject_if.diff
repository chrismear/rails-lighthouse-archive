From 653f6b85169ded7612b341209258356720319beb Mon Sep 17 00:00:00 2001
From: Durran Jordan and Jon Larkowski <dev+durran+l4rk@hashrocket.com>
Date: Thu, 18 Nov 2010 12:09:23 -0500
Subject: [PATCH] Destroying records via nested attributes works independent of reject_if:

- When a :_destroy truthiness is provided in the attributes hash, the
  record should get destroyed regardless of the result of the proc or
  method supplied to :reject_if. (If :allow_destroy is true)
---
 .../lib/active_record/nested_attributes.rb         |    1 +
 activerecord/test/cases/nested_attributes_test.rb  |    8 ++++++++
 2 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/nested_attributes.rb b/activerecord/lib/active_record/nested_attributes.rb
index 0c33922..c6dd1a1 100644
--- a/activerecord/lib/active_record/nested_attributes.rb
+++ b/activerecord/lib/active_record/nested_attributes.rb
@@ -433,6 +433,7 @@ module ActiveRecord
     end
 
     def call_reject_if(association_name, attributes)
+      return false if has_destroy_flag?(attributes)
       case callback = nested_attributes_options[association_name][:reject_if]
       when Symbol
         method(callback).arity == 0 ? send(callback) : send(callback, attributes)
diff --git a/activerecord/test/cases/nested_attributes_test.rb b/activerecord/test/cases/nested_attributes_test.rb
index 92af53d..701bf2a 100644
--- a/activerecord/test/cases/nested_attributes_test.rb
+++ b/activerecord/test/cases/nested_attributes_test.rb
@@ -131,6 +131,14 @@ class TestNestedAttributesInGeneral < ActiveRecord::TestCase
     assert_equal 'photography', interest.reload.topic
   end
 
+  def test_destroy_works_independent_of_reject_if
+    Man.accepts_nested_attributes_for :interests, :reject_if => proc {|attributes| true }, :allow_destroy => true
+    man = Man.create(:name => "Jon")
+    interest = man.interests.create(:topic => 'the ladies')
+    man.update_attributes({:interests_attributes => { :_destroy => "1", :id => interest.id } })
+    assert man.reload.interests.empty?
+  end
+
   def test_has_many_association_updating_a_single_record
     Man.accepts_nested_attributes_for(:interests)
     man = Man.create(:name => 'John')
-- 
1.7.2.1

