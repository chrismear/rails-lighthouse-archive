From ee3077e0acecc2f3eb90070932b2a6b219415481 Mon Sep 17 00:00:00 2001
From: Neeraj Singh <neerajdotname@gmail.com>
Date: Sat, 15 May 2010 19:55:41 -0400
Subject: [PATCH] default_scope treats hashes and relations
 inconsistently when overwriting

[#4598 state:resolved]
---
 .../lib/active_record/relation/query_methods.rb    |   12 ++++++++++++
 1 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb
index 6782554..7f84420 100644
--- a/activerecord/lib/active_record/relation/query_methods.rb
+++ b/activerecord/lib/active_record/relation/query_methods.rb
@@ -143,18 +143,30 @@ module ActiveRecord
 
       arel = arel.join(custom_joins)
 
+      where_eq = {}
       @where_values.uniq.each do |where|
         next if where.blank?
 
         case where
         when Arel::SqlLiteral
           arel = arel.where(where)
+        when Arel::Predicates::Equality
+          column_name = where.operand1.name
+          where_eq.merge!(column_name => (where_eq.fetch(column_name, []) << where) )
         else
           sql = where.is_a?(String) ? where : where.to_sql
           arel = arel.where(Arel::SqlLiteral.new("(#{sql})"))
         end
       end
 
+      where_eq.each do |key, value|
+        arel = if value.size > 1
+                 arel.where(arel[value.first.operand1.name].in(value.collect(&:operand2)))
+               else
+                 arel.where(Arel::SqlLiteral.new("(#{value.to_sql})"))
+               end
+      end
+
       @having_values.uniq.each do |h|
         arel = h.is_a?(String) ? arel.having(h) : arel.having(*h)
       end
-- 
1.6.5.2

