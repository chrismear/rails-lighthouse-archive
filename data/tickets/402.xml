<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-21T01:46:50+01:00</created-at>
  <creator-id type="integer">19965</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">402</number>
  <permalink>request_forgery_protection_token-should-be-set-at-actioncontroller-base-load-time</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>actionpack bug patch request-forgery-protection</tag>
  <title>request_forgery_protection_token should be set at ActionController::Base load time</title>
  <updated-at type="datetime">2010-07-21T01:46:50+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">5</version>
  <user-name>Pratik</user-name>
  <creator-name>Jos&#233; Valim</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/402</url>
  <priority-name nil="true"></priority-name>
  <original-body>This is a small-tiny-patch but important one.

I have one controller, that logs-in users:

@@@ ruby
  class UsersController &lt; ActionController::Base
    protect_from_forgery :only =&gt; :login

    def login
      ...
    end
  end
@@@

And I have another one, that shows my homepage:

@@@ ruby
  class ContentController &lt; ActionController::Base
    def index
      ...
    end
  end
@@@

What happens is that my homepage has a form to login users quickly, but since request_forgery_protection_token is nil when my app loads, protect_against_forgery? returns false and the form doesn't have a authenticity_token field.

So, when the user fill the form, it will be sent to UsersController#login, that will call protect_from_forgery that will finally set request_forgery_protection_token.

But since no token was sent, it will raise a InvalidAutenticityToken error.

To fix this, we just have to set on ActionController::Base:

@@@ ruby
  @@request_forgery_protection_token = :authenticity_token
@@@

And while it's not released, I recommend to put the line above in your ApplicationController.</original-body>
  <latest-body>This is a small-tiny-patch but important one.

I have one controller, that logs-in users:

@@@ ruby
  class UsersController &lt; ActionController::Base
    protect_from_forgery :only =&gt; :login

    def login
      ...
    end
  end
@@@

And I have another one, that shows my homepage:

@@@ ruby
  class ContentController &lt; ActionController::Base
    def index
      ...
    end
  end
@@@

What happens is that my homepage has a form to login users quickly, but since request_forgery_protection_token is nil when my app loads, protect_against_forgery? returns false and the form doesn't have a authenticity_token field.

So, when the user fill the form, it will be sent to UsersController#login, that will call protect_from_forgery that will finally set request_forgery_protection_token.

But since no token was sent, it will raise a InvalidAutenticityToken error.

To fix this, we just have to set on ActionController::Base:

@@@ ruby
  @@request_forgery_protection_token = :authenticity_token
@@@

And while it's not released, I recommend to put the line above in your ApplicationController.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
This is a small-tiny-patch but important one.
&lt;/p&gt;&lt;p&gt;
I have one controller, that logs-in users:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  class UsersController &amp;lt; ActionController::Base
    protect_from_forgery :only =&amp;gt; :login

    def login
      ...
    end
  end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
And I have another one, that shows my homepage:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  class ContentController &amp;lt; ActionController::Base
    def index
      ...
    end
  end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
What happens is that my homepage has a form to login users quickly, but since request_forgery_protection_token is nil when my app loads, protect_against_forgery? returns false and the form doesn't have a authenticity_token field.
&lt;/p&gt;&lt;p&gt;
So, when the user fill the form, it will be sent to UsersController#login, that will call protect_from_forgery that will finally set request_forgery_protection_token.
&lt;/p&gt;&lt;p&gt;
But since no token was sent, it will raise a InvalidAutenticityToken error.
&lt;/p&gt;&lt;p&gt;
To fix this, we just have to set on ActionController::Base:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  @@request_forgery_protection_token = :authenticity_token&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
And while it's not released, I recommend to put the line above in your ApplicationController.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a small-tiny-patch but important one.

I have one controller, that logs-in users:

@@@ ruby
  class UsersController &lt; ActionController::Base
    protect_from_forgery :only =&gt; :login

    def login
      ...
    end
  end
@@@

And I have another one, that shows my homepage:

@@@ ruby
  class ContentController &lt; ActionController::Base
    def index
      ...
    end
  end
@@@

What happens is that my homepage has a form to login users quickly, but since request_forgery_protection_token is nil when my app loads, protect_against_forgery? returns false and the form doesn't have a authenticity_token field.

So, when the user fill the form, it will be sent to UsersController#login, that will call protect_from_forgery that will finally set request_forgery_protection_token.

But since no token was sent, it will raise a InvalidAutenticityToken error.

To fix this, we just have to set on ActionController::Base:

@@@ ruby
  @@request_forgery_protection_token = :authenticity_token
@@@

And while it's not released, I recommend to put the line above in your ApplicationController.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This is a small-tiny-patch but important one.
&lt;/p&gt;&lt;p&gt;
I have one controller, that logs-in users:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  class UsersController &amp;lt; ActionController::Base
    protect_from_forgery :only =&amp;gt; :login

    def login
      ...
    end
  end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
And I have another one, that shows my homepage:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  class ContentController &amp;lt; ActionController::Base
    def index
      ...
    end
  end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
What happens is that my homepage has a form to login users quickly, but since request_forgery_protection_token is nil when my app loads, protect_against_forgery? returns false and the form doesn't have a authenticity_token field.
&lt;/p&gt;&lt;p&gt;
So, when the user fill the form, it will be sent to UsersController#login, that will call protect_from_forgery that will finally set request_forgery_protection_token.
&lt;/p&gt;&lt;p&gt;
But since no token was sent, it will raise a InvalidAutenticityToken error.
&lt;/p&gt;&lt;p&gt;
To fix this, we just have to set on ActionController::Base:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  @@request_forgery_protection_token = :authenticity_token&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
And while it's not released, I recommend to put the line above in your ApplicationController.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-12T13:14:51+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">402</number>
      <permalink>request_forgery_protection_token-should-be-set-at-actioncontroller-base-load-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>request_forgery_protection_token should be set at ActionController::Base load time</title>
      <updated-at type="datetime">2008-06-12T13:14:51+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">1</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>protect_from_forgery needs to be on the initiating page and the receiving page.

The error you are getting seems to be correct/desired to me, because you are not sending the token from your homepage.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
protect_from_forgery needs to be on the initiating page and the receiving page.
&lt;/p&gt;&lt;p&gt;
The error you are getting seems to be correct/desired to me, because you are not sending the token from your homepage.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-13T00:46:15+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">402</number>
      <permalink>request_forgery_protection_token-should-be-set-at-actioncontroller-base-load-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>request_forgery_protection_token should be set at ActionController::Base load time</title>
      <updated-at type="datetime">2008-06-13T00:46:15+01:00</updated-at>
      <user-id type="integer">5589</user-id>
      <version type="integer">2</version>
      <user-name>Joe Noon</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Your point of view is also interesting, but this is not what happens either.

When the request is sent to the UsersController, the request_forgery_protection_token is set, so the next attempts to login from the homepage WILL WORK, even with not requiring proctect_from_forgery in my controller.

The problem is that this is a very specific behaviour. Every time you start your server, only the first attemp to login from the homepage will fail, because in all other attempts, the authenticy_token will be correctly create since request_forgery_protection_token was set.

The actual implementation is just between what you said and what I'm saying.

I would recommend you to try this &quot;bug&quot; yourself. Try to &quot;cross post&quot; between your controllers using protect_from_forgery only in the receiver. The error will happen only on the first attempt.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Your point of view is also interesting, but this is not what happens either.
&lt;/p&gt;&lt;p&gt;
When the request is sent to the UsersController, the request_forgery_protection_token is set, so the next attempts to login from the homepage WILL WORK, even with not requiring proctect_from_forgery in my controller.
&lt;/p&gt;&lt;p&gt;
The problem is that this is a very specific behaviour. Every time you start your server, only the first attemp to login from the homepage will fail, because in all other attempts, the authenticy_token will be correctly create since request_forgery_protection_token was set.
&lt;/p&gt;&lt;p&gt;
The actual implementation is just between what you said and what I'm saying.
&lt;/p&gt;&lt;p&gt;
I would recommend you to try this &quot;bug&quot; yourself. Try to &quot;cross post&quot; between your controllers using protect_from_forgery only in the receiver. The error will happen only on the first attempt.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-13T01:03:52+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">402</number>
      <permalink>request_forgery_protection_token-should-be-set-at-actioncontroller-base-load-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>request_forgery_protection_token should be set at ActionController::Base load time</title>
      <updated-at type="datetime">2008-06-13T01:03:52+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is a nice patch! So, I would like to know when it will be accepted.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This is a nice patch! So, I would like to know when it will be accepted.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-29T19:45:28+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">402</number>
      <permalink>request_forgery_protection_token-should-be-set-at-actioncontroller-base-load-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack bug patch request-forgery-protection</tag>
      <title>request_forgery_protection_token should be set at ActionController::Base load time</title>
      <updated-at type="datetime">2008-06-29T19:45:28+01:00</updated-at>
      <user-id type="integer">19985</user-id>
      <version type="integer">4</version>
      <user-name>Hugo Barauna</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This will cause protect_against_forgery? to always return true, which is not desired.

Simple fix for your problem would be :

* Preload UserController
* Include form_authenticity_token value manually in your form.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This will cause protect_against_forgery? to always return true, which is not desired.
&lt;/p&gt;&lt;p&gt;
Simple fix for your problem would be :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Preload UserController
&lt;/li&gt;&lt;li&gt;
Include form_authenticity_token value manually in your form.
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-04T02:09:19+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">402</number>
      <permalink>request_forgery_protection_token-should-be-set-at-actioncontroller-base-load-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack bug patch request-forgery-protection</tag>
      <title>request_forgery_protection_token should be set at ActionController::Base load time</title>
      <updated-at type="datetime">2008-07-04T02:09:19+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>euer watches, &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net&quot;&gt;louis vuitton handbags&lt;/a&gt;&lt;/b&gt; Rado similitude watches, Longines &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net/collection/coco.html&quot;&gt;Chanel Coco aaa&lt;/a&gt;&lt;/b&gt; watches, Patek Philippe watches &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net/collection/chanel.html&quot;&gt;Chanel Handbag&lt;/a&gt;&lt;/b&gt; besides therefore on. You &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net&quot;&gt;aaa replica louis vuitton&lt;/a&gt;&lt;/b&gt; won't apprehend sound is &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net/collection/monogram-mini-lin.html&quot;&gt;replica Louis Vuitton Monogram Mini Lin&lt;/a&gt;&lt;/b&gt; a double watches unless &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net&quot;&gt;lv outlet&lt;/a&gt;&lt;/b&gt; you charter talking exterior &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net/collection/chanel.html&quot;&gt;Chanel&lt;/a&gt;&lt;/b&gt; of your doll. Every &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net/collection/flap.html&quot;&gt;Chanel replica Flap&lt;/a&gt;&lt;/b&gt; rehearse of these watches &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net&quot;&gt;louis vuitton outlet&lt;/a&gt;&lt;/b&gt; is awfully imitated harbour &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net/collection/monogram-perforation.html&quot;&gt;aaa Louis Vuitton Monogram Perforation&lt;/a&gt;&lt;/b&gt; matchless technology. alluring workmanship</body>
      <body-html>&lt;div&gt;&lt;p&gt;euer watches, &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net&quot;&gt;louis vuitton handbags&lt;/a&gt;&lt;/b&gt;
Rado similitude watches, Longines &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net/collection/coco.html&quot;&gt;Chanel
Coco aaa&lt;/a&gt;&lt;/b&gt; watches, Patek Philippe watches &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net/collection/chanel.html&quot;&gt;Chanel
Handbag&lt;/a&gt;&lt;/b&gt; besides therefore on. You &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net&quot;&gt;aaa replica louis
vuitton&lt;/a&gt;&lt;/b&gt; won't apprehend sound is &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net/collection/monogram-mini-lin.html&quot;&gt;
replica Louis Vuitton Monogram Mini Lin&lt;/a&gt;&lt;/b&gt; a double watches
unless &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-outlet.net&quot;&gt;lv
outlet&lt;/a&gt;&lt;/b&gt; you charter talking exterior &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net/collection/chanel.html&quot;&gt;Chanel&lt;/a&gt;&lt;/b&gt;
of your doll. Every &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net/collection/flap.html&quot;&gt;Chanel
replica Flap&lt;/a&gt;&lt;/b&gt; rehearse of these watches &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net&quot;&gt;louis vuitton outlet&lt;/a&gt;&lt;/b&gt;
is awfully imitated harbour &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-outlet.net/collection/monogram-perforation.html&quot;&gt;
aaa Louis Vuitton Monogram Perforation&lt;/a&gt;&lt;/b&gt; matchless
technology. alluring workmanship&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T10:59:47+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">402</number>
      <permalink>request_forgery_protection_token-should-be-set-at-actioncontroller-base-load-time</permalink>
      <priority type="integer">18280</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack bug patch request-forgery-protection</tag>
      <title>request_forgery_protection_token should be set at ActionController::Base load time</title>
      <updated-at type="datetime">2010-07-21T01:46:50+01:00</updated-at>
      <user-id type="integer">107784</user-id>
      <version type="integer">6</version>
      <user-name>laiji</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/402</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>713bae0a929d793ee7906c889541fc410f56fcf3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-12T13:14:51+01:00</created-at>
      <filename>0001-request_forgery_protection_token-should-be-set-at-Ac.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">27105</id>
      <size type="integer">965</size>
      <uploader-id type="integer">19965</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/27105/0001-request_forgery_protection_token-should-be-set-at-Ac.patch</url>
    </attachment>
  </attachments>
</ticket>
