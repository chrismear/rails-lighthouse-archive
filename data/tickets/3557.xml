<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-10T02:03:44+00:00</created-at>
  <creator-id type="integer">42916</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3557</number>
  <permalink>countid-distinct-true-as-default</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord count distinct</tag>
  <title>count(:id, :distinct =&gt; true) as default</title>
  <updated-at type="datetime">2011-03-26T02:12:49+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">3</version>
  <user-name>bingbing</user-name>
  <creator-name>Greg Hazel</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3557</url>
  <priority-name>Low</priority-name>
  <original-body>When joining with other tables, it is often wrong to use .count() to get the number of records. For example:

User.scoped(:joins =&gt; :posts).count

Gives a count of all the posts, since it's counting rows returned by the DB. However, the query was built on User, so one would expect the count to be related to the number of Users. For example these are equivalent:

User.scoped(:joins =&gt; :posts).count
Post.scoped(:joins =&gt; :user).count

This query does the right thing:

User.scoped(:joins =&gt; :posts).count(:id, :distinct =&gt; true)

So, it seems like .count() should maybe default to using &quot;(:id, :distinct =&gt; true)&quot;, with the option to say :distinct =&gt; false, etc, instead of the other way around.</original-body>
  <latest-body>When joining with other tables, it is often wrong to use .count() to get the number of records. For example:

User.scoped(:joins =&gt; :posts).count

Gives a count of all the posts, since it's counting rows returned by the DB. However, the query was built on User, so one would expect the count to be related to the number of Users. For example these are equivalent:

User.scoped(:joins =&gt; :posts).count
Post.scoped(:joins =&gt; :user).count

This query does the right thing:

User.scoped(:joins =&gt; :posts).count(:id, :distinct =&gt; true)

So, it seems like .count() should maybe default to using &quot;(:id, :distinct =&gt; true)&quot;, with the option to say :distinct =&gt; false, etc, instead of the other way around.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When joining with other tables, it is often wrong to use
.count() to get the number of records. For example:&lt;/p&gt;
&lt;p&gt;User.scoped(:joins =&amp;gt; :posts).count&lt;/p&gt;
&lt;p&gt;Gives a count of all the posts, since it's counting rows
returned by the DB. However, the query was built on User, so one
would expect the count to be related to the number of Users. For
example these are equivalent:&lt;/p&gt;
&lt;p&gt;User.scoped(:joins =&amp;gt; :posts).count&lt;br&gt;
Post.scoped(:joins =&amp;gt; :user).count&lt;/p&gt;
&lt;p&gt;This query does the right thing:&lt;/p&gt;
&lt;p&gt;User.scoped(:joins =&amp;gt; :posts).count(:id, :distinct =&amp;gt;
true)&lt;/p&gt;
&lt;p&gt;So, it seems like .count() should maybe default to using &quot;(:id,
:distinct =&amp;gt; true)&quot;, with the option to say :distinct =&amp;gt;
false, etc, instead of the other way around.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When joining with other tables, it is often wrong to use .count() to get the number of records. For example when trying to count the number of users who have posts:

@@@ ruby
User.scoped(:joins =&gt; :posts).count
@@@

Gives a count of all the posts, since it's counting rows returned by the DB. However, the query was built on User, so one would expect the count to be related to the number of Users. For example these are equivalent:

@@@ ruby
User.scoped(:joins =&gt; :posts).count
Post.scoped(:joins =&gt; :user).count
@@@

This query does the right thing, which is counting the number of users who have posts:

@@@ ruby
User.scoped(:joins =&gt; :posts).count(:id, :distinct =&gt; true)
@@@

So, it seems like .count() should maybe default to using &quot;(:id, :distinct =&gt; true)&quot;, with the option to say :distinct =&gt; false, etc, instead of the other way around.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When joining with other tables, it is often wrong to use
.count() to get the number of records. For example when trying to
count the number of users who have posts:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;User.scoped(:joins =&amp;gt; :posts).count&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Gives a count of all the posts, since it's counting rows
returned by the DB. However, the query was built on User, so one
would expect the count to be related to the number of Users. For
example these are equivalent:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;User.scoped(:joins =&amp;gt; :posts).count
Post.scoped(:joins =&amp;gt; :user).count&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This query does the right thing, which is counting the number of
users who have posts:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;User.scoped(:joins =&amp;gt; :posts).count(:id, :distinct =&amp;gt; true)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So, it seems like .count() should maybe default to using &quot;(:id,
:distinct =&amp;gt; true)&quot;, with the option to say :distinct =&amp;gt;
false, etc, instead of the other way around.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-10T02:03:44+00:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3557</number>
      <permalink>countid-distinct-true-as-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord count distinct</tag>
      <title>count(:id, :distinct =&gt; true) as default</title>
      <updated-at type="datetime">2009-12-10T02:05:28+00:00</updated-at>
      <user-id type="integer">42916</user-id>
      <version type="integer">1</version>
      <user-name>Greg Hazel</user-name>
      <creator-name>Greg Hazel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3557</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-07T12:05:38+01:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3557</number>
      <permalink>countid-distinct-true-as-default</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord count distinct</tag>
      <title>count(:id, :distinct =&gt; true) as default</title>
      <updated-at type="datetime">2010-10-07T12:05:40+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Greg Hazel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3557</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:00:42+00:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3557</number>
      <permalink>countid-distinct-true-as-default</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord count distinct</tag>
      <title>count(:id, :distinct =&gt; true) as default</title>
      <updated-at type="datetime">2011-03-26T02:12:49+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">3</version>
      <user-name>bingbing</user-name>
      <creator-name>Greg Hazel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3557</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
