From 13ec4365bb7db37f3508e92c3d9c6b8c22c12bea Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Mon, 5 Apr 2010 17:11:59 -0300
Subject: [PATCH] create option to include_root_in_json for ActiveResource [#2584 state:committed]

---
 activeresource/lib/active_resource/base.rb |    9 +++++++++
 activeresource/test/cases/base_test.rb     |   25 +++++++++++++++++++------
 2 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/activeresource/lib/active_resource/base.rb b/activeresource/lib/active_resource/base.rb
index 5cfe4f7..1e81fc0 100644
--- a/activeresource/lib/active_resource/base.rb
+++ b/activeresource/lib/active_resource/base.rb
@@ -251,6 +251,9 @@ module ActiveResource
     # The logger for diagnosing and tracing Active Resource calls.
     cattr_accessor :logger
 
+    # Controls the top-level behavior of JSON serialization
+    cattr_accessor :include_root_in_json, :instance_writer => false
+
     class << self
       # Creates a schema for this resource - setting the attributes that are
       # known prior to fetching an instance from the remote system.
@@ -1240,6 +1243,12 @@ module ActiveResource
       case self.class.format
         when ActiveResource::Formats::XmlFormat
           self.class.format.encode(attributes, {:root => self.class.element_name}.merge(options))
+        when ActiveResource::Formats::JsonFormat 
+          if ActiveResource::Base.include_root_in_json
+            self.class.format.encode({self.class.element_name => attributes}, options)
+          else
+            self.class.format.encode(attributes, options)
+          end
         else
           self.class.format.encode(attributes, options)
       end
diff --git a/activeresource/test/cases/base_test.rb b/activeresource/test/cases/base_test.rb
index 0f10a0e..31e0dc0 100644
--- a/activeresource/test/cases/base_test.rb
+++ b/activeresource/test/cases/base_test.rb
@@ -4,20 +4,22 @@ require "fixtures/customer"
 require "fixtures/street_address"
 require "fixtures/beast"
 require "fixtures/proxy"
+require 'active_support/json'
 require 'active_support/core_ext/hash/conversions'
 require 'mocha'
 
 class BaseTest < Test::Unit::TestCase
   def setup
-    @matz  = { :id => 1, :name => 'Matz' }.to_xml(:root => 'person')
-    @david = { :id => 2, :name => 'David' }.to_xml(:root => 'person')
-    @greg  = { :id => 3, :name => 'Greg' }.to_xml(:root => 'person')
-    @addy  = { :id => 1, :street => '12345 Street', :country => 'Australia' }.to_xml(:root => 'address')
     @default_request_headers = { 'Content-Type' => 'application/xml' }
-    @rick = { :name => "Rick", :age => 25 }.to_xml(:root => "person")
+    @matz   = { :id => 1, :name => 'Matz' }.to_xml(:root => 'person')
+    @david  = { :id => 2, :name => 'David' }.to_xml(:root => 'person')
+    @greg   = { :id => 3, :name => 'Greg' }.to_xml(:root => 'person')
+    @addy   = { :id => 1, :street => '12345 Street', :country => 'Australia' }.to_xml(:root => 'address')
+    @rick   = { :name => "Rick", :age => 25 }.to_xml(:root => "person")
+    @joe    = { 'person' => { :id => 6, :name => 'Joe' }}.to_json
     @people = [{ :id => 1, :name => 'Matz' }, { :id => 2, :name => 'David' }].to_xml(:root => 'people')
     @people_david = [{ :id => 2, :name => 'David' }].to_xml(:root => 'people')
-    @addresses = [{ :id => 1, :street => '12345 Street', :country => 'Australia' }].to_xml(:root => 'addresses')
+    @addresses    = [{ :id => 1, :street => '12345 Street', :country => 'Australia' }].to_xml(:root => 'addresses')
 
     # - deep nested resource -
     # - Luis (Customer)
@@ -66,6 +68,7 @@ class BaseTest < Test::Unit::TestCase
     ActiveResource::HttpMock.respond_to do |mock|
       mock.get    "/people/1.xml",                {}, @matz
       mock.get    "/people/2.xml",                {}, @david
+      mock.get    "/people/6.json",               {}, @joe
       mock.get    "/people/5.xml",                {}, @marty
       mock.get    "/people/Greg.xml",             {}, @greg
       mock.get    "/people/4.xml",                {'key' => 'value'}, nil, 404
@@ -1012,6 +1015,16 @@ class BaseTest < Test::Unit::TestCase
     assert xml.include?('<id type="integer">1</id>')
   end
 
+  
+  def test_to_json_including_root
+    Person.include_root_in_json = true
+    Person.format = :json
+    joe = Person.find(6)
+    json = joe.encode
+    Person.format = :xml
+    assert_equal json, '{"person":{"person":{"name":"Joe","id":6}}}'
+  end
+
   def test_to_param_quacks_like_active_record
     new_person = Person.new
     assert_nil new_person.to_param
-- 
1.7.0

