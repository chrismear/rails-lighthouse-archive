<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-29T02:29:21+01:00</created-at>
  <creator-id type="integer">22224</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6094</number>
  <permalink>has_many-through-across-namespace-fails</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>activerecord documentation has_many_through module namespace</tag>
  <title>has_many :through across namespace fails</title>
  <updated-at type="datetime">2011-03-29T02:29:21+01:00</updated-at>
  <user-id type="integer">22242</user-id>
  <version type="integer">4</version>
  <user-name>Dan Pickett</user-name>
  <creator-name>JackC</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6094</url>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ ruby
class Person &lt; ActiveRecord::Base
  has_many :manager_roles, :class_name =&gt; &quot;Organization::Department&quot;
  has_many :departments, :through =&gt; :manager_roles
end

module Organization
  class Department &lt; ActiveRecord::Base
    has_many :manager_roles
  end
  
  class ManagerRole &lt; ActiveRecord::Base
    belongs_to :department
    belongs_to :person
  end
end
@@@

has_many :departments, :through =&gt; :manager_roles will crash:

@@@
NameError: uninitialized constant Person::Department
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/base.rb:1199:in `compute_type'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `send'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `klass'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:56:in `construct_joins'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:11:in `construct_scope'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_collection.rb:409:in `load_target'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:145:in `inspect'
@@@

We can work around it by changing ManagerRole to specifically declare the class name:
@@@ ruby
  class ManagerRole &lt; ActiveRecord::Base
    belongs_to :department, :class_name =&gt; &quot;Organization::Department&quot;
    belongs_to :person
  end
@@@

It appears that compute_type would need to also search the module of the join model.</original-body>
  <latest-body>@@@ ruby
class Person &lt; ActiveRecord::Base
  has_many :manager_roles, :class_name =&gt; &quot;Organization::Department&quot;
  has_many :departments, :through =&gt; :manager_roles
end

module Organization
  class Department &lt; ActiveRecord::Base
    has_many :manager_roles
  end
  
  class ManagerRole &lt; ActiveRecord::Base
    belongs_to :department
    belongs_to :person
  end
end
@@@

has_many :departments, :through =&gt; :manager_roles will crash:

@@@
NameError: uninitialized constant Person::Department
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/base.rb:1199:in `compute_type'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `send'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `klass'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:56:in `construct_joins'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:11:in `construct_scope'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_collection.rb:409:in `load_target'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:145:in `inspect'
@@@

We can work around it by changing ManagerRole to specifically declare the class name:
@@@ ruby
  class ManagerRole &lt; ActiveRecord::Base
    belongs_to :department, :class_name =&gt; &quot;Organization::Department&quot;
    belongs_to :person
  end
@@@

It appears that compute_type would need to also search the module of the join model.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base
  has_many :manager_roles, :class_name =&amp;gt; &quot;Organization::Department&quot;
  has_many :departments, :through =&amp;gt; :manager_roles
end

module Organization
  class Department &amp;lt; ActiveRecord::Base
    has_many :manager_roles
  end
  
  class ManagerRole &amp;lt; ActiveRecord::Base
    belongs_to :department
    belongs_to :person
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;has_many :departments, :through =&amp;gt; :manager_roles will
crash:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NameError: uninitialized constant Person::Department
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/base.rb:1199:in `compute_type'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `send'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `klass'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:56:in `construct_joins'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:11:in `construct_scope'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_collection.rb:409:in `load_target'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:145:in `inspect'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can work around it by changing ManagerRole to specifically
declare the class name:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class ManagerRole &amp;lt; ActiveRecord::Base&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&lt;code&gt;belongs_to :department, :class_name =&amp;amp;gt; &amp;amp;quot;Organization::Department&amp;amp;quot;
belongs_to :person&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
&lt;/pre&gt;
&lt;p&gt;It appears that compute_type would need to also search the
module of the join model.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
class Person &lt; ActiveRecord::Base
  has_many :manager_roles, :class_name =&gt; &quot;Organization::Department&quot;
  has_many :departments, :through =&gt; :manager_roles
end

module Organization
  class Department &lt; ActiveRecord::Base
    has_many :manager_roles
  end
  
  class ManagerRole &lt; ActiveRecord::Base
    belongs_to :department
    belongs_to :person
  end
end
@@@

has_many :departments, :through =&gt; :manager_roles will crash:

@@@
NameError: uninitialized constant Person::Department
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/base.rb:1199:in `compute_type'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `send'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `klass'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:56:in `construct_joins'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:11:in `construct_scope'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_collection.rb:409:in `load_target'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:145:in `inspect'
@@@

We can work around it by changing ManagerRole to specifically declare the class name:
@@@ ruby
  class ManagerRole &lt; ActiveRecord::Base
    belongs_to :department, :class_name =&gt; &quot;Organization::Department&quot;
    belongs_to :person
  end
@@@

It appears that compute_type would need to also search the module of the join model.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base
  has_many :manager_roles, :class_name =&amp;gt; &quot;Organization::Department&quot;
  has_many :departments, :through =&amp;gt; :manager_roles
end

module Organization
  class Department &amp;lt; ActiveRecord::Base
    has_many :manager_roles
  end
  
  class ManagerRole &amp;lt; ActiveRecord::Base
    belongs_to :department
    belongs_to :person
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;has_many :departments, :through =&amp;gt; :manager_roles will
crash:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NameError: uninitialized constant Person::Department
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/base.rb:1199:in `compute_type'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `send'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/reflection.rb:162:in `klass'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:56:in `construct_joins'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/through_association_scope.rb:11:in `construct_scope'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_collection.rb:409:in `load_target'
    from /usr/local/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:145:in `inspect'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can work around it by changing ManagerRole to specifically
declare the class name:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class ManagerRole &amp;lt; ActiveRecord::Base&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&lt;code&gt;belongs_to :department, :class_name =&amp;amp;gt; &amp;amp;quot;Organization::Department&amp;amp;quot;
belongs_to :person&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
&lt;/pre&gt;
&lt;p&gt;It appears that compute_type would need to also search the
module of the join model.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-30T22:03:45+00:00</created-at>
      <creator-id type="integer">22224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6094</number>
      <permalink>has_many-through-across-namespace-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord has_many_through module namespace</tag>
      <title>has_many :through across namespace fails</title>
      <updated-at type="datetime">2010-11-30T22:04:29+00:00</updated-at>
      <user-id type="integer">22224</user-id>
      <version type="integer">1</version>
      <user-name>JackC</user-name>
      <creator-name>JackC</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6094</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>On further investigation, setting :class_name on the has_many :through relationship actually works.

The problem is actually in the documentation. The docs say that :class_name is ignored with has_many :through, but it actually works.</body>
      <body-html>&lt;div&gt;&lt;p&gt;On further investigation, setting :class_name on the has_many
:through relationship actually works.&lt;/p&gt;
&lt;p&gt;The problem is actually in the documentation. The docs say that
:class_name is ignored with has_many :through, but it actually
works.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-30T22:17:41+00:00</created-at>
      <creator-id type="integer">22224</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord has_many_through module namespace
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6094</number>
      <permalink>has_many-through-across-namespace-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord documentation has_many_through module namespace</tag>
      <title>has_many :through across namespace fails</title>
      <updated-at type="datetime">2010-11-30T22:17:45+00:00</updated-at>
      <user-id type="integer">22224</user-id>
      <version type="integer">2</version>
      <user-name>JackC</user-name>
      <creator-name>JackC</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6094</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is no &lt;a href=&quot;http://www.wholesalenflstore.com/new-england-patriots-jerseys-c-67.html&quot;&gt;ne patriots jerseys&lt;/a&gt; doubt &lt;a href=&quot;http://www.wholesalenflstore.com/denver-broncos-jerseys-c-73.html&quot;&gt;denver broncos jerseys&lt;/a&gt; to say that Nike &lt;a href=&quot;http://www.wholesalenflstore.com/cleveland-browns-jerseys-c-79.html&quot;&gt;cleveland browns jerseys&lt;/a&gt; is a successful company that has a high &lt;a href=&quot;http://www.wholesalenflstore.com/minnesota-vikings-jerseys-c-96.html&quot;&gt;minnesota vikings jerseys&lt;/a&gt; reputation in the market. Especially its ads strategy is excellent. Today we talk something about the creative ads about Nike Air Max shoes. As we known, the essence of creative advertisement is to &lt;a href=&quot;http://www.wholesalenflstore.com/cincinnati-bengals-jerseys-c-78.html&quot;&gt;cincinnati bengals jerseys&lt;/a&gt; make the impossible becomes possible in life through product claims. &lt;a href=&quot;http://www.wholesalenflstore.com/green-bay-packers-jerseys-c-95.html&quot;&gt;green bay packers jerseys&lt;/a&gt; Of course, &lt;a href=&quot;http://www.wholesalenflstore.com/kansas-city-chiefs-jerseys-c-74.html&quot;&gt;kansas city chiefs jerseys&lt;/a&gt; the main point is to find some certain products and in related things but is internal elements but not the surface. &lt;a href=&quot;http://www.wholesalenflstore.com/atlanta-falcons-jerseys-c-85.html&quot;&gt;atlanta falcons jerseys&lt;/a&gt; Nike &lt;a href=&quot;http://www.wholesalenflstore.com/san-francisco-49ers-jerseys-c-90.html&quot;&gt;san francisco 49ers jerseys&lt;/a&gt; Air Max tells us its classics again. Let the famous broad- jump athlete &lt;a href=&quot;http://www.wholesalenflstore.com/2009-nfl-pro-bowl-jerseys-c-105.html&quot;&gt;pro bowl jerseys 2009&lt;/a&gt; across the &lt;a href=&quot;http://www.wholesalenflstore.com/detroit-lions-jerseys-c-94.html&quot;&gt;detroit lions jerseys&lt;/a&gt; seemingly impossible distance, the analogy &lt;a href=&quot;http://www.wholesalenflstore.com/nfl-caps-c-104.html&quot;&gt;nfl caps&lt;/a&gt; is exaggerated but &lt;a href=&quot;http://www.wholesalenflstore.com/dallas-cowboys-jerseys-c-81.html&quot;&gt;dallas cowboys jerseys&lt;/a&gt; implies that players can have this exceeded powers lies in their magical pair of Air Max 87 shoes. The most wising point is that there is only Nike logo in the &lt;a href=&quot;http://www.wholesalenflstore.com/new-york-giants-jerseys-c-82.html&quot;&gt;ny giants jersey&lt;/a&gt; screen but not introduce the feature of the products. The brand make you image fully. We all know that conquest the impossible thing all from the imagination and the fact can not tell us directly. In all, only imagination has no limit. However, Nike shows people a good impression which is just the unlimited imagination place. The successful company always gives us the idea unexpected</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is no &lt;a href=
&quot;http://www.wholesalenflstore.com/new-england-patriots-jerseys-c-67.html&quot;&gt;
ne patriots jerseys&lt;/a&gt; doubt &lt;a href=
&quot;http://www.wholesalenflstore.com/denver-broncos-jerseys-c-73.html&quot;&gt;
denver broncos jerseys&lt;/a&gt; to say that Nike &lt;a href=
&quot;http://www.wholesalenflstore.com/cleveland-browns-jerseys-c-79.html&quot;&gt;
cleveland browns jerseys&lt;/a&gt; is a successful company that has a
high &lt;a href=
&quot;http://www.wholesalenflstore.com/minnesota-vikings-jerseys-c-96.html&quot;&gt;
minnesota vikings jerseys&lt;/a&gt; reputation in the market. Especially
its ads strategy is excellent. Today we talk something about the
creative ads about Nike Air Max shoes. As we known, the essence of
creative advertisement is to &lt;a href=
&quot;http://www.wholesalenflstore.com/cincinnati-bengals-jerseys-c-78.html&quot;&gt;
cincinnati bengals jerseys&lt;/a&gt; make the impossible becomes possible
in life through product claims. &lt;a href=
&quot;http://www.wholesalenflstore.com/green-bay-packers-jerseys-c-95.html&quot;&gt;
green bay packers jerseys&lt;/a&gt; Of course, &lt;a href=
&quot;http://www.wholesalenflstore.com/kansas-city-chiefs-jerseys-c-74.html&quot;&gt;
kansas city chiefs jerseys&lt;/a&gt; the main point is to find some
certain products and in related things but is internal elements but
not the surface. &lt;a href=
&quot;http://www.wholesalenflstore.com/atlanta-falcons-jerseys-c-85.html&quot;&gt;
atlanta falcons jerseys&lt;/a&gt; Nike &lt;a href=
&quot;http://www.wholesalenflstore.com/san-francisco-49ers-jerseys-c-90.html&quot;&gt;
san francisco 49ers jerseys&lt;/a&gt; Air Max tells us its classics
again. Let the famous broad- jump athlete &lt;a href=
&quot;http://www.wholesalenflstore.com/2009-nfl-pro-bowl-jerseys-c-105.html&quot;&gt;
pro bowl jerseys 2009&lt;/a&gt; across the &lt;a href=
&quot;http://www.wholesalenflstore.com/detroit-lions-jerseys-c-94.html&quot;&gt;detroit
lions jerseys&lt;/a&gt; seemingly impossible distance, the analogy
&lt;a href=&quot;http://www.wholesalenflstore.com/nfl-caps-c-104.html&quot;&gt;nfl
caps&lt;/a&gt; is exaggerated but &lt;a href=
&quot;http://www.wholesalenflstore.com/dallas-cowboys-jerseys-c-81.html&quot;&gt;
dallas cowboys jerseys&lt;/a&gt; implies that players can have this
exceeded powers lies in their magical pair of Air Max 87 shoes. The
most wising point is that there is only Nike logo in the &lt;a href=
&quot;http://www.wholesalenflstore.com/new-york-giants-jerseys-c-82.html&quot;&gt;
ny giants jersey&lt;/a&gt; screen but not introduce the feature of the
products. The brand make you image fully. We all know that conquest
the impossible thing all from the imagination and the fact can not
tell us directly. In all, only imagination has no limit. However,
Nike shows people a good impression which is just the unlimited
imagination place. The successful company always gives us the idea
unexpected&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-08T02:21:16+00:00</created-at>
      <creator-id type="integer">22224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6094</number>
      <permalink>has_many-through-across-namespace-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord documentation has_many_through module namespace</tag>
      <title>has_many :through across namespace fails</title>
      <updated-at type="datetime">2011-01-08T23:56:42+00:00</updated-at>
      <user-id type="integer">131700</user-id>
      <version type="integer">3</version>
      <user-name>xxchenjialong</user-name>
      <creator-name>JackC</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6094</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>JackC, perhaps you could supply a test and a documentation patch that verifies and clarifies this behavior?</body>
      <body-html>&lt;div&gt;&lt;p&gt;JackC, perhaps you could supply a test and a documentation patch
that verifies and clarifies this behavior?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-12T16:24:38+00:00</created-at>
      <creator-id type="integer">22224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6094</number>
      <permalink>has_many-through-across-namespace-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord documentation has_many_through module namespace</tag>
      <title>has_many :through across namespace fails</title>
      <updated-at type="datetime">2011-03-12T16:24:41+00:00</updated-at>
      <user-id type="integer">22242</user-id>
      <version type="integer">4</version>
      <user-name>Dan Pickett</user-name>
      <creator-name>JackC</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6094</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=&quot;http://www.hdvideoconverter-mac.com&quot;&gt;Video Converter for Mac&lt;/a&gt;
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-converter-for-mac.html&quot;&gt;DVD Converter for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/blu-ray-ripper-for-mac.html&quot;&gt;Blu-Ray Ripper for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-maker-suite-for-mac.html&quot;&gt;DVD Maker Suite for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-creator-for-mac.html&quot;&gt;DVD Creator for Mac&lt;/a&gt; 	
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-ripper-for-mac.html&quot;&gt;DVD Ripper for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-copy-for-mac.html&quot;&gt;DVD Copy for Mac&lt;/a&gt; 
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/blu-ray-video-converter.html&quot;&gt;Blu-Ray Video Converter&lt;/a&gt;     
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-converter.html&quot;&gt;DVD Converter&lt;/a&gt;  
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-burner.html&quot;&gt;DVD Burner&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.hdvideoconverter-mac.com&quot;&gt;Video Converter
for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-converter-for-mac.html&quot;&gt;DVD
Converter for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/blu-ray-ripper-for-mac.html&quot;&gt;Blu-Ray
Ripper for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-maker-suite-for-mac.html&quot;&gt;DVD
Maker Suite for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-creator-for-mac.html&quot;&gt;DVD
Creator for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-ripper-for-mac.html&quot;&gt;DVD
Ripper for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-copy-for-mac.html&quot;&gt;DVD
Copy for Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/blu-ray-video-converter.html&quot;&gt;Blu-Ray
Video Converter&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.hdvideoconverter-mac.com/dvd-converter.html&quot;&gt;DVD
Converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.hdvideoconverter-mac.com/dvd-burner.html&quot;&gt;DVD
Burner&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-29T02:17:13+01:00</created-at>
      <creator-id type="integer">22224</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6094</number>
      <permalink>has_many-through-across-namespace-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord documentation has_many_through module namespace</tag>
      <title>has_many :through across namespace fails</title>
      <updated-at type="datetime">2011-03-29T02:29:21+01:00</updated-at>
      <user-id type="integer">143271</user-id>
      <version type="integer">5</version>
      <user-name>happy2011</user-name>
      <creator-name>JackC</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6094</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
