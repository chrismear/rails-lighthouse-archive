<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-14T08:54:34+01:00</created-at>
  <creator-id type="integer">55887</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3197</number>
  <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
  <priority type="integer">142284</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>command patch plugin</tag>
  <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
  <updated-at type="datetime">2011-02-02T18:41:06+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">10</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Vikrant Chaudhary</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,
Just enhanced some shortcomings of command _script/plugin install --_.
Most of the examples are of my own plug-in on which I have been testing the written code.

**#1** - Name of the plugin is usually the last fragment of the URL (or second last if last is _trunk_) and there is no option to change that.
Ex: - 

    script/plugin install http://kopal.googlecode.com/hg/

will install the plugin in `vendor/plugins/hg/` directory.

Hacking like - `http://kopal.googlecode.com/hg/?hack=/kopal/`, won't work either. Because, script will then try to fetch `http://kopal.googlecode.com/hg/?hack=/kopal/lib/`, hence making an infinite loop.

Added a &quot;--name&quot; option for the command, so

    script/plugin install http://kopal.googlecode.com/hg/ --name kopal

will install the plugin in `vendor/plugins/kopal` directory.




**#2** - For a plugin URL with no post-fixed forward slash &quot;/&quot;, if the server doesn't redirect to a URL with trailing &quot;/&quot; (ex: Google Code with Mercurial repository), a &quot;Plugin not found&quot; message is shown.

For example,

    script/plugin install  http://kopal.googlecode.com/hg ;#without post-fixed forward slash &quot;/&quot;

will result in the first link `hg/lib/`, which when passes through `File.join()` with `base_url`, resulting `http://kopal.googlecode.com/hg/hg/lib/`, which raises a 404 error.
This is a Mercurial web-end specific error as usually all Subversion web-ends will redirect to a URL with trailing '/'.
For example - visiting `http://websvn.kde.org/trunk` will redirect to `http://websvn.kde.org/trunk/` or `http://freenet.googlecode.com/svn` will redirect to `http://freenet.googlecode.com/svn/`.

Fixed. So now all URLs passed to `RecursiveHTTPFetcher` are post-fixed with '/' unless one exists. This doesn't create a new limit to `RecursiveHTTPFetcher#new` to only accept directory paths and not file paths, since it was already limited, as (before) `RecursiveHTTPFetcher#fetch` treated all initial URLs as directory.




**#3** - If the Plugin URL contains GET parameters, A &quot;Plugin not found error&quot; is thrown or the script goes in infinite loop.
Ex:

    script/plugin install http://kopal.googlecode.com/hg/?r=tip

will result in `RecursiveHTTPFetcher#fetch_dir()` asking for `http://kopal.googlecode.com/hg/?r=tip/lib/?r=tip` resulting in a 404 error.  

For subversion repository, this instead results in a infinite loop. since most subversion web-ends will parse `?r=42/lib/` as revision#42 and will not send a 404. (Ex: http://freenet.googlecode.com/svn/?r=42/anything will fetch revision#42).


**Note** - Following are some bugs/features I discovered. Didn't code, since I didn't find them much significant but worth mentioning here.


**#5** - `RecursiveHTTPFetcher` only fetches sub-paths relative to current path, raises error for relative to domain paths and doesn't fetches absolute paths at all (talking only about files in the desired hierarchy).

Ex:
If `http://example.org/svn/myplugin/` contains three links `http://example.org/svn/myplugin/absolute/`, `/svn/myplugin/rel-domain/` and `rel-current/`,

    script/plugin install http://example.org/svn/myplugin/

will fetch `rel-current/`, raise a 404 error while fetching `rel-domain/`(interprets it as `http://example.org/svn/myplugin/svn/myplugin/rel-domain/`) and won't fetch `absolute/` at all.

However, this is *not of much significance*, since almost all revision-control-system web-ends publish links in relative-to-current-path format.

**#6** - While downloading a plugin from web, some directory path, which may not be in interest of end-user should be ignored by default. Ex:  `/test/*`, `/.gitignore`, `/.hgtags`, `/.hgignore` etc. (Usually most of them are in the root directory of a plugin).

**NOTE**: While I tested my modifications intensively, I didn't write test for them, since can't find any existing test which I can edit.

Willing to implement/fix last two features/bugs if the community finds them significant and gives a go.

PS: This is my first ever contribution to an open-source software.</original-body>
  <latest-body>Hi,
Just enhanced some shortcomings of command _script/plugin install --_.
Most of the examples are of my own plug-in on which I have been testing the written code.

**#1** - Name of the plugin is usually the last fragment of the URL (or second last if last is _trunk_) and there is no option to change that.
Ex: - 

    script/plugin install http://kopal.googlecode.com/hg/

will install the plugin in `vendor/plugins/hg/` directory.

Hacking like - `http://kopal.googlecode.com/hg/?hack=/kopal/`, won't work either. Because, script will then try to fetch `http://kopal.googlecode.com/hg/?hack=/kopal/lib/`, hence making an infinite loop.

Added a &quot;--name&quot; option for the command, so

    script/plugin install http://kopal.googlecode.com/hg/ --name kopal

will install the plugin in `vendor/plugins/kopal` directory.




**#2** - For a plugin URL with no post-fixed forward slash &quot;/&quot;, if the server doesn't redirect to a URL with trailing &quot;/&quot; (ex: Google Code with Mercurial repository), a &quot;Plugin not found&quot; message is shown.

For example,

    script/plugin install  http://kopal.googlecode.com/hg ;#without post-fixed forward slash &quot;/&quot;

will result in the first link `hg/lib/`, which when passes through `File.join()` with `base_url`, resulting `http://kopal.googlecode.com/hg/hg/lib/`, which raises a 404 error.
This is a Mercurial web-end specific error as usually all Subversion web-ends will redirect to a URL with trailing '/'.
For example - visiting `http://websvn.kde.org/trunk` will redirect to `http://websvn.kde.org/trunk/` or `http://freenet.googlecode.com/svn` will redirect to `http://freenet.googlecode.com/svn/`.

Fixed. So now all URLs passed to `RecursiveHTTPFetcher` are post-fixed with '/' unless one exists. This doesn't create a new limit to `RecursiveHTTPFetcher#new` to only accept directory paths and not file paths, since it was already limited, as (before) `RecursiveHTTPFetcher#fetch` treated all initial URLs as directory.




**#3** - If the Plugin URL contains GET parameters, A &quot;Plugin not found error&quot; is thrown or the script goes in infinite loop.
Ex:

    script/plugin install http://kopal.googlecode.com/hg/?r=tip

will result in `RecursiveHTTPFetcher#fetch_dir()` asking for `http://kopal.googlecode.com/hg/?r=tip/lib/?r=tip` resulting in a 404 error.  

For subversion repository, this instead results in a infinite loop. since most subversion web-ends will parse `?r=42/lib/` as revision#42 and will not send a 404. (Ex: http://freenet.googlecode.com/svn/?r=42/anything will fetch revision#42).


**Note** - Following are some bugs/features I discovered. Didn't code, since I didn't find them much significant but worth mentioning here.


**#5** - `RecursiveHTTPFetcher` only fetches sub-paths relative to current path, raises error for relative to domain paths and doesn't fetches absolute paths at all (talking only about files in the desired hierarchy).

Ex:
If `http://example.org/svn/myplugin/` contains three links `http://example.org/svn/myplugin/absolute/`, `/svn/myplugin/rel-domain/` and `rel-current/`,

    script/plugin install http://example.org/svn/myplugin/

will fetch `rel-current/`, raise a 404 error while fetching `rel-domain/`(interprets it as `http://example.org/svn/myplugin/svn/myplugin/rel-domain/`) and won't fetch `absolute/` at all.

However, this is *not of much significance*, since almost all revision-control-system web-ends publish links in relative-to-current-path format.

**#6** - While downloading a plugin from web, some directory path, which may not be in interest of end-user should be ignored by default. Ex:  `/test/*`, `/.gitignore`, `/.hgtags`, `/.hgignore` etc. (Usually most of them are in the root directory of a plugin).

**NOTE**: While I tested my modifications intensively, I didn't write test for them, since can't find any existing test which I can edit.

Willing to implement/fix last two features/bugs if the community finds them significant and gives a go.

PS: This is my first ever contribution to an open-source software.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
Just enhanced some shortcomings of command &lt;em&gt;script/plugin
install --&lt;/em&gt;.&lt;br&gt;
Most of the examples are of my own plug-in on which I have been
testing the written code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#1&lt;/strong&gt; - Name of the plugin is usually the last
fragment of the URL (or second last if last is &lt;em&gt;trunk&lt;/em&gt;) and
there is no option to change that. Ex: -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://kopal.googlecode.com/hg/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will install the plugin in &lt;code&gt;vendor/plugins/hg/&lt;/code&gt;
directory.&lt;/p&gt;
&lt;p&gt;Hacking like -
&lt;code&gt;http://kopal.googlecode.com/hg/?hack=/kopal/&lt;/code&gt;, won't
work either. Because, script will then try to fetch
&lt;code&gt;http://kopal.googlecode.com/hg/?hack=/kopal/lib/&lt;/code&gt;,
hence making an infinite loop.&lt;/p&gt;
&lt;p&gt;Added a &quot;--name&quot; option for the command, so&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://kopal.googlecode.com/hg/ --name kopal&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will install the plugin in &lt;code&gt;vendor/plugins/kopal&lt;/code&gt;
directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#2&lt;/strong&gt; - For a plugin URL with no post-fixed
forward slash &quot;/&quot;, if the server doesn't redirect to a URL with
trailing &quot;/&quot; (ex: Google Code with Mercurial repository), a &quot;Plugin
not found&quot; message is shown.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install  http://kopal.googlecode.com/hg ;#without post-fixed forward slash &quot;/&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will result in the first link &lt;code&gt;hg/lib/&lt;/code&gt;, which when
passes through &lt;code&gt;File.join()&lt;/code&gt; with &lt;code&gt;base_url&lt;/code&gt;,
resulting &lt;code&gt;http://kopal.googlecode.com/hg/hg/lib/&lt;/code&gt;,
which raises a 404 error.&lt;br&gt;
This is a Mercurial web-end specific error as usually all
Subversion web-ends will redirect to a URL with trailing '/'.&lt;br&gt;
For example - visiting &lt;code&gt;http://websvn.kde.org/trunk&lt;/code&gt;
will redirect to &lt;code&gt;http://websvn.kde.org/trunk/&lt;/code&gt; or
&lt;code&gt;http://freenet.googlecode.com/svn&lt;/code&gt; will redirect to
&lt;code&gt;http://freenet.googlecode.com/svn/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Fixed. So now all URLs passed to
&lt;code&gt;RecursiveHTTPFetcher&lt;/code&gt; are post-fixed with '/' unless
one exists. This doesn't create a new limit to
&lt;code&gt;RecursiveHTTPFetcher#new&lt;/code&gt; to only accept directory
paths and not file paths, since it was already limited, as (before)
&lt;code&gt;RecursiveHTTPFetcher#fetch&lt;/code&gt; treated all initial URLs as
directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#3&lt;/strong&gt; - If the Plugin URL contains GET parameters,
A &quot;Plugin not found error&quot; is thrown or the script goes in infinite
loop. Ex:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://kopal.googlecode.com/hg/?r=tip&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will result in &lt;code&gt;RecursiveHTTPFetcher#fetch_dir()&lt;/code&gt;
asking for
&lt;code&gt;http://kopal.googlecode.com/hg/?r=tip/lib/?r=tip&lt;/code&gt;
resulting in a 404 error.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;For subversion repository, this instead results in a infinite
loop. since most subversion web-ends will parse
&lt;code&gt;?r=42/lib/&lt;/code&gt; as revision#42 and will not send a 404.
(Ex: &lt;a href=
&quot;http://freenet.googlecode.com/svn/?r=42/anything&quot;&gt;http://freenet.googlecode.com/svn/?r=42/anything&lt;/a&gt;
will fetch revision#42).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - Following are some bugs/features I
discovered. Didn't code, since I didn't find them much significant
but worth mentioning here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#5&lt;/strong&gt; - &lt;code&gt;RecursiveHTTPFetcher&lt;/code&gt; only
fetches sub-paths relative to current path, raises error for
relative to domain paths and doesn't fetches absolute paths at all
(talking only about files in the desired hierarchy).&lt;/p&gt;
&lt;p&gt;Ex:&lt;br&gt;
If &lt;code&gt;http://example.org/svn/myplugin/&lt;/code&gt; contains three
links &lt;code&gt;http://example.org/svn/myplugin/absolute/&lt;/code&gt;,
&lt;code&gt;/svn/myplugin/rel-domain/&lt;/code&gt; and
&lt;code&gt;rel-current/&lt;/code&gt;,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://example.org/svn/myplugin/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will fetch &lt;code&gt;rel-current/&lt;/code&gt;, raise a 404 error while
fetching &lt;code&gt;rel-domain/&lt;/code&gt;(interprets it as
&lt;code&gt;http://example.org/svn/myplugin/svn/myplugin/rel-domain/&lt;/code&gt;)
and won't fetch &lt;code&gt;absolute/&lt;/code&gt; at all.&lt;/p&gt;
&lt;p&gt;However, this is &lt;em&gt;not of much significance&lt;/em&gt;, since almost
all revision-control-system web-ends publish links in
relative-to-current-path format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#6&lt;/strong&gt; - While downloading a plugin from web, some
directory path, which may not be in interest of end-user should be
ignored by default. Ex: &lt;code&gt;/test/*&lt;/code&gt;,
&lt;code&gt;/.gitignore&lt;/code&gt;, &lt;code&gt;/.hgtags&lt;/code&gt;,
&lt;code&gt;/.hgignore&lt;/code&gt; etc. (Usually most of them are in the root
directory of a plugin).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: While I tested my modifications
intensively, I didn't write test for them, since can't find any
existing test which I can edit.&lt;/p&gt;
&lt;p&gt;Willing to implement/fix last two features/bugs if the community
finds them significant and gives a go.&lt;/p&gt;
&lt;p&gt;PS: This is my first ever contribution to an open-source
software.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,
Just enhanced some shortcomings of command _script/plugin install --_.
Most of the examples are of my own plug-in on which I have been testing the written code.

**#1** - Name of the plugin is usually the last fragment of the URL (or second last if last is _trunk_) and there is no option to change that.
Ex: - 

    script/plugin install http://kopal.googlecode.com/hg/

will install the plugin in `vendor/plugins/hg/` directory.

Hacking like - `http://kopal.googlecode.com/hg/?hack=/kopal/`, won't work either. Because, script will then try to fetch `http://kopal.googlecode.com/hg/?hack=/kopal/lib/`, hence making an infinite loop.

Added a &quot;--name&quot; option for the command, so

    script/plugin install http://kopal.googlecode.com/hg/ --name kopal

will install the plugin in `vendor/plugins/kopal` directory.




**#2** - For a plugin URL with no post-fixed forward slash &quot;/&quot;, if the server doesn't redirect to a URL with trailing &quot;/&quot; (ex: Google Code with Mercurial repository), a &quot;Plugin not found&quot; message is shown.

For example,

    script/plugin install  http://kopal.googlecode.com/hg ;#without post-fixed forward slash &quot;/&quot;

will result in the first link `hg/lib/`, which when passes through `File.join()` with `base_url`, resulting `http://kopal.googlecode.com/hg/hg/lib/`, which raises a 404 error.
This is a Mercurial web-end specific error as usually all Subversion web-ends will redirect to a URL with trailing '/'.
For example - visiting `http://websvn.kde.org/trunk` will redirect to `http://websvn.kde.org/trunk/` or `http://freenet.googlecode.com/svn` will redirect to `http://freenet.googlecode.com/svn/`.

Fixed. So now all URLs passed to `RecursiveHTTPFetcher` are post-fixed with '/' unless one exists. This doesn't create a new limit to `RecursiveHTTPFetcher#new` to only accept directory paths and not file paths, since it was already limited, as (before) `RecursiveHTTPFetcher#fetch` treated all initial URLs as directory.




**#3** - If the Plugin URL contains GET parameters, A &quot;Plugin not found error&quot; is thrown or the script goes in infinite loop.
Ex:

    script/plugin install http://kopal.googlecode.com/hg/?r=tip

will result in `RecursiveHTTPFetcher#fetch_dir()` asking for `http://kopal.googlecode.com/hg/?r=tip/lib/?r=tip` resulting in a 404 error.  

For subversion repository, this instead results in a infinite loop. since most subversion web-ends will parse `?r=42/lib/` as revision#42 and will not send a 404. (Ex: http://freenet.googlecode.com/svn/?r=42/anything will fetch revision#42).


**Note** - Following are some bugs/features I discovered. Didn't code, since I didn't find them much significant but worth mentioning here.


**#5** - `RecursiveHTTPFetcher` only fetches sub-paths relative to current path, raises error for relative to domain paths and doesn't fetches absolute paths at all (talking only about files in the desired hierarchy).

Ex:
If `http://example.org/svn/myplugin/` contains three links `http://example.org/svn/myplugin/absolute/`, `/svn/myplugin/rel-domain/` and `rel-current/`,

    script/plugin install http://example.org/svn/myplugin/

will fetch `rel-current/`, raise a 404 error while fetching `rel-domain/`(interprets it as `http://example.org/svn/myplugin/svn/myplugin/rel-domain/`) and won't fetch `absolute/` at all.

However, this is *not of much significance*, since almost all revision-control-system web-ends publish links in relative-to-current-path format.

**#6** - While downloading a plugin from web, some directory path, which may not be in interest of end-user should be ignored by default. Ex:  `/test/*`, `/.gitignore`, `/.hgtags`, `/.hgignore` etc. (Usually most of them are in the root directory of a plugin).

**NOTE**: While I tested my modifications intensively, I didn't write test for them, since can't find any existing test which I can edit.

Willing to implement/fix last two features/bugs if the community finds them significant and gives a go.

PS: This is my first ever contribution to an open-source software.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
Just enhanced some shortcomings of command &lt;em&gt;script/plugin
install --&lt;/em&gt;.&lt;br&gt;
Most of the examples are of my own plug-in on which I have been
testing the written code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#1&lt;/strong&gt; - Name of the plugin is usually the last
fragment of the URL (or second last if last is &lt;em&gt;trunk&lt;/em&gt;) and
there is no option to change that. Ex: -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://kopal.googlecode.com/hg/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will install the plugin in &lt;code&gt;vendor/plugins/hg/&lt;/code&gt;
directory.&lt;/p&gt;
&lt;p&gt;Hacking like -
&lt;code&gt;http://kopal.googlecode.com/hg/?hack=/kopal/&lt;/code&gt;, won't
work either. Because, script will then try to fetch
&lt;code&gt;http://kopal.googlecode.com/hg/?hack=/kopal/lib/&lt;/code&gt;,
hence making an infinite loop.&lt;/p&gt;
&lt;p&gt;Added a &quot;--name&quot; option for the command, so&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://kopal.googlecode.com/hg/ --name kopal&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will install the plugin in &lt;code&gt;vendor/plugins/kopal&lt;/code&gt;
directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#2&lt;/strong&gt; - For a plugin URL with no post-fixed
forward slash &quot;/&quot;, if the server doesn't redirect to a URL with
trailing &quot;/&quot; (ex: Google Code with Mercurial repository), a &quot;Plugin
not found&quot; message is shown.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install  http://kopal.googlecode.com/hg ;#without post-fixed forward slash &quot;/&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will result in the first link &lt;code&gt;hg/lib/&lt;/code&gt;, which when
passes through &lt;code&gt;File.join()&lt;/code&gt; with &lt;code&gt;base_url&lt;/code&gt;,
resulting &lt;code&gt;http://kopal.googlecode.com/hg/hg/lib/&lt;/code&gt;,
which raises a 404 error.&lt;br&gt;
This is a Mercurial web-end specific error as usually all
Subversion web-ends will redirect to a URL with trailing '/'.&lt;br&gt;
For example - visiting &lt;code&gt;http://websvn.kde.org/trunk&lt;/code&gt;
will redirect to &lt;code&gt;http://websvn.kde.org/trunk/&lt;/code&gt; or
&lt;code&gt;http://freenet.googlecode.com/svn&lt;/code&gt; will redirect to
&lt;code&gt;http://freenet.googlecode.com/svn/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Fixed. So now all URLs passed to
&lt;code&gt;RecursiveHTTPFetcher&lt;/code&gt; are post-fixed with '/' unless
one exists. This doesn't create a new limit to
&lt;code&gt;RecursiveHTTPFetcher#new&lt;/code&gt; to only accept directory
paths and not file paths, since it was already limited, as (before)
&lt;code&gt;RecursiveHTTPFetcher#fetch&lt;/code&gt; treated all initial URLs as
directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#3&lt;/strong&gt; - If the Plugin URL contains GET parameters,
A &quot;Plugin not found error&quot; is thrown or the script goes in infinite
loop. Ex:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://kopal.googlecode.com/hg/?r=tip&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will result in &lt;code&gt;RecursiveHTTPFetcher#fetch_dir()&lt;/code&gt;
asking for
&lt;code&gt;http://kopal.googlecode.com/hg/?r=tip/lib/?r=tip&lt;/code&gt;
resulting in a 404 error.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;For subversion repository, this instead results in a infinite
loop. since most subversion web-ends will parse
&lt;code&gt;?r=42/lib/&lt;/code&gt; as revision#42 and will not send a 404.
(Ex: &lt;a href=
&quot;http://freenet.googlecode.com/svn/?r=42/anything&quot;&gt;http://freenet.googlecode.com/svn/?r=42/anything&lt;/a&gt;
will fetch revision#42).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - Following are some bugs/features I
discovered. Didn't code, since I didn't find them much significant
but worth mentioning here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#5&lt;/strong&gt; - &lt;code&gt;RecursiveHTTPFetcher&lt;/code&gt; only
fetches sub-paths relative to current path, raises error for
relative to domain paths and doesn't fetches absolute paths at all
(talking only about files in the desired hierarchy).&lt;/p&gt;
&lt;p&gt;Ex:&lt;br&gt;
If &lt;code&gt;http://example.org/svn/myplugin/&lt;/code&gt; contains three
links &lt;code&gt;http://example.org/svn/myplugin/absolute/&lt;/code&gt;,
&lt;code&gt;/svn/myplugin/rel-domain/&lt;/code&gt; and
&lt;code&gt;rel-current/&lt;/code&gt;,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;script/plugin install http://example.org/svn/myplugin/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will fetch &lt;code&gt;rel-current/&lt;/code&gt;, raise a 404 error while
fetching &lt;code&gt;rel-domain/&lt;/code&gt;(interprets it as
&lt;code&gt;http://example.org/svn/myplugin/svn/myplugin/rel-domain/&lt;/code&gt;)
and won't fetch &lt;code&gt;absolute/&lt;/code&gt; at all.&lt;/p&gt;
&lt;p&gt;However, this is &lt;em&gt;not of much significance&lt;/em&gt;, since almost
all revision-control-system web-ends publish links in
relative-to-current-path format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;#6&lt;/strong&gt; - While downloading a plugin from web, some
directory path, which may not be in interest of end-user should be
ignored by default. Ex: &lt;code&gt;/test/*&lt;/code&gt;,
&lt;code&gt;/.gitignore&lt;/code&gt;, &lt;code&gt;/.hgtags&lt;/code&gt;,
&lt;code&gt;/.hgignore&lt;/code&gt; etc. (Usually most of them are in the root
directory of a plugin).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: While I tested my modifications
intensively, I didn't write test for them, since can't find any
existing test which I can edit.&lt;/p&gt;
&lt;p&gt;Willing to implement/fix last two features/bugs if the community
finds them significant and gives a go.&lt;/p&gt;
&lt;p&gt;PS: This is my first ever contribution to an open-source
software.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-14T08:54:34+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>command plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2009-09-14T08:54:42+01:00</updated-at>
      <user-id type="integer">55887</user-id>
      <version type="integer">1</version>
      <user-name>Vikrant Chaudhary</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Bump.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Bump.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-17T13:13:53+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: command plugin
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2009-09-17T13:13:58+01:00</updated-at>
      <user-id type="integer">55887</user-id>
      <version type="integer">2</version>
      <user-name>Vikrant Chaudhary</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T12:16:21+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: command patch plugin
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2009-09-25T12:48:46+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1, verified.

The given patch applies on 2-3-stable. I've attached a patch that applies on master.

It works, but I think it could be a little cleaner and more &quot;railsish&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, verified.&lt;/p&gt;
&lt;p&gt;The given patch applies on 2-3-stable. I've attached a patch
that applies on master.&lt;/p&gt;
&lt;p&gt;It works, but I think it could be a little cleaner and more
&quot;railsish&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T20:45:54+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2009-09-27T21:06:51+01:00</updated-at>
      <user-id type="integer">40414</user-id>
      <version type="integer">4</version>
      <user-name>Elomar Fran&#231;a</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1 I made your version a little more Ruby-ish, Elomar.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 I made your version a little more Ruby-ish, Elomar.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T21:44:23+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2009-09-27T21:44:24+01:00</updated-at>
      <user-id type="integer">15704</user-id>
      <version type="integer">5</version>
      <user-name>Gaius Centus Novus</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>+1 verified

Gaius Centus Novus' patch applies and tests cleanly to master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified&lt;/p&gt;
&lt;p&gt;Gaius Centus Novus' patch applies and tests cleanly to
master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T22:25:02+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2009-09-27T22:25:04+01:00</updated-at>
      <user-id type="integer">71145</user-id>
      <version type="integer">6</version>
      <user-name>Blue Box Stephen</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Thank you all for responses. I'm new to Git. I was wondering how can I learn the differences made by _Elomar Fran&#231;a_ and _Gaius Centus Novus_ to my code that makes it more &quot;rails-ish&quot; and &quot;ruby-ish&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thank you all for responses. I'm new to Git. I was wondering how
can I learn the differences made by &lt;em&gt;Elomar Fran&amp;ccedil;a&lt;/em&gt;
and &lt;em&gt;Gaius Centus Novus&lt;/em&gt; to my code that makes it more
&quot;rails-ish&quot; and &quot;ruby-ish&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-30T07:55:43+01:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2009-09-30T07:55:44+01:00</updated-at>
      <user-id type="integer">55887</user-id>
      <version type="integer">7</version>
      <user-name>Vikrant Chaudhary</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:17+00:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bugmash command patch plugin
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2010-02-12T12:46:18+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">8</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:55:32+00:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">142284</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2011-02-02T18:41:06+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:55:33+00:00</created-at>
      <creator-id type="integer">55887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3197</number>
      <permalink>patch-passing-a-name-to-scriptplugin-install-and-other-improvements</permalink>
      <priority type="integer">142284</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>command patch plugin</tag>
      <title>[PATCH] Passing a --name to script/plugin install and other improvements.</title>
      <updated-at type="datetime">2011-02-02T18:40:57+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Vikrant Chaudhary</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3197</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5bda47b960aa53a0d1f3adba3d3f200ebfa81a46</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-14T08:54:36+01:00</created-at>
      <filename>better-plugin-installation.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">268048</id>
      <size type="integer">5972</size>
      <uploader-id type="integer">55887</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/268048/better-plugin-installation.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>0ca88f5fe1940664a7c5ce928bc87984879e2c38</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T20:45:54+01:00</created-at>
      <filename>better-plugin-installation.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279698</id>
      <size type="integer">5846</size>
      <uploader-id type="integer">40414</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279698/better-plugin-installation.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>8179b9348258e3c9265f60876de7ee9ea8ab1863</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T21:44:23+01:00</created-at>
      <filename>better-plugin-installation.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279713</id>
      <size type="integer">3996</size>
      <uploader-id type="integer">15704</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279713/better-plugin-installation.diff</url>
    </attachment>
  </attachments>
</ticket>
