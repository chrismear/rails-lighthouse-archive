<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-20T11:19:31+01:00</created-at>
  <creator-id type="integer">18806</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1730</number>
  <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activeresource bug</tag>
  <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
  <updated-at type="datetime">2010-07-20T11:19:31+01:00</updated-at>
  <user-id type="integer">1</user-id>
  <version type="integer">6</version>
  <user-name>Rick</user-name>
  <creator-name>Matthew Moore</creator-name>
  <assigned-user-name>Rick</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
  <priority-name nil="true"></priority-name>
  <original-body>If you need to set the values for ActiveResource.site with a URI that includes a path, ActiveResource::Base.prefix will be wrong.

Consider this example.  If you have an active resource called MyActiveResource (e.g.: )

@@@ ruby
class MyActiveResource &lt; ActiveResource::Base
end
@@@

Setting a site value, and then another site value will produce the wrong ActiveResource::Base.prefix value, if the site url has a path.

See this example:

@@@ ruby
MyActiveResource.site = &quot;http://www.example.com/app1&quot;
# =&gt; &quot;http://www.example.com/app1&quot;
 MyActiveResource.prefix
# =&gt; &quot;/app1/&quot;
MyActiveResource.site = &quot;http://www.example.com/app2&quot;
# &quot;http://www.example.com/app2&quot;

MyActiveResource.prefix
# &quot;/app1/&quot;  &lt;---- BUG ----

MyActiveResource.site.path
# =&gt; &quot;/app2&quot;  &lt;-- Prefix above is wrong despite new, correct value of MyActiveResource.site.path

@@@

As you can see, even though you set a new site with a different path, the prefix method is not updated with the new site.path value, whereas it should be.  

At first glance, this looks like it's because the first ActiveRecord::Base#prefix= call overrides the original prefix method with a new method, that retains the old value.  Why does the prefix= override the prefix method with a new method??

@@@ ruby
      # Sets the \prefix for a resource's nested URL (e.g., &lt;tt&gt;prefix/collectionname/1.xml&lt;/tt&gt;).
      # Default value is &lt;tt&gt;site.path&lt;/tt&gt;.
      def prefix=(value = '/')
        # Replace :placeholders with '#{embedded options[:lookups]}'
        prefix_call = value.gsub(/:\w+/) { |key| &quot;\#{options[#{key}]}&quot; }

        # Clear prefix parameters in case they have been cached
        @prefix_parameters = nil

        # Redefine the new methods.
        code = &lt;&lt;-end_code
          def prefix_source() &quot;#{value}&quot; end
          def prefix(options={}) &quot;#{prefix_call}&quot; end                                           # &lt;--- ????
        end_code
        silence_warnings { instance_eval code, __FILE__, __LINE__ }
      rescue
        logger.error &quot;Couldn't set prefix: #{$!}\n  #{code}&quot;
        raise
      end
@@@</original-body>
  <latest-body>If you need to set the values for ActiveResource.site with a URI that includes a path, ActiveResource::Base.prefix will be wrong.

Consider this example.  If you have an active resource called MyActiveResource (e.g.: )

@@@ ruby
class MyActiveResource &lt; ActiveResource::Base
end
@@@

Setting a site value, and then another site value will produce the wrong ActiveResource::Base.prefix value, if the site url has a path.

See this example:

@@@ ruby
MyActiveResource.site = &quot;http://www.example.com/app1&quot;
# =&gt; &quot;http://www.example.com/app1&quot;
 MyActiveResource.prefix
# =&gt; &quot;/app1/&quot;
MyActiveResource.site = &quot;http://www.example.com/app2&quot;
# &quot;http://www.example.com/app2&quot;

MyActiveResource.prefix
# &quot;/app1/&quot;  &lt;---- BUG ----

MyActiveResource.site.path
# =&gt; &quot;/app2&quot;  &lt;-- Prefix above is wrong despite new, correct value of MyActiveResource.site.path

@@@

As you can see, even though you set a new site with a different path, the prefix method is not updated with the new site.path value, whereas it should be.  

At first glance, this looks like it's because the first ActiveRecord::Base#prefix= call overrides the original prefix method with a new method, that retains the old value.  Why does the prefix= override the prefix method with a new method??

@@@ ruby
      # Sets the \prefix for a resource's nested URL (e.g., &lt;tt&gt;prefix/collectionname/1.xml&lt;/tt&gt;).
      # Default value is &lt;tt&gt;site.path&lt;/tt&gt;.
      def prefix=(value = '/')
        # Replace :placeholders with '#{embedded options[:lookups]}'
        prefix_call = value.gsub(/:\w+/) { |key| &quot;\#{options[#{key}]}&quot; }

        # Clear prefix parameters in case they have been cached
        @prefix_parameters = nil

        # Redefine the new methods.
        code = &lt;&lt;-end_code
          def prefix_source() &quot;#{value}&quot; end
          def prefix(options={}) &quot;#{prefix_call}&quot; end                                           # &lt;--- ????
        end_code
        silence_warnings { instance_eval code, __FILE__, __LINE__ }
      rescue
        logger.error &quot;Couldn't set prefix: #{$!}\n  #{code}&quot;
        raise
      end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If you need to set the values for ActiveResource.site with a URI
that includes a path, ActiveResource::Base.prefix will be
wrong.&lt;/p&gt;
&lt;p&gt;Consider this example. If you have an active resource called
MyActiveResource (e.g.: )&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class MyActiveResource &amp;lt; ActiveResource::Base
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setting a site value, and then another site value will produce
the wrong ActiveResource::Base.prefix value, if the site url has a
path.&lt;/p&gt;
&lt;p&gt;See this example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
MyActiveResource.site = &amp;quot;http://www.example.com/app1&amp;quot;
# =&amp;gt; &amp;quot;http://www.example.com/app1&amp;quot;
 MyActiveResource.prefix
# =&amp;gt; &amp;quot;/app1/&amp;quot;
MyActiveResource.site = &amp;quot;http://www.example.com/app2&amp;quot;
# &amp;quot;http://www.example.com/app2&amp;quot;

MyActiveResource.prefix
# &amp;quot;/app1/&amp;quot;  &amp;lt;---- BUG ----

MyActiveResource.site.path
# =&amp;gt; &amp;quot;/app2&amp;quot;  &amp;lt;-- Prefix above is wrong despite new, correct value of MyActiveResource.site.path

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, even though you set a new site with a different
path, the prefix method is not updated with the new site.path
value, whereas it should be.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;At first glance, this looks like it's because the first
ActiveRecord::Base#prefix= call overrides the original prefix
method with a new method, that retains the old value. Why does the
prefix= override the prefix method with a new method??&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
      # Sets the \prefix for a resource's nested URL (e.g., &amp;lt;tt&amp;gt;prefix/collectionname/1.xml&amp;lt;/tt&amp;gt;).
      # Default value is &amp;lt;tt&amp;gt;site.path&amp;lt;/tt&amp;gt;.
      def prefix=(value = '/')
        # Replace :placeholders with '#{embedded options[:lookups]}'
        prefix_call = value.gsub(/:\w+/) { |key| &amp;quot;\#{options[#{key}]}&amp;quot; }

        # Clear prefix parameters in case they have been cached
        @prefix_parameters = nil

        # Redefine the new methods.
        code = &amp;lt;&amp;lt;-end_code
          def prefix_source() &amp;quot;#{value}&amp;quot; end
          def prefix(options={}) &amp;quot;#{prefix_call}&amp;quot; end                                           # &amp;lt;--- ????
        end_code
        silence_warnings { instance_eval code, __FILE__, __LINE__ }
      rescue
        logger.error &amp;quot;Couldn't set prefix: #{$!}\n  #{code}&amp;quot;
        raise
      end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you need to set the values for ActiveResource.site with a URI that includes a path, ActiveResource::Base.prefix will be wrong.

Consider this example.  If you have an active resource called MyActiveResource (e.g.: )

@@@ ruby
class MyActiveResource &lt; ActiveResource::Base
end
@@@

Setting a site value, and then another site value will produce the wrong ActiveResource::Base.prefix value, if the site url has a path.

See this example:

@@@ ruby
MyActiveResource.site = &quot;http://www.example.com/app1&quot;
# =&gt; &quot;http://www.example.com/app1&quot;
 MyActiveResource.prefix
# =&gt; &quot;/app1/&quot;
MyActiveResource.site = &quot;http://www.example.com/app2&quot;
# &quot;http://www.example.com/app2&quot;

MyActiveResource.prefix
# &quot;/app1/&quot;  &lt;---- BUG ----

MyActiveResource.site.path
# =&gt; &quot;/app2&quot;  &lt;-- Prefix above is wrong despite new, correct value of MyActiveResource.site.path

@@@

As you can see, even though you set a new site with a different path, the prefix method is not updated with the new site.path value, whereas it should be.  

At first glance, this looks like it's because the first ActiveRecord::Base#prefix= call overrides the original prefix method with a new method, that retains the old value.  Why does the prefix= override the prefix method with a new method??

@@@ ruby
      # Sets the \prefix for a resource's nested URL (e.g., &lt;tt&gt;prefix/collectionname/1.xml&lt;/tt&gt;).
      # Default value is &lt;tt&gt;site.path&lt;/tt&gt;.
      def prefix=(value = '/')
        # Replace :placeholders with '#{embedded options[:lookups]}'
        prefix_call = value.gsub(/:\w+/) { |key| &quot;\#{options[#{key}]}&quot; }

        # Clear prefix parameters in case they have been cached
        @prefix_parameters = nil

        # Redefine the new methods.
        code = &lt;&lt;-end_code
          def prefix_source() &quot;#{value}&quot; end
          def prefix(options={}) &quot;#{prefix_call}&quot; end                                     # &lt;--- ????
        end_code
        silence_warnings { instance_eval code, __FILE__, __LINE__ }
      rescue
        logger.error &quot;Couldn't set prefix: #{$!}\n  #{code}&quot;
        raise
      end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you need to set the values for ActiveResource.site with a URI
that includes a path, ActiveResource::Base.prefix will be
wrong.&lt;/p&gt;
&lt;p&gt;Consider this example. If you have an active resource called
MyActiveResource (e.g.: )&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class MyActiveResource &amp;lt; ActiveResource::Base
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setting a site value, and then another site value will produce
the wrong ActiveResource::Base.prefix value, if the site url has a
path.&lt;/p&gt;
&lt;p&gt;See this example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
MyActiveResource.site = &amp;quot;http://www.example.com/app1&amp;quot;
# =&amp;gt; &amp;quot;http://www.example.com/app1&amp;quot;
 MyActiveResource.prefix
# =&amp;gt; &amp;quot;/app1/&amp;quot;
MyActiveResource.site = &amp;quot;http://www.example.com/app2&amp;quot;
# &amp;quot;http://www.example.com/app2&amp;quot;

MyActiveResource.prefix
# &amp;quot;/app1/&amp;quot;  &amp;lt;---- BUG ----

MyActiveResource.site.path
# =&amp;gt; &amp;quot;/app2&amp;quot;  &amp;lt;-- Prefix above is wrong despite new, correct value of MyActiveResource.site.path

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, even though you set a new site with a different
path, the prefix method is not updated with the new site.path
value, whereas it should be.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;At first glance, this looks like it's because the first
ActiveRecord::Base#prefix= call overrides the original prefix
method with a new method, that retains the old value. Why does the
prefix= override the prefix method with a new method??&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
      # Sets the \prefix for a resource's nested URL (e.g., &amp;lt;tt&amp;gt;prefix/collectionname/1.xml&amp;lt;/tt&amp;gt;).
      # Default value is &amp;lt;tt&amp;gt;site.path&amp;lt;/tt&amp;gt;.
      def prefix=(value = '/')
        # Replace :placeholders with '#{embedded options[:lookups]}'
        prefix_call = value.gsub(/:\w+/) { |key| &amp;quot;\#{options[#{key}]}&amp;quot; }

        # Clear prefix parameters in case they have been cached
        @prefix_parameters = nil

        # Redefine the new methods.
        code = &amp;lt;&amp;lt;-end_code
          def prefix_source() &amp;quot;#{value}&amp;quot; end
          def prefix(options={}) &amp;quot;#{prefix_call}&amp;quot; end                                     # &amp;lt;--- ????
        end_code
        silence_warnings { instance_eval code, __FILE__, __LINE__ }
      rescue
        logger.error &amp;quot;Couldn't set prefix: #{$!}\n  #{code}&amp;quot;
        raise
      end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-11T02:53:33+00:00</created-at>
      <creator-id type="integer">18806</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1730</number>
      <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bug</tag>
      <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
      <updated-at type="datetime">2009-01-11T18:16:19+00:00</updated-at>
      <user-id type="integer">18806</user-id>
      <version type="integer">1</version>
      <user-name>Matthew Moore</user-name>
      <creator-name>Matthew Moore</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It seems odd to me that the prefix is stored in a method (by redefining a method when it's set), rather than a variable.  

Was there any method to this madness? Why it shouldn't just be stored in a class variable?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems odd to me that the prefix is stored in a method (by
redefining a method when it's set), rather than a variable.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Was there any method to this madness? Why it shouldn't just be
stored in a class variable?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-11T03:36:00+00:00</created-at>
      <creator-id type="integer">18806</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1730</number>
      <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bug</tag>
      <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
      <updated-at type="datetime">2009-01-11T18:16:35+00:00</updated-at>
      <user-id type="integer">18806</user-id>
      <version type="integer">2</version>
      <user-name>Matthew Moore</user-name>
      <creator-name>Matthew Moore</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Short version is that class variables don't play nice with inheritance.  So if you set it on ChildClass it overrides ParentClass</body>
      <body-html>&lt;div&gt;&lt;p&gt;Short version is that class variables don't play nice with
inheritance. So if you set it on ChildClass it overrides
ParentClass&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-12T05:25:37+00:00</created-at>
      <creator-id type="integer">18806</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1730</number>
      <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bug</tag>
      <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
      <updated-at type="datetime">2009-01-12T05:25:38+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Matthew Moore</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Assigning to rick as he uses ares, feel free to remove the 2.3 blocker if it's not immediately obvious how to fix it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Assigning to rick as he uses ares, feel free to remove the 2.3
blocker if it's not immediately obvious how to fix it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T02:11:56+00:00</created-at>
      <creator-id type="integer">18806</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 141
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1730</number>
      <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bug</tag>
      <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
      <updated-at type="datetime">2009-02-01T02:12:01+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Matthew Moore</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Because #prefix has to take an options parameter.  If you set it to something like &quot;/projects/:project_id&quot;, the prefix method will look something like this:

@@@ ruby
def prefix(options = {})
  &quot;/projects/#{options[:project_id]}&quot;
end

Message.prefix(:project_id =&gt; 1) # =&gt; &quot;/projects/1&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Because #prefix has to take an options parameter. If you set it
to something like &quot;/projects/:project_id&quot;, the prefix method will
look something like this:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
def prefix(options = {})
  &amp;quot;/projects/#{options[:project_id]}&amp;quot;
end

Message.prefix(:project_id =&amp;gt; 1) # =&amp;gt; &amp;quot;/projects/1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T18:08:08+00:00</created-at>
      <creator-id type="integer">18806</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1730</number>
      <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bug</tag>
      <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
      <updated-at type="datetime">2009-02-01T18:08:13+00:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">5</version>
      <user-name>Rick</user-name>
      <creator-name>Matthew Moore</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I committed [a fix to my rails fork](http://github.com/technoweenie/rails/commit/0af0dfd9e51b4be38e7d21d338f86a930d6f330f), let me know if it works out.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I committed &lt;a href=&quot;http://github.com/technoweenie/rails/commit/0af0dfd9e51b4be38e7d21d338f86a930d6f330f&quot;&gt;
a fix to my rails fork&lt;/a&gt;, let me know if it works out.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-01T18:37:21+00:00</created-at>
      <creator-id type="integer">18806</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1730</number>
      <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activeresource bug</tag>
      <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
      <updated-at type="datetime">2009-02-01T18:37:21+00:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">6</version>
      <user-name>Rick</user-name>
      <creator-name>Matthew Moore</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>alleries surveyed &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;handbags sale&lt;/a&gt;&lt;/b&gt; in the &quot;Art Market &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;replica designer handbags cheap&lt;/a&gt;&lt;/b&gt; Report 2001: The Market, &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/chloe-handbags.html&quot;&gt;replica Chloe Handbags handabgs sale&lt;/a&gt;&lt;/b&gt; the Competitors, the Trends&quot; &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/hermes-wallets.html&quot;&gt;Hermes Wallets sale&lt;/a&gt;&lt;/b&gt; by Unity Marketing, 66 &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/dior-handbags.html&quot;&gt;replica Dior Handbags&lt;/a&gt;&lt;/b&gt; percent of revenue was &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;designer handbags&lt;/a&gt;&lt;/b&gt; generated by custom framing, &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/dior-handbags.html&quot;&gt;Dior Handbags handabgs&lt;/a&gt;&lt;/b&gt; 22 percent was generated &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;handbags for sale&lt;/a&gt;&lt;/b&gt; by art, and 11 &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;fake designer handbags for cheap&lt;/a&gt;&lt;/b&gt; percent was generated by &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;designer handbags on discount&lt;/a&gt;&lt;/b&gt; gift items. &quot;Gift items dearly offer framers a significant opportunit</body>
      <body-html>&lt;div&gt;&lt;p&gt;alleries surveyed &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com&quot;&gt;handbags sale&lt;/a&gt;&lt;/b&gt; in the &quot;Art
Market &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;replica
designer handbags cheap&lt;/a&gt;&lt;/b&gt; Report 2001: The Market,
&lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com/designer-handbags/chloe-handbags.html&quot;&gt;
replica Chloe Handbags handabgs sale&lt;/a&gt;&lt;/b&gt; the Competitors, the
Trends&quot; &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/hermes-wallets.html&quot;&gt;
Hermes Wallets sale&lt;/a&gt;&lt;/b&gt; by Unity Marketing, 66 &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/dior-handbags.html&quot;&gt;
replica Dior Handbags&lt;/a&gt;&lt;/b&gt; percent of revenue was &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com&quot;&gt;designer handbags&lt;/a&gt;&lt;/b&gt;
generated by custom framing, &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com/designer-handbags/dior-handbags.html&quot;&gt;
Dior Handbags handabgs&lt;/a&gt;&lt;/b&gt; 22 percent was generated &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com&quot;&gt;handbags for sale&lt;/a&gt;&lt;/b&gt; by art,
and 11 &lt;b&gt;&lt;a href=&quot;http://www.replicahandbagsa.com&quot;&gt;fake designer
handbags for cheap&lt;/a&gt;&lt;/b&gt; percent was generated by &lt;b&gt;&lt;a href=
&quot;http://www.replicahandbagsa.com&quot;&gt;designer handbags on
discount&lt;/a&gt;&lt;/b&gt; gift items. &quot;Gift items dearly offer framers a
significant opportunit&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-20T09:01:05+01:00</created-at>
      <creator-id type="integer">18806</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1730</number>
      <permalink>activeresourcebaseprefix-isnt-reset-correctly-when-activeresourcebasesite-is-reset</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activeresource bug</tag>
      <title>ActiveResource::Base.prefix isn't reset correctly when ActiveResource::Base.site is reset.</title>
      <updated-at type="datetime">2010-07-20T11:19:31+01:00</updated-at>
      <user-id type="integer">107926</user-id>
      <version type="integer">7</version>
      <user-name>echo</user-name>
      <creator-name>Matthew Moore</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1730</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
</ticket>
