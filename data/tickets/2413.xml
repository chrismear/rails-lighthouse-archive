<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-21T14:04:56+00:00</created-at>
  <creator-id type="integer">48350</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2413</number>
  <permalink>nested_attributes_for</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.2 complex forms nested_attributes_for xml</tag>
  <title>nested_attributes_for</title>
  <updated-at type="datetime">2011-05-05T03:01:45+01:00</updated-at>
  <user-id type="integer">148049</user-id>
  <version type="integer">5</version>
  <user-name>af001</user-name>
  <creator-name>Joshua White</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2413</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>There is a lot more going on with my models, but I simplified the class for this bug. I have a class, finding_data, which has many finding_measurement_datas. Everything works except for updating with the nested attributes. I assigned class 

FindingData &lt; ActiveRecord::Base
  has_many :finding_measurement_datas, :dependent =&gt; :destroy
  accepts_nested_attributes_for :finding_measurement_datas
end

class FindingMeasurementData &lt; ActiveRecord::Base
        belongs_to :finding_measurement
        belongs_to :finding_data
        validates_presence_of :finding_measurement
end

I send back params that look like this from my application to the server.

Parameters: {&quot;id&quot;=&gt;&quot;97&quot;, 
&quot;exam_record&quot;=&gt;{&quot;name&quot;=&gt;&quot;exam_record&quot;, 
&quot;finding_datas&quot;=&gt;
[{&quot;name&quot;=&gt;&quot;Mammo Mass 1&quot;, &quot;updated_at&quot;=&gt;&quot;2009-03-27T21:54:24-05:00&quot;, &quot;finding_type_id&quot;=&gt;&quot;15&quot;, &quot;selected&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;&quot;1&quot;, 
&quot;finding_measurement_datas&quot;=&gt;
[{&quot;finding_measurement_id&quot;=&gt;&quot;15&quot;, &quot;id&quot;=&gt;&quot;1&quot;, &quot;measurement&quot;=&gt;&quot;1.34&quot;, finding_data_id&quot;=&gt;&quot;1&quot;}, {&quot;finding_measurement_id&quot;=&gt;&quot;19&quot;, &quot;id&quot;=&gt;&quot;2&quot;, &quot;measurement&quot;=&gt;&quot;1&quot;, &quot;finding_data_id&quot;=&gt;&quot;1&quot;}], }}}

In the controller I say 

 params[:exam_record][:finding_datas].each do |fd|
          if FindingData.exists?(fd[:id])
            finding_data = FindingData.find(fd[:id]).update_attributes(fd)
          else
            finding_data = FindingData.create(fd)
          end
 end


This should then take the list of finding_measurement_datas that is in fd and update the finding data, and add any associated measurements correct? Instead it tells me in the log

ActiveRecord::AssociationTypeMismatch (FindingMeasurementData(#-608683668) expected, got HashWithIndifferentAccess(#-605880508)):
  app/controllers/readings_controller.rb:193:in `update'
 
I would just cast each measurement data as a new measurement data, but some aren't new and they already have ids. 

I am trying to follow the documents about doing complex views. I am sending XML back and fourth to my server, but since rails parses it into params I assume it should work the same way as the params hash from the rails views. I also know that I can iterate through the hash and add each finding measurement on its own, the link it to the finding data. Should what I'm trying to do work, or am I not looking at the nested_attributes_for correctly?

Thanks for checking it out</original-body>
  <latest-body>There is a lot more going on with my models, but I simplified the class for this bug. I have a class, finding_data, which has many finding_measurement_datas. Everything works except for updating with the nested attributes. I assigned class 

FindingData &lt; ActiveRecord::Base
  has_many :finding_measurement_datas, :dependent =&gt; :destroy
  accepts_nested_attributes_for :finding_measurement_datas
end

class FindingMeasurementData &lt; ActiveRecord::Base
        belongs_to :finding_measurement
        belongs_to :finding_data
        validates_presence_of :finding_measurement
end

I send back params that look like this from my application to the server.

Parameters: {&quot;id&quot;=&gt;&quot;97&quot;, 
&quot;exam_record&quot;=&gt;{&quot;name&quot;=&gt;&quot;exam_record&quot;, 
&quot;finding_datas&quot;=&gt;
[{&quot;name&quot;=&gt;&quot;Mammo Mass 1&quot;, &quot;updated_at&quot;=&gt;&quot;2009-03-27T21:54:24-05:00&quot;, &quot;finding_type_id&quot;=&gt;&quot;15&quot;, &quot;selected&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;&quot;1&quot;, 
&quot;finding_measurement_datas&quot;=&gt;
[{&quot;finding_measurement_id&quot;=&gt;&quot;15&quot;, &quot;id&quot;=&gt;&quot;1&quot;, &quot;measurement&quot;=&gt;&quot;1.34&quot;, finding_data_id&quot;=&gt;&quot;1&quot;}, {&quot;finding_measurement_id&quot;=&gt;&quot;19&quot;, &quot;id&quot;=&gt;&quot;2&quot;, &quot;measurement&quot;=&gt;&quot;1&quot;, &quot;finding_data_id&quot;=&gt;&quot;1&quot;}], }}}

In the controller I say 

 params[:exam_record][:finding_datas].each do |fd|
          if FindingData.exists?(fd[:id])
            finding_data = FindingData.find(fd[:id]).update_attributes(fd)
          else
            finding_data = FindingData.create(fd)
          end
 end


This should then take the list of finding_measurement_datas that is in fd and update the finding data, and add any associated measurements correct? Instead it tells me in the log

ActiveRecord::AssociationTypeMismatch (FindingMeasurementData(#-608683668) expected, got HashWithIndifferentAccess(#-605880508)):
  app/controllers/readings_controller.rb:193:in `update'
 
I would just cast each measurement data as a new measurement data, but some aren't new and they already have ids. 

I am trying to follow the documents about doing complex views. I am sending XML back and fourth to my server, but since rails parses it into params I assume it should work the same way as the params hash from the rails views. I also know that I can iterate through the hash and add each finding measurement on its own, the link it to the finding data. Should what I'm trying to do work, or am I not looking at the nested_attributes_for correctly?

Thanks for checking it out</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There is a lot more going on with my models, but I simplified
the class for this bug. I have a class, finding_data, which has
many finding_measurement_datas. Everything works except for
updating with the nested attributes. I assigned class&lt;/p&gt;
&lt;p&gt;FindingData &amp;lt; ActiveRecord::Base has_many
:finding_measurement_datas, :dependent =&amp;gt; :destroy
accepts_nested_attributes_for :finding_measurement_datas end&lt;/p&gt;
&lt;p&gt;class FindingMeasurementData &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    belongs_to :finding_measurement
    belongs_to :finding_data
    validates_presence_of :finding_measurement
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;I send back params that look like this from my application to
the server.&lt;/p&gt;
&lt;p&gt;Parameters: {&quot;id&quot;=&amp;gt;&quot;97&quot;,
&quot;exam_record&quot;=&amp;gt;{&quot;name&quot;=&amp;gt;&quot;exam_record&quot;, &quot;finding_datas&quot;=&amp;gt;
[{&quot;name&quot;=&amp;gt;&quot;Mammo Mass 1&quot;,
&quot;updated_at&quot;=&amp;gt;&quot;2009-03-27T21:54:24-05:00&quot;,
&quot;finding_type_id&quot;=&amp;gt;&quot;15&quot;, &quot;selected&quot;=&amp;gt;&quot;1&quot;, &quot;id&quot;=&amp;gt;&quot;1&quot;,
&quot;finding_measurement_datas&quot;=&amp;gt;
[{&quot;finding_measurement_id&quot;=&amp;gt;&quot;15&quot;, &quot;id&quot;=&amp;gt;&quot;1&quot;,
&quot;measurement&quot;=&amp;gt;&quot;1.34&quot;, finding_data_id&quot;=&amp;gt;&quot;1&quot;},
{&quot;finding_measurement_id&quot;=&amp;gt;&quot;19&quot;, &quot;id&quot;=&amp;gt;&quot;2&quot;,
&quot;measurement&quot;=&amp;gt;&quot;1&quot;, &quot;finding_data_id&quot;=&amp;gt;&quot;1&quot;}], }}}&lt;/p&gt;
&lt;p&gt;In the controller I say&lt;/p&gt;
&lt;p&gt;params[:exam_record][:finding_datas].each do |fd|&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      if FindingData.exists?(fd[:id])
        finding_data = FindingData.find(fd[:id]).update_attributes(fd)
      else
        finding_data = FindingData.create(fd)
      end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;This should then take the list of finding_measurement_datas that
is in fd and update the finding data, and add any associated
measurements correct? Instead it tells me in the log&lt;/p&gt;
&lt;p&gt;ActiveRecord::AssociationTypeMismatch
(FindingMeasurementData(#-608683668) expected, got
HashWithIndifferentAccess(#-605880508)):
app/controllers/readings_controller.rb:193:in
&lt;code&gt;update'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I would just cast each measurement data as a new measurement
data, but some aren't new and they already have ids.&lt;/p&gt;
&lt;p&gt;I am trying to follow the documents about doing complex views. I
am sending XML back and fourth to my server, but since rails parses
it into params I assume it should work the same way as the params
hash from the rails views. I also know that I can iterate through
the hash and add each finding measurement on its own, the link it
to the finding data. Should what I'm trying to do work, or am I not
looking at the nested_attributes_for correctly?&lt;/p&gt;
&lt;p&gt;Thanks for checking it out&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is a lot more going on with my models, but I simplified the class for this bug. I have a class, finding_data, which has many finding_measurement_datas. Everything works except for updating with the nested attributes. I assigned class 

FindingData &lt; ActiveRecord::Base
  has_many :finding_measurement_datas, :dependent =&gt; :destroy
  accepts_nested_attributes_for :finding_measurement_datas
end

class FindingMeasurementData &lt; ActiveRecord::Base
        belongs_to :finding_measurement
        belongs_to :finding_data
        validates_presence_of :finding_measurement
end

I send back params that look like this from my application to the server.

Parameters: {&quot;id&quot;=&gt;&quot;97&quot;, 
&quot;exam_record&quot;=&gt;{&quot;name&quot;=&gt;&quot;exam_record&quot;, 
&quot;finding_datas&quot;=&gt;
[{&quot;name&quot;=&gt;&quot;Mammo Mass 1&quot;, &quot;updated_at&quot;=&gt;&quot;2009-03-27T21:54:24-05:00&quot;, &quot;finding_type_id&quot;=&gt;&quot;15&quot;, &quot;selected&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;&quot;1&quot;, 
&quot;finding_measurement_datas&quot;=&gt;
[{&quot;finding_measurement_id&quot;=&gt;&quot;15&quot;, &quot;id&quot;=&gt;&quot;1&quot;, &quot;measurement&quot;=&gt;&quot;1.34&quot;, finding_data_id&quot;=&gt;&quot;1&quot;}, {&quot;finding_measurement_id&quot;=&gt;&quot;19&quot;, &quot;id&quot;=&gt;&quot;2&quot;, &quot;measurement&quot;=&gt;&quot;1&quot;, &quot;finding_data_id&quot;=&gt;&quot;1&quot;}], }}}

In the controller I say 

 params[:exam_record][:finding_datas].each do |fd|
          if FindingData.exists?(fd[:id])
            finding_data = FindingData.find(fd[:id]).update_attributes(fd)
          else
            finding_data = FindingData.create(fd)
          end
 end


This should then take the list of finding_measurement_datas that is in fd and update the finding data, and add any associated measurements correct? Instead it tells me in the log

ActiveRecord::AssociationTypeMismatch (FindingMeasurementData(#-608683668) expected, got HashWithIndifferentAccess(#-605880508)):
  app/controllers/readings_controller.rb:193:in `update'
 
I would just cast each measurement data as a new measurement data, but some aren't new and they already have ids. 

I am trying to follow the documents about doing complex views. I am sending XML back and fourth to my server, but since rails parses it into params I assume it should work the same way as the params hash from the rails views. I also know that I can iterate through the hash and add each finding measurement on its own, the link it to the finding data. Should what I'm trying to do work, or am I not looking at the nested_attributes_for correctly?

Thanks for checking it out</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is a lot more going on with my models, but I simplified
the class for this bug. I have a class, finding_data, which has
many finding_measurement_datas. Everything works except for
updating with the nested attributes. I assigned class&lt;/p&gt;
&lt;p&gt;FindingData &amp;lt; ActiveRecord::Base has_many
:finding_measurement_datas, :dependent =&amp;gt; :destroy
accepts_nested_attributes_for :finding_measurement_datas end&lt;/p&gt;
&lt;p&gt;class FindingMeasurementData &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    belongs_to :finding_measurement
    belongs_to :finding_data
    validates_presence_of :finding_measurement
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;I send back params that look like this from my application to
the server.&lt;/p&gt;
&lt;p&gt;Parameters: {&quot;id&quot;=&amp;gt;&quot;97&quot;,
&quot;exam_record&quot;=&amp;gt;{&quot;name&quot;=&amp;gt;&quot;exam_record&quot;, &quot;finding_datas&quot;=&amp;gt;
[{&quot;name&quot;=&amp;gt;&quot;Mammo Mass 1&quot;,
&quot;updated_at&quot;=&amp;gt;&quot;2009-03-27T21:54:24-05:00&quot;,
&quot;finding_type_id&quot;=&amp;gt;&quot;15&quot;, &quot;selected&quot;=&amp;gt;&quot;1&quot;, &quot;id&quot;=&amp;gt;&quot;1&quot;,
&quot;finding_measurement_datas&quot;=&amp;gt;
[{&quot;finding_measurement_id&quot;=&amp;gt;&quot;15&quot;, &quot;id&quot;=&amp;gt;&quot;1&quot;,
&quot;measurement&quot;=&amp;gt;&quot;1.34&quot;, finding_data_id&quot;=&amp;gt;&quot;1&quot;},
{&quot;finding_measurement_id&quot;=&amp;gt;&quot;19&quot;, &quot;id&quot;=&amp;gt;&quot;2&quot;,
&quot;measurement&quot;=&amp;gt;&quot;1&quot;, &quot;finding_data_id&quot;=&amp;gt;&quot;1&quot;}], }}}&lt;/p&gt;
&lt;p&gt;In the controller I say&lt;/p&gt;
&lt;p&gt;params[:exam_record][:finding_datas].each do |fd|&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      if FindingData.exists?(fd[:id])
        finding_data = FindingData.find(fd[:id]).update_attributes(fd)
      else
        finding_data = FindingData.create(fd)
      end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;This should then take the list of finding_measurement_datas that
is in fd and update the finding data, and add any associated
measurements correct? Instead it tells me in the log&lt;/p&gt;
&lt;p&gt;ActiveRecord::AssociationTypeMismatch
(FindingMeasurementData(#-608683668) expected, got
HashWithIndifferentAccess(#-605880508)):
app/controllers/readings_controller.rb:193:in
&lt;code&gt;update'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I would just cast each measurement data as a new measurement
data, but some aren't new and they already have ids.&lt;/p&gt;
&lt;p&gt;I am trying to follow the documents about doing complex views. I
am sending XML back and fourth to my server, but since rails parses
it into params I assume it should work the same way as the params
hash from the rails views. I also know that I can iterate through
the hash and add each finding measurement on its own, the link it
to the finding data. Should what I'm trying to do work, or am I not
looking at the nested_attributes_for correctly?&lt;/p&gt;
&lt;p&gt;Thanks for checking it out&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-03T22:52:48+01:00</created-at>
      <creator-id type="integer">48350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2413</number>
      <permalink>nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 complex forms nested_attributes_for xml</tag>
      <title>nested_attributes_for</title>
      <updated-at type="datetime">2009-04-03T22:52:49+01:00</updated-at>
      <user-id type="integer">48350</user-id>
      <version type="integer">1</version>
      <user-name>Joshua White</user-name>
      <creator-name>Joshua White</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2413</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I figured out the problem

In my hash below

&quot;exam_record&quot;=&gt;{&quot;name&quot;=&gt;&quot;exam_record&quot;, &quot;finding_datas&quot;=&gt; [{&quot;name&quot;=&gt;&quot;Mammo Mass 1&quot;, &quot;updated_at&quot;=&gt;&quot;2009-03-27T21:54:24-05:00&quot;, &quot;finding_type_id&quot;=&gt;&quot;15&quot;, &quot;selected&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;&quot;1&quot;, &quot;finding_measurement_datas&quot;=&gt; [{&quot;finding_measurement_id&quot;=&gt;&quot;15&quot;, &quot;id&quot;=&gt;&quot;1&quot;, &quot;measurement&quot;=&gt;&quot;1.34&quot;, finding_data_id&quot;=&gt;&quot;1&quot;}, {&quot;finding_measurement_id&quot;=&gt;&quot;19&quot;, &quot;id&quot;=&gt;&quot;2&quot;, &quot;measurement&quot;=&gt;&quot;1&quot;, &quot;finding_data_id&quot;=&gt;&quot;1&quot;}], }}

I needed the hash key for the finding_measurement_datas to be called
finding_measurement_datas_attributes

If I were using rails views and not flex xml I wouldn't have had the problem so its not a bug, just that the params converstion is not well documented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I figured out the problem&lt;/p&gt;
&lt;p&gt;In my hash below&lt;/p&gt;
&lt;p&gt;&quot;exam_record&quot;=&amp;gt;{&quot;name&quot;=&amp;gt;&quot;exam_record&quot;,
&quot;finding_datas&quot;=&amp;gt; [{&quot;name&quot;=&amp;gt;&quot;Mammo Mass 1&quot;,
&quot;updated_at&quot;=&amp;gt;&quot;2009-03-27T21:54:24-05:00&quot;,
&quot;finding_type_id&quot;=&amp;gt;&quot;15&quot;, &quot;selected&quot;=&amp;gt;&quot;1&quot;, &quot;id&quot;=&amp;gt;&quot;1&quot;,
&quot;finding_measurement_datas&quot;=&amp;gt;
[{&quot;finding_measurement_id&quot;=&amp;gt;&quot;15&quot;, &quot;id&quot;=&amp;gt;&quot;1&quot;,
&quot;measurement&quot;=&amp;gt;&quot;1.34&quot;, finding_data_id&quot;=&amp;gt;&quot;1&quot;},
{&quot;finding_measurement_id&quot;=&amp;gt;&quot;19&quot;, &quot;id&quot;=&amp;gt;&quot;2&quot;,
&quot;measurement&quot;=&amp;gt;&quot;1&quot;, &quot;finding_data_id&quot;=&amp;gt;&quot;1&quot;}], }}&lt;/p&gt;
&lt;p&gt;I needed the hash key for the finding_measurement_datas to be
called finding_measurement_datas_attributes&lt;/p&gt;
&lt;p&gt;If I were using rails views and not flex xml I wouldn't have had
the problem so its not a bug, just that the params converstion is
not well documented.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T05:08:32+01:00</created-at>
      <creator-id type="integer">48350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2413</number>
      <permalink>nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 complex forms nested_attributes_for xml</tag>
      <title>nested_attributes_for</title>
      <updated-at type="datetime">2009-04-05T05:08:37+01:00</updated-at>
      <user-id type="integer">48350</user-id>
      <version type="integer">2</version>
      <user-name>Joshua White</user-name>
      <creator-name>Joshua White</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2413</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Joshua, if you find the documentation on this lacking, please take a look at extending the docs through the doc-rails project: http://github.com/lifo/docrails/tree/master

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;Joshua, if you find the documentation on this lacking, please
take a look at extending the docs through the doc-rails project:
&lt;a href=
&quot;http://github.com/lifo/docrails/tree/master&quot;&gt;http://github.com/lifo/docrails/tree/master&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-11T12:39:10+01:00</created-at>
      <creator-id type="integer">48350</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2413</number>
      <permalink>nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 complex forms nested_attributes_for xml</tag>
      <title>nested_attributes_for</title>
      <updated-at type="datetime">2009-07-11T12:39:13+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">3</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Joshua White</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2413</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Replica Tag Watches sell at low prices. Buy Tag Heuer Replica Watches, Fake TAG Heuer Watches please come to our &lt;a href=&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag Heuer watches&lt;/a&gt;.Look no further for &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches, Ladies Omega Replica Watches from our &lt;a href=&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega watches&lt;/a&gt; store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Replica Tag Watches sell at low prices. Buy Tag Heuer Replica
Watches, Fake TAG Heuer Watches please come to our &lt;a href=
&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag
Heuer watches&lt;/a&gt;.Look no further for &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica
Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss
replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches,
Ladies Omega Replica Watches from our &lt;a href=
&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega
watches&lt;/a&gt; store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-21T13:58:14+00:00</created-at>
      <creator-id type="integer">48350</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2413</number>
      <permalink>nested_attributes_for</permalink>
      <priority type="integer">1528</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 complex forms nested_attributes_for xml</tag>
      <title>nested_attributes_for</title>
      <updated-at type="datetime">2011-02-21T14:04:56+00:00</updated-at>
      <user-id type="integer">138022</user-id>
      <version type="integer">4</version>
      <user-name>benben</user-name>
      <creator-name>Joshua White</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2413</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&#31169;&#12398;&#20013;&#12391;&#12289;&#32207;&#21512;&#35413;&#20385;&#12398;&#12392;&#12387;&#12390;&#12418;&#20302;&#12356;&#12450;&#12496;&lt;a href=&quot;http://www.abakuro.co.jp/&quot; rel=&quot;dofollow&quot;&gt;&lt;b&gt;&#12450;&#12496;&#12463;&#12525;&#12507;&#12522;&#12473;&#12479;&#12540;&lt;/b&gt;&lt;/a&gt;&#12463;&#12525;&#37504;&#24231;&#24215;&#12290;&#12450;&#12496;&#12463;&#12525;&#12399;&#22823;&#22909;&#12365;&#12394;&#12435;&#12391;&#12377;&#12369;&#12393;&#12397;&#12290;&#19968;&#26152;&#26085;&#12398;&#26481;&#20140;&#39365;&#20184;&#36817;&#12391;&#12398;&#25171;&#12385;&#21512;&#12431;&#12379;&#12398;&#24460;&#12289;&#25955;&#27497;&#12364;&#12390;&#12425;&#20037;&#12293;&#12395;&#34892;&#12387;&#12390;&#12365;&#12414;&#12375;&#12383;&#12290;&#12381;&#12375;&#12383;&#12425;&#12499;&#12483;&#12463;&#12522;&#65281;&#30456;&#22793;&#12431;&#12425;&lt;a href=&quot;http://www.abakuro.co.jp/&quot; rel=&quot;dofollow&quot;&gt;&lt;b&gt;&#12450;&#12496;&#12463;&#12525;&lt;/b&gt;&lt;/a&gt;&#12378;&#12289;&#36362;&#12387;&#12390;&#12356;&#12427;&#12384;&#12369;&#12398;&#24215;&#21729;&#12373;&#12435;&#12392;&#12363;&#12418;&#12356;&#12414;&#12375;&#12383;&#12364;&#12289;</body>
      <body-html>&lt;div&gt;&lt;p&gt;
&amp;#31169;&amp;#12398;&amp;#20013;&amp;#12391;&amp;#12289;&amp;#32207;&amp;#21512;&amp;#35413;&amp;#20385;&amp;#12398;&amp;#12392;&amp;#12387;&amp;#12390;&amp;#12418;&amp;#20302;&amp;#12356;&amp;#12450;&amp;#12496;&lt;a href=&quot;http://www.abakuro.co.jp/&quot;&gt;&lt;b&gt;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&amp;#12507;&amp;#12522;&amp;#12473;&amp;#12479;&amp;#12540;&lt;/b&gt;&lt;/a&gt;&amp;#12463;&amp;#12525;&amp;#37504;&amp;#24231;&amp;#24215;&amp;#12290;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&amp;#12399;&amp;#22823;&amp;#22909;&amp;#12365;&amp;#12394;&amp;#12435;&amp;#12391;&amp;#12377;&amp;#12369;&amp;#12393;&amp;#12397;&amp;#12290;&amp;#19968;&amp;#26152;&amp;#26085;&amp;#12398;&amp;#26481;&amp;#20140;&amp;#39365;&amp;#20184;&amp;#36817;&amp;#12391;&amp;#12398;&amp;#25171;&amp;#12385;&amp;#21512;&amp;#12431;&amp;#12379;&amp;#12398;&amp;#24460;&amp;#12289;&amp;#25955;&amp;#27497;&amp;#12364;&amp;#12390;&amp;#12425;&amp;#20037;&amp;#12293;&amp;#12395;&amp;#34892;&amp;#12387;&amp;#12390;&amp;#12365;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&amp;#12381;&amp;#12375;&amp;#12383;&amp;#12425;&amp;#12499;&amp;#12483;&amp;#12463;&amp;#12522;&amp;#65281;&amp;#30456;&amp;#22793;&amp;#12431;&amp;#12425;&lt;a href=&quot;http://www.abakuro.co.jp/&quot;&gt;&lt;b&gt;&amp;#12450;&amp;#12496;&amp;#12463;&amp;#12525;&lt;/b&gt;&lt;/a&gt;&amp;#12378;&amp;#12289;&amp;#36362;&amp;#12387;&amp;#12390;&amp;#12356;&amp;#12427;&amp;#12384;&amp;#12369;&amp;#12398;&amp;#24215;&amp;#21729;&amp;#12373;&amp;#12435;&amp;#12392;&amp;#12363;&amp;#12418;&amp;#12356;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12364;&amp;#12289;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-05-05T03:00:33+01:00</created-at>
      <creator-id type="integer">48350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2413</number>
      <permalink>nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 complex forms nested_attributes_for xml</tag>
      <title>nested_attributes_for</title>
      <updated-at type="datetime">2011-05-05T03:01:45+01:00</updated-at>
      <user-id type="integer">148049</user-id>
      <version type="integer">5</version>
      <user-name>af001</user-name>
      <creator-name>Joshua White</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2413</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
