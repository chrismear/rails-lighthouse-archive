<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-19T14:25:08+01:00</created-at>
  <creator-id type="integer">136</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">3760</number>
  <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>hold</state>
  <tag>activerecord inverse_of patch</tag>
  <title>Make AR guess the inverse of an association if not specified</title>
  <updated-at type="datetime">2010-07-19T14:51:23+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">8</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Murray Steele</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>High</priority-name>
  <original-body>Change ActiveRecord so that if the model doesn't specify an explicit :inverse_of option AR will try to guess and give the model the benefits of :inverse_of.  In some cases AR won't be able to guess, or will guess wrong, so you can still specify explcitly using :inverse_of.  You can also turn off the feature on a case by case basis if you specify :inverse_of =&gt; nil.

You might want to do this if you have validations or autosaves on your associations that might cause an infinite loop.</original-body>
  <latest-body>Change ActiveRecord so that if the model doesn't specify an explicit :inverse_of option AR will try to guess and give the model the benefits of :inverse_of.  In some cases AR won't be able to guess, or will guess wrong, so you can still specify explcitly using :inverse_of.  You can also turn off the feature on a case by case basis if you specify :inverse_of =&gt; nil.

You might want to do this if you have validations or autosaves on your associations that might cause an infinite loop.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Change ActiveRecord so that if the model doesn't specify an
explicit :inverse_of option AR will try to guess and give the model
the benefits of :inverse_of. In some cases AR won't be able to
guess, or will guess wrong, so you can still specify explcitly
using :inverse_of. You can also turn off the feature on a case by
case basis if you specify :inverse_of =&amp;gt; nil.&lt;/p&gt;
&lt;p&gt;You might want to do this if you have validations or autosaves
on your associations that might cause an infinite loop.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Change ActiveRecord so that if the model doesn't specify an explicit :inverse_of option AR will try to guess and give the model the benefits of :inverse_of.  In some cases AR won't be able to guess, or will guess wrong, so you can still specify explcitly using :inverse_of.  You can also turn off the feature on a case by case basis if you specify :inverse_of =&gt; nil.

You might want to do this if you have validations or autosaves on your associations that might cause an infinite loop.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Change ActiveRecord so that if the model doesn't specify an
explicit :inverse_of option AR will try to guess and give the model
the benefits of :inverse_of. In some cases AR won't be able to
guess, or will guess wrong, so you can still specify explcitly
using :inverse_of. You can also turn off the feature on a case by
case basis if you specify :inverse_of =&amp;gt; nil.&lt;/p&gt;
&lt;p&gt;You might want to do this if you have validations or autosaves
on your associations that might cause an infinite loop.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-20T23:28:08+00:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;inverse_of activerecord patch&quot;</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-01-20T23:28:14+00:00</updated-at>
      <user-id type="integer">136</user-id>
      <version type="integer">1</version>
      <user-name>Murray Steele</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The patch is complete, but it might want some work or thought about the API it exposes.  Or more tests - I'm not sure about the testing strategy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch is complete, but it might want some work or thought
about the API it exposes. Or more tests - I'm not sure about the
testing strategy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-20T23:30:41+00:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;inverse_of activerecord patch\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord inverse_of patch</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-01-20T23:30:43+00:00</updated-at>
      <user-id type="integer">136</user-id>
      <version type="integer">2</version>
      <user-name>Murray Steele</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 for sure.  This would be great - DataMapper and Sequel already support correct inverse associations, so it's really something that AR should support as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for sure. This would be great - DataMapper and Sequel already
support correct inverse associations, so it's really something that
AR should support as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-23T19:53:16+00:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord inverse_of patch</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-01-23T19:53:18+00:00</updated-at>
      <user-id type="integer">15459</user-id>
      <version type="integer">3</version>
      <user-name>Nate Wiger</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After discussion with Eloy in IRC it seems it's useful to put a note about some of the gotchas here.

With this patch, AR will try to guess the association on a loaded model that is the inverse of the association it was loaded through, but this It has the exact same limitations as the explicit :inverse_of feature.  Namely that it doesn't work for :through associations, and it won't work for belongs_to associations that have a has_many association as the inverse.

The reason for the has_many limitation is partly implementation, in that has_many associations don't have the set_XXX_target that other associations do, and that's what the current :inverse_of implementation uses to set inverses.  The other reason for the limitation is that it's not hugely clear what exactly we should do.  Given:

@@@ ruby
  class Car &lt; ActiveRecord::Base
    has_many :wheels
  end
  
  class Wheel &lt; ActiveRecord::Base
    belongs_to :car
  end
@@@

When we do:

@@@ ruby
  car = Car.first
  wheels = car.wheels
@@@

It's obvious what should be set as an inverse, each instance of Wheel should have the Car we loaded first set as the target of their car association.

If we do:

@@@ ruby
  wheel = Wheel.first
  car = wheel.car
  wheels = car.wheels
@@@

It's not particularly obvious what should be in this wheels array.  Should we have all the wheels associated to the car loaded from the DB, apart from the one we started with?  Should we just have the wheel we started with?  Clearly the first option is correct, it's just hard to see the benefit of using the pre-loaded wheel here.  We can't avoid a DB query to find out which other wheels we need and then inserting the wheel we already have into the set of objects returned from that query is extra work. 

It seems more pragmatic to ignore the belongs_to -&gt; has_many case for now until we have a clear solution or full identity map.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After discussion with Eloy in IRC it seems it's useful to put a
note about some of the gotchas here.&lt;/p&gt;
&lt;p&gt;With this patch, AR will try to guess the association on a
loaded model that is the inverse of the association it was loaded
through, but this It has the exact same limitations as the explicit
:inverse_of feature. Namely that it doesn't work for :through
associations, and it won't work for belongs_to associations that
have a has_many association as the inverse.&lt;/p&gt;
&lt;p&gt;The reason for the has_many limitation is partly implementation,
in that has_many associations don't have the set_XXX_target that
other associations do, and that's what the current :inverse_of
implementation uses to set inverses. The other reason for the
limitation is that it's not hugely clear what exactly we should do.
Given:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Car &amp;lt; ActiveRecord::Base
    has_many :wheels
  end
  
  class Wheel &amp;lt; ActiveRecord::Base
    belongs_to :car
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When we do:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  car = Car.first
  wheels = car.wheels&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It's obvious what should be set as an inverse, each instance of
Wheel should have the Car we loaded first set as the target of
their car association.&lt;/p&gt;
&lt;p&gt;If we do:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  wheel = Wheel.first
  car = wheel.car
  wheels = car.wheels&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It's not particularly obvious what should be in this wheels
array. Should we have all the wheels associated to the car loaded
from the DB, apart from the one we started with? Should we just
have the wheel we started with? Clearly the first option is
correct, it's just hard to see the benefit of using the pre-loaded
wheel here. We can't avoid a DB query to find out which other
wheels we need and then inserting the wheel we already have into
the set of objects returned from that query is extra work.&lt;/p&gt;
&lt;p&gt;It seems more pragmatic to ignore the belongs_to -&amp;gt; has_many
case for now until we have a clear solution or full identity
map.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-25T16:23:22+00:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord inverse_of patch</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-01-25T16:23:23+00:00</updated-at>
      <user-id type="integer">136</user-id>
      <version type="integer">4</version>
      <user-name>Murray Steele</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>As discussed with Murray on IRC, I'm gonna take a look later this week if we can also solve the problem with autosave as outlined.

Also inviting Jeremy to the ticket.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As discussed with Murray on IRC, I'm gonna take a look later
this week if we can also solve the problem with autosave as
outlined.&lt;/p&gt;
&lt;p&gt;Also inviting Jeremy to the ticket.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T17:57:37+00:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord inverse_of patch</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-01-26T17:57:40+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">5</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;blockquote&gt;It's not particularly obvious what should be in this wheels array. Should we have all the wheels associated to the car loaded from the DB, apart from the one we started with? Should we just have the wheel we started with?&lt;/blockquote&gt;

Should load all the car's wheels from the DB.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;It's not particularly obvious what should be in this
wheels array. Should we have all the wheels associated to the car
loaded from the DB, apart from the one we started with? Should we
just have the wheel we started with?&lt;/blockquote&gt;
&lt;p&gt;Should load all the car's wheels from the DB.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T18:31:22+00:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord inverse_of patch</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-01-26T18:31:24+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T08:37:16+01:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 8406
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord inverse_of patch</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-07-08T08:37:19+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">7</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm marking this as hold because this should probably be achieved by the RSoC student working on identity map.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm marking this as hold because this should probably be
achieved by the RSoC student working on identity map.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T14:51:18+01:00</created-at>
      <creator-id type="integer">136</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3760</number>
      <permalink>make-ar-guess-the-inverse-of-an-association-if-not-specified</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>activerecord inverse_of patch</tag>
      <title>Make AR guess the inverse of an association if not specified</title>
      <updated-at type="datetime">2010-07-19T14:51:23+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Murray Steele</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3760</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>High</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>8e9212603dd4289027d3ce3792cf6c7e808a3057</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-20T23:28:08+00:00</created-at>
      <filename>0001-change-inverse_of-features.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">383421</id>
      <size type="integer">52587</size>
      <uploader-id type="integer">136</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/383421/0001-change-inverse_of-features.patch</url>
    </attachment>
  </attachments>
</ticket>
