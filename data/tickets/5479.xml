<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40272</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-28T04:43:51+01:00</created-at>
  <creator-id type="integer">109290</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5479</number>
  <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>&quot;rails 3&quot;</tag>
  <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
  <updated-at type="datetime">2010-10-15T23:02:02+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">11</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>javierm</creator-name>
  <assigned-user-name>Santiago Pastorino</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Using Rails 3.0RC2 (it happened in RC1 as well) with a SQLite3 database I've noticed the following behavior under both Ruby 1.8.7 and Ruby 1.9.2.

I've got a post class with the following scopes:

@@@ ruby
    scope :by_id, order(&quot;id&quot;)
    scope :by_title, order(&quot;title&quot;)
@@@

I see the following queries are generated by combining those scopes and the &quot;order&quot; method:

@@@ ruby
    Post.by_title.by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.order(&quot;title&quot;).order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id

    Post.order(&quot;title&quot;).by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.by_title.order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id
@@@

I don't think this is what most people would expect. I'd expect that using &quot;by_id&quot; and &quot;order('id')&quot; would be equivalent, but is not. Looks like the declared scope overrides the order but the &quot;order&quot; method chains the columns.

I'll try to investigate a bit further and provide a test case, but don't expect anything soon.

P.S: sorry if it's a duplicated bug. I've seen similar bugs about default scope and order, but thought were not the same.</original-body>
  <latest-body>Using Rails 3.0RC2 (it happened in RC1 as well) with a SQLite3 database I've noticed the following behavior under both Ruby 1.8.7 and Ruby 1.9.2.

I've got a post class with the following scopes:

@@@ ruby
    scope :by_id, order(&quot;id&quot;)
    scope :by_title, order(&quot;title&quot;)
@@@

I see the following queries are generated by combining those scopes and the &quot;order&quot; method:

@@@ ruby
    Post.by_title.by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.order(&quot;title&quot;).order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id

    Post.order(&quot;title&quot;).by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.by_title.order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id
@@@

I don't think this is what most people would expect. I'd expect that using &quot;by_id&quot; and &quot;order('id')&quot; would be equivalent, but is not. Looks like the declared scope overrides the order but the &quot;order&quot; method chains the columns.

I'll try to investigate a bit further and provide a test case, but don't expect anything soon.

P.S: sorry if it's a duplicated bug. I've seen similar bugs about default scope and order, but thought were not the same.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using Rails 3.0RC2 (it happened in RC1 as well) with a SQLite3
database I've noticed the following behavior under both Ruby 1.8.7
and Ruby 1.9.2.&lt;/p&gt;
&lt;p&gt;I've got a post class with the following scopes:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    scope :by_id, order(&quot;id&quot;)
    scope :by_title, order(&quot;title&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I see the following queries are generated by combining those
scopes and the &quot;order&quot; method:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    Post.by_title.by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.order(&quot;title&quot;).order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id

    Post.order(&quot;title&quot;).by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.by_title.order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I don't think this is what most people would expect. I'd expect
that using &quot;by_id&quot; and &quot;order('id')&quot; would be equivalent, but is
not. Looks like the declared scope overrides the order but the
&quot;order&quot; method chains the columns.&lt;/p&gt;
&lt;p&gt;I'll try to investigate a bit further and provide a test case,
but don't expect anything soon.&lt;/p&gt;
&lt;p&gt;P.S: sorry if it's a duplicated bug. I've seen similar bugs
about default scope and order, but thought were not the same.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using Rails 3.0RC2 (it happened in RC1 as well) with a SQLite3 database I've noticed the following behavior under both Ruby 1.8.7 and Ruby 1.9.2.

I've got a post class with the following scopes:

@@@ ruby
    scope :by_id, order(&quot;id&quot;)
    scope :by_title, order(&quot;title&quot;)
@@@

I see the following queries are generated by combining those scopes and the &quot;order&quot; method:

@@@ ruby
    Post.by_title.by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.order(&quot;title&quot;).order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id

    Post.order(&quot;title&quot;).by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.by_title.order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id
@@@

I don't think this is what most people would expect. I'd expect that using &quot;by_id&quot; and &quot;order('id')&quot; would be equivalent, but is not. Looks like the declared scope overrides the order but the &quot;order&quot; method chains the columns.

I'll try to investigate a bit further and provide a test case, but don't expect anything soon.

P.S: sorry if it's a duplicated bug. I've seen similar bugs about default scope and order, but thought were not the same.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using Rails 3.0RC2 (it happened in RC1 as well) with a SQLite3
database I've noticed the following behavior under both Ruby 1.8.7
and Ruby 1.9.2.&lt;/p&gt;
&lt;p&gt;I've got a post class with the following scopes:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    scope :by_id, order(&quot;id&quot;)
    scope :by_title, order(&quot;title&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I see the following queries are generated by combining those
scopes and the &quot;order&quot; method:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    Post.by_title.by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.order(&quot;title&quot;).order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id

    Post.order(&quot;title&quot;).by_id
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY id

    Post.by_title.order(&quot;id&quot;)
    SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY title, id&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I don't think this is what most people would expect. I'd expect
that using &quot;by_id&quot; and &quot;order('id')&quot; would be equivalent, but is
not. Looks like the declared scope overrides the order but the
&quot;order&quot; method chains the columns.&lt;/p&gt;
&lt;p&gt;I'll try to investigate a bit further and provide a test case,
but don't expect anything soon.&lt;/p&gt;
&lt;p&gt;P.S: sorry if it's a duplicated bug. I've seen similar bugs
about default scope and order, but thought were not the same.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-27T19:44:10+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-27T19:44:12+01:00</updated-at>
      <user-id type="integer">109290</user-id>
      <version type="integer">1</version>
      <user-name>javierm</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sooner than I expected, here's the failing test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sooner than I expected, here's the failing test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-27T23:05:56+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-27T23:05:58+01:00</updated-at>
      <user-id type="integer">109290</user-id>
      <version type="integer">2</version>
      <user-name>javierm</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-27T23:48:38+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-27T23:48:43+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;new nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;discount nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl hockey jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;new nhl hockey
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;discount nhl hockey
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T04:42:08+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-28T04:43:36+01:00</updated-at>
      <user-id type="integer">113493</user-id>
      <version type="integer">4</version>
      <user-name>axxjz</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Cheap nhl jersey
Everyone like goods with high quality and low price..So good and &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; is welcome in north America.Canada regards ice hockey as country ball.Most Canadiens like to wear &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; and play ice hockey. Team canada win 2010 olympic gold so that &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jersey&lt;/a&gt; sell better in Canada. On the street you can often see &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jersey&lt;/a&gt;. How do Canadiens buy &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt;?They buy &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; from abroad especial form China.China can provide good and &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; so that many Canadiens even retails buy &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; from China.The reason China can provide &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; is that there are very inexpensive labour to produce &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jerseys&lt;/a&gt;. In Canada there are many retailers who sell &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt;.Not only &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; provide many jobs for Canadiens,but also Chinese live on producing and selling &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt;.I find a good net for selling &lt;a href=&quot;http://nhljersey.blog.com/wp-admin/cheap%20nhl%20jersey&quot;&gt;cheap nhl jersey&lt;/a&gt; .The web is &lt;strong&gt;&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;http://www.nhlonlineshop.com&lt;/a&gt;).&lt;/strong&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cheap nhl jersey&lt;br&gt;
Everyone like goods with high quality and low price..So good and
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; is
welcome in north America.Canada regards ice hockey as country
ball.Most Canadiens like to wear &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; and play ice
hockey. Team canada win 2010 olympic gold so that &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jersey&lt;/a&gt; sell better in
Canada. On the street you can often see &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jersey&lt;/a&gt;. How do Canadiens
buy &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl
jersey&lt;/a&gt;?They buy &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap
nhl jersey&lt;/a&gt; from abroad especial form China.China can provide
good and &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl
jersey&lt;/a&gt; so that many Canadiens even retails buy &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; from China.The
reason China can provide &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt; is that there
are very inexpensive labour to produce &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jerseys&lt;/a&gt;. In Canada there
are many retailers who sell &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt;.Not only
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl jersey&lt;/a&gt;
provide many jobs for Canadiens,but also Chinese live on producing
and selling &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;cheap nhl
jersey&lt;/a&gt;.I find a good net for selling &lt;a href=
&quot;http://nhljersey.blog.com/wp-admin/cheap%20nhl%20jersey&quot;&gt;cheap nhl
jersey&lt;/a&gt; .The web is &lt;strong&gt;&lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;http://www.nhlonlineshop.com&lt;/a&gt;).&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T04:42:21+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-28T04:43:51+01:00</updated-at>
      <user-id type="integer">113493</user-id>
      <version type="integer">5</version>
      <user-name>axxjz</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have a fix for this one. However my fix is breaking a number of tests. Here I am discussing one of the tests that is failing because of my fix.

Let's start from the beginning. We have a model which looks like this.

@@@ ruby
class DeveloperOrderedBySalary &lt; ActiveRecord::Base
  self.table_name = 'developers'
  default_scope :order =&gt; 'salary DESC'
  scope :by_name, :order =&gt; 'name DESC'
  scope :reordered_by_name, reorder('name DESC')

  def self.all_ordered_by_name
    with_scope(:find =&gt; { :order =&gt; 'name DESC' }) do
      find(:all)
    end
  end
end
@@@

Now the question is what kind of sql should be generated for the following case

@@@ ruby
DeveloperOrderedBySalary.all_ordered_by_name
@@@

The existing rails edge code would produce following sql

@@@ ruby
SELECT &quot;developers&quot;.* FROM &quot;developers&quot; ORDER BY name DESC
@@@

I also happen to think that above sql is wrong. It is wrong because it does not take into account the default_scope. default_scope is always applied as the very first thing. And if the default_scope dictates order then that order should be followed. Notice that with_scope obeys default_scope in general, but in this case with_cope is NOT obeying default_scope.

After my fix the sql generated is 

@@@ ruby
SELECT &quot;developers&quot;.* FROM &quot;developers&quot; ORDER BY salary DESC, name DESC
@@@

As I said earlier my fix for this issue is breaking a lot of tests similar to the case illustrated. I would like to have an opinion from a core team member on this topic.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a fix for this one. However my fix is breaking a number
of tests. Here I am discussing one of the tests that is failing
because of my fix.&lt;/p&gt;
&lt;p&gt;Let's start from the beginning. We have a model which looks like
this.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class DeveloperOrderedBySalary &amp;lt; ActiveRecord::Base
  self.table_name = 'developers'
  default_scope :order =&amp;gt; 'salary DESC'
  scope :by_name, :order =&amp;gt; 'name DESC'
  scope :reordered_by_name, reorder('name DESC')

  def self.all_ordered_by_name
    with_scope(:find =&amp;gt; { :order =&amp;gt; 'name DESC' }) do
      find(:all)
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now the question is what kind of sql should be generated for the
following case&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;DeveloperOrderedBySalary.all_ordered_by_name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The existing rails edge code would produce following sql&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;SELECT &quot;developers&quot;.* FROM &quot;developers&quot; ORDER BY name DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I also happen to think that above sql is wrong. It is wrong
because it does not take into account the default_scope.
default_scope is always applied as the very first thing. And if the
default_scope dictates order then that order should be followed.
Notice that with_scope obeys default_scope in general, but in this
case with_cope is NOT obeying default_scope.&lt;/p&gt;
&lt;p&gt;After my fix the sql generated is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;SELECT &quot;developers&quot;.* FROM &quot;developers&quot; ORDER BY salary DESC, name DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As I said earlier my fix for this issue is breaking a lot of
tests similar to the case illustrated. I would like to have an
opinion from a core team member on this topic.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T04:49:56+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-28T04:49:58+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">6</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Current behavior in rails 2-3-stable is

@@@ ruby
class User &lt; ActiveRecord::Base
  default_scope  :order =&gt; 'created_at desc'

  named_scope :custom, :order =&gt; 'name desc'
end

&gt; User.all
SELECT * FROM &quot;users&quot; ORDER BY created_at desc

&gt; User.custom
SELECT * FROM &quot;users&quot; ORDER BY name desc
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Current behavior in rails 2-3-stable is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  default_scope  :order =&amp;gt; 'created_at desc'

  named_scope :custom, :order =&amp;gt; 'name desc'
end

&amp;gt; User.all
SELECT * FROM &quot;users&quot; ORDER BY created_at desc

&amp;gt; User.custom
SELECT * FROM &quot;users&quot; ORDER BY name desc&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:12:51+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-28T22:12:53+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Neeraj only to write a bit of the progress we did on this. We have a patch and Neeraj is writing some tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj only to write a bit of the progress we did on this. We
have a patch and Neeraj is writing some tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-29T01:15:08+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 71472
:assigned_user: 40263
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-29T01:15:11+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27625)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27625&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T04:10:34+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-08-30T04:10:34+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fixed here http://github.com/rails/rails/commit/c07f0ae52ecf9a45116e1b6ab422e0af9f2c1ada</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed here &lt;a href=
&quot;http://github.com/rails/rails/commit/c07f0ae52ecf9a45116e1b6ab422e0af9f2c1ada&quot;&gt;
http://github.com/rails/rails/commit/c07f0ae52ecf9a45116e1b6ab422e0...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-01T01:38:16+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-09-01T01:38:20+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:02:02+01:00</created-at>
      <creator-id type="integer">109290</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 82861
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5479</number>
      <permalink>inconsistent-behavior-using-order-in-scopes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3&quot;</tag>
      <title>Inconsistent behavior using &quot;order&quot; in scopes</title>
      <updated-at type="datetime">2010-10-15T23:02:02+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">11</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>javierm</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5479</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e4e66f4e459242fcc45b05e9837fab1150bddddf</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-27T23:05:56+01:00</created-at>
      <filename>order_scope.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649210</id>
      <size type="integer">663</size>
      <uploader-id type="integer">109290</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649210/order_scope.diff</url>
    </attachment>
  </attachments>
</ticket>
