From 59ef216f07ebdf80003f940e5a22eb3b383ebdd2 Mon Sep 17 00:00:00 2001
From: Zach Dennis <zach.dennis@gmail.com>
Date: Tue, 30 Sep 2008 11:02:45 -0400
Subject: [PATCH] Made respond_to implicit when directly referring to the format from inside a controller action. (Zach Dennis / Brandon Keepers)

---
 actionpack/lib/action_controller/base.rb         |    7 ++++-
 actionpack/test/controller/mime_responds_test.rb |   33 ++++++++++++++++++---
 2 files changed, 34 insertions(+), 6 deletions(-)

diff --git a/actionpack/lib/action_controller/base.rb b/actionpack/lib/action_controller/base.rb
index 457b9e8..53ffed1 100644
--- a/actionpack/lib/action_controller/base.rb
+++ b/actionpack/lib/action_controller/base.rb
@@ -867,7 +867,6 @@ module ActionController #:nodoc:
 
         response.layout = layout = pick_layout(options)
         logger.info("Rendering template within #{layout}") if logger && layout
-
         if content_type = options[:content_type]
           response.content_type = content_type.to_s
         end
@@ -1117,6 +1116,11 @@ module ActionController #:nodoc:
 
 
     private
+
+      def format
+        @responder ||= ActionController::MimeResponds::Responder.new(self)
+      end
+
       def render_for_file(template_path, status = nil, layout = nil, locals = {}) #:nodoc:
         logger.info("Rendering #{template_path}" + (status ? " (#{status})" : '')) if logger
         render_for_text @template.render(:file => template_path, :locals => locals, :layout => layout), status
@@ -1177,6 +1181,7 @@ module ActionController #:nodoc:
       def perform_action
         if action_methods.include?(action_name)
           send(action_name)
+          @responder.respond if @responder
           default_render unless performed?
         elsif respond_to? :method_missing
           method_missing action_name
diff --git a/actionpack/test/controller/mime_responds_test.rb b/actionpack/test/controller/mime_responds_test.rb
index 0d508eb..16f8139 100644
--- a/actionpack/test/controller/mime_responds_test.rb
+++ b/actionpack/test/controller/mime_responds_test.rb
@@ -2,6 +2,11 @@ require 'abstract_unit'
 
 class RespondToController < ActionController::Base
   layout :set_layout
+  
+  def format_without_respond_to
+    format.html { render :text => "HTML"    }
+    format.xml  { render :text => "XML"     }
+  end
 
   def html_xml_or_rss
     respond_to do |type|
@@ -180,25 +185,43 @@ class MimeControllerTest < Test::Unit::TestCase
     @request.accept = "text/html"
     get :js_or_html
     assert_equal 'HTML', @response.body
-
+  
     get :html_or_xml
     assert_equal 'HTML', @response.body
-
+  
     get :just_xml
     assert_response 406
   end
-
+  
   def test_all
     @request.accept = "*/*"
     get :js_or_html
     assert_equal 'HTML', @response.body # js is not part of all
-
+  
     get :html_or_xml
     assert_equal 'HTML', @response.body
-
+  
     get :just_xml
     assert_equal 'XML', @response.body
   end
+  
+  def test_all_with_implicit_respond_to
+    @request.accept = "*/*"
+    get :format_without_respond_to
+    assert_equal 'HTML', @response.body # js is not part of all
+  end
+  
+  def test_without_implicit_respond_to_for_first_format
+    @request.accept = "text/html"
+    get :format_without_respond_to
+    assert_equal 'HTML', @response.body
+  end
+  
+  def test_without_implicit_respond_to_for_second_format
+    @request.accept = "application/xml"
+    get :format_without_respond_to
+    assert_equal 'XML', @response.body    
+  end
 
   def test_xml
     @request.accept = "application/xml"
-- 
1.6.0.1

