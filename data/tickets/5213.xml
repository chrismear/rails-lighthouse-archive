<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-27T17:39:52+01:00</created-at>
  <creator-id type="integer">109030</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5213</number>
  <permalink>formhelpers-generating-form-with-method-put-for-activerecord-object-even-after-it-got-deleted</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord formhelper</tag>
  <title>FormHelpers generating form with method put for ActiveRecord object even after it got deleted</title>
  <updated-at type="datetime">2011-02-02T17:07:59+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Vinay Patel</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5213</url>
  <priority-name nil="true"></priority-name>
  <original-body>- i use form_for @order in my views and for orders/new it has method post. which is good.
- when form is submitted, on the controller side the @order.save happens and in the after_save *self.destroy* is called for some reason.
- i need the same @order as i need to lookup .errors on this object, so i keep using it. 
- i redirect to orders/new with the same @orders.
- but i would expect that the form_for generates a form with method *post* and not with *put* as i had called a destroy on it.</original-body>
  <latest-body>- i use form_for @order in my views and for orders/new it has method post. which is good.
- when form is submitted, on the controller side the @order.save happens and in the after_save *self.destroy* is called for some reason.
- i need the same @order as i need to lookup .errors on this object, so i keep using it. 
- i redirect to orders/new with the same @orders.
- but i would expect that the form_for generates a form with method *post* and not with *put* as i had called a destroy on it.</latest-body>
  <original-body-html>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;i use form_for @order in my views and for orders/new it has
method post. which is good.&lt;/li&gt;
&lt;li&gt;when form is submitted, on the controller side the @order.save
happens and in the after_save &lt;em&gt;self.destroy&lt;/em&gt; is called for
some reason.&lt;/li&gt;
&lt;li&gt;i need the same @order as i need to lookup .errors on this
object, so i keep using it.&lt;/li&gt;
&lt;li&gt;i redirect to orders/new with the same @orders.&lt;/li&gt;
&lt;li&gt;but i would expect that the form_for generates a form with
method &lt;em&gt;post&lt;/em&gt; and not with &lt;em&gt;put&lt;/em&gt; as i had called a
destroy on it.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>- i use form_for @order in my views and for orders/new it has method post. which is good.
- when form is submitted, on the controller side the @order.save happens and in the after_save *self.destroy* is called for some reason.
- i need the same @order as i need to lookup .errors on this object, so i keep using it. 
- i redirect to orders/new with the same @orders.
- but i would expect that the form_for generates a form with method *post* and not with *put* as i had called a destroy on it.</body>
      <body-html>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;i use form_for @order in my views and for orders/new it has
method post. which is good.&lt;/li&gt;
&lt;li&gt;when form is submitted, on the controller side the @order.save
happens and in the after_save &lt;em&gt;self.destroy&lt;/em&gt; is called for
some reason.&lt;/li&gt;
&lt;li&gt;i need the same @order as i need to lookup .errors on this
object, so i keep using it.&lt;/li&gt;
&lt;li&gt;i redirect to orders/new with the same @orders.&lt;/li&gt;
&lt;li&gt;but i would expect that the form_for generates a form with
method &lt;em&gt;post&lt;/em&gt; and not with &lt;em&gt;put&lt;/em&gt; as i had called a
destroy on it.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T13:51:09+01:00</created-at>
      <creator-id type="integer">109030</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5213</number>
      <permalink>formhelpers-generating-form-with-method-put-for-activerecord-object-even-after-it-got-deleted</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord formhelper</tag>
      <title>FormHelpers generating form with method put for ActiveRecord object even after it got deleted</title>
      <updated-at type="datetime">2010-07-27T13:51:13+01:00</updated-at>
      <user-id type="integer">109030</user-id>
      <version type="integer">1</version>
      <user-name>Vinay Patel</user-name>
      <creator-name>Vinay Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5213</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The most cool online shoes shop where you can find the most fashion designers shoes, include
&lt;a href='http://www.fashionshoesmart.com'&gt;Manolo Blahnik Shoes&lt;/a&gt;, &lt;a href='http://www.fashionshoesmart.com'&gt;Jimmy Choo Shoes&lt;/a&gt;, Christian Louboutin shoes and more. 
we offer high quality highheels at low price.

Simple ways to love your wardrobe.
An online shop specializing in &lt;a href='http://www.hervelegerbrand.com'&gt;Herve Leger&lt;/a&gt;, Herve Leger Dress, Herve Leger Skirt, 
Herve Leger Sale, Herve Leger Dresses.All new style in our store.

Shop the latest styles &lt;a href='http://www.juicyshoponline.com'&gt;Juicy Couture&lt;/a&gt; handbags, juicy couture tracksuit.
Juicy couture sale, juicy couture outlet,100% quality guarantee.

FashionStyleOnsale offer high quality Moncler Jackets at low price. 
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler Coats at FashionStyleOnsale
&lt;a href='http://www.fashionstyleonsale.com'&gt;moncler&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;The most cool online shoes shop where you can find the most
fashion designers shoes, include&lt;br&gt;
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Manolo Blahnik Shoes&lt;/a&gt;,
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Jimmy Choo Shoes&lt;/a&gt;,
Christian Louboutin shoes and more.&lt;br&gt;
we offer high quality highheels at low price.&lt;/p&gt;
&lt;p&gt;Simple ways to love your wardrobe.&lt;br&gt;
An online shop specializing in &lt;a href=
&quot;http://www.hervelegerbrand.com&quot;&gt;Herve Leger&lt;/a&gt;, Herve Leger
Dress, Herve Leger Skirt,&lt;br&gt;
Herve Leger Sale, Herve Leger Dresses.All new style in our
store.&lt;/p&gt;
&lt;p&gt;Shop the latest styles &lt;a href=
&quot;http://www.juicyshoponline.com&quot;&gt;Juicy Couture&lt;/a&gt; handbags, juicy
couture tracksuit.&lt;br&gt;
Juicy couture sale, juicy couture outlet,100% quality
guarantee.&lt;/p&gt;
&lt;p&gt;FashionStyleOnsale offer high quality Moncler Jackets at low
price.&lt;br&gt;
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler
Coats at FashionStyleOnsale&lt;br&gt;
&lt;a href=&quot;http://www.fashionstyleonsale.com&quot;&gt;moncler&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T15:07:50+01:00</created-at>
      <creator-id type="integer">109030</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5213</number>
      <permalink>formhelpers-generating-form-with-method-put-for-activerecord-object-even-after-it-got-deleted</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord formhelper</tag>
      <title>FormHelpers generating form with method put for ActiveRecord object even after it got deleted</title>
      <updated-at type="datetime">2010-07-27T17:39:52+01:00</updated-at>
      <user-id type="integer">109040</user-id>
      <version type="integer">2</version>
      <user-name>matin</user-name>
      <creator-name>Vinay Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5213</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't really understand what you are doing, but if you object responds true to the persisted? method, it will use the :put method, and if your object responds (or doesn't respond at all) to persisted? with false, it will use the :post method

Could you past your code? Is it really a rails bug? What version of ruby are you using? what version of rails?

Thx</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't really understand what you are doing, but if you object
responds true to the persisted? method, it will use the :put
method, and if your object responds (or doesn't respond at all) to
persisted? with false, it will use the :post method&lt;/p&gt;
&lt;p&gt;Could you past your code? Is it really a rails bug? What version
of ruby are you using? what version of rails?&lt;/p&gt;
&lt;p&gt;Thx&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T21:05:23+01:00</created-at>
      <creator-id type="integer">109030</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5213</number>
      <permalink>formhelpers-generating-form-with-method-put-for-activerecord-object-even-after-it-got-deleted</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord formhelper</tag>
      <title>FormHelpers generating form with method put for ActiveRecord object even after it got deleted</title>
      <updated-at type="datetime">2010-07-27T21:05:25+01:00</updated-at>
      <user-id type="integer">51953</user-id>
      <version type="integer">3</version>
      <user-name>rorra</user-name>
      <creator-name>Vinay Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5213</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:34:47+00:00</created-at>
      <creator-id type="integer">109030</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5213</number>
      <permalink>formhelpers-generating-form-with-method-put-for-activerecord-object-even-after-it-got-deleted</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord formhelper</tag>
      <title>FormHelpers generating form with method put for ActiveRecord object even after it got deleted</title>
      <updated-at type="datetime">2011-02-02T17:07:40+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Vinay Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5213</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:34:48+00:00</created-at>
      <creator-id type="integer">109030</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5213</number>
      <permalink>formhelpers-generating-form-with-method-put-for-activerecord-object-even-after-it-got-deleted</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord formhelper</tag>
      <title>FormHelpers generating form with method put for ActiveRecord object even after it got deleted</title>
      <updated-at type="datetime">2011-02-02T17:07:59+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Vinay Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5213</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
