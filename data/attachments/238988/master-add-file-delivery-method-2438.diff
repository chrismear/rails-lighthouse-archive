From 9fcfae789cf645fa3653a3e34ba70b26de79e636 Mon Sep 17 00:00:00 2001
From: Eric Davis <edavis@littlestreamsoftware.com>
Date: Fri, 7 Aug 2009 20:56:54 -0700
Subject: [PATCH] [#2438] Adds a :file delivery_method to save email to a file on disk

---
 actionmailer/lib/action_mailer/base.rb    |   22 +++++++++++++++++++++-
 actionmailer/test/delivery_method_test.rb |   22 ++++++++++++++++++++++
 actionmailer/test/mail_service_test.rb    |   12 ++++++++++++
 3 files changed, 55 insertions(+), 1 deletions(-)

diff --git a/actionmailer/lib/action_mailer/base.rb b/actionmailer/lib/action_mailer/base.rb
index d01f561..5ecefe7 100644
--- a/actionmailer/lib/action_mailer/base.rb
+++ b/actionmailer/lib/action_mailer/base.rb
@@ -1,3 +1,5 @@
+require 'tmpdir'
+
 require "active_support/core_ext/class"
 # Use the old layouts until actionmailer gets refactored
 require "action_controller/legacy/layout"
@@ -224,9 +226,13 @@ module ActionMailer #:nodoc:
   #   * <tt>:location</tt> - The location of the sendmail executable. Defaults to <tt>/usr/sbin/sendmail</tt>.
   #   * <tt>:arguments</tt> - The command line arguments. Defaults to <tt>-i -t</tt>.
   #
+  # * <tt>file_settings</tt> - Allows you to override options for the <tt>:file</tt> delivery method.
+  #   * <tt>:location</tt> - The directory into which emails will be written. Defaults to the application <tt>tmp/mails</tt>.
+  #
   # * <tt>raise_delivery_errors</tt> - Whether or not errors should be raised if the email fails to be delivered.
   #
-  # * <tt>delivery_method</tt> - Defines a delivery method. Possible values are <tt>:smtp</tt> (default), <tt>:sendmail</tt>, and <tt>:test</tt>.
+  # * <tt>delivery_method</tt> - Defines a delivery method. Possible values are <tt>:smtp</tt> (default), <tt>:sendmail</tt>, <tt>:test</tt>,
+  #   and <tt>:file</tt>.
   #
   # * <tt>perform_deliveries</tt> - Determines whether <tt>deliver_*</tt> methods are actually carried out. By default they are,
   #   but this can be turned off to help functional testing.
@@ -279,6 +285,12 @@ module ActionMailer #:nodoc:
     }
     cattr_accessor :sendmail_settings
 
+    @@file_settings = {
+      :location       => defined?(Rails) ? "#{Rails.root}/tmp/mails" : "#{Dir.tmpdir}/mails"
+    }
+
+    cattr_accessor :file_settings
+
     @@raise_delivery_errors = true
     cattr_accessor :raise_delivery_errors
 
@@ -724,6 +736,14 @@ module ActionMailer #:nodoc:
       def perform_delivery_test(mail)
         deliveries << mail
       end
+
+      def perform_delivery_file(mail)
+        FileUtils.mkdir_p file_settings[:location]
+
+        (mail.to + mail.cc + mail.bcc).uniq.each do |to|
+          File.open(File.join(file_settings[:location], to), 'a') { |f| f.write(mail) }
+        end
+      end
   end
 
   Base.class_eval do
diff --git a/actionmailer/test/delivery_method_test.rb b/actionmailer/test/delivery_method_test.rb
index 0731512..2b2ec4b 100644
--- a/actionmailer/test/delivery_method_test.rb
+++ b/actionmailer/test/delivery_method_test.rb
@@ -7,6 +7,10 @@ class NonDefaultDeliveryMethodMailer < ActionMailer::Base
   self.delivery_method = :sendmail
 end
 
+class FileDeliveryMethodMailer < ActionMailer::Base
+  self.delivery_method = :file
+end
+
 class ActionMailerBase_delivery_method_Test < Test::Unit::TestCase
   def setup
     set_delivery_method :smtp
@@ -49,3 +53,21 @@ class NonDefaultDeliveryMethodMailer_delivery_method_Test < Test::Unit::TestCase
   end
 end
 
+class FileDeliveryMethodMailer_delivery_method_Test < Test::Unit::TestCase
+  def setup
+    set_delivery_method :smtp
+  end
+  
+  def teardown
+    restore_delivery_method
+  end
+
+  def test_should_be_the_set_delivery_method
+    assert_equal :file, FileDeliveryMethodMailer.delivery_method
+  end
+
+  def test_should_default_location_to_the_tmpdir
+    assert_equal "#{Dir.tmpdir}/mails", ActionMailer::Base.file_settings[:location]
+  end
+end
+
diff --git a/actionmailer/test/mail_service_test.rb b/actionmailer/test/mail_service_test.rb
index 828661c..008ca49 100644
--- a/actionmailer/test/mail_service_test.rb
+++ b/actionmailer/test/mail_service_test.rb
@@ -889,6 +889,18 @@ EOF
     assert_no_match %r{^Bcc: root@loudthinking.com}, MockSMTP.deliveries[0][0]
   end
 
+   def test_file_delivery_should_create_a_file
+     ActionMailer::Base.delivery_method = :file
+     tmp_location = ActionMailer::Base.file_settings[:location]
+
+     TestMailer.deliver_cc_bcc(@recipient)
+     assert File.exists? tmp_location
+     assert File.directory? tmp_location
+     assert File.exists? File.join(tmp_location, @recipient)
+     assert File.exists? File.join(tmp_location, 'nobody@loudthinking.com')
+     assert File.exists? File.join(tmp_location, 'root@loudthinking.com')
+   end
+
   def test_recursive_multipart_processing
     fixture = File.read(File.dirname(__FILE__) + "/fixtures/raw_email7")
     mail = TMail::Mail.parse(fixture)
-- 
1.6.3.3

