<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-08T12:16:05+00:00</created-at>
  <creator-id type="integer">18096</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4142</number>
  <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>&quot;arel activerecord bug rails3&quot;</tag>
  <title>arel methods in scope cause issues with non-existent tables</title>
  <updated-at type="datetime">2011-02-08T12:16:05+00:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">6</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Clemens Kofler</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Medium</priority-name>
  <original-body>While working on a Rails 3 project, I've stumbled across an issue concerning the use of arel methods in scopes instead of the soon to be deprecated hash syntax. The issue arises if a model's table doesn't exist yet but the model is being loaded as part of the environment &#8211; which, for example, happens if an observer is defined on said model or if initializers load/extend a model.

@@@ ruby
# app/models/post.rb
class Post &lt; ActiveRecord::Base
  scope :published, where(:published =&gt; true)
end

# app/observers/post_observer.rb
class PostObserver &lt; ActiveRecord::Observer
  observe :post
end

# config/application.rb
config.active_record.observers = [:post_observer]
@@@

Now, if the posts table doesn't exist yet, whenever you load the environment you'll get &quot;Could not find table 'posts'&quot;. And you can't migrate because that needs to load the environment, too.

A simple way to recreate this without having to define an observer is to just do require 'post' somewhere in the environment or in an initializer.

I don't know much about arel yet but judging from the stack trace, I think that maybe arel tries to load the table structure too early. If so, maybe this could be deferred until evaluation?

I'll try to investigate a bit and see if I can find a solution for this issue.

In the meantime, here's the relevant bit of the stack trace:

/Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:306:in `table_structure': Could not find table 'posts' (ActiveRecord::StatementInvalid)
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:201:in `columns'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `send'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `method_missing'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:47:in `columns'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:25:in `attributes'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:99:in `find_attribute_matching_name'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:89:in `[]'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:23:in `build_from_hash'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:185:in `map'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `each'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `map'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `build_from_hash'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:191:in `build_where'
	from (eval):3:in `where'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `__send__'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `where'
	from /Users/clemens/tmp/scopes/app/models/post.rb:2</original-body>
  <latest-body>While working on a Rails 3 project, I've stumbled across an issue concerning the use of arel methods in scopes instead of the soon to be deprecated hash syntax. The issue arises if a model's table doesn't exist yet but the model is being loaded as part of the environment &#8211; which, for example, happens if an observer is defined on said model or if initializers load/extend a model.

@@@ ruby
# app/models/post.rb
class Post &lt; ActiveRecord::Base
  scope :published, where(:published =&gt; true)
end

# app/observers/post_observer.rb
class PostObserver &lt; ActiveRecord::Observer
  observe :post
end

# config/application.rb
config.active_record.observers = [:post_observer]
@@@

Now, if the posts table doesn't exist yet, whenever you load the environment you'll get &quot;Could not find table 'posts'&quot;. And you can't migrate because that needs to load the environment, too.

A simple way to recreate this without having to define an observer is to just do require 'post' somewhere in the environment or in an initializer.

I don't know much about arel yet but judging from the stack trace, I think that maybe arel tries to load the table structure too early. If so, maybe this could be deferred until evaluation?

I'll try to investigate a bit and see if I can find a solution for this issue.

In the meantime, here's the relevant bit of the stack trace:

/Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:306:in `table_structure': Could not find table 'posts' (ActiveRecord::StatementInvalid)
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:201:in `columns'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `send'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `method_missing'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:47:in `columns'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:25:in `attributes'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:99:in `find_attribute_matching_name'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:89:in `[]'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:23:in `build_from_hash'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:185:in `map'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `each'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `map'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `build_from_hash'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:191:in `build_where'
	from (eval):3:in `where'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `__send__'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `where'
	from /Users/clemens/tmp/scopes/app/models/post.rb:2</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;While working on a Rails 3 project, I've stumbled across an
issue concerning the use of arel methods in scopes instead of the
soon to be deprecated hash syntax. The issue arises if a model's
table doesn't exist yet but the model is being loaded as part of
the environment &amp;ndash; which, for example, happens if an observer
is defined on said model or if initializers load/extend a
model.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# app/models/post.rb
class Post &amp;lt; ActiveRecord::Base
  scope :published, where(:published =&amp;gt; true)
end

# app/observers/post_observer.rb
class PostObserver &amp;lt; ActiveRecord::Observer
  observe :post
end

# config/application.rb
config.active_record.observers = [:post_observer]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, if the posts table doesn't exist yet, whenever you load the
environment you'll get &quot;Could not find table 'posts'&quot;. And you
can't migrate because that needs to load the environment, too.&lt;/p&gt;
&lt;p&gt;A simple way to recreate this without having to define an
observer is to just do require 'post' somewhere in the environment
or in an initializer.&lt;/p&gt;
&lt;p&gt;I don't know much about arel yet but judging from the stack
trace, I think that maybe arel tries to load the table structure
too early. If so, maybe this could be deferred until
evaluation?&lt;/p&gt;
&lt;p&gt;I'll try to investigate a bit and see if I can find a solution
for this issue.&lt;/p&gt;
&lt;p&gt;In the meantime, here's the relevant bit of the stack trace:&lt;/p&gt;
&lt;p&gt;
/Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:306:in
&lt;code&gt;table_structure': Could not find table 'posts'
(ActiveRecord::StatementInvalid)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:201:in `columns'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `send'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `method_missing'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:47:in `columns'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:25:in `attributes'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:99:in `find_attribute_matching_name'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:89:in `[]'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:23:in `build_from_hash'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:185:in `map'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `each'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `map'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `build_from_hash'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:191:in `build_where'
from (eval):3:in `where'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `__send__'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `where'
from /Users/clemens/tmp/scopes/app/models/post.rb:2&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While working on a Rails 3 project, I've stumbled across an issue concerning the use of arel methods in scopes instead of the soon to be deprecated hash syntax. The issue arises if a model's table doesn't exist yet but the model is being loaded as part of the environment &#8211; which, for example, happens if an observer is defined on said model or if initializers load/extend a model.

@@@ ruby
# app/models/post.rb
class Post &lt; ActiveRecord::Base
  scope :published, where(:published =&gt; true)
end

# app/observers/post_observer.rb
class PostObserver &lt; ActiveRecord::Observer
  observe :post
end

# config/application.rb
config.active_record.observers = [:post_observer]
@@@

Now, if the posts table doesn't exist yet, whenever you load the environment you'll get &quot;Could not find table 'posts'&quot;. And you can't migrate because that needs to load the environment, too.

A simple way to recreate this without having to define an observer is to just do require 'post' somewhere in the environment or in an initializer.

I don't know much about arel yet but judging from the stack trace, I think that maybe arel tries to load the table structure too early. If so, maybe this could be deferred until evaluation?

I'll try to investigate a bit and see if I can find a solution for this issue.

In the meantime, here's the relevant bit of the stack trace:

/Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:306:in `table_structure': Could not find table 'posts' (ActiveRecord::StatementInvalid)
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:201:in `columns'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `send'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `method_missing'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:47:in `columns'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:25:in `attributes'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:99:in `find_attribute_matching_name'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:89:in `[]'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:23:in `build_from_hash'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:185:in `map'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `each'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `map'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `build_from_hash'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:191:in `build_where'
	from (eval):3:in `where'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `__send__'
	from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `where'
	from /Users/clemens/tmp/scopes/app/models/post.rb:2</body>
      <body-html>&lt;div&gt;&lt;p&gt;While working on a Rails 3 project, I've stumbled across an
issue concerning the use of arel methods in scopes instead of the
soon to be deprecated hash syntax. The issue arises if a model's
table doesn't exist yet but the model is being loaded as part of
the environment &amp;ndash; which, for example, happens if an observer
is defined on said model or if initializers load/extend a
model.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# app/models/post.rb
class Post &amp;lt; ActiveRecord::Base
  scope :published, where(:published =&amp;gt; true)
end

# app/observers/post_observer.rb
class PostObserver &amp;lt; ActiveRecord::Observer
  observe :post
end

# config/application.rb
config.active_record.observers = [:post_observer]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, if the posts table doesn't exist yet, whenever you load the
environment you'll get &quot;Could not find table 'posts'&quot;. And you
can't migrate because that needs to load the environment, too.&lt;/p&gt;
&lt;p&gt;A simple way to recreate this without having to define an
observer is to just do require 'post' somewhere in the environment
or in an initializer.&lt;/p&gt;
&lt;p&gt;I don't know much about arel yet but judging from the stack
trace, I think that maybe arel tries to load the table structure
too early. If so, maybe this could be deferred until
evaluation?&lt;/p&gt;
&lt;p&gt;I'll try to investigate a bit and see if I can find a solution
for this issue.&lt;/p&gt;
&lt;p&gt;In the meantime, here's the relevant bit of the stack trace:&lt;/p&gt;
&lt;p&gt;
/Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:306:in
&lt;code&gt;table_structure': Could not find table 'posts'
(ActiveRecord::StatementInvalid)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/connection_adapters/sqlite_adapter.rb:201:in `columns'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `send'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/engine.rb:17:in `method_missing'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:47:in `columns'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/engines/sql/relations/table.rb:25:in `attributes'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:99:in `find_attribute_matching_name'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/arel-0.2.1/lib/arel/algebra/relations/relation.rb:89:in `[]'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:23:in `build_from_hash'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:185:in `map'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `each'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `map'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/predicate_builder.rb:9:in `build_from_hash'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/relation/query_methods.rb:191:in `build_where'
from (eval):3:in `where'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `__send__'
from /Users/clemens/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta/lib/active_record/base.rb:561:in `where'
from /Users/clemens/tmp/scopes/app/models/post.rb:2&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-10T10:02:13+00:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4142</number>
      <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel activerecord bug rails3&quot;</tag>
      <title>arel methods in scope cause issues with non-existent tables</title>
      <updated-at type="datetime">2010-03-10T10:02:15+00:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">1</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-10T10:04:07+00:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4142</number>
      <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel activerecord bug rails3&quot;</tag>
      <title>arel methods in scope cause issues with non-existent tables</title>
      <updated-at type="datetime">2010-03-10T10:04:12+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>http://github.com/rails/rails/commit/181c414baa877d748671d03fb09499c10f81ec02</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/181c414baa877d748671d03fb09499c10f81ec02&quot;&gt;
http://github.com/rails/rails/commit/181c414baa877d748671d03fb09499...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-10T11:33:55+00:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4142</number>
      <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;arel activerecord bug rails3&quot;</tag>
      <title>arel methods in scope cause issues with non-existent tables</title>
      <updated-at type="datetime">2010-03-10T11:34:00+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I modified Arel so it doesn't raise an exception if table/columns doesn't exists: 

http://github.com/rails/arel/commit/b706f690b611d647aae15a85caa19d167814ae3c

A patch to make use of this in AR is attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I modified Arel so it doesn't raise an exception if
table/columns doesn't exists:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/arel/commit/b706f690b611d647aae15a85caa19d167814ae3c&quot;&gt;
http://github.com/rails/arel/commit/b706f690b611d647aae15a85caa19d1...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A patch to make use of this in AR is attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-10T21:24:10+00:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4142</number>
      <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;arel activerecord bug rails3&quot;</tag>
      <title>arel methods in scope cause issues with non-existent tables</title>
      <updated-at type="datetime">2010-03-10T21:24:16+00:00</updated-at>
      <user-id type="integer">16138</user-id>
      <version type="integer">4</version>
      <user-name>Emilio Tagua</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [e08c153a08a0af79b36853c0ad8bb6e916ca3e66]) Arel now fallback to using Arel::Attribute if the table/column doesn't exists.

[#4142 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/e08c153a08a0af79b36853c0ad8bb6e916ca3e66</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/e08c153a08a0af79b36853c0ad8bb6e916ca3e66&quot;
title=
&quot;Changeset [e08c153a08a0af79b36853c0ad8bb6e916ca3e66]&quot;&gt;[e08c153a08a0af79b36853c0ad8bb6e916ca3e66]&lt;/a&gt;)
Arel now fallback to using Arel::Attribute if the table/column
doesn't exists.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4142&quot; title=
&quot;Ticket #4142&quot;&gt;#4142&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/e08c153a08a0af79b36853c0ad8bb6e916ca3e66&quot;&gt;
http://github.com/rails/rails/commit/e08c153a08a0af79b36853c0ad8bb6...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-10T21:49:18+00:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4142</number>
      <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;arel activerecord bug rails3&quot;</tag>
      <title>arel methods in scope cause issues with non-existent tables</title>
      <updated-at type="datetime">2010-03-10T21:49:19+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:47+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4142</number>
      <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;arel activerecord bug rails3&quot;</tag>
      <title>arel methods in scope cause issues with non-existent tables</title>
      <updated-at type="datetime">2010-10-15T23:01:47+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>thank you very much......&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/&quot;&gt;&#1605;&#1606;&#1578;&#1583;&#1610;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&#1605;&#1603;&#1610;&#1575;&#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1575;&#1586;&#1610;&#1575;&#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1601;&#1587;&#1575;&#1578;&#1610;&#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&#1585;&#1587;&#1575;&#1574;&#1604; 
- &#1605;&#1587;&#1580;&#1575;&#1578; - &#1608;&#1587;&#1575;&#1574;&#1591;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&#1578;&#1608;&#1576;&#1610;&#1603;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&#1608;&#1592;&#1575;&#1574;&#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&#1576;&#1585;&#1608;&#1603;&#1587;&#1610;&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt;&lt;a href=&quot;http://forum.line-sport.tv/&quot;&gt;&#1604;&#1575;&#1610;&#1606; &#1587;&#1576;&#1608;&#1585;&#1578;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;thank you very much......&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/&quot;&gt;&amp;#1605;&amp;#1606;&amp;#1578;&amp;#1583;&amp;#1610;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&amp;#1605;&amp;#1603;&amp;#1610;&amp;#1575;&amp;#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1575;&amp;#1586;&amp;#1610;&amp;#1575;&amp;#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1601;&amp;#1587;&amp;#1575;&amp;#1578;&amp;#1610;&amp;#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&amp;#1585;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1604;&lt;br&gt;
- &amp;#1605;&amp;#1587;&amp;#1580;&amp;#1575;&amp;#1578; -
&amp;#1608;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1591;&lt;/a&gt;&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&amp;#1578;&amp;#1608;&amp;#1576;&amp;#1610;&amp;#1603;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&amp;#1608;&amp;#1592;&amp;#1575;&amp;#1574;&amp;#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt;
&lt;a href=
&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&amp;#1576;&amp;#1585;&amp;#1608;&amp;#1603;&amp;#1587;&amp;#1610;&lt;/a&gt;
&lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt;&lt;a href=
&quot;http://forum.line-sport.tv/&quot;&gt;&amp;#1604;&amp;#1575;&amp;#1610;&amp;#1606;
&amp;#1587;&amp;#1576;&amp;#1608;&amp;#1585;&amp;#1578;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-08T11:19:31+00:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4142</number>
      <permalink>arel-methods-in-scope-cause-issues-with-non-existent-tables</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;arel activerecord bug rails3&quot;</tag>
      <title>arel methods in scope cause issues with non-existent tables</title>
      <updated-at type="datetime">2011-02-08T12:16:05+00:00</updated-at>
      <user-id type="integer">136126</user-id>
      <version type="integer">7</version>
      <user-name>alasiri1</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4142</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>aa12063b4b9eb94818eb16d0d2f3a62af8c0e40e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-03-10T21:24:10+00:00</created-at>
      <filename>use_arel_table_column.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">442023</id>
      <size type="integer">1181</size>
      <uploader-id type="integer">16138</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/442023/use_arel_table_column.diff</url>
    </attachment>
  </attachments>
</ticket>
