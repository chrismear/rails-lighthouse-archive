<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">8</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-04T20:01:21+00:00</created-at>
  <creator-id type="integer">17330</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">1812</number>
  <permalink>default_scope-cant-take-procs</permalink>
  <priority type="integer">1102</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>default_scope named_scope patch &quot;rails 3.1&quot;</tag>
  <title>default_scope can't take procs</title>
  <updated-at type="datetime">2011-04-18T23:40:33+01:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">74</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>Brian Mitchell</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
  <milestone-title>3.1</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The primary problem I have with the current implementation is that it only supports a hash as the argument. I'd like to be able to pass in a proc as well similar to how named and anonymous scopes currently work.

My current work-around involves pushing a lambda into default_scoping and implementing a simple argument selector to emulate [] on a hash but there are other problems later if named scopes are used in conjunction (I have to convert to a hash at that point). I've browsed through the code and not found a quick fix. I'll search more later but if someone else has an idea for fixing this I'd be grateful.</original-body>
  <latest-body>The primary problem I have with the current implementation is that it only supports a hash as the argument. I'd like to be able to pass in a proc as well similar to how named and anonymous scopes currently work.

My current work-around involves pushing a lambda into default_scoping and implementing a simple argument selector to emulate [] on a hash but there are other problems later if named scopes are used in conjunction (I have to convert to a hash at that point). I've browsed through the code and not found a quick fix. I'll search more later but if someone else has an idea for fixing this I'd be grateful.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The primary problem I have with the current implementation is
that it only supports a hash as the argument. I'd like to be able
to pass in a proc as well similar to how named and anonymous scopes
currently work.&lt;/p&gt;
&lt;p&gt;My current work-around involves pushing a lambda into
default_scoping and implementing a simple argument selector to
emulate [] on a hash but there are other problems later if named
scopes are used in conjunction (I have to convert to a hash at that
point). I've browsed through the code and not found a quick fix.
I'll search more later but if someone else has an idea for fixing
this I'd be grateful.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The primary problem I have with the current implementation is that it only supports a hash as the argument. I'd like to be able to pass in a proc as well similar to how named and anonymous scopes currently work.

My current work-around involves pushing a lambda into default_scoping and implementing a simple argument selector to emulate [] on a hash but there are other problems later if named scopes are used in conjunction (I have to convert to a hash at that point). I've browsed through the code and not found a quick fix. I'll search more later but if someone else has an idea for fixing this I'd be grateful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The primary problem I have with the current implementation is
that it only supports a hash as the argument. I'd like to be able
to pass in a proc as well similar to how named and anonymous scopes
currently work.&lt;/p&gt;
&lt;p&gt;My current work-around involves pushing a lambda into
default_scoping and implementing a simple argument selector to
emulate [] on a hash but there are other problems later if named
scopes are used in conjunction (I have to convert to a hash at that
point). I've browsed through the code and not found a quick fix.
I'll search more later but if someone else has an idea for fixing
this I'd be grateful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-28T22:24:23+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-01-28T22:24:25+00:00</updated-at>
      <user-id type="integer">17330</user-id>
      <version type="integer">1</version>
      <user-name>Brian Mitchell</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 on this. i was definitely surprised by this behavior</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 on this. i was definitely surprised by this behavior&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T22:13:47+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-02-11T22:13:50+00:00</updated-at>
      <user-id type="integer">6470</user-id>
      <version type="integer">2</version>
      <user-name>Nate</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-13T13:23:09+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-02-13T13:23:14+00:00</updated-at>
      <user-id type="integer">17102</user-id>
      <version type="integer">3</version>
      <user-name>Stephan Kaag</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-19T19:52:53+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-02-19T19:52:54+00:00</updated-at>
      <user-id type="integer">2207</user-id>
      <version type="integer">4</version>
      <user-name>Brandon</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1

I've found that this would be very useful for simple model i18n like in:

@@@ ruby
default_scope :ordered, lambda { {:order =&gt; column_translated(:name)} }
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;I've found that this would be very useful for simple model i18n
like in:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
default_scope :ordered, lambda { {:order =&amp;gt; column_translated(:name)} }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-20T18:21:18+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-02-20T18:21:21+00:00</updated-at>
      <user-id type="integer">25682</user-id>
      <version type="integer">5</version>
      <user-name>Adrian Mugnolo</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Er, sorry.  I meant:

@@@ ruby
default_scope lambda { {:order =&gt; column_translated(:name)} }
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Er, sorry. I meant:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
default_scope lambda { {:order =&amp;gt; column_translated(:name)} }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-20T18:22:43+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-02-20T18:22:47+00:00</updated-at>
      <user-id type="integer">25682</user-id>
      <version type="integer">6</version>
      <user-name>Adrian Mugnolo</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This surprised me too. From looking at the code it looks like the quick and easy solution to adding a default scope was taken. I'll poke around a bit and see if I can't figure something out.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This surprised me too. From looking at the code it looks like
the quick and easy solution to adding a default scope was taken.
I'll poke around a bit and see if I can't figure something out.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-16T21:15:01+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-16T21:15:03+00:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">7</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Agreed. If you look at the implementation of default_scope vs. named_scope, you'll see a lot more time and thought went into named_scope.

I think that if we're going to have a default scope option, we should at least consider having it accept the same options as named_scope (such as Proc).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Agreed. If you look at the implementation of default_scope vs.
named_scope, you'll see a lot more time and thought went into
named_scope.&lt;/p&gt;
&lt;p&gt;I think that if we're going to have a default scope option, we
should at least consider having it accept the same options as
named_scope (such as Proc).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-16T21:18:06+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-16T21:18:11+00:00</updated-at>
      <user-id type="integer">10915</user-id>
      <version type="integer">8</version>
      <user-name>Josh N. Abbott</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is a patch that adds support for setting a block for default scope as such:

@@@ ruby
default_scope do
  { :conditions =&gt; [&quot;created_at &lt; ?&quot;, Time.now] }
end
@@@

Other than this it behaves almost the same as the previous implementation. In the few places I had to change it, I tried to mimic the behavior of named_scopes. The most notable of these is that the order param now overwrites previous ones. For instance

@@@ ruby
class Person &lt; ActiveRecord::Base
  default_scope :order =&gt; &quot;name DESC&quot;
  named_scope :by_age, :order =&gt; &quot;age DESC&quot;
end
Person.by_age
@@@

will produce the following order clause: &quot;age DESC&quot; where previously it would have produced &quot;name DESC, age DESC&quot;.

Also, defining multiple default_scopes will stack effects in the same way that multiple nested_scopes would. This way you could define a sitewide default_scope and add on to it in subclasses.

Another small caveat is that, while the condition will be used in the create scope if it is a hash, it will be ignored if it is a string. So { :name =&gt; &quot;Peter&quot; } would be used whereas &quot;name = 'Peter'&quot; would not be. Personally, I don't think default scope should affect the create scope, but since that was already there I was hesitant to remove that functionality entirely.

Finally, to completely override the effects of default_scope, use #with_exclusive_scope.

Please let me know if you have any questions or suggestions.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a patch that adds support for setting a block for
default scope as such:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
default_scope do
  { :conditions =&amp;gt; [&amp;quot;created_at &amp;lt; ?&amp;quot;, Time.now] }
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Other than this it behaves almost the same as the previous
implementation. In the few places I had to change it, I tried to
mimic the behavior of named_scopes. The most notable of these is
that the order param now overwrites previous ones. For instance&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person &amp;lt; ActiveRecord::Base
  default_scope :order =&amp;gt; &amp;quot;name DESC&amp;quot;
  named_scope :by_age, :order =&amp;gt; &amp;quot;age DESC&amp;quot;
end
Person.by_age
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will produce the following order clause: &quot;age DESC&quot; where
previously it would have produced &quot;name DESC, age DESC&quot;.&lt;/p&gt;
&lt;p&gt;Also, defining multiple default_scopes will stack effects in the
same way that multiple nested_scopes would. This way you could
define a sitewide default_scope and add on to it in subclasses.&lt;/p&gt;
&lt;p&gt;Another small caveat is that, while the condition will be used
in the create scope if it is a hash, it will be ignored if it is a
string. So { :name =&amp;gt; &quot;Peter&quot; } would be used whereas &quot;name =
'Peter'&quot; would not be. Personally, I don't think default scope
should affect the create scope, but since that was already there I
was hesitant to remove that functionality entirely.&lt;/p&gt;
&lt;p&gt;Finally, to completely override the effects of default_scope,
use #with_exclusive_scope.&lt;/p&gt;
&lt;p&gt;Please let me know if you have any questions or suggestions.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-17T02:29:24+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-18T16:02:25+00:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">9</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry about the formatting. Not sure what happened there. You should still be able to make sense of it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry about the formatting. Not sure what happened there. You
should still be able to make sense of it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-17T02:30:37+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 activerecord default scope
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-17T02:30:40+00:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">10</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Updated the patch with a slightly cleaner version.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated the patch with a slightly cleaner version.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-17T15:09:06+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 activerecord default patch scope tested
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-17T15:09:09+00:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">11</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's an even better version. Default scope isn't merged in until #scope is actually called which means that you can override the default scope from within a #with_scope block. I also added a #without_default_scope wrapper that temporarily disables all default_scopes for that class.

@@@ ruby
Person.with_scope(:find =&gt; { :conditions =&gt; { :active =&gt; true }}) do
  Person.without_default_scope do
    Person.find(:all) # =&gt; Returns all active people, ignoring any default_scope
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's an even better version. Default scope isn't merged in
until #scope is actually called which means that you can override
the default scope from within a #with_scope block. I also added a
#without_default_scope wrapper that temporarily disables all
default_scopes for that class.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Person.with_scope(:find =&amp;gt; { :conditions =&amp;gt; { :active =&amp;gt; true }}) do
  Person.without_default_scope do
    Person.find(:all) # =&amp;gt; Returns all active people, ignoring any default_scope
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-18T15:28:26+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-18T15:28:33+00:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">12</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also, if you want to use this functionality in a Rails 2.3 app without patching, check out http://gist.github.com/81187</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, if you want to use this functionality in a Rails 2.3 app
without patching, check out &lt;a href=&quot;http://gist.github.com/81187&quot;&gt;http://gist.github.com/81187&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-18T15:34:18+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-18T15:34:21+00:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">13</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>More minor bug fixes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;More minor bug fixes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-19T13:42:54+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-03-19T13:42:58+00:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">14</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've applied Peters patch and it works for me, thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've applied Peters patch and it works for me, thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-03T15:21:27+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-04-03T15:21:33+01:00</updated-at>
      <user-id type="integer">2113</user-id>
      <version type="integer">15</version>
      <user-name>matthewcford</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey Peter,

Any reason to go with block instead of procs ? Why not the following :

@@@ ruby
default_scope proc { { :conditions =&gt; [&quot;created_at &lt; ?&quot;, Time.now] } }
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Peter,&lt;/p&gt;
&lt;p&gt;Any reason to go with block instead of procs ? Why not the
following :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;default_scope proc { { :conditions =&amp;gt; [&quot;created_at &amp;lt; ?&quot;, Time.now] } }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-18T20:56:43+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-05-18T20:56:47+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">16</version>
      <user-name>Pratik</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Pratik,

I thought blocks looked nicer, but using procs would be more consistent with named_scope.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pratik,&lt;/p&gt;
&lt;p&gt;I thought blocks looked nicer, but using procs would be more
consistent with named_scope.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-18T21:25:19+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-05-18T21:25:23+01:00</updated-at>
      <user-id type="integer">19875</user-id>
      <version type="integer">17</version>
      <user-name>Peter Wagenet</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah. I think it should be consistent with named_scopes. Rest looks nice. Thanks for working on this !</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah. I think it should be consistent with named_scopes. Rest
looks nice. Thanks for working on this !&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-18T21:29:40+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-05-18T21:29:45+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">18</version>
      <user-name>Pratik</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Guys, I'm using the monkeypatch from &quot;March 18th, 2009 @ 03:34 PM&quot; and found the following problem: if you find() and object and include it's relationships, the related table default_scope is not set:

@@@ruby
Loading development environment (Rails 2.3.2)
&gt;&gt; Employer.send(:default_scope){{:conditions =&gt; {:id =&gt; 33}}}
&gt;&gt; job=Job.find(:first,:include =&gt; [:employer])
=&gt; #&lt;Job id: 56, ... &gt;
@@@
And runs: 
@@@ruby
DEBUG      Job Load (0.3ms)   SELECT * FROM `jobs` LIMIT 1
DEBUG      Employer Load (0.4ms)   SELECT * FROM `employers` WHERE (`employers`.`id` = 2424) 
@@@
(see, no scope in Employer)

if I now reload job's data and ask for the related employer object:
@@@ruby
&gt;&gt; job.reload
DEBUG      Job Load (0.4ms)   SELECT * FROM `jobs` WHERE (`jobs`.`id` = 56) 
&gt;&gt; job.employer
DEBUG      Employer Load (0.4ms)   SELECT * FROM `employers` WHERE (`employers`.`id` = 2424) AND (`employers`.`id` = 33) 
@@@
(see the scope applied to Employer)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Guys, I'm using the monkeypatch from &quot;March 18th, 2009 @ 03:34
PM&quot; and found the following problem: if you find() and object and
include it's relationships, the related table default_scope is not
set:&lt;/p&gt;
&lt;p&gt;@@@ruby Loading development environment (Rails 2.3.2)&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Employer.send(:default_scope){{:conditions =&amp;gt; {:id =&amp;gt;
33}}} job=Job.find(:first,:include =&amp;gt; [:employer]) =&amp;gt; #&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;And runs: 
@@@ruby
DEBUG      Job Load (0.3ms)   SELECT * FROM &lt;/code&gt;jobs LIMIT 1
DEBUG      Employer Load (0.4ms)   SELECT * FROM &lt;code&gt;employers&lt;/code&gt; WHERE (&lt;code&gt;employers&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 2424)
&lt;/pre&gt;
(see, no scope in Employer)&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;if I now reload job's data and ask for the related employer
object:&lt;br&gt;
@@@ruby&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;job.reload DEBUG Job Load (0.4ms) SELECT * FROM
&lt;code&gt;jobs&lt;/code&gt; WHERE (&lt;code&gt;jobs&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; =
56)&lt;br&gt;
job.employer DEBUG Employer Load (0.4ms) SELECT * FROM
&lt;code&gt;employers&lt;/code&gt; WHERE
(&lt;code&gt;employers&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 2424) AND
(&lt;code&gt;employers&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 33)&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;(see the scope applied to Employer)&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-03T20:33:00+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 activerecord default_scope enhancement named_scope patch scope tested
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-08-03T20:33:06+01:00</updated-at>
      <user-id type="integer">53368</user-id>
      <version type="integer">19</version>
      <user-name>runa</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, I screwed the formatting before (no preview button? :)
@@@
Loading development environment (Rails 2.3.2)
Employer.send(:default_scope){{:conditions =&gt; {:id =&gt; 33}}} job=Job.find(:first,:include =&gt; [:employer]) =&gt; #
@@@

And runs: 
@@@
DEBUG      Job Load (0.3ms)   SELECT * FROM `jobs` LIMIT 1
DEBUG      Employer Load (0.4ms)   SELECT * FROM `employers` WHERE (`employers`.`id` = 2424) 
@@@

(see, no scope in Employer)

if I now reload job's data and ask for the related employer object: @@@ruby
@@@
Job.reload
DEBUG Job Load (0.4ms) SELECT * FROM jobs WHERE (jobs.id = 56) job.employer 
DEBUG Employer Load (0.4ms) SELECT * FROM employers WHERE (employers.id = 2424) AND (employers.id = 33)
@@@

(see the scope applied to Employer)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, I screwed the formatting before (no preview button?
:)&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 2.3.2)
Employer.send(:default_scope){{:conditions =&amp;gt; {:id =&amp;gt; 33}}} job=Job.find(:first,:include =&amp;gt; [:employer]) =&amp;gt; #&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And runs:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;DEBUG      Job Load (0.3ms)   SELECT * FROM &lt;/code&gt;jobs LIMIT 1
DEBUG      Employer Load (0.4ms)   SELECT * FROM &lt;code&gt;employers&lt;/code&gt; WHERE (&lt;code&gt;employers&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 2424)
&lt;/pre&gt;
&lt;p&gt;(see, no scope in Employer)&lt;/p&gt;
&lt;p&gt;if I now reload job's data and ask for the related employer
object: @@@ruby&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Job.reload
DEBUG Job Load (0.4ms) SELECT * FROM jobs WHERE (jobs.id = 56) job.employer 
DEBUG Employer Load (0.4ms) SELECT * FROM employers WHERE (employers.id = 2424) AND (employers.id = 33)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(see the scope applied to Employer)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-03T20:35:06+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-08-03T20:35:11+01:00</updated-at>
      <user-id type="integer">53368</user-id>
      <version type="integer">20</version>
      <user-name>runa</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Right. I actually don't use that patch. Instead I create an object that poses as a Hash which seems to work well (a hash with a proc passed is not enough since you can't merge or iterate properly -- I basically have a proc subclass that generates proxied new hashes on demand).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Right. I actually don't use that patch. Instead I create an
object that poses as a Hash which seems to work well (a hash with a
proc passed is not enough since you can't merge or iterate properly
-- I basically have a proc subclass that generates proxied new
hashes on demand).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-03T20:41:10+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-08-03T20:41:14+01:00</updated-at>
      <user-id type="integer">17330</user-id>
      <version type="integer">21</version>
      <user-name>Brian Mitchell</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Brian: could you give me an example? I would love to see a simpler solution!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Brian: could you give me an example? I would love to see a
simpler solution!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-03T21:26:55+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-08-03T21:27:02+01:00</updated-at>
      <user-id type="integer">53368</user-id>
      <version type="integer">22</version>
      <user-name>runa</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I use something like this code: http://gist.github.com/160809

A hash poser can take defaults or a block (default is used when the block returns nothing) which allows you to conditionally provide something dynamic.

Let me know if you have trouble using it or not but it has proven to work consistently enough for one of my projects.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I use something like this code: &lt;a href=
&quot;http://gist.github.com/160809&quot;&gt;http://gist.github.com/160809&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A hash poser can take defaults or a block (default is used when
the block returns nothing) which allows you to conditionally
provide something dynamic.&lt;/p&gt;
&lt;p&gt;Let me know if you have trouble using it or not but it has
proven to work consistently enough for one of my projects.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-03T21:38:35+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-08-03T21:38:39+01:00</updated-at>
      <user-id type="integer">17330</user-id>
      <version type="integer">23</version>
      <user-name>Brian Mitchell</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Brian, is there any reason not to use the default-by-block function of Ruby's Hash implementation?  I.e.
@@@ ruby
Hash.new {|hash, key| key == :conditions ? {:a_column =&gt; &quot;a_value&quot;} : nil }
@@@

In my case, I needed to directly set self.default_scoping as default_scope copies the :condition value for the :create scope.  Then, it worked perfectly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Brian, is there any reason not to use the default-by-block
function of Ruby's Hash implementation? I.e.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Hash.new {|hash, key| key == :conditions ? {:a_column =&amp;gt; &quot;a_value&quot;} : nil }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In my case, I needed to directly set self.default_scoping as
default_scope copies the :condition value for the :create scope.
Then, it worked perfectly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-02T09:42:48+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-10-02T09:42:54+01:00</updated-at>
      <user-id type="integer">39170</user-id>
      <version type="integer">24</version>
      <user-name>Steffen Bartsch</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Steffen There are issues that still won't work on that method. Specifically creation scopes (it uses a has_key? rather than a nil check last time I looked) as well as proper scope merging as they use other keys and/or require iteration.

So if it is working for you, it is probably limited to very specific cases. I would not recommend trying to use that method in more general code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Steffen There are issues that still won't work on that method.
Specifically creation scopes (it uses a has_key? rather than a nil
check last time I looked) as well as proper scope merging as they
use other keys and/or require iteration.&lt;/p&gt;
&lt;p&gt;So if it is working for you, it is probably limited to very
specific cases. I would not recommend trying to use that method in
more general code.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-02T16:28:33+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2009-10-02T16:28:38+01:00</updated-at>
      <user-id type="integer">17330</user-id>
      <version type="integer">25</version>
      <user-name>Brian Mitchell</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:38+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-05-04T18:48:38+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">26</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I am looking at rails3 code and looks like I am stuck.

@@@ ruby
def construct_finder_arel(options = {}, scope = nil)
+  options = options.call if options.is_a?(Proc) 
  relation = options.is_a?(Hash) ? unscoped.apply_finder_options(options) : unscoped.merge(options)
  relation = scope.merge(relation) if scope
  relation
end
@@@

Notice the line with + sign. I added that line and now default_scope can take proc. However since the default_scope finally builds a relation object, the lazy loading behavior of default_scope is lost. It means if you define 

@@@ ruby
default_scope proc { { :conditions =&gt; [&quot;created_at &lt; ?&quot;, Time.now] } }
@@@

then every single time you will get the same value for Time.now which defeats the whole point of having a proc.

Please correct me but to the extent I know relation object doest not support laziness the way named_scope does.

I am marking this ticket as open so that we can get more eyes on this ticket.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am looking at rails3 code and looks like I am stuck.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;def construct_finder_arel(options = {}, scope = nil)
+  options = options.call if options.is_a?(Proc) 
  relation = options.is_a?(Hash) ? unscoped.apply_finder_options(options) : unscoped.merge(options)
  relation = scope.merge(relation) if scope
  relation
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice the line with + sign. I added that line and now
default_scope can take proc. However since the default_scope
finally builds a relation object, the lazy loading behavior of
default_scope is lost. It means if you define&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;default_scope proc { { :conditions =&amp;gt; [&quot;created_at &amp;lt; ?&quot;, Time.now] } }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;then every single time you will get the same value for Time.now
which defeats the whole point of having a proc.&lt;/p&gt;
&lt;p&gt;Please correct me but to the extent I know relation object doest
not support laziness the way named_scope does.&lt;/p&gt;
&lt;p&gt;I am marking this ticket as open so that we can get more eyes on
this ticket.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-29T05:19:09+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3 activerecord bug default_scope enhancement named_scope patch scope tested</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-06-29T05:19:28+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">27</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-13T14:25:55+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 activerecord bug default_scope enhancement named_scope patch scope tested
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope enhancement named_scope scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-08-13T14:25:58+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">28</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-13T14:26:14+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord default_scope enhancement named_scope scope
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope enhancement named_scope &quot;rails 3&quot; scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-08-13T14:26:20+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">29</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hello, do you want to &lt;a href=&quot;www.fmheroes.com&quot;&gt;express&lt;/a&gt; this information is what, I do not understand, you can 

say you more points.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello, do you want to &lt;a href=&quot;www.fmheroes.com&quot;&gt;express&lt;/a&gt;
this information is what, I do not understand, you can&lt;/p&gt;
&lt;p&gt;say you more points.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-06T06:08:05+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope enhancement named_scope &quot;rails 3&quot; scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-09-06T07:01:47+01:00</updated-at>
      <user-id type="integer">114498</user-id>
      <version type="integer">30</version>
      <user-name>Fenny</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The issue is that default scopes should be stored as procs and evaluated on the last moment. Evaluating the proc when appending the scope will not work as expected.
Its not too complicated to get the default_scope to accept procs with hash conditions, but supporting arel conditions is a bit more complex.
I managed to get some concept code working, supporting all possible default_scope conditions with the exception of arel conditions needing a unscoped prefix.

As the scopes are merged and evaluated at the last possible moment, i.e the current_scoped_methods method, and arel conditions are delegated to the scoped method, it will end up in an endless loop (as scoped will access the current_scoped_methods method, which in turn then makes a call to scoped etc).


@@@
  def default_scope(scope_options = {})
    # wrap the scope into a lambda, evaluating the actual given conditions first
    self.default_scoping &lt;&lt; lambda { construct_finder_arel(scope_options.is_a?(Proc) ? scope_options.call : scope_options) }
  end

  def current_scoped_methods 
    # merge all scopes 
    scoped_methods.inject(relation) do |relation, scope|            
      relation.merge(scope.call)
    end
  end

  # model

  class Category &lt; ActiveRecord::Base
    default_scope order(:name)
    default_scope lambda { {&#160;:conditions =&gt; [&quot;created_at &lt; ?&quot;, Time.now] }&#160;}
    default_scope lambda { where(&quot;created_at &lt; ?&quot;, Time.now) }
  end
@@@

Not sure if these changes would yield any side effects, haven't had time to run the test suite just yet. Plus the endless call chain would still also need solving.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The issue is that default scopes should be stored as procs and
evaluated on the last moment. Evaluating the proc when appending
the scope will not work as expected.&lt;br&gt;
Its not too complicated to get the default_scope to accept procs
with hash conditions, but supporting arel conditions is a bit more
complex.&lt;br&gt;
I managed to get some concept code working, supporting all possible
default_scope conditions with the exception of arel conditions
needing a unscoped prefix.&lt;/p&gt;
&lt;p&gt;As the scopes are merged and evaluated at the last possible
moment, i.e the current_scoped_methods method, and arel conditions
are delegated to the scoped method, it will end up in an endless
loop (as scoped will access the current_scoped_methods method,
which in turn then makes a call to scoped etc).&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def default_scope(scope_options = {})
    # wrap the scope into a lambda, evaluating the actual given conditions first
    self.default_scoping &amp;lt;&amp;lt; lambda { construct_finder_arel(scope_options.is_a?(Proc) ? scope_options.call : scope_options) }
  end

  def current_scoped_methods 
    # merge all scopes 
    scoped_methods.inject(relation) do |relation, scope|            
      relation.merge(scope.call)
    end
  end

  # model

  class Category &amp;lt; ActiveRecord::Base
    default_scope order(:name)
    default_scope lambda { { :conditions =&amp;gt; [&quot;created_at &amp;lt; ?&quot;, Time.now] } }
    default_scope lambda { where(&quot;created_at &amp;lt; ?&quot;, Time.now) }
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Not sure if these changes would yield any side effects, haven't
had time to run the test suite just yet. Plus the endless call
chain would still also need solving.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-24T08:35:29+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope enhancement named_scope &quot;rails 3&quot; scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-09-24T08:35:34+01:00</updated-at>
      <user-id type="integer">71408</user-id>
      <version type="integer">31</version>
      <user-name>Tanel Suurhans</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This seems to make it work:

@@@ ruby
    def current_scoped_methods #:nodoc:
      if m = scoped_methods.last and m.is_a?(Proc)
        unscoped { m.call }
      else
        scoped_methods.last
      end
    end
@@@

The commit is available (with unit test) in my fork here: http://github.com/seven1m/rails/commit/d0251fd1adac2dc2d20a7e4b4f0c6e47960517c0

Patch is also attached.

Let me know what you think!

-Tim</body>
      <body-html>&lt;div&gt;&lt;p&gt;This seems to make it work:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    def current_scoped_methods #:nodoc:
      if m = scoped_methods.last and m.is_a?(Proc)
        unscoped { m.call }
      else
        scoped_methods.last
      end
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The commit is available (with unit test) in my fork here:
&lt;a href=
&quot;http://github.com/seven1m/rails/commit/d0251fd1adac2dc2d20a7e4b4f0c6e47960517c0&quot;&gt;
http://github.com/seven1m/rails/commit/d0251fd1adac2dc2d20a7e4b4f0c...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Patch is also attached.&lt;/p&gt;
&lt;p&gt;Let me know what you think!&lt;/p&gt;
&lt;p&gt;-Tim&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-15T04:56:45+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord default_scope enhancement named_scope &quot;rails 3&quot; scope</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-15T04:56:51+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">32</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T08:32:20+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord default_scope enhancement named_scope &quot;rails 3&quot; scope
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T08:32:28+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">34</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I rebased my fork, so the commit is now: http://github.com/seven1m/rails/commit/282f5bb6a6dd89d810e67f7bb8643733d6d03761

Can someone take a look at this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I rebased my fork, so the commit is now: &lt;a href=
&quot;http://github.com/seven1m/rails/commit/282f5bb6a6dd89d810e67f7bb8643733d6d03761&quot;&gt;
http://github.com/seven1m/rails/commit/282f5bb6a6dd89d810e67f7bb864...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Can someone take a look at this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T15:38:58+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T15:39:05+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">35</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Looks good to me.

I would replace &quot;and&quot; with &quot;&amp;&amp;&quot; in line if m = scoped_methods.last and m.is_a?(Proc).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks good to me.&lt;/p&gt;
&lt;p&gt;I would replace &quot;and&quot; with &quot;&amp;amp;&amp;amp;&quot; in line if m =
scoped_methods.last and m.is_a?(Proc).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T17:33:46+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T17:33:52+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">36</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Replacing and with &amp;&amp; would cause m to = true inside the conditional. &quot;and&quot; has lower operator precedence than = in Ruby.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Replacing and with &amp;amp;&amp;amp; would cause m to = true inside the
conditional. &quot;and&quot; has lower operator precedence than = in
Ruby.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T17:41:59+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T17:42:08+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">37</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Nice one for doing a patch.

Personally I prefer:

@@@
    def current_scoped_methods #:nodoc:
      last = scoped_methods.last
      if last.is_a?(Proc)
        unscoped(&amp;last)
      else
        last
      end
    end
@@@

I dislike assignment in conditional tests, and I think you can use the `&amp;` operator to pass the block directly to `unscoped`. (Or did you discover some reason why this shouldn't be done?)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Nice one for doing a patch.&lt;/p&gt;
&lt;p&gt;Personally I prefer:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def current_scoped_methods #:nodoc:
      last = scoped_methods.last
      if last.is_a?(Proc)
        unscoped(&amp;amp;last)
      else
        last
      end
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I dislike assignment in conditional tests, and I think you can
use the &lt;code&gt;&amp;amp;&lt;/code&gt; operator to pass the block directly to
&lt;code&gt;unscoped&lt;/code&gt;. (Or did you discover some reason why this
shouldn't be done?)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T17:49:48+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T17:49:57+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">38</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I just forgot about the &amp; operator for passing the block -- that should work. I'll be happy to remove the assignment from the conditional if you think it will get this accepted.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just forgot about the &amp;amp; operator for passing the block --
that should work. I'll be happy to remove the assignment from the
conditional if you think it will get this accepted.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T17:56:01+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T17:56:11+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">39</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Building on what Jon suggested, it can be  reduced to two lines.

@@@ ruby
def current_scoped_methods #:nodoc:
  last = scoped_methods.last
  last.is_a?(Proc) ? unscoped(&amp;last) : last
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Building on what Jon suggested, it can be reduced to two
lines.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def current_scoped_methods #:nodoc:
  last = scoped_methods.last
  last.is_a?(Proc) ? unscoped(&amp;amp;last) : last
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T18:00:49+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T18:00:56+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">40</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Heh, we're really grasping at straws now!

I have my head in my own patch at the moment, but will try to run the tests on this later and add a +1.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Heh, we're really grasping at straws now!&lt;/p&gt;
&lt;p&gt;I have my head in my own patch at the moment, but will try to
run the tests on this later and add a +1.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T18:05:55+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T18:06:00+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">41</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Here is the updated commit (updated patch is attached):

http://github.com/seven1m/rails/commit/e0b73b64c30e81e5b4279ce55dd2b7d65cfae00a</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is the updated commit (updated patch is attached):&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/seven1m/rails/commit/e0b73b64c30e81e5b4279ce55dd2b7d65cfae00a&quot;&gt;
http://github.com/seven1m/rails/commit/e0b73b64c30e81e5b4279ce55dd2...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T22:14:47+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T22:14:53+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">42</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I've pushed this to master.  As it's a new feature, I think it should go in the 3.1.0 release.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've pushed this to master. As it's a new feature, I think it
should go in the 3.1.0 release.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-19T23:30:32+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
:milestone: 71472
:tag: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-19T23:30:37+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">43</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-20T00:05:22+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-20T00:05:26+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">44</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Hey guys,

I'm a little confused. I've just cloned rails/master and built a gem only to find out this feature still isn't working. Tim's patch with new current_scoped_methods and test cases is merged, but Tanel's modification of default_scope method is not. The lambda is immediately passed to construct_finder_arel and produces a familiar error.

Also, Tim, ActiveRecord::Relation responds to :call so maybe current_scoped_methods should use is_a?(Proc) like in Neeraj's version.

I've just hopped into this conversation, so a huge thanks to you guys for looking into this issue.

Adam</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey guys,&lt;/p&gt;
&lt;p&gt;I'm a little confused. I've just cloned rails/master and built a
gem only to find out this feature still isn't working. Tim's patch
with new current_scoped_methods and test cases is merged, but
Tanel's modification of default_scope method is not. The lambda is
immediately passed to construct_finder_arel and produces a familiar
error.&lt;/p&gt;
&lt;p&gt;Also, Tim, ActiveRecord::Relation responds to :call so maybe
current_scoped_methods should use is_a?(Proc) like in Neeraj's
version.&lt;/p&gt;
&lt;p&gt;I've just hopped into this conversation, so a huge thanks to you
guys for looking into this issue.&lt;/p&gt;
&lt;p&gt;Adam&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-27T20:18:13+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-27T20:18:31+01:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">45</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Adam, I know the tests on edge rails pass for me as of Oct 20th (haven't tested since then), but I haven't tried it in a real app yet.

Since I am trying to upgrade a 2.x app, I am still working in 3.0 land, and the following monkeypatch gets me what I need for now:

@@@ ruby
    module ActiveRecord
      class Base
        class &lt;&lt; self
          protected
            def current_scoped_methods #:nodoc:
              method = scoped_methods.last
              if method.respond_to?(:call)
                unscoped(&amp;method)
              else
                method
              end
            end
        end
      end
    end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adam, I know the tests on edge rails pass for me as of Oct 20th
(haven't tested since then), but I haven't tried it in a real app
yet.&lt;/p&gt;
&lt;p&gt;Since I am trying to upgrade a 2.x app, I am still working in
3.0 land, and the following monkeypatch gets me what I need for
now:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    module ActiveRecord
      class Base
        class &amp;lt;&amp;lt; self
          protected
            def current_scoped_methods #:nodoc:
              method = scoped_methods.last
              if method.respond_to?(:call)
                unscoped(&amp;amp;method)
              else
                method
              end
            end
        end
      end
    end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-27T20:35:13+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-27T20:35:20+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">46</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Hi !
I need to set a conditional default_scope and after implementing Tim Morgan's solution on an initializer I still did not manage to pass a Proc to default_scope

I recieve a 

`NoMethodError: undefined method `includes_values' for #&lt;Proc:0xb5e7b214&gt;`

on the merge method in the SpawnMethods module

Is there any other way to set a conditional default_scope other than passing a Proc? I really need this :/</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi !&lt;br&gt;
I need to set a conditional default_scope and after implementing
Tim Morgan's solution on an initializer I still did not manage to
pass a Proc to default_scope&lt;/p&gt;
&lt;p&gt;I recieve a&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NoMethodError: undefined method&lt;/code&gt;includes_values' for
#&amp;lt;Proc:0xb5e7b214&amp;gt;&lt;/p&gt;
&lt;p&gt;on the merge method in the SpawnMethods module&lt;/p&gt;
&lt;p&gt;Is there any other way to set a conditional default_scope other
than passing a Proc? I really need this :/&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-29T16:53:51+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-29T16:53:56+01:00</updated-at>
      <user-id type="integer">119178</user-id>
      <version type="integer">47</version>
      <user-name>Draiken</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Hi Draiken,

That's exactly the same error I was getting. Just like I described in my last post I had to merge Tim's and Tanel's modifications. Attached is my git diff patch. Good luck!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Draiken,&lt;/p&gt;
&lt;p&gt;That's exactly the same error I was getting. Just like I
described in my last post I had to merge Tim's and Tanel's
modifications. Attached is my git diff patch. Good luck!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-29T17:19:03+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-29T17:19:12+01:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">48</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Are you using latest checkout of 3-0-stable or the 3.0.1 gem?

I believe my patch will only work with 3-0-stable, i.e. upcoming 3.0.2 gem.

In your Gemfile, you can specify the following:

    gem 'rails', :git =&gt; 'git://github.com/rails/rails.git', :branch =&gt; '3-0-stable'

Let me know if that works.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Are you using latest checkout of 3-0-stable or the 3.0.1
gem?&lt;/p&gt;
&lt;p&gt;I believe my patch will only work with 3-0-stable, i.e. upcoming
3.0.2 gem.&lt;/p&gt;
&lt;p&gt;In your Gemfile, you can specify the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;gem 'rails', :git =&amp;gt; 'git://github.com/rails/rails.git', :branch =&amp;gt; '3-0-stable'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let me know if that works.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-29T17:24:39+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-29T17:24:44+01:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">49</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Adam Wr&#243;bel's patch worked perfectly.

I had only implemented Tim Morgan's snippet and not the previous one.
If anyone else have this problem, that patch works :]

Thank you all very much.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adam Wr&amp;oacute;bel's patch worked perfectly.&lt;/p&gt;
&lt;p&gt;I had only implemented Tim Morgan's snippet and not the previous
one.&lt;br&gt;
If anyone else have this problem, that patch works :]&lt;/p&gt;
&lt;p&gt;Thank you all very much.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-29T18:29:37+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-29T18:29:41+01:00</updated-at>
      <user-id type="integer">119178</user-id>
      <version type="integer">50</version>
      <user-name>Draiken</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Are you looking for Designer Replica Handbags? My-Handbag.com is happy to offer you the best replicas handbags and watches made with high quality materials at lowest price you'll find anywhere.
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;bags replica&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;handbags fake&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;bags fake&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;Fake bags&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;replica handbags Wholesale&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;Replica Coach bags&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;Coach handbags replica&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;Coach bags replica&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;coach outlet&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;coach handbags outlet&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_12.html&quot;&gt;Louis Vuitton handbags Replica&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_15.html&quot;&gt;Chanel handbags Replica&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_19.html&quot;&gt;Gucci handbags Replica&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;replica watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;watches replica&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;cheap watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;designer watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;Swiss watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;mens watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;ladies watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;fake watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;discounted watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;sport watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;wholesale replica watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;replica swiss watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;knockoff watches&lt;/a&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;replica watches on sale&lt;/a&gt;
replicasincn.com is dedicated to bring buyers the top grade replica handbags and watches at wholesale price. Here you can find a genuine pool of replica bags and watches with a wide range varieties.
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;handbags fake&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;bags replica&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;handbags cheap&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;bags cheap&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;handbags discounted&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;bags discounted&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_19.html&quot;&gt;replica gucci handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_15.html&quot;&gt;replica chanel handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_12.html&quot;&gt;replica Louis Vuitton handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Cheap handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale replica handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale fake handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale cheap handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale designer handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica bags manufacturers&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;exporters replica bags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica bags offers&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica handbags suppliers&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica handbags manufacturers&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;exporters replica handbags&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;replica watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;watches replica&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;cheap watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;designer watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;Swiss watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;mens watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;ladies watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;fake watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;discounted watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;sport watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;wholesale replica watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;replica swiss watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;knockoff watches&lt;/a&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;replica watches on sale&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Are you looking for Designer Replica Handbags? My-Handbag.com is
happy to offer you the best replicas handbags and watches made with
high quality materials at lowest price you'll find anywhere.&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;bags replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;handbags fake&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;bags fake&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;Fake bags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/&quot;&gt;replica handbags
Wholesale&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;Replica Coach
bags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;Coach handbags
replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;Coach bags
replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;coach
outlet&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_22.html&quot;&gt;coach handbags
outlet&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_12.html&quot;&gt;Louis Vuitton
handbags Replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_15.html&quot;&gt;Chanel handbags
Replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_19.html&quot;&gt;Gucci handbags
Replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;replica
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;watches
replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;cheap
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;designer
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;Swiss
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;mens
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;ladies
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;fake
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;discounted
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;sport
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;wholesale
replica watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;replica swiss
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;knockoff
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.my-handbag.com/catalog_111.html&quot;&gt;replica
watches on sale&lt;/a&gt;&lt;br&gt;
replicasincn.com is dedicated to bring buyers the top grade replica
handbags and watches at wholesale price. Here you can find a
genuine pool of replica bags and watches with a wide range
varieties.&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;handbags fake&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;bags replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;handbags cheap&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;bags cheap&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;handbags discounted&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;bags discounted&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_19.html&quot;&gt;replica gucci
handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_15.html&quot;&gt;replica
chanel handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_12.html&quot;&gt;replica Louis
Vuitton handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Cheap handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale replica
handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale fake
handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale cheap
handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;Wholesale designer
handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica bags
manufacturers&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;exporters replica
bags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica bags offers&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica handbags
suppliers&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;replica handbags
manufacturers&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/&quot;&gt;exporters replica
handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;replica
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;watches
replica&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;cheap
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;designer
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;Swiss
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;mens
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;ladies
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;fake
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;discounted
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;sport
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;wholesale
replica watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;replica
swiss watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;knockoff
watches&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.replicasincn.com/catalog_111.html&quot;&gt;replica
watches on sale&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-30T07:26:07+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-10-31T06:02:33+00:00</updated-at>
      <user-id type="integer">122552</user-id>
      <version type="integer">51</version>
      <user-name>fstory</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:32:11+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-11-08T23:12:13+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">52</version>
      <user-name>jim123456</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>It seems that with Tim Morgans patch the proc for the default scope is not evaluated properly. In production mode the value inside the proc (Time.now for example) stays the same for every invocation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems that with Tim Morgans patch the proc for the default
scope is not evaluated properly. In production mode the value
inside the proc (Time.now for example) stays the same for every
invocation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-24T20:37:44+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-11-24T20:37:50+00:00</updated-at>
      <user-id type="integer">71408</user-id>
      <version type="integer">53</version>
      <user-name>Tanel Suurhans</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I just updated to Rails 3.0.3 and tested this in production mode. It works for me.

@@@ ruby
# irb
require 'rubygems'
require 'active_record'
require 'logger'

ActiveRecord::Base.establish_connection(:adapter =&gt; 'sqlite3', :database =&gt; ':memory:')
ActiveRecord::Migration.create_table :widgets do |t|
  t.string :name
  t.timestamps
end

class Widget &lt; ActiveRecord::Base
  default_scope lambda { where(['created_at &gt;= ?', 1.minute.ago]) }
end

module ActiveRecord
  class Base
    class &lt;&lt; self
      protected
        def current_scoped_methods #:nodoc:
          method = scoped_methods.last
          if method.respond_to?(:call)
            unscoped(&amp;method)
          else
            method
          end
        end
    end
  end
end

Widget.create!(:name =&gt; 'foo')
# =&gt; #&lt;Widget id: 1, name: &quot;foo&quot;, created_at: &quot;2010-11-24 15:05:39&quot;, updated_at: &quot;2010-11-24 15:05:39&quot;&gt; 

ActiveRecord::Base.logger = Logger.new(STDOUT)

Widget.all
# Widget Load (0.4ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &gt;= '2010-11-24 15:05:10.456719')

Widget.all
# Widget Load (0.3ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &gt;= '2010-11-24 15:05:16.256514')

Widget.all
# Widget Load (0.3ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &gt;= '2010-11-24 15:05:17.373986')

Widget.all
# Widget Load (0.4ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &gt;= '2010-11-24 15:05:20.403725')
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just updated to Rails 3.0.3 and tested this in production
mode. It works for me.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# irb
require 'rubygems'
require 'active_record'
require 'logger'

ActiveRecord::Base.establish_connection(:adapter =&amp;gt; 'sqlite3', :database =&amp;gt; ':memory:')
ActiveRecord::Migration.create_table :widgets do |t|
  t.string :name
  t.timestamps
end

class Widget &amp;lt; ActiveRecord::Base
  default_scope lambda { where(['created_at &amp;gt;= ?', 1.minute.ago]) }
end

module ActiveRecord
  class Base
    class &amp;lt;&amp;lt; self
      protected
        def current_scoped_methods #:nodoc:
          method = scoped_methods.last
          if method.respond_to?(:call)
            unscoped(&amp;amp;method)
          else
            method
          end
        end
    end
  end
end

Widget.create!(:name =&amp;gt; 'foo')
# =&amp;gt; #&amp;lt;Widget id: 1, name: &quot;foo&quot;, created_at: &quot;2010-11-24 15:05:39&quot;, updated_at: &quot;2010-11-24 15:05:39&quot;&amp;gt; 

ActiveRecord::Base.logger = Logger.new(STDOUT)

Widget.all
# Widget Load (0.4ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &amp;gt;= '2010-11-24 15:05:10.456719')

Widget.all
# Widget Load (0.3ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &amp;gt;= '2010-11-24 15:05:16.256514')

Widget.all
# Widget Load (0.3ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &amp;gt;= '2010-11-24 15:05:17.373986')

Widget.all
# Widget Load (0.4ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &amp;gt;= '2010-11-24 15:05:20.403725')&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-24T21:13:06+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-11-24T21:13:12+00:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">54</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I agree with your point, please share with us more good articles.
http://www.ugg-boots-online-usa.com</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with your point, please share with us more good
articles.&lt;br&gt;
&lt;a href=
&quot;http://www.ugg-boots-online-usa.com&quot;&gt;http://www.ugg-boots-online-usa.com&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-01T06:59:45+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2010-12-01T07:41:20+00:00</updated-at>
      <user-id type="integer">127325</user-id>
      <version type="integer">55</version>
      <user-name>bootsuggs</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Tim, sorry for late reply. I've tried your example and it indeed worked. But when I switched my project to 3.0.3 gem and applied your patch I was still getting errors. After some digging I've found out that the problem is with models that use multiple calls to default_scope. This is allowed by rails and the exceptions raise when default_scope tries to merge scopes provided with multiple calls.

To see those errors change the model definition in your example to:
@@@ ruby
class Widget &lt; ActiveRecord::Base
  default_scope order(:created_at)
  default_scope lambda { where(['created_at &gt;= ?', 1.minute.ago]) }
end
@@@

This looks stupid, but something similar happens when you monkey patch foreign models to add your own default_scope in addition to the one they already use.

The patch I've uploaded previously was a diff of ActiveRecord source code. A monkey patch that gets me going in my project is:
@@@ ruby
module ActiveRecord
  class Base
    class &lt;&lt; self
      def default_scope(options = {})
        reset_scoped_methods
        self.default_scoping &lt;&lt; lambda {
          construct_finder_arel(options.is_a?(Proc) ? options.call : options)
        }
      end

      protected
        def current_scoped_methods
          method = scoped_methods.last
          if method.respond_to?(:call)
            unscoped(&amp;method)
          else
            method
          end
        end
    end
  end
end
@@@

Cheers</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tim, sorry for late reply. I've tried your example and it indeed
worked. But when I switched my project to 3.0.3 gem and applied
your patch I was still getting errors. After some digging I've
found out that the problem is with models that use multiple calls
to default_scope. This is allowed by rails and the exceptions raise
when default_scope tries to merge scopes provided with multiple
calls.&lt;/p&gt;
&lt;p&gt;To see those errors change the model definition in your example
to:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Widget &amp;lt; ActiveRecord::Base
  default_scope order(:created_at)
  default_scope lambda { where(['created_at &amp;gt;= ?', 1.minute.ago]) }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This looks stupid, but something similar happens when you monkey
patch foreign models to add your own default_scope in addition to
the one they already use.&lt;/p&gt;
&lt;p&gt;The patch I've uploaded previously was a diff of ActiveRecord
source code. A monkey patch that gets me going in my project
is:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;module ActiveRecord
  class Base&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&lt;code&gt;class &amp;amp;lt;&amp;amp;lt; self
  def default_scope(options = {})
    reset_scoped_methods
    self.default_scoping &amp;amp;lt;&amp;amp;lt; lambda {
      construct_finder_arel(options.is_a?(Proc) ? options.call : options)
    }
  end

  protected
    def current_scoped_methods
      method = scoped_methods.last
      if method.respond_to?(:call)
        unscoped(&amp;amp;amp;method)
      else
        method
      end
    end
end&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
end
&lt;/pre&gt;
&lt;p&gt;Cheers&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-19T19:17:18+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-19T19:18:26+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">56</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Problems with code formatting?

https://gist.github.com/786674</body>
      <body-html>&lt;div&gt;&lt;p&gt;Problems with code formatting?&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://gist.github.com/786674&quot;&gt;https://gist.github.com/786674&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-19T19:21:46+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-19T19:22:43+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">57</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Actually, I've just found out that my previous patch and all other patches in this ticket were just ignoring the previous default_scope definitions instead of merging them with the current.

I've updated my gist to take previous default_scope declarations into account. This is consistent with how default_scope works for non-lambda arguments. This patch allows you to have declarations like this one:

@@@ ruby
class Widget &lt; ActiveRecord::Base
  default_scope order(:created_at)
  default_scope limit(5)
  default_scope lambda { where(['created_at &gt;= ?', 10.minute.ago]) }
  default_scope lambda { where(['created_at &lt;= ?', 1.minute.ago]) }
end
@@@

The resulting query for Widget.all looks like this:
@@@ sql
SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &gt;= '2011-01-19 23:40:11.181327') AND (created_at &lt;= '2011-01-19 23:49:11.181152') ORDER BY created_at LIMIT 5
@@@

Of course usually you wouldn't put those declarations next to each other, but rather in different monkey patches for the some engine.

A monkey patch for 3.0.x
https://gist.github.com/786674

I've also created a pull request at github. Hopefully we'll see this in 3.1:
https://github.com/rails/rails/pull/169</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually, I've just found out that my previous patch and all
other patches in this ticket were just ignoring the previous
default_scope definitions instead of merging them with the
current.&lt;/p&gt;
&lt;p&gt;I've updated my gist to take previous default_scope declarations
into account. This is consistent with how default_scope works for
non-lambda arguments. This patch allows you to have declarations
like this one:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Widget &amp;lt; ActiveRecord::Base
  default_scope order(:created_at)
  default_scope limit(5)
  default_scope lambda { where(['created_at &amp;gt;= ?', 10.minute.ago]) }
  default_scope lambda { where(['created_at &amp;lt;= ?', 1.minute.ago]) }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The resulting query for Widget.all looks like this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE (created_at &amp;gt;= '2011-01-19 23:40:11.181327') AND (created_at &amp;lt;= '2011-01-19 23:49:11.181152') ORDER BY created_at LIMIT 5&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Of course usually you wouldn't put those declarations next to
each other, but rather in different monkey patches for the some
engine.&lt;/p&gt;
&lt;p&gt;A monkey patch for 3.0.x&lt;br&gt;
&lt;a href=
&quot;https://gist.github.com/786674&quot;&gt;https://gist.github.com/786674&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've also created a pull request at github. Hopefully we'll see
this in 3.1:&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/pull/169&quot;&gt;https://github.com/rails/rails/pull/169&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-20T00:29:09+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-20T00:30:11+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">58</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Patch for 3.1 for those who prefer it over github fork.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch for 3.1 for those who prefer it over github fork.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-20T00:35:40+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-20T00:36:42+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">59</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>I was reminded to use respond_to?(:call) instead of kind_of?(Proc) on github. Here's a corrected patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was reminded to use respond_to?(:call) instead of
kind_of?(Proc) on github. Here's a corrected patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-20T17:27:46+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-20T17:28:53+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">60</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Adam, thanks for your work on this. I had noticed a problem in the console, whenever a model using default_scope would get reloaded, this bug would cause an exception.

I think I worked around it my app with some ugly hack, but your fix looks like the right way to handle this.

I tested the monkeypatch against my 3.0.3 system and it works as advertised. So a +1 on that.

I did NOT test your patch against 3.1 though.

Hopefully we can get @tenderlove back on here so he can commit.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adam, thanks for your work on this. I had noticed a problem in
the console, whenever a model using default_scope would get
reloaded, this bug would cause an exception.&lt;/p&gt;
&lt;p&gt;I think I worked around it my app with some ugly hack, but your
fix looks like the right way to handle this.&lt;/p&gt;
&lt;p&gt;I tested the monkeypatch against my 3.0.3 system and it works as
advertised. So a +1 on that.&lt;/p&gt;
&lt;p&gt;I did NOT test your patch against 3.1 though.&lt;/p&gt;
&lt;p&gt;Hopefully we can get @tenderlove back on here so he can
commit.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-20T20:07:52+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-20T20:09:46+00:00</updated-at>
      <user-id type="integer">629</user-id>
      <version type="integer">61</version>
      <user-name>Tim Morgan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Hello,

The monkey patch for 3.0.x from adamwrobel works for most of the cases, but it seems it doesn't scope the validation for uniqueness. You need to add it to each validates.

Any pointers as to why?

Thanks,
Julien.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;The monkey patch for 3.0.x from adamwrobel works for most of the
cases, but it seems it doesn't scope the validation for uniqueness.
You need to add it to each validates.&lt;/p&gt;
&lt;p&gt;Any pointers as to why?&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Julien.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-22T15:35:09+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-22T15:36:13+00:00</updated-at>
      <user-id type="integer">22290</user-id>
      <version type="integer">62</version>
      <user-name>Julien Guimont</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>This is unrelated to the lambda support. Uniqueness validator just ignores the default_scope regardless of whether it's lambda or arel finder.


[activerecord/lib/active_record/validations/uniqueness.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/validations/uniqueness.rb), line 24:
@@@ ruby
relation = finder_class.unscoped.where(sql, *params)
@@@

If you feel this is a bug you can open a new ticket. But supporting it would be a bit tricky. Uniqueness validator expects column names which it compares with simple = sql operator. Named and default scopes are much more powerful. Beside allowing all the order(), limit(), offset() etc. finders they allow more complex where() conditions.

You might need to add the :scope option explicitly to your validations or if that's not possible you can do something similar to what I did in a project at my company, but I have to warn you - it's a really ugly hack:
https://gist.github.com/791214

This fits my project, but you might want to modify this to read scope column names from model's class variables.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is unrelated to the lambda support. Uniqueness validator
just ignores the default_scope regardless of whether it's lambda or
arel finder.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://github.com/rails/rails/blob/master/activerecord/lib/active_record/validations/uniqueness.rb&quot;&gt;
activerecord/lib/active_record/validations/uniqueness.rb&lt;/a&gt;, line
24:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;relation = finder_class.unscoped.where(sql, *params)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you feel this is a bug you can open a new ticket. But
supporting it would be a bit tricky. Uniqueness validator expects
column names which it compares with simple = sql operator. Named
and default scopes are much more powerful. Beside allowing all the
order(), limit(), offset() etc. finders they allow more complex
where() conditions.&lt;/p&gt;
&lt;p&gt;You might need to add the :scope option explicitly to your
validations or if that's not possible you can do something similar
to what I did in a project at my company, but I have to warn you -
it's a really ugly hack:&lt;br&gt;
&lt;a href=
&quot;https://gist.github.com/791214&quot;&gt;https://gist.github.com/791214&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This fits my project, but you might want to modify this to read
scope column names from model's class variables.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-22T16:24:16+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-22T16:25:10+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">63</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>reopening and assigning to myself.</body>
      <body-html>&lt;div&gt;&lt;p&gt;reopening and assigning to myself.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-22T21:59:16+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: committed
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-22T22:00:17+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">64</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Adam Wr&#243;bel,

about your patch, try to change the order of the *default_scope* calls in the model like:

@@@ ruby
class Widget &lt; ActiveRecord::Base
  default_scope lambda { where(['created_at &gt;= ?', 10.minute.ago]) }
  default_scope lambda { where(['created_at &lt;= ?', 1.minute.ago]) }
  default_scope order(:created_at)
  default_scope limit(5)
end
@@@

Internally *order* and *limit* (as well as *where* and others) are delegated to *scoped* that calls *current_scope_methods*, therefore, the last two calls will calculate lambdas immediately, save the result, and keep appending it to the final query (thanks to *construct_finder_arel*). If one of the first two *default_scope* lambdas passes a hash to *where* like *where(:locale =&gt; I18n.locale.to_s)*, the last two scopes will completely overwrite the *locale* attribute in the final query.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adam Wr&amp;oacute;bel,&lt;/p&gt;
&lt;p&gt;about your patch, try to change the order of the
&lt;em&gt;default_scope&lt;/em&gt; calls in the model like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Widget &amp;lt; ActiveRecord::Base
  default_scope lambda { where(['created_at &amp;gt;= ?', 10.minute.ago]) }
  default_scope lambda { where(['created_at &amp;lt;= ?', 1.minute.ago]) }
  default_scope order(:created_at)
  default_scope limit(5)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Internally &lt;em&gt;order&lt;/em&gt; and &lt;em&gt;limit&lt;/em&gt; (as well as
&lt;em&gt;where&lt;/em&gt; and others) are delegated to &lt;em&gt;scoped&lt;/em&gt; that
calls &lt;em&gt;current_scope_methods&lt;/em&gt;, therefore, the last two calls
will calculate lambdas immediately, save the result, and keep
appending it to the final query (thanks to
&lt;em&gt;construct_finder_arel&lt;/em&gt;). If one of the first two
&lt;em&gt;default_scope&lt;/em&gt; lambdas passes a hash to &lt;em&gt;where&lt;/em&gt; like
&lt;em&gt;where(:locale =&amp;gt; I18n.locale.to_s)&lt;/em&gt;, the last two scopes
will completely overwrite the &lt;em&gt;locale&lt;/em&gt; attribute in the
final query.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-28T18:58:01+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-28T18:59:02+00:00</updated-at>
      <user-id type="integer">34795</user-id>
      <version type="integer">65</version>
      <user-name>Ivan Ukhov</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Actually, this is a problem with all defined scopes in the model using *scope* and new arel syntax. All regular scopes will overwrite default ones.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually, this is a problem with all defined scopes in the model
using &lt;em&gt;scope&lt;/em&gt; and new arel syntax. All regular scopes will
overwrite default ones.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-28T19:30:59+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-28T19:32:00+00:00</updated-at>
      <user-id type="integer">34795</user-id>
      <version type="integer">66</version>
      <user-name>Ivan Ukhov</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Thanks for finding this issue.

You're right that those latter calls calculate previously defined lambdas and append their results to the final query. A test with where() other than equality condition given in hash:

    class Widget &lt; ActiveRecord::Base
      default_scope lambda { where(['created_at &gt;= ?', 10.minute.ago]) }
      default_scope order(:created_at)
      default_scope where(:name =&gt; &quot;new&quot;)
      default_scope limit(5)
    end

    Widget.all

    #SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE
    #(created_at &gt;= '2011-01-28 19:03:40.789990') AND
    #(created_at &gt;= '2011-01-28 19:03:40.787447') AND
    #(created_at &gt;= '2011-01-28 19:03:40.788207') AND
    #(created_at &gt;= '2011-01-28 19:03:40.788917') ORDER BY created_at LIMIT 5

The lambda was called four times - once with each non-lambda default_scope call after it was defined and once during the final fetch. Results of all those calls were merged in the final query.

Test with varying where({}):
    class Widget &lt; ActiveRecord::Base
       default_scope lambda do 
        tmpGlobal ||= &quot;a&quot;
        $tmpGlobal.next!
        where(:name =&gt; $tmpGlobal.dup )
      end
      default_scope order(:created_at)
      default_scope limit(5)
    end
    
    Widget.all
    
    #  Widget Load (0.2ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'c' ORDER BY created_at LIMIT 5
    
    Widget.all
    
    #  Widget Load (0.2ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'c' ORDER BY created_at LIMIT 5

The lambda value that is stored inside the last default_scope call overwrites what is generated later.

Although this is an issue that should be remedied the current implementation is still better than the current state of master branch where one just gets exceptions.

If you have a control over the last calls to default_scope (like when inheriting a class from gem or monkey patching it in your application) then you can invoke your call like this:

default_scope unscoped.limit(5)

This will produce correct results. Of course it's not &quot;the Rails way&quot;. I'll try to find a workaround, but from my investigation so far it doesn't look easy. Maybe Aaron can help.

I've got a feeling that if we find a solution to this, then we could also make calls like this work:
Post.unscoped.published

Currently it's the same as:
Post.published</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for finding this issue.&lt;/p&gt;
&lt;p&gt;You're right that those latter calls calculate previously
defined lambdas and append their results to the final query. A test
with where() other than equality condition given in hash:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Widget &amp;lt; ActiveRecord::Base
  default_scope lambda { where(['created_at &amp;gt;= ?', 10.minute.ago]) }
  default_scope order(:created_at)
  default_scope where(:name =&amp;gt; &quot;new&quot;)
  default_scope limit(5)
end

Widget.all

#SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE
#(created_at &amp;gt;= '2011-01-28 19:03:40.789990') AND
#(created_at &amp;gt;= '2011-01-28 19:03:40.787447') AND
#(created_at &amp;gt;= '2011-01-28 19:03:40.788207') AND
#(created_at &amp;gt;= '2011-01-28 19:03:40.788917') ORDER BY created_at LIMIT 5&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The lambda was called four times - once with each non-lambda
default_scope call after it was defined and once during the final
fetch. Results of all those calls were merged in the final
query.&lt;/p&gt;
&lt;p&gt;Test with varying where({}):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Widget &amp;lt; ActiveRecord::Base
   default_scope lambda do 
    tmpGlobal ||= &quot;a&quot;
    $tmpGlobal.next!
    where(:name =&amp;gt; $tmpGlobal.dup )
  end
  default_scope order(:created_at)
  default_scope limit(5)
end

Widget.all

#  Widget Load (0.2ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'c' ORDER BY created_at LIMIT 5

Widget.all

#  Widget Load (0.2ms)  SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'c' ORDER BY created_at LIMIT 5&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The lambda value that is stored inside the last default_scope
call overwrites what is generated later.&lt;/p&gt;
&lt;p&gt;Although this is an issue that should be remedied the current
implementation is still better than the current state of master
branch where one just gets exceptions.&lt;/p&gt;
&lt;p&gt;If you have a control over the last calls to default_scope (like
when inheriting a class from gem or monkey patching it in your
application) then you can invoke your call like this:&lt;/p&gt;
&lt;p&gt;default_scope unscoped.limit(5)&lt;/p&gt;
&lt;p&gt;This will produce correct results. Of course it's not &quot;the Rails
way&quot;. I'll try to find a workaround, but from my investigation so
far it doesn't look easy. Maybe Aaron can help.&lt;/p&gt;
&lt;p&gt;I've got a feeling that if we find a solution to this, then we
could also make calls like this work:&lt;br&gt;
Post.unscoped.published&lt;/p&gt;
&lt;p&gt;Currently it's the same as:&lt;br&gt;
Post.published&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-29T14:05:34+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-29T14:06:38+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">67</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Please also try with regular scopes + where, order, etc. Again they will just overwrite default scopes. My workaround is a module called *DynamicDefaultScoping*, I include it in classes where I need dynamic default scopes **after** all calls to regular *default_scope* and *scope* and then user already dynamic *default_scope*.

In that module I've also implemented the possibility to name default scopes like:

@@@ ruby
default_scope :language, lambda { |*args|
  locale = (args[0].presence || I18n.locale).to_s
  case locale = (args[0].presence || I18n.locale).to_s
  when 'any', 'all'
    where :locale =&gt; I18n.available_locales.map(&amp;:to_s)
  else
    where :locale =&gt; locale
  end
}
@@@

... and the possibility to later overwrite the default value by calling those named scopes. It works with different combinations with other scopes:

@@@ ruby
Post.recent
Post.language(:en).recent
Post.recent.language(:en)
@@@

I can share if somebody's interested.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please also try with regular scopes + where, order, etc. Again
they will just overwrite default scopes. My workaround is a module
called &lt;em&gt;DynamicDefaultScoping&lt;/em&gt;, I include it in classes
where I need dynamic default scopes &lt;strong&gt;after&lt;/strong&gt; all
calls to regular &lt;em&gt;default_scope&lt;/em&gt; and &lt;em&gt;scope&lt;/em&gt; and then
user already dynamic &lt;em&gt;default_scope&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In that module I've also implemented the possibility to name
default scopes like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;default_scope :language, lambda { |*args|
  locale = (args[0].presence || I18n.locale).to_s
  case locale = (args[0].presence || I18n.locale).to_s
  when 'any', 'all'
    where :locale =&amp;gt; I18n.available_locales.map(&amp;amp;:to_s)
  else
    where :locale =&amp;gt; locale
  end
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;... and the possibility to later overwrite the default value by
calling those named scopes. It works with different combinations
with other scopes:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Post.recent
Post.language(:en).recent
Post.recent.language(:en)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I can share if somebody's interested.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-29T14:20:59+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-29T14:22:09+00:00</updated-at>
      <user-id type="integer">34795</user-id>
      <version type="integer">68</version>
      <user-name>Ivan Ukhov</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>So, here is the gem: https://github.com/UVSoft/dynamic_default_scoping.</body>
      <body-html>&lt;div&gt;&lt;p&gt;So, here is the gem: &lt;a href=
&quot;https://github.com/UVSoft/dynamic_default_scoping&quot;&gt;https://github.com/UVSoft/dynamic_default_scoping&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-30T08:05:28+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-30T08:06:30+00:00</updated-at>
      <user-id type="integer">34795</user-id>
      <version type="integer">69</version>
      <user-name>Ivan Ukhov</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>This problem can also surface when using named scopes.

    class Widget &lt; ActiveRecord::Base
      default_scope lambda { where(['created_at &gt;= ?', 10.minute.ago]) }
      scope :red, order(:name =&gt; &quot;red&quot;)
    end

That call to order will evaluate default scope and save it's current state in :red named scope. The same thing causes the Post.unscoped.published == Post.published absurd. Also calling multiple named scopes like Post.published.recent.by_author(&quot;Mike&quot;) pollutes the final query with multiple default_scope nodes.

I see three options for working around this:

.1. Change scope and default_scope syntax to require blocks.

Like this:
    default_scope { where(:name =&gt; :red) } # or
    default_scope do { :conditions =&gt; {...} } end # or
    scope :published { where( :published =&gt; 1 ) }

This way we can execute them inside unscoped.scoping {} and apply clean default/named scopes when necessary. Cons: API change; application code is a bit ugly; scope could no longer accept extensions like it does now - through blocks.

.2. Remove definitions from existing default scope from relations passed to default_scope and scope methods.

It's a general idea, but one specific implementation I thought about is: With each created ActiveRecord::Relation keep it's second copy that would be free of definitions from default scope. Let's say that the copy is called r.without_default. Relations returned from default scope would have the without_default cleared to unscoped. Then every scope merge or modification would affect both copies equally. Named scopes would be merged into current relation using their without_default copy.

Cons: rails code gets a bit ugly; we're wasting resources

.3. Keep the default scope separate from the current scope stack and only merge it into the current relation when we're about to hit database.

Cons: also some ugly rails code; not as simple as the above; might brake 3rd party gems that use methods like where_values, order_values, because those wouldn't contain data from default scope.

I've started implementing 3 and then thought 2 would be much quicker. You can find it on my &quot;pull request&quot;:https://github.com/rails/rails/pull/169 on github. I'm also attaching the patch.

I don't like that code, but it works. Some testing follows:

    class Widget &lt; ActiveRecord::Base
      default_scope lambda {
        $tmpGlobal ||= &quot;a&quot;;
        $tmpGlobal.next!
        where(:name =&gt; $tmpGlobal.dup )
      }
      default_scope order(:created_at)
      default_scope limit(5)
      scope :red, where(:name =&gt; &quot;red&quot;)
      scope :blue, where(:name =&gt; &quot;blue&quot;)
    end
    Widget.all
    #SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'k' ORDER BY created_at LIMIT 5
    Widget.all
    #SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'm' ORDER BY created_at LIMIT 5
    Widget.red
    #SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'red' ORDER BY created_at LIMIT 5
    Widget.unscoped.blue
    #SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'blue'</body>
      <body-html>&lt;div&gt;&lt;p&gt;This problem can also surface when using named scopes.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Widget &amp;lt; ActiveRecord::Base
  default_scope lambda { where(['created_at &amp;gt;= ?', 10.minute.ago]) }
  scope :red, order(:name =&amp;gt; &quot;red&quot;)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That call to order will evaluate default scope and save it's
current state in :red named scope. The same thing causes the
Post.unscoped.published == Post.published absurd. Also calling
multiple named scopes like Post.published.recent.by_author(&quot;Mike&quot;)
pollutes the final query with multiple default_scope nodes.&lt;/p&gt;
&lt;p&gt;I see three options for working around this:&lt;/p&gt;
&lt;p&gt;.1. Change scope and default_scope syntax to require blocks.&lt;/p&gt;
&lt;p&gt;Like this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;default_scope { where(:name =&amp;gt; :red) } # or
default_scope do { :conditions =&amp;gt; {...} } end # or
scope :published { where( :published =&amp;gt; 1 ) }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This way we can execute them inside unscoped.scoping {} and
apply clean default/named scopes when necessary. Cons: API change;
application code is a bit ugly; scope could no longer accept
extensions like it does now - through blocks.&lt;/p&gt;
&lt;p&gt;.2. Remove definitions from existing default scope from
relations passed to default_scope and scope methods.&lt;/p&gt;
&lt;p&gt;It's a general idea, but one specific implementation I thought
about is: With each created ActiveRecord::Relation keep it's second
copy that would be free of definitions from default scope. Let's
say that the copy is called r.without_default. Relations returned
from default scope would have the without_default cleared to
unscoped. Then every scope merge or modification would affect both
copies equally. Named scopes would be merged into current relation
using their without_default copy.&lt;/p&gt;
&lt;p&gt;Cons: rails code gets a bit ugly; we're wasting resources&lt;/p&gt;
&lt;p&gt;.3. Keep the default scope separate from the current scope stack
and only merge it into the current relation when we're about to hit
database.&lt;/p&gt;
&lt;p&gt;Cons: also some ugly rails code; not as simple as the above;
might brake 3rd party gems that use methods like where_values,
order_values, because those wouldn't contain data from default
scope.&lt;/p&gt;
&lt;p&gt;I've started implementing 3 and then thought 2 would be much
quicker. You can find it on my &lt;a href=
&quot;https://github.com/rails/rails/pull/169&quot;&gt;pull request&lt;/a&gt; on
github. I'm also attaching the patch.&lt;/p&gt;
&lt;p&gt;I don't like that code, but it works. Some testing follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Widget &amp;lt; ActiveRecord::Base
  default_scope lambda {
    $tmpGlobal ||= &quot;a&quot;;
    $tmpGlobal.next!
    where(:name =&amp;gt; $tmpGlobal.dup )
  }
  default_scope order(:created_at)
  default_scope limit(5)
  scope :red, where(:name =&amp;gt; &quot;red&quot;)
  scope :blue, where(:name =&amp;gt; &quot;blue&quot;)
end
Widget.all
#SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'k' ORDER BY created_at LIMIT 5
Widget.all
#SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'm' ORDER BY created_at LIMIT 5
Widget.red
#SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'red' ORDER BY created_at LIMIT 5
Widget.unscoped.blue
#SELECT &quot;widgets&quot;.* FROM &quot;widgets&quot; WHERE &quot;widgets&quot;.&quot;name&quot; = 'blue'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-31T06:07:25+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;rails 3.1\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>default_scope named_scope patch &quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-01-31T06:08:30+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">70</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">7</attachments-count>
      <body>I think that Adam Wr&#243;bel is correct in his general idea: AR::Relation should be refactored because there are some problems with current code. I think we should find some new way to store and apply default_scopes.

Known issues: this ticket, ticket #6011 (which as I understand difficult to fix in edge without ugly fixes) also we have problems with except (ticket #6290, hey can anybody review it???). Anything else?

I think that the best solution for now is to prevent merging default_scopes with procs. It looks very standoffish for all users and especially for new users to Rails3 and Rails at all when rails raises some internal exception like 
@@@
undefined method `merge' for #&lt;Proc:0x108af8058&gt;
@@@

or 

@@@
undefined method `includes_values' for #&lt;Proc:0x108af63c0&gt;
@@@

I think that it is not acceptable. So right now we can raise an exception (see my patch at https://rails.lighthouseapp.com/projects/8994/tickets/6297, also I will attach it here) and start working on refactoring this code. I think we should find as many issues about AR::Realtion as possible for now to design new great solution.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think that Adam Wr&amp;oacute;bel is correct in his general idea:
AR::Relation should be refactored because there are some problems
with current code. I think we should find some new way to store and
apply default_scopes.&lt;/p&gt;
&lt;p&gt;Known issues: this ticket, ticket &lt;a href=
&quot;/projects/8994/tickets/6011&quot; title=&quot;Ticket #6011&quot;&gt;#6011&lt;/a&gt; (which
as I understand difficult to fix in edge without ugly fixes) also
we have problems with except (ticket &lt;a href=
&quot;/projects/8994/tickets/6290&quot; title=&quot;Ticket #6290&quot;&gt;#6290&lt;/a&gt;, hey
can anybody review it???). Anything else?&lt;/p&gt;
&lt;p&gt;I think that the best solution for now is to prevent merging
default_scopes with procs. It looks very standoffish for all users
and especially for new users to Rails3 and Rails at all when rails
raises some internal exception like&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method &lt;/code&gt;merge' for #&amp;amp;lt;Proc:0x108af8058&amp;amp;gt;&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;

&lt;br&gt;
or 

&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `includes_values' for #&amp;lt;Proc:0x108af63c0&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;



&lt;br&gt;
I think that it is not acceptable. So right now we can raise an exception (see my patch at &lt;a href=&quot;https://rails.lighthouseapp.com/projects/8994/tickets/6297&quot;&gt;https://rails.lighthouseapp.com/projects/8994/tickets/6297&lt;/a&gt;, also I will attach it here) and start working on refactoring this code. I think we should find as many issues about AR::Realtion as possible for now to design new great solution.
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T14:40:22+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>default_scope named_scope patch &quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-02-02T14:41:25+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">71</version>
      <user-name>2kan</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>&lt;p&gt;&lt;a href=&quot;http://www.chiflatironcheap.com/&quot;&gt;&lt;strong&gt;chi flat iron&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.chiflatironcheap.com/&quot;&gt;&lt;strong&gt;chi hair straightener&lt;/strong&gt;&lt;/a&gt;,with the universal voltage for optimum performance just like &lt;a href=&quot;http://www.hair-ghdstraightener.com/&quot;&gt;&lt;strong&gt;ghd australia&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.hair-ghdstraightener.com/&quot;&gt;&lt;strong&gt;ghd hair straightener&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.hair-ghdstraightener.com/&quot;&gt;&lt;strong&gt;ghd straighteners&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.chiflatironcheap.com/&quot;&gt;&lt;strong&gt;chi flat irons&lt;/strong&gt;&lt;/a&gt; unique digital technology ensure the temperature is well controlled.stunning design  &lt;a href=&quot;http://www.beats-dr-dre-headphones.com/&quot;&gt;&lt;strong&gt;Dr Dre headphones&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.beats-dr-dre-headphones.com/&quot;&gt;&lt;strong&gt;Beats by Dre&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.beats-dr-dre-headphones.com/&quot;&gt;&lt;strong&gt;Dr Dre beats&lt;/strong&gt;&lt;/a&gt; by the popular icon of fashion designers,&lt;a href=&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;Five finger shoes&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;vibram five fingers&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;five fingers shoes&lt;/strong&gt;&lt;/a&gt; will hlep improve our balance,&lt;a href=&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;vibram five fingers shoes&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;vibram five fingers sale&lt;/strong&gt;&lt;/a&gt;,&lt;a href=&quot;http://www.cheapuggs-mall.com/&quot;&gt;&lt;strong&gt;cheap uggs&lt;/strong&gt;&lt;/a&gt; for us to get the most out of our power movements. &lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.chiflatironcheap.com/&quot;&gt;&lt;strong&gt;chi flat
iron&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.chiflatironcheap.com/&quot;&gt;&lt;strong&gt;chi hair
straightener&lt;/strong&gt;&lt;/a&gt;,with the universal voltage for optimum
performance just like &lt;a href=
&quot;http://www.hair-ghdstraightener.com/&quot;&gt;&lt;strong&gt;ghd
australia&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.hair-ghdstraightener.com/&quot;&gt;&lt;strong&gt;ghd hair
straightener&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.hair-ghdstraightener.com/&quot;&gt;&lt;strong&gt;ghd
straighteners&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.chiflatironcheap.com/&quot;&gt;&lt;strong&gt;chi flat
irons&lt;/strong&gt;&lt;/a&gt; unique digital technology ensure the temperature
is well controlled.stunning design &lt;a href=
&quot;http://www.beats-dr-dre-headphones.com/&quot;&gt;&lt;strong&gt;Dr Dre
headphones&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.beats-dr-dre-headphones.com/&quot;&gt;&lt;strong&gt;Beats by
Dre&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.beats-dr-dre-headphones.com/&quot;&gt;&lt;strong&gt;Dr Dre
beats&lt;/strong&gt;&lt;/a&gt; by the popular icon of fashion
designers,&lt;a href=&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;Five
finger shoes&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;vibram five
fingers&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;five fingers
shoes&lt;/strong&gt;&lt;/a&gt; will hlep improve our balance,&lt;a href=
&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;vibram five
fingers shoes&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.five-finger-shoes-sale.com/&quot;&gt;&lt;strong&gt;vibram five
fingers sale&lt;/strong&gt;&lt;/a&gt;,&lt;a href=
&quot;http://www.cheapuggs-mall.com/&quot;&gt;&lt;strong&gt;cheap uggs&lt;/strong&gt;&lt;/a&gt;
for us to get the most out of our power movements.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-03T09:44:54+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>default_scope named_scope patch &quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-03-04T20:01:21+00:00</updated-at>
      <user-id type="integer">139632</user-id>
      <version type="integer">72</version>
      <user-name>dongge1234</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>I've started a discussion on core with suggestion to change scope syntax. I think the syntax change is certainly a better way of resolving this issue than a hacky work around like the one I've posted here.

http://groups.google.com/group/rubyonrails-core/browse_thread/thread/151882ad7f48b3dd</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've started a discussion on core with suggestion to change
scope syntax. I think the syntax change is certainly a better way
of resolving this issue than a hacky work around like the one I've
posted here.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/151882ad7f48b3dd&quot;&gt;
http://groups.google.com/group/rubyonrails-core/browse_thread/threa...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-17T13:17:09+00:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>default_scope named_scope patch &quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-03-17T13:18:18+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">73</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Hi,

I'm closing this ticket because I think the issue is resolved now, see:

https://github.com/rails/rails/commit/8572ae6671c6ec7c2524f327cee82215896e5648

If anyone disagrees please shout.

Jon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I'm closing this ticket because I think the issue is resolved
now, see:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://github.com/rails/rails/commit/8572ae6671c6ec7c2524f327cee82215896e5648&quot;&gt;
https://github.com/rails/rails/commit/8572ae6671c6ec7c2524f327cee82...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If anyone disagrees please shout.&lt;/p&gt;
&lt;p&gt;Jon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-18T23:39:15+01:00</created-at>
      <creator-id type="integer">17330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">1812</number>
      <permalink>default_scope-cant-take-procs</permalink>
      <priority type="integer">1102</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>default_scope named_scope patch &quot;rails 3.1&quot;</tag>
      <title>default_scope can't take procs</title>
      <updated-at type="datetime">2011-04-18T23:40:33+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">74</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Brian Mitchell</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1812</url>
      <milestone-title>3.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>3c6a7913d76c79deaf09284280f67a78d66a54b0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-19T13:42:55+00:00</created-at>
      <filename>better_default_scope.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">101697</id>
      <size type="integer">17809</size>
      <uploader-id type="integer">19875</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/101697/better_default_scope.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>bcb8ad843d34cbb4c9512c2b4c78e00bba0cbe31</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-15T04:56:45+01:00</created-at>
      <filename>allow-default_scope-to-accept-a-proc.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">721344</id>
      <size type="integer">2452</size>
      <uploader-id type="integer">629</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/721344/allow-default_scope-to-accept-a-proc.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>cb536b985d3cc0b1b2127eb9bd8f9c023dacc1aa</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-19T22:14:47+01:00</created-at>
      <filename>allow-default_scope-to-accept-a-proc2.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">727956</id>
      <size type="integer">2462</size>
      <uploader-id type="integer">629</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/727956/allow-default_scope-to-accept-a-proc2.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>4f0e48868bd6d25eb1b0ceaea218180ae0aab384</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-29T17:19:03+01:00</created-at>
      <filename>lambda_default_scope.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">744949</id>
      <size type="integer">1061</size>
      <uploader-id type="integer">122134</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/744949/lambda_default_scope.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>c20dcfe3b57345f101b6d02dbda33378e44c1bb6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-01-20T00:35:40+00:00</created-at>
      <filename>lambda_default_scope.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">870028</id>
      <size type="integer">1761</size>
      <uploader-id type="integer">122134</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/870028/lambda_default_scope.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>3bcb426539f4c0c29f7ca74cf09f4dc400fd18d8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-01-20T17:27:46+00:00</created-at>
      <filename>lambda_default_scope_v2.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">871126</id>
      <size type="integer">3069</size>
      <uploader-id type="integer">122134</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/871126/lambda_default_scope_v2.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>8484f6cea689957e26385a391b519a0493545cdd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-01-31T06:07:25+00:00</created-at>
      <filename>lambda-default-scope-01-31.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">885990</id>
      <size type="integer">19905</size>
      <uploader-id type="integer">122134</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/885990/lambda-default-scope-01-31.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>c5de4c35d99587aa20c1fe9e26dc5e3d239dd1fb</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-02T14:40:22+00:00</created-at>
      <filename>6297-fix-against-rails-edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">891271</id>
      <size type="integer">2293</size>
      <uploader-id type="integer">65953</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/891271/6297-fix-against-rails-edge.diff</url>
    </attachment>
  </attachments>
</ticket>
