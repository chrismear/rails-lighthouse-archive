<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-30T23:40:14+01:00</created-at>
  <creator-id type="integer">31196</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5023</number>
  <permalink>preloading-polymorphic-association-doesnt-work-with-namespaced-models</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Preloading polymorphic association doesn't work with namespaced models</title>
  <updated-at type="datetime">2011-03-10T18:45:40+00:00</updated-at>
  <user-id type="integer">25677</user-id>
  <version type="integer">4</version>
  <user-name>Brian Samson</user-name>
  <creator-name>David Doan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5023</url>
  <priority-name nil="true"></priority-name>
  <original-body>Association preload tries to look up included polymorphic models by `base_class.sti_name` instead of `base_class.name`, which differs with namespaced models. (`sti_name` drops the namespace.) `BelongsToPolymorphic` automatically creates the association with `type = base_class.name`, so looking it up with `base_class.sti_name` returns nil.


@@@
module Namespace
  class ModelOne
    belongs_to :polymorphic_relationship, :polymorphic =&gt; true
  end

  class ModelTwo
    has_one :model_one, :as =&gt; :polymorphic_relationship
  end
end

model_two = Namespace::ModelTwo.create(:id =&gt; 1)
model_one = Namespace::ModelOne.create(:id =&gt; 1, :polymorphic_relationship =&gt; model_two)

model_two = Namespace::ModelTwo.find_by_id(1)
model_two.model_one # (is present)

model_two = Namespace::ModelTwo.find_by_id(1, :include =&gt; :model_one)
model_two.model_one # (is nil)

@@@

Attached is a patch to `AssociationPreload` to fix this.</original-body>
  <latest-body>Association preload tries to look up included polymorphic models by `base_class.sti_name` instead of `base_class.name`, which differs with namespaced models. (`sti_name` drops the namespace.) `BelongsToPolymorphic` automatically creates the association with `type = base_class.name`, so looking it up with `base_class.sti_name` returns nil.


@@@
module Namespace
  class ModelOne
    belongs_to :polymorphic_relationship, :polymorphic =&gt; true
  end

  class ModelTwo
    has_one :model_one, :as =&gt; :polymorphic_relationship
  end
end

model_two = Namespace::ModelTwo.create(:id =&gt; 1)
model_one = Namespace::ModelOne.create(:id =&gt; 1, :polymorphic_relationship =&gt; model_two)

model_two = Namespace::ModelTwo.find_by_id(1)
model_two.model_one # (is present)

model_two = Namespace::ModelTwo.find_by_id(1, :include =&gt; :model_one)
model_two.model_one # (is nil)

@@@

Attached is a patch to `AssociationPreload` to fix this.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Association preload tries to look up included polymorphic models
by &lt;code&gt;base_class.sti_name&lt;/code&gt; instead of
&lt;code&gt;base_class.name&lt;/code&gt;, which differs with namespaced models.
(&lt;code&gt;sti_name&lt;/code&gt; drops the namespace.)
&lt;code&gt;BelongsToPolymorphic&lt;/code&gt; automatically creates the
association with &lt;code&gt;type = base_class.name&lt;/code&gt;, so looking it
up with &lt;code&gt;base_class.sti_name&lt;/code&gt; returns nil.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module Namespace
  class ModelOne
    belongs_to :polymorphic_relationship, :polymorphic =&amp;gt; true
  end

  class ModelTwo
    has_one :model_one, :as =&amp;gt; :polymorphic_relationship
  end
end

model_two = Namespace::ModelTwo.create(:id =&amp;gt; 1)
model_one = Namespace::ModelOne.create(:id =&amp;gt; 1, :polymorphic_relationship =&amp;gt; model_two)

model_two = Namespace::ModelTwo.find_by_id(1)
model_two.model_one # (is present)

model_two = Namespace::ModelTwo.find_by_id(1, :include =&amp;gt; :model_one)
model_two.model_one # (is nil)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached is a patch to &lt;code&gt;AssociationPreload&lt;/code&gt; to fix
this.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Association preload tries to look up included polymorphic models by `base_class.sti_name` instead of `base_class.name`, which differs with namespaced models. (`sti_name` drops the namespace.) `BelongsToPolymorphic` automatically creates the association with `type = base_class.name`, so looking it up with `base_class.sti_name` returns nil.


@@@
module Namespace
  class ModelOne
    belongs_to :polymorphic_relationship, :polymorphic =&gt; true
  end

  class ModelTwo
    has_one :model_one, :as =&gt; :polymorphic_relationship
  end
end

model_two = Namespace::ModelTwo.create(:id =&gt; 1)
model_one = Namespace::ModelOne.create(:id =&gt; 1, :polymorphic_relationship =&gt; model_two)

model_two = Namespace::ModelTwo.find_by_id(1)
model_two.model_one # (is present)

model_two = Namespace::ModelTwo.find_by_id(1, :include =&gt; :model_one)
model_two.model_one # (is nil)

@@@

Attached is a patch to `AssociationPreload` to fix this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Association preload tries to look up included polymorphic models
by &lt;code&gt;base_class.sti_name&lt;/code&gt; instead of
&lt;code&gt;base_class.name&lt;/code&gt;, which differs with namespaced models.
(&lt;code&gt;sti_name&lt;/code&gt; drops the namespace.)
&lt;code&gt;BelongsToPolymorphic&lt;/code&gt; automatically creates the
association with &lt;code&gt;type = base_class.name&lt;/code&gt;, so looking it
up with &lt;code&gt;base_class.sti_name&lt;/code&gt; returns nil.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module Namespace
  class ModelOne
    belongs_to :polymorphic_relationship, :polymorphic =&amp;gt; true
  end

  class ModelTwo
    has_one :model_one, :as =&amp;gt; :polymorphic_relationship
  end
end

model_two = Namespace::ModelTwo.create(:id =&amp;gt; 1)
model_one = Namespace::ModelOne.create(:id =&amp;gt; 1, :polymorphic_relationship =&amp;gt; model_two)

model_two = Namespace::ModelTwo.find_by_id(1)
model_two.model_one # (is present)

model_two = Namespace::ModelTwo.find_by_id(1, :include =&amp;gt; :model_one)
model_two.model_one # (is nil)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached is a patch to &lt;code&gt;AssociationPreload&lt;/code&gt; to fix
this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T23:40:14+01:00</created-at>
      <creator-id type="integer">31196</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5023</number>
      <permalink>preloading-polymorphic-association-doesnt-work-with-namespaced-models</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Preloading polymorphic association doesn't work with namespaced models</title>
      <updated-at type="datetime">2010-06-30T23:40:26+01:00</updated-at>
      <user-id type="integer">31196</user-id>
      <version type="integer">1</version>
      <user-name>David Doan</user-name>
      <creator-name>David Doan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5023</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:01:15+00:00</created-at>
      <creator-id type="integer">31196</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5023</number>
      <permalink>preloading-polymorphic-association-doesnt-work-with-namespaced-models</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Preloading polymorphic association doesn't work with namespaced models</title>
      <updated-at type="datetime">2011-02-02T18:56:16+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Doan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5023</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:01:16+00:00</created-at>
      <creator-id type="integer">31196</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5023</number>
      <permalink>preloading-polymorphic-association-doesnt-work-with-namespaced-models</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Preloading polymorphic association doesn't work with namespaced models</title>
      <updated-at type="datetime">2011-02-02T18:56:44+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Doan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5023</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 

This is still a bug in rails 2.3.11, as it has been since around 2.3.5

I've attached a patch for it in 2.3.11 that we use.  I think it should be included in the next stable 2.3 release as well for people who aren't updating to rails 3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;This is still a bug in rails 2.3.11, as it has been since around
2.3.5&lt;/p&gt;
&lt;p&gt;I've attached a patch for it in 2.3.11 that we use. I think it
should be included in the next stable 2.3 release as well for
people who aren't updating to rails 3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-10T18:45:33+00:00</created-at>
      <creator-id type="integer">31196</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5023</number>
      <permalink>preloading-polymorphic-association-doesnt-work-with-namespaced-models</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Preloading polymorphic association doesn't work with namespaced models</title>
      <updated-at type="datetime">2011-03-10T18:45:40+00:00</updated-at>
      <user-id type="integer">25677</user-id>
      <version type="integer">4</version>
      <user-name>Brian Samson</user-name>
      <creator-name>David Doan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5023</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c3ffbc568da702bcfae99c1577646ec91b4537cd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-30T23:40:14+01:00</created-at>
      <filename>fixing_association_preload_for_polymorphic_relationships.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">582698</id>
      <size type="integer">1129</size>
      <uploader-id type="integer">31196</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/582698/fixing_association_preload_for_polymorphic_relationships.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>a6119c7e5851006f68b329e5e7b488307f52dcf0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-10T18:45:33+00:00</created-at>
      <filename>includes-on-polymorphic-associa.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">953033</id>
      <size type="integer">891</size>
      <uploader-id type="integer">25677</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/953033/includes-on-polymorphic-associa.diff</url>
    </attachment>
  </attachments>
</ticket>
