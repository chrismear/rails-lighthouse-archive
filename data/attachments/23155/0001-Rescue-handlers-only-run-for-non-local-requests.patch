From e1f114bc3446354c99b8b2157fecd53d370d50cc Mon Sep 17 00:00:00 2001
From: David Yeu <dyeu@limewire.com>
Date: Thu, 15 May 2008 17:46:30 -0400
Subject: [PATCH] Rescue handlers only run for non-local requests

---
 actionpack/lib/action_controller/rescue.rb |    4 ++--
 actionpack/test/controller/rescue_test.rb  |   19 +++++++++++++++++--
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/actionpack/lib/action_controller/rescue.rb b/actionpack/lib/action_controller/rescue.rb
index 40ef4ea..1cc83b0 100644
--- a/actionpack/lib/action_controller/rescue.rb
+++ b/actionpack/lib/action_controller/rescue.rb
@@ -124,7 +124,7 @@ module ActionController #:nodoc:
         if consider_all_requests_local || local_request?
           rescue_action_locally(exception)
         else
-          rescue_action_in_public(exception)
+          rescue_action_with_handler(exception) || rescue_action_in_public(exception)
         end
       end
 
@@ -200,7 +200,7 @@ module ActionController #:nodoc:
       def perform_action_with_rescue #:nodoc:
         perform_action_without_rescue
       rescue Exception => exception
-        rescue_action_with_handler(exception) || rescue_action(exception)
+        rescue_action(exception)
       end
 
       def rescues_path(template_name)
diff --git a/actionpack/test/controller/rescue_test.rb b/actionpack/test/controller/rescue_test.rb
index 27fcc5e..ded86e9 100644
--- a/actionpack/test/controller/rescue_test.rb
+++ b/actionpack/test/controller/rescue_test.rb
@@ -138,7 +138,7 @@ class RescueTest < Test::Unit::TestCase
     @request    = ActionController::TestRequest.new
     @response   = ActionController::TestResponse.new
 
-    RescueController.consider_all_requests_local = true
+    RescueController.consider_all_requests_local = false
     @request.remote_addr = '1.2.3.4'
     @request.host = 'example.com'
 
@@ -152,6 +152,7 @@ class RescueTest < Test::Unit::TestCase
     @controller.expects(:local_request?).never
     @controller.expects(:rescue_action_locally).with(@exception)
     @controller.expects(:rescue_action_in_public).never
+    @controller.expects(:rescue_action_with_handler).never
 
     with_all_requests_local do
       @controller.send :rescue_action, @exception
@@ -162,6 +163,7 @@ class RescueTest < Test::Unit::TestCase
     @controller.expects(:local_request?).returns(true)
     @controller.expects(:rescue_action_locally).with(@exception)
     @controller.expects(:rescue_action_in_public).never
+    @controller.expects(:rescue_action_with_handler).never
 
     with_all_requests_local false do
       @controller.send :rescue_action, @exception
@@ -171,6 +173,7 @@ class RescueTest < Test::Unit::TestCase
   def test_rescue_action_in_public_otherwise
     @controller.expects(:local_request?).returns(false)
     @controller.expects(:rescue_action_locally).never
+    @controller.expects(:rescue_action_with_handler).with(@exception)
     @controller.expects(:rescue_action_in_public).with(@exception)
 
     with_all_requests_local false do
@@ -236,7 +239,9 @@ class RescueTest < Test::Unit::TestCase
   end
 
   def test_rescue_action_locally
-    get :raises
+    with_all_requests_local true do
+      get :raises
+    end
     assert_response :internal_server_error
     assert_template 'diagnostics.erb'
     assert @response.body.include?('RescueController#raises'), "Response should include controller and action."
@@ -331,6 +336,12 @@ class RescueTest < Test::Unit::TestCase
     get :not_authorized_raise_as_string
     assert_response :forbidden
   end
+  def test_rescue_handler_with_local_request
+    with_all_requests_local true do
+      get :not_authorized
+    end
+    assert_response :internal_server_error
+  end
 
   def test_rescue_handler_with_argument
     @controller.expects(:show_errors).once.with { |e| e.is_a?(Exception) }
@@ -460,6 +471,8 @@ class ExceptionInheritanceRescueTest < Test::Unit::TestCase
     @controller = ExceptionInheritanceRescueController.new
     @request    = ActionController::TestRequest.new
     @response   = ActionController::TestResponse.new
+
+    @controller.expects(:consider_all_requests_local).returns(false)
   end
 
   def test_bottom_first
@@ -497,6 +510,8 @@ class ControllerInheritanceRescueControllerTest < Test::Unit::TestCase
     @controller = ControllerInheritanceRescueController.new
     @request    = ActionController::TestRequest.new
     @response   = ActionController::TestResponse.new
+
+    @controller.expects(:consider_all_requests_local).returns(false)
   end
 
   def test_first_exception_in_child_controller
-- 
1.5.5.29.g7134

