<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-13T16:16:59+00:00</created-at>
  <creator-id type="integer">136608</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6426</number>
  <permalink>patch-allow-array-as-order-param-for-postgresql</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>[PATCH] Allow array as order param for postgresql</title>
  <updated-at type="datetime">2011-02-21T21:18:23+00:00</updated-at>
  <user-id type="integer">136608</user-id>
  <version type="integer">2</version>
  <user-name>Igor Alexandrov</user-name>
  <creator-name>Igor Alexandrov</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6426</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hello. This ticked is enhanced version of this one https://rails.lighthouseapp.com/projects/8994/tickets/1207-postgresqladapter-postgres-error-while-finding-when-using-a-function-with-two-parameters-in-order-clause

The problem is that PostgreSQL requires the ORDER BY columns in the select list for distinct queries, and also requires that the ORDER BY include the distinct column. All works pretty well if you just have plain parameters in ORDER BY clause. For example, something like 
@@@ sql
ORDER BY &quot;pcs&quot;.min_cost DESC, &quot;pcs&quot;.title
@@@
will be parsed well and added to DISTINCT PART as
@@@ sql
SELECT DISTINCT ..., &quot;pcs&quot;.min_cost AS alias_0, &quot;pcs&quot;.title AS alias_1
@@@

But if you will use something complex in ORDER BY string &#8211; all will be bad! The problem is that now distinct() method of PostgreSQL adapter simple splits ORDER BY string by ','.

For example:
@@@ sql
ORDER BY COALESCE(&quot;pcs&quot;.min_cost, &quot;pcs&quot;.max_cost) DESC
@@@

will be parsed, splitted and transformed into incorrect DISTINCT clause:
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost AS alias_0, pcs.max_cost) AS alias_1 FROM &quot;pcs&quot;
@@@

This query won't be executed because of syntax errors. I created patch that allows to use Array as :order param in find() method. 
See
**:order =&gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;]**
will be translated into 
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0
@@@

and 
**:order =&gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;, &quot;pcs.title&quot;]**
will be
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0, pcs.title AS alias_1
@@@

All works good, and Array syntax is easy to understand. All test run well. This affects 2.3 and 3.0 branches.

Thanks. Hope it will be useful.</original-body>
  <latest-body>Hello. This ticked is enhanced version of this one https://rails.lighthouseapp.com/projects/8994/tickets/1207-postgresqladapter-postgres-error-while-finding-when-using-a-function-with-two-parameters-in-order-clause

The problem is that PostgreSQL requires the ORDER BY columns in the select list for distinct queries, and also requires that the ORDER BY include the distinct column. All works pretty well if you just have plain parameters in ORDER BY clause. For example, something like 
@@@ sql
ORDER BY &quot;pcs&quot;.min_cost DESC, &quot;pcs&quot;.title
@@@
will be parsed well and added to DISTINCT PART as
@@@ sql
SELECT DISTINCT ..., &quot;pcs&quot;.min_cost AS alias_0, &quot;pcs&quot;.title AS alias_1
@@@

But if you will use something complex in ORDER BY string &#8211; all will be bad! The problem is that now distinct() method of PostgreSQL adapter simple splits ORDER BY string by ','.

For example:
@@@ sql
ORDER BY COALESCE(&quot;pcs&quot;.min_cost, &quot;pcs&quot;.max_cost) DESC
@@@

will be parsed, splitted and transformed into incorrect DISTINCT clause:
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost AS alias_0, pcs.max_cost) AS alias_1 FROM &quot;pcs&quot;
@@@

This query won't be executed because of syntax errors. I created patch that allows to use Array as :order param in find() method. 
See
**:order =&gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;]**
will be translated into 
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0
@@@

and 
**:order =&gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;, &quot;pcs.title&quot;]**
will be
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0, pcs.title AS alias_1
@@@

All works good, and Array syntax is easy to understand. All test run well. This affects 2.3 and 3.0 branches.

Thanks. Hope it will be useful.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello. This ticked is enhanced version of this one &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/1207-postgresqladapter-postgres-error-while-finding-when-using-a-function-with-two-parameters-in-order-clause&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/1207-postgres...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The problem is that PostgreSQL requires the ORDER BY columns in
the select list for distinct queries, and also requires that the
ORDER BY include the distinct column. All works pretty well if you
just have plain parameters in ORDER BY clause. For example,
something like&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;sql&quot;&gt;ORDER BY &quot;pcs&quot;.min_cost DESC, &quot;pcs&quot;.title&lt;/code&gt;
&lt;/pre&gt;
will be parsed well and added to DISTINCT PART as&lt;br&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ..., &quot;pcs&quot;.min_cost AS alias_0, &quot;pcs&quot;.title AS alias_1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But if you will use something complex in ORDER BY string &amp;ndash;
all will be bad! The problem is that now distinct() method of
PostgreSQL adapter simple splits ORDER BY string by ','.&lt;/p&gt;
&lt;p&gt;For example:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;ORDER BY COALESCE(&quot;pcs&quot;.min_cost, &quot;pcs&quot;.max_cost) DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will be parsed, splitted and transformed into incorrect DISTINCT
clause:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost AS alias_0, pcs.max_cost) AS alias_1 FROM &quot;pcs&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This query won't be executed because of syntax errors. I created
patch that allows to use Array as :order param in find()
method.&lt;br&gt;
See&lt;br&gt;
&lt;strong&gt;:order =&amp;gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost)
DESC&quot;]&lt;/strong&gt; will be translated into&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and&lt;br&gt;
&lt;strong&gt;:order =&amp;gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;,
&quot;pcs.title&quot;]&lt;/strong&gt; will be&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0, pcs.title AS alias_1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All works good, and Array syntax is easy to understand. All test
run well. This affects 2.3 and 3.0 branches.&lt;/p&gt;
&lt;p&gt;Thanks. Hope it will be useful.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello. This ticked is enhanced version of this one https://rails.lighthouseapp.com/projects/8994/tickets/1207-postgresqladapter-postgres-error-while-finding-when-using-a-function-with-two-parameters-in-order-clause

The problem is that PostgreSQL requires the ORDER BY columns in the select list for distinct queries, and also requires that the ORDER BY include the distinct column. All works pretty well if you just have plain parameters in ORDER BY clause. For example, something like 
@@@ sql
ORDER BY &quot;pcs&quot;.min_cost DESC, &quot;pcs&quot;.title
@@@
will be parsed well and added to DISTINCT PART as
@@@ sql
SELECT DISTINCT ..., &quot;pcs&quot;.min_cost AS alias_0, &quot;pcs&quot;.title AS alias_1
@@@

But if you will use something complex in ORDER BY string &#8211; all will be bad! The problem is that now distinct() method of PostgreSQL adapter simple splits ORDER BY string by ','.

For example:
@@@ sql
ORDER BY COALESCE(&quot;pcs&quot;.min_cost, &quot;pcs&quot;.max_cost) DESC
@@@

will be parsed, splitted and transformed into incorrect DISTINCT clause:
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost AS alias_0, pcs.max_cost) AS alias_1 FROM &quot;pcs&quot;
@@@

This query won't be executed because of syntax errors. I created patch that allows to use Array as :order param in find() method. 
See
**:order =&gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;]**
will be translated into 
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0
@@@

and 
**:order =&gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;, &quot;pcs.title&quot;]**
will be
@@@ sql
SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0, pcs.title AS alias_1
@@@

All works good, and Array syntax is easy to understand. All test run well. This affects 2.3 and 3.0 branches.

Thanks. Hope it will be useful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello. This ticked is enhanced version of this one &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/1207-postgresqladapter-postgres-error-while-finding-when-using-a-function-with-two-parameters-in-order-clause&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/1207-postgres...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The problem is that PostgreSQL requires the ORDER BY columns in
the select list for distinct queries, and also requires that the
ORDER BY include the distinct column. All works pretty well if you
just have plain parameters in ORDER BY clause. For example,
something like&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;sql&quot;&gt;ORDER BY &quot;pcs&quot;.min_cost DESC, &quot;pcs&quot;.title&lt;/code&gt;
&lt;/pre&gt;
will be parsed well and added to DISTINCT PART as&lt;br&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ..., &quot;pcs&quot;.min_cost AS alias_0, &quot;pcs&quot;.title AS alias_1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But if you will use something complex in ORDER BY string &amp;ndash;
all will be bad! The problem is that now distinct() method of
PostgreSQL adapter simple splits ORDER BY string by ','.&lt;/p&gt;
&lt;p&gt;For example:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;ORDER BY COALESCE(&quot;pcs&quot;.min_cost, &quot;pcs&quot;.max_cost) DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will be parsed, splitted and transformed into incorrect DISTINCT
clause:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost AS alias_0, pcs.max_cost) AS alias_1 FROM &quot;pcs&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This query won't be executed because of syntax errors. I created
patch that allows to use Array as :order param in find()
method.&lt;br&gt;
See&lt;br&gt;
&lt;strong&gt;:order =&amp;gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost)
DESC&quot;]&lt;/strong&gt; will be translated into&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and&lt;br&gt;
&lt;strong&gt;:order =&amp;gt; [&quot;COALESCE(pcs.min_cost, pcs.max_cost) DESC&quot;,
&quot;pcs.title&quot;]&lt;/strong&gt; will be&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT ON (&quot;pcs&quot;.id) &quot;pcs&quot;.id, COALESCE(pcs.min_cost, pcs.max_cost) AS alias_0, pcs.title AS alias_1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All works good, and Array syntax is easy to understand. All test
run well. This affects 2.3 and 3.0 branches.&lt;/p&gt;
&lt;p&gt;Thanks. Hope it will be useful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-13T16:16:59+00:00</created-at>
      <creator-id type="integer">136608</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6426</number>
      <permalink>patch-allow-array-as-order-param-for-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Allow array as order param for postgresql</title>
      <updated-at type="datetime">2011-02-13T16:17:03+00:00</updated-at>
      <user-id type="integer">136608</user-id>
      <version type="integer">1</version>
      <user-name>Igor Alexandrov</user-name>
      <creator-name>Igor Alexandrov</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6426</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Guys, this is really annoying bug. Please review the patch.
Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Guys, this is really annoying bug. Please review the patch.&lt;br&gt;
Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-21T21:18:21+00:00</created-at>
      <creator-id type="integer">136608</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6426</number>
      <permalink>patch-allow-array-as-order-param-for-postgresql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Allow array as order param for postgresql</title>
      <updated-at type="datetime">2011-02-21T21:18:23+00:00</updated-at>
      <user-id type="integer">136608</user-id>
      <version type="integer">2</version>
      <user-name>Igor Alexandrov</user-name>
      <creator-name>Igor Alexandrov</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6426</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>92361a96287d987c3297b6423fe572036a9e483c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-13T16:16:59+00:00</created-at>
      <filename>allow_array_as_order_param_for_postgresql.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">909982</id>
      <size type="integer">3162</size>
      <uploader-id type="integer">136608</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/909982/allow_array_as_order_param_for_postgresql.diff</url>
    </attachment>
  </attachments>
</ticket>
