<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-18T10:10:47+00:00</created-at>
  <creator-id type="integer">12954</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1601</number>
  <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
  <priority type="integer">83</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>patch rack session</tag>
  <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
  <updated-at type="datetime">2011-02-18T10:10:47+00:00</updated-at>
  <user-id type="integer">55350</user-id>
  <version type="integer">17</version>
  <user-name>almightylinuxgod (at me)</user-name>
  <creator-name>Matt Bauer</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
  <priority-name nil="true"></priority-name>
  <original-body>After calling reset_session in a controller the session is properly reset and set to nil.  However, the session cookie value isn't updated and as a result, a subsequent request from the browser sends the old session id.  This results in the old session being retrieved and appearing as if reset_session didn't work.  Prior to the recent Rack integration the following was observed:

A request to a session destroy action that called reset_session would send a cookie like:

Cookie _pas_session=BAh7CjoQX2N...

and Rails would respond with a Set-Cookie header like:

Set-Cookie _pas_session=BAh7BiIKZmx...


After the Rack integration of late, this has changed to:

A request to a session destroy action that called reset_session would send a cookie like:

Cookie _pas_session=BAh7CjoQX2N...

and now Rails doesn't respond with a Set-Cookie header.  Again, this results in the browser resending the old cookie on the subsequent request.</original-body>
  <latest-body>After calling reset_session in a controller the session is properly reset and set to nil.  However, the session cookie value isn't updated and as a result, a subsequent request from the browser sends the old session id.  This results in the old session being retrieved and appearing as if reset_session didn't work.  Prior to the recent Rack integration the following was observed:

A request to a session destroy action that called reset_session would send a cookie like:

Cookie _pas_session=BAh7CjoQX2N...

and Rails would respond with a Set-Cookie header like:

Set-Cookie _pas_session=BAh7BiIKZmx...


After the Rack integration of late, this has changed to:

A request to a session destroy action that called reset_session would send a cookie like:

Cookie _pas_session=BAh7CjoQX2N...

and now Rails doesn't respond with a Set-Cookie header.  Again, this results in the browser resending the old cookie on the subsequent request.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;After calling reset_session in a controller the session is
properly reset and set to nil. However, the session cookie value
isn't updated and as a result, a subsequent request from the
browser sends the old session id. This results in the old session
being retrieved and appearing as if reset_session didn't work.
Prior to the recent Rack integration the following was
observed:&lt;/p&gt;
&lt;p&gt;A request to a session destroy action that called reset_session
would send a cookie like:&lt;/p&gt;
&lt;p&gt;Cookie _pas_session=BAh7CjoQX2N...&lt;/p&gt;
&lt;p&gt;and Rails would respond with a Set-Cookie header like:&lt;/p&gt;
&lt;p&gt;Set-Cookie _pas_session=BAh7BiIKZmx...&lt;/p&gt;
&lt;p&gt;After the Rack integration of late, this has changed to:&lt;/p&gt;
&lt;p&gt;A request to a session destroy action that called reset_session
would send a cookie like:&lt;/p&gt;
&lt;p&gt;Cookie _pas_session=BAh7CjoQX2N...&lt;/p&gt;
&lt;p&gt;and now Rails doesn't respond with a Set-Cookie header. Again,
this results in the browser resending the old cookie on the
subsequent request.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After calling reset_session in a controller the session is properly reset and set to nil.  However, the session cookie value isn't updated and as a result, a subsequent request from the browser sends the old session id.  This results in the old session being retrieved and appearing as if reset_session didn't work.  Prior to the recent Rack integration the following was observed:

A request to a session destroy action that called reset_session would send a cookie like:

Cookie _pas_session=BAh7CjoQX2N...

and Rails would respond with a Set-Cookie header like:

Set-Cookie _pas_session=BAh7BiIKZmx...


After the Rack integration of late, this has changed to:

A request to a session destroy action that called reset_session would send a cookie like:

Cookie _pas_session=BAh7CjoQX2N...

and now Rails doesn't respond with a Set-Cookie header.  Again, this results in the browser resending the old cookie on the subsequent request.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After calling reset_session in a controller the session is
properly reset and set to nil. However, the session cookie value
isn't updated and as a result, a subsequent request from the
browser sends the old session id. This results in the old session
being retrieved and appearing as if reset_session didn't work.
Prior to the recent Rack integration the following was
observed:&lt;/p&gt;
&lt;p&gt;A request to a session destroy action that called reset_session
would send a cookie like:&lt;/p&gt;
&lt;p&gt;Cookie _pas_session=BAh7CjoQX2N...&lt;/p&gt;
&lt;p&gt;and Rails would respond with a Set-Cookie header like:&lt;/p&gt;
&lt;p&gt;Set-Cookie _pas_session=BAh7BiIKZmx...&lt;/p&gt;
&lt;p&gt;After the Rack integration of late, this has changed to:&lt;/p&gt;
&lt;p&gt;A request to a session destroy action that called reset_session
would send a cookie like:&lt;/p&gt;
&lt;p&gt;Cookie _pas_session=BAh7CjoQX2N...&lt;/p&gt;
&lt;p&gt;and now Rails doesn't respond with a Set-Cookie header. Again,
this results in the browser resending the old cookie on the
subsequent request.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-19T05:49:50+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-19T05:49:54+00:00</updated-at>
      <user-id type="integer">12954</user-id>
      <version type="integer">1</version>
      <user-name>Matt Bauer</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Definitely something I need to address.

You are running Edge, right? Lots of rack session changes went in very recently.

Also, if you can come up with a fix, can you try to put together a failing unit test.

Check out actionpack/test/controller/session/cookie_store</body>
      <body-html>&lt;div&gt;&lt;p&gt;Definitely something I need to address.&lt;/p&gt;
&lt;p&gt;You are running Edge, right? Lots of rack session changes went
in very recently.&lt;/p&gt;
&lt;p&gt;Also, if you can come up with a fix, can you try to put together
a failing unit test.&lt;/p&gt;
&lt;p&gt;Check out actionpack/test/controller/session/cookie_store&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-19T05:57:33+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-19T05:57:38+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, I'm currently running the very latest commit.  I'm also in the process of working on cookie_store_test trying to recreate the bug.  I'm hopeful I can get a patch together yet tonite.  Shouldn't be a problem once I can create the failing test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, I'm currently running the very latest commit. I'm also in
the process of working on cookie_store_test trying to recreate the
bug. I'm hopeful I can get a patch together yet tonite. Shouldn't
be a problem once I can create the failing test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-19T06:01:55+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-19T06:01:55+00:00</updated-at>
      <user-id type="integer">12954</user-id>
      <version type="integer">3</version>
      <user-name>Matt Bauer</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I had a little more time to investigate this.  I wasn't able to create a test to recreate the behavior I'm seeing.  I was able to debug it a bit more.  I can get the proper behavior of:

Set-Cookie: session_key=1221362112abcd..

after a reset_session if I place something in the session after the call to reset_session.  I thought it was the equals check of:

unless original_session == env[ENV_SESSION_KEY]

in cookie_store/activerecord_store but when I force this to fail and generate the cookie each time, the problem didn't go away.  I'm not sure where else the cookie header is set.

I do know reset_session only works only if you place something in the new session.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had a little more time to investigate this. I wasn't able to
create a test to recreate the behavior I'm seeing. I was able to
debug it a bit more. I can get the proper behavior of:&lt;/p&gt;
&lt;p&gt;Set-Cookie: session_key=1221362112abcd..&lt;/p&gt;
&lt;p&gt;after a reset_session if I place something in the session after
the call to reset_session. I thought it was the equals check
of:&lt;/p&gt;
&lt;p&gt;unless original_session == env[ENV_SESSION_KEY]&lt;/p&gt;
&lt;p&gt;in cookie_store/activerecord_store but when I force this to fail
and generate the cookie each time, the problem didn't go away. I'm
not sure where else the cookie header is set.&lt;/p&gt;
&lt;p&gt;I do know reset_session only works only if you place something
in the new session.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-19T08:06:13+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-19T08:06:13+00:00</updated-at>
      <user-id type="integer">12954</user-id>
      <version type="integer">4</version>
      <user-name>Matt Bauer</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ah, it doesn't want to write an empty session.

There are a few behaviors we want to preserve as well:

* Don't load or write a new session if the session hash is never accessed (lazy loading)
* Don't write the session cookie if it is the same as the original
* For DB stores, don't write the session object back to memcache or AR if the session has not changed
* Only write an empty session if the session existed at the beginning of the session, but now is empty. You deleted all the keys or you called reset_session</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ah, it doesn't want to write an empty session.&lt;/p&gt;
&lt;p&gt;There are a few behaviors we want to preserve as well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don't load or write a new session if the session hash is never
accessed (lazy loading)&lt;/li&gt;
&lt;li&gt;Don't write the session cookie if it is the same as the
original&lt;/li&gt;
&lt;li&gt;For DB stores, don't write the session object back to memcache
or AR if the session has not changed&lt;/li&gt;
&lt;li&gt;Only write an empty session if the session existed at the
beginning of the session, but now is empty. You deleted all the
keys or you called reset_session&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-19T16:30:14+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-19T16:30:17+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">5</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Added a reset! and reset? to SessionHash.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Added a reset! and reset? to SessionHash.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-20T18:52:50+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: rack session
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-20T18:52:54+00:00</updated-at>
      <user-id type="integer">12954</user-id>
      <version type="integer">6</version>
      <user-name>Matt Bauer</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Cool, I think this is on the right track but we can't assume @env['rack.session'] will respond to reset!. This should work with other Rack stores as well.

Could we just check?

@@@ ruby
if env[ENV_SESSION_KEY].loaded? &amp;&amp; env[ENV_SESSION_KEY] != original_value
@@@

*Updated*

Looks like this will work, patching right now.

@@@ ruby
if !session_data.is_a?(AbstractStore::SessionHash) || session_data.send(:loaded?)
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cool, I think this is on the right track but we can't assume
@env['rack.session'] will respond to reset!. This should work with
other Rack stores as well.&lt;/p&gt;
&lt;p&gt;Could we just check?&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if env[ENV_SESSION_KEY].loaded? &amp;amp;&amp;amp; env[ENV_SESSION_KEY] != original_value
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Updated&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Looks like this will work, patching right now.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if !session_data.is_a?(AbstractStore::SessionHash) || session_data.send(:loaded?)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-20T20:05:49+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-20T20:22:16+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">7</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [7b249b67e9df9f375eaad9e6eb41be73338faaa7]) Fix reset_session with lazy cookie stores [#1601 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/7b249b67e9df9f375eaad9e6eb41be73338faaa7</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [7b249b67e9df9f375eaad9e6eb41be73338faaa7]) Fix
reset_session with lazy cookie stores [&lt;a href=&quot;/projects/8994/tickets/1601&quot; title=&quot;Ticket #1601&quot;&gt;#1601&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Joshua Peek &lt;a href=&quot;mailto:josh@joshpeek.com&quot;&gt;josh@joshpeek.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/7b249b67e9df9f375eaad9e6eb41be73338faaa7&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-20T20:38:13+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2008-12-20T20:38:13+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>doesn't work for me. in mongrel works after adding 

  session[:is_new] = true

but in passenger still restores old session.

solved by 

  headers['Set-Cookie'] = ''

after reset_session call</body>
      <body-html>&lt;div&gt;&lt;p&gt;doesn't work for me. in mongrel works after adding&lt;/p&gt;
&lt;p&gt;session[:is_new] = true&lt;/p&gt;
&lt;p&gt;but in passenger still restores old session.&lt;/p&gt;
&lt;p&gt;solved by&lt;/p&gt;
&lt;p&gt;headers['Set-Cookie'] = ''&lt;/p&gt;
&lt;p&gt;after reset_session call&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-18T22:32:30+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-02-18T22:32:34+00:00</updated-at>
      <user-id type="integer">6040</user-id>
      <version type="integer">9</version>
      <user-name>Yury Kotlyarov</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>reset_session seems to be working perfectly for me using mongrel as well.  In passenger though, I can't seem to logout of my site.  I used git bisect and I'm able to logout perfectly fine in Passenger up until this commit:

http://github.com/rails/rails/commit/524d8edf68ab94315a128cbd7570d1cf4faf7d7a

I haven't yet determined what it is in that commit (or if it's something that Passenger needs to update or has already updated.)  I'm using 2.06 of passenger which I think is the latest.</body>
      <body-html>&lt;div&gt;&lt;p&gt;reset_session seems to be working perfectly for me using mongrel
as well. In passenger though, I can't seem to logout of my site. I
used git bisect and I'm able to logout perfectly fine in Passenger
up until this commit:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/524d8edf68ab94315a128cbd7570d1cf4faf7d7a&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I haven't yet determined what it is in that commit (or if it's
something that Passenger needs to update or has already updated.)
I'm using 2.06 of passenger which I think is the latest.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-19T15:23:50+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-02-19T15:23:54+00:00</updated-at>
      <user-id type="integer">1514</user-id>
      <version type="integer">10</version>
      <user-name>Duff OMelia</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Confirmed. Yury's fix works</body>
      <body-html>&lt;div&gt;&lt;p&gt;Confirmed. Yury's fix works&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-27T19:22:13+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-02-27T19:22:16+00:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">11</version>
      <user-name>Mislav</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This seems to be a bug with Passenger: reset_session fails only with Passenger 2.0.6, not with Mongrel. **Upgrading to edge Passenger solves the issue** for me</body>
      <body-html>&lt;div&gt;&lt;p&gt;This seems to be a bug with Passenger: reset_session fails only
with Passenger 2.0.6, not with Mongrel. &lt;strong&gt;Upgrading to edge
Passenger solves the issue&lt;/strong&gt; for me&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-03T14:28:15+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-03-03T14:28:18+00:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">12</version>
      <user-name>Mislav</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think this is the same (or related) issue as cookie_store session object not being serialized if it is only written, not read in a request. This is the behaviour with Phusion 2.0.6.

The cookie is serialized properly in Mongrel with the same code.

As a workaround I add a before filter to the app to access the session object, which appears to then result in the correct serialization with Phusion.

This is on current edge rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this is the same (or related) issue as cookie_store
session object not being serialized if it is only written, not read
in a request. This is the behaviour with Phusion 2.0.6.&lt;/p&gt;
&lt;p&gt;The cookie is serialized properly in Mongrel with the same
code.&lt;/p&gt;
&lt;p&gt;As a workaround I add a before filter to the app to access the
session object, which appears to then result in the correct
serialization with Phusion.&lt;/p&gt;
&lt;p&gt;This is on current edge rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T02:29:04+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-03-09T02:29:06+00:00</updated-at>
      <user-id type="integer">26903</user-id>
      <version type="integer">13</version>
      <user-name>Kip Cole</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hmm, i was incorrect.  Adding the before_filter to access the session does not work around the Phusion issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hmm, i was incorrect. Adding the before_filter to access the
session does not work around the Phusion issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T03:23:31+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-03-09T03:23:32+00:00</updated-at>
      <user-id type="integer">26903</user-id>
      <version type="integer">14</version>
      <user-name>Kip Cole</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Is this flying under the radar because it's marked as resolved? I'm having the same issues as everybody above on rails 2.3.1. I'm still poking around so I don't have anything of value to add.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is this flying under the radar because it's marked as resolved?
I'm having the same issues as everybody above on rails 2.3.1. I'm
still poking around so I don't have anything of value to add.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T03:52:32+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-03-09T03:52:36+00:00</updated-at>
      <user-id type="integer">6564</user-id>
      <version type="integer">15</version>
      <user-name>Randy Schmidt</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Pre 2.1 &quot;Passengers&quot; are not compatible with Rails 2.3.x.

See: http://blog.phusion.nl/2009/03/01/phusion-passenger-211-beta-released-thanks-sponsors/

&quot;What&#8217;s new in 2.1.1?
Support for Rails 2.3&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pre 2.1 &quot;Passengers&quot; are not compatible with Rails 2.3.x.&lt;/p&gt;
&lt;p&gt;See: &lt;a href=&quot;http://blog.phusion.nl/2009/03/01/phusion-passenger-211-beta-released-thanks-sponsors/&quot;&gt;
http://blog.phusion.nl/2009/03/0...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&quot;What&amp;#8217;s new in 2.1.1? Support for Rails 2.3&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T14:41:15+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2009-03-09T14:41:18+00:00</updated-at>
      <user-id type="integer">46643</user-id>
      <version type="integer">16</version>
      <user-name>thedarkone</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just wondering if this resolution was in 3.0.4, or 3.0.5</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just wondering if this resolution was in 3.0.4, or 3.0.5&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-18T04:25:36+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">83</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2011-02-18T04:25:49+00:00</updated-at>
      <user-id type="integer">55350</user-id>
      <version type="integer">17</version>
      <user-name>almightylinuxgod (at me)</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Some of the couture &lt;a href=&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;vintage corset wedding dresses&lt;/a&gt; used satin soft and bright expression of the implicit import custom youth. The representative white flower embroidered at the white &lt;a href=&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;corset bodice wedding dresses&lt;/a&gt;, giving you an unparalleled romantic wedding.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Some of the couture &lt;a href=
&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;vintage
corset wedding dresses&lt;/a&gt; used satin soft and bright expression of
the implicit import custom youth. The representative white flower
embroidered at the white &lt;a href=
&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;corset
bodice wedding dresses&lt;/a&gt;, giving you an unparalleled romantic
wedding.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-18T07:31:13+00:00</created-at>
      <creator-id type="integer">12954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1601</number>
      <permalink>reset_session-doesnt-result-in-new-session-id-being-applied-via-set-cookie</permalink>
      <priority type="integer">83</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch rack session</tag>
      <title>reset_session Doesn't Result In New Session Id Being Applied Via Set-Cookie</title>
      <updated-at type="datetime">2011-02-18T10:10:47+00:00</updated-at>
      <user-id type="integer">137617</user-id>
      <version type="integer">18</version>
      <user-name>junjun555</user-name>
      <creator-name>Matt Bauer</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1601</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>24872b943b3be383ddcb5af0a9c3443b1fc34630</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-20T18:52:50+00:00</created-at>
      <filename>reset_session_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">73088</id>
      <size type="integer">5592</size>
      <uploader-id type="integer">12954</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/73088/reset_session_fix.diff</url>
    </attachment>
  </attachments>
</ticket>
