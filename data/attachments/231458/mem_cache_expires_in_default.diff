diff --git a/activesupport/lib/active_support/cache.rb b/activesupport/lib/active_support/cache.rb
index 3f31185..fea3bfb 100644
--- a/activesupport/lib/active_support/cache.rb
+++ b/activesupport/lib/active_support/cache.rb
@@ -225,14 +225,6 @@ module ActiveSupport
       end
 
       private
-        def expires_in(options)
-          expires_in = options && options[:expires_in]
-
-          raise ":expires_in must be a number" if expires_in && !expires_in.is_a?(Numeric)
-
-          expires_in || 0
-        end
-
         def log(operation, key, options)
           logger.debug("Cache #{operation}: #{key}#{options ? " (#{options.inspect})" : ""}") if logger && !silence? && !logger_off?
         end
diff --git a/activesupport/lib/active_support/cache/mem_cache_store.rb b/activesupport/lib/active_support/cache/mem_cache_store.rb
index 954d0f5..f3f0a86 100644
--- a/activesupport/lib/active_support/cache/mem_cache_store.rb
+++ b/activesupport/lib/active_support/cache/mem_cache_store.rb
@@ -15,6 +15,8 @@ module ActiveSupport
     # - Time-based expiry support. See #write and the +:expires_in+ option.
     # - Per-request in memory cache for all communication with the MemCache server(s).
     class MemCacheStore < Store
+      cattr_accessor :default_expires_in
+
       module Response # :nodoc:
         STORED      = "STORED\r\n"
         NOT_STORED  = "NOT_STORED\r\n"
@@ -26,6 +28,7 @@ module ActiveSupport
       def self.build_mem_cache(*addresses)
         addresses = addresses.flatten
         options = addresses.extract_options!
+        self.default_expires_in = options[:expires_in]
         addresses = ["localhost"] if addresses.empty?
         MemCache.new(addresses, options)
       end
@@ -133,6 +136,14 @@ module ActiveSupport
         def raw?(options)
           options && options[:raw]
         end
+
+        def expires_in(options)
+          expires_in = options && options[:expires_in] || default_expires_in
+
+          raise ":expires_in must be a number" if expires_in && !expires_in.is_a?(Numeric)
+
+          expires_in || 0
+        end
     end
   end
 end
