<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-10T12:22:27+00:00</created-at>
  <creator-id type="integer">40326</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1545</number>
  <permalink>error_messages_for-i18n-not-working-as-expected</permalink>
  <priority type="integer">903</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>error_messages_for i18n</tag>
  <title>Error_messages_for i18n not working as expected</title>
  <updated-at type="datetime">2009-08-09T18:37:37+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">5</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Maran Hidskes</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1545</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I've got some trouble translating the model name in the error string of error_messages_for. I'm not sure if it is a bug or me not understanding the inner workings of rails. The situation is as follows.

@@@ yaml
nl:
  activerecord:
    models:
      changed_organization: bedrijf
    errors:
      template:
        header:
          one: &quot;1 error on {{model}}&quot;
          other: &quot;{{count}} errors on {{model}}&quot;
@@@

Now when I call
@@@ ruby
error_message_for :changed_organization
@@@

I expect to get the following result
&quot;1 error on bedrijf&quot;
instead I get
&quot;1 error on changed organization&quot;

When we look at the code in active_record_helper (lines 196,197)
@@@ ruby
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(object_name, :default =&gt; object_name, :scope =&gt; [:activerecord, :models], :count =&gt; 1)
@@@
 
we see that rails first gsubs the underscore to a space and then tries to find a translation for this gsubbed string. I would have expected to first try to find the translation for the non gsubbed string and use the gsubbed string as the default value. YAML files, as far as I know, can't handle  keys with spaces so this won't ever work would it? My suggestion would be something like the following

@@@ ruby
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(options[:object_name].to_s, :default =&gt; object_name, :scope =&gt; [:activerecord, :models], :count =&gt; 1)
@@@

Can somebody help me out here, is it a bug or not?</original-body>
  <latest-body>I've got some trouble translating the model name in the error string of error_messages_for. I'm not sure if it is a bug or me not understanding the inner workings of rails. The situation is as follows.

@@@ yaml
nl:
  activerecord:
    models:
      changed_organization: bedrijf
    errors:
      template:
        header:
          one: &quot;1 error on {{model}}&quot;
          other: &quot;{{count}} errors on {{model}}&quot;
@@@

Now when I call
@@@ ruby
error_message_for :changed_organization
@@@

I expect to get the following result
&quot;1 error on bedrijf&quot;
instead I get
&quot;1 error on changed organization&quot;

When we look at the code in active_record_helper (lines 196,197)
@@@ ruby
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(object_name, :default =&gt; object_name, :scope =&gt; [:activerecord, :models], :count =&gt; 1)
@@@
 
we see that rails first gsubs the underscore to a space and then tries to find a translation for this gsubbed string. I would have expected to first try to find the translation for the non gsubbed string and use the gsubbed string as the default value. YAML files, as far as I know, can't handle  keys with spaces so this won't ever work would it? My suggestion would be something like the following

@@@ ruby
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(options[:object_name].to_s, :default =&gt; object_name, :scope =&gt; [:activerecord, :models], :count =&gt; 1)
@@@

Can somebody help me out here, is it a bug or not?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've got some trouble translating the model name in the error
string of error_messages_for. I'm not sure if it is a bug or me not
understanding the inner workings of rails. The situation is as
follows.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;
nl:
  activerecord:
    models:
      changed_organization: bedrijf
    errors:
      template:
        header:
          one: &amp;quot;1 error on {{model}}&amp;quot;
          other: &amp;quot;{{count}} errors on {{model}}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now when I call&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
error_message_for :changed_organization
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I expect to get the following result &quot;1 error on bedrijf&quot;
instead I get &quot;1 error on changed organization&quot;&lt;/p&gt;
&lt;p&gt;When we look at the code in active_record_helper (lines
196,197)&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(object_name, :default =&amp;gt; object_name, :scope =&amp;gt; [:activerecord, :models], :count =&amp;gt; 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we see that rails first gsubs the underscore to a space and then
tries to find a translation for this gsubbed string. I would have
expected to first try to find the translation for the non gsubbed
string and use the gsubbed string as the default value. YAML files,
as far as I know, can't handle keys with spaces so this won't ever
work would it? My suggestion would be something like the
following&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(options[:object_name].to_s, :default =&amp;gt; object_name, :scope =&amp;gt; [:activerecord, :models], :count =&amp;gt; 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can somebody help me out here, is it a bug or not?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've got some trouble translating the model name in the error string of error_messages_for. I'm not sure if it is a bug or me not understanding the inner workings of rails. The situation is as follows.

@@@ yaml
nl:
  activerecord:
    models:
      changed_organization: bedrijf
    errors:
      template:
        header:
          one: &quot;1 error on {{model}}&quot;
          other: &quot;{{count}} errors on {{model}}&quot;
@@@

Now when I call
@@@ ruby
error_message_for :changed_organization
@@@

I expect to get the following result
&quot;1 error on bedrijf&quot;
instead I get
&quot;1 error on changed organization&quot;

When we look at the code in active_record_helper (lines 196,197)
@@@ ruby
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(object_name, :default =&gt; object_name, :scope =&gt; [:activerecord, :models], :count =&gt; 1)
@@@
 
we see that rails first gsubs the underscore to a space and then tries to find a translation for this gsubbed string. I would have expected to first try to find the translation for the non gsubbed string and use the gsubbed string as the default value. YAML files, as far as I know, can't handle  keys with spaces so this won't ever work would it? My suggestion would be something like the following

@@@ ruby
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(options[:object_name].to_s, :default =&gt; object_name, :scope =&gt; [:activerecord, :models], :count =&gt; 1)
@@@

Can somebody help me out here, is it a bug or not?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've got some trouble translating the model name in the error
string of error_messages_for. I'm not sure if it is a bug or me not
understanding the inner workings of rails. The situation is as
follows.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;
nl:
  activerecord:
    models:
      changed_organization: bedrijf
    errors:
      template:
        header:
          one: &amp;quot;1 error on {{model}}&amp;quot;
          other: &amp;quot;{{count}} errors on {{model}}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now when I call&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
error_message_for :changed_organization
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I expect to get the following result &quot;1 error on bedrijf&quot;
instead I get &quot;1 error on changed organization&quot;&lt;/p&gt;
&lt;p&gt;When we look at the code in active_record_helper (lines
196,197)&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(object_name, :default =&amp;gt; object_name, :scope =&amp;gt; [:activerecord, :models], :count =&amp;gt; 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we see that rails first gsubs the underscore to a space and then
tries to find a translation for this gsubbed string. I would have
expected to first try to find the translation for the non gsubbed
string and use the gsubbed string as the default value. YAML files,
as far as I know, can't handle keys with spaces so this won't ever
work would it? My suggestion would be something like the
following&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
object_name = options[:object_name].to_s.gsub('_', ' ')
object_name = I18n.t(options[:object_name].to_s, :default =&amp;gt; object_name, :scope =&amp;gt; [:activerecord, :models], :count =&amp;gt; 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can somebody help me out here, is it a bug or not?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-10T12:22:27+00:00</created-at>
      <creator-id type="integer">40326</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1545</number>
      <permalink>error_messages_for-i18n-not-working-as-expected</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>error_messages_for i18n</tag>
      <title>Error_messages_for i18n not working as expected</title>
      <updated-at type="datetime">2008-12-10T12:22:29+00:00</updated-at>
      <user-id type="integer">40326</user-id>
      <version type="integer">1</version>
      <user-name>Maran Hidskes</user-name>
      <creator-name>Maran Hidskes</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1545</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Could you please ask in http://groups.google.com/group/rails-i18n ?

Most of us got this stuff successfully working.

I think we should close for now</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you please ask in &lt;a href=&quot;http://groups.google.com/group/rails-i18n&quot;&gt;http://groups.google.com/group/r...&lt;/a&gt;
?&lt;/p&gt;
&lt;p&gt;Most of us got this stuff successfully working.&lt;/p&gt;
&lt;p&gt;I think we should close for now&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-25T21:18:23+00:00</created-at>
      <creator-id type="integer">40326</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1545</number>
      <permalink>error_messages_for-i18n-not-working-as-expected</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>error_messages_for i18n</tag>
      <title>Error_messages_for i18n not working as expected</title>
      <updated-at type="datetime">2008-12-25T21:18:26+00:00</updated-at>
      <user-id type="integer">11102</user-id>
      <version type="integer">2</version>
      <user-name>Yaroslav Markin</user-name>
      <creator-name>Maran Hidskes</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1545</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I want to clarify the initial statement:
ActiveRecord has two methods to get the model- and attribute-names i18n'ed:
:human_name and :human_attribute_name
both use klass.name.underscore to get the default.
Latter is used by :full_messages, which is used in :error_messages_for.

So, why should :error_messages_for itself search with &quot;model name&quot; whereas every other code in the app uses &quot;model_name&quot;?

The locale would have to look like this:
en:
  activerecord:
    models:
      model name: &quot;Thingy&quot; # just to satisfy error_messages_for
      model_name: &quot;Thingy&quot; # used by the rest of the app
    attributes:
      model_name:
        column: &quot;Something&quot;

My selfmade solution is similar to above suggestion:
overwrite :error_messages_for and change the two lines in question to something like:
&lt;pre&gt;
object_name = options[:object_name].to_s
object_name = I18n.t(object_name, :default =&gt; object_name.gsub('_', ' '), :scope =&gt; [:activerecord, :models], :count =&gt; 1)
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I want to clarify the initial statement: ActiveRecord has two
methods to get the model- and attribute-names i18n'ed: :human_name
and :human_attribute_name both use klass.name.underscore to get the
default. Latter is used by :full_messages, which is used in
:error_messages_for.&lt;/p&gt;
&lt;p&gt;So, why should :error_messages_for itself search with &quot;model
name&quot; whereas every other code in the app uses &quot;model_name&quot;?&lt;/p&gt;
&lt;p&gt;The locale would have to look like this: en: activerecord:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;models:
  model name: &quot;Thingy&quot; # just to satisfy error_messages_for
  model_name: &quot;Thingy&quot; # used by the rest of the app
attributes:
  model_name:
    column: &quot;Something&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My selfmade solution is similar to above suggestion: overwrite
:error_messages_for and change the two lines in question to
something like:&lt;/p&gt;
&lt;pre&gt;
object_name = options[:object_name].to_s
object_name = I18n.t(object_name, :default =&amp;gt; object_name.gsub('_', ' '), :scope =&amp;gt; [:activerecord, :models], :count =&amp;gt; 1)
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-23T07:44:18+00:00</created-at>
      <creator-id type="integer">40326</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1545</number>
      <permalink>error_messages_for-i18n-not-working-as-expected</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>error_messages_for i18n</tag>
      <title>Error_messages_for i18n not working as expected</title>
      <updated-at type="datetime">2009-02-23T07:44:22+00:00</updated-at>
      <user-id type="integer">46699</user-id>
      <version type="integer">3</version>
      <user-name>Stefan Achatz</user-name>
      <creator-name>Maran Hidskes</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1545</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hy,

I can confirm this strange behaviour.
In my opinion the translation file should be clean and straightforward (no doubles with &amp; without spaces).
And I've learned the convention is that keys are underscored_names and not spaced names.

The attachment contains a diff that fixes the issue. (I've made the same correction like Stefan Achatz did)

Cheers, Lukas Rieder</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hy,&lt;/p&gt;
&lt;p&gt;I can confirm this strange behaviour. In my opinion the
translation file should be clean and straightforward (no doubles
with &amp;amp; without spaces). And I've learned the convention is that
keys are underscored_names and not spaced names.&lt;/p&gt;
&lt;p&gt;The attachment contains a diff that fixes the issue. (I've made
the same correction like Stefan Achatz did)&lt;/p&gt;
&lt;p&gt;Cheers, Lukas Rieder&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-23T18:02:39+00:00</created-at>
      <creator-id type="integer">40326</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1545</number>
      <permalink>error_messages_for-i18n-not-working-as-expected</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>error_messages_for i18n</tag>
      <title>Error_messages_for i18n not working as expected</title>
      <updated-at type="datetime">2009-03-23T18:02:45+00:00</updated-at>
      <user-id type="integer">28685</user-id>
      <version type="integer">4</version>
      <user-name>Lukas Rieder</user-name>
      <creator-name>Maran Hidskes</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1545</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This was fixed some time ago (yes!), you can see that this behavior cannot be reproduced on master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This was fixed some time ago (yes!), you can see that this
behavior cannot be reproduced on master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T18:37:35+01:00</created-at>
      <creator-id type="integer">40326</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1545</number>
      <permalink>error_messages_for-i18n-not-working-as-expected</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>error_messages_for i18n</tag>
      <title>Error_messages_for i18n not working as expected</title>
      <updated-at type="datetime">2009-08-09T18:37:37+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Maran Hidskes</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1545</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>7c0da6696c3cc82468d57d591cfd59a2a6486908</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-23T18:02:39+00:00</created-at>
      <filename>error_messages_for_translation.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">102937</id>
      <size type="integer">1021</size>
      <uploader-id type="integer">28685</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/102937/error_messages_for_translation.diff</url>
    </attachment>
  </attachments>
</ticket>
