<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-27T03:19:26+01:00</created-at>
  <creator-id type="integer">24645</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">496</number>
  <permalink>create_table-with-explicit-primary_key-attribute</permalink>
  <priority type="integer">17804</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>activerecord</tag>
  <title>create_table with explicit :primary_key attribute</title>
  <updated-at type="datetime">2008-09-18T05:07:31+01:00</updated-at>
  <user-id type="integer">14890</user-id>
  <version type="integer">4</version>
  <user-name>Tarmo T&#228;nav</user-name>
  <creator-name>datanoise</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/496</url>
  <priority-name nil="true"></priority-name>
  <original-body>SchemaStatements#create_table generates incorrect statement when :primary_key is specified. It works correctly in Rails 1.2.6


@@@
&gt;&gt; c.create_table 'testings', :primary_key =&gt; 'code' do |t|
?&gt;   t.string 'code', :limit =&gt; 2
&gt;&gt;   t.string 'name', :limit =&gt; 10
&gt;&gt; end
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB' at line 1: CREATE TABLE `testings` (`code` int(11) DEFAULT NULL auto_increment PRIMARY KEY(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:299:in `execute'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/schema_statements.rb:108:in `create_table'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:434:in `create_table'
	from (irb):4
@@@</original-body>
  <latest-body>SchemaStatements#create_table generates incorrect statement when :primary_key is specified. It works correctly in Rails 1.2.6


@@@
&gt;&gt; c.create_table 'testings', :primary_key =&gt; 'code' do |t|
?&gt;   t.string 'code', :limit =&gt; 2
&gt;&gt;   t.string 'name', :limit =&gt; 10
&gt;&gt; end
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB' at line 1: CREATE TABLE `testings` (`code` int(11) DEFAULT NULL auto_increment PRIMARY KEY(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:299:in `execute'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/schema_statements.rb:108:in `create_table'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:434:in `create_table'
	from (irb):4
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
SchemaStatements#create_table generates incorrect statement when :primary_key is specified. It works correctly in Rails 1.2.6
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; c.create_table 'testings', :primary_key =&amp;gt; 'code' do |t|
?&amp;gt;   t.string 'code', :limit =&amp;gt; 2
&amp;gt;&amp;gt;   t.string 'name', :limit =&amp;gt; 10
&amp;gt;&amp;gt; end
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB' at line 1: CREATE TABLE `testings` (`code` int(11) DEFAULT NULL auto_increment PRIMARY KEY(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:299:in `execute'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/schema_statements.rb:108:in `create_table'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:434:in `create_table'
	from (irb):4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>SchemaStatements#create_table generates incorrect statement when :primary_key is specified. It works correctly in Rails 1.2.6


@@@
&gt;&gt; c.create_table 'testings', :primary_key =&gt; 'code' do |t|
?&gt;   t.string 'code', :limit =&gt; 2
&gt;&gt;   t.string 'name', :limit =&gt; 10
&gt;&gt; end
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB' at line 1: CREATE TABLE `testings` (`code` int(11) DEFAULT NULL auto_increment PRIMARY KEY(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:299:in `execute'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/schema_statements.rb:108:in `create_table'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:434:in `create_table'
	from (irb):4
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
SchemaStatements#create_table generates incorrect statement when :primary_key is specified. It works correctly in Rails 1.2.6
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; c.create_table 'testings', :primary_key =&amp;gt; 'code' do |t|
?&amp;gt;   t.string 'code', :limit =&amp;gt; 2
&amp;gt;&amp;gt;   t.string 'name', :limit =&amp;gt; 10
&amp;gt;&amp;gt; end
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB' at line 1: CREATE TABLE `testings` (`code` int(11) DEFAULT NULL auto_increment PRIMARY KEY(2), `name` varchar(10) DEFAULT NULL NULL) ENGINE=InnoDB
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:299:in `execute'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/schema_statements.rb:108:in `create_table'
	from /usr/local/lib/ruby/gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/mysql_adapter.rb:434:in `create_table'
	from (irb):4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-27T03:19:27+01:00</created-at>
      <creator-id type="integer">24645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">496</number>
      <permalink>create_table-with-explicit-primary_key-attribute</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>create_table with explicit :primary_key attribute</title>
      <updated-at type="datetime">2008-06-27T03:19:27+01:00</updated-at>
      <user-id type="integer">24645</user-id>
      <version type="integer">1</version>
      <user-name>datanoise</user-name>
      <creator-name>datanoise</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/496</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What you've tried to do doesn't quite make sense. You want your primary key to be a string? I'm not sure if Rails supports this. In any case, it isn't possible to do this with migrations. The :primary_key option for create_table is simply for giving a different name for the column. You're not supposed to give an alternative definition for that column as well. This does highlight the issue I was going to raise when I stumbled across this ticket though. It is currently not possible to choose a limit for the primary key either. It is hardcoded to int(11).</body>
      <body-html>&lt;div&gt;&lt;p&gt;What you've tried to do doesn't quite make sense. You want your primary key to be a string? I'm not sure if Rails supports this. In any case, it isn't possible to do this with migrations. The :primary_key option for create_table is simply for giving a different name for the column. You're not supposed to give an alternative definition for that column as well. This does highlight the issue I was going to raise when I stumbled across this ticket though. It is currently not possible to choose a limit for the primary key either. It is hardcoded to int(11).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T23:04:12+01:00</created-at>
      <creator-id type="integer">24645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">496</number>
      <permalink>create_table-with-explicit-primary_key-attribute</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>create_table with explicit :primary_key attribute</title>
      <updated-at type="datetime">2008-08-15T23:04:12+01:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">2</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>datanoise</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/496</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It is not currently possible to use string keys with AR (and I doubt it ever will be). Ran into that a few months ago with a legacy db.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It is not currently possible to use string keys with AR (and I doubt it ever will be). Ran into that a few months ago with a legacy db.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-18T21:31:23+01:00</created-at>
      <creator-id type="integer">24645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">496</number>
      <permalink>create_table-with-explicit-primary_key-attribute</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>create_table with explicit :primary_key attribute</title>
      <updated-at type="datetime">2008-08-18T21:31:23+01:00</updated-at>
      <user-id type="integer">11359</user-id>
      <version type="integer">3</version>
      <user-name>Tony Pitale</user-name>
      <creator-name>datanoise</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/496</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>#876 seems to try to address this</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/876&quot; title=&quot;Ticket #876&quot;&gt;#876&lt;/a&gt; seems to try to address this&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-18T05:07:27+01:00</created-at>
      <creator-id type="integer">24645</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: activerecord
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">496</number>
      <permalink>create_table-with-explicit-primary_key-attribute</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord</tag>
      <title>create_table with explicit :primary_key attribute</title>
      <updated-at type="datetime">2008-09-18T05:07:31+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">4</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>datanoise</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/496</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
