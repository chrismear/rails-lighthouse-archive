<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-20T10:43:54+00:00</created-at>
  <creator-id type="integer">52753</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4007</number>
  <permalink>rails-3-null-false-tests-and-activerecordstatementinvalid-sqlite3sqlexception-xxxxx-may-not-be-null</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>rails3 tests</tag>
  <title>Rails 3: :null =&gt; false, tests and ActiveRecord::StatementInvalid: SQLite3::SQLException XXXXX may not be NULL</title>
  <updated-at type="datetime">2010-02-23T21:30:43+00:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">2</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Marc Love</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4007</url>
  <priority-name>Low</priority-name>
  <original-body>Okay, long description here, but follow me...

-----

Create a new Rails project

@@@ ruby
rails testapp
cd testapp
@@@

Create your first resource

@@@ ruby
rails generate resource User
@@@

Create a migration that sets :null =&gt; false on a field

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def self.up
    create_table :users do |t|
      t.string :email, :null =&gt; false
      t.timestamps
    end
  end

  def self.down
    drop_table :users
  end
end
@@@

Run your migration

@@@ ruby
rake db:migrate
@@@

Try to run your default &quot;test truth&quot; tests

@@@ ruby
rake test:units
@@@

This gives the following error message:

@@@
Loaded suite /Users/marc/.bundle/ruby/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
E
Finished in 0.066302 seconds.

  1) Error:
test_the_truth(UserTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: users.email may not be NULL: INSERT INTO &quot;users&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;id&quot;) VALUES ('2010-02-20 10:39:59', '2010-02-20 10:39:59', 298486374)
    

1 tests, 0 assertions, 0 failures, 1 errors
rake aborted!
Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/Users/m...]
@@@

The same error pops up for any actual tests you create. The hangup seems to be any columns set to :null =&gt; false</original-body>
  <latest-body>Okay, long description here, but follow me...

-----

Create a new Rails project

@@@ ruby
rails testapp
cd testapp
@@@

Create your first resource

@@@ ruby
rails generate resource User
@@@

Create a migration that sets :null =&gt; false on a field

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def self.up
    create_table :users do |t|
      t.string :email, :null =&gt; false
      t.timestamps
    end
  end

  def self.down
    drop_table :users
  end
end
@@@

Run your migration

@@@ ruby
rake db:migrate
@@@

Try to run your default &quot;test truth&quot; tests

@@@ ruby
rake test:units
@@@

This gives the following error message:

@@@
Loaded suite /Users/marc/.bundle/ruby/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
E
Finished in 0.066302 seconds.

  1) Error:
test_the_truth(UserTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: users.email may not be NULL: INSERT INTO &quot;users&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;id&quot;) VALUES ('2010-02-20 10:39:59', '2010-02-20 10:39:59', 298486374)
    

1 tests, 0 assertions, 0 failures, 1 errors
rake aborted!
Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/Users/m...]
@@@

The same error pops up for any actual tests you create. The hangup seems to be any columns set to :null =&gt; false</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Okay, long description here, but follow me...&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Create a new Rails project&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rails testapp
cd testapp&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Create your first resource&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rails generate resource User&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Create a migration that sets :null =&amp;gt; false on a field&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :users do |t|
      t.string :email, :null =&amp;gt; false
      t.timestamps
    end
  end

  def self.down
    drop_table :users
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Run your migration&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rake db:migrate&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Try to run your default &quot;test truth&quot; tests&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rake test:units&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This gives the following error message:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loaded suite /Users/marc/.bundle/ruby/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
E
Finished in 0.066302 seconds.

  1) Error:
test_the_truth(UserTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: users.email may not be NULL: INSERT INTO &quot;users&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;id&quot;) VALUES ('2010-02-20 10:39:59', '2010-02-20 10:39:59', 298486374)
    

1 tests, 0 assertions, 0 failures, 1 errors
rake aborted!
Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/Users/m...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The same error pops up for any actual tests you create. The
hangup seems to be any columns set to :null =&amp;gt; false&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Okay, long description here, but follow me...

-----

Create a new Rails project

@@@ ruby
rails testapp
cd testapp
@@@

Create your first resource

@@@ ruby
rails generate resource User
@@@

Create a migration that sets :null =&gt; false on a field

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def self.up
    create_table :users do |t|
      t.string :email, :null =&gt; false
      t.timestamps
    end
  end

  def self.down
    drop_table :users
  end
end
@@@

Run your migration

@@@ ruby
rake db:migrate
@@@

Try to run your default &quot;test truth&quot; tests

@@@ ruby
rake test:units
@@@

This gives the following error message:

@@@
Loaded suite /Users/marc/.bundle/ruby/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
E
Finished in 0.066302 seconds.

  1) Error:
test_the_truth(UserTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: users.email may not be NULL: INSERT INTO &quot;users&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;id&quot;) VALUES ('2010-02-20 10:39:59', '2010-02-20 10:39:59', 298486374)
    

1 tests, 0 assertions, 0 failures, 1 errors
rake aborted!
Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/Users/m...]
@@@

The same error pops up for any actual tests you create. The hangup seems to be any columns set to :null =&gt; false</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay, long description here, but follow me...&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Create a new Rails project&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rails testapp
cd testapp&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Create your first resource&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rails generate resource User&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Create a migration that sets :null =&amp;gt; false on a field&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :users do |t|
      t.string :email, :null =&amp;gt; false
      t.timestamps
    end
  end

  def self.down
    drop_table :users
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Run your migration&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rake db:migrate&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Try to run your default &quot;test truth&quot; tests&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;rake test:units&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This gives the following error message:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loaded suite /Users/marc/.bundle/ruby/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
E
Finished in 0.066302 seconds.

  1) Error:
test_the_truth(UserTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: users.email may not be NULL: INSERT INTO &quot;users&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;id&quot;) VALUES ('2010-02-20 10:39:59', '2010-02-20 10:39:59', 298486374)
    

1 tests, 0 assertions, 0 failures, 1 errors
rake aborted!
Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/Users/m...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The same error pops up for any actual tests you create. The
hangup seems to be any columns set to :null =&amp;gt; false&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-20T10:43:54+00:00</created-at>
      <creator-id type="integer">52753</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4007</number>
      <permalink>rails-3-null-false-tests-and-activerecordstatementinvalid-sqlite3sqlexception-xxxxx-may-not-be-null</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3 tests</tag>
      <title>Rails 3: :null =&gt; false, tests and ActiveRecord::StatementInvalid: SQLite3::SQLException XXXXX may not be NULL</title>
      <updated-at type="datetime">2010-02-20T10:44:48+00:00</updated-at>
      <user-id type="integer">52753</user-id>
      <version type="integer">1</version>
      <user-name>Marc Love</user-name>
      <creator-name>Marc Love</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4007</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, this is expected. You have to configure your fixtures or given the proper args to User.create.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, this is expected. You have to configure your fixtures or
given the proper args to User.create.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-02-23T21:30:41+00:00</created-at>
      <creator-id type="integer">52753</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4007</number>
      <permalink>rails-3-null-false-tests-and-activerecordstatementinvalid-sqlite3sqlexception-xxxxx-may-not-be-null</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>rails3 tests</tag>
      <title>Rails 3: :null =&gt; false, tests and ActiveRecord::StatementInvalid: SQLite3::SQLException XXXXX may not be NULL</title>
      <updated-at type="datetime">2010-02-23T21:30:43+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Marc Love</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4007</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
