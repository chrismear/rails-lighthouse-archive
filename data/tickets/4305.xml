<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-03-31T23:56:09+01:00</created-at>
  <creator-id type="integer">63820</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4305</number>
  <permalink>activerecordfind-uses-first-cache-for-all-when-options-exist</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord cache</tag>
  <title>ActiveRecord#find uses :first Cache for :all when options exist</title>
  <updated-at type="datetime">2011-02-02T17:52:04+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>michaelmell</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4305</url>
  <priority-name nil="true"></priority-name>
  <original-body>When doing a #find :first followed by a #find :all with identical options, the find :all incorrectly uses an AR Cache of :first containing &quot;LIMIT 1&quot;. This only happens when there are options and when :first precedes :all.

For example, with this in an action:
@@@ ruby
  opts = { :order =&gt; :name }
  @user = User.find(:first, opts)
  @users = User.find(:all, opts)
@@@
the log shows:
  [4;36;1mUser Load (0.6ms) [0m  [0;1mSELECT * FROM &quot;users&quot; ORDER BY name LIMIT 1 [0m

  [4;35;1mCACHE (0.0ms) [0m  [0mSELECT * FROM &quot;users&quot; ORDER BY name LIMIT 1 [0m

Seen in Rails 2.3.5.</original-body>
  <latest-body>When doing a #find :first followed by a #find :all with identical options, the find :all incorrectly uses an AR Cache of :first containing &quot;LIMIT 1&quot;. This only happens when there are options and when :first precedes :all.

For example, with this in an action:
@@@ ruby
  opts = { :order =&gt; :name }
  @user = User.find(:first, opts)
  @users = User.find(:all, opts)
@@@
the log shows:
  [4;36;1mUser Load (0.6ms) [0m  [0;1mSELECT * FROM &quot;users&quot; ORDER BY name LIMIT 1 [0m

  [4;35;1mCACHE (0.0ms) [0m  [0mSELECT * FROM &quot;users&quot; ORDER BY name LIMIT 1 [0m

Seen in Rails 2.3.5.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When doing a #find :first followed by a #find :all with
identical options, the find :all incorrectly uses an AR Cache of
:first containing &quot;LIMIT 1&quot;. This only happens when there are
options and when :first precedes :all.&lt;/p&gt;
&lt;p&gt;For example, with this in an action:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  opts = { :order =&amp;gt; :name }
  @user = User.find(:first, opts)
  @users = User.find(:all, opts)&lt;/code&gt;
&lt;/pre&gt;
the log shows:&lt;br&gt;
[4;36;1mUser Load (0.6ms) [0m [0;1mSELECT * FROM &quot;users&quot; ORDER BY
name LIMIT 1 [0m
&lt;p&gt;[4;35;1mCACHE (0.0ms) [0m [0mSELECT * FROM &quot;users&quot; ORDER BY name
LIMIT 1 [0m&lt;/p&gt;
&lt;p&gt;Seen in Rails 2.3.5.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When doing a #find :first followed by a #find :all with identical options, the find :all incorrectly uses an AR Cache of :first containing &quot;LIMIT 1&quot;. This only happens when there are options and when :first precedes :all.

For example, with this in an action:
@@@ ruby
  opts = { :order =&gt; :name }
  @user = User.find(:first, opts)
  @users = User.find(:all, opts)
@@@
the log shows:
  [4;36;1mUser Load (0.6ms) [0m  [0;1mSELECT * FROM &quot;users&quot; ORDER BY name LIMIT 1 [0m

  [4;35;1mCACHE (0.0ms) [0m  [0mSELECT * FROM &quot;users&quot; ORDER BY name LIMIT 1 [0m

Seen in Rails 2.3.5.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When doing a #find :first followed by a #find :all with
identical options, the find :all incorrectly uses an AR Cache of
:first containing &quot;LIMIT 1&quot;. This only happens when there are
options and when :first precedes :all.&lt;/p&gt;
&lt;p&gt;For example, with this in an action:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  opts = { :order =&amp;gt; :name }
  @user = User.find(:first, opts)
  @users = User.find(:all, opts)&lt;/code&gt;
&lt;/pre&gt;
the log shows:&lt;br&gt;
[4;36;1mUser Load (0.6ms) [0m [0;1mSELECT * FROM &quot;users&quot; ORDER BY
name LIMIT 1 [0m
&lt;p&gt;[4;35;1mCACHE (0.0ms) [0m [0mSELECT * FROM &quot;users&quot; ORDER BY name
LIMIT 1 [0m&lt;/p&gt;
&lt;p&gt;Seen in Rails 2.3.5.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-31T23:56:09+01:00</created-at>
      <creator-id type="integer">63820</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4305</number>
      <permalink>activerecordfind-uses-first-cache-for-all-when-options-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord cache</tag>
      <title>ActiveRecord#find uses :first Cache for :all when options exist</title>
      <updated-at type="datetime">2010-04-01T00:06:58+01:00</updated-at>
      <user-id type="integer">63820</user-id>
      <version type="integer">1</version>
      <user-name>michaelmell</user-name>
      <creator-name>michaelmell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4305</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:44:16+00:00</created-at>
      <creator-id type="integer">63820</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4305</number>
      <permalink>activerecordfind-uses-first-cache-for-all-when-options-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord cache</tag>
      <title>ActiveRecord#find uses :first Cache for :all when options exist</title>
      <updated-at type="datetime">2011-02-02T17:52:04+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>michaelmell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4305</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:44:17+00:00</created-at>
      <creator-id type="integer">63820</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4305</number>
      <permalink>activerecordfind-uses-first-cache-for-all-when-options-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord cache</tag>
      <title>ActiveRecord#find uses :first Cache for :all when options exist</title>
      <updated-at type="datetime">2011-02-02T17:51:53+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>michaelmell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4305</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
