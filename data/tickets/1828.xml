<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-30T17:20:46+00:00</created-at>
  <creator-id type="integer">17709</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1828</number>
  <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
  <priority type="integer">1115</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>23 activeresource bug</tag>
  <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
  <updated-at type="datetime">2011-02-02T17:45:04+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">16</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Maxim Chernyak</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I'm not sure if this is a bug, or is it me misusing #to_xml, but I get &quot;Wrong number of arguments&quot; when trying to load a model which has &lt;object&gt; tag in its xml representation.

The reason seems to lie in find_or_create_resource_for(name) in ActiveResource::Base.  I traced the issue down to the following point.

Let's say our model is Post. Here's what's going to happen:

@@@ ruby
      def find_or_create_resource_for(name)
        # name is &quot;object&quot;

        resource_name = name.to_s.camelize
        # resouce_name is &quot;Object&quot;
        
        ancestors = self.class.name.split(&quot;::&quot;)
        # ancestors is [&quot;Post&quot;]

        if ancestors.size &gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          
          self.class.const_get(resource_name)
          # ===&gt; This line will return Object, not Asset::Object
        
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
@@@

As mentioned above - the const_get returns Object, and then ActiveResource tries to call Object.new(attrs), whereas Object constructor doesn't take params.

This causes &quot;Wrong number of arguments (1 for 0)&quot; error when attempting to do Post.find(:last) on the ActiveResource client.

One way to fix it is to raise NameError explicitly.

@@@ ruby
      def find_or_create_resource_for(name)
        resource_name = name.to_s.camelize
        
        # ==&gt; Adding this line fixes the error. 
        raise NameError if resource_name == &quot;Object&quot;
        
        ancestors = self.class.name.split(&quot;::&quot;)
        if ancestors.size &gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          self.class.const_get(resource_name)
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
@@@

Raising NameError causes execution to jump to the rescue clause where &quot;object&quot; is handled properly. Should this be fixed?</original-body>
  <latest-body>I'm not sure if this is a bug, or is it me misusing #to_xml, but I get &quot;Wrong number of arguments&quot; when trying to load a model which has &lt;object&gt; tag in its xml representation.

The reason seems to lie in find_or_create_resource_for(name) in ActiveResource::Base.  I traced the issue down to the following point.

Let's say our model is Post. Here's what's going to happen:

@@@ ruby
      def find_or_create_resource_for(name)
        # name is &quot;object&quot;

        resource_name = name.to_s.camelize
        # resouce_name is &quot;Object&quot;
        
        ancestors = self.class.name.split(&quot;::&quot;)
        # ancestors is [&quot;Post&quot;]

        if ancestors.size &gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          
          self.class.const_get(resource_name)
          # ===&gt; This line will return Object, not Asset::Object
        
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
@@@

As mentioned above - the const_get returns Object, and then ActiveResource tries to call Object.new(attrs), whereas Object constructor doesn't take params.

This causes &quot;Wrong number of arguments (1 for 0)&quot; error when attempting to do Post.find(:last) on the ActiveResource client.

One way to fix it is to raise NameError explicitly.

@@@ ruby
      def find_or_create_resource_for(name)
        resource_name = name.to_s.camelize
        
        # ==&gt; Adding this line fixes the error. 
        raise NameError if resource_name == &quot;Object&quot;
        
        ancestors = self.class.name.split(&quot;::&quot;)
        if ancestors.size &gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          self.class.const_get(resource_name)
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
@@@

Raising NameError causes execution to jump to the rescue clause where &quot;object&quot; is handled properly. Should this be fixed?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm not sure if this is a bug, or is it me misusing #to_xml, but
I get &quot;Wrong number of arguments&quot; when trying to load a model which
has tag in its xml representation.&lt;/p&gt;
&lt;p&gt;The reason seems to lie in find_or_create_resource_for(name) in
ActiveResource::Base. I traced the issue down to the following
point.&lt;/p&gt;
&lt;p&gt;Let's say our model is Post. Here's what's going to happen:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
      def find_or_create_resource_for(name)
        # name is &amp;quot;object&amp;quot;

        resource_name = name.to_s.camelize
        # resouce_name is &amp;quot;Object&amp;quot;
        
        ancestors = self.class.name.split(&amp;quot;::&amp;quot;)
        # ancestors is [&amp;quot;Post&amp;quot;]

        if ancestors.size &amp;gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          
          self.class.const_get(resource_name)
          # ===&amp;gt; This line will return Object, not Asset::Object
        
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As mentioned above - the const_get returns Object, and then
ActiveResource tries to call Object.new(attrs), whereas Object
constructor doesn't take params.&lt;/p&gt;
&lt;p&gt;This causes &quot;Wrong number of arguments (1 for 0)&quot; error when
attempting to do Post.find(:last) on the ActiveResource client.&lt;/p&gt;
&lt;p&gt;One way to fix it is to raise NameError explicitly.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
      def find_or_create_resource_for(name)
        resource_name = name.to_s.camelize
        
        # ==&amp;gt; Adding this line fixes the error. 
        raise NameError if resource_name == &amp;quot;Object&amp;quot;
        
        ancestors = self.class.name.split(&amp;quot;::&amp;quot;)
        if ancestors.size &amp;gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          self.class.const_get(resource_name)
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Raising NameError causes execution to jump to the rescue clause
where &quot;object&quot; is handled properly. Should this be fixed?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure if this is a bug, or is it me misusing #to_xml, but I get &quot;Wrong number of arguments&quot; when trying to load a model which has &amp;lt;object&amp;gt; tag in its xml representation.

The reason seems to lie in find_or_create_resource_for(name) in ActiveResource::Base.  I traced the issue down to the following point.

Let's say our model is Post. Here's what's going to happen:

@@@ ruby
      def find_or_create_resource_for(name)
        # name is &quot;object&quot;

        resource_name = name.to_s.camelize
        # resouce_name is &quot;Object&quot;
        
        ancestors = self.class.name.split(&quot;::&quot;)
        # ancestors is [&quot;Post&quot;]

        if ancestors.size &gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          
          self.class.const_get(resource_name)
          # ===&gt; This line will return Object, not Post::Object,
          #      which breaks because ActiveResource calls Object.new(value)
          #      but Object's initializer doesn't take args.
        
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
@@@

As mentioned above - the const_get returns Object, and then ActiveResource tries to call Object.new(value), whereas Object constructor doesn't take params.

This causes &quot;Wrong number of arguments (1 for 0)&quot; error when attempting to do Post.find(:last) on the ActiveResource client.

One way to fix it is to raise NameError explicitly.

@@@ ruby
      def find_or_create_resource_for(name)
        resource_name = name.to_s.camelize
        
        # ==&gt; Adding this line fixes the error. 
        raise NameError if resource_name == &quot;Object&quot;
        
        ancestors = self.class.name.split(&quot;::&quot;)
        if ancestors.size &gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          self.class.const_get(resource_name)
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
@@@

Raising NameError causes execution to jump to the rescue clause where &quot;object&quot; is handled properly. Should this be fixed?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure if this is a bug, or is it me misusing #to_xml, but
I get &quot;Wrong number of arguments&quot; when trying to load a model which
has &amp;lt;object&amp;gt; tag in its xml representation.&lt;/p&gt;
&lt;p&gt;The reason seems to lie in find_or_create_resource_for(name) in
ActiveResource::Base. I traced the issue down to the following
point.&lt;/p&gt;
&lt;p&gt;Let's say our model is Post. Here's what's going to happen:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
      def find_or_create_resource_for(name)
        # name is &amp;quot;object&amp;quot;

        resource_name = name.to_s.camelize
        # resouce_name is &amp;quot;Object&amp;quot;
        
        ancestors = self.class.name.split(&amp;quot;::&amp;quot;)
        # ancestors is [&amp;quot;Post&amp;quot;]

        if ancestors.size &amp;gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          
          self.class.const_get(resource_name)
          # ===&amp;gt; This line will return Object, not Post::Object,
          #      which breaks because ActiveResource calls Object.new(value)
          #      but Object's initializer doesn't take args.
        
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As mentioned above - the const_get returns Object, and then
ActiveResource tries to call Object.new(value), whereas Object
constructor doesn't take params.&lt;/p&gt;
&lt;p&gt;This causes &quot;Wrong number of arguments (1 for 0)&quot; error when
attempting to do Post.find(:last) on the ActiveResource client.&lt;/p&gt;
&lt;p&gt;One way to fix it is to raise NameError explicitly.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
      def find_or_create_resource_for(name)
        resource_name = name.to_s.camelize
        
        # ==&amp;gt; Adding this line fixes the error. 
        raise NameError if resource_name == &amp;quot;Object&amp;quot;
        
        ancestors = self.class.name.split(&amp;quot;::&amp;quot;)
        if ancestors.size &amp;gt; 1
          find_resource_in_modules(resource_name, ancestors)
        else
          self.class.const_get(resource_name)
        end
      rescue NameError
        if self.class.const_defined?(resource_name)
          resource = self.class.const_get(resource_name)
        else
          resource = self.class.const_set(resource_name, Class.new(ActiveResource::Base))
        end
        resource.prefix = self.class.prefix
        resource.site   = self.class.site
        resource
      end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Raising NameError causes execution to jump to the rescue clause
where &quot;object&quot; is handled properly. Should this be fixed?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-30T17:20:46+00:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-02-02T03:56:32+00:00</updated-at>
      <user-id type="integer">17709</user-id>
      <version type="integer">1</version>
      <user-name>Maxim Chernyak</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T13:28:19+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 activeresource bug
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-08-05T13:28:24+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>verified 

-1 on this - I think accommodating the object element will lead to lots of special handling

From an XML perspective as well, it's not very descriptive of the &quot;object&quot; it's referring to - it should be renamed</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified&lt;/p&gt;
&lt;p&gt;-1 on this - I think accommodating the object element will lead
to lots of special handling&lt;/p&gt;
&lt;p&gt;From an XML perspective as well, it's not very descriptive of
the &quot;object&quot; it's referring to - it should be renamed&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T22:38:49+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-08-08T22:38:52+01:00</updated-at>
      <user-id type="integer">22242</user-id>
      <version type="integer">3</version>
      <user-name>Dan Pickett</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails produces an obscure error for certain completely valid xml.  Isn't it worth it to at least throw a better message saying &quot;sorry but &lt;object&gt; tag is not allowed in rails&quot;? What about legacy XML or generic interfaces where &lt;object&gt; IS intended for generic use?

Besides it's creepy that I can get someone's rails app to execute Object.new by simply sending some xml. You don't always know what you're getting.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails produces an obscure error for certain completely valid
xml. Isn't it worth it to at least throw a better message saying
&quot;sorry but tag is not allowed in rails&quot;? What about legacy XML or
generic interfaces where IS intended for generic use?&lt;/p&gt;
&lt;p&gt;Besides it's creepy that I can get someone's rails app to
execute Object.new by simply sending some xml. You don't always
know what you're getting.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T22:59:05+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-08-08T22:59:10+01:00</updated-at>
      <user-id type="integer">17709</user-id>
      <version type="integer">4</version>
      <user-name>Maxim Chernyak</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have to agree with both Dan and Maxim in this case (can I do that?). I don't like the idea of adding special, possibly hardcoded, handling into this.  However is it creepy think that someone posting some XML with can get the app to execute the Object.new.

That said, a reserved work list for the XML generator may be the way to get around this. If, at minimum, the reserved words throw a useful error back to the user.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have to agree with both Dan and Maxim in this case (can I do
that?). I don't like the idea of adding special, possibly
hardcoded, handling into this. However is it creepy think that
someone posting some XML with can get the app to execute the
Object.new.&lt;/p&gt;
&lt;p&gt;That said, a reserved work list for the XML generator may be the
way to get around this. If, at minimum, the reserved words throw a
useful error back to the user.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-11T13:53:05+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-08-11T13:53:09+01:00</updated-at>
      <user-id type="integer">18336</user-id>
      <version type="integer">5</version>
      <user-name>Peer Allan</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>verified on master and 2-3-stable

I've attached a patch; failing test for master (cherry picks into 2-3-stable) as well a patch for 2-3-stable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified on master and 2-3-stable&lt;/p&gt;
&lt;p&gt;I've attached a patch; failing test for master (cherry picks
into 2-3-stable) as well a patch for 2-3-stable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T15:54:01+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-09-27T15:54:03+01:00</updated-at>
      <user-id type="integer">51191</user-id>
      <version type="integer">6</version>
      <user-name>hsume2 (Henry)</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>sorry, changed `address` to `object`</body>
      <body-html>&lt;div&gt;&lt;p&gt;sorry, changed &lt;code&gt;address&lt;/code&gt; to &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T15:59:10+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-09-27T15:59:14+01:00</updated-at>
      <user-id type="integer">51191</user-id>
      <version type="integer">7</version>
      <user-name>hsume2 (Henry)</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>-1.

Verified the bug, but I do not agree with the hardcoded solution.

I think it would be better to have some kind of reserved words list, as Peer Allan proposed. Is it possible and desirable (but I think it isn't) to &quot;unload&quot; some constants, as Object, before loading the XML?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Verified the bug, but I do not agree with the hardcoded
solution.&lt;/p&gt;
&lt;p&gt;I think it would be better to have some kind of reserved words
list, as Peer Allan proposed. Is it possible and desirable (but I
think it isn't) to &quot;unload&quot; some constants, as Object, before
loading the XML?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T16:24:09+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-09-27T16:24:15+01:00</updated-at>
      <user-id type="integer">40414</user-id>
      <version type="integer">8</version>
      <user-name>Elomar Fran&#231;a</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>+1 Verified, but i am too not very fond of the hard-code solution. I agree with Dan and Elomar, that Object should be left alone and a more descriptive name should be used ( + a reserved words list )</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 Verified, but i am too not very fond of the hard-code
solution. I agree with Dan and Elomar, that Object should be left
alone and a more descriptive name should be used ( + a reserved
words list )&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T16:33:06+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-09-27T16:33:10+01:00</updated-at>
      <user-id type="integer">36381</user-id>
      <version type="integer">9</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>+1 for reserved words list, especially for the case of nested, existing resources, since we wouldn't want anyone doing:

@@@
class Object &lt; ActiveResource::Base
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for reserved words list, especially for the case of nested,
existing resources, since we wouldn't want anyone doing:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Object &amp;lt; ActiveResource::Base
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T16:49:19+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-09-27T16:49:27+01:00</updated-at>
      <user-id type="integer">51191</user-id>
      <version type="integer">10</version>
      <user-name>hsume2 (Henry)</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>IMO, when dealing with APIs it's important to keep in mind flexible input -&gt; exact output principle. Object tag may appear on a more specific level, you know. It's a widely used english word after all. For example:

    &lt;game&gt;
      &lt;title&gt;Paintball&lt;/title&gt;
      &lt;object&gt;Kill everyone&lt;/object&gt;
      &lt;rules&gt;...&lt;/rules&gt;
    &lt;/game&gt;

I'm sure Game.new.object is not the only example.</body>
      <body-html>&lt;div&gt;&lt;p&gt;IMO, when dealing with APIs it's important to keep in mind
flexible input -&amp;gt; exact output principle. Object tag may appear
on a more specific level, you know. It's a widely used english word
after all. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;game&amp;gt;
  &amp;lt;title&amp;gt;Paintball&amp;lt;/title&amp;gt;
  &amp;lt;object&amp;gt;Kill everyone&amp;lt;/object&amp;gt;
  &amp;lt;rules&amp;gt;...&amp;lt;/rules&amp;gt;
&amp;lt;/game&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm sure Game.new.object is not the only example.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T17:11:14+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-09-27T17:11:18+01:00</updated-at>
      <user-id type="integer">17709</user-id>
      <version type="integer">11</version>
      <user-name>Maxim Chernyak</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@Maxim: correct, but stilll Game.new.objective is a much more clear / safe phrase to use.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Maxim: correct, but stilll Game.new.objective is a much more
clear / safe phrase to use.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T21:29:51+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug bugmash</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2009-09-27T21:29:56+01:00</updated-at>
      <user-id type="integer">36381</user-id>
      <version type="integer">12</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:14+00:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 activeresource bug bugmash
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2010-02-12T12:46:14+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">13</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:38+01:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 activeresource bug</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2010-05-04T18:48:38+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">14</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:42:23+00:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 activeresource bug
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">1115</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>23 activeresource bug</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2011-02-02T17:44:52+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">15</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:42:25+00:00</created-at>
      <creator-id type="integer">17709</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1828</number>
      <permalink>activeresource-breaks-when-encounters-object-tag-in-xml</permalink>
      <priority type="integer">1115</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>23 activeresource bug</tag>
      <title>ActiveResource breaks when encounters &lt;object&gt; tag in XML</title>
      <updated-at type="datetime">2011-02-02T17:45:04+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">16</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Maxim Chernyak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1828</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>6b0f8912799102928ff3b000ce1c024f17f50028</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T15:54:01+01:00</created-at>
      <filename>LH1828-active_resource_breaks_with_object_tag.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279633</id>
      <size type="integer">1478</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279633/LH1828-active_resource_breaks_with_object_tag.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>bc620d8a9ae1b5dedbac39efa674e17db0cd95f0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T15:54:01+01:00</created-at>
      <filename>LH1828-active_resource_breaks_with_object_tag_2-3-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279634</id>
      <size type="integer">1448</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279634/LH1828-active_resource_breaks_with_object_tag_2-3-stable.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>c383b3368f0755000939f1d26d4be7998fa6d4be</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T15:59:10+01:00</created-at>
      <filename>LH1828-active_resource_breaks_with_object_tag.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279635</id>
      <size type="integer">1477</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279635/LH1828-active_resource_breaks_with_object_tag.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>96327df6fd24710f3372af37a8bf884b4a2cf915</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T15:59:10+01:00</created-at>
      <filename>LH1828-active_resource_breaks_with_object_tag_2-3-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279636</id>
      <size type="integer">1447</size>
      <uploader-id type="integer">51191</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279636/LH1828-active_resource_breaks_with_object_tag_2-3-stable.diff</url>
    </attachment>
  </attachments>
</ticket>
