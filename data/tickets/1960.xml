<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-13T07:40:50+00:00</created-at>
  <creator-id type="integer">9698</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1960</number>
  <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
  <priority type="integer">1215</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
  <title>Make named_scopes remember the current scope when defined</title>
  <updated-at type="datetime">2009-03-26T13:20:43+00:00</updated-at>
  <user-id type="integer">51971</user-id>
  <version type="integer">14</version>
  <user-name>Alexander Podgorbunsky</user-name>
  <creator-name>Diego Algorta</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Given the following code:

@@@ ruby
class Post &lt; ActiveRecord::Base
  belongs_to :topic
  belongs_to :author

  named_scope :published, :conditions =&gt; {:published =&gt; true}
  named_scope :by_author, lambda {|a| {:conditions =&gt; {:author_id =&gt; a.id}}}
  named_scope :ranked, :order =&gt; &quot;posts.rank DESC&quot;
  named_scope :limit, lambda {|limit| {:limit =&gt; limit}}

  def self.top_by(an_author)
    published.by_author(an_author).ranked.limit(10)
  end
end

class Topic &lt; ActiveRecord::Base
  has_many :posts
end

class Author &lt; ActiveRecord::Base
  has_many :posts
end
@@@

Without this patch, `@topic.posts.top_by(@author)` generates the exact same query than `Post.top_by(@author)`, totally ignoring the scope added by the `has_many :posts` in `Topic`. That's because that scope is being removed from the stacked scopes after the top_by execution where the chained scopes where defined, but before the chained scopes are really executing thus firing the `Scope#load_found` call.

With this patch, the current scope is saved in the `Scope` instance at instantiation time, so it can be re-applied when executed.</original-body>
  <latest-body>Given the following code:

@@@ ruby
class Post &lt; ActiveRecord::Base
  belongs_to :topic
  belongs_to :author

  named_scope :published, :conditions =&gt; {:published =&gt; true}
  named_scope :by_author, lambda {|a| {:conditions =&gt; {:author_id =&gt; a.id}}}
  named_scope :ranked, :order =&gt; &quot;posts.rank DESC&quot;
  named_scope :limit, lambda {|limit| {:limit =&gt; limit}}

  def self.top_by(an_author)
    published.by_author(an_author).ranked.limit(10)
  end
end

class Topic &lt; ActiveRecord::Base
  has_many :posts
end

class Author &lt; ActiveRecord::Base
  has_many :posts
end
@@@

Without this patch, `@topic.posts.top_by(@author)` generates the exact same query than `Post.top_by(@author)`, totally ignoring the scope added by the `has_many :posts` in `Topic`. That's because that scope is being removed from the stacked scopes after the top_by execution where the chained scopes where defined, but before the chained scopes are really executing thus firing the `Scope#load_found` call.

With this patch, the current scope is saved in the `Scope` instance at instantiation time, so it can be re-applied when executed.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given the following code:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Post &amp;lt; ActiveRecord::Base
  belongs_to :topic
  belongs_to :author

  named_scope :published, :conditions =&amp;gt; {:published =&amp;gt; true}
  named_scope :by_author, lambda {|a| {:conditions =&amp;gt; {:author_id =&amp;gt; a.id}}}
  named_scope :ranked, :order =&amp;gt; &amp;quot;posts.rank DESC&amp;quot;
  named_scope :limit, lambda {|limit| {:limit =&amp;gt; limit}}

  def self.top_by(an_author)
    published.by_author(an_author).ranked.limit(10)
  end
end

class Topic &amp;lt; ActiveRecord::Base
  has_many :posts
end

class Author &amp;lt; ActiveRecord::Base
  has_many :posts
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Without this patch, &lt;code&gt;@topic.posts.top_by(@author)&lt;/code&gt;
generates the exact same query than
&lt;code&gt;Post.top_by(@author)&lt;/code&gt;, totally ignoring the scope added
by the &lt;code&gt;has_many :posts&lt;/code&gt; in &lt;code&gt;Topic&lt;/code&gt;. That's
because that scope is being removed from the stacked scopes after
the top_by execution where the chained scopes where defined, but
before the chained scopes are really executing thus firing the
&lt;code&gt;Scope#load_found&lt;/code&gt; call.&lt;/p&gt;
&lt;p&gt;With this patch, the current scope is saved in the
&lt;code&gt;Scope&lt;/code&gt; instance at instantiation time, so it can be
re-applied when executed.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given the following code:

@@@ ruby
class Post &lt; ActiveRecord::Base
  belongs_to :topic
  belongs_to :author

  named_scope :published, :conditions =&gt; {:published =&gt; true}
  named_scope :by_author, lambda {|a| {:conditions =&gt; {:author_id =&gt; a.id}}}
  named_scope :ranked, :order =&gt; &quot;posts.rank DESC&quot;
  named_scope :limit, lambda {|limit| {:limit =&gt; limit}}

  def self.top_by(an_author)
    published.by_author(an_author).ranked.limit(10)
  end
end

class Topic &lt; ActiveRecord::Base
  has_many :posts
end

class Author &lt; ActiveRecord::Base
  has_many :posts
end
@@@

Without this patch, `@topic.posts.top_by(@author)` generates the exact same query than `Post.top_by(@author)`, totally ignoring the scope added by the `has_many :posts` in `Topic`. That's because that scope is being removed from the stacked scopes after the top_by execution where the chained scopes where defined, but before the chained scopes are really executing thus firing the `Scope#load_found` call.

With this patch, the current scope is saved in the `Scope` instance at instantiation time, so it can be re-applied when executed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given the following code:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Post &amp;lt; ActiveRecord::Base
  belongs_to :topic
  belongs_to :author

  named_scope :published, :conditions =&amp;gt; {:published =&amp;gt; true}
  named_scope :by_author, lambda {|a| {:conditions =&amp;gt; {:author_id =&amp;gt; a.id}}}
  named_scope :ranked, :order =&amp;gt; &amp;quot;posts.rank DESC&amp;quot;
  named_scope :limit, lambda {|limit| {:limit =&amp;gt; limit}}

  def self.top_by(an_author)
    published.by_author(an_author).ranked.limit(10)
  end
end

class Topic &amp;lt; ActiveRecord::Base
  has_many :posts
end

class Author &amp;lt; ActiveRecord::Base
  has_many :posts
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Without this patch, &lt;code&gt;@topic.posts.top_by(@author)&lt;/code&gt;
generates the exact same query than
&lt;code&gt;Post.top_by(@author)&lt;/code&gt;, totally ignoring the scope added
by the &lt;code&gt;has_many :posts&lt;/code&gt; in &lt;code&gt;Topic&lt;/code&gt;. That's
because that scope is being removed from the stacked scopes after
the top_by execution where the chained scopes where defined, but
before the chained scopes are really executing thus firing the
&lt;code&gt;Scope#load_found&lt;/code&gt; call.&lt;/p&gt;
&lt;p&gt;With this patch, the current scope is saved in the
&lt;code&gt;Scope&lt;/code&gt; instance at instantiation time, so it can be
re-applied when executed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-13T07:40:50+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-13T07:40:57+00:00</updated-at>
      <user-id type="integer">9698</user-id>
      <version type="integer">1</version>
      <user-name>Diego Algorta</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Forgot to say that, as of now, this patch applies cleanly in both 2-2-stable and master branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Forgot to say that, as of now, this patch applies cleanly in
both 2-2-stable and master branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-13T07:42:12+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-13T07:42:15+00:00</updated-at>
      <user-id type="integer">9698</user-id>
      <version type="integer">2</version>
      <user-name>Diego Algorta</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-13T14:05:52+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-13T14:05:54+00:00</updated-at>
      <user-id type="integer">278</user-id>
      <version type="integer">3</version>
      <user-name>ronin-278 (at lighthouseapp)</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-14T23:23:29+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-14T23:23:32+00:00</updated-at>
      <user-id type="integer">11785</user-id>
      <version type="integer">4</version>
      <user-name>Pawe&#322; Kondzior</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

This is a dangerous bug I just spent hours tracking down myself. Scopes should never disappear without warning.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;This is a dangerous bug I just spent hours tracking down myself.
Scopes should never disappear without warning.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-17T07:04:07+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-17T07:04:10+00:00</updated-at>
      <user-id type="integer">23602</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Berdeen</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Adding the verified tag now that 3 people have voted positively.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adding the verified tag now that 3 people have voted
positively.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-17T17:08:56+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2-stable activerecord association_proxy master named_scope patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-17T17:10:36+00:00</updated-at>
      <user-id type="integer">9698</user-id>
      <version type="integer">6</version>
      <user-name>Diego Algorta</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I believe this was previously reported as #1770, which doesn't have a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I believe this was previously reported as &lt;a href=&quot;/projects/8994/tickets/1770&quot; title=&quot;Ticket #1770&quot;&gt;#1770&lt;/a&gt;, which
doesn't have a patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-17T18:12:16+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-17T18:12:21+00:00</updated-at>
      <user-id type="integer">23602</user-id>
      <version type="integer">7</version>
      <user-name>Ryan Berdeen</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Whoops, looks like #1770 has somewhat similar symptoms, but its cause is probably in association_collection or elsewhere, not named_scope. This patch doesn't fix it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Whoops, looks like &lt;a href=&quot;/projects/8994/tickets/1770&quot; title=&quot;Ticket #1770&quot;&gt;#1770&lt;/a&gt; has somewhat similar symptoms, but its
cause is probably in association_collection or elsewhere, not
named_scope. This patch doesn't fix it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-18T01:36:01+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-18T01:36:07+00:00</updated-at>
      <user-id type="integer">23602</user-id>
      <version type="integer">8</version>
      <user-name>Ryan Berdeen</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Does this address this issue too? - http://rails.lighthouseapp.com:80/projects/8994/tickets/1677-association-proxies-using-class-methods-with-named-scopes</body>
      <body-html>&lt;div&gt;&lt;p&gt;Does this address this issue too? - &lt;a href=&quot;http://rails.lighthouseapp.com:80/projects/8994/tickets/1677-association-proxies-using-class-methods-with-named-scopes&quot;&gt;
http://rails.lighthouseapp.com:8...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-20T13:11:37+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-20T13:11:41+00:00</updated-at>
      <user-id type="integer">10613</user-id>
      <version type="integer">9</version>
      <user-name>Matt Jankowski</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yes. This patch should fix #1677 too. It's the same problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes. This patch should fix &lt;a href=&quot;/projects/8994/tickets/1677&quot; title=&quot;Ticket #1677&quot;&gt;#1677&lt;/a&gt; too. It's the same problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-20T13:45:24+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-20T13:45:27+00:00</updated-at>
      <user-id type="integer">9698</user-id>
      <version type="integer">10</version>
      <user-name>Diego Algorta</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [a9aa18fdcdf3146ccbdecff71e52015f26a0f0b7]) Fixed bug that makes named_scopes _forgot_ current scope

Signed-off-by: rick &lt;technoweenie@gmail.com&gt;
[#1960 #1677 state:resolved]
http://github.com/rails/rails/commit/a9aa18fdcdf3146ccbdecff71e52015f26a0f0b7</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [a9aa18fdcdf3146ccbdecff71e52015f26a0f0b7]) Fixed bug that
makes named_scopes &lt;em&gt;forgot&lt;/em&gt; current scope&lt;/p&gt;
&lt;p&gt;Signed-off-by: rick &lt;a href=&quot;mailto:technoweenie@gmail.com&quot;&gt;technoweenie@gmail.com&lt;/a&gt;
[&lt;a href=&quot;/projects/8994/tickets/1960&quot; title=&quot;Ticket #1960&quot;&gt;#1960&lt;/a&gt; &lt;a href=&quot;/projects/8994/tickets/1677&quot; title=&quot;Ticket #1677&quot;&gt;#1677&lt;/a&gt; state:resolved] &lt;a href=&quot;http://github.com/rails/rails/commit/a9aa18fdcdf3146ccbdecff71e52015f26a0f0b7&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-25T17:13:35+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-25T17:13:38+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">11</version>
      <user-name>Repository</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hmm I get this failure on master:

@@@
  1) Failure:
test_named_scope(DefaultScopingTest)
    [./test/cases/method_scoping_test.rb:602:in `test_named_scope'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `run']:
&lt;[9000,
 150000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 80000]&gt; expected but was
&lt;[150000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 80000,
 9000]&gt;.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hmm I get this failure on master:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  1) Failure:
test_named_scope(DefaultScopingTest)
    [./test/cases/method_scoping_test.rb:602:in `test_named_scope'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:57:in `run']:
&amp;lt;[9000,
 150000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 80000]&amp;gt; expected but was
&amp;lt;[150000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 100000,
 80000,
 9000]&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-25T17:17:26+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-25T17:17:28+00:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">12</version>
      <user-name>Rick</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ah, the test was bad:

@@@
   def test_named_scope
-    expected = Developer.find(:all, :order =&gt; 'name DESC').collect { |dev| dev.salary }
+    expected = Developer.find(:all, :order =&gt; 'salary DESC, name DESC').collect { |dev| dev.salary }
     received = DeveloperOrderedBySalary.by_name.find(:all).collect { |dev| dev.salary }
     assert_equal expected, received
   end
@@@

It was leaving out the DeveloperOrderedBySalary default scope `:order =&gt; 'salary DESC'`.  So, this patch actually fixed that failing test, and probably a bunch of other issues mixing default and named scopes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ah, the test was bad:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
   def test_named_scope
-    expected = Developer.find(:all, :order =&amp;gt; 'name DESC').collect { |dev| dev.salary }
+    expected = Developer.find(:all, :order =&amp;gt; 'salary DESC, name DESC').collect { |dev| dev.salary }
     received = DeveloperOrderedBySalary.by_name.find(:all).collect { |dev| dev.salary }
     assert_equal expected, received
   end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It was leaving out the DeveloperOrderedBySalary default scope
&lt;code&gt;:order =&amp;gt; 'salary DESC'&lt;/code&gt;. So, this patch actually
fixed that failing test, and probably a bunch of other issues
mixing default and named scopes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-25T17:29:27+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-02-25T17:29:31+00:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">13</version>
      <user-name>Rick</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Unfortunately, the test was failing right and then broken -- see #2346</body>
      <body-html>&lt;div&gt;&lt;p&gt;Unfortunately, the test was failing right and then broken -- see
&lt;a href=&quot;/projects/8994/tickets/2346&quot; title=&quot;Ticket #2346&quot;&gt;#2346&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-26T13:20:37+00:00</created-at>
      <creator-id type="integer">9698</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1960</number>
      <permalink>make-named_scopes-remember-the-current-scope-when-defined</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2-stable activerecord association_proxy master named_scope patch verified</tag>
      <title>Make named_scopes remember the current scope when defined</title>
      <updated-at type="datetime">2009-03-26T13:20:43+00:00</updated-at>
      <user-id type="integer">51971</user-id>
      <version type="integer">14</version>
      <user-name>Alexander Podgorbunsky</user-name>
      <creator-name>Diego Algorta</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1960</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>6d1273de65a9fdc5241530186d643eaacece9a76</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-13T07:40:50+00:00</created-at>
      <filename>make_named_scopes_remember_scope.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">88476</id>
      <size type="integer">4333</size>
      <uploader-id type="integer">9698</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/88476/make_named_scopes_remember_scope.diff</url>
    </attachment>
  </attachments>
</ticket>
