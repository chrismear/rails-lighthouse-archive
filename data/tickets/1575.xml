<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">17477</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-15T12:14:37+00:00</created-at>
  <creator-id type="integer">24025</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1575</number>
  <permalink>activerecord-datetime-time-mappings</permalink>
  <priority type="integer">926</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>ActiveRecord DateTime, Time Mappings</title>
  <updated-at type="datetime">2011-02-02T17:46:06+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Joran Greef</creator-name>
  <assigned-user-name>Frederick Cheung</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1575</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>It appears to not be possible to call to_xml on an ActiveRecord object with various Time, Datetime columns and have it return the following:

@@@
&lt;hour&gt;
    &lt;from&gt;18:00:00&lt;/from&gt;
    &lt;until&gt;22:00:00&lt;/until&gt;
    &lt;created-at&gt;2008-11-05T08:28:17Z&lt;/created-at&gt;
    &lt;updated-at&gt;2008-11-05T09:40:18Z&lt;/updated-at&gt;
&lt;/hour&gt;
@@@ 

Even if :from and :until were declared as time columns. Because of how ActiveRecord mixes and matches DateTime and Time class mappings (over-optimization), ActiveRecord would output the following instead:

@@@
&lt;hour&gt;
    &lt;from&gt;2000-01-01T18:00:00Z&lt;/from&gt;
    &lt;until&gt;2000-01-01T22:00:00Z&lt;/until&gt;
    &lt;created-at&gt;2008-11-05T08:28:17Z&lt;/created-at&gt;
    &lt;updated-at&gt;2008-11-05T09:40:18Z&lt;/updated-at&gt;
&lt;/hour&gt;
@@@

In other words, there appears to be no way to differentiate between a time object: &quot;14:00:00&quot;, a date object: &quot;2008-12-15&quot; and a datetime object: &quot;2008-12-15 14:00:00&quot;.

At the database level, however, these differentiations are in fact honored, times are stored as times, dates as dates, and datetimes as datetimes.

So the pragmatic position is that the data treatment and the presentation treatment are different, and that the data is being misrepresented.

The world might prove to be a better place if :time were mapped to Time, :datetime to DateTime, and :date to Date. Plus dates before 1970 wouldn't give &quot;out of range&quot; exceptions.

The performance implications of this are of course to be considered. But so should the complexity implications. Even if the performance considerations do justify the more-complicated mapping, this should at least be done properly.</original-body>
  <latest-body>It appears to not be possible to call to_xml on an ActiveRecord object with various Time, Datetime columns and have it return the following:

@@@
&lt;hour&gt;
    &lt;from&gt;18:00:00&lt;/from&gt;
    &lt;until&gt;22:00:00&lt;/until&gt;
    &lt;created-at&gt;2008-11-05T08:28:17Z&lt;/created-at&gt;
    &lt;updated-at&gt;2008-11-05T09:40:18Z&lt;/updated-at&gt;
&lt;/hour&gt;
@@@ 

Even if :from and :until were declared as time columns. Because of how ActiveRecord mixes and matches DateTime and Time class mappings (over-optimization), ActiveRecord would output the following instead:

@@@
&lt;hour&gt;
    &lt;from&gt;2000-01-01T18:00:00Z&lt;/from&gt;
    &lt;until&gt;2000-01-01T22:00:00Z&lt;/until&gt;
    &lt;created-at&gt;2008-11-05T08:28:17Z&lt;/created-at&gt;
    &lt;updated-at&gt;2008-11-05T09:40:18Z&lt;/updated-at&gt;
&lt;/hour&gt;
@@@

In other words, there appears to be no way to differentiate between a time object: &quot;14:00:00&quot;, a date object: &quot;2008-12-15&quot; and a datetime object: &quot;2008-12-15 14:00:00&quot;.

At the database level, however, these differentiations are in fact honored, times are stored as times, dates as dates, and datetimes as datetimes.

So the pragmatic position is that the data treatment and the presentation treatment are different, and that the data is being misrepresented.

The world might prove to be a better place if :time were mapped to Time, :datetime to DateTime, and :date to Date. Plus dates before 1970 wouldn't give &quot;out of range&quot; exceptions.

The performance implications of this are of course to be considered. But so should the complexity implications. Even if the performance considerations do justify the more-complicated mapping, this should at least be done properly.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It appears to not be possible to call to_xml on an ActiveRecord
object with various Time, Datetime columns and have it return the
following:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;lt;hour&amp;gt;
    &amp;lt;from&amp;gt;18:00:00&amp;lt;/from&amp;gt;
    &amp;lt;until&amp;gt;22:00:00&amp;lt;/until&amp;gt;
    &amp;lt;created-at&amp;gt;2008-11-05T08:28:17Z&amp;lt;/created-at&amp;gt;
    &amp;lt;updated-at&amp;gt;2008-11-05T09:40:18Z&amp;lt;/updated-at&amp;gt;
&amp;lt;/hour&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Even if :from and :until were declared as time columns. Because
of how ActiveRecord mixes and matches DateTime and Time class
mappings (over-optimization), ActiveRecord would output the
following instead:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;lt;hour&amp;gt;
    &amp;lt;from&amp;gt;2000-01-01T18:00:00Z&amp;lt;/from&amp;gt;
    &amp;lt;until&amp;gt;2000-01-01T22:00:00Z&amp;lt;/until&amp;gt;
    &amp;lt;created-at&amp;gt;2008-11-05T08:28:17Z&amp;lt;/created-at&amp;gt;
    &amp;lt;updated-at&amp;gt;2008-11-05T09:40:18Z&amp;lt;/updated-at&amp;gt;
&amp;lt;/hour&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In other words, there appears to be no way to differentiate
between a time object: &quot;14:00:00&quot;, a date object: &quot;2008-12-15&quot; and
a datetime object: &quot;2008-12-15 14:00:00&quot;.&lt;/p&gt;
&lt;p&gt;At the database level, however, these differentiations are in
fact honored, times are stored as times, dates as dates, and
datetimes as datetimes.&lt;/p&gt;
&lt;p&gt;So the pragmatic position is that the data treatment and the
presentation treatment are different, and that the data is being
misrepresented.&lt;/p&gt;
&lt;p&gt;The world might prove to be a better place if :time were mapped
to Time, :datetime to DateTime, and :date to Date. Plus dates
before 1970 wouldn't give &quot;out of range&quot; exceptions.&lt;/p&gt;
&lt;p&gt;The performance implications of this are of course to be
considered. But so should the complexity implications. Even if the
performance considerations do justify the more-complicated mapping,
this should at least be done properly.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It appears to not be possible to call to_xml on an ActiveRecord object with various Time, Datetime columns and have it return the following:

@@@
&lt;hour&gt;
    &lt;from&gt;18:00:00&lt;/from&gt;
    &lt;until&gt;22:00:00&lt;/until&gt;
    &lt;created-at&gt;2008-11-05T08:28:17Z&lt;/created-at&gt;
    &lt;updated-at&gt;2008-11-05T09:40:18Z&lt;/updated-at&gt;
&lt;/hour&gt;
@@@ 

Even if :from and :until were declared as time columns. Because of how ActiveRecord mixes and matches DateTime and Time class mappings (over-optimization), ActiveRecord would output the following instead:

@@@
&lt;hour&gt;
    &lt;from&gt;2000-01-01T18:00:00Z&lt;/from&gt;
    &lt;until&gt;2000-01-01T22:00:00Z&lt;/until&gt;
    &lt;created-at&gt;2008-11-05T08:28:17Z&lt;/created-at&gt;
    &lt;updated-at&gt;2008-11-05T09:40:18Z&lt;/updated-at&gt;
&lt;/hour&gt;
@@@

In other words, there appears to be no way to differentiate between a time object: &quot;14:00:00&quot;, a date object: &quot;2008-12-15&quot; and a datetime object: &quot;2008-12-15 14:00:00&quot;.

At the database level, however, these differentiations are in fact honored, times are stored as times, dates as dates, and datetimes as datetimes.

So the pragmatic position is that the data treatment and the presentation treatment are different, and that the data is being misrepresented.

The world might prove to be a better place if :time were mapped to Time, :datetime to DateTime, and :date to Date. Plus dates before 1970 wouldn't give &quot;out of range&quot; exceptions.

The performance implications of this are of course to be considered. But so should the complexity implications. Even if the performance considerations do justify the more-complicated mapping, this should at least be done properly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It appears to not be possible to call to_xml on an ActiveRecord
object with various Time, Datetime columns and have it return the
following:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;lt;hour&amp;gt;
    &amp;lt;from&amp;gt;18:00:00&amp;lt;/from&amp;gt;
    &amp;lt;until&amp;gt;22:00:00&amp;lt;/until&amp;gt;
    &amp;lt;created-at&amp;gt;2008-11-05T08:28:17Z&amp;lt;/created-at&amp;gt;
    &amp;lt;updated-at&amp;gt;2008-11-05T09:40:18Z&amp;lt;/updated-at&amp;gt;
&amp;lt;/hour&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Even if :from and :until were declared as time columns. Because
of how ActiveRecord mixes and matches DateTime and Time class
mappings (over-optimization), ActiveRecord would output the
following instead:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;lt;hour&amp;gt;
    &amp;lt;from&amp;gt;2000-01-01T18:00:00Z&amp;lt;/from&amp;gt;
    &amp;lt;until&amp;gt;2000-01-01T22:00:00Z&amp;lt;/until&amp;gt;
    &amp;lt;created-at&amp;gt;2008-11-05T08:28:17Z&amp;lt;/created-at&amp;gt;
    &amp;lt;updated-at&amp;gt;2008-11-05T09:40:18Z&amp;lt;/updated-at&amp;gt;
&amp;lt;/hour&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In other words, there appears to be no way to differentiate
between a time object: &quot;14:00:00&quot;, a date object: &quot;2008-12-15&quot; and
a datetime object: &quot;2008-12-15 14:00:00&quot;.&lt;/p&gt;
&lt;p&gt;At the database level, however, these differentiations are in
fact honored, times are stored as times, dates as dates, and
datetimes as datetimes.&lt;/p&gt;
&lt;p&gt;So the pragmatic position is that the data treatment and the
presentation treatment are different, and that the data is being
misrepresented.&lt;/p&gt;
&lt;p&gt;The world might prove to be a better place if :time were mapped
to Time, :datetime to DateTime, and :date to Date. Plus dates
before 1970 wouldn't give &quot;out of range&quot; exceptions.&lt;/p&gt;
&lt;p&gt;The performance implications of this are of course to be
considered. But so should the complexity implications. Even if the
performance considerations do justify the more-complicated mapping,
this should at least be done properly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-15T12:14:37+00:00</created-at>
      <creator-id type="integer">24025</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1575</number>
      <permalink>activerecord-datetime-time-mappings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord DateTime, Time Mappings</title>
      <updated-at type="datetime">2008-12-15T12:14:41+00:00</updated-at>
      <user-id type="integer">24025</user-id>
      <version type="integer">1</version>
      <user-name>Joran Greef</user-name>
      <creator-name>Joran Greef</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1575</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ruby does not have a pure time of day class so :time maps to the Time class.
Date columns already map to Date.
As far as DateTime goes, it's a lot slower to work with than Time (since Time is just an integer offset from an epoch). These days Rails does fall back from Time to DateTime if a row contains a date not representable by Time.

It does seem a bit broken to me that pure times of day are represented as datetimes with an arbitrary year/month/day prefix. It shouldn't be hard to change the serialization code, although I would be concerned about the backwards compatibility implications of that (it does look like someone explicitly chose to handle time columns in the same way as datetime columns though)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ruby does not have a pure time of day class so :time maps to the
Time class. Date columns already map to Date. As far as DateTime
goes, it's a lot slower to work with than Time (since Time is just
an integer offset from an epoch). These days Rails does fall back
from Time to DateTime if a row contains a date not representable by
Time.&lt;/p&gt;
&lt;p&gt;It does seem a bit broken to me that pure times of day are
represented as datetimes with an arbitrary year/month/day prefix.
It shouldn't be hard to change the serialization code, although I
would be concerned about the backwards compatibility implications
of that (it does look like someone explicitly chose to handle time
columns in the same way as datetime columns though)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-20T13:24:28+00:00</created-at>
      <creator-id type="integer">24025</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1575</number>
      <permalink>activerecord-datetime-time-mappings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord DateTime, Time Mappings</title>
      <updated-at type="datetime">2008-12-20T13:24:31+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Joran Greef</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1575</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-13T11:12:00+00:00</created-at>
      <creator-id type="integer">24025</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1575</number>
      <permalink>activerecord-datetime-time-mappings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord DateTime, Time Mappings</title>
      <updated-at type="datetime">2009-03-13T11:12:04+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Joran Greef</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1575</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:37+01:00</created-at>
      <creator-id type="integer">24025</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1575</number>
      <permalink>activerecord-datetime-time-mappings</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord DateTime, Time Mappings</title>
      <updated-at type="datetime">2010-05-04T18:48:37+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Joran Greef</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1575</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:42:34+00:00</created-at>
      <creator-id type="integer">24025</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1575</number>
      <permalink>activerecord-datetime-time-mappings</permalink>
      <priority type="integer">926</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>ActiveRecord DateTime, Time Mappings</title>
      <updated-at type="datetime">2011-02-02T17:45:56+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Joran Greef</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1575</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:42:44+00:00</created-at>
      <creator-id type="integer">24025</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1575</number>
      <permalink>activerecord-datetime-time-mappings</permalink>
      <priority type="integer">926</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>ActiveRecord DateTime, Time Mappings</title>
      <updated-at type="datetime">2011-02-02T17:46:06+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Joran Greef</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1575</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
