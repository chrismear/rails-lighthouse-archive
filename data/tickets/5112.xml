<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-14T17:43:14+01:00</created-at>
  <creator-id type="integer">40263</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5112</number>
  <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>hold</state>
  <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
  <title>if destroy is called on a new object then exception should be raised</title>
  <updated-at type="datetime">2010-08-02T15:29:12+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">10</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Neeraj Singh</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>As discussed with Jos&#233; Valim calling destroy on a new object should raise exception.</original-body>
  <latest-body>As discussed with Jos&#233; Valim calling destroy on a new object should raise exception.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As discussed with Jos&amp;eacute; Valim calling destroy on a new
object should raise exception.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As discussed with Jos&#233; Valim calling destroy on a new object should raise exception.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As discussed with Jos&amp;eacute; Valim calling destroy on a new
object should raise exception.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T17:43:14+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-14T17:43:16+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">1</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is patch with test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is patch with test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T21:28:05+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 40263
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-14T21:28:06+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Neeraj,

I'm not that sure about that. Right now what AR does is to check if the record is persisted before trying to reach the database. That's why it does not throw and exception.

But weather the record is persisted or not, the record still has to be freezed to avoid further changes nor trying to persist it later.

In addition to that suppose that you have a collection of nested attributes, and your are not sure if some of those are already persisted on the db. What if you send a bulk delete (delete_all(ids)) to those records? is the action supposed to throw an exception?

This is the actual code:

@@@ ruby

    def delete
      self.class.delete(id) if persisted?
      @destroyed = true
      freeze
    end

    def destroy
      if persisted?
       self.class.unscoped.where(self.class.arel_table[self.class.primary_key].eq(id)).delete_all
      end

      @destroyed = true
      freeze
    end

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Neeraj,&lt;/p&gt;
&lt;p&gt;I'm not that sure about that. Right now what AR does is to check
if the record is persisted before trying to reach the database.
That's why it does not throw and exception.&lt;/p&gt;
&lt;p&gt;But weather the record is persisted or not, the record still has
to be freezed to avoid further changes nor trying to persist it
later.&lt;/p&gt;
&lt;p&gt;In addition to that suppose that you have a collection of nested
attributes, and your are not sure if some of those are already
persisted on the db. What if you send a bulk delete
(delete_all(ids)) to those records? is the action supposed to throw
an exception?&lt;/p&gt;
&lt;p&gt;This is the actual code:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
    def delete
      self.class.delete(id) if persisted?
      @destroyed = true
      freeze
    end

    def destroy
      if persisted?
       self.class.unscoped.where(self.class.arel_table[self.class.primary_key].eq(id)).delete_all
      end

      @destroyed = true
      freeze
    end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T21:28:55+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord &quot;rails 3&quot;
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-14T21:28:56+01:00</updated-at>
      <user-id type="integer">33716</user-id>
      <version type="integer">3</version>
      <user-name>Ivan Torres (mexpolk)</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I am on the fence on this one. No strong opinion either way.

This came up during a discussion with Jos&#233; Valim while discussing some other issue. I'll let him decide. :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am on the fence on this one. No strong opinion either way.&lt;/p&gt;
&lt;p&gt;This came up during a discussion with Jos&amp;eacute; Valim while
discussing some other issue. I'll let him decide. :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T21:33:51+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-14T21:33:53+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If Rails provides a interface to delete all related objects like in associations, it is Rails responsibility to call delete/destroy only in the persisted records so it won't raise an error (and probably freezing all the others). In any case, I feel the case Ivan described is quite unlikely to happen.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If Rails provides a interface to delete all related objects like
in associations, it is Rails responsibility to call delete/destroy
only in the persisted records so it won't raise an error (and
probably freezing all the others). In any case, I feel the case
Ivan described is quite unlikely to happen.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T21:41:01+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-14T21:41:04+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yes, I know that my case is unlikely to happen. But I rather prefer not have to deal with additional validations &lt;code&gt;@post.delete if @post.persisted?&lt;/code&gt;

but is up to you.

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, I know that my case is unlikely to happen. But I rather
prefer not have to deal with additional validations
&lt;code&gt;@post.delete if @post.persisted?&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;but is up to you.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T21:43:52+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-14T21:43:53+01:00</updated-at>
      <user-id type="integer">33716</user-id>
      <version type="integer">6</version>
      <user-name>Ivan Torres (mexpolk)</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I am fine with marking this ticket as 'wontfix'.

Assigning it to Mr. Valim . It's his call now :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am fine with marking this ticket as 'wontfix'.&lt;/p&gt;
&lt;p&gt;Assigning it to Mr. Valim . It's his call now :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-18T15:50:03+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 40263
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-18T15:50:07+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think most of the time, if you are calling destroy in a not persisted record, you would like to know about it.

Neeraj, someone raised an issue about nested attributes may try to destroy invalid records. Basically, if you send both new attributes and the _destroy field, nested attributes should not call destroy. Can you add a test or ensure we already have one? It can be done in another patch!

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think most of the time, if you are calling destroy in a not
persisted record, you would like to know about it.&lt;/p&gt;
&lt;p&gt;Neeraj, someone raised an issue about nested attributes may try
to destroy invalid records. Basically, if you send both new
attributes and the _destroy field, nested attributes should not
call destroy. Can you add a test or ensure we already have one? It
can be done in another patch!&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-18T16:23:31+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-18T16:23:32+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm sorry to be such a pain about this, but...

I think that to keep consistency across the framework, I rather suggest using destroy! (with a bang) if you need an exception thrown. This behavior is the same that you can find on save vs. save! update_attributes vs. update_attributes! etc.

&#191;Don't you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm sorry to be such a pain about this, but...&lt;/p&gt;
&lt;p&gt;I think that to keep consistency across the framework, I rather
suggest using destroy! (with a bang) if you need an exception
thrown. This behavior is the same that you can find on save vs.
save! update_attributes vs. update_attributes! etc.&lt;/p&gt;
&lt;p&gt;&amp;iquest;Don't you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-28T23:03:41+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-07-28T23:03:42+01:00</updated-at>
      <user-id type="integer">33716</user-id>
      <version type="integer">9</version>
      <user-name>Ivan Torres (mexpolk)</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, I'm postponing this discussion since we cannot change the API after RC. Sorry and thanks for your work Neeraj!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, I'm postponing this discussion since we cannot change the
API after RC. Sorry and thanks for your work Neeraj!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-02T15:29:08+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5112</number>
      <permalink>if-destroy-is-called-on-a-new-object-then-exception-should-be-raised</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>activerecord delete delete_all persistence &quot;rails 3&quot;</tag>
      <title>if destroy is called on a new object then exception should be raised</title>
      <updated-at type="datetime">2010-08-02T15:29:12+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5112</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>23564353aa3b17731ce6de9567ed20a046f71150</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-14T21:28:05+01:00</created-at>
      <filename>5112_fix_for_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">593407</id>
      <size type="integer">2052</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/593407/5112_fix_for_edge.diff</url>
    </attachment>
  </attachments>
</ticket>
