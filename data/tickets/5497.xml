<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">11378</assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-30T13:59:17+01:00</created-at>
  <creator-id type="integer">58046</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5497</number>
  <permalink>default-scope-and-class-reloading</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
  <title>Default scope and class reloading</title>
  <updated-at type="datetime">2010-10-15T23:02:02+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">13</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Jose</creator-name>
  <assigned-user-name>Xavier Noria</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>High</priority-name>
  <original-body>This crashes in Rails 3.0.0 (rc, rc1 and final). Clone this source to get a clean project that reproduces the bug: http://github.com/josei/default_scope_bug

Bascially, the project considers the following models:
    class Conversation &lt; ActiveRecord::Base
      has_many :readings
      has_many :users, :through =&gt; :readings
      default_scope order('conversations.updated_at desc')
    end
    class Reading &lt; ActiveRecord::Base
      belongs_to :user
      belongs_to :conversation
    end
    class User &lt; ActiveRecord::Base
      has_many :readings
      has_many :conversations, :through =&gt; :readings
    end

Perform these steps to reproduce the bug:

    $ rake db:migrate

    $ rails c

    irb(main):001:0&gt; User.create :name=&gt;'Joe'
    =&gt; #&lt;User id: 1, name: &quot;Joe&quot;, created_at: &quot;2010-08-30 12:25:41&quot;, updated_at: &quot;2010-08-30 12:25:41&quot;&gt;
    irb(main):002:0&gt; User.first.conversations.create :title=&gt;'New conversation'
    =&gt; #&lt;Conversation id: 1, title: &quot;New conversation&quot;, created_at: &quot;2010-08-30 12:25:55&quot;, updated_at: &quot;2010-08-30 12:25:55&quot;&gt;
    irb(main):003:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true
    irb(main):004:0&gt; reload!
    Reloading...
    =&gt; true
    irb(main):005:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; false

You can also check object_ids for class before reloading and after; it looks like there's a problem in class versioning. The line that causes the problem is default_scope at conversation.rb. You can try commenting out that line and repeating the last steps to check it now works:

    $ rails c

    irb(main):001:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true
    irb(main):002:0&gt; reload!
    Reloading...
    =&gt; true
    irb(main):003:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true

This is not a problem with class caching disabled, but is annoying in development mode. It seems that default_scope breaks class reloading and something related with @reflection in association_proxy.rb.</original-body>
  <latest-body>This crashes in Rails 3.0.0 (rc, rc1 and final). Clone this source to get a clean project that reproduces the bug: http://github.com/josei/default_scope_bug

Bascially, the project considers the following models:
    class Conversation &lt; ActiveRecord::Base
      has_many :readings
      has_many :users, :through =&gt; :readings
      default_scope order('conversations.updated_at desc')
    end
    class Reading &lt; ActiveRecord::Base
      belongs_to :user
      belongs_to :conversation
    end
    class User &lt; ActiveRecord::Base
      has_many :readings
      has_many :conversations, :through =&gt; :readings
    end

Perform these steps to reproduce the bug:

    $ rake db:migrate

    $ rails c

    irb(main):001:0&gt; User.create :name=&gt;'Joe'
    =&gt; #&lt;User id: 1, name: &quot;Joe&quot;, created_at: &quot;2010-08-30 12:25:41&quot;, updated_at: &quot;2010-08-30 12:25:41&quot;&gt;
    irb(main):002:0&gt; User.first.conversations.create :title=&gt;'New conversation'
    =&gt; #&lt;Conversation id: 1, title: &quot;New conversation&quot;, created_at: &quot;2010-08-30 12:25:55&quot;, updated_at: &quot;2010-08-30 12:25:55&quot;&gt;
    irb(main):003:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true
    irb(main):004:0&gt; reload!
    Reloading...
    =&gt; true
    irb(main):005:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; false

You can also check object_ids for class before reloading and after; it looks like there's a problem in class versioning. The line that causes the problem is default_scope at conversation.rb. You can try commenting out that line and repeating the last steps to check it now works:

    $ rails c

    irb(main):001:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true
    irb(main):002:0&gt; reload!
    Reloading...
    =&gt; true
    irb(main):003:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true

This is not a problem with class caching disabled, but is annoying in development mode. It seems that default_scope breaks class reloading and something related with @reflection in association_proxy.rb.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This crashes in Rails 3.0.0 (rc, rc1 and final). Clone this
source to get a clean project that reproduces the bug: &lt;a href=
&quot;http://github.com/josei/default_scope_bug&quot;&gt;http://github.com/josei/default_scope_bug&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bascially, the project considers the following models:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Conversation &amp;lt; ActiveRecord::Base
  has_many :readings
  has_many :users, :through =&amp;gt; :readings
  default_scope order('conversations.updated_at desc')
end
class Reading &amp;lt; ActiveRecord::Base
  belongs_to :user
  belongs_to :conversation
end
class User &amp;lt; ActiveRecord::Base
  has_many :readings
  has_many :conversations, :through =&amp;gt; :readings
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Perform these steps to reproduce the bug:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rake db:migrate

$ rails c

irb(main):001:0&amp;gt; User.create :name=&amp;gt;'Joe'
=&amp;gt; #&amp;lt;User id: 1, name: &quot;Joe&quot;, created_at: &quot;2010-08-30 12:25:41&quot;, updated_at: &quot;2010-08-30 12:25:41&quot;&amp;gt;
irb(main):002:0&amp;gt; User.first.conversations.create :title=&amp;gt;'New conversation'
=&amp;gt; #&amp;lt;Conversation id: 1, title: &quot;New conversation&quot;, created_at: &quot;2010-08-30 12:25:55&quot;, updated_at: &quot;2010-08-30 12:25:55&quot;&amp;gt;
irb(main):003:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; true
irb(main):004:0&amp;gt; reload!
Reloading...
=&amp;gt; true
irb(main):005:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can also check object_ids for class before reloading and
after; it looks like there's a problem in class versioning. The
line that causes the problem is default_scope at conversation.rb.
You can try commenting out that line and repeating the last steps
to check it now works:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rails c

irb(main):001:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; true
irb(main):002:0&amp;gt; reload!
Reloading...
=&amp;gt; true
irb(main):003:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is not a problem with class caching disabled, but is
annoying in development mode. It seems that default_scope breaks
class reloading and something related with @reflection in
association_proxy.rb.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This crashes in Rails 3.0.0 (rc, rc1 and final). Clone this source to get a clean project that reproduces the bug: http://github.com/josei/default_scope_bug

Bascially, the project considers the following models:
    class Conversation &lt; ActiveRecord::Base
      has_many :readings
      has_many :users, :through =&gt; :readings
      default_scope order('conversations.updated_at desc')
    end
    class Reading &lt; ActiveRecord::Base
      belongs_to :user
      belongs_to :conversation
    end
    class User &lt; ActiveRecord::Base
      has_many :readings
      has_many :conversations, :through =&gt; :readings
    end

Perform these steps to reproduce the bug:

    $ rake db:migrate

    $ rails c

    irb(main):001:0&gt; User.create :name=&gt;'Joe'
    =&gt; #&lt;User id: 1, name: &quot;Joe&quot;, created_at: &quot;2010-08-30 12:25:41&quot;, updated_at: &quot;2010-08-30 12:25:41&quot;&gt;
    irb(main):002:0&gt; User.first.conversations.create :title=&gt;'New conversation'
    =&gt; #&lt;Conversation id: 1, title: &quot;New conversation&quot;, created_at: &quot;2010-08-30 12:25:55&quot;, updated_at: &quot;2010-08-30 12:25:55&quot;&gt;
    irb(main):003:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true
    irb(main):004:0&gt; reload!
    Reloading...
    =&gt; true
    irb(main):005:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; false

You can also check object_ids for class before reloading and after; it looks like there's a problem in class versioning. The line that causes the problem is default_scope at conversation.rb. You can try commenting out that line and repeating the last steps to check it now works:

    $ rails c

    irb(main):001:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true
    irb(main):002:0&gt; reload!
    Reloading...
    =&gt; true
    irb(main):003:0&gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
    =&gt; true

This is not a problem with class caching disabled, but is annoying in development mode. It seems that default_scope breaks class reloading and something related with @reflection in association_proxy.rb.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This crashes in Rails 3.0.0 (rc, rc1 and final). Clone this
source to get a clean project that reproduces the bug: &lt;a href=
&quot;http://github.com/josei/default_scope_bug&quot;&gt;http://github.com/josei/default_scope_bug&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bascially, the project considers the following models:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Conversation &amp;lt; ActiveRecord::Base
  has_many :readings
  has_many :users, :through =&amp;gt; :readings
  default_scope order('conversations.updated_at desc')
end
class Reading &amp;lt; ActiveRecord::Base
  belongs_to :user
  belongs_to :conversation
end
class User &amp;lt; ActiveRecord::Base
  has_many :readings
  has_many :conversations, :through =&amp;gt; :readings
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Perform these steps to reproduce the bug:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rake db:migrate

$ rails c

irb(main):001:0&amp;gt; User.create :name=&amp;gt;'Joe'
=&amp;gt; #&amp;lt;User id: 1, name: &quot;Joe&quot;, created_at: &quot;2010-08-30 12:25:41&quot;, updated_at: &quot;2010-08-30 12:25:41&quot;&amp;gt;
irb(main):002:0&amp;gt; User.first.conversations.create :title=&amp;gt;'New conversation'
=&amp;gt; #&amp;lt;Conversation id: 1, title: &quot;New conversation&quot;, created_at: &quot;2010-08-30 12:25:55&quot;, updated_at: &quot;2010-08-30 12:25:55&quot;&amp;gt;
irb(main):003:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; true
irb(main):004:0&amp;gt; reload!
Reloading...
=&amp;gt; true
irb(main):005:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can also check object_ids for class before reloading and
after; it looks like there's a problem in class versioning. The
line that causes the problem is default_scope at conversation.rb.
You can try commenting out that line and repeating the last steps
to check it now works:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rails c

irb(main):001:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; true
irb(main):002:0&amp;gt; reload!
Reloading...
=&amp;gt; true
irb(main):003:0&amp;gt; User.first.conversations.find(Conversation.first.id).users.first.is_a?(User)
=&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is not a problem with class caching disabled, but is
annoying in development mode. It seems that default_scope breaks
class reloading and something related with @reflection in
association_proxy.rb.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T13:59:17+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-08-30T13:59:22+01:00</updated-at>
      <user-id type="integer">58046</user-id>
      <version type="integer">1</version>
      <user-name>Jose</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Tricky one to track down this. It turns out that AR stores the default scope in a Thread.current variable. This keeps a copy of the class the first time it is loaded and when it's unloaded after each request it becomes stale.

A quick fix is to use the deprecated hash syntax for order:

@@@ ruby
  default_scope :order =&gt; 'conversations.updated_at desc'
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tricky one to track down this. It turns out that AR stores the
default scope in a Thread.current variable. This keeps a copy of
the class the first time it is loaded and when it's unloaded after
each request it becomes stale.&lt;/p&gt;
&lt;p&gt;A quick fix is to use the deprecated hash syntax for order:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  default_scope :order =&amp;gt; 'conversations.updated_at desc'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T12:23:34+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T12:23:36+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The quick fix doesn't change the behaviour, at least in my case (Rails 3.0.0 + Ruby 1.8.7).</body>
      <body-html>&lt;div&gt;&lt;p&gt;The quick fix doesn't change the behaviour, at least in my case
(Rails 3.0.0 + Ruby 1.8.7).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T12:46:19+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T12:46:20+01:00</updated-at>
      <user-id type="integer">58046</user-id>
      <version type="integer">3</version>
      <user-name>Jose</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, you're right - sorry I thought I'd checked it worked.

Add this block to config/environment/development.rb and it should work even with the new syntax:

@@@ ruby
  config.to_prepare do
    Thread.current.keys.each{ |k| Thread.current[k] = nil if k.to_s =~ /_scoped_methods$/ }
  end
@@@

Basically, it clears out all the cached default scope on each request for all models. This only matters in development so keep it inside development.rb until 3.0.1 gets released.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, you're right - sorry I thought I'd checked it worked.&lt;/p&gt;
&lt;p&gt;Add this block to config/environment/development.rb and it
should work even with the new syntax:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  config.to_prepare do
    Thread.current.keys.each{ |k| Thread.current[k] = nil if k.to_s =~ /_scoped_methods$/ }
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Basically, it clears out all the cached default scope on each
request for all models. This only matters in development so keep it
inside development.rb until 3.0.1 gets released.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T13:08:14+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T13:08:19+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Brilliant, it works :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Brilliant, it works :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T13:43:38+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T13:43:41+01:00</updated-at>
      <user-id type="integer">58046</user-id>
      <version type="integer">5</version>
      <user-name>Jose</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch for master which adds a callback to ActiveSupport::Dependencies.remove_unloadable_constants! in one commit and then uses that feature to reset the default scope when the class is unloaded in a second commit.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch for master which adds a callback to
ActiveSupport::Dependencies.remove_unloadable_constants! in one
commit and then uses that feature to reset the default scope when
the class is unloaded in a second commit.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T15:18:30+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T15:18:36+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">6</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Patch for 3-0-stable</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch for 3-0-stable&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T15:18:54+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T15:18:55+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">7</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T15:22:53+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 7697
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T15:22:55+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">8</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Updated patch for master</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch for master&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T15:40:44+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T15:40:46+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">9</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Updated patch for stable</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch for stable&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T15:41:03+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T15:41:05+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">10</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [aefa11be11a0a6b0c98b776c9e6422b2e0e4b13d]) Reset default scope in Thread.current when class is unloaded [#5497 state:resolved]

Signed-off-by: Xavier Noria &lt;fxn@hashref.com&gt;
http://github.com/rails/rails/commit/aefa11be11a0a6b0c98b776c9e6422b2e0e4b13d</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/aefa11be11a0a6b0c98b776c9e6422b2e0e4b13d&quot;
title=
&quot;Changeset [aefa11be11a0a6b0c98b776c9e6422b2e0e4b13d]&quot;&gt;[aefa11be11a0a6b0c98b776c9e6422b2e0e4b13d]&lt;/a&gt;)
Reset default scope in Thread.current when class is unloaded
[&lt;a href=&quot;/projects/8994/tickets/5497&quot; title=
&quot;Ticket #5497&quot;&gt;#5497&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Xavier Noria &lt;a href=
&quot;mailto:fxn@hashref.com&quot;&gt;fxn@hashref.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/aefa11be11a0a6b0c98b776c9e6422b2e0e4b13d&quot;&gt;
http://github.com/rails/rails/commit/aefa11be11a0a6b0c98b776c9e6422...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-01T21:58:40+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T21:58:41+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">11</version>
      <user-name>Repository</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [4e67bf26aa11a59e4f513359208fe3314c5a1ba5]) Reset default scope in Thread.current when class is unloaded [#5497 state:resolved]

Signed-off-by: Xavier Noria &lt;fxn@hashref.com&gt;
http://github.com/rails/rails/commit/4e67bf26aa11a59e4f513359208fe3314c5a1ba5</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/4e67bf26aa11a59e4f513359208fe3314c5a1ba5&quot;
title=
&quot;Changeset [4e67bf26aa11a59e4f513359208fe3314c5a1ba5]&quot;&gt;[4e67bf26aa11a59e4f513359208fe3314c5a1ba5]&lt;/a&gt;)
Reset default scope in Thread.current when class is unloaded
[&lt;a href=&quot;/projects/8994/tickets/5497&quot; title=
&quot;Ticket #5497&quot;&gt;#5497&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Xavier Noria &lt;a&gt;fxn@hashref.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/4e67bf26aa11a59e4f513359208fe3314c5a1ba5&quot;&gt;
http://github.com/rails/rails/commit/4e67bf26aa11a59e4f513359208fe3...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-01T21:58:45+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-09-01T21:58:46+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">12</version>
      <user-name>Repository</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">11378</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:02:02+01:00</created-at>
      <creator-id type="integer">58046</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 82861
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5497</number>
      <permalink>default-scope-and-class-reloading</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;class reloading&quot; default_scope has_many_through</tag>
      <title>Default scope and class reloading</title>
      <updated-at type="datetime">2010-10-15T23:02:02+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">13</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jose</creator-name>
      <assigned-user-name>Xavier Noria</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5497</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>High</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>46302a341673c274915b2accc649ef69ea92bae4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-01T15:18:31+01:00</created-at>
      <filename>0001-add-before-remove-const-callback-master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">654792</id>
      <size type="integer">5334</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/654792/0001-add-before-remove-const-callback-master.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d0ae961469b41c16b4643055eefdb4c7030b4357</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-01T15:18:54+01:00</created-at>
      <filename>0001-add-before-remove-const-callback-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">654793</id>
      <size type="integer">5334</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/654793/0001-add-before-remove-const-callback-stable.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>5ad781894fd3ef2908afb295a03c9c72e62dad61</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-01T15:40:44+01:00</created-at>
      <filename>0002-add-before-remove-const-callback-master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">654841</id>
      <size type="integer">5323</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/654841/0002-add-before-remove-const-callback-master.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d7c158d77cf4c7fd9c50b767537207ba33bf2c98</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-01T15:41:03+01:00</created-at>
      <filename>0002-add-before-remove-const-callback-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">654844</id>
      <size type="integer">5323</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/654844/0002-add-before-remove-const-callback-stable.diff</url>
    </attachment>
  </attachments>
</ticket>
