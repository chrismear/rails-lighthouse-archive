From be8107b3e86449e1cf52870cd5489a2b36ecd7a6 Mon Sep 17 00:00:00 2001
From: kane <kane@raktefakt.net>
Date: Tue, 22 Jun 2010 11:33:16 -0700
Subject: [PATCH] Made counter_sql ungreedy so subqueries are possible [#2802 state:resolved]

---
 .../associations/association_collection.rb         |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations/association_collection.rb b/activerecord/lib/active_record/associations/association_collection.rb
index f8d46bc..929e3dd 100644
--- a/activerecord/lib/active_record/associations/association_collection.rb
+++ b/activerecord/lib/active_record/associations/association_collection.rb
@@ -378,7 +378,7 @@ module ActiveRecord
             @counter_sql = interpolate_sql(@reflection.options[:counter_sql])
           elsif @reflection.options[:finder_sql]
             # replace the SELECT clause with COUNT(*), preserving any hints within /* ... */
-            @reflection.options[:counter_sql] = @reflection.options[:finder_sql].sub(/SELECT\b(\/\*.*?\*\/ )?(.*)\bFROM\b/im) { "SELECT #{$1}COUNT(*) FROM" }
+            @reflection.options[:counter_sql] = @reflection.options[:finder_sql].sub(/SELECT\b(\/\*.*?\*\/ )?(.*?)\bFROM\b/im) { "SELECT #{$1}COUNT(*) FROM" }
             @counter_sql = interpolate_sql(@reflection.options[:counter_sql])
           else
             @counter_sql = @finder_sql
-- 
1.6.3.3

