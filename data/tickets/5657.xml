<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:45:51+01:00</created-at>
  <creator-id type="integer">4027</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5657</number>
  <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>arel console</tag>
  <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
  <updated-at type="datetime">2010-11-14T21:38:45+00:00</updated-at>
  <user-id type="integer">124922</user-id>
  <version type="integer">12</version>
  <user-name>Stephen Davis</user-name>
  <creator-name>Andrew C. Greenberg</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
  <priority-name>Low</priority-name>
  <original-body>The rails console aborts on attempted irb autocompletion of a partial expression.  Try the following from any rails 3.0 project

@@@ sh
rails c
Loading development environment (Rails 3.0.0)
ree-1.8.7-2010.02 &gt; Time.now.
@@@

After typing the period, hit escape.  Boom!  A bizarre error message 

@@@ text
this module is deprecated, please use the PREDICATES constant
@@@

is produced, irb aborts, and the terminal is left in a peculiar state.  The attached patch repairs this problem, which arises from some crufty &quot;deprecation&quot; notices in Arel.

Discussion:

IRB autocompletion makes a valiant effort to obtain the class of a partial expression when the value is not known, which involves a fair amount of introspection on the overall state of the present environment.  Unsurprisingly, it makes considerable use of the #instance_methods method on various classes -- well all the classes it can find to be true.  Here lies the problem.  Part of its pruning entails calling #sort! on the array of results it obtains.  This is where it blows up in the rails environment.

It turns out that there is a class in Arel, called Predications, that overrides #instance_methods, but instead of returning an array of Strings, as Class and its progeny do, Arel::Attribute::Predications.method_missing returns an array of Symbols.  And an array of symbols does not like to be sorted, since symbols do not respond to &quot;&lt;=&gt;&quot;.  Boom!

Predications is defined as follows in lib/arel/algebra/attributes/attribute.rb

@@@ ruby
    PREDICATES = [
      :eq, :eq_any, :eq_all, :not_eq, :not_eq_any, :not_eq_all, :lt, :lt_any,
      :lt_all, :lteq, :lteq_any, :lteq_all, :gt, :gt_any, :gt_all, :gteq,
      :gteq_any, :gteq_all, :matches, :matches_any, :matches_all, :not_matches,
      :not_matches_any, :not_matches_all, :in, :in_any, :in_all, :not_in,
      :not_in_any, :not_in_all
    ]

    Predications = Class.new do
      def self.instance_methods *args
        warn &quot;this module is deprecated, please use the PREDICATES constant&quot;
        PREDICATES
      end
    end
@@@

The first commit in the patch repairs the blow-up by returning PREDICATES.map(:&amp;to_s).  I also presumed to change the logger warning into one using Rails ActiveSupport::Deprecation, so that the message is routed approporiately.

This worked so far as it went, and the console no longer blew up.  However, it continues to print the deprecation message each and every time you try to autocomplete a partial expression in the Rails console (or any other app that requires Arel for that matter).

Inspecting the file's git history, it appeared that this section of code historically appeared like the following:

@@@ ruby
module Predications

   def eq
   ...
   end
   ... other definitions ...
end
include Predications
@@@

During the Arel speedup en route to Rails 3.0, much of the metaprogramming and including and such was removed, including the references to module Predications.  At one point it was deleted completely, and then later added back as a class, rather than as a module as shown above.  I didn't see any point to the vestigial structure being permitted to continue to exist while destroying my beloved rails console, and rewrote it as a module with the corrected #instance_methods, without the deprecation warning there, and adding a deprecation warning upon inclusion, using &quot;#included.&quot;  That was the second commit referred to in the patch.

The resulting code passes the test suite (using Sqlite only, i didn't have the heart to build the mysql and postgress environments just to include this patch) and some new ones added to highlight the problem.  

Now my autocompleting life has returned and I am a little bit happier.  Thought I would share the ponies and rainbows with my favorite community.  Hope I have done more good than harm.</original-body>
  <latest-body>The rails console aborts on attempted irb autocompletion of a partial expression.  Try the following from any rails 3.0 project

@@@ sh
rails c
Loading development environment (Rails 3.0.0)
ree-1.8.7-2010.02 &gt; Time.now.
@@@

After typing the period, hit escape.  Boom!  A bizarre error message 

@@@ text
this module is deprecated, please use the PREDICATES constant
@@@

is produced, irb aborts, and the terminal is left in a peculiar state.  The attached patch repairs this problem, which arises from some crufty &quot;deprecation&quot; notices in Arel.

Discussion:

IRB autocompletion makes a valiant effort to obtain the class of a partial expression when the value is not known, which involves a fair amount of introspection on the overall state of the present environment.  Unsurprisingly, it makes considerable use of the #instance_methods method on various classes -- well all the classes it can find to be true.  Here lies the problem.  Part of its pruning entails calling #sort! on the array of results it obtains.  This is where it blows up in the rails environment.

It turns out that there is a class in Arel, called Predications, that overrides #instance_methods, but instead of returning an array of Strings, as Class and its progeny do, Arel::Attribute::Predications.method_missing returns an array of Symbols.  And an array of symbols does not like to be sorted, since symbols do not respond to &quot;&lt;=&gt;&quot;.  Boom!

Predications is defined as follows in lib/arel/algebra/attributes/attribute.rb

@@@ ruby
    PREDICATES = [
      :eq, :eq_any, :eq_all, :not_eq, :not_eq_any, :not_eq_all, :lt, :lt_any,
      :lt_all, :lteq, :lteq_any, :lteq_all, :gt, :gt_any, :gt_all, :gteq,
      :gteq_any, :gteq_all, :matches, :matches_any, :matches_all, :not_matches,
      :not_matches_any, :not_matches_all, :in, :in_any, :in_all, :not_in,
      :not_in_any, :not_in_all
    ]

    Predications = Class.new do
      def self.instance_methods *args
        warn &quot;this module is deprecated, please use the PREDICATES constant&quot;
        PREDICATES
      end
    end
@@@

The first commit in the patch repairs the blow-up by returning PREDICATES.map(:&amp;to_s).  I also presumed to change the logger warning into one using Rails ActiveSupport::Deprecation, so that the message is routed approporiately.

This worked so far as it went, and the console no longer blew up.  However, it continues to print the deprecation message each and every time you try to autocomplete a partial expression in the Rails console (or any other app that requires Arel for that matter).

Inspecting the file's git history, it appeared that this section of code historically appeared like the following:

@@@ ruby
module Predications

   def eq
   ...
   end
   ... other definitions ...
end
include Predications
@@@

During the Arel speedup en route to Rails 3.0, much of the metaprogramming and including and such was removed, including the references to module Predications.  At one point it was deleted completely, and then later added back as a class, rather than as a module as shown above.  I didn't see any point to the vestigial structure being permitted to continue to exist while destroying my beloved rails console, and rewrote it as a module with the corrected #instance_methods, without the deprecation warning there, and adding a deprecation warning upon inclusion, using &quot;#included.&quot;  That was the second commit referred to in the patch.

The resulting code passes the test suite (using Sqlite only, i didn't have the heart to build the mysql and postgress environments just to include this patch) and some new ones added to highlight the problem.  

Now my autocompleting life has returned and I am a little bit happier.  Thought I would share the ponies and rainbows with my favorite community.  Hope I have done more good than harm.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The rails console aborts on attempted irb autocompletion of a
partial expression. Try the following from any rails 3.0
project&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;sh&quot;&gt;rails c
Loading development environment (Rails 3.0.0)
ree-1.8.7-2010.02 &amp;gt; Time.now.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After typing the period, hit escape. Boom! A bizarre error
message&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;text&quot;&gt;this module is deprecated, please use the PREDICATES constant&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;is produced, irb aborts, and the terminal is left in a peculiar
state. The attached patch repairs this problem, which arises from
some crufty &quot;deprecation&quot; notices in Arel.&lt;/p&gt;
&lt;p&gt;Discussion:&lt;/p&gt;
&lt;p&gt;IRB autocompletion makes a valiant effort to obtain the class of
a partial expression when the value is not known, which involves a
fair amount of introspection on the overall state of the present
environment. Unsurprisingly, it makes considerable use of the
#instance_methods method on various classes -- well all the classes
it can find to be true. Here lies the problem. Part of its pruning
entails calling #sort! on the array of results it obtains. This is
where it blows up in the rails environment.&lt;/p&gt;
&lt;p&gt;It turns out that there is a class in Arel, called Predications,
that overrides #instance_methods, but instead of returning an array
of Strings, as Class and its progeny do,
Arel::Attribute::Predications.method_missing returns an array of
Symbols. And an array of symbols does not like to be sorted, since
symbols do not respond to &quot;&amp;lt;=&amp;gt;&quot;. Boom!&lt;/p&gt;
&lt;p&gt;Predications is defined as follows in
lib/arel/algebra/attributes/attribute.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    PREDICATES = [
      :eq, :eq_any, :eq_all, :not_eq, :not_eq_any, :not_eq_all, :lt, :lt_any,
      :lt_all, :lteq, :lteq_any, :lteq_all, :gt, :gt_any, :gt_all, :gteq,
      :gteq_any, :gteq_all, :matches, :matches_any, :matches_all, :not_matches,
      :not_matches_any, :not_matches_all, :in, :in_any, :in_all, :not_in,
      :not_in_any, :not_in_all
    ]

    Predications = Class.new do
      def self.instance_methods *args
        warn &quot;this module is deprecated, please use the PREDICATES constant&quot;
        PREDICATES
      end
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The first commit in the patch repairs the blow-up by returning
PREDICATES.map(:&amp;amp;to_s). I also presumed to change the logger
warning into one using Rails ActiveSupport::Deprecation, so that
the message is routed approporiately.&lt;/p&gt;
&lt;p&gt;This worked so far as it went, and the console no longer blew
up. However, it continues to print the deprecation message each and
every time you try to autocomplete a partial expression in the
Rails console (or any other app that requires Arel for that
matter).&lt;/p&gt;
&lt;p&gt;Inspecting the file's git history, it appeared that this section
of code historically appeared like the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;module Predications

   def eq
   ...
   end
   ... other definitions ...
end
include Predications&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;During the Arel speedup en route to Rails 3.0, much of the
metaprogramming and including and such was removed, including the
references to module Predications. At one point it was deleted
completely, and then later added back as a class, rather than as a
module as shown above. I didn't see any point to the vestigial
structure being permitted to continue to exist while destroying my
beloved rails console, and rewrote it as a module with the
corrected #instance_methods, without the deprecation warning there,
and adding a deprecation warning upon inclusion, using &quot;#included.&quot;
That was the second commit referred to in the patch.&lt;/p&gt;
&lt;p&gt;The resulting code passes the test suite (using Sqlite only, i
didn't have the heart to build the mysql and postgress environments
just to include this patch) and some new ones added to highlight
the problem.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Now my autocompleting life has returned and I am a little bit
happier. Thought I would share the ponies and rainbows with my
favorite community. Hope I have done more good than harm.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The rails console aborts on attempted irb autocompletion of a partial expression.  Try the following from any rails 3.0 project

@@@ sh
rails c
Loading development environment (Rails 3.0.0)
ree-1.8.7-2010.02 &gt; Time.now.
@@@

After typing the period, hit escape.  Boom!  A bizarre error message 

@@@ text
this module is deprecated, please use the PREDICATES constant
@@@

is produced, irb aborts, and the terminal is left in a peculiar state.  The attached patch repairs this problem, which arises from some crufty &quot;deprecation&quot; notices in Arel.

Discussion:

IRB autocompletion makes a valiant effort to obtain the class of a partial expression when the value is not known, which involves a fair amount of introspection on the overall state of the present environment.  Unsurprisingly, it makes considerable use of the #instance_methods method on various classes -- well all the classes it can find to be true.  Here lies the problem.  Part of its pruning entails calling #sort! on the array of results it obtains.  This is where it blows up in the rails environment.

It turns out that there is a class in Arel, called Predications, that overrides #instance_methods, but instead of returning an array of Strings, as Class and its progeny do, Arel::Attribute::Predications.method_missing returns an array of Symbols.  And an array of symbols does not like to be sorted, since symbols do not respond to &quot;&lt;=&gt;&quot;.  Boom!

Predications is defined as follows in lib/arel/algebra/attributes/attribute.rb

@@@ ruby
    PREDICATES = [
      :eq, :eq_any, :eq_all, :not_eq, :not_eq_any, :not_eq_all, :lt, :lt_any,
      :lt_all, :lteq, :lteq_any, :lteq_all, :gt, :gt_any, :gt_all, :gteq,
      :gteq_any, :gteq_all, :matches, :matches_any, :matches_all, :not_matches,
      :not_matches_any, :not_matches_all, :in, :in_any, :in_all, :not_in,
      :not_in_any, :not_in_all
    ]

    Predications = Class.new do
      def self.instance_methods *args
        warn &quot;this module is deprecated, please use the PREDICATES constant&quot;
        PREDICATES
      end
    end
@@@

The first commit in the patch repairs the blow-up by returning PREDICATES.map(:&amp;to_s).  I also presumed to change the logger warning into one using Rails ActiveSupport::Deprecation, so that the message is routed approporiately.

This worked so far as it went, and the console no longer blew up.  However, it continues to print the deprecation message each and every time you try to autocomplete a partial expression in the Rails console (or any other app that requires Arel for that matter).

Inspecting the file's git history, it appeared that this section of code historically appeared like the following:

@@@ ruby
module Predications

   def eq
   ...
   end
   ... other definitions ...
end
include Predications
@@@

During the Arel speedup en route to Rails 3.0, much of the metaprogramming and including and such was removed, including the references to module Predications.  At one point it was deleted completely, and then later added back as a class, rather than as a module as shown above.  I didn't see any point to the vestigial structure being permitted to continue to exist while destroying my beloved rails console, and rewrote it as a module with the corrected #instance_methods, without the deprecation warning there, and adding a deprecation warning upon inclusion, using &quot;#included.&quot;  That was the second commit referred to in the patch.

The resulting code passes the test suite (using Sqlite only, i didn't have the heart to build the mysql and postgress environments just to include this patch) and some new ones added to highlight the problem.  

Now my autocompleting life has returned and I am a little bit happier.  Thought I would share the ponies and rainbows with my favorite community.  Hope I have done more good than harm.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The rails console aborts on attempted irb autocompletion of a
partial expression. Try the following from any rails 3.0
project&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;sh&quot;&gt;rails c
Loading development environment (Rails 3.0.0)
ree-1.8.7-2010.02 &amp;gt; Time.now.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After typing the period, hit escape. Boom! A bizarre error
message&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;text&quot;&gt;this module is deprecated, please use the PREDICATES constant&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;is produced, irb aborts, and the terminal is left in a peculiar
state. The attached patch repairs this problem, which arises from
some crufty &quot;deprecation&quot; notices in Arel.&lt;/p&gt;
&lt;p&gt;Discussion:&lt;/p&gt;
&lt;p&gt;IRB autocompletion makes a valiant effort to obtain the class of
a partial expression when the value is not known, which involves a
fair amount of introspection on the overall state of the present
environment. Unsurprisingly, it makes considerable use of the
#instance_methods method on various classes -- well all the classes
it can find to be true. Here lies the problem. Part of its pruning
entails calling #sort! on the array of results it obtains. This is
where it blows up in the rails environment.&lt;/p&gt;
&lt;p&gt;It turns out that there is a class in Arel, called Predications,
that overrides #instance_methods, but instead of returning an array
of Strings, as Class and its progeny do,
Arel::Attribute::Predications.method_missing returns an array of
Symbols. And an array of symbols does not like to be sorted, since
symbols do not respond to &quot;&amp;lt;=&amp;gt;&quot;. Boom!&lt;/p&gt;
&lt;p&gt;Predications is defined as follows in
lib/arel/algebra/attributes/attribute.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    PREDICATES = [
      :eq, :eq_any, :eq_all, :not_eq, :not_eq_any, :not_eq_all, :lt, :lt_any,
      :lt_all, :lteq, :lteq_any, :lteq_all, :gt, :gt_any, :gt_all, :gteq,
      :gteq_any, :gteq_all, :matches, :matches_any, :matches_all, :not_matches,
      :not_matches_any, :not_matches_all, :in, :in_any, :in_all, :not_in,
      :not_in_any, :not_in_all
    ]

    Predications = Class.new do
      def self.instance_methods *args
        warn &quot;this module is deprecated, please use the PREDICATES constant&quot;
        PREDICATES
      end
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The first commit in the patch repairs the blow-up by returning
PREDICATES.map(:&amp;amp;to_s). I also presumed to change the logger
warning into one using Rails ActiveSupport::Deprecation, so that
the message is routed approporiately.&lt;/p&gt;
&lt;p&gt;This worked so far as it went, and the console no longer blew
up. However, it continues to print the deprecation message each and
every time you try to autocomplete a partial expression in the
Rails console (or any other app that requires Arel for that
matter).&lt;/p&gt;
&lt;p&gt;Inspecting the file's git history, it appeared that this section
of code historically appeared like the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;module Predications

   def eq
   ...
   end
   ... other definitions ...
end
include Predications&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;During the Arel speedup en route to Rails 3.0, much of the
metaprogramming and including and such was removed, including the
references to module Predications. At one point it was deleted
completely, and then later added back as a class, rather than as a
module as shown above. I didn't see any point to the vestigial
structure being permitted to continue to exist while destroying my
beloved rails console, and rewrote it as a module with the
corrected #instance_methods, without the deprecation warning there,
and adding a deprecation warning upon inclusion, using &quot;#included.&quot;
That was the second commit referred to in the patch.&lt;/p&gt;
&lt;p&gt;The resulting code passes the test suite (using Sqlite only, i
didn't have the heart to build the mysql and postgress environments
just to include this patch) and some new ones added to highlight
the problem.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Now my autocompleting life has returned and I am a little bit
happier. Thought I would share the ponies and rainbows with my
favorite community. Hope I have done more good than harm.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-18T19:40:23+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0 console hard aborts on attempted autocompletion [PATCH supplied]</title>
      <updated-at type="datetime">2010-09-18T19:40:26+01:00</updated-at>
      <user-id type="integer">4027</user-id>
      <version type="integer">1</version>
      <user-name>Andrew C. Greenberg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-18T23:28:08+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Rails 3.0 console hard aborts on attempted autocompletion [PATCH supplied]
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion</title>
      <updated-at type="datetime">2010-09-18T23:28:10+01:00</updated-at>
      <user-id type="integer">4027</user-id>
      <version type="integer">2</version>
      <user-name>Andrew C. Greenberg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; but instead of returning an array of Strings, as Class and its progeny do, Arel::Attribute::Predications.method_missing returns an array of Symbols

Unfortunately, this depends on which Ruby version you are using.

    $ ruby -e 'p String.instance_methods[0,5]'
    [&quot;%&quot;, &quot;select&quot;, &quot;[]=&quot;, &quot;inspect&quot;, &quot;&lt;&lt;&quot;]
    $ ruby19 -e 'p String.instance_methods[0,5]'
    [:&lt;=&gt;, :==, :eql?, :hash, :casecmp]

&gt; And an array of symbols does not like to be sorted, since symbols do not respond to &quot;&lt;=&gt;&quot;. Boom!

Similarly:

    $ ruby -e 'p [:foo, :bar].sort'
    -e:1:in `sort': undefined method `&lt;=&gt;' for :foo:Symbol (NoMethodError)
            from -e:1
    $ ruby19 -e 'p [:foo, :bar].sort'
    [:bar, :foo]

However, even in 1.9 you can't mix Symbol and String in a sort:

    $ ruby19 -e 'p [:foo, &quot;bar&quot;].sort'
    -e:1:in `sort': comparison of Symbol with String failed (ArgumentError)
            from -e:1:in `&lt;main&gt;'

So I think you should map PREDICATES to strings only if RUBY_VERSION &lt; &quot;1.9&quot;</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;but instead of returning an array of Strings, as Class and its
progeny do, Arel::Attribute::Predications.method_missing returns an
array of Symbols&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, this depends on which Ruby version you are
using.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ ruby -e 'p String.instance_methods[0,5]'
[&quot;%&quot;, &quot;select&quot;, &quot;[]=&quot;, &quot;inspect&quot;, &quot;&amp;lt;&amp;lt;&quot;]
$ ruby19 -e 'p String.instance_methods[0,5]'
[:&amp;lt;=&amp;gt;, :==, :eql?, :hash, :casecmp]&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;And an array of symbols does not like to be sorted, since
symbols do not respond to &quot;&amp;lt;=&amp;gt;&quot;. Boom!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Similarly:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ ruby -e 'p [:foo, :bar].sort'
-e:1:in `sort': undefined method `&amp;lt;=&amp;gt;' for :foo:Symbol (NoMethodError)
        from -e:1
$ ruby19 -e 'p [:foo, :bar].sort'
[:bar, :foo]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, even in 1.9 you can't mix Symbol and String in a
sort:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ ruby19 -e 'p [:foo, &quot;bar&quot;].sort'
-e:1:in `sort': comparison of Symbol with String failed (ArgumentError)
        from -e:1:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So I think you should map PREDICATES to strings only if
RUBY_VERSION &amp;lt; &quot;1.9&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-20T11:32:22+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion</title>
      <updated-at type="datetime">2010-09-20T11:32:27+01:00</updated-at>
      <user-id type="integer">16168</user-id>
      <version type="integer">3</version>
      <user-name>Brian Candler</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>A useful observation, and it may explain how this wasn't caught earlier.  Even so, the deprecation notice is still routinely printed in the rails console for expression autoompletion, and that should be fixed.  Accordingly, I added a test to catch the ruby version dependence, added your suggested change, and included the previous changes to remove the version dependence.

In retrospect, it seems to me that using the array and override of #instance_methods is a brittle hack in the original.  A better method might have been simply to metaprogam all the methods into the module (adding the dep warnings for the use of the procedure, not the introspection), and let the respective rubies determine how they would report the list of methods.  Rather than do that, I leave it to the arel community to explain what functionality or purpose Predications still has, if any.  If it is totally vestigial, perhaps the existing stuff is good enough.

Anyway, I attach a patch that repairs the repair so it works now with 1.8.7 and 1.9.2, AND eliminates the random deprecation messages in the ruby console hsving no relation to the autocompletion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;A useful observation, and it may explain how this wasn't caught
earlier. Even so, the deprecation notice is still routinely printed
in the rails console for expression autoompletion, and that should
be fixed. Accordingly, I added a test to catch the ruby version
dependence, added your suggested change, and included the previous
changes to remove the version dependence.&lt;/p&gt;
&lt;p&gt;In retrospect, it seems to me that using the array and override
of #instance_methods is a brittle hack in the original. A better
method might have been simply to metaprogam all the methods into
the module (adding the dep warnings for the use of the procedure,
not the introspection), and let the respective rubies determine how
they would report the list of methods. Rather than do that, I leave
it to the arel community to explain what functionality or purpose
Predications still has, if any. If it is totally vestigial, perhaps
the existing stuff is good enough.&lt;/p&gt;
&lt;p&gt;Anyway, I attach a patch that repairs the repair so it works now
with 1.8.7 and 1.9.2, AND eliminates the random deprecation
messages in the ruby console hsving no relation to the
autocompletion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T22:36:15+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion</title>
      <updated-at type="datetime">2010-09-21T22:36:21+01:00</updated-at>
      <user-id type="integer">4027</user-id>
      <version type="integer">4</version>
      <user-name>Andrew C. Greenberg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T22:36:53+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[PATCH] Rails 3.0 console hard aborts on attempted autocompletion&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-09-21T22:36:58+01:00</updated-at>
      <user-id type="integer">4027</user-id>
      <version type="integer">5</version>
      <user-name>Andrew C. Greenberg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T22:38:19+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel console&quot;</tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-09-21T22:38:22+01:00</updated-at>
      <user-id type="integer">4027</user-id>
      <version type="integer">6</version>
      <user-name>Andrew C. Greenberg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T22:38:48+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;arel console\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel console</tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-09-21T22:38:53+01:00</updated-at>
      <user-id type="integer">4027</user-id>
      <version type="integer">7</version>
      <user-name>Andrew C. Greenberg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Your patch does not apply to the `rails/arel` repository because the files it modifies are no longer there. Please update it to reflect this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Your patch does not apply to the &lt;code&gt;rails/arel&lt;/code&gt;
repository because the files it modifies are no longer there.
Please update it to reflect this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T06:51:57+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel console</tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-09-30T06:51:58+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">8</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I cannot reproduce this on Rails master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I cannot reproduce this on Rails master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T06:53:41+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel console</tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-09-30T06:53:43+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">9</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Not reproducible on Rails master</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not reproducible on Rails master&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T07:12:00+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel console</tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-09-30T07:12:03+01:00</updated-at>
      <user-id type="integer">94431</user-id>
      <version type="integer">10</version>
      <user-name>Ben Mills</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name>Low</priority-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Confirmed fixed in master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Confirmed fixed in master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-30T07:12:02+01:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 14998
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel console</tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-09-30T07:12:04+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">11</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name>Low</priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This issue is still present in Rails 3.0.1

@@@

$ rails -v
Rails 3.0.1
$ ruby -v
ruby 1.8.7 (2010-01-10 patchlevel 249) [i486-linux]
$ rails new testapp ; cd testapp
$ rails c
Loading development environment (Rails 3.0.1)
irb(main):001:0&gt; Time.now.

@@@

press tab to autocomplete here, and you get

@@@

this module is deprecated, please use the PREDICATES constant
/usr/lib/ruby/1.8/irb/completion.rb:162:in `sort!': undefined method `&lt;=&gt;' for :not_in_all:Symbol (NoMethodError)
	from /usr/lib/ruby/1.8/irb/completion.rb:162
	from /usr/lib/ruby/1.8/irb/input-method.rb:97:in `call'
	from /usr/lib/ruby/1.8/irb/input-method.rb:97:in `readline'
	from /usr/lib/ruby/1.8/irb/input-method.rb:97:in `gets'
	from /usr/lib/ruby/1.8/irb.rb:140
	from /usr/lib/ruby/1.8/irb.rb:271:in `signal_status'
	from /usr/lib/ruby/1.8/irb.rb:139
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:189:in `call'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:189:in `buf_input'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:104:in `getc'
	from /usr/lib/ruby/1.8/irb/slex.rb:206:in `match_io'
	from /usr/lib/ruby/1.8/irb/slex.rb:76:in `match'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:287:in `token'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:263:in `lex'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:234:in `each_top_level_statement'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:230:in `loop'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:230:in `each_top_level_statement'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:229:in `catch'
	from /usr/lib/ruby/1.8/irb/ruby-lex.rb:229:in `each_top_level_statement'
	from /usr/lib/ruby/1.8/irb.rb:154:in `eval_input'
	from /usr/lib/ruby/1.8/irb.rb:71:in `start'
	from /usr/lib/ruby/1.8/irb.rb:70:in `catch'
	from /usr/lib/ruby/1.8/irb.rb:70:in `start'
	from /usr/lib/ruby/gems/1.8/gems/railties-3.0.1/lib/rails/commands/console.rb:44:in `start'
	from /usr/lib/ruby/gems/1.8/gems/railties-3.0.1/lib/rails/commands/console.rb:8:in `start'
	from /usr/lib/ruby/gems/1.8/gems/railties-3.0.1/lib/rails/commands.rb:23
	from script/rails:6:in `require'
	from script/rails:6
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue is still present in Rails 3.0.1&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
$ rails -v
Rails 3.0.1
$ ruby -v
ruby 1.8.7 (2010-01-10 patchlevel 249) [i486-linux]
$ rails new testapp ; cd testapp
$ rails c
Loading development environment (Rails 3.0.1)
irb(main):001:0&amp;gt; Time.now.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;press tab to autocomplete here, and you get&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
this module is deprecated, please use the PREDICATES constant
/usr/lib/ruby/1.8/irb/completion.rb:162:in `sort!': undefined method `&amp;lt;=&amp;gt;' for :not_in_all:Symbol (NoMethodError)
    from /usr/lib/ruby/1.8/irb/completion.rb:162
    from /usr/lib/ruby/1.8/irb/input-method.rb:97:in `call'
    from /usr/lib/ruby/1.8/irb/input-method.rb:97:in `readline'
    from /usr/lib/ruby/1.8/irb/input-method.rb:97:in `gets'
    from /usr/lib/ruby/1.8/irb.rb:140
    from /usr/lib/ruby/1.8/irb.rb:271:in `signal_status'
    from /usr/lib/ruby/1.8/irb.rb:139
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:189:in `call'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:189:in `buf_input'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:104:in `getc'
    from /usr/lib/ruby/1.8/irb/slex.rb:206:in `match_io'
    from /usr/lib/ruby/1.8/irb/slex.rb:76:in `match'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:287:in `token'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:263:in `lex'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:234:in `each_top_level_statement'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:230:in `loop'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:230:in `each_top_level_statement'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:229:in `catch'
    from /usr/lib/ruby/1.8/irb/ruby-lex.rb:229:in `each_top_level_statement'
    from /usr/lib/ruby/1.8/irb.rb:154:in `eval_input'
    from /usr/lib/ruby/1.8/irb.rb:71:in `start'
    from /usr/lib/ruby/1.8/irb.rb:70:in `catch'
    from /usr/lib/ruby/1.8/irb.rb:70:in `start'
    from /usr/lib/ruby/gems/1.8/gems/railties-3.0.1/lib/rails/commands/console.rb:44:in `start'
    from /usr/lib/ruby/gems/1.8/gems/railties-3.0.1/lib/rails/commands/console.rb:8:in `start'
    from /usr/lib/ruby/gems/1.8/gems/railties-3.0.1/lib/rails/commands.rb:23
    from script/rails:6:in `require'
    from script/rails:6&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-14T21:38:42+00:00</created-at>
      <creator-id type="integer">4027</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5657</number>
      <permalink>rails-30-console-hard-aborts-on-attempted-autocompletion-patch-supplied</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel console</tag>
      <title>[PATCH] Rails 3.0 console hard aborts on attempted autocompletion in Ruby 1.8.7, and prints inappropriate deprecation notice in Ruby 1.9.2</title>
      <updated-at type="datetime">2010-11-14T21:38:45+00:00</updated-at>
      <user-id type="integer">124922</user-id>
      <version type="integer">12</version>
      <user-name>Stephen Davis</user-name>
      <creator-name>Andrew C. Greenberg</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5657</url>
      <priority-name>Low</priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>dd72642584ffdf624fda4fec56ade9f1159d56f7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-18T19:40:23+01:00</created-at>
      <filename>rails_console_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">679906</id>
      <size type="integer">4660</size>
      <uploader-id type="integer">4027</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/679906/rails_console_patch.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>80f6c71688706cca70831cdea584ccdc4f4ee87b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-21T22:36:15+01:00</created-at>
      <filename>rails_console_patch2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">684495</id>
      <size type="integer">6646</size>
      <uploader-id type="integer">4027</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/684495/rails_console_patch2.diff</url>
    </attachment>
  </attachments>
</ticket>
