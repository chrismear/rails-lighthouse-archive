<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-27T17:39:52+01:00</created-at>
  <creator-id type="integer">76466</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5214</number>
  <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
  <title>In new router, collection doesn't add name of the parent resource</title>
  <updated-at type="datetime">2010-08-24T14:10:42+01:00</updated-at>
  <user-id type="integer">76466</user-id>
  <version type="integer">10</version>
  <user-name>xHire</user-name>
  <creator-name>xHire</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
  <priority-name>Low</priority-name>
  <original-body>Between RoR 3 beta 4 and RoR 3 RC was changed router to support shallow routes. It seems it affected 'collection' in a way that doesn't have anything to do with [shallow routes](https://rails.lighthouseapp.com/projects/8994/tickets/3765-missing-shallow-routes-in-new-router-dsl).

@@@ ruby
Testingapp::Application.routes.draw do
  resources :books do
    collection do
      resources :genres
    end
  end
end
@@@

In RC `rake routes` includes lines like:
    new_genre GET    /books/genres/new(.:format)      {:controller=&gt;&quot;genres&quot;, :action=&gt;&quot;new&quot;}

But what I expected was this line as generated in beta 4:
    new_books_genre GET    /books/genres/new(.:format)      {:controller=&gt;&quot;genres&quot;, :action=&gt;&quot;new&quot;}

I.e. collection in new router doesn't add the parent resources' name to the name of resources in the collection, which is wrong (according to [guides](http://guides.rails.info/routing.html#adding-collection-routes)).</original-body>
  <latest-body>Between RoR 3 beta 4 and RoR 3 RC was changed router to support shallow routes. It seems it affected 'collection' in a way that doesn't have anything to do with [shallow routes](https://rails.lighthouseapp.com/projects/8994/tickets/3765-missing-shallow-routes-in-new-router-dsl).

@@@ ruby
Testingapp::Application.routes.draw do
  resources :books do
    collection do
      resources :genres
    end
  end
end
@@@

In RC `rake routes` includes lines like:
    new_genre GET    /books/genres/new(.:format)      {:controller=&gt;&quot;genres&quot;, :action=&gt;&quot;new&quot;}

But what I expected was this line as generated in beta 4:
    new_books_genre GET    /books/genres/new(.:format)      {:controller=&gt;&quot;genres&quot;, :action=&gt;&quot;new&quot;}

I.e. collection in new router doesn't add the parent resources' name to the name of resources in the collection, which is wrong (according to [guides](http://guides.rails.info/routing.html#adding-collection-routes)).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Between RoR 3 beta 4 and RoR 3 RC was changed router to support
shallow routes. It seems it affected 'collection' in a way that
doesn't have anything to do with &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/3765-missing-shallow-routes-in-new-router-dsl&quot;&gt;
shallow routes&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Testingapp::Application.routes.draw do
  resources :books do
    collection do
      resources :genres
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In RC &lt;code&gt;rake routes&lt;/code&gt; includes lines like:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;new_genre GET    /books/genres/new(.:format)      {:controller=&amp;gt;&quot;genres&quot;, :action=&amp;gt;&quot;new&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But what I expected was this line as generated in beta
4:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;new_books_genre GET    /books/genres/new(.:format)      {:controller=&amp;gt;&quot;genres&quot;, :action=&amp;gt;&quot;new&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I.e. collection in new router doesn't add the parent resources'
name to the name of resources in the collection, which is wrong
(according to &lt;a href=
&quot;http://guides.rails.info/routing.html#adding-collection-routes&quot;&gt;guides&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Between RoR 3 beta 4 and RoR 3 RC was changed router to support shallow routes. It seems it affected 'collection' in a way that doesn't have anything to do with [shallow routes](https://rails.lighthouseapp.com/projects/8994/tickets/3765-missing-shallow-routes-in-new-router-dsl).

@@@ ruby
Testingapp::Application.routes.draw do
  resources :books do
    collection do
      resources :genres
    end
  end
end
@@@

In RC `rake routes` includes lines like:
    new_genre GET    /books/genres/new(.:format)      {:controller=&gt;&quot;genres&quot;, :action=&gt;&quot;new&quot;}

But what I expected was this line as generated in beta 4:
    new_books_genre GET    /books/genres/new(.:format)      {:controller=&gt;&quot;genres&quot;, :action=&gt;&quot;new&quot;}

I.e. collection in new router doesn't add the parent resources' name to the name of resources in the collection, which is wrong (according to [guides](http://guides.rails.info/routing.html#adding-collection-routes)).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Between RoR 3 beta 4 and RoR 3 RC was changed router to support
shallow routes. It seems it affected 'collection' in a way that
doesn't have anything to do with &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/3765-missing-shallow-routes-in-new-router-dsl&quot;&gt;
shallow routes&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Testingapp::Application.routes.draw do
  resources :books do
    collection do
      resources :genres
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In RC &lt;code&gt;rake routes&lt;/code&gt; includes lines like:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;new_genre GET    /books/genres/new(.:format)      {:controller=&amp;gt;&quot;genres&quot;, :action=&amp;gt;&quot;new&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But what I expected was this line as generated in beta
4:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;new_books_genre GET    /books/genres/new(.:format)      {:controller=&amp;gt;&quot;genres&quot;, :action=&amp;gt;&quot;new&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I.e. collection in new router doesn't add the parent resources'
name to the name of resources in the collection, which is wrong
(according to &lt;a href=
&quot;http://guides.rails.info/routing.html#adding-collection-routes&quot;&gt;guides&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T14:04:45+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-07-27T14:04:48+01:00</updated-at>
      <user-id type="integer">76466</user-id>
      <version type="integer">1</version>
      <user-name>xHire</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The most cool online shoes shop where you can find the most fashion designers shoes, include
&lt;a href='http://www.fashionshoesmart.com'&gt;Manolo Blahnik Shoes&lt;/a&gt;, &lt;a href='http://www.fashionshoesmart.com'&gt;Jimmy Choo Shoes&lt;/a&gt;, Christian Louboutin shoes and more. 
we offer high quality highheels at low price.

Simple ways to love your wardrobe.
An online shop specializing in &lt;a href='http://www.hervelegerbrand.com'&gt;Herve Leger&lt;/a&gt;, Herve Leger Dress, Herve Leger Skirt, 
Herve Leger Sale, Herve Leger Dresses.All new style in our store.

Shop the latest styles &lt;a href='http://www.juicyshoponline.com'&gt;Juicy Couture&lt;/a&gt; handbags, juicy couture tracksuit.
Juicy couture sale, juicy couture outlet,100% quality guarantee.

FashionStyleOnsale offer high quality Moncler Jackets at low price. 
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler Coats at FashionStyleOnsale
&lt;a href='http://www.fashionstyleonsale.com'&gt;moncler&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;The most cool online shoes shop where you can find the most
fashion designers shoes, include&lt;br&gt;
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Manolo Blahnik Shoes&lt;/a&gt;,
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Jimmy Choo Shoes&lt;/a&gt;,
Christian Louboutin shoes and more.&lt;br&gt;
we offer high quality highheels at low price.&lt;/p&gt;
&lt;p&gt;Simple ways to love your wardrobe.&lt;br&gt;
An online shop specializing in &lt;a href=
&quot;http://www.hervelegerbrand.com&quot;&gt;Herve Leger&lt;/a&gt;, Herve Leger
Dress, Herve Leger Skirt,&lt;br&gt;
Herve Leger Sale, Herve Leger Dresses.All new style in our
store.&lt;/p&gt;
&lt;p&gt;Shop the latest styles &lt;a href=
&quot;http://www.juicyshoponline.com&quot;&gt;Juicy Couture&lt;/a&gt; handbags, juicy
couture tracksuit.&lt;br&gt;
Juicy couture sale, juicy couture outlet,100% quality
guarantee.&lt;/p&gt;
&lt;p&gt;FashionStyleOnsale offer high quality Moncler Jackets at low
price.&lt;br&gt;
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler
Coats at FashionStyleOnsale&lt;br&gt;
&lt;a href=&quot;http://www.fashionstyleonsale.com&quot;&gt;moncler&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T15:07:35+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-07-27T17:39:52+01:00</updated-at>
      <user-id type="integer">109040</user-id>
      <version type="integer">2</version>
      <user-name>matin</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think what is actually wrong in your example is the nesting of 

@@@ ruby
    collection do
      resources :genres
    end
@@@

where is should just read

@@@
  resources :books do
     resources :genres
  end
@@@

But I have a similiar problem with the methods not being generated. ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think what is actually wrong in your example is the nesting
of&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    collection do
      resources :genres
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;where is should just read&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  resources :books do
     resources :genres
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But I have a similiar problem with the methods not being
generated. ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T11:01:48+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-04T11:01:51+01:00</updated-at>
      <user-id type="integer">110184</user-id>
      <version type="integer">3</version>
      <user-name>Timo Mika Gl&#228;&#223;er</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It might seem so, but your suggestion generates URLs like `/books/:book_id/genres/new(.:format)` but that's definitely not what I wanted. ;c) Anyway the problem is not that it is not working (because it is) but that it doesn't generate correct names of the routes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It might seem so, but your suggestion generates URLs like
&lt;code&gt;/books/:book_id/genres/new(.:format)&lt;/code&gt; but that's
definitely not what I wanted. ;c) Anyway the problem is not that it
is not working (because it is) but that it doesn't generate correct
names of the routes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-06T07:54:59+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-06T07:55:03+01:00</updated-at>
      <user-id type="integer">76466</user-id>
      <version type="integer">4</version>
      <user-name>xHire</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok, sorry my misunderstanding. Did you consider using the option &quot;namespace =&gt; :books&quot;? See http://www.slideshare.net/mbleigh/upgrading-to-rails-3 at slide 25.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, sorry my misunderstanding. Did you consider using the option
&quot;namespace =&amp;gt; :books&quot;? See &lt;a href=
&quot;http://www.slideshare.net/mbleigh/upgrading-to-rails-3&quot;&gt;http://www.slideshare.net/mbleigh/upgrading-to-rails-3&lt;/a&gt;
at slide 25.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-06T11:59:31+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-06T11:59:32+01:00</updated-at>
      <user-id type="integer">110184</user-id>
      <version type="integer">5</version>
      <user-name>Timo Mika Gl&#228;&#223;er</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, to be able to continue in development of my application I was forced to use `scope :as =&gt; :books`. But that's not solution, that's just a hack, a temporary workaround which will be dropped as soon as this bug will be fixed. :c)

If it could be done with simple nesting, why should I look for any complicated solutions (as namespace is)?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, to be able to continue in development of my application I
was forced to use &lt;code&gt;scope :as =&amp;gt; :books&lt;/code&gt;. But that's
not solution, that's just a hack, a temporary workaround which will
be dropped as soon as this bug will be fixed. :c)&lt;/p&gt;
&lt;p&gt;If it could be done with simple nesting, why should I look for
any complicated solutions (as namespace is)?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-06T12:10:11+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-06T12:10:12+01:00</updated-at>
      <user-id type="integer">76466</user-id>
      <version type="integer">6</version>
      <user-name>xHire</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The resource scopes collection, member and new aren't designed to have resources calls inside them - there are no tests for this functionality so it is essentially undefined. The reason it sort of works is that the mapper will automatically wrap the resources call inside a nested block as a convenience. It's better to use the proper api:

@@@ ruby
  resources :books

  namespace :books, :module =&gt; nil do
    resources :genres
  end
@@@

You can leave off the :module =&gt; nil if you'd prefer the resources controller to be books/genres.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The resource scopes collection, member and new aren't designed
to have resources calls inside them - there are no tests for this
functionality so it is essentially undefined. The reason it sort of
works is that the mapper will automatically wrap the resources call
inside a nested block as a convenience. It's better to use the
proper api:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  resources :books

  namespace :books, :module =&amp;gt; nil do
    resources :genres
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can leave off the :module =&amp;gt; nil if you'd prefer the
resources controller to be books/genres.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-20T00:56:51+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-20T00:56:54+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">7</version>
      <user-name>Andrew White</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; The resource scopes collection, member and new aren't designed to have resources calls inside them - there are no tests for this functionality so it is essentially undefined.

If the only problem is that my use case wasn't intended to exist, but isn't unwanted, would be proper patch for this issue accepted?

I just want to know if I should use my current workaround (with scope which currently more suits my needs than your suggestion) or if I could try to fix this in Rails.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;The resource scopes collection, member and new aren't designed
to have resources calls inside them - there are no tests for this
functionality so it is essentially undefined.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If the only problem is that my use case wasn't intended to
exist, but isn't unwanted, would be proper patch for this issue
accepted?&lt;/p&gt;
&lt;p&gt;I just want to know if I should use my current workaround (with
scope which currently more suits my needs than your suggestion) or
if I could try to fix this in Rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-24T13:41:16+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-24T13:41:20+01:00</updated-at>
      <user-id type="integer">76466</user-id>
      <version type="integer">8</version>
      <user-name>xHire</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The concept of nested resources implies ownership by the parent therefore the use case isn't intended to exist, so I'd use whatever alternative method of generating your routes you prefer.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The concept of nested resources implies ownership by the parent
therefore the use case isn't intended to exist, so I'd use whatever
alternative method of generating your routes you prefer.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-24T13:51:28+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-24T13:51:30+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">9</version>
      <user-name>Andrew White</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK, thank you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, thank you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-24T14:10:41+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5214</number>
      <permalink>in-new-router-collection-doesnt-add-name-of-the-parent-resource</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0.0.rc collection &quot;rails3 routes&quot;</tag>
      <title>In new router, collection doesn't add name of the parent resource</title>
      <updated-at type="datetime">2010-08-24T14:10:42+01:00</updated-at>
      <user-id type="integer">76466</user-id>
      <version type="integer">10</version>
      <user-name>xHire</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5214</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
