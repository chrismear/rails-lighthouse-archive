<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">83</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-31T23:30:15+01:00</created-at>
  <creator-id type="integer">40403</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2387</number>
  <permalink>sqlite3-ar-and-quoting-issue</permalink>
  <priority type="integer">1480</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Sqlite3, AR and Quoting issue</title>
  <updated-at type="datetime">2010-01-20T17:58:22+00:00</updated-at>
  <user-id type="integer">25293</user-id>
  <version type="integer">3</version>
  <user-name>Prem Sichanugrist (sikachu)</user-name>
  <creator-name>manu</creator-name>
  <assigned-user-name>DHH</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2387</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>this concerns AR 2.2.2 and likely 2.3.

I have noticed that if I create using a migration a table like the following: (note that the name or type does not seem to matter for the timestamp)

create_table :mytable do |t|
  t.integer id
  t.date   timestamp1
  t.string timestamp2
end

When I use a model like

class Mytable &lt; ActiveRecord::Base
end

The following code causes to save the date in YAML for timestamp..
m = Mytable.new(:timestamp1 =&gt; &quot;2009-03-31 11:13:24&quot;, :timestamp2 =&gt; &quot;2009-03-31 11:13:24&quot;)
m.save


when looking in the database, both of the fields looks like
--- \n
-  2009-03-31 11:13:24 \n

 which now makes querying against timestamp impossible... I think this is a bug. If not, then it needs to be documented or have a way to change the behavior...

The problem is in the connection_adapters/abstract/quoting.rb, in the quote method</original-body>
  <latest-body>this concerns AR 2.2.2 and likely 2.3.

I have noticed that if I create using a migration a table like the following: (note that the name or type does not seem to matter for the timestamp)

create_table :mytable do |t|
  t.integer id
  t.date   timestamp1
  t.string timestamp2
end

When I use a model like

class Mytable &lt; ActiveRecord::Base
end

The following code causes to save the date in YAML for timestamp..
m = Mytable.new(:timestamp1 =&gt; &quot;2009-03-31 11:13:24&quot;, :timestamp2 =&gt; &quot;2009-03-31 11:13:24&quot;)
m.save


when looking in the database, both of the fields looks like
--- \n
-  2009-03-31 11:13:24 \n

 which now makes querying against timestamp impossible... I think this is a bug. If not, then it needs to be documented or have a way to change the behavior...

The problem is in the connection_adapters/abstract/quoting.rb, in the quote method</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;this concerns AR 2.2.2 and likely 2.3.&lt;/p&gt;
&lt;p&gt;I have noticed that if I create using a migration a table like
the following: (note that the name or type does not seem to matter
for the timestamp)&lt;/p&gt;
&lt;p&gt;create_table :mytable do |t| t.integer id t.date timestamp1
t.string timestamp2 end&lt;/p&gt;
&lt;p&gt;When I use a model like&lt;/p&gt;
&lt;p&gt;class Mytable &amp;lt; ActiveRecord::Base end&lt;/p&gt;
&lt;p&gt;The following code causes to save the date in YAML for
timestamp.. m = Mytable.new(:timestamp1 =&amp;gt; &quot;2009-03-31
11:13:24&quot;, :timestamp2 =&amp;gt; &quot;2009-03-31 11:13:24&quot;) m.save&lt;/p&gt;
&lt;p&gt;when looking in the database, both of the fields looks like ---
\n - 2009-03-31 11:13:24 \n&lt;/p&gt;
&lt;p&gt;which now makes querying against timestamp impossible... I think
this is a bug. If not, then it needs to be documented or have a way
to change the behavior...&lt;/p&gt;
&lt;p&gt;The problem is in the connection_adapters/abstract/quoting.rb,
in the quote method&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>this concerns AR 2.2.2 and likely 2.3.

I have noticed that if I create using a migration a table like the following: (note that the name or type does not seem to matter for the timestamp)

create_table :mytable do |t|
  t.integer id
  t.date   timestamp1
  t.string timestamp2
end

When I use a model like

class Mytable &lt; ActiveRecord::Base
end

The following code causes to save the date in YAML for timestamp..
m = Mytable.new(:timestamp1 =&gt; &quot;2009-03-31 11:13:24&quot;, :timestamp2 =&gt; &quot;2009-03-31 11:13:24&quot;)
m.save


when looking in the database, both of the fields looks like
--- \n
-  2009-03-31 11:13:24 \n

 which now makes querying against timestamp impossible... I think this is a bug. If not, then it needs to be documented or have a way to change the behavior...

The problem is in the connection_adapters/abstract/quoting.rb, in the quote method</body>
      <body-html>&lt;div&gt;&lt;p&gt;this concerns AR 2.2.2 and likely 2.3.&lt;/p&gt;
&lt;p&gt;I have noticed that if I create using a migration a table like
the following: (note that the name or type does not seem to matter
for the timestamp)&lt;/p&gt;
&lt;p&gt;create_table :mytable do |t| t.integer id t.date timestamp1
t.string timestamp2 end&lt;/p&gt;
&lt;p&gt;When I use a model like&lt;/p&gt;
&lt;p&gt;class Mytable &amp;lt; ActiveRecord::Base end&lt;/p&gt;
&lt;p&gt;The following code causes to save the date in YAML for
timestamp.. m = Mytable.new(:timestamp1 =&amp;gt; &quot;2009-03-31
11:13:24&quot;, :timestamp2 =&amp;gt; &quot;2009-03-31 11:13:24&quot;) m.save&lt;/p&gt;
&lt;p&gt;when looking in the database, both of the fields looks like ---
\n - 2009-03-31 11:13:24 \n&lt;/p&gt;
&lt;p&gt;which now makes querying against timestamp impossible... I think
this is a bug. If not, then it needs to be documented or have a way
to change the behavior...&lt;/p&gt;
&lt;p&gt;The problem is in the connection_adapters/abstract/quoting.rb,
in the quote method&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-31T23:30:15+01:00</created-at>
      <creator-id type="integer">40403</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2387</number>
      <permalink>sqlite3-ar-and-quoting-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Sqlite3, AR and Quoting issue</title>
      <updated-at type="datetime">2009-03-31T23:30:20+01:00</updated-at>
      <user-id type="integer">40403</user-id>
      <version type="integer">1</version>
      <user-name>manu</user-name>
      <creator-name>manu</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2387</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Migration:

@@@ ruby
class CreateMyModels &lt; ActiveRecord::Migration
  def self.up
    create_table :my_models do |t|
      t.string :first_timestamp
      t.date :second_timestamp
      t.datetime :third_timestamp

      t.timestamps
    end
  end
end
@@@

Model:

@@@ ruby
class MyModel &lt; ActiveRecord::Base
end
@@@

Creating:

@@@ ruby
MyModel.create(:first_timestamp =&gt; &quot;2009-05-06 20:38:00&quot;, :second_timestamp =&gt; &quot;2009-05-06 20:38:00&quot;, :third_timestamp =&gt; &quot;2009-05-06 20:38:00&quot;)
@@@

Let's see database:

@@@
Enter &quot;.help&quot; for instructions
Enter SQL statements terminated with a &quot;;&quot;
sqlite&gt; .d
BEGIN TRANSACTION;
CREATE TABLE &quot;schema_migrations&quot; (&quot;version&quot; varchar(255) NOT NULL);
INSERT INTO &quot;schema_migrations&quot; VALUES('20090506183730');
CREATE TABLE &quot;my_models&quot; (&quot;id&quot; INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, &quot;first_timestamp&quot; varchar(255), &quot;second_timestamp&quot; date, &quot;third_timestamp&quot; datetime, &quot;created_at&quot; datetime, &quot;updated_at&quot; datetime);
INSERT INTO &quot;my_models&quot; VALUES(1,'2009-05-06 20:38:00','2009-05-06','2009-05-06 20:38:00','2009-05-06 18:38:51','2009-05-06 18:38:51');
DELETE FROM sqlite_sequence;
INSERT INTO &quot;sqlite_sequence&quot; VALUES('my_models',1);
CREATE UNIQUE INDEX &quot;unique_schema_migrations&quot; ON &quot;schema_migrations&quot; (&quot;version&quot;);
COMMIT;
sqlite&gt; select * from my_models;
1|2009-05-06 20:38:00|2009-05-06|2009-05-06 20:38:00|2009-05-06 18:38:51|2009-05-06 18:38:51
@@@

@@@
About your application's environment
Ruby version              1.9.1 (x86_64-linux)
RubyGems version          1.3.3
Rack version              1.0 bundled
Rails version             2.3.2
Active Record version     2.3.2
Action Pack version       2.3.2
Active Resource version   2.3.2
Action Mailer version     2.3.2
Active Support version    2.3.2
Environment               development
Database adapter          sqlite3
@@@

Everything works perfectly using sqlite3-ruby (1.2.4).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Migration:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class CreateMyModels &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :my_models do |t|
      t.string :first_timestamp
      t.date :second_timestamp
      t.datetime :third_timestamp

      t.timestamps
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Model:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class MyModel &amp;lt; ActiveRecord::Base
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Creating:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
MyModel.create(:first_timestamp =&amp;gt; &amp;quot;2009-05-06 20:38:00&amp;quot;, :second_timestamp =&amp;gt; &amp;quot;2009-05-06 20:38:00&amp;quot;, :third_timestamp =&amp;gt; &amp;quot;2009-05-06 20:38:00&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let's see database:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
Enter &amp;quot;.help&amp;quot; for instructions
Enter SQL statements terminated with a &amp;quot;;&amp;quot;
sqlite&amp;gt; .d
BEGIN TRANSACTION;
CREATE TABLE &amp;quot;schema_migrations&amp;quot; (&amp;quot;version&amp;quot; varchar(255) NOT NULL);
INSERT INTO &amp;quot;schema_migrations&amp;quot; VALUES('20090506183730');
CREATE TABLE &amp;quot;my_models&amp;quot; (&amp;quot;id&amp;quot; INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, &amp;quot;first_timestamp&amp;quot; varchar(255), &amp;quot;second_timestamp&amp;quot; date, &amp;quot;third_timestamp&amp;quot; datetime, &amp;quot;created_at&amp;quot; datetime, &amp;quot;updated_at&amp;quot; datetime);
INSERT INTO &amp;quot;my_models&amp;quot; VALUES(1,'2009-05-06 20:38:00','2009-05-06','2009-05-06 20:38:00','2009-05-06 18:38:51','2009-05-06 18:38:51');
DELETE FROM sqlite_sequence;
INSERT INTO &amp;quot;sqlite_sequence&amp;quot; VALUES('my_models',1);
CREATE UNIQUE INDEX &amp;quot;unique_schema_migrations&amp;quot; ON &amp;quot;schema_migrations&amp;quot; (&amp;quot;version&amp;quot;);
COMMIT;
sqlite&amp;gt; select * from my_models;
1|2009-05-06 20:38:00|2009-05-06|2009-05-06 20:38:00|2009-05-06 18:38:51|2009-05-06 18:38:51
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code&gt;
About your application's environment
Ruby version              1.9.1 (x86_64-linux)
RubyGems version          1.3.3
Rack version              1.0 bundled
Rails version             2.3.2
Active Record version     2.3.2
Action Pack version       2.3.2
Active Resource version   2.3.2
Action Mailer version     2.3.2
Active Support version    2.3.2
Environment               development
Database adapter          sqlite3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Everything works perfectly using sqlite3-ruby (1.2.4).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-06T19:50:12+01:00</created-at>
      <creator-id type="integer">40403</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2387</number>
      <permalink>sqlite3-ar-and-quoting-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Sqlite3, AR and Quoting issue</title>
      <updated-at type="datetime">2009-05-06T19:50:15+01:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">2</version>
      <user-name>qoobaa</user-name>
      <creator-name>manu</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2387</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-20T17:58:18+00:00</created-at>
      <creator-id type="integer">40403</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2387</number>
      <permalink>sqlite3-ar-and-quoting-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Sqlite3, AR and Quoting issue</title>
      <updated-at type="datetime">2010-01-20T17:58:22+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">3</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>manu</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2387</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
