<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-23T21:18:08+01:00</created-at>
  <creator-id type="integer">8322</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4676</number>
  <permalink>reload-routes-on-each-request-in-dev-mode</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>cache_classes rails3 routes routing</tag>
  <title>Reload routes on each request in dev mode</title>
  <updated-at type="datetime">2011-01-13T19:17:51+00:00</updated-at>
  <user-id type="integer">6544</user-id>
  <version type="integer">4</version>
  <user-name>Adam Williams</user-name>
  <creator-name>wildchild</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4676</url>
  <priority-name>Low</priority-name>
  <original-body>If some modules or classes has state which populated by custom mapper (just like devise does) its state will never be populated next time the module is reloaded. Currently the one and only workaround is to $ touch config/routes.rb, but quite annoying. Thoughts?</original-body>
  <latest-body>If some modules or classes has state which populated by custom mapper (just like devise does) its state will never be populated next time the module is reloaded. Currently the one and only workaround is to $ touch config/routes.rb, but quite annoying. Thoughts?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If some modules or classes has state which populated by custom
mapper (just like devise does) its state will never be populated
next time the module is reloaded. Currently the one and only
workaround is to $ touch config/routes.rb, but quite annoying.
Thoughts?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If some modules or classes has state which populated by custom mapper (just like devise does) its state will never be populated next time the module is reloaded. Currently the one and only workaround is to $ touch config/routes.rb, but quite annoying. Thoughts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;If some modules or classes has state which populated by custom
mapper (just like devise does) its state will never be populated
next time the module is reloaded. Currently the one and only
workaround is to $ touch config/routes.rb, but quite annoying.
Thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-23T21:18:08+01:00</created-at>
      <creator-id type="integer">8322</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4676</number>
      <permalink>reload-routes-on-each-request-in-dev-mode</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>cache_classes rails3 routes routing</tag>
      <title>Reload routes on each request in dev mode</title>
      <updated-at type="datetime">2010-05-23T21:18:10+01:00</updated-at>
      <user-id type="integer">8322</user-id>
      <version type="integer">1</version>
      <user-name>wildchild</user-name>
      <creator-name>wildchild</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4676</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please provide a way to duplicate this bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please provide a way to duplicate this bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-21T03:54:40+01:00</created-at>
      <creator-id type="integer">8322</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4676</number>
      <permalink>reload-routes-on-each-request-in-dev-mode</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>cache_classes rails3 routes routing</tag>
      <title>Reload routes on each request in dev mode</title>
      <updated-at type="datetime">2010-06-21T03:54:46+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>wildchild</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4676</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Loading routes in all requests can hit performance hard, so it's a no go about this (note: I'm Devise core developer).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Loading routes in all requests can hit performance hard, so it's
a no go about this (note: I'm Devise core developer).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-22T16:43:52+01:00</created-at>
      <creator-id type="integer">8322</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4676</number>
      <permalink>reload-routes-on-each-request-in-dev-mode</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>cache_classes rails3 routes routing</tag>
      <title>Reload routes on each request in dev mode</title>
      <updated-at type="datetime">2010-06-22T16:43:59+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>wildchild</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4676</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I hope this is an appropriate place to bring this up...

Since the routes are only reloaded when the mtime of the file has changed, any auto-loaded constants referenced in the routes file are not 'replaced' when their source file is reloaded after Dependencies.clear.

For instance:

    match '/abc' =&gt; MyAutoloadedEndpoint

When Dependencies.clear has been run, and I have modified the source for MyAutoloadedEndpoint, things get weird. The constant is no longer defined, but the route set is still referencing that old code. If the call method of the endpoint then causes an auto load of another class, const_missing attempts to resolve it by utilizing a nesting process that will then auto load MyAutoloadedEndpoint!

Am I off my rocker? I have solved this for myself by adding, in an config/initializer/endpoints.rb, this bit of code:

    if Rails.env == &quot;development&quot;
      lib_reloader = ActiveSupport::FileUpdateChecker.new(Dir[&quot;app/endpoints/**/*&quot;], true) do
        Rails.application.reload_routes!
      end
    
      ActionDispatch::Callbacks.to_prepare do
        lib_reloader.execute_if_updated
      end
    end

I'd love you're feedback, or pointers on where to talk about this. Thank you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I hope this is an appropriate place to bring this up...&lt;/p&gt;
&lt;p&gt;Since the routes are only reloaded when the mtime of the file
has changed, any auto-loaded constants referenced in the routes
file are not 'replaced' when their source file is reloaded after
Dependencies.clear.&lt;/p&gt;
&lt;p&gt;For instance:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;match '/abc' =&amp;gt; MyAutoloadedEndpoint&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When Dependencies.clear has been run, and I have modified the
source for MyAutoloadedEndpoint, things get weird. The constant is
no longer defined, but the route set is still referencing that old
code. If the call method of the endpoint then causes an auto load
of another class, const_missing attempts to resolve it by utilizing
a nesting process that will then auto load
MyAutoloadedEndpoint!&lt;/p&gt;
&lt;p&gt;Am I off my rocker? I have solved this for myself by adding, in
an config/initializer/endpoints.rb, this bit of code:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;if Rails.env == &quot;development&quot;
  lib_reloader = ActiveSupport::FileUpdateChecker.new(Dir[&quot;app/endpoints/**/*&quot;], true) do
    Rails.application.reload_routes!
  end

  ActionDispatch::Callbacks.to_prepare do
    lib_reloader.execute_if_updated
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'd love you're feedback, or pointers on where to talk about
this. Thank you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-13T19:17:37+00:00</created-at>
      <creator-id type="integer">8322</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4676</number>
      <permalink>reload-routes-on-each-request-in-dev-mode</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>cache_classes rails3 routes routing</tag>
      <title>Reload routes on each request in dev mode</title>
      <updated-at type="datetime">2011-01-13T19:17:51+00:00</updated-at>
      <user-id type="integer">6544</user-id>
      <version type="integer">4</version>
      <user-name>Adam Williams</user-name>
      <creator-name>wildchild</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4676</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
