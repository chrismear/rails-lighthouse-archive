<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-14T06:12:21+00:00</created-at>
  <creator-id type="integer">38998</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5968</number>
  <permalink>size-of-through-association-is-not-correct-after-adding-a-has_many-association</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>&quot;activerecord associations has_many through&quot;</tag>
  <title>Size of through association is not correct after adding a has_many association</title>
  <updated-at type="datetime">2010-11-14T17:38:16+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Jason Cheow</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5968</url>
  <priority-name nil="true"></priority-name>
  <original-body>With the following:

@@@ ruby
class Post &lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&gt; :readers
end

class Person &lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&gt; :readers
end

class Reader &lt; ActiveRecord::Base
  belongs_to :post
  belongs_to :person
end
@@@

@@@ ruby
post = Post.create
post.people &lt;&lt; Person.create
post.readers.size        # Returns 2, when 1 is expected.
post.reload.readers.size # Returns 1 as expected.
@@@

This happens because ActiveRecord::Associations::HasManyThroughAssociation#insert_record has an extraneous line that adds the same through record after creating it.

A patch with a failing test and the fix is attached.</original-body>
  <latest-body>With the following:

@@@ ruby
class Post &lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&gt; :readers
end

class Person &lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&gt; :readers
end

class Reader &lt; ActiveRecord::Base
  belongs_to :post
  belongs_to :person
end
@@@

@@@ ruby
post = Post.create
post.people &lt;&lt; Person.create
post.readers.size        # Returns 2, when 1 is expected.
post.reload.readers.size # Returns 1 as expected.
@@@

This happens because ActiveRecord::Associations::HasManyThroughAssociation#insert_record has an extraneous line that adds the same through record after creating it.

A patch with a failing test and the fix is attached.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Post &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&amp;gt; :readers
end

class Person &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&amp;gt; :readers
end

class Reader &amp;lt; ActiveRecord::Base
  belongs_to :post
  belongs_to :person
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;post = Post.create
post.people &amp;lt;&amp;lt; Person.create
post.readers.size        # Returns 2, when 1 is expected.
post.reload.readers.size # Returns 1 as expected.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This happens because
ActiveRecord::Associations::HasManyThroughAssociation#insert_record
has an extraneous line that adds the same through record after
creating it.&lt;/p&gt;
&lt;p&gt;A patch with a failing test and the fix is attached.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With the following:

@@@ ruby
class Post &lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&gt; :readers
end

class Person &lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&gt; :readers
end

class Reader &lt; ActiveRecord::Base
  belongs_to :post
  belongs_to :person
end
@@@

@@@ ruby
post = Post.create
post.people &lt;&lt; Person.create
post.readers.size        # Returns 2, when 1 is expected.
post.reload.readers.size # Returns 1 as expected.
@@@

This happens because ActiveRecord::Associations::HasManyThroughAssociation#insert_record has an extraneous line that adds the same through record after creating it.

A patch with a failing test and the fix is attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Post &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&amp;gt; :readers
end

class Person &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&amp;gt; :readers
end

class Reader &amp;lt; ActiveRecord::Base
  belongs_to :post
  belongs_to :person
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;post = Post.create
post.people &amp;lt;&amp;lt; Person.create
post.readers.size        # Returns 2, when 1 is expected.
post.reload.readers.size # Returns 1 as expected.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This happens because
ActiveRecord::Associations::HasManyThroughAssociation#insert_record
has an extraneous line that adds the same through record after
creating it.&lt;/p&gt;
&lt;p&gt;A patch with a failing test and the fix is attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-14T06:12:21+00:00</created-at>
      <creator-id type="integer">38998</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5968</number>
      <permalink>size-of-through-association-is-not-correct-after-adding-a-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord associations has_many through&quot;</tag>
      <title>Size of through association is not correct after adding a has_many association</title>
      <updated-at type="datetime">2010-11-14T06:12:25+00:00</updated-at>
      <user-id type="integer">38998</user-id>
      <version type="integer">1</version>
      <user-name>Jason Cheow</user-name>
      <creator-name>Jason Cheow</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5968</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [93c9f4a942c622ecbe8d46ab4838bd072aef9fc0]) Fix bug where size of through association is not correct after adding a has_many association (occurs only before main object has been reloaded).

[#5968 state:committed]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/93c9f4a942c622ecbe8d46ab4838bd072aef9fc0</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/93c9f4a942c622ecbe8d46ab4838bd072aef9fc0&quot;
title=
&quot;Changeset [93c9f4a942c622ecbe8d46ab4838bd072aef9fc0]&quot;&gt;[93c9f4a942c622ecbe8d46ab4838bd072aef9fc0]&lt;/a&gt;)
Fix bug where size of through association is not correct after
adding a has_many association (occurs only before main object has
been reloaded).&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5968&quot; title=
&quot;Ticket #5968&quot;&gt;#5968&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino
&lt;a&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/93c9f4a942c622ecbe8d46ab4838bd072aef9fc0&quot;&gt;
https://github.com/rails/rails/commit/93c9f4a942c622ecbe8d46ab4838b...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-14T17:37:03+00:00</created-at>
      <creator-id type="integer">38998</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5968</number>
      <permalink>size-of-through-association-is-not-correct-after-adding-a-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;activerecord associations has_many through&quot;</tag>
      <title>Size of through association is not correct after adding a has_many association</title>
      <updated-at type="datetime">2010-11-14T17:37:04+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Jason Cheow</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5968</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [f8b7c74f9b7b0e9b76c03953275d98378cb1d139]) Fix bug where size of through association is not correct after adding a has_many association (occurs only before main object has been reloaded).

[#5968 state:committed]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/f8b7c74f9b7b0e9b76c03953275d98378cb1d139</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/f8b7c74f9b7b0e9b76c03953275d98378cb1d139&quot;
title=
&quot;Changeset [f8b7c74f9b7b0e9b76c03953275d98378cb1d139]&quot;&gt;[f8b7c74f9b7b0e9b76c03953275d98378cb1d139]&lt;/a&gt;)
Fix bug where size of through association is not correct after
adding a has_many association (occurs only before main object has
been reloaded).&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5968&quot; title=
&quot;Ticket #5968&quot;&gt;#5968&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino &lt;a href=
&quot;mailto:santiago@wyeworks.com&quot;&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/f8b7c74f9b7b0e9b76c03953275d98378cb1d139&quot;&gt;
https://github.com/rails/rails/commit/f8b7c74f9b7b0e9b76c03953275d9...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-14T17:38:15+00:00</created-at>
      <creator-id type="integer">38998</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5968</number>
      <permalink>size-of-through-association-is-not-correct-after-adding-a-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;activerecord associations has_many through&quot;</tag>
      <title>Size of through association is not correct after adding a has_many association</title>
      <updated-at type="datetime">2010-11-14T17:38:16+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Jason Cheow</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5968</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5aa738e7570133eb771be78f269a5a52d67700b3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-14T06:12:22+00:00</created-at>
      <filename>fix_hmt_size_bug.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">769634</id>
      <size type="integer">1998</size>
      <uploader-id type="integer">38998</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/769634/fix_hmt_size_bug.diff</url>
    </attachment>
  </attachments>
</ticket>
