<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-04T08:50:58+01:00</created-at>
  <creator-id type="integer">25293</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">549</number>
  <permalink>fix-inflector-bug-on-pluralize-the-irregular-words</permalink>
  <priority type="integer">44</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2.1 activesupport patch</tag>
  <title>Fix inflector bug on pluralize the irregular words</title>
  <updated-at type="datetime">2010-10-12T08:28:57+01:00</updated-at>
  <user-id type="integer">117349</user-id>
  <version type="integer">5</version>
  <user-name>Cab Jones</user-name>
  <creator-name>Prem Sichanugrist (sikachu)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/549</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>There's one problem that I count it as a bug, but I don't know it should be counted as a bug or not.

Normally, when you use inflector 'pluralize' and 'singularize' methods, it would look something like this:

@@@ Ruby
puts &quot;bag&quot;.pluralize
#=&gt; &quot;bags&quot;
puts &quot;bags&quot;.singularize
#=&gt; &quot;bag&quot;
@@@

Now when it comes to pluralize the plural, it returns the same word again:

@@@ Ruby
puts &quot;bags&quot;.pluralize
#=&gt; &quot;bags&quot;
@@@

However, for the irregular word (i.e. person and people), when using the pluralize on the plural form, it gives a strange result:

@@@ Ruby
puts &quot;person&quot;.pluralize
#=&gt; &quot;people&quot;
puts &quot;people&quot;.singularize
#=&gt; &quot;person&quot;
puts &quot;people&quot;.pluralize
#=&gt; &quot;peoples&quot;
@@@

I don't think this is an expected behavior, since you would normally not putting 's' after the plural form of the word. :)</original-body>
  <latest-body>There's one problem that I count it as a bug, but I don't know it should be counted as a bug or not.

Normally, when you use inflector 'pluralize' and 'singularize' methods, it would look something like this:

@@@ Ruby
puts &quot;bag&quot;.pluralize
#=&gt; &quot;bags&quot;
puts &quot;bags&quot;.singularize
#=&gt; &quot;bag&quot;
@@@

Now when it comes to pluralize the plural, it returns the same word again:

@@@ Ruby
puts &quot;bags&quot;.pluralize
#=&gt; &quot;bags&quot;
@@@

However, for the irregular word (i.e. person and people), when using the pluralize on the plural form, it gives a strange result:

@@@ Ruby
puts &quot;person&quot;.pluralize
#=&gt; &quot;people&quot;
puts &quot;people&quot;.singularize
#=&gt; &quot;person&quot;
puts &quot;people&quot;.pluralize
#=&gt; &quot;peoples&quot;
@@@

I don't think this is an expected behavior, since you would normally not putting 's' after the plural form of the word. :)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
There's one problem that I count it as a bug, but I don't know it should be counted as a bug or not.
&lt;/p&gt;&lt;p&gt;
Normally, when you use inflector 'pluralize' and 'singularize' methods, it would look something like this:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Ruby&quot;&gt;puts &amp;quot;bag&amp;quot;.pluralize
#=&amp;gt; &amp;quot;bags&amp;quot;
puts &amp;quot;bags&amp;quot;.singularize
#=&amp;gt; &amp;quot;bag&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Now when it comes to pluralize the plural, it returns the same word again:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Ruby&quot;&gt;puts &amp;quot;bags&amp;quot;.pluralize
#=&amp;gt; &amp;quot;bags&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
However, for the irregular word (i.e. person and people), when using the pluralize on the plural form, it gives a strange result:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Ruby&quot;&gt;puts &amp;quot;person&amp;quot;.pluralize
#=&amp;gt; &amp;quot;people&amp;quot;
puts &amp;quot;people&amp;quot;.singularize
#=&amp;gt; &amp;quot;person&amp;quot;
puts &amp;quot;people&amp;quot;.pluralize
#=&amp;gt; &amp;quot;peoples&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I don't think this is an expected behavior, since you would normally not putting 's' after the plural form of the word. :)
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There's one problem that I count it as a bug, but I don't know it should be counted as a bug or not.

Normally, when you use inflector 'pluralize' and 'singularize' methods, it would look something like this:

@@@ ruby
puts &quot;bag&quot;.pluralize
#=&gt; &quot;bags&quot;
puts &quot;bags&quot;.singularize
#=&gt; &quot;bag&quot;
@@@

Now when it comes to pluralize the plural, it returns the same word again:

@@@ ruby
puts &quot;bags&quot;.pluralize
#=&gt; &quot;bags&quot;
@@@

However, for the irregular word (i.e. person and people), when using the pluralize on the plural form, it gives a strange result:

@@@ ruby
puts &quot;person&quot;.pluralize
#=&gt; &quot;people&quot;
puts &quot;people&quot;.singularize
#=&gt; &quot;person&quot;
puts &quot;people&quot;.pluralize
#=&gt; &quot;peoples&quot;
@@@

I don't think this is an expected behavior, since you would normally not putting 's' after the plural form of the word. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
There's one problem that I count it as a bug, but I don't know it should be counted as a bug or not.
&lt;/p&gt;&lt;p&gt;
Normally, when you use inflector 'pluralize' and 'singularize' methods, it would look something like this:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;puts &amp;quot;bag&amp;quot;.pluralize
#=&amp;gt; &amp;quot;bags&amp;quot;
puts &amp;quot;bags&amp;quot;.singularize
#=&amp;gt; &amp;quot;bag&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Now when it comes to pluralize the plural, it returns the same word again:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;puts &amp;quot;bags&amp;quot;.pluralize
#=&amp;gt; &amp;quot;bags&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
However, for the irregular word (i.e. person and people), when using the pluralize on the plural form, it gives a strange result:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;puts &amp;quot;person&amp;quot;.pluralize
#=&amp;gt; &amp;quot;people&amp;quot;
puts &amp;quot;people&amp;quot;.singularize
#=&amp;gt; &amp;quot;person&amp;quot;
puts &amp;quot;people&amp;quot;.pluralize
#=&amp;gt; &amp;quot;peoples&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I don't think this is an expected behavior, since you would normally not putting 's' after the plural form of the word. :)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-04T08:52:20+01:00</created-at>
      <creator-id type="integer">25293</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">549</number>
      <permalink>fix-inflector-bug-on-pluralize-the-irregular-words</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activesupport patch</tag>
      <title>Fix inflector bug on pluralize the irregular words</title>
      <updated-at type="datetime">2008-07-04T08:52:20+01:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">1</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Prem Sichanugrist (sikachu)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/549</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Nice!
+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Nice!
&lt;/p&gt;&lt;p&gt;
+1
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-07T15:42:08+01:00</created-at>
      <creator-id type="integer">25293</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">549</number>
      <permalink>fix-inflector-bug-on-pluralize-the-irregular-words</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activesupport patch</tag>
      <title>Fix inflector bug on pluralize the irregular words</title>
      <updated-at type="datetime">2008-07-07T15:42:08+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Prem Sichanugrist (sikachu)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/549</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-28T16:23:22+00:00</created-at>
      <creator-id type="integer">25293</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">549</number>
      <permalink>fix-inflector-bug-on-pluralize-the-irregular-words</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.1 activesupport patch</tag>
      <title>Fix inflector bug on pluralize the irregular words</title>
      <updated-at type="datetime">2008-10-28T16:23:27+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Prem Sichanugrist (sikachu)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/549</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>To make it clear, as the patch become stalled now.

I focus this patched only for the irregular plurals, which defined in Rails only. For example, if Rails already defined plural of person as 'people', when you call 'people'.pluralize, it shouldn't become 'peoples'.

Just wonder why there's no enough people to support this ..</body>
      <body-html>&lt;div&gt;&lt;p&gt;To make it clear, as the patch become stalled now.&lt;/p&gt;
&lt;p&gt;I focus this patched only for the irregular plurals, which
defined in Rails only. For example, if Rails already defined plural
of person as 'people', when you call 'people'.pluralize, it
shouldn't become 'peoples'.&lt;/p&gt;
&lt;p&gt;Just wonder why there's no enough people to support this ..&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-28T17:33:30+00:00</created-at>
      <creator-id type="integer">25293</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">549</number>
      <permalink>fix-inflector-bug-on-pluralize-the-irregular-words</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.1 activesupport patch</tag>
      <title>Fix inflector bug on pluralize the irregular words</title>
      <updated-at type="datetime">2008-10-28T17:33:36+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">4</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Prem Sichanugrist (sikachu)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/549</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The plural of person is ambiguous, people may be the best choice.  But people can be construed as singular with the plural peoples.  If the plural of people is requested, it is not wrong to presume that people is being construed as singular.  Here is a relevant article: http://www.worldwidewords.org/articles/people.htm</body>
      <body-html>&lt;div&gt;&lt;p&gt;The plural of person is ambiguous, people may be the best
choice. But people can be construed as singular with the plural
peoples. If the plural of people is requested, it is not wrong to
presume that people is being construed as singular. Here is a
relevant article: &lt;a href=
&quot;http://www.worldwidewords.org/articles/people.htm&quot;&gt;http://www.worldwidewords.org/articles/people.htm&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-12T08:28:53+01:00</created-at>
      <creator-id type="integer">25293</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">549</number>
      <permalink>fix-inflector-bug-on-pluralize-the-irregular-words</permalink>
      <priority type="integer">44</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.1 activesupport patch</tag>
      <title>Fix inflector bug on pluralize the irregular words</title>
      <updated-at type="datetime">2010-10-12T08:28:57+01:00</updated-at>
      <user-id type="integer">117349</user-id>
      <version type="integer">5</version>
      <user-name>Cab Jones</user-name>
      <creator-name>Prem Sichanugrist (sikachu)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/549</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c5e899104131821b26c90f60fb391f5f95cd3764</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-04T08:50:58+01:00</created-at>
      <filename>fix_inflector_bug_on_pluralize.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">30892</id>
      <size type="integer">2700</size>
      <uploader-id type="integer">25293</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/30892/fix_inflector_bug_on_pluralize.diff</url>
    </attachment>
  </attachments>
</ticket>
