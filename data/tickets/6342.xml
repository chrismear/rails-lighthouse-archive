<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-29T13:24:12+00:00</created-at>
  <creator-id type="integer">134283</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6342</number>
  <permalink>activerecordbaseexists-returns-true-when-called-with-nil</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>ActiveRecord::Base#exists? returns true when called with nil</title>
  <updated-at type="datetime">2011-01-29T13:24:50+00:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Cathal O' Riordan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6342</url>
  <priority-name>Low</priority-name>
  <original-body>Given the following models,

@@@ ruby

class Department &lt; ActiveRecord::Base
  
  has_many :employees
  
end

class Employee &lt; ActiveRecord::Base

  belongs_to :department

end

@@@

when determining if an employee belongs to a department using exists?, the following call will return true,

@@@ ruby

  dept = Department.first

  dept.employees.exists?(nil)

  ...

  =&gt; true

@@@

And according to the documentation,

@@@ text

Returns true if a record exists in the table that matches the id or conditions given, or false otherwise.

@@@

I'd assume in the example above, false should be returned if nil is passed.




tested this against Rails v3.0.3 and ruby 1.9.2.</original-body>
  <latest-body>Given the following models,

@@@ ruby

class Department &lt; ActiveRecord::Base
  
  has_many :employees
  
end

class Employee &lt; ActiveRecord::Base

  belongs_to :department

end

@@@

when determining if an employee belongs to a department using exists?, the following call will return true,

@@@ ruby

  dept = Department.first

  dept.employees.exists?(nil)

  ...

  =&gt; true

@@@

And according to the documentation,

@@@ text

Returns true if a record exists in the table that matches the id or conditions given, or false otherwise.

@@@

I'd assume in the example above, false should be returned if nil is passed.




tested this against Rails v3.0.3 and ruby 1.9.2.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given the following models,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class Department &amp;lt; ActiveRecord::Base
  
  has_many :employees
  
end

class Employee &amp;lt; ActiveRecord::Base

  belongs_to :department

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;when determining if an employee belongs to a department using
exists?, the following call will return true,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
  dept = Department.first

  dept.employees.exists?(nil)

  ...

  =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And according to the documentation,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;text&quot;&gt;
Returns true if a record exists in the table that matches the id or conditions given, or false otherwise.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'd assume in the example above, false should be returned if nil
is passed.&lt;/p&gt;
&lt;p&gt;tested this against Rails v3.0.3 and ruby 1.9.2.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given the following models,

@@@ ruby

class Department &lt; ActiveRecord::Base
  
  has_many :employees
  
end

class Employee &lt; ActiveRecord::Base

  belongs_to :department

end

@@@

when determining if an employee belongs to a department using exists?, the following call will return true,

@@@ ruby

  dept = Department.first

  dept.employees.exists?(nil)

  ...

  =&gt; true

@@@

And according to the documentation,

@@@ text

Returns true if a record exists in the table that matches the id or conditions given, or false otherwise.

@@@

I'd assume in the example above, false should be returned if nil is passed.




tested this against Rails v3.0.3 and ruby 1.9.2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given the following models,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class Department &amp;lt; ActiveRecord::Base
  
  has_many :employees
  
end

class Employee &amp;lt; ActiveRecord::Base

  belongs_to :department

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;when determining if an employee belongs to a department using
exists?, the following call will return true,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
  dept = Department.first

  dept.employees.exists?(nil)

  ...

  =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And according to the documentation,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;text&quot;&gt;
Returns true if a record exists in the table that matches the id or conditions given, or false otherwise.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'd assume in the example above, false should be returned if nil
is passed.&lt;/p&gt;
&lt;p&gt;tested this against Rails v3.0.3 and ruby 1.9.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T12:54:25+00:00</created-at>
      <creator-id type="integer">134283</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6342</number>
      <permalink>activerecordbaseexists-returns-true-when-called-with-nil</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base#exists? returns true when called with nil</title>
      <updated-at type="datetime">2011-01-27T12:54:31+00:00</updated-at>
      <user-id type="integer">134283</user-id>
      <version type="integer">1</version>
      <user-name>Cathal O' Riordan</user-name>
      <creator-name>Cathal O' Riordan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6342</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think that in this case ActiveRecord interpret this question like
&lt;code&gt;
dept.employees.count &gt; 0
&lt;/code&gt;
So in a way the question &quot;exists?&quot; is translates to &quot;at least one (without conditions) exists?&quot;

The behaviour you whant can be achieved with
&lt;code&gt;
dept.employees.exists?(:id =&gt; nil)
&lt;/code&gt;
And in this case the question &quot;exists?&quot; is translates to &quot;at least one (without id) exists?&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think that in this case ActiveRecord interpret this question
like&lt;br&gt;
&lt;code&gt;&lt;br&gt;
dept.employees.count &amp;gt; 0&lt;br&gt;&lt;/code&gt;&lt;br&gt;
So in a way the question &quot;exists?&quot; is translates to &quot;at least one
(without conditions) exists?&quot;&lt;/p&gt;
&lt;p&gt;The behaviour you whant can be achieved with&lt;br&gt;
&lt;code&gt;&lt;br&gt;
dept.employees.exists?(:id =&amp;gt; nil)&lt;br&gt;&lt;/code&gt;&lt;br&gt;
And in this case the question &quot;exists?&quot; is translates to &quot;at least
one (without id) exists?&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T15:08:12+00:00</created-at>
      <creator-id type="integer">134283</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6342</number>
      <permalink>activerecordbaseexists-returns-true-when-called-with-nil</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base#exists? returns true when called with nil</title>
      <updated-at type="datetime">2011-01-27T15:08:17+00:00</updated-at>
      <user-id type="integer">103670</user-id>
      <version type="integer">2</version>
      <user-name>Franco Catena</user-name>
      <creator-name>Cathal O' Riordan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6342</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think Franco is right here. In fact the default argument for id is &lt;code&gt;nil&lt;/code&gt; &amp;mdash; https://github.com/rails/rails/blob/master/activerecord/lib/active_record/relation/finder_methods.rb#L171 hence it works exactly as Franco has explained. I'm closing the ticket but if you still feel there is a discrepancy leave a comment and I'll reopen.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think Franco is right here. In fact the default argument for
id is &lt;code&gt;nil&lt;/code&gt; &amp;mdash; &lt;a href=
&quot;https://github.com/rails/rails/blob/master/activerecord/lib/active_record/relation/finder_methods.rb#L171&quot;&gt;
https://github.com/rails/rails/blob/master/activerecord/lib/active_...&lt;/a&gt;
hence it works exactly as Franco has explained. I'm closing the
ticket but if you still feel there is a discrepancy leave a comment
and I'll reopen.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-29T13:24:12+00:00</created-at>
      <creator-id type="integer">134283</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6342</number>
      <permalink>activerecordbaseexists-returns-true-when-called-with-nil</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>ActiveRecord::Base#exists? returns true when called with nil</title>
      <updated-at type="datetime">2011-01-29T13:24:49+00:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Cathal O' Riordan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6342</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
