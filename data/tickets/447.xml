<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:22+00:00</created-at>
  <creator-id type="integer">23834</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">447</number>
  <permalink>2-1-0-has_many-associations-broken</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.1 activerecord bug edge has_many patch tested</tag>
  <title>2.1.0 has_many associations broken</title>
  <updated-at type="datetime">2011-02-17T06:48:22+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">8</version>
  <user-name>Pratik</user-name>
  <creator-name>Pavel Golubeff</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi there. 

After installing 2.1.0 rails gem i experience problem with has_many associations.

It's impossible to change object owner, if it has one already.
For example: 

user1 = User.create
&gt;&gt; #&lt;User id: 1&gt;
user2 = User.create
&gt;&gt; #&lt;User id: 2&gt;

char = Character.create( :user =&gt; user1 )
&gt;&gt; #&lt;Character id:1, :user_id =&gt; 1&gt;
user2.characters &lt;&lt; char
char.user_id
&gt;&gt; 1

As far as i'm concirned, breaking code is situated in active_record/associations.rb, line 898, where belongs_to_before_save_for_#{reflection.name} is defined.

association is taken from char.instance_variable_get(&quot;@user&quot;) and in case it is defined, it executes char[:user_id] = @user.id.

Commenting this line make everyone happy, but i'm not sure, if it's a good idea:

# self[&quot;#{reflection.primary_key_name}&quot;] = association.id</original-body>
  <latest-body>Hi there. 

After installing 2.1.0 rails gem i experience problem with has_many associations.

It's impossible to change object owner, if it has one already.
For example: 

user1 = User.create
&gt;&gt; #&lt;User id: 1&gt;
user2 = User.create
&gt;&gt; #&lt;User id: 2&gt;

char = Character.create( :user =&gt; user1 )
&gt;&gt; #&lt;Character id:1, :user_id =&gt; 1&gt;
user2.characters &lt;&lt; char
char.user_id
&gt;&gt; 1

As far as i'm concirned, breaking code is situated in active_record/associations.rb, line 898, where belongs_to_before_save_for_#{reflection.name} is defined.

association is taken from char.instance_variable_get(&quot;@user&quot;) and in case it is defined, it executes char[:user_id] = @user.id.

Commenting this line make everyone happy, but i'm not sure, if it's a good idea:

# self[&quot;#{reflection.primary_key_name}&quot;] = association.id</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Hi there.
&lt;/p&gt;&lt;p&gt;
After installing 2.1.0 rails gem i experience problem with has_many associations.
&lt;/p&gt;&lt;p&gt;
It's impossible to change object owner, if it has one already.
&lt;/p&gt;&lt;p&gt;
For example:
&lt;/p&gt;&lt;p&gt;
user1 = User.create
&lt;/p&gt;&lt;p&gt;
&gt;&gt; #
&lt;/p&gt;&lt;p&gt;
user2 = User.create
&lt;/p&gt;&lt;p&gt;
&gt;&gt; #
&lt;/p&gt;&lt;p&gt;
char = Character.create( :user =&gt; user1 )
&lt;/p&gt;&lt;p&gt;
&gt;&gt; # 1&gt;
&lt;/p&gt;&lt;p&gt;
user2.characters &amp;lt;&amp;lt; char
&lt;/p&gt;&lt;p&gt;
char.user_id
&lt;/p&gt;&lt;p&gt;
&gt;&gt; 1
&lt;/p&gt;&lt;p&gt;
As far as i'm concirned, breaking code is situated in active_record/associations.rb, line 898, where belongs_to_before_save_for_#{reflection.name} is defined.
&lt;/p&gt;&lt;p&gt;
association is taken from char.instance_variable_get(&quot;@user&quot;) and in case it is defined, it executes char[:user_id] = @user.id.
&lt;/p&gt;&lt;p&gt;
Commenting this line make everyone happy, but i'm not sure, if it's a good idea:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
self[&quot;#{reflection.primary_key_name}&quot;] = association.id
&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I don't like the solution to reload. Why not just set the instance var where AR updates the foreign key ?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't like the solution to reload. Why not just set the
instance var where AR updates the foreign key ?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-21T18:51:08+01:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2008-10-23T16:27:58+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">1</version>
      <user-name>Pratik</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There's a patch, i've made.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There's a patch, i've made.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-20T15:06:30+01:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2008-10-23T16:23:22+01:00</updated-at>
      <user-id type="integer">23834</user-id>
      <version type="integer">2</version>
      <user-name>Pavel Golubeff</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-20T15:13:20+01:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2008-10-23T16:24:44+01:00</updated-at>
      <user-id type="integer">23834</user-id>
      <version type="integer">3</version>
      <user-name>Pavel Golubeff</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I attached a simple example illustrating the problem.
There are two models Post and Comment, and a test case, prooving a bug.

Actually the problem occurs, because &lt;&lt; does not call reload on associated object and does not get changed owner. So, in my perception, if &lt;&lt; reload object, everything would be fine.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I attached a simple example illustrating the problem. There are
two models Post and Comment, and a test case, prooving a bug.&lt;/p&gt;
&lt;p&gt;Actually the problem occurs, because &amp;lt;&amp;lt; does not call
reload on associated object and does not get changed owner. So, in
my perception, if &amp;lt;&amp;lt; reload object, everything would be
fine.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-19T10:03:43+01:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2008-10-23T16:24:52+01:00</updated-at>
      <user-id type="integer">23834</user-id>
      <version type="integer">4</version>
      <user-name>Pavel Golubeff</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've got an addition. The problem occurs only in test environment.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've got an addition. The problem occurs only in test environment.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-19T09:13:20+01:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2008-06-19T09:13:20+01:00</updated-at>
      <user-id type="integer">23834</user-id>
      <version type="integer">5</version>
      <user-name>Pavel Golubeff</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi there. 

After installing 2.1.0 rails gem i experience problem with has_many associations.

It's impossible to change object owner, if it has one already.
For example: 

user1 = User.create
&gt;&gt; #&amp;lt;User id: 1&gt;
user2 = User.create
&gt;&gt; #&amp;lt;User id: 2&gt;

char = Character.create( :user =&gt; user1 )
&gt;&gt; #&amp;lt;Character id:1, :user_id =&gt; 1&gt;
user2.characters &amp;lt;&amp;lt; char
char.user_id
&gt;&gt; 1

As far as i'm concirned, breaking code is situated in active_record/associations.rb, line 898, where belongs_to_before_save_for_#{reflection.name} is defined.

association is taken from char.instance_variable_get(&quot;@user&quot;) and in case it is defined, it executes char[:user_id] = @user.id.

Commenting this line make everyone happy, but i'm not sure, if it's a good idea:

# self[&quot;#{reflection.primary_key_name}&quot;] = association.id</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Hi there.
&lt;/p&gt;&lt;p&gt;
After installing 2.1.0 rails gem i experience problem with has_many associations.
&lt;/p&gt;&lt;p&gt;
It's impossible to change object owner, if it has one already.
&lt;/p&gt;&lt;p&gt;
For example:
&lt;/p&gt;&lt;p&gt;
user1 = User.create
&lt;/p&gt;&lt;p&gt;
&gt;&gt; #&amp;lt;User id: 1&gt;
&lt;/p&gt;&lt;p&gt;
user2 = User.create
&lt;/p&gt;&lt;p&gt;
&gt;&gt; #&amp;lt;User id: 2&gt;
&lt;/p&gt;&lt;p&gt;
char = Character.create( :user =&gt; user1 )
&lt;/p&gt;&lt;p&gt;
&gt;&gt; #&amp;lt;Character id:1, :user_id =&gt; 1&gt;
&lt;/p&gt;&lt;p&gt;
user2.characters &amp;lt;&amp;lt; char
&lt;/p&gt;&lt;p&gt;
char.user_id
&lt;/p&gt;&lt;p&gt;
&gt;&gt; 1
&lt;/p&gt;&lt;p&gt;
As far as i'm concirned, breaking code is situated in active_record/associations.rb, line 898, where belongs_to_before_save_for_#{reflection.name} is defined.
&lt;/p&gt;&lt;p&gt;
association is taken from char.instance_variable_get(&quot;@user&quot;) and in case it is defined, it executes char[:user_id] = @user.id.
&lt;/p&gt;&lt;p&gt;
Commenting this line make everyone happy, but i'm not sure, if it's a good idea:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
self[&quot;#{reflection.primary_key_name}&quot;] = association.id
&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-18T19:41:08+01:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2008-06-18T19:41:08+01:00</updated-at>
      <user-id type="integer">23834</user-id>
      <version type="integer">6</version>
      <user-name>Pavel Golubeff</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-22T08:53:30+00:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.1 activerecord bug edge has_many patch tested</tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2010-01-22T08:53:31+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">7</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-22T10:28:05+00:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.1 activerecord bug edge has_many patch tested</tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2010-01-22T10:28:09+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">8</version>
      <user-name>Pratik</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:42:58+00:00</created-at>
      <creator-id type="integer">23834</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">447</number>
      <permalink>2-1-0-has_many-associations-broken</permalink>
      <priority type="integer">19028</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.1 activerecord bug edge has_many patch tested</tag>
      <title>2.1.0 has_many associations broken</title>
      <updated-at type="datetime">2011-02-17T06:48:22+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">9</version>
      <user-name>gfh</user-name>
      <creator-name>Pavel Golubeff</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/447</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>8478c6469b2f78500f277e3c32dbf9959fbdd348</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2008-06-19T10:03:43+01:00</created-at>
      <filename>Archive.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">28249</id>
      <size type="integer">1706</size>
      <uploader-id type="integer">23834</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/28249/Archive.zip</url>
    </attachment>
    <attachment type="Attachment">
      <code>9936385423a42afec43438e5f2cc7bf3bf129445</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-20T15:06:30+01:00</created-at>
      <filename>patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">28557</id>
      <size type="integer">3649</size>
      <uploader-id type="integer">23834</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/28557/patch.diff</url>
    </attachment>
  </attachments>
</ticket>
