<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-02T05:16:52+00:00</created-at>
  <creator-id type="integer">8875</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1685</number>
  <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
  <priority type="integer">942</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord jdbc jruby tests</tag>
  <title>Add AR test-connections for JDBC via JRuby</title>
  <updated-at type="datetime">2009-01-26T03:10:35+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">7</version>
  <user-name>Repository</user-name>
  <creator-name>Stephen Bannasch</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is a patch for the AR tests that support running them in JRuby 
using jdbc connections.

A big part of the reason I'm working on this is to make it easier to 
test JRuby itself. 

For example while developing these tests I found that running them caused
JRuby to crash.  On Dec 30 2008 Charlie Nutter fixed a JRuby 
regression that caused these tests to crash. If I can make 
it easier to run these tests in JRuby we'll find and fix these 
problems faster.

Here's the JRuby crash I found running the jdbcmysql tests:

* http://jira.codehaus.org/browse/JRUBY-3270

The problem was related to hpricot using a deprecated and then 
deleted JRuby method that was part of it's implementation of fast_xs. 
AS uses fast_xs if it is present ...

* http://jira.codehaus.org/browse/JRUBY-3272

That's just the kind of confusing bug that will be quicker to uncover if it's 
easier to run these tests in JRuby.

I run the AR mysql jdbc tests like this:

`$ jruby -S rake test_jdbcmysql`

This patch may well still need some work. I'm going to see if I can get
Nick Sieger (recent activerecord-jdbc developer) to review them.

test status with trunk JRuby (r8541) and activerecord-jdbc v0.9

    jdbcmysql:      1807 tests, 6004 assertions, 20 failures, 1 errors
    jdbcpostgresql: 1812 tests, 1310 assertions, 4 failures, 1675 errors
    jdbcsqlite3:    1807 tests, 889 assertions, 15 failures, 1673 errors
    jdbch2:         1807 tests, 1809 assertions, 41 failures, 1361 errors
    jdbchsqldb:     1807 tests, 4181 assertions, 33 failures, 553 errors
    jdbcderby:      1812 tests, 759 assertions, 20 failures, 1765 errors

* jdbcderby test took over 10m to run

I'm using these gems for the test results above:

    $ jruby -S gem list --local activerecord-jdbc

    *** LOCAL GEMS ***

    activerecord-jdbc-adapter (0.9)
    activerecord-jdbcderby-adapter (0.9)
    activerecord-jdbch2-adapter (0.9)
    activerecord-jdbchsqldb-adapter (0.9)
    activerecord-jdbcmysql-adapter (0.9)
    activerecord-jdbcpostgresql-adapter (0.9)
    activerecord-jdbcsqlite3-adapter (0.9)</original-body>
  <latest-body>This is a patch for the AR tests that support running them in JRuby 
using jdbc connections.

A big part of the reason I'm working on this is to make it easier to 
test JRuby itself. 

For example while developing these tests I found that running them caused
JRuby to crash.  On Dec 30 2008 Charlie Nutter fixed a JRuby 
regression that caused these tests to crash. If I can make 
it easier to run these tests in JRuby we'll find and fix these 
problems faster.

Here's the JRuby crash I found running the jdbcmysql tests:

* http://jira.codehaus.org/browse/JRUBY-3270

The problem was related to hpricot using a deprecated and then 
deleted JRuby method that was part of it's implementation of fast_xs. 
AS uses fast_xs if it is present ...

* http://jira.codehaus.org/browse/JRUBY-3272

That's just the kind of confusing bug that will be quicker to uncover if it's 
easier to run these tests in JRuby.

I run the AR mysql jdbc tests like this:

`$ jruby -S rake test_jdbcmysql`

This patch may well still need some work. I'm going to see if I can get
Nick Sieger (recent activerecord-jdbc developer) to review them.

test status with trunk JRuby (r8541) and activerecord-jdbc v0.9

    jdbcmysql:      1807 tests, 6004 assertions, 20 failures, 1 errors
    jdbcpostgresql: 1812 tests, 1310 assertions, 4 failures, 1675 errors
    jdbcsqlite3:    1807 tests, 889 assertions, 15 failures, 1673 errors
    jdbch2:         1807 tests, 1809 assertions, 41 failures, 1361 errors
    jdbchsqldb:     1807 tests, 4181 assertions, 33 failures, 553 errors
    jdbcderby:      1812 tests, 759 assertions, 20 failures, 1765 errors

* jdbcderby test took over 10m to run

I'm using these gems for the test results above:

    $ jruby -S gem list --local activerecord-jdbc

    *** LOCAL GEMS ***

    activerecord-jdbc-adapter (0.9)
    activerecord-jdbcderby-adapter (0.9)
    activerecord-jdbch2-adapter (0.9)
    activerecord-jdbchsqldb-adapter (0.9)
    activerecord-jdbcmysql-adapter (0.9)
    activerecord-jdbcpostgresql-adapter (0.9)
    activerecord-jdbcsqlite3-adapter (0.9)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is a patch for the AR tests that support running them in
JRuby using jdbc connections.&lt;/p&gt;
&lt;p&gt;A big part of the reason I'm working on this is to make it
easier to test JRuby itself.&lt;/p&gt;
&lt;p&gt;For example while developing these tests I found that running
them caused JRuby to crash. On Dec 30 2008 Charlie Nutter fixed a
JRuby regression that caused these tests to crash. If I can make it
easier to run these tests in JRuby we'll find and fix these
problems faster.&lt;/p&gt;
&lt;p&gt;Here's the JRuby crash I found running the jdbcmysql tests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jira.codehaus.org/browse/JRUBY-3270&quot;&gt;http://jira.codehaus.org/browse/...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem was related to hpricot using a deprecated and then
deleted JRuby method that was part of it's implementation of
fast_xs. AS uses fast_xs if it is present ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jira.codehaus.org/browse/JRUBY-3272&quot;&gt;http://jira.codehaus.org/browse/...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's just the kind of confusing bug that will be quicker to
uncover if it's easier to run these tests in JRuby.&lt;/p&gt;
&lt;p&gt;I run the AR mysql jdbc tests like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ jruby -S rake test_jdbcmysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This patch may well still need some work. I'm going to see if I
can get Nick Sieger (recent activerecord-jdbc developer) to review
them.&lt;/p&gt;
&lt;p&gt;test status with trunk JRuby (r8541) and activerecord-jdbc
v0.9&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;jdbcmysql:      1807 tests, 6004 assertions, 20 failures, 1 errors
jdbcpostgresql: 1812 tests, 1310 assertions, 4 failures, 1675 errors
jdbcsqlite3:    1807 tests, 889 assertions, 15 failures, 1673 errors
jdbch2:         1807 tests, 1809 assertions, 41 failures, 1361 errors
jdbchsqldb:     1807 tests, 4181 assertions, 33 failures, 553 errors
jdbcderby:      1812 tests, 759 assertions, 20 failures, 1765 errors
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;jdbcderby test took over 10m to run&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm using these gems for the test results above:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ jruby -S gem list --local activerecord-jdbc

*** LOCAL GEMS ***

activerecord-jdbc-adapter (0.9)
activerecord-jdbcderby-adapter (0.9)
activerecord-jdbch2-adapter (0.9)
activerecord-jdbchsqldb-adapter (0.9)
activerecord-jdbcmysql-adapter (0.9)
activerecord-jdbcpostgresql-adapter (0.9)
activerecord-jdbcsqlite3-adapter (0.9)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a patch for the AR tests that support running them in JRuby 
using jdbc connections.

A big part of the reason I'm working on this is to make it easier to 
test JRuby itself. 

For example while developing these tests I found that running them caused
JRuby to crash.  On Dec 30 2008 Charlie Nutter fixed a JRuby 
regression that caused these tests to crash. If I can make 
it easier to run these tests in JRuby we'll find and fix these 
problems faster.

Here's the JRuby crash I found running the jdbcmysql tests:

* http://jira.codehaus.org/browse/JRUBY-3270

The problem was related to hpricot using a deprecated and then 
deleted JRuby method that was part of it's implementation of fast_xs. 
AS uses fast_xs if it is present ...

* http://jira.codehaus.org/browse/JRUBY-3272

That's just the kind of confusing bug that will be quicker to uncover if it's 
easier to run these tests in JRuby.

I run the AR mysql jdbc tests like this:

`$ jruby -S rake test_jdbcmysql`

This patch may well still need some work. I'm going to see if I can get
Nick Sieger (recent activerecord-jdbc developer) to review them.

test status with trunk JRuby (r8541) and activerecord-jdbc v0.9

    jdbcmysql:      1807 tests, 6004 assertions, 20 failures, 1 errors
    jdbcpostgresql: 1812 tests, 1310 assertions, 4 failures, 1675 errors
    jdbcsqlite3:    1807 tests, 889 assertions, 15 failures, 1673 errors
    jdbch2:         1807 tests, 1809 assertions, 41 failures, 1361 errors
    jdbchsqldb:     1807 tests, 4181 assertions, 33 failures, 553 errors
    jdbcderby:      1812 tests, 759 assertions, 20 failures, 1765 errors

* jdbcderby test took over 10m to run

I'm using these gems for the test results above:

    $ jruby -S gem list --local activerecord-jdbc

    *** LOCAL GEMS ***

    activerecord-jdbc-adapter (0.9)
    activerecord-jdbcderby-adapter (0.9)
    activerecord-jdbch2-adapter (0.9)
    activerecord-jdbchsqldb-adapter (0.9)
    activerecord-jdbcmysql-adapter (0.9)
    activerecord-jdbcpostgresql-adapter (0.9)
    activerecord-jdbcsqlite3-adapter (0.9)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a patch for the AR tests that support running them in
JRuby using jdbc connections.&lt;/p&gt;
&lt;p&gt;A big part of the reason I'm working on this is to make it
easier to test JRuby itself.&lt;/p&gt;
&lt;p&gt;For example while developing these tests I found that running
them caused JRuby to crash. On Dec 30 2008 Charlie Nutter fixed a
JRuby regression that caused these tests to crash. If I can make it
easier to run these tests in JRuby we'll find and fix these
problems faster.&lt;/p&gt;
&lt;p&gt;Here's the JRuby crash I found running the jdbcmysql tests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jira.codehaus.org/browse/JRUBY-3270&quot;&gt;http://jira.codehaus.org/browse/...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem was related to hpricot using a deprecated and then
deleted JRuby method that was part of it's implementation of
fast_xs. AS uses fast_xs if it is present ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jira.codehaus.org/browse/JRUBY-3272&quot;&gt;http://jira.codehaus.org/browse/...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's just the kind of confusing bug that will be quicker to
uncover if it's easier to run these tests in JRuby.&lt;/p&gt;
&lt;p&gt;I run the AR mysql jdbc tests like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ jruby -S rake test_jdbcmysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This patch may well still need some work. I'm going to see if I
can get Nick Sieger (recent activerecord-jdbc developer) to review
them.&lt;/p&gt;
&lt;p&gt;test status with trunk JRuby (r8541) and activerecord-jdbc
v0.9&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;jdbcmysql:      1807 tests, 6004 assertions, 20 failures, 1 errors
jdbcpostgresql: 1812 tests, 1310 assertions, 4 failures, 1675 errors
jdbcsqlite3:    1807 tests, 889 assertions, 15 failures, 1673 errors
jdbch2:         1807 tests, 1809 assertions, 41 failures, 1361 errors
jdbchsqldb:     1807 tests, 4181 assertions, 33 failures, 553 errors
jdbcderby:      1812 tests, 759 assertions, 20 failures, 1765 errors
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;jdbcderby test took over 10m to run&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm using these gems for the test results above:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ jruby -S gem list --local activerecord-jdbc

*** LOCAL GEMS ***

activerecord-jdbc-adapter (0.9)
activerecord-jdbcderby-adapter (0.9)
activerecord-jdbch2-adapter (0.9)
activerecord-jdbchsqldb-adapter (0.9)
activerecord-jdbcmysql-adapter (0.9)
activerecord-jdbcpostgresql-adapter (0.9)
activerecord-jdbcsqlite3-adapter (0.9)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T05:16:52+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1685</number>
      <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord jdbc jruby tests</tag>
      <title>Add AR test-connections for JDBC via JRuby</title>
      <updated-at type="datetime">2009-01-02T05:19:38+00:00</updated-at>
      <user-id type="integer">8875</user-id>
      <version type="integer">1</version>
      <user-name>Stephen Bannasch</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 from me, with this additional patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 from me, with this additional patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-06T21:05:00+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1685</number>
      <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord jdbc jruby tests</tag>
      <title>Add AR test-connections for JDBC via JRuby</title>
      <updated-at type="datetime">2009-01-06T21:05:02+00:00</updated-at>
      <user-id type="integer">17057</user-id>
      <version type="integer">2</version>
      <user-name>Nick Sieger</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I rebased to master and updated my patch to include Nick Sieger's changes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I rebased to master and updated my patch to include Nick
Sieger's changes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-07T02:54:20+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1685</number>
      <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord jdbc jruby tests</tag>
      <title>Add AR test-connections for JDBC via JRuby</title>
      <updated-at type="datetime">2009-01-07T02:54:24+00:00</updated-at>
      <user-id type="integer">8875</user-id>
      <version type="integer">3</version>
      <user-name>Stephen Bannasch</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>+1.  It is nice to run unit tests without applying a patch first.</body>
      <body-html>&lt;div&gt;&lt;ol&gt;
&lt;li&gt;It is nice to run unit tests without applying a patch
first.&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-23T16:34:56+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1685</number>
      <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord jdbc jruby tests</tag>
      <title>Add AR test-connections for JDBC via JRuby</title>
      <updated-at type="datetime">2009-01-23T16:34:59+00:00</updated-at>
      <user-id type="integer">23333</user-id>
      <version type="integer">4</version>
      <user-name>enebo</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>+1. I've been using this on an experimental version of the Rails CI server to test against JRuby.</body>
      <body-html>&lt;div&gt;&lt;ol&gt;
&lt;li&gt;I've been using this on an experimental version of the Rails CI
server to test against JRuby.&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-23T16:53:36+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1685</number>
      <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord jdbc jruby tests</tag>
      <title>Add AR test-connections for JDBC via JRuby</title>
      <updated-at type="datetime">2009-01-23T16:53:41+00:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">5</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [b081059913403d626ee1572dec4115aed2048912]) Adding AR tests for JDBC connections

New connections:

  jdbcmysql jdbcpostgresql jdbcsqlite3 jdbcderby jdbch2 jdbchsqldb jdbcpostgresql

To test you will need the native database installed (if one is required),
activerecord-jdbc-adapter and the specific activerecord-jdbc&lt;database&gt;-adapter
for the database you are testing.

Run the tests like this:

  jruby -S rake test_jdbcmysql

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1685 state:committed]
http://github.com/rails/rails/commit/b081059913403d626ee1572dec4115aed2048912</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [b081059913403d626ee1572dec4115aed2048912]) Adding AR
tests for JDBC connections&lt;/p&gt;
&lt;p&gt;New connections:&lt;/p&gt;
&lt;p&gt;jdbcmysql jdbcpostgresql jdbcsqlite3 jdbcderby jdbch2 jdbchsqldb
jdbcpostgresql&lt;/p&gt;
&lt;p&gt;To test you will need the native database installed (if one is
required), activerecord-jdbc-adapter and the specific
activerecord-jdbc-adapter for the database you are testing.&lt;/p&gt;
&lt;p&gt;Run the tests like this:&lt;/p&gt;
&lt;p&gt;jruby -S rake test_jdbcmysql&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1685&quot; title=&quot;Ticket #1685&quot;&gt;#1685&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/b081059913403d626ee1572dec4115aed2048912&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-26T03:10:34+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1685</number>
      <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord jdbc jruby tests</tag>
      <title>Add AR test-connections for JDBC via JRuby</title>
      <updated-at type="datetime">2009-01-26T03:10:35+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [4ef9845aa324679b88e19b8223dd90b774215bc6]) Adding AR tests for JDBC connections

New connections:

  jdbcmysql jdbcpostgresql jdbcsqlite3 jdbcderby jdbch2 jdbchsqldb jdbcpostgresql

To test you will need the native database installed (if one is required),
activerecord-jdbc-adapter and the specific activerecord-jdbc&lt;database&gt;-adapter
for the database you are testing.

Run the tests like this:

  jruby -S rake test_jdbcmysql

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1685 state:committed]
http://github.com/rails/rails/commit/4ef9845aa324679b88e19b8223dd90b774215bc6</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [4ef9845aa324679b88e19b8223dd90b774215bc6]) Adding AR
tests for JDBC connections&lt;/p&gt;
&lt;p&gt;New connections:&lt;/p&gt;
&lt;p&gt;jdbcmysql jdbcpostgresql jdbcsqlite3 jdbcderby jdbch2 jdbchsqldb
jdbcpostgresql&lt;/p&gt;
&lt;p&gt;To test you will need the native database installed (if one is
required), activerecord-jdbc-adapter and the specific
activerecord-jdbc-adapter for the database you are testing.&lt;/p&gt;
&lt;p&gt;Run the tests like this:&lt;/p&gt;
&lt;p&gt;jruby -S rake test_jdbcmysql&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1685&quot; title=&quot;Ticket #1685&quot;&gt;#1685&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/4ef9845aa324679b88e19b8223dd90b774215bc6&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-26T03:10:34+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1685</number>
      <permalink>adding-ar-test-connections-for-jdbc-via-jruby</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord jdbc jruby tests</tag>
      <title>Add AR test-connections for JDBC via JRuby</title>
      <updated-at type="datetime">2009-01-26T03:10:35+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1685</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d63614d8aa57e88f8ee777cad3f850e46ad89fa5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-02T05:16:52+00:00</created-at>
      <filename>0001-Adding-AR-tests-for-JDBC-connections.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74866</id>
      <size type="integer">8460</size>
      <uploader-id type="integer">8875</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74866/0001-Adding-AR-tests-for-JDBC-connections.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>71c9724a47d780618e0805619c05d2435c321da7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-06T21:05:00+00:00</created-at>
      <filename>0002-Use-current-user-for-postgresql.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">75876</id>
      <size type="integer">1096</size>
      <uploader-id type="integer">17057</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/75876/0002-Use-current-user-for-postgresql.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>0805a841d8ff3bf8a8756b463da4e64df298dca3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-07T02:54:21+00:00</created-at>
      <filename>0001-Adding-AR-tests-for-JDBC-connections.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">75955</id>
      <size type="integer">8490</size>
      <uploader-id type="integer">8875</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/75955/0001-Adding-AR-tests-for-JDBC-connections.patch</url>
    </attachment>
  </attachments>
</ticket>
