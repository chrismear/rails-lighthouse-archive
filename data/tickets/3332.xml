<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:59:38+01:00</created-at>
  <creator-id type="integer">3117</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3332</number>
  <permalink>add-optionsprocs-to-to_json</permalink>
  <priority type="integer">157754</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>proc to_json</tag>
  <title>Add options[:procs] to to_json</title>
  <updated-at type="datetime">2010-10-15T04:35:09+01:00</updated-at>
  <user-id type="integer">1075</user-id>
  <version type="integer">15</version>
  <user-name>Claudio Poli</user-name>
  <creator-name>Bart Zonneveld</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
  <priority-name nil="true"></priority-name>
  <original-body>The interfaces of to_xml and to_json differ a lot, and could use some sweet lovin' :).
It would be a great help if options[:procs] was added to to_json.

I haven't dugg into ActiveModel::Serialization, if someone has some pointers about where to start, I can whip up a patch.</original-body>
  <latest-body>The interfaces of to_xml and to_json differ a lot, and could use some sweet lovin' :).
It would be a great help if options[:procs] was added to to_json.

I haven't dugg into ActiveModel::Serialization, if someone has some pointers about where to start, I can whip up a patch.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The interfaces of to_xml and to_json differ a lot, and could use
some sweet lovin' :).&lt;br&gt;
It would be a great help if options[:procs] was added to
to_json.&lt;/p&gt;
&lt;p&gt;I haven't dugg into ActiveModel::Serialization, if someone has
some pointers about where to start, I can whip up a patch.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The interfaces of to_xml and to_json differ a lot, and could use some sweet lovin' :).
It would be a great help if options[:procs] was added to to_json.

I haven't dugg into ActiveModel::Serialization, if someone has some pointers about where to start, I can whip up a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The interfaces of to_xml and to_json differ a lot, and could use
some sweet lovin' :).&lt;br&gt;
It would be a great help if options[:procs] was added to
to_json.&lt;/p&gt;
&lt;p&gt;I haven't dugg into ActiveModel::Serialization, if someone has
some pointers about where to start, I can whip up a patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-05T11:01:05+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2009-10-05T11:23:23+01:00</updated-at>
      <user-id type="integer">3117</user-id>
      <version type="integer">1</version>
      <user-name>Bart Zonneveld</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I would love to see this aswell.

I can try aswell to build a patch for this, ideas?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would love to see this aswell.&lt;/p&gt;
&lt;p&gt;I can try aswell to build a patch for this, ideas?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-01T11:21:21+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-01T11:21:26+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">2</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T22:10:22+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-08T22:10:26+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ops, marked as stale by mistake. What are the functionality you are trying to achieve here guys?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ops, marked as stale by mistake. What are the functionality you
are trying to achieve here guys?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T22:11:16+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-08T22:11:18+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">4</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think the common use case is building an API for your web app that supports output in either xml or json. Ideally, you could use the same types of options both to_json and to_xml. As it is today, to_json is underpowered compared to to_xml.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think the common use case is building an API for your web app
that supports output in either xml or json. Ideally, you could use
the same types of options both to_json and to_xml. As it is today,
to_json is underpowered compared to to_xml.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T22:18:17+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-08T22:18:19+01:00</updated-at>
      <user-id type="integer">17150</user-id>
      <version type="integer">5</version>
      <user-name>Luke Melia</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Luke, it sounds good, but each option needs to be analyzed by itself. For example, at first it seems it does not make sense to support options[:procs] for JSON since, in the XML case, it yields the builder object which does not exist for JSON. But I believe other options may be welcome.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Luke, it sounds good, but each option needs to be analyzed by
itself. For example, at first it seems it does not make sense to
support options[:procs] for JSON since, in the XML case, it yields
the builder object which does not exist for JSON. But I believe
other options may be welcome.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T22:25:47+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-08T22:25:49+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">6</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Agreed, Jose. When I ran into this problem, I initially set out to unify the interfaces, but quickly saw that the internals are so different that it was not an easy course to chart. Instead, I wrote adapter classes for my models that handled the xml/json rendering cleanly. Looking back, my code is cleaner than it would have been if to_xml and to_json worked as I wished they did.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Agreed, Jose. When I ran into this problem, I initially set out
to unify the interfaces, but quickly saw that the internals are so
different that it was not an easy course to chart. Instead, I wrote
adapter classes for my models that handled the xml/json rendering
cleanly. Looking back, my code is cleaner than it would have been
if to_xml and to_json worked as I wished they did.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T22:28:44+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-08T22:28:47+01:00</updated-at>
      <user-id type="integer">17150</user-id>
      <version type="integer">7</version>
      <user-name>Luke Melia</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is my opinion. I did a little research on serialization :).
When you do 
User.first.to_xml(:procs =&gt; [Proc.new{|options|}])
OR
User.first.to_xml(:procs =&gt; [Proc.new{|options, serializable|}])
You can access Builder which  options[:builder] constructs xml through and serializable model.
rails/activemodel/lib/active_model/serializers/xml.rb line 100
&lt;code&gt;
          @builder.tag!(*args) do
            add_attributes_and_methods
            add_extra_behavior
            add_procs
            yield @builder if block_given?
          end
&lt;/code&gt;
So, it means that you can influence the xml tree.

In json situations, you have a hash. So maybe we can just pass hash to proc?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is my opinion. I did a little research on serialization
:).&lt;br&gt;
When you do&lt;br&gt;
User.first.to_xml(:procs =&amp;gt; [Proc.new{|options|}])&lt;br&gt;
OR&lt;br&gt;
User.first.to_xml(:procs =&amp;gt; [Proc.new{|options,
serializable|}])&lt;br&gt;
You can access Builder which options[:builder] constructs xml
through and serializable model.&lt;br&gt;
rails/activemodel/lib/active_model/serializers/xml.rb line 100&lt;br&gt;
&lt;code&gt;&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
{mkd-extraction-af5c172a54ff976221305bb9b6567afa}
&lt;p&gt;&lt;br&gt;
So, it means that you can influence the xml tree.&lt;/p&gt;
&lt;p&gt;In json situations, you have a hash. So maybe we can just pass
hash to proc?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T22:36:47+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-08T22:36:49+01:00</updated-at>
      <user-id type="integer">119143</user-id>
      <version type="integer">8</version>
      <user-name>codemanki</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oh. something hapened with code.
rails/activemodel/lib/active_model/serializers/xml.rb line 100
          @builder.tag!(*args) do
            add_attributes_and_methods
            add_extra_behavior
            add_procs
            yield @builder if block_given?
          end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh. something hapened with code.&lt;br&gt;
rails/activemodel/lib/active_model/serializers/xml.rb line
100&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      @builder.tag!(*args) do
        add_attributes_and_methods
        add_extra_behavior
        add_procs
        yield @builder if block_given?
      end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T22:38:00+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-08T22:38:03+01:00</updated-at>
      <user-id type="integer">119143</user-id>
      <version type="integer">9</version>
      <user-name>codemanki</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&quot;In json situations, you have a hash. So maybe we can just pass hash to proc?&quot;

Can you give real life examples of this? Why would you need it for? What is the output you expect once you pass a proc?</body>
      <body-html>&lt;div&gt;&lt;p&gt;&quot;In json situations, you have a hash. So maybe we can just pass
hash to proc?&quot;&lt;/p&gt;
&lt;p&gt;Can you give real life examples of this? Why would you need it
for? What is the output you expect once you pass a proc?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T19:02:58+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-09T19:03:00+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Jos&#233;
Lets say, i have
User.first.to_json , and it will return something like &quot;{\&quot;login\&quot;: \&quot;codemanki\&quot;, \&quot;email\&quot;: \&quot;mail@gmail.com\&quot;}&quot;
And i can do 
proc = Proc.new{|serializable| serializable.merge({:can_login =&gt; true})}
User.first.to_json(:procs =&gt; [proc])
and so it will return  &quot;{\&quot;login\&quot;: \&quot;codemanki\&quot;, \&quot;email\&quot;: \&quot;mail@gmail.com\&quot;, \&quot;can_login\&quot;: \&quot;true\&quot;}&quot;

Yes, i know that we can achieve this by adding method to User model and then passing it to to_json like .to_json(:methods =&gt; :mymethod), but maybe :procs will be much easier and clear way to edit result json right in the spot, without adding methods to model?

This is a  simple example that comes to mind.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Jos&amp;eacute; Lets say, i have&lt;br&gt;
User.first.to_json , and it will return something like &quot;{&quot;login&quot;:
&quot;codemanki&quot;, &quot;email&quot;: &quot;&lt;a href=
&quot;mailto:mail@gmail.com&quot;&gt;mail@gmail.com&lt;/a&gt;&quot;}&quot;&lt;br&gt;
And i can do&lt;br&gt;
proc = Proc.new{|serializable| serializable.merge({:can_login =&amp;gt;
true})}&lt;br&gt;
User.first.to_json(:procs =&amp;gt; &lt;a href=
&quot;/projects/8994/changesets/proc&quot; title=
&quot;Changeset [proc]&quot;&gt;[proc]&lt;/a&gt;)&lt;br&gt;
and so it will return &quot;{&quot;login&quot;: &quot;codemanki&quot;, &quot;email&quot;: &quot;&lt;a href=
&quot;mailto:mail@gmail.com&quot;&gt;mail@gmail.com&lt;/a&gt;&quot;, &quot;can_login&quot;:
&quot;true&quot;}&quot;&lt;/p&gt;
&lt;p&gt;Yes, i know that we can achieve this by adding method to User
model and then passing it to to_json like .to_json(:methods =&amp;gt;
:mymethod), but maybe :procs will be much easier and clear way to
edit result json right in the spot, without adding methods to
model?&lt;/p&gt;
&lt;p&gt;This is a simple example that comes to mind.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T20:04:04+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-09T20:04:07+01:00</updated-at>
      <user-id type="integer">119143</user-id>
      <version type="integer">11</version>
      <user-name>codemanki</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am still skeptical. This could be easily done as:

  render :json =&gt; @user.as_json.merge(:can_login =&gt; true)

Or am I missing something?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am still skeptical. This could be easily done as:&lt;/p&gt;
&lt;p&gt;render :json =&amp;gt; @user.as_json.merge(:can_login =&amp;gt;
true)&lt;/p&gt;
&lt;p&gt;Or am I missing something?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T20:16:44+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-09T20:16:46+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">12</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Jos&#233;
No, you are not missing. It can be done in this way too. Or even @user.as_json.merge(:can_login =&gt; true).to_json :)
So, you think this is unnecessary feature?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Jos&amp;eacute; No, you are not missing. It can be done in this way
too. Or even @user.as_json.merge(:can_login =&amp;gt; true).to_json
:)&lt;br&gt;
So, you think this is unnecessary feature?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T20:23:35+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-09T20:23:39+01:00</updated-at>
      <user-id type="integer">119143</user-id>
      <version type="integer">13</version>
      <user-name>codemanki</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>So far yes. :) However I can gladly reopen it if a valid use case is given.</body>
      <body-html>&lt;div&gt;&lt;p&gt;So far yes. :) However I can gladly reopen it if a valid use
case is given.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T20:26:16+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-09T20:26:18+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">14</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The case here is to try and share the same options to both to_xml and as_json/to_json overrides.

For example, if we include in :methods an instance method that returns a Hash, to_xml does not behave correctly and prints out a string; I need to add it to :procs and customize it a little, while as_json/to_json works as expected.

So if to_json accepts a proc aswell I can keep the same code and take out the :methods parameter.

This is *a* solution and there are a dozen for this problem anyway, but you asked for a use case :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;The case here is to try and share the same options to both
to_xml and as_json/to_json overrides.&lt;/p&gt;
&lt;p&gt;For example, if we include in :methods an instance method that
returns a Hash, to_xml does not behave correctly and prints out a
string; I need to add it to :procs and customize it a little, while
as_json/to_json works as expected.&lt;/p&gt;
&lt;p&gt;So if to_json accepts a proc aswell I can keep the same code and
take out the :methods parameter.&lt;/p&gt;
&lt;p&gt;This is &lt;em&gt;a&lt;/em&gt; solution and there are a dozen for this
problem anyway, but you asked for a use case :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T04:35:03+01:00</created-at>
      <creator-id type="integer">3117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3332</number>
      <permalink>add-optionsprocs-to-to_json</permalink>
      <priority type="integer">157754</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>proc to_json</tag>
      <title>Add options[:procs] to to_json</title>
      <updated-at type="datetime">2010-10-15T04:35:09+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">15</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Bart Zonneveld</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3332</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
