<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15783</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:18+00:00</created-at>
  <creator-id type="integer">79902</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3579</number>
  <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>mysql timestamps timezone</tag>
  <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
  <updated-at type="datetime">2011-03-26T02:35:34+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">13</version>
  <user-name>bingbing</user-name>
  <creator-name>Joachim B&#252;chse</creator-name>
  <assigned-user-name>Geoff Buesing</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
  <priority-name>Low</priority-name>
  <original-body>Rails current timezone support implementation creates problems with MySQL servers that have not/cannot be configured to use system/global time_zone=UTC.

The mysql connection adapter does not check or set the mysql session variable time_zone to be in sync with config.active_record.default_timezone. This leads to time shifts for columns of type Timestamp.

The default setup for MySQL on OSX and Debian is to use the system time zone. 

mysql&gt; SELECT @@global.time_zone, @@session.time_zone;
+--------------------+---------------------+
| @@global.time_zone | @@session.time_zone |
+--------------------+---------------------+
| SYSTEM             | SYSTEM              | 
+--------------------+---------------------+
1 row in set (0.00 sec)

mysql&gt; SHOW VARIABLES LIKE '%zone%'; 
+------------------+--------+
| Variable_name    | Value  |
+------------------+--------+
| system_time_zone | CET    | 
| time_zone        | SYSTEM | 
+------------------+--------+
2 rows in set (0.00 sec)

This makes sense as most simple applications are not timezone aware (ie they are not capable of converting to a users time zone) but rely on the values retrieved from the DB to be &quot;correct&quot; without conversion.

MySQL internally stores columns of type Timestamp as UTC value. However those UTC timestamps are transfered as values in the session timezone. When Timestamp values are retrieved or stored they are converted to/from the session timezone. Applications which are timezone aware must (or at least usually do) set the mysql session variable time_zone to UTC or GMT (in order to access a linear, non-interrupted time axis).

The rails mysql adapter offers no database.yml configuration option to set a specific session time_zone (or other mysql session variables), neither does it check the environment.rb setting of config.active_record.default_timezone to be in sync with the servers global or session time_zone.

Ugly workaround (patching MysqlAdapter in environment.rb):

# We need to patch the mysql connection adaptor to always use the UTC timezone
require 'active_record/connection_adapters/mysql_adapter'
module ActiveRecord
  module ConnectionAdapters
    class MysqlAdapter
      private
        alias old_connect connect
        def connect
          old_connect
          execute(&quot;SET SESSION time_zone=UTC&quot;)
        end
    end
  end
end


Clean solution:

The are several ways this problem could be solved.

1) At the very least, the MysqlAdapter should check whether mysqls session time_zone is the same as config.active_record.default_timezone and generate a warning if it is not. This warning doesn't actually solve the problem for the majority of mysql users, but it does solve it for those that can change mysqls global time zone or the system time zone of the DB server.

2) The problem could be solved by allowing more configuration options in database.yml, ie

development:
  adapter: mysql
  database: test
  username: test
  password: test
  session_variables: time_zone=UTC,someVar=someValue

which are to be set at the end of connect() in MysqlAdapter (this is the approach of Connector/J). While this can help solve the problem (and adds additional flexibility) it is not really DRY... we have already specified the time_zone we want to use in config.active_record.default_timezone.

3) In my opinion the cleanest solution would be if MysqlAdapter uses the setting of config.active_record.default_timezone=xxxx and issues a &quot;SET SESSION time_zone=xxxx&quot; at the end of the connect() method. However, this will fail if the time_zone* tables have not been created/populated in mysql.</original-body>
  <latest-body>Rails current timezone support implementation creates problems with MySQL servers that have not/cannot be configured to use system/global time_zone=UTC.

The mysql connection adapter does not check or set the mysql session variable time_zone to be in sync with config.active_record.default_timezone. This leads to time shifts for columns of type Timestamp.

The default setup for MySQL on OSX and Debian is to use the system time zone. 

mysql&gt; SELECT @@global.time_zone, @@session.time_zone;
+--------------------+---------------------+
| @@global.time_zone | @@session.time_zone |
+--------------------+---------------------+
| SYSTEM             | SYSTEM              | 
+--------------------+---------------------+
1 row in set (0.00 sec)

mysql&gt; SHOW VARIABLES LIKE '%zone%'; 
+------------------+--------+
| Variable_name    | Value  |
+------------------+--------+
| system_time_zone | CET    | 
| time_zone        | SYSTEM | 
+------------------+--------+
2 rows in set (0.00 sec)

This makes sense as most simple applications are not timezone aware (ie they are not capable of converting to a users time zone) but rely on the values retrieved from the DB to be &quot;correct&quot; without conversion.

MySQL internally stores columns of type Timestamp as UTC value. However those UTC timestamps are transfered as values in the session timezone. When Timestamp values are retrieved or stored they are converted to/from the session timezone. Applications which are timezone aware must (or at least usually do) set the mysql session variable time_zone to UTC or GMT (in order to access a linear, non-interrupted time axis).

The rails mysql adapter offers no database.yml configuration option to set a specific session time_zone (or other mysql session variables), neither does it check the environment.rb setting of config.active_record.default_timezone to be in sync with the servers global or session time_zone.

Ugly workaround (patching MysqlAdapter in environment.rb):

# We need to patch the mysql connection adaptor to always use the UTC timezone
require 'active_record/connection_adapters/mysql_adapter'
module ActiveRecord
  module ConnectionAdapters
    class MysqlAdapter
      private
        alias old_connect connect
        def connect
          old_connect
          execute(&quot;SET SESSION time_zone=UTC&quot;)
        end
    end
  end
end


Clean solution:

The are several ways this problem could be solved.

1) At the very least, the MysqlAdapter should check whether mysqls session time_zone is the same as config.active_record.default_timezone and generate a warning if it is not. This warning doesn't actually solve the problem for the majority of mysql users, but it does solve it for those that can change mysqls global time zone or the system time zone of the DB server.

2) The problem could be solved by allowing more configuration options in database.yml, ie

development:
  adapter: mysql
  database: test
  username: test
  password: test
  session_variables: time_zone=UTC,someVar=someValue

which are to be set at the end of connect() in MysqlAdapter (this is the approach of Connector/J). While this can help solve the problem (and adds additional flexibility) it is not really DRY... we have already specified the time_zone we want to use in config.active_record.default_timezone.

3) In my opinion the cleanest solution would be if MysqlAdapter uses the setting of config.active_record.default_timezone=xxxx and issues a &quot;SET SESSION time_zone=xxxx&quot; at the end of the connect() method. However, this will fail if the time_zone* tables have not been created/populated in mysql.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails current timezone support implementation creates problems
with MySQL servers that have not/cannot be configured to use
system/global time_zone=UTC.&lt;/p&gt;
&lt;p&gt;The mysql connection adapter does not check or set the mysql
session variable time_zone to be in sync with
config.active_record.default_timezone. This leads to time shifts
for columns of type Timestamp.&lt;/p&gt;
&lt;p&gt;The default setup for MySQL on OSX and Debian is to use the
system time zone.&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; SELECT @@global.time_zone, @@session.time_zone;&lt;br&gt;
+--------------------+---------------------+ | @@global.time_zone |
@@session.time_zone | +--------------------+---------------------+
| SYSTEM | SYSTEM | +--------------------+---------------------+ 1
row in set (0.00 sec)&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; SHOW VARIABLES LIKE '%zone%';&lt;br&gt;
+------------------+--------+ | Variable_name | Value |
+------------------+--------+ | system_time_zone | CET | |
time_zone | SYSTEM | +------------------+--------+ 2 rows in set
(0.00 sec)&lt;/p&gt;
&lt;p&gt;This makes sense as most simple applications are not timezone
aware (ie they are not capable of converting to a users time zone)
but rely on the values retrieved from the DB to be &quot;correct&quot;
without conversion.&lt;/p&gt;
&lt;p&gt;MySQL internally stores columns of type Timestamp as UTC value.
However those UTC timestamps are transfered as values in the
session timezone. When Timestamp values are retrieved or stored
they are converted to/from the session timezone. Applications which
are timezone aware must (or at least usually do) set the mysql
session variable time_zone to UTC or GMT (in order to access a
linear, non-interrupted time axis).&lt;/p&gt;
&lt;p&gt;The rails mysql adapter offers no database.yml configuration
option to set a specific session time_zone (or other mysql session
variables), neither does it check the environment.rb setting of
config.active_record.default_timezone to be in sync with the
servers global or session time_zone.&lt;/p&gt;
&lt;p&gt;Ugly workaround (patching MysqlAdapter in environment.rb):&lt;/p&gt;
&lt;h1&gt;We need to patch the mysql connection adaptor to always use the
UTC timezone&lt;/h1&gt;
&lt;p&gt;require 'active_record/connection_adapters/mysql_adapter'&lt;br&gt;
module ActiveRecord&lt;br&gt;
module ConnectionAdapters&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class MysqlAdapter
  private
    alias old_connect connect
    def connect
      old_connect
      execute(&quot;SET SESSION time_zone=UTC&quot;)
    end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;Clean solution:&lt;/p&gt;
&lt;p&gt;The are several ways this problem could be solved.&lt;/p&gt;
&lt;p&gt;1) At the very least, the MysqlAdapter should check whether
mysqls session time_zone is the same as
config.active_record.default_timezone and generate a warning if it
is not. This warning doesn't actually solve the problem for the
majority of mysql users, but it does solve it for those that can
change mysqls global time zone or the system time zone of the DB
server.&lt;/p&gt;
&lt;p&gt;2) The problem could be solved by allowing more configuration
options in database.yml, ie&lt;/p&gt;
&lt;p&gt;development:&lt;br&gt;
adapter: mysql database: test username: test password: test
session_variables: time_zone=UTC,someVar=someValue&lt;/p&gt;
&lt;p&gt;which are to be set at the end of connect() in MysqlAdapter
(this is the approach of Connector/J). While this can help solve
the problem (and adds additional flexibility) it is not really
DRY... we have already specified the time_zone we want to use in
config.active_record.default_timezone.&lt;/p&gt;
&lt;p&gt;3) In my opinion the cleanest solution would be if MysqlAdapter
uses the setting of config.active_record.default_timezone=xxxx and
issues a &quot;SET SESSION time_zone=xxxx&quot; at the end of the connect()
method. However, this will fail if the time_zone* tables have not
been created/populated in mysql.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails current timezone support implementation creates problems with MySQL servers that have not/cannot be configured to use system/global time_zone=UTC.

The mysql connection adapter does not check or set the mysql session variable time_zone to be in sync with config.active_record.default_timezone. This leads to time shifts for columns of type Timestamp.

The default setup for MySQL on OSX and Debian is to use the system time zone. 

    mysql&gt; SELECT @@global.time_zone, @@session.time_zone;
    +--------------------+---------------------+
    | @@global.time_zone | @@session.time_zone |
    +--------------------+---------------------+
    | SYSTEM             | SYSTEM              | 
    +--------------------+---------------------+
    1 row in set (0.00 sec)

    mysql&gt; SHOW VARIABLES LIKE '%zone%'; 
    +------------------+--------+
    | Variable_name    | Value  |
    +------------------+--------+
    | system_time_zone | CET    | 
    | time_zone        | SYSTEM | 
    +------------------+--------+
    2 rows in set (0.00 sec)


This makes sense as most simple applications are not timezone aware (ie they are not capable of converting to a users time zone) but rely on the values retrieved from the DB to be &quot;correct&quot; without conversion.

MySQL internally stores columns of type Timestamp as UTC value. However those UTC timestamps are transfered as values in the session timezone. When Timestamp values are retrieved or stored they are converted to/from the session timezone. Applications which are timezone aware must (or at least usually do) set the mysql session variable time_zone to UTC or GMT (in order to access a linear, non-interrupted time axis).

The rails mysql adapter offers no database.yml configuration option to set a specific session time_zone (or other mysql session variables), neither does it check the environment.rb setting of config.active_record.default_timezone to be in sync with the servers global or session time_zone.

## Ugly workaround (patching MysqlAdapter in environment.rb): ##

@@@ ruby
# We need to patch the mysql connection adaptor to always use the UTC timezone
require 'active_record/connection_adapters/mysql_adapter'
module ActiveRecord
  module ConnectionAdapters
    class MysqlAdapter
      private
        alias old_connect connect
        def connect
          old_connect
          execute(&quot;SET SESSION time_zone=UTC&quot;)
        end
    end
  end
end
@@@

## Clean solution: ##

The are several ways this problem could be solved.

1) At the very least, the MysqlAdapter should check whether mysqls session time_zone is the same as config.active_record.default_timezone and generate a warning if it is not. This warning doesn't actually solve the problem for the majority of mysql users, but it does solve it for those that can change mysqls global time zone or the system time zone of the DB server.

2) The problem could be solved by allowing more configuration options in database.yml, ie

@@@ yaml
development:
  adapter: mysql
  database: test
  username: test
  password: test
  session_variables: time_zone=UTC,someVar=someValue
@@@

which are to be set at the end of connect() in MysqlAdapter (this is the approach of Connector/J). While this can help solve the problem (and adds additional flexibility) it is not really DRY... we have already specified the time_zone we want to use in config.active_record.default_timezone.

3) In my opinion the cleanest solution would be if MysqlAdapter uses the setting of config.active_record.default_timezone=xxxx and issues a &quot;SET SESSION time_zone=xxxx&quot; at the end of the connect() method. However, this will fail if the time_zone* tables have not been created/populated in mysql.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails current timezone support implementation creates problems
with MySQL servers that have not/cannot be configured to use
system/global time_zone=UTC.&lt;/p&gt;
&lt;p&gt;The mysql connection adapter does not check or set the mysql
session variable time_zone to be in sync with
config.active_record.default_timezone. This leads to time shifts
for columns of type Timestamp.&lt;/p&gt;
&lt;p&gt;The default setup for MySQL on OSX and Debian is to use the
system time zone.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; SELECT @@global.time_zone, @@session.time_zone;
+--------------------+---------------------+
| @@global.time_zone | @@session.time_zone |
+--------------------+---------------------+
| SYSTEM             | SYSTEM              | 
+--------------------+---------------------+
1 row in set (0.00 sec)

mysql&amp;gt; SHOW VARIABLES LIKE '%zone%'; 
+------------------+--------+
| Variable_name    | Value  |
+------------------+--------+
| system_time_zone | CET    | 
| time_zone        | SYSTEM | 
+------------------+--------+
2 rows in set (0.00 sec)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This makes sense as most simple applications are not timezone
aware (ie they are not capable of converting to a users time zone)
but rely on the values retrieved from the DB to be &quot;correct&quot;
without conversion.&lt;/p&gt;
&lt;p&gt;MySQL internally stores columns of type Timestamp as UTC value.
However those UTC timestamps are transfered as values in the
session timezone. When Timestamp values are retrieved or stored
they are converted to/from the session timezone. Applications which
are timezone aware must (or at least usually do) set the mysql
session variable time_zone to UTC or GMT (in order to access a
linear, non-interrupted time axis).&lt;/p&gt;
&lt;p&gt;The rails mysql adapter offers no database.yml configuration
option to set a specific session time_zone (or other mysql session
variables), neither does it check the environment.rb setting of
config.active_record.default_timezone to be in sync with the
servers global or session time_zone.&lt;/p&gt;
&lt;h2&gt;Ugly workaround (patching MysqlAdapter in environment.rb):&lt;/h2&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# We need to patch the mysql connection adaptor to always use the UTC timezone
require 'active_record/connection_adapters/mysql_adapter'
module ActiveRecord
  module ConnectionAdapters
    class MysqlAdapter
      private
        alias old_connect connect
        def connect
          old_connect
          execute(&quot;SET SESSION time_zone=UTC&quot;)
        end
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Clean solution:&lt;/h2&gt;
&lt;p&gt;The are several ways this problem could be solved.&lt;/p&gt;
&lt;p&gt;1) At the very least, the MysqlAdapter should check whether
mysqls session time_zone is the same as
config.active_record.default_timezone and generate a warning if it
is not. This warning doesn't actually solve the problem for the
majority of mysql users, but it does solve it for those that can
change mysqls global time zone or the system time zone of the DB
server.&lt;/p&gt;
&lt;p&gt;2) The problem could be solved by allowing more configuration
options in database.yml, ie&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;yaml&quot;&gt;development:
  adapter: mysql
  database: test
  username: test
  password: test
  session_variables: time_zone=UTC,someVar=someValue&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;which are to be set at the end of connect() in MysqlAdapter
(this is the approach of Connector/J). While this can help solve
the problem (and adds additional flexibility) it is not really
DRY... we have already specified the time_zone we want to use in
config.active_record.default_timezone.&lt;/p&gt;
&lt;p&gt;3) In my opinion the cleanest solution would be if MysqlAdapter
uses the setting of config.active_record.default_timezone=xxxx and
issues a &quot;SET SESSION time_zone=xxxx&quot; at the end of the connect()
method. However, this will fail if the time_zone* tables have not
been created/populated in mysql.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T09:39:45+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2009-12-16T09:50:28+00:00</updated-at>
      <user-id type="integer">79902</user-id>
      <version type="integer">1</version>
      <user-name>Joachim B&#252;chse</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry for the formatting! A preview or edit would be great.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for the formatting! A preview or edit would be great.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T09:42:37+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2009-12-16T09:42:41+00:00</updated-at>
      <user-id type="integer">79902</user-id>
      <version type="integer">2</version>
      <user-name>Joachim B&#252;chse</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Joachim: thanks for the thorough writeup.

The issue described here with Mysql doing time zone conversions on TIMESTAMP columns. Note that TIMESTAMP columns aren't generated by ActiveRecord schema migrations -- the timestamps method adds Mysql DATETIME columns, which aren't subject to Mysql time zone conversions. So, this particular case is somewhat off the beaten path.

Because this is a rare, off-the-Rails-way case, I don't think we can justify maintaining infrastructure necessary for solutions #1 or #3 proposed here (furthermore, I don't think these solutions could actually be implemented correctly, given that the only valid settings for config.active_record.default_timezone are :utc and :local. How would we check that the Mysql SYSTEM setting was the same as :local in the Ruby process? How would we SET SESSION correctly with :local?)

A good solution here is to give developers an expansion point that doesn't involve monkey patching, i.e. your solution #2. With this option, nothing is implied about specific time zone support within the framework for database-side time zone conversions.

I'm not familiar enough with the Mysql connection specifics to know of any potential issues with a session_variables config, but I think it's worth pursuing this concept further, via a patch, and/or a discussion on the Rails Core mailing list.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Joachim: thanks for the thorough writeup.&lt;/p&gt;
&lt;p&gt;The issue described here with Mysql doing time zone conversions
on TIMESTAMP columns. Note that TIMESTAMP columns aren't generated
by ActiveRecord schema migrations -- the timestamps method adds
Mysql DATETIME columns, which aren't subject to Mysql time zone
conversions. So, this particular case is somewhat off the beaten
path.&lt;/p&gt;
&lt;p&gt;Because this is a rare, off-the-Rails-way case, I don't think we
can justify maintaining infrastructure necessary for solutions
&lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt; or
&lt;a href=&quot;/projects/8994/tickets/3&quot; title=&quot;Ticket #3&quot;&gt;#3&lt;/a&gt;
proposed here (furthermore, I don't think these solutions could
actually be implemented correctly, given that the only valid
settings for config.active_record.default_timezone are :utc and
:local. How would we check that the Mysql SYSTEM setting was the
same as :local in the Ruby process? How would we SET SESSION
correctly with :local?)&lt;/p&gt;
&lt;p&gt;A good solution here is to give developers an expansion point
that doesn't involve monkey patching, i.e. your solution &lt;a href=
&quot;/projects/8994/tickets/2&quot; title=&quot;Ticket #2&quot;&gt;#2&lt;/a&gt;. With this
option, nothing is implied about specific time zone support within
the framework for database-side time zone conversions.&lt;/p&gt;
&lt;p&gt;I'm not familiar enough with the Mysql connection specifics to
know of any potential issues with a session_variables config, but I
think it's worth pursuing this concept further, via a patch, and/or
a discussion on the Rails Core mailing list.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T15:33:16+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2009-12-16T15:33:17+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">3</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We use rails as a viewer on a database that's been written too by a Java server application (ie not an island by itself).

I'm not sure how DATETIME columns are handled as we don't use them. I would not be surprised if for the aspect mentioned (timezone conversion) DATETIME behaves exactly like TIMESTAMP. I'll do a little test to check this.

Checking if the mysql session time_zone corresponds to :utc is pretty simple.

`SHOW VARIABLES LIKE 'time_zone'`

would have to be UTC, GMT or SYSTEM. If it is SYSTEM then

`SHOW VARIABLES LIKE 'system_time_zone'`

must be UTC or GMT.

Checking if the mysql session time_zone corresponds to :local is more tricky I agree, its the same variables but potentially not a 1-to-1 match. It might be easier to just do a

`SELECT now()`

and see if the time offset matches (this would require ignoring small deviations). It would not catch the corner case where DB + RAILS are in the same TZ but only one of them switches on DST.

Maybe the solution for this would actually be to add another option besides :utc and :local called :matchdb?</body>
      <body-html>&lt;div&gt;&lt;p&gt;We use rails as a viewer on a database that's been written too
by a Java server application (ie not an island by itself).&lt;/p&gt;
&lt;p&gt;I'm not sure how DATETIME columns are handled as we don't use
them. I would not be surprised if for the aspect mentioned
(timezone conversion) DATETIME behaves exactly like TIMESTAMP. I'll
do a little test to check this.&lt;/p&gt;
&lt;p&gt;Checking if the mysql session time_zone corresponds to :utc is
pretty simple.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SHOW VARIABLES LIKE 'time_zone'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would have to be UTC, GMT or SYSTEM. If it is SYSTEM then&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SHOW VARIABLES LIKE 'system_time_zone'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;must be UTC or GMT.&lt;/p&gt;
&lt;p&gt;Checking if the mysql session time_zone corresponds to :local is
more tricky I agree, its the same variables but potentially not a
1-to-1 match. It might be easier to just do a&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT now()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and see if the time offset matches (this would require ignoring
small deviations). It would not catch the corner case where DB +
RAILS are in the same TZ but only one of them switches on DST.&lt;/p&gt;
&lt;p&gt;Maybe the solution for this would actually be to add another
option besides :utc and :local called :matchdb?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T18:53:40+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2009-12-16T18:53:44+00:00</updated-at>
      <user-id type="integer">79902</user-id>
      <version type="integer">4</version>
      <user-name>Joachim B&#252;chse</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>To answer your question about Mysql DATETIME columns: they're not affected by the Mysql time zone. From the Mysql documentation:

&quot;The current time zone setting does not affect values displayed by functions such as UTC_TIMESTAMP() or values in DATE, TIME, or DATETIME columns. Nor are values in those data types stored in UTC; the time zone applies for them only when converting from TIMESTAMP values.&quot;
http://dev.mysql.com/doc/refman/5.1/en/time-zone-support.html

IMO the cleanest solution is the one you presented before (#2), which allows you to pass custom session variables for the connection.</body>
      <body-html>&lt;div&gt;&lt;p&gt;To answer your question about Mysql DATETIME columns: they're
not affected by the Mysql time zone. From the Mysql
documentation:&lt;/p&gt;
&lt;p&gt;&quot;The current time zone setting does not affect values displayed
by functions such as UTC_TIMESTAMP() or values in DATE, TIME, or
DATETIME columns. Nor are values in those data types stored in UTC;
the time zone applies for them only when converting from TIMESTAMP
values.&quot; &lt;a href=
&quot;http://dev.mysql.com/doc/refman/5.1/en/time-zone-support.html&quot;&gt;http://dev.mysql.com/doc/refman/5.1/en/time-zone-support.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IMO the cleanest solution is the one you presented before (#2),
which allows you to pass custom session variables for the
connection.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T19:31:45+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2009-12-16T19:31:47+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">5</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yep, (unfortunately for me;-) you are right DATETIMEs seem to be stored &quot;like strings&quot;. The current implementation of MysqlAdapter.connect() is

@@@ ruby
        def connect
          encoding = @config[:encoding]
          if encoding
            @connection.options(Mysql::SET_CHARSET_NAME, encoding) rescue nil
          end
          @connection.ssl_set(@config[:sslkey], @config[:sslcert], @config[:sslca], @config[:sslcapath], @config[:sslcipher]) if @config[:sslkey]
          @connection.real_connect(*@connection_options)
          execute(&quot;SET NAMES '#{encoding}'&quot;) if encoding
        end
@@@

If the `execute(&quot;SET NAMES ...&quot;)` statement does what it is supposed to, then there should be no problem with a `execute(SET SESSION time_zone=...)`. Not sure which other session variables somebody would like to change maybe lc_time_names but that should hardly be relevant for a rails application.

Well I guess it's time to hack up a patch...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yep, (unfortunately for me;-) you are right DATETIMEs seem to be
stored &quot;like strings&quot;. The current implementation of
MysqlAdapter.connect() is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;        def connect
          encoding = @config[:encoding]
          if encoding
            @connection.options(Mysql::SET_CHARSET_NAME, encoding) rescue nil
          end
          @connection.ssl_set(@config[:sslkey], @config[:sslcert], @config[:sslca], @config[:sslcapath], @config[:sslcipher]) if @config[:sslkey]
          @connection.real_connect(*@connection_options)
          execute(&quot;SET NAMES '#{encoding}'&quot;) if encoding
        end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If the &lt;code&gt;execute(&quot;SET NAMES ...&quot;)&lt;/code&gt; statement does what
it is supposed to, then there should be no problem with a
&lt;code&gt;execute(SET SESSION time_zone=...)&lt;/code&gt;. Not sure which
other session variables somebody would like to change maybe
lc_time_names but that should hardly be relevant for a rails
application.&lt;/p&gt;
&lt;p&gt;Well I guess it's time to hack up a patch...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T22:12:55+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2009-12-16T22:12:56+00:00</updated-at>
      <user-id type="integer">79902</user-id>
      <version type="integer">6</version>
      <user-name>Joachim B&#252;chse</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Relevant to this discussion, please see this change to the Postgres adapter: http://github.com/rails/rails/commit/c5b652f3d25ef92ae0f67551464fb03bda6aeb4f

I'm assuming that we couldn't use the same approach for MySql, because of the need to build time zone tables mentioned above.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Relevant to this discussion, please see this change to the
Postgres adapter: &lt;a href=
&quot;http://github.com/rails/rails/commit/c5b652f3d25ef92ae0f67551464fb03bda6aeb4f&quot;&gt;
http://github.com/rails/rails/commit/c5b652f3d25ef92ae0f67551464fb0...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm assuming that we couldn't use the same approach for MySql,
because of the need to build time zone tables mentioned above.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-28T03:25:23+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2010-01-28T03:25:25+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">7</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T03:14:46+01:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2010-10-09T03:14:49+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">8</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:18:58+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2010-11-08T23:12:07+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">9</version>
      <user-name>jim123456</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T03:10:14+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2010-12-28T03:36:18+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">10</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T03:23:30+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2011-02-14T05:42:01+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">11</version>
      <user-name>xixi</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:25:25+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2011-02-19T09:28:18+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">12</version>
      <user-name>mklo</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:10:44+00:00</created-at>
      <creator-id type="integer">79902</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3579</number>
      <permalink>activerecord-not-settingchecking-mysql-session-variable-time_zone</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>mysql timestamps timezone</tag>
      <title>ActiveRecord not setting/checking MySQL session variable time_zone</title>
      <updated-at type="datetime">2011-03-26T02:35:34+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">13</version>
      <user-name>bingbing</user-name>
      <creator-name>Joachim B&#252;chse</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3579</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
