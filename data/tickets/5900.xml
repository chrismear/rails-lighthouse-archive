<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-31T05:06:50+00:00</created-at>
  <creator-id type="integer">122617</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5900</number>
  <permalink>active-record-unable-to-save-if-boolean-is-set-to-false</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>invalid</tag>
  <title>Active Record unable to save if boolean is set to false</title>
  <updated-at type="datetime">2011-02-02T16:28:59+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Daniel Palacio</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5900</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a rather misterious problem dealing with booleans in Rails, here is how to reproduce:

rails new boolean_bug
rails generate model User verified:boolean
With this you should have an empty project with the User model.

3 Inside boolean_bug/app/models/user.rb

class User &lt; ActiveRecord::Base
 before_save :set_false
 attr_accessible :verified                 

 private  
   def set_false  
     self.verified = false
   end
end
4 In the console know reproduce:

$rails -v 
Rails 3.0.1

$ rails console --sandbox
ruby-1.9.2-p0 &gt; User.create!
ActiveRecord::RecordNotSaved: ActiveRecord::RecordNotSaved
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/persistence.rb:56:in `save!'
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/validations.rb:49:in `save!'
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/attribute_methods/dirty.rb:30:in `save!
5 Change self.verified = false to self.verified = 0

6 Go to the console again

ruby-1.9.2-p0 &gt; User.create!
 =&gt; #&lt;User id: 1, verified: false, created_at: &quot;2010-10-31 04:23:13&quot;, updated_at: &quot;2010-10-31 04:23:13&quot;&gt; 


As you can see when we set the boolean to false it's unable to save, while if we set it to 0 or to true etc, save will work</original-body>
  <latest-body>I have a rather misterious problem dealing with booleans in Rails, here is how to reproduce:

rails new boolean_bug
rails generate model User verified:boolean
With this you should have an empty project with the User model.

3 Inside boolean_bug/app/models/user.rb

class User &lt; ActiveRecord::Base
 before_save :set_false
 attr_accessible :verified                 

 private  
   def set_false  
     self.verified = false
   end
end
4 In the console know reproduce:

$rails -v 
Rails 3.0.1

$ rails console --sandbox
ruby-1.9.2-p0 &gt; User.create!
ActiveRecord::RecordNotSaved: ActiveRecord::RecordNotSaved
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/persistence.rb:56:in `save!'
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/validations.rb:49:in `save!'
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/attribute_methods/dirty.rb:30:in `save!
5 Change self.verified = false to self.verified = 0

6 Go to the console again

ruby-1.9.2-p0 &gt; User.create!
 =&gt; #&lt;User id: 1, verified: false, created_at: &quot;2010-10-31 04:23:13&quot;, updated_at: &quot;2010-10-31 04:23:13&quot;&gt; 


As you can see when we set the boolean to false it's unable to save, while if we set it to 0 or to true etc, save will work</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a rather misterious problem dealing with booleans in
Rails, here is how to reproduce:&lt;/p&gt;
&lt;p&gt;rails new boolean_bug&lt;br&gt;
rails generate model User verified:boolean&lt;br&gt;
With this you should have an empty project with the User model.&lt;/p&gt;
&lt;p&gt;3 Inside boolean_bug/app/models/user.rb&lt;/p&gt;
&lt;p&gt;class User &amp;lt; ActiveRecord::Base&lt;br&gt;
before_save :set_false attr_accessible :verified&lt;br&gt;&lt;/p&gt;
&lt;p&gt;private&lt;br&gt;
def set_false&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; self.verified = false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;br&gt;
4 In the console know reproduce:&lt;/p&gt;
&lt;p&gt;$rails -v Rails 3.0.1&lt;/p&gt;
&lt;p&gt;$ rails console --sandbox ruby-1.9.2-p0 &amp;gt; User.create!&lt;br&gt;
ActiveRecord::RecordNotSaved: ActiveRecord::RecordNotSaved&lt;br&gt;
from
/Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/persistence.rb:56:in
&lt;code&gt;save!'&amp;lt;br/&amp;gt; from
/Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/validations.rb:49:in&lt;/code&gt;save!'&lt;br&gt;
from
/Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/attribute_methods/dirty.rb:30:in
&lt;code&gt;save!&amp;lt;br/&amp;gt; 5 Change self.verified = false to
self.verified = 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6 Go to the console again&lt;/p&gt;
&lt;p&gt;ruby-1.9.2-p0 &amp;gt; User.create!&lt;br&gt;
=&amp;gt; #&lt;/p&gt;
&lt;p&gt;As you can see when we set the boolean to false it's unable to
save, while if we set it to 0 or to true etc, save will work&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a rather misterious problem dealing with booleans in Rails, here is how to reproduce:

rails new boolean_bug
rails generate model User verified:boolean
With this you should have an empty project with the User model.

3 Inside boolean_bug/app/models/user.rb

class User &lt; ActiveRecord::Base
 before_save :set_false
 attr_accessible :verified                 

 private  
   def set_false  
     self.verified = false
   end
end
4 In the console know reproduce:

$rails -v 
Rails 3.0.1

$ rails console --sandbox
ruby-1.9.2-p0 &gt; User.create!
ActiveRecord::RecordNotSaved: ActiveRecord::RecordNotSaved
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/persistence.rb:56:in `save!'
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/validations.rb:49:in `save!'
from /Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/attribute_methods/dirty.rb:30:in `save!
5 Change self.verified = false to self.verified = 0

6 Go to the console again

ruby-1.9.2-p0 &gt; User.create!
 =&gt; #&lt;User id: 1, verified: false, created_at: &quot;2010-10-31 04:23:13&quot;, updated_at: &quot;2010-10-31 04:23:13&quot;&gt; 


As you can see when we set the boolean to false it's unable to save, while if we set it to 0 or to true etc, save will work</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a rather misterious problem dealing with booleans in
Rails, here is how to reproduce:&lt;/p&gt;
&lt;p&gt;rails new boolean_bug&lt;br&gt;
rails generate model User verified:boolean&lt;br&gt;
With this you should have an empty project with the User model.&lt;/p&gt;
&lt;p&gt;3 Inside boolean_bug/app/models/user.rb&lt;/p&gt;
&lt;p&gt;class User &amp;lt; ActiveRecord::Base&lt;br&gt;
before_save :set_false attr_accessible :verified&lt;br&gt;&lt;/p&gt;
&lt;p&gt;private&lt;br&gt;
def set_false&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; self.verified = false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;br&gt;
4 In the console know reproduce:&lt;/p&gt;
&lt;p&gt;$rails -v Rails 3.0.1&lt;/p&gt;
&lt;p&gt;$ rails console --sandbox ruby-1.9.2-p0 &amp;gt; User.create!&lt;br&gt;
ActiveRecord::RecordNotSaved: ActiveRecord::RecordNotSaved&lt;br&gt;
from
/Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/persistence.rb:56:in
&lt;code&gt;save!'&amp;lt;br/&amp;gt; from
/Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/validations.rb:49:in&lt;/code&gt;save!'&lt;br&gt;
from
/Users/dpalacio/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.1/lib/active_record/attribute_methods/dirty.rb:30:in
&lt;code&gt;save!&amp;lt;br/&amp;gt; 5 Change self.verified = false to
self.verified = 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6 Go to the console again&lt;/p&gt;
&lt;p&gt;ruby-1.9.2-p0 &amp;gt; User.create!&lt;br&gt;
=&amp;gt; #&lt;/p&gt;
&lt;p&gt;As you can see when we set the boolean to false it's unable to
save, while if we set it to 0 or to true etc, save will work&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-31T05:06:50+00:00</created-at>
      <creator-id type="integer">122617</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5900</number>
      <permalink>active-record-unable-to-save-if-boolean-is-set-to-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Active Record unable to save if boolean is set to false</title>
      <updated-at type="datetime">2010-10-31T05:06:54+00:00</updated-at>
      <user-id type="integer">122617</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Palacio</user-name>
      <creator-name>Daniel Palacio</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5900</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If your before_save function returns false, then rails won't save the object as it cancels all callbacks. You're assigning false to self.verified, which returns the value of self.verified which is false, so it doesn't save. Not really a bug, just how the before_* functions work.

From the docs:

`If a before_* callback returns false, all the later callbacks and the associated action are cancelled. If an after_* callback returns false, all the later callbacks are cancelled. Callbacks are generally run in the order they are defined, with the exception of callbacks defined as methods on the model, which are called last.`</body>
      <body-html>&lt;div&gt;&lt;p&gt;If your before_save function returns false, then rails won't
save the object as it cancels all callbacks. You're assigning false
to self.verified, which returns the value of self.verified which is
false, so it doesn't save. Not really a bug, just how the before_*
functions work.&lt;/p&gt;
&lt;p&gt;From the docs:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;If a before_* callback returns false, all the later
callbacks and the associated action are cancelled. If an after_*
callback returns false, all the later callbacks are cancelled.
Callbacks are generally run in the order they are defined, with the
exception of callbacks defined as methods on the model, which are
called last.&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-31T05:12:54+00:00</created-at>
      <creator-id type="integer">122617</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5900</number>
      <permalink>active-record-unable-to-save-if-boolean-is-set-to-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>invalid</tag>
      <title>Active Record unable to save if boolean is set to false</title>
      <updated-at type="datetime">2010-10-31T05:12:55+00:00</updated-at>
      <user-id type="integer">89146</user-id>
      <version type="integer">2</version>
      <user-name>Denis Odorcic</user-name>
      <creator-name>Daniel Palacio</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5900</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Damn that was quick ! Anyway thanks, this has actually taken forever to debug and pinpoint repro. 
Anyway sorry for the confusion, thanks for the help</body>
      <body-html>&lt;div&gt;&lt;p&gt;Damn that was quick ! Anyway thanks, this has actually taken
forever to debug and pinpoint repro.&lt;br&gt;
Anyway sorry for the confusion, thanks for the help&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-31T05:15:29+00:00</created-at>
      <creator-id type="integer">122617</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5900</number>
      <permalink>active-record-unable-to-save-if-boolean-is-set-to-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>invalid</tag>
      <title>Active Record unable to save if boolean is set to false</title>
      <updated-at type="datetime">2010-10-31T05:15:30+00:00</updated-at>
      <user-id type="integer">122617</user-id>
      <version type="integer">3</version>
      <user-name>Daniel Palacio</user-name>
      <creator-name>Daniel Palacio</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5900</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:21:14+00:00</created-at>
      <creator-id type="integer">122617</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5900</number>
      <permalink>active-record-unable-to-save-if-boolean-is-set-to-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>invalid</tag>
      <title>Active Record unable to save if boolean is set to false</title>
      <updated-at type="datetime">2011-02-02T16:28:21+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Daniel Palacio</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5900</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:21:15+00:00</created-at>
      <creator-id type="integer">122617</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5900</number>
      <permalink>active-record-unable-to-save-if-boolean-is-set-to-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>invalid</tag>
      <title>Active Record unable to save if boolean is set to false</title>
      <updated-at type="datetime">2011-02-02T16:28:59+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Daniel Palacio</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5900</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
