<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-12T10:44:50+01:00</created-at>
  <creator-id type="integer">64541</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5092</number>
  <permalink>polymorphic_url-does-not-take-https-into-consideration-when-generating-the-url</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;default protocol&quot; https routes &quot;url helpers&quot;</tag>
  <title>polymorphic_url does not take https into consideration when generating the URL</title>
  <updated-at type="datetime">2010-09-26T08:29:07+01:00</updated-at>
  <user-id type="integer">64541</user-id>
  <version type="integer">4</version>
  <user-name>modsaid</user-name>
  <creator-name>modsaid</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5092</url>
  <priority-name>Low</priority-name>
  <original-body>I'm running a Rails 2.3.5 application (redmine).. and It is accessible only via https as configured in my nginx.

The problem is that some plugins use polymorphic_url helper to dynamically generate full URLs for relevant ajax requests. This lead to the Ajax always failing with 302 (redirect from http to https by nginx)

An alternative is to use polymorphic_path. and I'll do that for now.

But the point is, if I open browsing my web application through https, polymorphic_url should grab the protocol from the request (like it did with the domain). That's logical but is not currently the way it works.

Thanks</original-body>
  <latest-body>I'm running a Rails 2.3.5 application (redmine).. and It is accessible only via https as configured in my nginx.

The problem is that some plugins use polymorphic_url helper to dynamically generate full URLs for relevant ajax requests. This lead to the Ajax always failing with 302 (redirect from http to https by nginx)

An alternative is to use polymorphic_path. and I'll do that for now.

But the point is, if I open browsing my web application through https, polymorphic_url should grab the protocol from the request (like it did with the domain). That's logical but is not currently the way it works.

Thanks</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm running a Rails 2.3.5 application (redmine).. and It is
accessible only via https as configured in my nginx.&lt;/p&gt;
&lt;p&gt;The problem is that some plugins use polymorphic_url helper to
dynamically generate full URLs for relevant ajax requests. This
lead to the Ajax always failing with 302 (redirect from http to
https by nginx)&lt;/p&gt;
&lt;p&gt;An alternative is to use polymorphic_path. and I'll do that for
now.&lt;/p&gt;
&lt;p&gt;But the point is, if I open browsing my web application through
https, polymorphic_url should grab the protocol from the request
(like it did with the domain). That's logical but is not currently
the way it works.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm running a Rails 2.3.5 application (redmine).. and It is accessible only via https as configured in my nginx.

The problem is that some plugins use polymorphic_url helper to dynamically generate full URLs for relevant ajax requests. This lead to the Ajax always failing with 302 (redirect from http to https by nginx)

An alternative is to use polymorphic_path. and I'll do that for now.

But the point is, if I open browsing my web application through https, polymorphic_url should grab the protocol from the request (like it did with the domain). That's logical but is not currently the way it works.

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm running a Rails 2.3.5 application (redmine).. and It is
accessible only via https as configured in my nginx.&lt;/p&gt;
&lt;p&gt;The problem is that some plugins use polymorphic_url helper to
dynamically generate full URLs for relevant ajax requests. This
lead to the Ajax always failing with 302 (redirect from http to
https by nginx)&lt;/p&gt;
&lt;p&gt;An alternative is to use polymorphic_path. and I'll do that for
now.&lt;/p&gt;
&lt;p&gt;But the point is, if I open browsing my web application through
https, polymorphic_url should grab the protocol from the request
(like it did with the domain). That's logical but is not currently
the way it works.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T10:44:50+01:00</created-at>
      <creator-id type="integer">64541</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5092</number>
      <permalink>polymorphic_url-does-not-take-https-into-consideration-when-generating-the-url</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;default protocol&quot; https routes &quot;url helpers&quot;</tag>
      <title>polymorphic_url does not take https into consideration when generating the URL</title>
      <updated-at type="datetime">2010-07-12T10:44:52+01:00</updated-at>
      <user-id type="integer">64541</user-id>
      <version type="integer">1</version>
      <user-name>modsaid</user-name>
      <creator-name>modsaid</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5092</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well this is not Rails issue. You should tell nginx to set X-Forwarded-For header so Rails will know that https is being used.

    location / {
      # ...
      proxy_set_header  X-Forwarded-For https
      # ...
    }</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well this is not Rails issue. You should tell nginx to set
X-Forwarded-For header so Rails will know that https is being
used.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;location / {
  # ...
  proxy_set_header  X-Forwarded-For https
  # ...
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-16T14:08:36+01:00</created-at>
      <creator-id type="integer">64541</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5092</number>
      <permalink>polymorphic_url-does-not-take-https-into-consideration-when-generating-the-url</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;default protocol&quot; https routes &quot;url helpers&quot;</tag>
      <title>polymorphic_url does not take https into consideration when generating the URL</title>
      <updated-at type="datetime">2010-09-16T14:08:40+01:00</updated-at>
      <user-id type="integer">86902</user-id>
      <version type="integer">2</version>
      <user-name>Marjan Krekoten'</user-name>
      <creator-name>modsaid</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5092</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking this `invalid` for now. Please try what Marjan describes. If it turns out to be a Rails issue I'll re-open.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking this &lt;code&gt;invalid&lt;/code&gt; for now. Please try what
Marjan describes. If it turns out to be a Rails issue I'll
re-open.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-25T18:50:25+01:00</created-at>
      <creator-id type="integer">64541</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5092</number>
      <permalink>polymorphic_url-does-not-take-https-into-consideration-when-generating-the-url</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;default protocol&quot; https routes &quot;url helpers&quot;</tag>
      <title>polymorphic_url does not take https into consideration when generating the URL</title>
      <updated-at type="datetime">2010-09-25T18:50:27+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">3</version>
      <user-name>David Trasbo</user-name>
      <creator-name>modsaid</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5092</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thank you Marjan

I'll try it</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thank you Marjan&lt;/p&gt;
&lt;p&gt;I'll try it&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-26T08:29:05+01:00</created-at>
      <creator-id type="integer">64541</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5092</number>
      <permalink>polymorphic_url-does-not-take-https-into-consideration-when-generating-the-url</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;default protocol&quot; https routes &quot;url helpers&quot;</tag>
      <title>polymorphic_url does not take https into consideration when generating the URL</title>
      <updated-at type="datetime">2010-09-26T08:29:08+01:00</updated-at>
      <user-id type="integer">64541</user-id>
      <version type="integer">4</version>
      <user-name>modsaid</user-name>
      <creator-name>modsaid</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5092</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
