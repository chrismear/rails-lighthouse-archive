<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:12+00:00</created-at>
  <creator-id type="integer">117146</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5691</number>
  <permalink>joins-is-ignored-in-a-find-within-an-habtm-association-extension</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>needs_more_info</tag>
  <title>:joins is ignored in a find within an habtm association extension</title>
  <updated-at type="datetime">2011-02-17T06:48:12+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Graeme Walters</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5691</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,
I've added some stuff to /web/rails/activerecord/test/cases/associations/habtm_join_table_test.rb 

I've attached a full diff, but here's the interesting bit.

@@@ ruby

class MyReader &lt; ActiveRecord::Base                                                                                                                   
  has_and_belongs_to_many :my_books do                                                                                                                
    def unreviewed_books                                                                                                                              
      self.find(:all,                                                                                                                                 
      :joins =&gt; &quot;left join my_book_reviews on my_books.my_book_id = my_book_reviews.my_book_id&quot;,                                                      
      :conditions =&gt; &quot;my_book_reviews.my_book_id is null&quot;)                                                                                            
    end                                                                                                                                               
  end                                                                                                                                                 
end         

@@@

When the unreviewed_books function is called, a query is built that incorporates the :conditions, but not the :joins - 

 SELECT * FROM &quot;my_books&quot;  INNER JOIN &quot;my_books_my_readers&quot; ON &quot;my_books&quot;.id = &quot;my_books_my_readers&quot;.my_book_id WHERE  (&quot;my_books_my_readers&quot;.my_reader_id = 1  AND (my_book_reviews.my_book_id is null))

Which then fails with missing FROM-clause entry for table &quot;my_book_reviews&quot;

Anyone else come across this or have any ideas?</original-body>
  <latest-body>Hi,
I've added some stuff to /web/rails/activerecord/test/cases/associations/habtm_join_table_test.rb 

I've attached a full diff, but here's the interesting bit.

@@@ ruby

class MyReader &lt; ActiveRecord::Base                                                                                                                   
  has_and_belongs_to_many :my_books do                                                                                                                
    def unreviewed_books                                                                                                                              
      self.find(:all,                                                                                                                                 
      :joins =&gt; &quot;left join my_book_reviews on my_books.my_book_id = my_book_reviews.my_book_id&quot;,                                                      
      :conditions =&gt; &quot;my_book_reviews.my_book_id is null&quot;)                                                                                            
    end                                                                                                                                               
  end                                                                                                                                                 
end         

@@@

When the unreviewed_books function is called, a query is built that incorporates the :conditions, but not the :joins - 

 SELECT * FROM &quot;my_books&quot;  INNER JOIN &quot;my_books_my_readers&quot; ON &quot;my_books&quot;.id = &quot;my_books_my_readers&quot;.my_book_id WHERE  (&quot;my_books_my_readers&quot;.my_reader_id = 1  AND (my_book_reviews.my_book_id is null))

Which then fails with missing FROM-clause entry for table &quot;my_book_reviews&quot;

Anyone else come across this or have any ideas?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
I've added some stuff to
/web/rails/activerecord/test/cases/associations/habtm_join_table_test.rb&lt;/p&gt;
&lt;p&gt;I've attached a full diff, but here's the interesting bit.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class MyReader &amp;lt; ActiveRecord::Base                                                                                                                   
  has_and_belongs_to_many :my_books do                                                                                                                
    def unreviewed_books                                                                                                                              
      self.find(:all,                                                                                                                                 
      :joins =&amp;gt; &quot;left join my_book_reviews on my_books.my_book_id = my_book_reviews.my_book_id&quot;,                                                      
      :conditions =&amp;gt; &quot;my_book_reviews.my_book_id is null&quot;)                                                                                            
    end                                                                                                                                               
  end                                                                                                                                                 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When the unreviewed_books function is called, a query is built
that incorporates the :conditions, but not the :joins -&lt;/p&gt;
&lt;p&gt;SELECT * FROM &quot;my_books&quot; INNER JOIN &quot;my_books_my_readers&quot; ON
&quot;my_books&quot;.id = &quot;my_books_my_readers&quot;.my_book_id WHERE
(&quot;my_books_my_readers&quot;.my_reader_id = 1 AND
(my_book_reviews.my_book_id is null))&lt;/p&gt;
&lt;p&gt;Which then fails with missing FROM-clause entry for table
&quot;my_book_reviews&quot;&lt;/p&gt;
&lt;p&gt;Anyone else come across this or have any ideas?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,
I've added some stuff to /web/rails/activerecord/test/cases/associations/habtm_join_table_test.rb 

I've attached a full diff, but here's the interesting bit.

@@@ ruby

class MyReader &lt; ActiveRecord::Base                                                                                                                   
  has_and_belongs_to_many :my_books do                                                                                                                
    def unreviewed_books                                                                                                                              
      self.find(:all,                                                                                                                                 
      :joins =&gt; &quot;left join my_book_reviews on my_books.my_book_id = my_book_reviews.my_book_id&quot;,                                                      
      :conditions =&gt; &quot;my_book_reviews.my_book_id is null&quot;)                                                                                            
    end                                                                                                                                               
  end                                                                                                                                                 
end         

@@@

When the unreviewed_books function is called, a query is built that incorporates the :conditions, but not the :joins - 

 SELECT * FROM &quot;my_books&quot;  INNER JOIN &quot;my_books_my_readers&quot; ON &quot;my_books&quot;.id = &quot;my_books_my_readers&quot;.my_book_id WHERE  (&quot;my_books_my_readers&quot;.my_reader_id = 1  AND (my_book_reviews.my_book_id is null))

Which then fails with missing FROM-clause entry for table &quot;my_book_reviews&quot;

Anyone else come across this or have any ideas?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
I've added some stuff to
/web/rails/activerecord/test/cases/associations/habtm_join_table_test.rb&lt;/p&gt;
&lt;p&gt;I've attached a full diff, but here's the interesting bit.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class MyReader &amp;lt; ActiveRecord::Base                                                                                                                   
  has_and_belongs_to_many :my_books do                                                                                                                
    def unreviewed_books                                                                                                                              
      self.find(:all,                                                                                                                                 
      :joins =&amp;gt; &quot;left join my_book_reviews on my_books.my_book_id = my_book_reviews.my_book_id&quot;,                                                      
      :conditions =&amp;gt; &quot;my_book_reviews.my_book_id is null&quot;)                                                                                            
    end                                                                                                                                               
  end                                                                                                                                                 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When the unreviewed_books function is called, a query is built
that incorporates the :conditions, but not the :joins -&lt;/p&gt;
&lt;p&gt;SELECT * FROM &quot;my_books&quot; INNER JOIN &quot;my_books_my_readers&quot; ON
&quot;my_books&quot;.id = &quot;my_books_my_readers&quot;.my_book_id WHERE
(&quot;my_books_my_readers&quot;.my_reader_id = 1 AND
(my_book_reviews.my_book_id is null))&lt;/p&gt;
&lt;p&gt;Which then fails with missing FROM-clause entry for table
&quot;my_book_reviews&quot;&lt;/p&gt;
&lt;p&gt;Anyone else come across this or have any ideas?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-23T16:58:28+01:00</created-at>
      <creator-id type="integer">117146</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5691</number>
      <permalink>joins-is-ignored-in-a-find-within-an-habtm-association-extension</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>:joins is ignored in a find within an habtm association extension</title>
      <updated-at type="datetime">2010-09-23T17:02:36+01:00</updated-at>
      <user-id type="integer">117146</user-id>
      <version type="integer">1</version>
      <user-name>Graeme Walters</user-name>
      <creator-name>Graeme Walters</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5691</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Please submit a new patch which can be applied against master. Also correct place to add these tests is &quot;has_and_belongs_to_many_associations_test.rb&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please submit a new patch which can be applied against master.
Also correct place to add these tests is
&quot;has_and_belongs_to_many_associations_test.rb&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-26T04:43:48+01:00</created-at>
      <creator-id type="integer">117146</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5691</number>
      <permalink>joins-is-ignored-in-a-find-within-an-habtm-association-extension</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>needs_more_info</tag>
      <title>:joins is ignored in a find within an habtm association extension</title>
      <updated-at type="datetime">2010-09-26T04:43:51+01:00</updated-at>
      <user-id type="integer">2053</user-id>
      <version type="integer">2</version>
      <user-name>gnufied</user-name>
      <creator-name>Graeme Walters</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5691</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:59:06+00:00</created-at>
      <creator-id type="integer">117146</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5691</number>
      <permalink>joins-is-ignored-in-a-find-within-an-habtm-association-extension</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>needs_more_info</tag>
      <title>:joins is ignored in a find within an habtm association extension</title>
      <updated-at type="datetime">2011-02-02T18:46:58+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Graeme Walters</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5691</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:59:07+00:00</created-at>
      <creator-id type="integer">117146</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5691</number>
      <permalink>joins-is-ignored-in-a-find-within-an-habtm-association-extension</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>needs_more_info</tag>
      <title>:joins is ignored in a find within an habtm association extension</title>
      <updated-at type="datetime">2011-02-02T18:47:06+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Graeme Walters</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5691</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:08:38+00:00</created-at>
      <creator-id type="integer">117146</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5691</number>
      <permalink>joins-is-ignored-in-a-find-within-an-habtm-association-extension</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>needs_more_info</tag>
      <title>:joins is ignored in a find within an habtm association extension</title>
      <updated-at type="datetime">2011-02-17T06:48:12+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">5</version>
      <user-name>gfh</user-name>
      <creator-name>Graeme Walters</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5691</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>8366e56c561903d8b2a88de02cdbc8e7e74f8b5f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-23T16:58:28+01:00</created-at>
      <filename>active_record_habtm_test.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">687949</id>
      <size type="integer">2104</size>
      <uploader-id type="integer">117146</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/687949/active_record_habtm_test.patch</url>
    </attachment>
  </attachments>
</ticket>
