From da4a4936aa0218bfc2511646162687de6e121698 Mon Sep 17 00:00:00 2001
From: Nobuhiro IMAI <nov@yo.rim.or.jp>
Date: Fri, 23 Oct 2009 21:41:50 +0900
Subject: [PATCH 2/2] update RDoc for :use_existing_record option

---
 .../lib/active_record/nested_attributes.rb         |   22 +++++++++++++++++++-
 1 files changed, 21 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/nested_attributes.rb b/activerecord/lib/active_record/nested_attributes.rb
index d69f375..b2d9249 100644
--- a/activerecord/lib/active_record/nested_attributes.rb
+++ b/activerecord/lib/active_record/nested_attributes.rb
@@ -59,6 +59,21 @@ module ActiveRecord
     #   member.update_attributes params['member']
     #   member.avatar.icon # => 'sad'
     #
+    # If you set <tt>use_existing_record</tt> key to +true+, update
+    # the currently associated record if exists. If not associated,
+    # new record will be built as same as above.
+    #
+    #   class Member < ActiveRecord::Base
+    #     has_one :avatar
+    #     accepts_nested_attributes_for :avatar, :use_existing_record => true
+    #   end
+    #
+    #   member.avatar.id #=> 2
+    #   member.avatar.icon #=> 'sad'
+    #   params = { :member => { :name => 'Jack', :avatar_attributes => { :icon => 'smiling' } } }
+    #   member.update_attributes(params[:member])
+    #   member.avatar.icon #=> 'smiling'
+    #
     # By default you will only be able to set and update attributes on the
     # associated model. If you want to destroy the associated model through the
     # attributes hash, you have to enable it first using the
@@ -212,6 +227,10 @@ module ActiveRecord
       #   nested attributes array exceeds the specified limit, NestedAttributes::TooManyRecords
       #   exception is raised. If omitted, any number associations can be processed.
       #   Note that the :limit option is only applicable to one-to-many associations.
+      # [:use_existing_record]
+      #   Allows you to update the currently associated record if exists,
+      #   without specifying associated record's id.
+      #   Note that the :use_existing_record option is only applicable to one-to-one associations.
       #
       # Examples:
       #   # creates avatar_attributes=
@@ -285,7 +304,8 @@ module ActiveRecord
     # Assigns the given attributes to the association.
     #
     # If the given attributes include an <tt>:id</tt> that matches the existing
-    # recordâ€™s id, then the existing record will be modified. Otherwise a new
+    # record's id, or <tt>:use_existing_record</tt> in options is set to
+    # +true+, then the existing record will be modified. Otherwise a new
     # record will be built.
     #
     # If the given attributes include a matching <tt>:id</tt> attribute _and_ a
-- 
1.6.5

