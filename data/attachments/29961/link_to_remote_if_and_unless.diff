From ef7e266ce276a6e6f587c34994d7f16a11981d72 Mon Sep 17 00:00:00 2001
From: clouder User <clouder@clouder-desktop.(none)>
Date: Mon, 30 Jun 2008 01:55:20 -0600
Subject: [PATCH] link_to_remote_if and link_to_remote_unless

---
 .../lib/action_view/helpers/prototype_helper.rb    |   24 ++++++++++++++++++++
 actionpack/test/template/prototype_helper_test.rb  |   18 +++++++++++++++
 2 files changed, 42 insertions(+), 0 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/prototype_helper.rb b/actionpack/lib/action_view/helpers/prototype_helper.rb
index a7c3b9d..1516c95 100644
--- a/actionpack/lib/action_view/helpers/prototype_helper.rb
+++ b/actionpack/lib/action_view/helpers/prototype_helper.rb
@@ -255,6 +255,30 @@ module ActionView
         link_to_function(name, remote_function(options), html_options || options.delete(:html))
       end
 
+      # A wrapper for link_to_remote that returns a link to a remote action if 
+      # +condition+ is true.  Otherwise only the name is returned. To specialize the
+      # default behavior, you can pass a block that accepts the name or the full
+      # argument list for link_to_remote_if.
+      def link_to_remote_if(condition, name, options = {}, html_options = nil, &block)
+        if condition
+          link_to_remote(name, options, html_options)
+        else
+          if block_given?
+            block.arity <= 1 ? yield(name) : yield(name, options, html_options)
+          else
+            name
+          end
+        end
+      end
+
+      # A wrapper for link_to_remote that returns a link to a remote action unless
+      # +condition+ is true.  Otherwise only the name is returned.  To specialize
+      # the default behavior, you can pass a block that accepts the name or the full
+      # argument list for link_to_remote_if
+      def link_to_remote_unless(condition, name, options = {}, html_options = nil, &block)
+        link_to_remote_if !condition, name, options, html_options, &block
+      end
+
       # Periodically calls the specified url (<tt>options[:url]</tt>) every
       # <tt>options[:frequency]</tt> seconds (default is 10). Usually used to
       # update a specified div (<tt>options[:update]</tt>) with the results
diff --git a/actionpack/test/template/prototype_helper_test.rb b/actionpack/test/template/prototype_helper_test.rb
index 60b83b4..9cf2513 100644
--- a/actionpack/test/template/prototype_helper_test.rb
+++ b/actionpack/test/template/prototype_helper_test.rb
@@ -79,6 +79,24 @@ class PrototypeHelperTest < PrototypeHelperBaseTest
       link_to_remote("Remote outauthor", :failure => "alert(request.responseText)", :url => { :action => "whatnot", :a => '10', :b => '20' })
   end
 
+  def test_link_to_remote_if
+    assert_equal "There's Nothing More", link_to_remote_if(false, "There's Nothing More", :url => { :action => "whatnot" })
+    assert_dom_equal %(<a href=\"#\" onclick=\"new Ajax.Request('http://www.example.com/whatnot', {asynchronous:true, evalScripts:true}); return false;\">There's More</a>),
+      link_to_remote_if(true, "There's More", :url => { :action => "whatnot" })
+    assert_dom_equal %(<a href=\"login\">Login to View This</a>), link_to_remote_if(false, "View This", :url => { :action => "whatnot" }) {
+      link_to("Login to View This", "login")
+    }
+  end
+
+  def test_link_to_remote_unless
+    assert_equal "There's Nothing More", link_to_remote_unless(true, "There's Nothing More", :url => { :action => "whatnot" })
+    assert_dom_equal %(<a href=\"#\" onclick=\"new Ajax.Request('http://www.example.com/whatnot', {asynchronous:true, evalScripts:true}); return false;\">There's More</a>),
+      link_to_remote_unless(false, "There's More", { :url => { :action => "whatnot" } })
+    assert_dom_equal %(<a href=\"login\">Login to View This</a>), link_to_remote_unless(true, "View This", :url => { :action => "whatnot" }) {
+      link_to("Login to View This", "login")
+    }
+  end
+
   def test_link_to_remote_html_options
     assert_dom_equal %(<a class=\"fine\" href=\"#\" onclick=\"new Ajax.Request('http://www.example.com/whatnot', {asynchronous:true, evalScripts:true}); return false;\">Remote outauthor</a>),
       link_to_remote("Remote outauthor", { :url => { :action => "whatnot"  }, :html => { :class => "fine" } })
-- 
1.5.4.3

