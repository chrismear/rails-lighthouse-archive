<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-19T14:15:46+01:00</created-at>
  <creator-id type="integer">10014</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1331</number>
  <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord edge enhancement named_scope patch</tag>
  <title>Allow arbitrary named_scope instances to be merged</title>
  <updated-at type="datetime">2010-07-19T14:15:46+01:00</updated-at>
  <user-id type="integer">10014</user-id>
  <version type="integer">16</version>
  <user-name>James Le Cuirot</user-name>
  <creator-name>James Le Cuirot</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I was rather surprised to find that given you can do this...

@@@ ruby
x = Shirt.red
y = x.dry_clean_only
y.all
@@@

You cannot also do something like this...

@@@ ruby
x = Shirt.red
y = Shirt.dry_clean_only
z = x.merge(y)
z.all
@@@

The usefulness of this might not be obvious from this example but it has helped make my code a bit less complicated. I have attached a patch with a testcase.

My friend said that _merge_ was a confusing method name to use but I disagree. It is at least not defined by Array or Enumerable so it should be safe to use. If you'd rather use something else, that's fine, I don't care as long as it works. :)

It is important to note which scope takes precedence for named scope extensions. When doing x.y, it is y that applies. For x.merge(y), I felt it was more intuitive that x applies. I'm not using extensions (yet) so again, I don't really mind either way.</original-body>
  <latest-body>I was rather surprised to find that given you can do this...

@@@ ruby
x = Shirt.red
y = x.dry_clean_only
y.all
@@@

You cannot also do something like this...

@@@ ruby
x = Shirt.red
y = Shirt.dry_clean_only
z = x.merge(y)
z.all
@@@

The usefulness of this might not be obvious from this example but it has helped make my code a bit less complicated. I have attached a patch with a testcase.

My friend said that _merge_ was a confusing method name to use but I disagree. It is at least not defined by Array or Enumerable so it should be safe to use. If you'd rather use something else, that's fine, I don't care as long as it works. :)

It is important to note which scope takes precedence for named scope extensions. When doing x.y, it is y that applies. For x.merge(y), I felt it was more intuitive that x applies. I'm not using extensions (yet) so again, I don't really mind either way.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I was rather surprised to find that given you can do this...&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
x = Shirt.red
y = x.dry_clean_only
y.all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You cannot also do something like this...&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
x = Shirt.red
y = Shirt.dry_clean_only
z = x.merge(y)
z.all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The usefulness of this might not be obvious from this example
but it has helped make my code a bit less complicated. I have
attached a patch with a testcase.&lt;/p&gt;
&lt;p&gt;My friend said that &lt;em&gt;merge&lt;/em&gt; was a confusing method name
to use but I disagree. It is at least not defined by Array or
Enumerable so it should be safe to use. If you'd rather use
something else, that's fine, I don't care as long as it works.
:)&lt;/p&gt;
&lt;p&gt;It is important to note which scope takes precedence for named
scope extensions. When doing x.y, it is y that applies. For
x.merge(y), I felt it was more intuitive that x applies. I'm not
using extensions (yet) so again, I don't really mind either
way.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I was rather surprised to find that given you can do this...

@@@ ruby
x = Shirt.red
y = x.dry_clean_only
y.all
@@@

You cannot also do something like this...

@@@ ruby
x = Shirt.red
y = Shirt.dry_clean_only
z = x.merge(y)
z.all
@@@

The usefulness of this might not be obvious from this example but it has helped make my code a bit less complicated. I have attached a patch with a testcase.

My friend said that _merge_ was a confusing method name to use but I disagree. It is at least not defined by Array or Enumerable so it should be safe to use. If you'd rather use something else, that's fine, I don't care as long as it works. :)

It is important to note which scope takes precedence for named scope extensions. When doing x.y, it is y that applies. For x.merge(y), I felt it was more intuitive that x applies. I'm not using extensions (yet) so again, I don't really mind either way.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was rather surprised to find that given you can do this...&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
x = Shirt.red
y = x.dry_clean_only
y.all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You cannot also do something like this...&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
x = Shirt.red
y = Shirt.dry_clean_only
z = x.merge(y)
z.all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The usefulness of this might not be obvious from this example
but it has helped make my code a bit less complicated. I have
attached a patch with a testcase.&lt;/p&gt;
&lt;p&gt;My friend said that &lt;em&gt;merge&lt;/em&gt; was a confusing method name
to use but I disagree. It is at least not defined by Array or
Enumerable so it should be safe to use. If you'd rather use
something else, that's fine, I don't care as long as it works.
:)&lt;/p&gt;
&lt;p&gt;It is important to note which scope takes precedence for named
scope extensions. When doing x.y, it is y that applies. For
x.merge(y), I felt it was more intuitive that x applies. I'm not
using extensions (yet) so again, I don't really mind either
way.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T10:23:54+00:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2008-11-05T10:24:00+00:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">1</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's the same patch for 2.1 if anyone wants it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's the same patch for 2.1 if anyone wants it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T10:24:47+00:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2008-11-05T10:24:52+00:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">2</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>And again for 2.2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;And again for 2.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-26T01:18:48+00:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-02-26T01:18:50+00:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">3</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T14:10:00+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord edge enhancement named_scope patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-05T14:10:04+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">4</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>+1 for the feature - I've definitely run into use cases where I've wanted this, but I'm not sure I agree with the implementation

Also, I could not merge this into 2-3-stable cleanly

I'm not wowed by the implementation - maybe we need a way to chain them ie. Shirt.red.and.dry_clean_only or Shirt.red_and_dry_clean_only</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for the feature - I've definitely run into use cases where
I've wanted this, but I'm not sure I agree with the
implementation&lt;/p&gt;
&lt;p&gt;Also, I could not merge this into 2-3-stable cleanly&lt;/p&gt;
&lt;p&gt;I'm not wowed by the implementation - maybe we need a way to
chain them ie. Shirt.red.and.dry_clean_only or
Shirt.red_and_dry_clean_only&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T23:07:16+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-08T23:07:21+01:00</updated-at>
      <user-id type="integer">22242</user-id>
      <version type="integer">5</version>
      <user-name>Dan Pickett</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I'll try and post a new patch today. I know that this works with 2.3. I'll have a think about your suggestion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll try and post a new patch today. I know that this works with
2.3. I'll have a think about your suggestion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T10:29:47+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T10:29:53+01:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">6</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Here's the patch against 2-3-stable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's the patch against 2-3-stable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T15:08:56+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T15:08:59+01:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">7</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Dan, had a think about your suggestion but it doesn't really make sense. It's already possible to do stuff like Shirt.red.dry_clean_only. What I'm asking for is the ability to merge two already-existing scope instances. In my example, you can't just do &quot;z = x.y&quot; because that would be treating y as a method name, not a local variable name.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Dan, had a think about your suggestion but it doesn't really
make sense. It's already possible to do stuff like
Shirt.red.dry_clean_only. What I'm asking for is the ability to
merge two already-existing scope instances. In my example, you
can't just do &quot;z = x.y&quot; because that would be treating y as a
method name, not a local variable name.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T15:19:18+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T15:19:21+01:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">8</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@james, Not clear what you are after.

You can &quot;chain named_scopes&quot;:http://ryandaigle.com/articles/2008/3/24/what-s-new-in-edge-rails-has-finder-functionality for a while now, but you want AND on the return record set ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@james, Not clear what you are after.&lt;/p&gt;
&lt;p&gt;You can &lt;a href=
&quot;http://ryandaigle.com/articles/2008/3/24/what-s-new-in-edge-rails-has-finder-functionality&quot;&gt;
chain named_scopes&lt;/a&gt; for a while now, but you want AND on the
return record set ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T16:20:33+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T16:20:39+01:00</updated-at>
      <user-id type="integer">10379</user-id>
      <version type="integer">9</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@Elad, I think he's looking for the union of two named scopes.  So if we had a named scope to return all green M&amp;M's and a named scope to return all red M&amp;M's, he'd want to be able to quickly get the collection of M&amp;M's that are either red or green (the union of the two sets).</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Elad, I think he's looking for the union of two named scopes.
So if we had a named scope to return all green M&amp;amp;M's and a
named scope to return all red M&amp;amp;M's, he'd want to be able to
quickly get the collection of M&amp;amp;M's that are either red or
green (the union of the two sets).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T16:24:42+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T16:24:43+01:00</updated-at>
      <user-id type="integer">24346</user-id>
      <version type="integer">10</version>
      <user-name>John Trupiano</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I'm not sure I'd use the term &quot;union&quot; because conditions in one scope might remove records included by the other scope. I just want to merge two scopes together, like you do with chaining (it would give the same result), but for scopes that have already been assigned to variables. It's difficult to give a useful example.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure I'd use the term &quot;union&quot; because conditions in one
scope might remove records included by the other scope. I just want
to merge two scopes together, like you do with chaining (it would
give the same result), but for scopes that have already been
assigned to variables. It's difficult to give a useful example.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T16:40:08+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T16:40:10+01:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">11</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>The name doesn't make a whole lot of sense - I was really hoping you'd written an implementation of scope union (joining with OR) rather than this.

This is also going (I think) to fail oddly if you try to merge in a previously chained scope:

@@@ ruby
x = Shirt.red.cotton
y = Shirt.dry_clean_only

z = y.merge(x)
@@@

Because of that, I'm not sure what the advantage of merge over just chaining the scopes properly in the first place is.

Note that the most common case for this (search scopes and such) can work like this:

@@@ ruby
proxy = Shirt
[:red, :cotton, :dry_clean_only].each do |s|
  proxy = proxy.send(s) unless params[s].blank?
end
@shirts = proxy.all # or paginate - whatever
@@@

Maybe you could give a more convincing use case where chaining doesn't work?</body>
      <body-html>&lt;div&gt;&lt;p&gt;The name doesn't make a whole lot of sense - I was really hoping
you'd written an implementation of scope union (joining with OR)
rather than this.&lt;/p&gt;
&lt;p&gt;This is also going (I think) to fail oddly if you try to merge
in a previously chained scope:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;x = Shirt.red.cotton
y = Shirt.dry_clean_only

z = y.merge(x)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Because of that, I'm not sure what the advantage of merge over
just chaining the scopes properly in the first place is.&lt;/p&gt;
&lt;p&gt;Note that the most common case for this (search scopes and such)
can work like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;proxy = Shirt
[:red, :cotton, :dry_clean_only].each do |s|
  proxy = proxy.send(s) unless params[s].blank?
end
@shirts = proxy.all # or paginate - whatever&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Maybe you could give a more convincing use case where chaining
doesn't work?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T18:36:12+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T18:36:18+01:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">12</version>
      <user-name>Matt Jones</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>verified

Patch applies cleanly to 2-3-stable. I assume the tests are passing, I'm having some problems getting Ruby 1.9 and 1.8 play nicely. +1 on the idea, it may need more tests, though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified&lt;/p&gt;
&lt;p&gt;Patch applies cleanly to 2-3-stable. I assume the tests are
passing, I'm having some problems getting Ruby 1.9 and 1.8 play
nicely. +1 on the idea, it may need more tests, though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T20:03:19+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T20:03:24+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">13</version>
      <user-name>David Trasbo</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I agree with Matt, i don't see where this #merge is going to be any different from chaining scopes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with Matt, i don't see where this #merge is going to be
any different from chaining scopes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T21:27:28+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T21:27:31+01:00</updated-at>
      <user-id type="integer">10379</user-id>
      <version type="integer">14</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>This is a new feature that won't be added to Rails 2.3. For Rails 3.0 (master), Emilio (miloops) is already working on something similar in his GSoC project, since he's adding relations to ActiveRecord.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a new feature that won't be added to Rails 2.3. For
Rails 3.0 (master), Emilio (miloops) is already working on
something similar in his GSoC project, since he's adding relations
to ActiveRecord.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T23:01:00+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bugmash edge enhancement named_scope patch
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T23:01:02+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">15</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>That's fair enough. Thanks for the info.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's fair enough. Thanks for the info.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T23:09:16+01:00</created-at>
      <creator-id type="integer">10014</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1331</number>
      <permalink>allow-arbitrary-named_scope-instances-to-be-merged</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord edge enhancement named_scope patch</tag>
      <title>Allow arbitrary named_scope instances to be merged</title>
      <updated-at type="datetime">2009-08-09T23:09:19+01:00</updated-at>
      <user-id type="integer">10014</user-id>
      <version type="integer">16</version>
      <user-name>James Le Cuirot</user-name>
      <creator-name>James Le Cuirot</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1331</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>937a447e280548bd9fc16552c21abc5d339871b5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-05T10:24:47+00:00</created-at>
      <filename>named_scope_merge_2_1.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">59491</id>
      <size type="integer">2109</size>
      <uploader-id type="integer">10014</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/59491/named_scope_merge_2_1.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>3529747888978bb28934029215bcdccbd362fdce</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-26T01:18:48+00:00</created-at>
      <filename>named_scope_merge_2_2.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">93165</id>
      <size type="integer">2183</size>
      <uploader-id type="integer">10014</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/93165/named_scope_merge_2_2.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>ee642667b4bf7a78ccac1a363dc5e04c8822c888</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T15:08:56+01:00</created-at>
      <filename>named_scope_merge.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239360</id>
      <size type="integer">2179</size>
      <uploader-id type="integer">10014</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239360/named_scope_merge.patch</url>
    </attachment>
  </attachments>
</ticket>
