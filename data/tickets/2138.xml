<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-05T18:48:45+00:00</created-at>
  <creator-id type="integer">25882</creator-id>
  <milestone-due-on type="datetime">2009-01-31T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2138</number>
  <permalink>teach-activesupportmemoizable-about-private-methods</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activesupport active_support memoizable memoization patch</tag>
  <title>Teach ActiveSupport::Memoizable about private methods</title>
  <updated-at type="datetime">2009-03-06T14:44:42+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>Niels Ganser</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2138</url>
  <priority-name>Medium</priority-name>
  <original-body>Currently, if you define a private method and later call memoize :your_method, the replacement methods created by Memoizable will be public. E.g.

@@@ ruby
class Person
  extend ActiveSupport::Memoizable
  private
  def is_bald?; end
  memoize :is_bald?
end

Person.new.is_bald?
@@@

will **not** raise *NoMethodError: private method `is_bald?' called*.

The attached patch causes ActiveSupport::Memoizable to prepend all the re-definition of your_method with the *private* keyword if the original your_method had been a private_instance_method in the first place.

Tests are included.</original-body>
  <latest-body>Currently, if you define a private method and later call memoize :your_method, the replacement methods created by Memoizable will be public. E.g.

@@@ ruby
class Person
  extend ActiveSupport::Memoizable
  private
  def is_bald?; end
  memoize :is_bald?
end

Person.new.is_bald?
@@@

will **not** raise *NoMethodError: private method `is_bald?' called*.

The attached patch causes ActiveSupport::Memoizable to prepend all the re-definition of your_method with the *private* keyword if the original your_method had been a private_instance_method in the first place.

Tests are included.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Currently, if you define a private method and later call memoize
:your_method, the replacement methods created by Memoizable will be
public. E.g.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person
  extend ActiveSupport::Memoizable
  private
  def is_bald?; end
  memoize :is_bald?
end

Person.new.is_bald?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will &lt;strong&gt;not&lt;/strong&gt; raise *NoMethodError: private method
&lt;code&gt;is_bald?' called*.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The attached patch causes ActiveSupport::Memoizable to prepend
all the re-definition of your_method with the &lt;em&gt;private&lt;/em&gt;
keyword if the original your_method had been a
private_instance_method in the first place.&lt;/p&gt;
&lt;p&gt;Tests are included.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Currently, if you define a private method and later call memoize :your_method, the replacement methods created by Memoizable will be public. E.g.

@@@ ruby
class Person
  extend ActiveSupport::Memoizable
  private
  def is_bald?; end
  memoize :is_bald?
end

Person.new.is_bald?
@@@

will **not** raise *NoMethodError: private method `is_bald?' called*.

The attached patch causes ActiveSupport::Memoizable to prepend all the re-definition of your_method with the *private* keyword if the original your_method had been a private_instance_method in the first place.

Tests are included.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Currently, if you define a private method and later call memoize
:your_method, the replacement methods created by Memoizable will be
public. E.g.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person
  extend ActiveSupport::Memoizable
  private
  def is_bald?; end
  memoize :is_bald?
end

Person.new.is_bald?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will &lt;strong&gt;not&lt;/strong&gt; raise *NoMethodError: private method
&lt;code&gt;is_bald?' called*.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The attached patch causes ActiveSupport::Memoizable to prepend
all the re-definition of your_method with the &lt;em&gt;private&lt;/em&gt;
keyword if the original your_method had been a
private_instance_method in the first place.&lt;/p&gt;
&lt;p&gt;Tests are included.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-05T18:48:45+00:00</created-at>
      <creator-id type="integer">25882</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2138</number>
      <permalink>teach-activesupportmemoizable-about-private-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport active_support memoizable memoization patch</tag>
      <title>Teach ActiveSupport::Memoizable about private methods</title>
      <updated-at type="datetime">2009-03-05T18:48:50+00:00</updated-at>
      <user-id type="integer">25882</user-id>
      <version type="integer">1</version>
      <user-name>Niels Ganser</user-name>
      <creator-name>Niels Ganser</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2138</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

I've never memoized a private method, but would expect it to stay private.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;I've never memoized a private method, but would expect it to
stay private.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T00:07:38+00:00</created-at>
      <creator-id type="integer">25882</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2138</number>
      <permalink>teach-activesupportmemoizable-about-private-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport active_support memoizable memoization patch</tag>
      <title>Teach ActiveSupport::Memoizable about private methods</title>
      <updated-at type="datetime">2009-03-06T00:07:39+00:00</updated-at>
      <user-id type="integer">37309</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Angilly</user-name>
      <creator-name>Niels Ganser</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2138</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T10:37:37+00:00</created-at>
      <creator-id type="integer">25882</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2138</number>
      <permalink>teach-activesupportmemoizable-about-private-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport active_support memoizable memoization patch</tag>
      <title>Teach ActiveSupport::Memoizable about private methods</title>
      <updated-at type="datetime">2009-03-06T10:37:42+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Niels Ganser</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2138</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T14:41:45+00:00</created-at>
      <creator-id type="integer">25882</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2138</number>
      <permalink>teach-activesupportmemoizable-about-private-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport active_support memoizable memoization patch</tag>
      <title>Teach ActiveSupport::Memoizable about private methods</title>
      <updated-at type="datetime">2009-03-06T14:41:54+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>Niels Ganser</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2138</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [c67d25e3c4e636d7c94909a7398231a634accf46]) Ensure ActiveSupport::Memoizable respects private methods. [#2138 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/c67d25e3c4e636d7c94909a7398231a634accf46</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [c67d25e3c4e636d7c94909a7398231a634accf46]) Ensure
ActiveSupport::Memoizable respects private methods. [&lt;a href=&quot;/projects/8994/tickets/2138&quot; title=&quot;Ticket #2138&quot;&gt;#2138&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/c67d25e3c4e636d7c94909a7398231a634accf46&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-06T14:44:41+00:00</created-at>
      <creator-id type="integer">25882</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2138</number>
      <permalink>teach-activesupportmemoizable-about-private-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport active_support memoizable memoization patch</tag>
      <title>Teach ActiveSupport::Memoizable about private methods</title>
      <updated-at type="datetime">2009-03-06T14:44:42+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Niels Ganser</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2138</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a7f097fe8b1d7dcee87fb083a6f1738058aae308</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-05T18:48:45+00:00</created-at>
      <filename>0001-ActiveSupport-Memoizable-now-respects-the-private-k.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">96532</id>
      <size type="integer">3243</size>
      <uploader-id type="integer">25882</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/96532/0001-ActiveSupport-Memoizable-now-respects-the-private-k.patch</url>
    </attachment>
  </attachments>
</ticket>
