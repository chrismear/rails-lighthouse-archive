<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-23T07:05:31+01:00</created-at>
  <creator-id type="integer">73543</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3390</number>
  <permalink>singular-form-problem</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.2</tag>
  <title>Singular form problem</title>
  <updated-at type="datetime">2010-05-23T07:05:51+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">3</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>coffeeaddict_nl</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3390</url>
  <priority-name>Low</priority-name>
  <original-body>Hi,

I have a model with a user and many of his drives.

  class User &lt; ActiveRecord::Base
    has_many :drives
  end

  class Drive &lt; ActiveRecord:: Base
    belongs_to :user
  end


Now when I want to add another drive to the user like so:

  drive = Drive.new()
  # ...
  user =  user.find(x)
  user.drives &lt;&lt; drive

This will create this error:

  NameError: uninitialized constant User::Drife
          from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/
  dependencies.rb:105:in `const_missing'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba
  se.rb:2204:in `compute_type'
          from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/
  core_ext/kernel/reporting.rb:11:in `silence_warnings'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba
  se.rb:2200:in `compute_type'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:156:in `send'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:156:in `klass'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:187:in `quoted_table_name'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations/has_many_association.rb:96:in `construct_sql'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations/association_collection.rb:21:in `initialize'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations.rb:1277:in `new'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations.rb:1277:in `drives'
          from (irb):3</original-body>
  <latest-body>Hi,

I have a model with a user and many of his drives.

  class User &lt; ActiveRecord::Base
    has_many :drives
  end

  class Drive &lt; ActiveRecord:: Base
    belongs_to :user
  end


Now when I want to add another drive to the user like so:

  drive = Drive.new()
  # ...
  user =  user.find(x)
  user.drives &lt;&lt; drive

This will create this error:

  NameError: uninitialized constant User::Drife
          from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/
  dependencies.rb:105:in `const_missing'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba
  se.rb:2204:in `compute_type'
          from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/
  core_ext/kernel/reporting.rb:11:in `silence_warnings'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba
  se.rb:2200:in `compute_type'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:156:in `send'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:156:in `klass'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:187:in `quoted_table_name'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations/has_many_association.rb:96:in `construct_sql'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations/association_collection.rb:21:in `initialize'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations.rb:1277:in `new'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations.rb:1277:in `drives'
          from (irb):3</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I have a model with a user and many of his drives.&lt;/p&gt;
&lt;p&gt;class User &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :drives&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Drive &amp;lt; ActiveRecord:: Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;belongs_to :user&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Now when I want to add another drive to the user like so:&lt;/p&gt;
&lt;p&gt;drive = Drive.new() # ... user = user.find(x) user.drives
&amp;lt;&amp;lt; drive&lt;/p&gt;
&lt;p&gt;This will create this error:&lt;/p&gt;
&lt;p&gt;NameError: uninitialized constant User::Drife&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;dependencies.rb:105:in &lt;code&gt;const_missing'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;se.rb:2204:in &lt;code&gt;compute_type'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;core_ext/kernel/reporting.rb:11:in
&lt;code&gt;silence_warnings'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;se.rb:2200:in &lt;code&gt;compute_type'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;flection.rb:156:in &lt;code&gt;send'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;flection.rb:156:in &lt;code&gt;klass'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;flection.rb:187:in &lt;code&gt;quoted_table_name'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations/has_many_association.rb:96:in
&lt;code&gt;construct_sql'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations/association_collection.rb:21:in
&lt;code&gt;initialize'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations.rb:1277:in &lt;code&gt;new'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations.rb:1277:in &lt;code&gt;drives'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from (irb):3&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

I have a model with a user and many of his drives.

  class User &lt; ActiveRecord::Base
    has_many :drives
  end

  class Drive &lt; ActiveRecord:: Base
    belongs_to :user
  end


Now when I want to add another drive to the user like so:

  drive = Drive.new()
  # ...
  user =  user.find(x)
  user.drives &lt;&lt; drive

This will create this error:

  NameError: uninitialized constant User::Drife
          from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/
  dependencies.rb:105:in `const_missing'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba
  se.rb:2204:in `compute_type'
          from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/
  core_ext/kernel/reporting.rb:11:in `silence_warnings'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba
  se.rb:2200:in `compute_type'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:156:in `send'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:156:in `klass'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re
  flection.rb:187:in `quoted_table_name'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations/has_many_association.rb:96:in `construct_sql'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations/association_collection.rb:21:in `initialize'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations.rb:1277:in `new'
          from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as
  sociations.rb:1277:in `drives'
          from (irb):3</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I have a model with a user and many of his drives.&lt;/p&gt;
&lt;p&gt;class User &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :drives&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Drive &amp;lt; ActiveRecord:: Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;belongs_to :user&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Now when I want to add another drive to the user like so:&lt;/p&gt;
&lt;p&gt;drive = Drive.new() # ... user = user.find(x) user.drives
&amp;lt;&amp;lt; drive&lt;/p&gt;
&lt;p&gt;This will create this error:&lt;/p&gt;
&lt;p&gt;NameError: uninitialized constant User::Drife&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;dependencies.rb:105:in &lt;code&gt;const_missing'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;se.rb:2204:in &lt;code&gt;compute_type'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;core_ext/kernel/reporting.rb:11:in
&lt;code&gt;silence_warnings'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/ba&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;se.rb:2200:in &lt;code&gt;compute_type'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;flection.rb:156:in &lt;code&gt;send'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;flection.rb:156:in &lt;code&gt;klass'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/re&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;flection.rb:187:in &lt;code&gt;quoted_table_name'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations/has_many_association.rb:96:in
&lt;code&gt;construct_sql'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations/association_collection.rb:21:in
&lt;code&gt;initialize'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations.rb:1277:in &lt;code&gt;new'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from /usr/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/as&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sociations.rb:1277:in &lt;code&gt;drives'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      from (irb):3&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-18T07:36:04+01:00</created-at>
      <creator-id type="integer">73543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3390</number>
      <permalink>singular-form-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2</tag>
      <title>Singular form problem</title>
      <updated-at type="datetime">2009-10-18T07:36:07+01:00</updated-at>
      <user-id type="integer">73543</user-id>
      <version type="integer">1</version>
      <user-name>coffeeaddict_nl</user-name>
      <creator-name>coffeeaddict_nl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3390</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is an inflection issue that can be solved by putting the following in config/initializers/inflections.rb:

@@@ ruby
ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'drive', 'drives'
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is an inflection issue that can be solved by putting the
following in config/initializers/inflections.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'drive', 'drives'
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-19T02:21:48+01:00</created-at>
      <creator-id type="integer">73543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3390</number>
      <permalink>singular-form-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2</tag>
      <title>Singular form problem</title>
      <updated-at type="datetime">2009-10-19T02:21:49+01:00</updated-at>
      <user-id type="integer">21894</user-id>
      <version type="integer">2</version>
      <user-name>Ben Marini</user-name>
      <creator-name>coffeeaddict_nl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3390</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Follow Ben's advice.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Follow Ben's advice.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-23T07:05:47+01:00</created-at>
      <creator-id type="integer">73543</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3390</number>
      <permalink>singular-form-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2</tag>
      <title>Singular form problem</title>
      <updated-at type="datetime">2010-05-23T07:05:51+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>coffeeaddict_nl</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3390</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
