<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-06T11:56:50+00:00</created-at>
  <creator-id type="integer">123694</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5925</number>
  <permalink>find-on-nested-models-does-not-trigger-callbacks</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>Find on nested models does not trigger callbacks</title>
  <updated-at type="datetime">2010-11-23T21:27:07+00:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">4</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Matthias K&#252;hnert</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5925</url>
  <priority-name>Low</priority-name>
  <original-body>Rails 3.0.1: find on nested models does not trigger callbacks:

@@@ ruby
class TeachingGroup &lt; ActiveRecord::Base
  belongs_to :school_term
  ...
  after_update :foo
end
@@@

In `TeachingGroupsController`, any callbacks on the models are not triggered when I use a nested find. The model returned is the same in each case:

@@@ ruby
class TeachingGroupsController &lt; ApplicationController
  ...
  def update
    # this works, triggers callbacks on update_attributes or create:
    @teaching_group = TeachingGroup.find(params[:id])
    
    # for security, I want this, but this DOES NOT trigger callbacks:
    @teaching_group = @current_term.teaching_groups.find(params[:id])
     
    # works, triggers callbacks
    @teaching_group = TeachingGroup.find_by_id_and_school_term_id(params[:id], @current_term.id)

    if @teaching_group.update_attributes( params[:teaching_group] ) ...
    ...
  end
  ...
end
@@@

Same phenomenon in `create`. The main problem is that the cache sweeper does not work either.
Please help, and many thanks for your hard work on Rails!</original-body>
  <latest-body>Rails 3.0.1: find on nested models does not trigger callbacks:

@@@ ruby
class TeachingGroup &lt; ActiveRecord::Base
  belongs_to :school_term
  ...
  after_update :foo
end
@@@

In `TeachingGroupsController`, any callbacks on the models are not triggered when I use a nested find. The model returned is the same in each case:

@@@ ruby
class TeachingGroupsController &lt; ApplicationController
  ...
  def update
    # this works, triggers callbacks on update_attributes or create:
    @teaching_group = TeachingGroup.find(params[:id])
    
    # for security, I want this, but this DOES NOT trigger callbacks:
    @teaching_group = @current_term.teaching_groups.find(params[:id])
     
    # works, triggers callbacks
    @teaching_group = TeachingGroup.find_by_id_and_school_term_id(params[:id], @current_term.id)

    if @teaching_group.update_attributes( params[:teaching_group] ) ...
    ...
  end
  ...
end
@@@

Same phenomenon in `create`. The main problem is that the cache sweeper does not work either.
Please help, and many thanks for your hard work on Rails!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails 3.0.1: find on nested models does not trigger
callbacks:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class TeachingGroup &amp;lt; ActiveRecord::Base
  belongs_to :school_term
  ...
  after_update :foo
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In &lt;code&gt;TeachingGroupsController&lt;/code&gt;, any callbacks on the
models are not triggered when I use a nested find. The model
returned is the same in each case:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class TeachingGroupsController &amp;lt; ApplicationController
  ...
  def update
    # this works, triggers callbacks on update_attributes or create:
    @teaching_group = TeachingGroup.find(params[:id])
    
    # for security, I want this, but this DOES NOT trigger callbacks:
    @teaching_group = @current_term.teaching_groups.find(params[:id])
     
    # works, triggers callbacks
    @teaching_group = TeachingGroup.find_by_id_and_school_term_id(params[:id], @current_term.id)

    if @teaching_group.update_attributes( params[:teaching_group] ) ...
    ...
  end
  ...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Same phenomenon in &lt;code&gt;create&lt;/code&gt;. The main problem is that
the cache sweeper does not work either.&lt;br&gt;
Please help, and many thanks for your hard work on Rails!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 3.0.1: find on nested models does not trigger callbacks:

@@@ ruby
class TeachingGroup &lt; ActiveRecord::Base
  belongs_to :school_term
  ...
  after_update :foo
end
@@@

In `TeachingGroupsController`, any callbacks on the models are not triggered when I use a nested find. The model returned is the same in each case:

@@@ ruby
class TeachingGroupsController &lt; ApplicationController
  ...
  def update
    # this works, triggers callbacks on update_attributes or create:
    @teaching_group = TeachingGroup.find(params[:id])
    
    # for security, I want this, but this DOES NOT trigger callbacks:
    @teaching_group = @current_term.teaching_groups.find(params[:id])
     
    # works, triggers callbacks
    @teaching_group = TeachingGroup.find_by_id_and_school_term_id(params[:id], @current_term.id)

    if @teaching_group.update_attributes( params[:teaching_group] ) ...
    ...
  end
  ...
end
@@@

Same phenomenon in `create`. The main problem is that the cache sweeper does not work either.
Please help, and many thanks for your hard work on Rails!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails 3.0.1: find on nested models does not trigger
callbacks:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class TeachingGroup &amp;lt; ActiveRecord::Base
  belongs_to :school_term
  ...
  after_update :foo
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In &lt;code&gt;TeachingGroupsController&lt;/code&gt;, any callbacks on the
models are not triggered when I use a nested find. The model
returned is the same in each case:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class TeachingGroupsController &amp;lt; ApplicationController
  ...
  def update
    # this works, triggers callbacks on update_attributes or create:
    @teaching_group = TeachingGroup.find(params[:id])
    
    # for security, I want this, but this DOES NOT trigger callbacks:
    @teaching_group = @current_term.teaching_groups.find(params[:id])
     
    # works, triggers callbacks
    @teaching_group = TeachingGroup.find_by_id_and_school_term_id(params[:id], @current_term.id)

    if @teaching_group.update_attributes( params[:teaching_group] ) ...
    ...
  end
  ...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Same phenomenon in &lt;code&gt;create&lt;/code&gt;. The main problem is that
the cache sweeper does not work either.&lt;br&gt;
Please help, and many thanks for your hard work on Rails!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-06T11:56:50+00:00</created-at>
      <creator-id type="integer">123694</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5925</number>
      <permalink>find-on-nested-models-does-not-trigger-callbacks</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Find on nested models does not trigger callbacks</title>
      <updated-at type="datetime">2010-11-06T12:03:45+00:00</updated-at>
      <user-id type="integer">123694</user-id>
      <version type="integer">1</version>
      <user-name>Matthias K&#252;hnert</user-name>
      <creator-name>Matthias K&#252;hnert</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5925</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Not sure what you mean by NestedModel since I did not see any NestedModel in the example you illustrated.

Following code works for me with rails edge.

@@@ ruby
class Car &lt; ActiveRecord::Base
  has_many :brakes
end
class Brake &lt; ActiveRecord::Base
  belongs_to :car

  after_update :foo

  def foo
    puts 'foo'*50
  end

  def self.lab
    Car.create(:name =&gt; 'honda') unless Car.first
    Car.first.brakes.create(:name =&gt; 'b1') unless Brake.first

    b = Brake.find(1)
    b.update_attributes({:name =&gt; 'b2'})

    b = Car.first.brakes.find(1)
    b.update_attributes({:name =&gt; 'b3'})

    b = Brake.find_by_id_and_name(1, 'b3')
    b.update_attributes({:name =&gt; 'b4'})
  end

end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure what you mean by NestedModel since I did not see any
NestedModel in the example you illustrated.&lt;/p&gt;
&lt;p&gt;Following code works for me with rails edge.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Car &amp;lt; ActiveRecord::Base
  has_many :brakes
end
class Brake &amp;lt; ActiveRecord::Base
  belongs_to :car

  after_update :foo

  def foo
    puts 'foo'*50
  end

  def self.lab
    Car.create(:name =&amp;gt; 'honda') unless Car.first
    Car.first.brakes.create(:name =&amp;gt; 'b1') unless Brake.first

    b = Brake.find(1)
    b.update_attributes({:name =&amp;gt; 'b2'})

    b = Car.first.brakes.find(1)
    b.update_attributes({:name =&amp;gt; 'b3'})

    b = Brake.find_by_id_and_name(1, 'b3')
    b.update_attributes({:name =&amp;gt; 'b4'})
  end

end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-10T21:29:59+00:00</created-at>
      <creator-id type="integer">123694</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5925</number>
      <permalink>find-on-nested-models-does-not-trigger-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Find on nested models does not trigger callbacks</title>
      <updated-at type="datetime">2010-11-10T21:30:03+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Matthias K&#252;hnert</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5925</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK, I have just found this error does not occur when I use &quot;rails server&quot;, but when I use passenger 3.0.0. Sorry, these are not nested models but simple has_many relations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, I have just found this error does not occur when I use
&quot;rails server&quot;, but when I use passenger 3.0.0. Sorry, these are
not nested models but simple has_many relations.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-13T13:46:32+00:00</created-at>
      <creator-id type="integer">123694</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5925</number>
      <permalink>find-on-nested-models-does-not-trigger-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Find on nested models does not trigger callbacks</title>
      <updated-at type="datetime">2010-11-13T13:46:34+00:00</updated-at>
      <user-id type="integer">123694</user-id>
      <version type="integer">3</version>
      <user-name>Matthias K&#252;hnert</user-name>
      <creator-name>Matthias K&#252;hnert</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5925</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-23T21:27:05+00:00</created-at>
      <creator-id type="integer">123694</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5925</number>
      <permalink>find-on-nested-models-does-not-trigger-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Find on nested models does not trigger callbacks</title>
      <updated-at type="datetime">2010-11-23T21:27:07+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Matthias K&#252;hnert</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5925</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
