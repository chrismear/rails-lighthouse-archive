From 374145e7a98d32c92b9b13ffae7cc17df2c21365 Mon Sep 17 00:00:00 2001
From: Evgeniy Dolzhenko <dolzenko@gmail.com>
Date: Tue, 8 Jun 2010 21:57:19 +0400
Subject: [PATCH] Fix a bunch of minor spelling mistakes

---
 actionmailer/lib/action_mailer/base.rb             |    8 ++++----
 actionmailer/lib/action_mailer/deprecated_api.rb   |    2 +-
 actionpack/lib/abstract_controller/base.rb         |    2 +-
 .../metal/request_forgery_protection.rb            |    2 +-
 actionpack/lib/action_controller/test_case.rb      |    4 ++--
 actionpack/lib/action_dispatch/http/mime_type.rb   |    2 +-
 actionpack/lib/action_dispatch/http/parameters.rb  |    2 +-
 actionpack/lib/action_dispatch/http/upload.rb      |    4 ++--
 actionpack/lib/action_dispatch/middleware/stack.rb |    2 +-
 .../action_dispatch/testing/assertions/selector.rb |    2 +-
 .../lib/action_dispatch/testing/test_response.rb   |    4 ++--
 actionpack/lib/action_view/helpers/form_helper.rb  |    6 +++---
 .../lib/action_view/helpers/form_options_helper.rb |    4 ++--
 .../lib/action_view/helpers/form_tag_helper.rb     |    2 +-
 .../lib/action_view/helpers/number_helper.rb       |    2 +-
 actionpack/lib/action_view/helpers/text_helper.rb  |    2 +-
 .../lib/action_view/helpers/translation_helper.rb  |    4 ++--
 actionpack/lib/action_view/render/layouts.rb       |    2 +-
 activemodel/lib/active_model/attribute_methods.rb  |    2 +-
 activemodel/lib/active_model/conversion.rb         |    2 +-
 activemodel/lib/active_model/errors.rb             |    2 +-
 activemodel/lib/active_model/translation.rb        |    2 +-
 activemodel/lib/active_model/validations.rb        |    4 ++--
 .../lib/active_model/validations/validates.rb      |    2 +-
 activemodel/lib/active_model/validator.rb          |    4 ++--
 activerecord/lib/active_record/associations.rb     |   10 +++++-----
 .../associations/through_association_scope.rb      |    2 +-
 .../lib/active_record/autosave_association.rb      |    2 +-
 activerecord/lib/active_record/base.rb             |    2 +-
 .../lib/active_record/nested_attributes.rb         |    2 +-
 activerecord/lib/active_record/reflection.rb       |    8 ++++----
 activerecord/lib/active_record/relation.rb         |    2 +-
 activerecord/lib/active_record/schema_dumper.rb    |   12 ++++++------
 activeresource/lib/active_resource/base.rb         |    4 ++--
 activesupport/lib/active_support/cache.rb          |    2 +-
 .../lib/active_support/cache/memory_store.rb       |    2 +-
 .../lib/active_support/core_ext/array/grouping.rb  |    2 +-
 .../lib/active_support/core_ext/range/overlaps.rb  |    2 +-
 activesupport/lib/active_support/dependencies.rb   |    2 +-
 activesupport/lib/active_support/multibyte.rb      |    2 +-
 activesupport/lib/active_support/notifications.rb  |    2 +-
 activesupport/lib/active_support/time_with_zone.rb |    2 +-
 .../lib/active_support/values/time_zone.rb         |    2 +-
 43 files changed, 68 insertions(+), 68 deletions(-)

diff --git a/actionmailer/lib/action_mailer/base.rb b/actionmailer/lib/action_mailer/base.rb
index 3a82979..023e891 100644
--- a/actionmailer/lib/action_mailer/base.rb
+++ b/actionmailer/lib/action_mailer/base.rb
@@ -57,21 +57,21 @@ module ActionMailer #:nodoc:
   #
   # If you want to explicitly render only certain templates, pass a block:
   #
-  #   mail(:to => user.emai) do |format|
+  #   mail(:to => user.email) do |format|
   #     format.text
   #     format.html
   #   end
   #
   # The block syntax is useful if also need to specify information specific to a part:
   #
-  #   mail(:to => user.emai) do |format|
+  #   mail(:to => user.email) do |format|
   #     format.text(:content_transfer_encoding => "base64")
   #     format.html
   #   end
   #
   # Or even to render a special view:
   #
-  #   mail(:to => user.emai) do |format|
+  #   mail(:to => user.email) do |format|
   #     format.text
   #     format.html { render "some_other_template" }
   #   end
@@ -179,7 +179,7 @@ module ActionMailer #:nodoc:
   #   end
   #
   # Which will (if it had both a <tt>welcome.text.plain.erb</tt> and <tt>welcome.text.html.erb</tt>
-  # tempalte in the view directory), send a complete <tt>multipart/mixed</tt> email with two parts,
+  # template in the view directory), send a complete <tt>multipart/mixed</tt> email with two parts,
   # the first part being a <tt>multipart/alternative</tt> with the text and HTML email parts inside,
   # and the second being a <tt>application/pdf</tt> with a Base64 encoded copy of the file.pdf book
   # with the filename +free_book.pdf+.
diff --git a/actionmailer/lib/action_mailer/deprecated_api.rb b/actionmailer/lib/action_mailer/deprecated_api.rb
index c08ab41..0070d8e 100644
--- a/actionmailer/lib/action_mailer/deprecated_api.rb
+++ b/actionmailer/lib/action_mailer/deprecated_api.rb
@@ -1,7 +1,7 @@
 module ActionMailer
   # This is the API which is deprecated and is going to be removed on Rails 3.1 release.
   # Part of the old API will be deprecated after 3.1, for a smoother deprecation process.
-  # Chech those in OldApi instead.
+  # Check those in OldApi instead.
   module DeprecatedApi #:nodoc:
     extend ActiveSupport::Concern
 
diff --git a/actionpack/lib/abstract_controller/base.rb b/actionpack/lib/abstract_controller/base.rb
index ff97a7e..aca0d53 100644
--- a/actionpack/lib/abstract_controller/base.rb
+++ b/actionpack/lib/abstract_controller/base.rb
@@ -26,7 +26,7 @@ module AbstractController
         super
       end
 
-      # A list of all descendents of AbstractController::Base. This is
+      # A list of all descendants of AbstractController::Base. This is
       # useful for initializers which need to add behavior to all controllers.
       def descendants
         @descendants ||= []
diff --git a/actionpack/lib/action_controller/metal/request_forgery_protection.rb b/actionpack/lib/action_controller/metal/request_forgery_protection.rb
index 8c25b14..b632e7a 100644
--- a/actionpack/lib/action_controller/metal/request_forgery_protection.rb
+++ b/actionpack/lib/action_controller/metal/request_forgery_protection.rb
@@ -55,7 +55,7 @@ module ActionController #:nodoc:
       config_accessor :request_forgery_protection_token
       self.request_forgery_protection_token ||= :authenticity_token
 
-      # Controls whether request forgergy protection is turned on or not. Turned off by default only in test mode.
+      # Controls whether request forgery protection is turned on or not. Turned off by default only in test mode.
       config_accessor :allow_forgery_protection
       self.allow_forgery_protection = true if allow_forgery_protection.nil?
 
diff --git a/actionpack/lib/action_controller/test_case.rb b/actionpack/lib/action_controller/test_case.rb
index 21281b6..7f9eb2c 100644
--- a/actionpack/lib/action_controller/test_case.rb
+++ b/actionpack/lib/action_controller/test_case.rb
@@ -188,7 +188,7 @@ module ActionController
   # Superclass for ActionController functional tests. Functional tests allow you to
   # test a single controller action per test method. This should not be confused with
   # integration tests (see ActionController::IntegrationTest), which are more like
-  # "stories" that can involve multiple controllers and mutliple actions (i.e. multiple
+  # "stories" that can involve multiple controllers and multiple actions (i.e. multiple
   # different HTTP requests).
   #
   # == Basic example
@@ -442,7 +442,7 @@ module ActionController
     end
 
     # When the request.remote_addr remains the default for testing, which is 0.0.0.0, the exception is simply raised inline
-    # (bystepping the regular exception handling from rescue_action). If the request.remote_addr is anything else, the regular
+    # (skipping the regular exception handling from rescue_action). If the request.remote_addr is anything else, the regular
     # rescue_action process takes place. This means you can test your rescue_action code by setting remote_addr to something else
     # than 0.0.0.0.
     #
diff --git a/actionpack/lib/action_dispatch/http/mime_type.rb b/actionpack/lib/action_dispatch/http/mime_type.rb
index d6a805b..c6fc582 100644
--- a/actionpack/lib/action_dispatch/http/mime_type.rb
+++ b/actionpack/lib/action_dispatch/http/mime_type.rb
@@ -60,7 +60,7 @@ module Mime
       def initialize(order, name, q=nil)
         @order = order
         @name = name.strip
-        q ||= 0.0 if @name == Mime::ALL # default wilcard match to end of list
+        q ||= 0.0 if @name == Mime::ALL # default wildcard match to end of list
         @q = ((q || 1.0).to_f * 100).to_i
       end
 
diff --git a/actionpack/lib/action_dispatch/http/parameters.rb b/actionpack/lib/action_dispatch/http/parameters.rb
index bc43414..0a37bd7 100644
--- a/actionpack/lib/action_dispatch/http/parameters.rb
+++ b/actionpack/lib/action_dispatch/http/parameters.rb
@@ -32,7 +32,7 @@ module ActionDispatch
       end
 
     private
-      # Convert nested Hashs to HashWithIndifferentAccess
+      # Convert nested Hash to HashWithIndifferentAccess
       def normalize_parameters(value)
         case value
         when Hash
diff --git a/actionpack/lib/action_dispatch/http/upload.rb b/actionpack/lib/action_dispatch/http/upload.rb
index 81d2517..8ee4b81 100644
--- a/actionpack/lib/action_dispatch/http/upload.rb
+++ b/actionpack/lib/action_dispatch/http/upload.rb
@@ -31,8 +31,8 @@ module ActionDispatch
     end
 
     module Upload
-      # Convert nested Hashs to HashWithIndifferentAccess and replace
-      # file upload hashs with UploadedFile objects
+      # Convert nested Hash to HashWithIndifferentAccess and replace
+      # file upload hash with UploadedFile objects
       def normalize_parameters(value)
         if Hash === value && value.has_key?(:tempfile)
           upload = value[:tempfile]
diff --git a/actionpack/lib/action_dispatch/middleware/stack.rb b/actionpack/lib/action_dispatch/middleware/stack.rb
index 4240e7a..4618f3b 100644
--- a/actionpack/lib/action_dispatch/middleware/stack.rb
+++ b/actionpack/lib/action_dispatch/middleware/stack.rb
@@ -70,7 +70,7 @@ module ActionDispatch
     end
 
     def active
-      ActiveSupport::Deprecation.warn "All middlewares in the chaing are active since the laziness " << 
+      ActiveSupport::Deprecation.warn "All middlewares in the chain are active since the laziness " << 
         "was removed from the middleware stack", caller
     end
 
diff --git a/actionpack/lib/action_dispatch/testing/assertions/selector.rb b/actionpack/lib/action_dispatch/testing/assertions/selector.rb
index 0e82b41..b490547 100644
--- a/actionpack/lib/action_dispatch/testing/assertions/selector.rb
+++ b/actionpack/lib/action_dispatch/testing/assertions/selector.rb
@@ -359,7 +359,7 @@ module ActionDispatch
       # position. Possible values are <tt>:top</tt>, <tt>:bottom</tt>, <tt>:before</tt>
       # and <tt>:after</tt>.
       #
-      # Use the argument <tt>:redirect</tt> follwed by a path to check that an statement
+      # Use the argument <tt>:redirect</tt> followed by a path to check that an statement
       # which redirects to the specified path is generated.
       #
       # Using the <tt>:remove</tt> statement, you will be able to pass a block, but it will
diff --git a/actionpack/lib/action_dispatch/testing/test_response.rb b/actionpack/lib/action_dispatch/testing/test_response.rb
index 9a51a32..44fb1bd 100644
--- a/actionpack/lib/action_dispatch/testing/test_response.rb
+++ b/actionpack/lib/action_dispatch/testing/test_response.rb
@@ -53,7 +53,7 @@ module ActionDispatch
       # Returns the template of the file which was used to
       # render this response (or nil)
       def rendered
-        ActiveSupport::Deprecation.warn("response.rendered has been deprecated. Use tempate.rendered instead", caller)
+        ActiveSupport::Deprecation.warn("response.rendered has been deprecated. Use template.rendered instead", caller)
         @template.instance_variable_get(:@_rendered)
       end
 
@@ -89,7 +89,7 @@ module ActionDispatch
 
       # A shortcut to the template.assigns
       def template_objects
-        ActiveSupport::Deprecation.warn("response.template_objects has been deprecated. Use tempate.assigns instead", caller)
+        ActiveSupport::Deprecation.warn("response.template_objects has been deprecated. Use template.assigns instead", caller)
         @template.assigns || {}
       end
 
diff --git a/actionpack/lib/action_view/helpers/form_helper.rb b/actionpack/lib/action_view/helpers/form_helper.rb
index b3db315..9e2448f 100644
--- a/actionpack/lib/action_view/helpers/form_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_helper.rb
@@ -92,7 +92,7 @@ module ActionView
     #     # error handling
     #   end
     #
-    # That's how you tipically work with resources.
+    # That's how you typically work with resources.
     module FormHelper
       extend ActiveSupport::Concern
 
@@ -269,7 +269,7 @@ module ActionView
       # <tt>labelling_form</tt>.
       #
       # The custom FormBuilder class is automatically merged with the options
-      # of a nested fields_for call, unless it's explicitely set.
+      # of a nested fields_for call, unless it's explicitly set.
       #
       # In many cases you will want to wrap the above in another helper, so you
       # could do something like the following:
@@ -717,7 +717,7 @@ module ActionView
       #
       # To prevent this the helper generates an auxiliary hidden field before
       # the very check box. The hidden field has the same name and its
-      # attributes mimick an unchecked check box.
+      # attributes mimic an unchecked check box.
       #
       # This way, the client either sends only the hidden field (representing
       # the check box is unchecked), or both fields. Since the HTML specification
diff --git a/actionpack/lib/action_view/helpers/form_options_helper.rb b/actionpack/lib/action_view/helpers/form_options_helper.rb
index fe71d2c..6bf7864 100644
--- a/actionpack/lib/action_view/helpers/form_options_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_options_helper.rb
@@ -412,8 +412,8 @@ module ActionView
       # * +selected_key+ - A value equal to the +value+ attribute for one of the <tt><option></tt> tags,
       #   which will have the +selected+ attribute set. Note: It is possible for this value to match multiple options
       #   as you might have the same option in multiple groups.  Each will then get <tt>selected="selected"</tt>.
-      # * +prompt+ - set to true or a prompt string. When the select element doesn’t have a value yet, this
-      #   prepends an option with a generic prompt — "Please select" — or the given prompt string.
+      # * +prompt+ - set to true or a prompt string. When the select element doesn't have a value yet, this
+      #   prepends an option with a generic prompt - "Please select" - or the given prompt string.
       #
       # Sample usage (Array):
       #   grouped_options = [
diff --git a/actionpack/lib/action_view/helpers/form_tag_helper.rb b/actionpack/lib/action_view/helpers/form_tag_helper.rb
index 7962686..0727375 100644
--- a/actionpack/lib/action_view/helpers/form_tag_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_tag_helper.rb
@@ -535,7 +535,7 @@ module ActionView
 
         def extra_tags_for_form(html_options)
           case method = html_options.delete("method").to_s
-            when /^get$/i # must be case-insentive, but can't use downcase as might be nil
+            when /^get$/i # must be case-insensitive, but can't use downcase as might be nil
               html_options["method"] = "get"
               ''
             when /^post$/i, "", nil
diff --git a/actionpack/lib/action_view/helpers/number_helper.rb b/actionpack/lib/action_view/helpers/number_helper.rb
index fccf004..7404a62 100644
--- a/actionpack/lib/action_view/helpers/number_helper.rb
+++ b/actionpack/lib/action_view/helpers/number_helper.rb
@@ -323,7 +323,7 @@ module ActionView
       #  number_to_human_size(483989, :precision => 2)                      # => 470 KB
       #  number_to_human_size(1234567, :precision => 2, :separator => ',')  # => 1,2 MB
       #
-      # Unsignificant zeros after the fractional separator are stripped out by default (set
+      # Non-significant zeros after the fractional separator are stripped out by default (set
       # <tt>:strip_insignificant_zeros</tt> to +false+ to change that):
       #  number_to_human_size(1234567890123, :precision => 5)        # => "1.1229 TB"
       #  number_to_human_size(524288000, :precision=>5)              # => "500 MB"
diff --git a/actionpack/lib/action_view/helpers/text_helper.rb b/actionpack/lib/action_view/helpers/text_helper.rb
index 4c76e96..1c1e08e 100644
--- a/actionpack/lib/action_view/helpers/text_helper.rb
+++ b/actionpack/lib/action_view/helpers/text_helper.rb
@@ -48,7 +48,7 @@ module ActionView
       #   truncate("Once upon a time in a world far far away", :length => 17)
       #   # => "Once upon a ti..."
       #
-      #   truncate("Once upon a time in a world far far away", :lenght => 17, :separator => ' ')
+      #   truncate("Once upon a time in a world far far away", :length => 17, :separator => ' ')
       #   # => "Once upon a..."
       #
       #   truncate("And they found that many people were sleeping better.", :length => 25, :omission => '... (continued)')
diff --git a/actionpack/lib/action_view/helpers/translation_helper.rb b/actionpack/lib/action_view/helpers/translation_helper.rb
index 0d2b2aa..0c8829b 100644
--- a/actionpack/lib/action_view/helpers/translation_helper.rb
+++ b/actionpack/lib/action_view/helpers/translation_helper.rb
@@ -11,8 +11,8 @@ module ActionView
       # to translate many keys within the same partials and gives you a simple framework for scoping them consistently. If you don't
       # prepend the key with a period, nothing is converted.
       #
-      # Third, it’ll mark the translation as safe HTML if the key has the suffix "_html" or the last element of the key is the word
-      # "html". For example, calling translate("footer_html") or translate("footer.html") will return a safe HTML string that won’t
+      # Third, it'll mark the translation as safe HTML if the key has the suffix "_html" or the last element of the key is the word
+      # "html". For example, calling translate("footer_html") or translate("footer.html") will return a safe HTML string that won't
       # be escaped by other HTML helper methods. This naming convention helps to identify translations that include HTML tags so that
       # you know what kind of output to expect when you call translate in a template.
 
diff --git a/actionpack/lib/action_view/render/layouts.rb b/actionpack/lib/action_view/render/layouts.rb
index a9dfc0c..1f837b3 100644
--- a/actionpack/lib/action_view/render/layouts.rb
+++ b/actionpack/lib/action_view/render/layouts.rb
@@ -55,7 +55,7 @@ module ActionView
     end
 
     # This is the method which actually finds the layout using details in the lookup
-    # context object. If no layout is found, it checkes if at least a layout with
+    # context object. If no layout is found, it checks if at least a layout with
     # the given name exists across all details before raising the error.
     def find_layout(layout)
       begin
diff --git a/activemodel/lib/active_model/attribute_methods.rb b/activemodel/lib/active_model/attribute_methods.rb
index 9bacc2a..7d0cdb5 100644
--- a/activemodel/lib/active_model/attribute_methods.rb
+++ b/activemodel/lib/active_model/attribute_methods.rb
@@ -45,7 +45,7 @@ module ActiveModel
   #     end
   #   end
   #
-  # Please notice that whenever you include ActiveModel::AtributeMethods in your class,
+  # Please notice that whenever you include ActiveModel::AttributeMethods in your class,
   # it requires you to implement a <tt>attributes</tt> methods which returns a hash with
   # each attribute name in your model as hash key and the attribute value as hash value.
   # Hash keys must be a string.
diff --git a/activemodel/lib/active_model/conversion.rb b/activemodel/lib/active_model/conversion.rb
index 585c20d..23724b2 100644
--- a/activemodel/lib/active_model/conversion.rb
+++ b/activemodel/lib/active_model/conversion.rb
@@ -30,7 +30,7 @@ module ActiveModel
       self
     end
 
-    # Returns an Enumerable of all (primary) key attributes or nil if persisted? is fakse
+    # Returns an Enumerable of all (primary) key attributes or nil if persisted? is false
     def to_key
       persisted? ? [id] : nil
     end
diff --git a/activemodel/lib/active_model/errors.rb b/activemodel/lib/active_model/errors.rb
index 15d468f..5c076d9 100644
--- a/activemodel/lib/active_model/errors.rb
+++ b/activemodel/lib/active_model/errors.rb
@@ -240,7 +240,7 @@ module ActiveModel
     # default message (e.g. <tt>activemodel.errors.messages.MESSAGE</tt>). The translated model name,
     # translated attribute name and the value are available for interpolation.
     #
-    # When using inheritence in your models, it will check all the inherited models too, but only if the model itself
+    # When using inheritance in your models, it will check all the inherited models too, but only if the model itself
     # hasn't been found. Say you have <tt>class Admin < User; end</tt> and you wanted the translation for the <tt>:blank</tt>
     # error +message+ for the <tt>title</tt> +attribute+, it looks for these translations:
     #
diff --git a/activemodel/lib/active_model/translation.rb b/activemodel/lib/active_model/translation.rb
index 2ab342f..15d0c7d 100644
--- a/activemodel/lib/active_model/translation.rb
+++ b/activemodel/lib/active_model/translation.rb
@@ -11,7 +11,7 @@ module ActiveModel
   #     extend ActiveModel::Translation
   #   end
   # 
-  #   TranslatedPerson.human_attribute_name('my_attribue')
+  #   TranslatedPerson.human_attribute_name('my_attribute')
   #   #=> "My attribute"
   # 
   # This also provides the required class methods for hooking into the
diff --git a/activemodel/lib/active_model/validations.rb b/activemodel/lib/active_model/validations.rb
index f472f50..e737054 100644
--- a/activemodel/lib/active_model/validations.rb
+++ b/activemodel/lib/active_model/validations.rb
@@ -90,7 +90,7 @@ module ActiveModel
       end
 
       # Adds a validation method or block to the class. This is useful when
-      # overriding the +validate+ instance method becomes too unwieldly and
+      # overriding the +validate+ instance method becomes too unwieldy and
       # you're looking for more descriptive declaration of your validations.
       #
       # This can be done with a symbol pointing to a method:
@@ -166,7 +166,7 @@ module ActiveModel
       !valid?(context)
     end
 
-    # Hook method defining how an attribute value should be retieved. By default this is assumed
+    # Hook method defining how an attribute value should be retrieved. By default this is assumed
     # to be an instance named after the attribute. Override this method in subclasses should you
     # need to retrieve the value for a given attribute differently e.g.
     #   class MyClass
diff --git a/activemodel/lib/active_model/validations/validates.rb b/activemodel/lib/active_model/validations/validates.rb
index 90b2442..5716299 100644
--- a/activemodel/lib/active_model/validations/validates.rb
+++ b/activemodel/lib/active_model/validations/validates.rb
@@ -20,7 +20,7 @@ module ActiveModel
       #   validates :username, :presence => true
       #   validates :username, :uniqueness => true
       # 
-      # The power of the +validates+ method comes when using cusom validators
+      # The power of the +validates+ method comes when using custom validators
       # and default validators in one call for a given attribute e.g.
       #
       #   class EmailValidator < ActiveModel::EachValidator
diff --git a/activemodel/lib/active_model/validator.rb b/activemodel/lib/active_model/validator.rb
index 56179c1..114e909 100644
--- a/activemodel/lib/active_model/validator.rb
+++ b/activemodel/lib/active_model/validator.rb
@@ -106,7 +106,7 @@ module ActiveModel #:nodoc:
       @kind ||= name.split('::').last.underscore.sub(/_validator$/, '').to_sym unless anonymous?
     end
 
-    # Accepts options that will be made availible through the +options+ reader.
+    # Accepts options that will be made available through the +options+ reader.
     def initialize(options)
       @options = options
     end
@@ -152,7 +152,7 @@ module ActiveModel #:nodoc:
       end
     end
 
-    # Override this method in subclasses with the validation logic, adding
+    # Override this method in subclasses with the validation logic, adding
     # errors to the records +errors+ array where necessary.
     def validate_each(record, attribute, value)
       raise NotImplementedError
diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index 95d76ae..ceeffd4 100755
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -88,8 +88,8 @@ module ActiveRecord
     end
   end
 
-  # This error is raised when trying to destroy a parent instance in a N:1, 1:1 assosications
-  # (has_many, has_one) when there is at least 1 child assosociated instance.
+  # This error is raised when trying to destroy a parent instance in a N:1, 1:1 associations
+  # (has_many, has_one) when there is at least 1 child associated instance.
   # ex: if @project.tasks.size > 0, DeleteRestrictionError will be raised when trying to destroy @project
   class DeleteRestrictionError < ActiveRecordError #:nodoc:
     def initialize(reflection)
@@ -890,7 +890,7 @@ module ActiveRecord
       # [:inverse_of]
       #   Specifies the name of the <tt>belongs_to</tt> association on the associated object that is the inverse of this <tt>has_many</tt>
       #   association.  Does not work in combination with <tt>:through</tt> or <tt>:as</tt> options.
-      #   See ActiveRecord::Associations::ClassMethods's overview on Bi-directional assocations for more detail.
+      #   See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.
       #
       # Option examples:
       #   has_many :comments, :order => "posted_on"
@@ -1005,7 +1005,7 @@ module ActiveRecord
       # [:inverse_of]
       #   Specifies the name of the <tt>belongs_to</tt> association on the associated object that is the inverse of this <tt>has_one</tt>
       #   association.  Does not work in combination with <tt>:through</tt> or <tt>:as</tt> options.
-      #   See ActiveRecord::Associations::ClassMethods's overview on Bi-directional assocations for more detail.
+      #   See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.
       #
       # Option examples:
       #   has_one :credit_card, :dependent => :destroy  # destroys the associated credit card
@@ -1110,7 +1110,7 @@ module ActiveRecord
       # [:inverse_of]
       #   Specifies the name of the <tt>has_one</tt> or <tt>has_many</tt> association on the associated object that is the inverse of this <tt>belongs_to</tt>
       #   association.  Does not work in combination with the <tt>:polymorphic</tt> options.
-      #   See ActiveRecord::Associations::ClassMethods's overview on Bi-directional assocations for more detail.
+      #   See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.
       #
       # Option examples:
       #   belongs_to :firm, :foreign_key => "client_of"
diff --git a/activerecord/lib/active_record/associations/through_association_scope.rb b/activerecord/lib/active_record/associations/through_association_scope.rb
index 1d2f323..93bd6e3 100644
--- a/activerecord/lib/active_record/associations/through_association_scope.rb
+++ b/activerecord/lib/active_record/associations/through_association_scope.rb
@@ -91,7 +91,7 @@ module ActiveRecord
 
       # Construct attributes for :through pointing to owner and associate.
       def construct_join_attributes(associate)
-        # TODO: revist this to allow it for deletion, supposing dependent option is supported
+        # TODO: revisit this to allow it for deletion, supposing dependent option is supported
         raise ActiveRecord::HasManyThroughCantAssociateThroughHasOneOrManyReflection.new(@owner, @reflection) if [:has_one, :has_many].include?(@reflection.source_reflection.macro)
 
         join_attributes = construct_owner_attributes(@reflection.through_reflection).merge(@reflection.source_reflection.primary_key_name => associate.id)
diff --git a/activerecord/lib/active_record/autosave_association.rb b/activerecord/lib/active_record/autosave_association.rb
index 0dcadfa..154d6ba 100644
--- a/activerecord/lib/active_record/autosave_association.rb
+++ b/activerecord/lib/active_record/autosave_association.rb
@@ -375,7 +375,7 @@ module ActiveRecord
           if association.updated?
             association_id = association.send(reflection.options[:primary_key] || :id)
             self[reflection.primary_key_name] = association_id
-            # TODO: Removing this code doesn't seem to matter…
+            # TODO: Removing this code doesn't seem to matter...
             if reflection.options[:polymorphic]
               self[reflection.options[:foreign_type]] = association.class.base_class.name.to_s
             end
diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index aa2826f..28dcd48 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -1454,7 +1454,7 @@ module ActiveRecord #:nodoc:
         # For example in the test suite the topic model's after_initialize method sets the author_email_address to
         # test@test.com. I would have thought this would mean that all cloned models would have an author email address
         # of test@test.com. However the test_clone test method seems to test that this is not the case. As a result the
-        # after_initialize callback has to be run *before* the copying of the atrributes rather than afterwards in order
+        # after_initialize callback has to be run *before* the copying of the attributes rather than afterwards in order
         # for all tests to pass. This makes no sense to me.
         callback(:after_initialize) if respond_to_without_attributes?(:after_initialize)
         cloned_attributes = other.clone_attributes(:read_attribute_before_type_cast)
diff --git a/activerecord/lib/active_record/nested_attributes.rb b/activerecord/lib/active_record/nested_attributes.rb
index eb9e792..767ec85 100644
--- a/activerecord/lib/active_record/nested_attributes.rb
+++ b/activerecord/lib/active_record/nested_attributes.rb
@@ -278,7 +278,7 @@ module ActiveRecord
     # Assigns the given attributes to the association.
     #
     # If update_only is false and the given attributes include an <tt>:id</tt>
-    # that matches the existing record’s id, then the existing record will be
+    # that matches the existing record's id, then the existing record will be
     # modified. If update_only is true, a new record is only created when no
     # object exists. Otherwise a new record will be built.
     #
diff --git a/activerecord/lib/active_record/reflection.rb b/activerecord/lib/active_record/reflection.rb
index 0e48e22..d4af3d7 100644
--- a/activerecord/lib/active_record/reflection.rb
+++ b/activerecord/lib/active_record/reflection.rb
@@ -165,14 +165,14 @@ module ActiveRecord
         klass.new(*options)
       end
 
-      # Creates a new instance of the associated class, and immediates saves it
+      # Creates a new instance of the associated class, and immediately saves it
       # with ActiveRecord::Base#save. +options+ will be passed to the class's
       # creation method. Returns the newly created object.
       def create_association(*options)
         klass.create(*options)
       end
 
-      # Creates a new instance of the associated class, and immediates saves it
+      # Creates a new instance of the associated class, and immediately saves it
       # with ActiveRecord::Base#save!. +options+ will be passed to the class's
       # creation method. If the created record doesn't pass validations, then an
       # exception will be raised.
@@ -267,10 +267,10 @@ module ActiveRecord
       # Returns whether or not the association should be validated as part of
       # the parent's validation.
       #
-      # Unless you explicitely disable validation with
+      # Unless you explicitly disable validation with
       # <tt>:validate => false</tt>, it will take place when:
       #
-      # * you explicitely enable validation; <tt>:validate => true</tt>
+      # * you explicitly enable validation; <tt>:validate => true</tt>
       # * you use autosave; <tt>:autosave => true</tt>
       # * the association is a +has_many+ association
       def validate?
diff --git a/activerecord/lib/active_record/relation.rb b/activerecord/lib/active_record/relation.rb
index 99c914d..5d99a15 100644
--- a/activerecord/lib/active_record/relation.rb
+++ b/activerecord/lib/active_record/relation.rb
@@ -67,7 +67,7 @@ module ActiveRecord
       preload +=  @includes_values unless eager_loading?
       preload.each {|associations| @klass.send(:preload_associations, @records, associations) }
 
-      # @readonly_value is true only if set explicity. @implicit_readonly is true if there are JOINS and no explicit SELECT.
+      # @readonly_value is true only if set explicitly. @implicit_readonly is true if there are JOINS and no explicit SELECT.
       readonly = @readonly_value.nil? ? @implicit_readonly : @readonly_value
       @records.each { |record| record.readonly! } if readonly
 
diff --git a/activerecord/lib/active_record/schema_dumper.rb b/activerecord/lib/active_record/schema_dumper.rb
index cd54653..71ef249 100644
--- a/activerecord/lib/active_record/schema_dumper.rb
+++ b/activerecord/lib/active_record/schema_dumper.rb
@@ -173,15 +173,15 @@ HEADER
       def indexes(table, stream)
         if (indexes = @connection.indexes(table)).any?
           add_index_statements = indexes.map do |index|
-            statment_parts = [ ('add_index ' + index.table.inspect) ]
-            statment_parts << index.columns.inspect
-            statment_parts << (':name => ' + index.name.inspect)
-            statment_parts << ':unique => true' if index.unique
+            statement_parts = [ ('add_index ' + index.table.inspect) ]
+            statement_parts << index.columns.inspect
+            statement_parts << (':name => ' + index.name.inspect)
+            statement_parts << ':unique => true' if index.unique
 
             index_lengths = index.lengths.compact if index.lengths.is_a?(Array)
-            statment_parts << (':length => ' + Hash[*index.columns.zip(index.lengths).flatten].inspect) if index_lengths.present?
+            statement_parts << (':length => ' + Hash[*index.columns.zip(index.lengths).flatten].inspect) if index_lengths.present?
 
-            '  ' + statment_parts.join(', ')
+            '  ' + statement_parts.join(', ')
           end
 
           stream.puts add_index_statements.sort.join("\n")
diff --git a/activeresource/lib/active_resource/base.rb b/activeresource/lib/active_resource/base.rb
index b89097a..e3728c8 100644
--- a/activeresource/lib/active_resource/base.rb
+++ b/activeresource/lib/active_resource/base.rb
@@ -763,7 +763,7 @@ module ActiveResource
       #   With any other scope, find returns nil when no data is returned.
       #
       #   Person.find(1)
-      #   # => raises ResourcenotFound
+      #   # => raises ResourceNotFound
       #
       #   Person.find(:all)
       #   Person.find(:first)
@@ -941,7 +941,7 @@ module ActiveResource
     end
 
     # This is a list of known attributes for this resource. Either
-    # gathered fromthe provided <tt>schema</tt>, or from the attributes
+    # gathered from the provided <tt>schema</tt>, or from the attributes
     # set on this instance after it has been fetched from the remote system.
     def known_attributes
       self.class.known_attributes + self.attributes.keys.map(&:to_s)
diff --git a/activesupport/lib/active_support/cache.rb b/activesupport/lib/active_support/cache.rb
index 2605a3f..f04544c 100644
--- a/activesupport/lib/active_support/cache.rb
+++ b/activesupport/lib/active_support/cache.rb
@@ -22,7 +22,7 @@ module ActiveSupport
     EMPTY_OPTIONS = {}.freeze
 
     # These options mean something to all cache implementations. Individual cache
-    # implementations may support additional optons.
+    # implementations may support additional options.
     UNIVERSAL_OPTIONS = [:namespace, :compress, :compress_threshold, :expires_in, :race_condition_ttl]
 
     module Strategy
diff --git a/activesupport/lib/active_support/cache/memory_store.rb b/activesupport/lib/active_support/cache/memory_store.rb
index b1d14a0..f5c2b8a 100644
--- a/activesupport/lib/active_support/cache/memory_store.rb
+++ b/activesupport/lib/active_support/cache/memory_store.rb
@@ -10,7 +10,7 @@ module ActiveSupport
     # appropriate cache for you.
     #
     # This cache has a bounded size specified by the :size options to the
-    # initializer (default is 32Mb). When the cache exceeds the alotted size,
+    # initializer (default is 32Mb). When the cache exceeds the allotted size,
     # a cleanup will occur which tries to prune the cache down to three quarters
     # of the maximum size by removing the least recently used entries.
     #
diff --git a/activesupport/lib/active_support/core_ext/array/grouping.rb b/activesupport/lib/active_support/core_ext/array/grouping.rb
index ef41678..4cd9bfa 100644
--- a/activesupport/lib/active_support/core_ext/array/grouping.rb
+++ b/activesupport/lib/active_support/core_ext/array/grouping.rb
@@ -55,7 +55,7 @@ class Array
   #   ["6", "7"]
   def in_groups(number, fill_with = nil)
     # size / number gives minor group size;
-    # size % number gives how many objects need extra accomodation;
+    # size % number gives how many objects need extra accommodation;
     # each group hold either division or division + 1 items.
     division = size / number
     modulo = size % number
diff --git a/activesupport/lib/active_support/core_ext/range/overlaps.rb b/activesupport/lib/active_support/core_ext/range/overlaps.rb
index 0dec6e0..7df653b 100644
--- a/activesupport/lib/active_support/core_ext/range/overlaps.rb
+++ b/activesupport/lib/active_support/core_ext/range/overlaps.rb
@@ -1,5 +1,5 @@
 class Range
-  # Compare two ranges and see if they overlap eachother
+  # Compare two ranges and see if they overlap each other
   #  (1..5).overlaps?(4..6) # => true
   #  (1..5).overlaps?(7..9) # => false
   def overlaps?(other)
diff --git a/activesupport/lib/active_support/dependencies.rb b/activesupport/lib/active_support/dependencies.rb
index 16c3bc1..d48da11 100644
--- a/activesupport/lib/active_support/dependencies.rb
+++ b/activesupport/lib/active_support/dependencies.rb
@@ -340,7 +340,7 @@ module ActiveSupport #:nodoc:
 
     if Module.method(:const_defined?).arity == 1
       # Does this module define this constant?
-      # Wrapper to accomodate changing Module#const_defined? in Ruby 1.9
+      # Wrapper to accommodate changing Module#const_defined? in Ruby 1.9
       def local_const_defined?(mod, const)
         mod.const_defined?(const)
       end
diff --git a/activesupport/lib/active_support/multibyte.rb b/activesupport/lib/active_support/multibyte.rb
index e7a271a..8ffdf5a 100644
--- a/activesupport/lib/active_support/multibyte.rb
+++ b/activesupport/lib/active_support/multibyte.rb
@@ -17,7 +17,7 @@ module ActiveSupport #:nodoc:
       @proxy_class = klass
     end
 
-    # Returns the currect proxy class
+    # Returns the current proxy class
     def self.proxy_class
       @proxy_class ||= ActiveSupport::Multibyte::Chars
     end
diff --git a/activesupport/lib/active_support/notifications.rb b/activesupport/lib/active_support/notifications.rb
index 3f1fe64..1aec7ea 100644
--- a/activesupport/lib/active_support/notifications.rb
+++ b/activesupport/lib/active_support/notifications.rb
@@ -23,7 +23,7 @@ module ActiveSupport
   #
   #   event = @events.first
   #   event.name      #=> :render
-  #   event.duration  #=> 10 (in miliseconds)
+  #   event.duration  #=> 10 (in milliseconds)
   #   event.result    #=> "Foo"
   #   event.payload   #=> { :extra => :information }
   #
diff --git a/activesupport/lib/active_support/time_with_zone.rb b/activesupport/lib/active_support/time_with_zone.rb
index 710dce7..62d02bd 100644
--- a/activesupport/lib/active_support/time_with_zone.rb
+++ b/activesupport/lib/active_support/time_with_zone.rb
@@ -18,7 +18,7 @@ module ActiveSupport
   #
   # See Time and TimeZone for further documentation of these methods.
   #
-  # TimeWithZone instances implement the same API as Ruby Time instances, so that Time and TimeWithZone instances are interchangable. Examples:
+  # TimeWithZone instances implement the same API as Ruby Time instances, so that Time and TimeWithZone instances are interchangeable. Examples:
   #
   #   t = Time.zone.now                     # => Sun, 18 May 2008 13:27:25 EDT -04:00
   #   t.hour                                # => 13
diff --git a/activesupport/lib/active_support/values/time_zone.rb b/activesupport/lib/active_support/values/time_zone.rb
index 67b3778..7550d89 100644
--- a/activesupport/lib/active_support/values/time_zone.rb
+++ b/activesupport/lib/active_support/values/time_zone.rb
@@ -224,7 +224,7 @@ module ActiveSupport
       utc_offset == 0 && alternate_utc_string || self.class.seconds_to_utc_offset(utc_offset, colon)
     end
 
-    # Compare this time zone to the parameter. The two are comapred first on
+    # Compare this time zone to the parameter. The two are compared first on
     # their offsets, and then by name.
     def <=>(zone)
       result = (utc_offset <=> zone.utc_offset)
-- 
1.7.0.2.msysgit.0

