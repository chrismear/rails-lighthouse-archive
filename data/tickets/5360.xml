<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-11T21:53:05+01:00</created-at>
  <creator-id type="integer">110542</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5360</number>
  <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>patch</tag>
  <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
  <updated-at type="datetime">2011-02-02T16:42:16+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">10</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Robert Ferney</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
  <priority-name nil="true"></priority-name>
  <original-body>when using a model for a url_for

  url_for &lt;model_instance&gt;

when using a model for a nested resource
  
  url_for [&lt;enclosing_model_instance&gt;,&lt;nested_model_instance&gt;]

which is ugly, and breaks things.. like respond_with, form_for, etc.. 

desired_behavior: 

  url_for &lt;nested_model_instance&gt;

the challenge being making url_for send the right arguments to the named_route_path method. 

Solution: 

Have the method define a polymorphic_route_args method, to provide the appropriate arguments to the named route helper method. 

so the model now looks like ...


@@@ ruby
class NestedModel
  belongs_to :containing_model
  def polymorphic_url_args
    [containing_model,self]
  end
end
@@@</original-body>
  <latest-body>when using a model for a url_for

  url_for &lt;model_instance&gt;

when using a model for a nested resource
  
  url_for [&lt;enclosing_model_instance&gt;,&lt;nested_model_instance&gt;]

which is ugly, and breaks things.. like respond_with, form_for, etc.. 

desired_behavior: 

  url_for &lt;nested_model_instance&gt;

the challenge being making url_for send the right arguments to the named_route_path method. 

Solution: 

Have the method define a polymorphic_route_args method, to provide the appropriate arguments to the named route helper method. 

so the model now looks like ...


@@@ ruby
class NestedModel
  belongs_to :containing_model
  def polymorphic_url_args
    [containing_model,self]
  end
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;when using a model for a url_for&lt;/p&gt;
&lt;p&gt;url_for &amp;lt;model_instance&amp;gt;&lt;/p&gt;
&lt;p&gt;when using a model for a nested resource&lt;br&gt;&lt;/p&gt;
&lt;p&gt;url_for
[&amp;lt;enclosing_model_instance&amp;gt;,&amp;lt;nested_model_instance&amp;gt;]&lt;/p&gt;
&lt;p&gt;which is ugly, and breaks things.. like respond_with, form_for,
etc..&lt;/p&gt;
&lt;p&gt;desired_behavior:&lt;/p&gt;
&lt;p&gt;url_for &amp;lt;nested_model_instance&amp;gt;&lt;/p&gt;
&lt;p&gt;the challenge being making url_for send the right arguments to
the named_route_path method.&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;p&gt;Have the method define a polymorphic_route_args method, to
provide the appropriate arguments to the named route helper
method.&lt;/p&gt;
&lt;p&gt;so the model now looks like ...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class NestedModel
  belongs_to :containing_model
  def polymorphic_url_args
    [containing_model,self]
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>when using a model for a url_for

  url_for &lt;model_instance&gt;

when using a model for a nested resource
  
  url_for [&lt;enclosing_model_instance&gt;,&lt;nested_model_instance&gt;]

which is ugly, and breaks things.. like respond_with, form_for, etc.. 

desired_behavior: 

  url_for &lt;nested_model_instance&gt;

the challenge being making url_for send the right arguments to the named_route_path method. 

Solution: 

Have the method define a polymorphic_route_args method, to provide the appropriate arguments to the named route helper method. 

so the model now looks like ...


@@@ ruby
class NestedModel
  belongs_to :containing_model
  def polymorphic_url_args
    [containing_model,self]
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;when using a model for a url_for&lt;/p&gt;
&lt;p&gt;url_for &amp;lt;model_instance&amp;gt;&lt;/p&gt;
&lt;p&gt;when using a model for a nested resource&lt;br&gt;&lt;/p&gt;
&lt;p&gt;url_for
[&amp;lt;enclosing_model_instance&amp;gt;,&amp;lt;nested_model_instance&amp;gt;]&lt;/p&gt;
&lt;p&gt;which is ugly, and breaks things.. like respond_with, form_for,
etc..&lt;/p&gt;
&lt;p&gt;desired_behavior:&lt;/p&gt;
&lt;p&gt;url_for &amp;lt;nested_model_instance&amp;gt;&lt;/p&gt;
&lt;p&gt;the challenge being making url_for send the right arguments to
the named_route_path method.&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;p&gt;Have the method define a polymorphic_route_args method, to
provide the appropriate arguments to the named route helper
method.&lt;/p&gt;
&lt;p&gt;so the model now looks like ...&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class NestedModel
  belongs_to :containing_model
  def polymorphic_url_args
    [containing_model,self]
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T21:53:05+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-08-11T21:57:26+01:00</updated-at>
      <user-id type="integer">110542</user-id>
      <version type="integer">1</version>
      <user-name>Robert Ferney</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Seems a bit ambiguous to me.

You don't always want to link to the resource as a nested resource.
Oftentimes you link to it as just a resource, think shallow routes.

And what if it belongs to many? 

If you need url_for to be simpler than it is, make a helper for yourself.

def nested_url_for(nested_instance)
  url_for(nested_instance.parent, nested_instance)
end

or something along those lines.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems a bit ambiguous to me.&lt;/p&gt;
&lt;p&gt;You don't always want to link to the resource as a nested
resource.&lt;br&gt;
Oftentimes you link to it as just a resource, think shallow
routes.&lt;/p&gt;
&lt;p&gt;And what if it belongs to many?&lt;/p&gt;
&lt;p&gt;If you need url_for to be simpler than it is, make a helper for
yourself.&lt;/p&gt;
&lt;p&gt;def nested_url_for(nested_instance)&lt;br&gt;
url_for(nested_instance.parent, nested_instance) end&lt;/p&gt;
&lt;p&gt;or something along those lines.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T22:59:59+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-08-11T23:00:01+01:00</updated-at>
      <user-id type="integer">79823</user-id>
      <version type="integer">2</version>
      <user-name>Rolf Bjaanes</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Could you give some details on the breakage of form_for and respond_with? 
You do know you can pretty much always use [@instance, @nested_instance] without url_for?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you give some details on the breakage of form_for and
respond_with?&lt;br&gt;
You do know you can pretty much always use [@instance,
@nested_instance] without url_for?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T23:11:42+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-08-11T23:11:43+01:00</updated-at>
      <user-id type="integer">79823</user-id>
      <version type="integer">3</version>
      <user-name>Rolf Bjaanes</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[@instance, @nested_instance] isn't working in my case however.. 

I have to explicitly call nested_controller_path(@instance, @nested_instance

relevant route... 
@@@ ruby
resources :foo do 
  resources :bar, :controller =&gt; :foo_bar
end
@@@

I either get a undefined method `foo_foo_bar_path' 
or, it can't find the route.. 

Pre 3.0 I handled this by writing foo_foo_bar_path helpers, however this no-longer works. and I really don't like having to write [@instance, @nested_instance] everywhere, when a simple @instance should do the job..</body>
      <body-html>&lt;div&gt;&lt;p&gt;[@instance, @nested_instance] isn't working in my case
however..&lt;/p&gt;
&lt;p&gt;I have to explicitly call nested_controller_path(@instance,
@nested_instance&lt;/p&gt;
&lt;p&gt;relevant route...&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;resources :foo do 
  resources :bar, :controller =&amp;gt; :foo_bar
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I either get a undefined method
&lt;code&gt;foo_foo_bar_path'&amp;lt;br/&amp;gt; or, it can't find the
route..&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pre 3.0 I handled this by writing foo_foo_bar_path helpers,
however this no-longer works. and I really don't like having to
write [@instance, @nested_instance] everywhere, when a simple
@instance should do the job..&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T00:25:20+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-08-12T00:25:23+01:00</updated-at>
      <user-id type="integer">110542</user-id>
      <version type="integer">4</version>
      <user-name>Robert Ferney</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I see what you are getting at, but it quickly becomes ambiguous and inflexible.

Say I have one &quot;Document&quot; and I want to link to this,
but it belongs to two or more &quot;VirtualDirectories&quot;,
how would it know which VirtualDirectory to use as parent?

Use &lt;code&gt;rake routes&lt;/code&gt; to see available routes. 
(:controller doesn't change the name of the route, so in your example
the route helper would be foo_bar_path)

My suggestion is that if you need this feature, make a gem/plugin and use it in your own apps.
Share and develop it with people who would like this feature through github or similiar.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I see what you are getting at, but it quickly becomes ambiguous
and inflexible.&lt;/p&gt;
&lt;p&gt;Say I have one &quot;Document&quot; and I want to link to this,&lt;br&gt;
but it belongs to two or more &quot;VirtualDirectories&quot;,&lt;br&gt;
how would it know which VirtualDirectory to use as parent?&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;rake routes&lt;/code&gt; to see available routes.&lt;br&gt;
(:controller doesn't change the name of the route, so in your
example the route helper would be foo_bar_path)&lt;/p&gt;
&lt;p&gt;My suggestion is that if you need this feature, make a
gem/plugin and use it in your own apps.&lt;br&gt;
Share and develop it with people who would like this feature
through github or similiar.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T14:32:35+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-08-12T14:32:36+01:00</updated-at>
      <user-id type="integer">79823</user-id>
      <version type="integer">5</version>
      <user-name>Rolf Bjaanes</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>As for having the routes become ambiguous, and inflexible. ...

If you ever wanted to have two routes for the the same model without nesting ( say for having admin and .. the url_for instance will always default to one of them, and for the other you will have to use the _path or _url helpers.. Is that also not just as ambiguous, and inflexible? Using the url_for &lt;instance&gt;, supplies the default_route, it's not going to prevent you from supplying something else using a helper method if you have another path available. 

It is opinionated, however, being opinionated is one of the foundational concepts behind rails in the first place. It simply allows you to specify a replacement for &lt;nested_instance&gt; with the appropriate [&lt;container(_id)&gt;,&lt;instance(_id)&gt;], and to not repeat yourself in the hundreds of places where it needs it throughout your application. 

The patch itself simply provides the optional hook to allow you to specify the arguments for the default route when rails otherwise would get confused.. allowing you to extend the convention of url_for being able to find the route for a bare instance record ( and by extension, all of the methods that rely on url_for ) even for the otherwise awkward case of nested or other cases where finding the path would be confusing for url_for. 

It doesn't prevent you from being more explicit when specifying the route otherwise, and it doesn't break existing functionality.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As for having the routes become ambiguous, and inflexible.
...&lt;/p&gt;
&lt;p&gt;If you ever wanted to have two routes for the the same model
without nesting ( say for having admin and .. the url_for instance
will always default to one of them, and for the other you will have
to use the &lt;em&gt;path or&lt;/em&gt; url helpers.. Is that also not just as
ambiguous, and inflexible? Using the url_for , supplies the
default_route, it's not going to prevent you from supplying
something else using a helper method if you have another path
available.&lt;/p&gt;
&lt;p&gt;It is opinionated, however, being opinionated is one of the
foundational concepts behind rails in the first place. It simply
allows you to specify a replacement for &amp;lt;nested_instance&amp;gt;
with the appropriate
[&amp;lt;container(&lt;em&gt;id)&amp;gt;,&amp;lt;instance(&lt;/em&gt;id)&amp;gt;], and to not
repeat yourself in the hundreds of places where it needs it
throughout your application.&lt;/p&gt;
&lt;p&gt;The patch itself simply provides the optional hook to allow you
to specify the arguments for the default route when rails otherwise
would get confused.. allowing you to extend the convention of
url_for being able to find the route for a bare instance record (
and by extension, all of the methods that rely on url_for ) even
for the otherwise awkward case of nested or other cases where
finding the path would be confusing for url_for.&lt;/p&gt;
&lt;p&gt;It doesn't prevent you from being more explicit when specifying
the route otherwise, and it doesn't break existing
functionality.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T16:59:29+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-08-12T16:59:31+01:00</updated-at>
      <user-id type="integer">110542</user-id>
      <version type="integer">6</version>
      <user-name>Robert Ferney</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Seems like there is little interest to weigh in from others.

I can see the use case, but I wouldn't do it this way.
Would have made a helper to help me out with the duplication.

For later: Add tests when creating a patch

-1 on the feature from me. Sorry.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems like there is little interest to weigh in from others.&lt;/p&gt;
&lt;p&gt;I can see the use case, but I wouldn't do it this way.&lt;br&gt;
Would have made a helper to help me out with the duplication.&lt;/p&gt;
&lt;p&gt;For later: Add tests when creating a patch&lt;/p&gt;
&lt;p&gt;-1 on the feature from me. Sorry.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T18:49:18+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-08-12T18:49:20+01:00</updated-at>
      <user-id type="integer">79823</user-id>
      <version type="integer">7</version>
      <user-name>Rolf Bjaanes</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>-1 from me too, this belongs in a gem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 from me too, this belongs in a gem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-16T23:13:39+01:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2010-10-16T23:13:41+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">8</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:30:03+00:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2011-02-02T16:42:00+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:30:04+00:00</created-at>
      <creator-id type="integer">110542</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5360</number>
      <permalink>allow-model-to-supply-arguments-to-url_for-in-polymorphic_routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>patch</tag>
      <title>Allow Model to supply arguments to url_for in polymorphic_routes</title>
      <updated-at type="datetime">2011-02-02T16:42:16+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Robert Ferney</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5360</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9b5e0e0e309b04c8c06f0328219d45496b2fcc74</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-11T21:53:05+01:00</created-at>
      <filename>polymorphic_routes_args.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">624704</id>
      <size type="integer">1462</size>
      <uploader-id type="integer">110542</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/624704/polymorphic_routes_args.diff</url>
    </attachment>
  </attachments>
</ticket>
