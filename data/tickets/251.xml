<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-25T19:04:27+01:00</created-at>
  <creator-id type="integer">11891</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">251</number>
  <permalink>shouldn-t-script-generate-scaffold-create-partials</permalink>
  <priority type="integer">14098</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>generators scaffold</tag>
  <title>Shouldn't script/generate scaffold create partials?</title>
  <updated-at type="datetime">2008-05-31T21:28:09+01:00</updated-at>
  <user-id type="integer">83</user-id>
  <version type="integer">2</version>
  <user-name>DHH</user-name>
  <creator-name>Dennis Theisen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/251</url>
  <priority-name nil="true"></priority-name>
  <original-body>Whenever I use the _scaffold-generator_ for a model, I always find me editing the New, Edit, Show and Index views to render partials.

h3. Example:

I have a *Post* model. Then I always need:

# @_post.html.erb@ to view my Posts
# @_edit_post.html.erb@ to edit/create my Posts


Is there any reasons the generator should not create these two partials and then call them in the CRUD-views?

It would also get new users into the habit of using partials, when they have been already created for them.

Maybe I could implement it myself - though I've never contributed anything yet and it could take my fairly long -  if someone says it would be a welcome patch.</original-body>
  <latest-body>Whenever I use the _scaffold-generator_ for a model, I always find me editing the New, Edit, Show and Index views to render partials.

h3. Example:

I have a *Post* model. Then I always need:

# @_post.html.erb@ to view my Posts
# @_edit_post.html.erb@ to edit/create my Posts


Is there any reasons the generator should not create these two partials and then call them in the CRUD-views?

It would also get new users into the habit of using partials, when they have been already created for them.

Maybe I could implement it myself - though I've never contributed anything yet and it could take my fairly long -  if someone says it would be a welcome patch.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Whenever I use the &lt;em&gt;scaffold-generator&lt;/em&gt; for a model, I always find me editing the New, Edit, Show and Index views to render partials.
&lt;/p&gt;
&lt;h3&gt;
Example:
&lt;/h3&gt;
&lt;p&gt;
I have a &lt;strong&gt;Post&lt;/strong&gt; model. Then I always need:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;code&gt;_post.html.erb&lt;/code&gt; to view my Posts
&lt;/li&gt;&lt;li&gt;
&lt;code&gt;_edit_post.html.erb&lt;/code&gt; to edit/create my Posts
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
Is there any reasons the generator should not create these two partials and then call them in the CRUD-views?
&lt;/p&gt;&lt;p&gt;
It would also get new users into the habit of using partials, when they have been already created for them.
&lt;/p&gt;&lt;p&gt;
Maybe I could implement it myself - though I've never contributed anything yet and it could take my fairly long -  if someone says it would be a welcome patch.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Whenever I use the _scaffold-generator_ for a model, I always find me editing the New, Edit, Show and Index views to render partials.

h3. Example:

I have a *Post* model. Then I always need:

# @_post.html.erb@ to view my Posts
# @_edit_post.html.erb@ to edit/create my Posts


Is there any reasons the generator should not create these two partials and then call them in the CRUD-views?

It would also get new users into the habit of using partials, when they have been already created for them.

Maybe I could implement it myself - though I've never contributed anything yet and it could take my fairly long -  if someone says it would be a welcome patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Whenever I use the &lt;em&gt;scaffold-generator&lt;/em&gt; for a model, I always find me editing the New, Edit, Show and Index views to render partials.
&lt;/p&gt;
&lt;h3&gt;
Example:
&lt;/h3&gt;
&lt;p&gt;
I have a &lt;strong&gt;Post&lt;/strong&gt; model. Then I always need:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;code&gt;_post.html.erb&lt;/code&gt; to view my Posts
&lt;/li&gt;&lt;li&gt;
&lt;code&gt;_edit_post.html.erb&lt;/code&gt; to edit/create my Posts
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
Is there any reasons the generator should not create these two partials and then call them in the CRUD-views?
&lt;/p&gt;&lt;p&gt;
It would also get new users into the habit of using partials, when they have been already created for them.
&lt;/p&gt;&lt;p&gt;
Maybe I could implement it myself - though I've never contributed anything yet and it could take my fairly long -  if someone says it would be a welcome patch.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-25T19:04:27+01:00</created-at>
      <creator-id type="integer">11891</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">251</number>
      <permalink>shouldn-t-script-generate-scaffold-create-partials</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Shouldn't script/generate scaffold create partials?</title>
      <updated-at type="datetime">2008-05-25T19:04:27+01:00</updated-at>
      <user-id type="integer">11891</user-id>
      <version type="integer">1</version>
      <user-name>Dennis Theisen</user-name>
      <creator-name>Dennis Theisen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/251</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't think it should. Partials make it harder to follow and are great as a first &quot;exercise for the reader&quot;. Scaffold code doesn't really need to be optimized, it's more important to teach some simple lessons and invite people to change it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I don't think it should. Partials make it harder to follow and are great as a first &quot;exercise for the reader&quot;. Scaffold code doesn't really need to be optimized, it's more important to teach some simple lessons and invite people to change it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-31T21:28:09+01:00</created-at>
      <creator-id type="integer">11891</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">251</number>
      <permalink>shouldn-t-script-generate-scaffold-create-partials</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Shouldn't script/generate scaffold create partials?</title>
      <updated-at type="datetime">2008-05-31T21:28:09+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">2</version>
      <user-name>DHH</user-name>
      <creator-name>Dennis Theisen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/251</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
