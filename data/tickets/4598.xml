<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-11-08T23:12:00+00:00</created-at>
  <creator-id type="integer">7315</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">4598</number>
  <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>activerecord bug bugmash patch</tag>
  <title>default_scope treats hashes and relations inconsistently when overwriting</title>
  <updated-at type="datetime">2011-02-24T02:03:53+00:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">18</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>David Chelimsky</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>In working on #4583, Brian and I discovered some inconsistent behavior. Here are a couple of tests that _should_ both behave the same way, but one passes and one fails:

http://github.com/dchelimsky/rails/commit/6180043572ff30a2e01690b86ae385e792847143

@@@ ruby
require &quot;cases/helper&quot;
require 'models/developer'

class ArelBugTest &lt; ActiveRecord::TestCase
  fixtures :developers

  # We would expect both to pass or both to fail, but one passes and one fails.

  # fails
  def test_default_scope_called_twice_with_relations
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope where(:name =&gt; 'David')
      default_scope where(:name =&gt; 'Jamis')
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;:name).uniq.sort
  end
  
  # passes
  def test_default_scope_called_twice_with_hashes
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope :conditions =&gt; { :name =&gt; 'David' }
      default_scope :conditions =&gt; { :name =&gt; 'Jamis' }
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;:name).uniq.sort
  end
end
@@@</original-body>
  <latest-body>In working on #4583, Brian and I discovered some inconsistent behavior. Here are a couple of tests that _should_ both behave the same way, but one passes and one fails:

http://github.com/dchelimsky/rails/commit/6180043572ff30a2e01690b86ae385e792847143

@@@ ruby
require &quot;cases/helper&quot;
require 'models/developer'

class ArelBugTest &lt; ActiveRecord::TestCase
  fixtures :developers

  # We would expect both to pass or both to fail, but one passes and one fails.

  # fails
  def test_default_scope_called_twice_with_relations
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope where(:name =&gt; 'David')
      default_scope where(:name =&gt; 'Jamis')
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;:name).uniq.sort
  end
  
  # passes
  def test_default_scope_called_twice_with_hashes
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope :conditions =&gt; { :name =&gt; 'David' }
      default_scope :conditions =&gt; { :name =&gt; 'Jamis' }
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;:name).uniq.sort
  end
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In working on &lt;a href=&quot;/projects/8994/tickets/4583&quot; title=
&quot;Ticket #4583&quot;&gt;#4583&lt;/a&gt;, Brian and I discovered some inconsistent
behavior. Here are a couple of tests that &lt;em&gt;should&lt;/em&gt; both
behave the same way, but one passes and one fails:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/dchelimsky/rails/commit/6180043572ff30a2e01690b86ae385e792847143&quot;&gt;
http://github.com/dchelimsky/rails/commit/6180043572ff30a2e01690b86...&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require &quot;cases/helper&quot;
require 'models/developer'

class ArelBugTest &amp;lt; ActiveRecord::TestCase
  fixtures :developers

  # We would expect both to pass or both to fail, but one passes and one fails.

  # fails
  def test_default_scope_called_twice_with_relations
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope where(:name =&amp;gt; 'David')
      default_scope where(:name =&amp;gt; 'Jamis')
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;amp;:name).uniq.sort
  end
  
  # passes
  def test_default_scope_called_twice_with_hashes
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope :conditions =&amp;gt; { :name =&amp;gt; 'David' }
      default_scope :conditions =&amp;gt; { :name =&amp;gt; 'Jamis' }
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;amp;:name).uniq.sort
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In working on #4583, Brian and I discovered some inconsistent behavior. Here are a couple of tests that _should_ both behave the same way, but one passes and one fails:

http://github.com/dchelimsky/rails/commit/6180043572ff30a2e01690b86ae385e792847143

@@@ ruby
require &quot;cases/helper&quot;
require 'models/developer'

class ArelBugTest &lt; ActiveRecord::TestCase
  fixtures :developers

  # We would expect both to pass or both to fail, but one passes and one fails.

  # fails
  def test_default_scope_called_twice_with_relations
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope where(:name =&gt; 'David')
      default_scope where(:name =&gt; 'Jamis')
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;:name).uniq.sort
  end
  
  # passes
  def test_default_scope_called_twice_with_hashes
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope :conditions =&gt; { :name =&gt; 'David' }
      default_scope :conditions =&gt; { :name =&gt; 'Jamis' }
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;:name).uniq.sort
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;In working on &lt;a href=&quot;/projects/8994/tickets/4583&quot; title=
&quot;Ticket #4583&quot;&gt;#4583&lt;/a&gt;, Brian and I discovered some inconsistent
behavior. Here are a couple of tests that &lt;em&gt;should&lt;/em&gt; both
behave the same way, but one passes and one fails:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/dchelimsky/rails/commit/6180043572ff30a2e01690b86ae385e792847143&quot;&gt;
http://github.com/dchelimsky/rails/commit/6180043572ff30a2e01690b86...&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require &quot;cases/helper&quot;
require 'models/developer'

class ArelBugTest &amp;lt; ActiveRecord::TestCase
  fixtures :developers

  # We would expect both to pass or both to fail, but one passes and one fails.

  # fails
  def test_default_scope_called_twice_with_relations
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope where(:name =&amp;gt; 'David')
      default_scope where(:name =&amp;gt; 'Jamis')
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;amp;:name).uniq.sort
  end
  
  # passes
  def test_default_scope_called_twice_with_hashes
    klass = Class.new(Developer)
    klass.class_eval do 
      default_scope :conditions =&amp;gt; { :name =&amp;gt; 'David' }
      default_scope :conditions =&amp;gt; { :name =&amp;gt; 'Jamis' }
    end
    assert_equal [&quot;Jamis&quot;], klass.all.map(&amp;amp;:name).uniq.sort
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-14T22:41:51+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-05-14T22:44:06+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">1</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In the first test case where relation is being passed the sql query is being built something like this.

&lt;pre&gt;
&gt; us = User.unscoped;
&gt;   us=us.merge(User.where(:name =&gt; 'David'));
&gt;   us=us.merge(User.where(:name =&gt; 'Jamis'));
&gt;   us.to_sql
 =&gt; &quot;SELECT     \&quot;users\&quot;.* FROM       \&quot;users\&quot; WHERE     (\&quot;users\&quot;.\&quot;name\&quot; = 'Jamis')&quot;
&lt;/pre&gt;

In the second case where hash is being passed the sql query is being built something like this.

&lt;pre&gt;
&gt; us = User.unscoped;
&gt; us = us.where(:name =&gt; 'David');
&gt; us = us.where(:name =&gt; 'Jamis');
&gt; us.to_sql
  =&gt; &quot;SELECT     \&quot;users\&quot;.* FROM       \&quot;users\&quot; WHERE     (\&quot;users\&quot;.\&quot;name\&quot; = 'David') AND (\&quot;users\&quot;.\&quot;name\&quot; = 'Jamis')&quot; 
&lt;/pre&gt;


Before I suggest a fix, I would like to know what direction to proceed. 

Based on ticket #4583 I should assume that the desired behavior should be the second sql so that one can pass more than one default_scope and all the conditions passed should be ANDed to build the final sql.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In the first test case where relation is being passed the sql
query is being built something like this.&lt;/p&gt;
&lt;pre&gt;
&amp;gt; us = User.unscoped;
&amp;gt;   us=us.merge(User.where(:name =&amp;gt; 'David'));
&amp;gt;   us=us.merge(User.where(:name =&amp;gt; 'Jamis'));
&amp;gt;   us.to_sql
 =&amp;gt; &quot;SELECT     \&quot;users\&quot;.* FROM       \&quot;users\&quot; WHERE     (\&quot;users\&quot;.\&quot;name\&quot; = 'Jamis')&quot;
&lt;/pre&gt;
&lt;p&gt;In the second case where hash is being passed the sql query is
being built something like this.&lt;/p&gt;
&lt;pre&gt;
&amp;gt; us = User.unscoped;
&amp;gt; us = us.where(:name =&amp;gt; 'David');
&amp;gt; us = us.where(:name =&amp;gt; 'Jamis');
&amp;gt; us.to_sql
  =&amp;gt; &quot;SELECT     \&quot;users\&quot;.* FROM       \&quot;users\&quot; WHERE     (\&quot;users\&quot;.\&quot;name\&quot; = 'David') AND (\&quot;users\&quot;.\&quot;name\&quot; = 'Jamis')&quot; 
&lt;/pre&gt;
&lt;p&gt;Before I suggest a fix, I would like to know what direction to
proceed.&lt;/p&gt;
&lt;p&gt;Based on ticket &lt;a href=&quot;/projects/8994/tickets/4583&quot; title=
&quot;Ticket #4583&quot;&gt;#4583&lt;/a&gt; I should assume that the desired behavior
should be the second sql so that one can pass more than one
default_scope and all the conditions passed should be ANDed to
build the final sql.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-15T04:41:27+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-05-15T04:41:29+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I would expect the same column to get ORed (an IN clause) and different columns to get ANDed:

@@@ ruby
user = User.unscoped
user = user.where(:name =&gt; 'David')
user = user.where(:name =&gt; 'Jamis')
user = user.where(:role =&gt; 'admin')
user.to_sql
=&gt; SELECT \&quot;users\&quot;.* FROM \&quot;users\&quot; WHERE (\&quot;users\&quot;.\&quot;name\&quot; in ('David','Jamis')) AND (\&quot;users\&quot;.\&quot;role\&quot; = 'admin')
@@@

Agree?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would expect the same column to get ORed (an IN clause) and
different columns to get ANDed:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user = User.unscoped
user = user.where(:name =&amp;gt; 'David')
user = user.where(:name =&amp;gt; 'Jamis')
user = user.where(:role =&amp;gt; 'admin')
user.to_sql
=&amp;gt; SELECT \&quot;users\&quot;.* FROM \&quot;users\&quot; WHERE (\&quot;users\&quot;.\&quot;name\&quot; in ('David','Jamis')) AND (\&quot;users\&quot;.\&quot;role\&quot; = 'admin')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Agree?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-15T04:56:11+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-05-15T04:56:12+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">3</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 Agree! i will try a fix</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 Agree! i will try a fix&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-15T16:36:56+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-05-15T16:37:01+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-15T20:49:28+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:tag: activerecord bug
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-05-15T20:49:30+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Test added here, i don't know if we should test this kind of things or fix in Arel and rely on his behavior.
Anyways i add the test case only for now.
I'm going to patch it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Test added here, i don't know if we should test this kind of
things or fix in Arel and rely on his behavior.&lt;br&gt;
Anyways i add the test case only for now.&lt;br&gt;
I'm going to patch it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-15T21:45:04+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-05-15T21:45:07+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached is a code patch.

@Santiago thanks for the test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a code patch.&lt;/p&gt;
&lt;p&gt;@Santiago thanks for the test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-16T01:17:29+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bug bugmash
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-05-16T01:17:31+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The test still fails in 3-0-stable.

@@@
  1) Failure:
test_find_all_using_where_twice_should_or_the_relation(RelationTest) [test/cases/relations_test.rb:655]:
&lt;[#&lt;Author id: 1, name: &quot;David&quot;, author_address_id: 1, author_address_extra_id: 2&gt;]&gt; expected but was
&lt;[]&gt;.
@@@

However the patch provided by Neeraj doesn't apply any more so I couldn't check if it solves the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The test still fails in 3-0-stable.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  1) Failure:
test_find_all_using_where_twice_should_or_the_relation(RelationTest) [test/cases/relations_test.rb:655]:
&amp;lt;[#&amp;lt;Author id: 1, name: &quot;David&quot;, author_address_id: 1, author_address_extra_id: 2&amp;gt;]&amp;gt; expected but was
&amp;lt;[]&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However the patch provided by Neeraj doesn't apply any more so I
couldn't check if it solves the problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T11:47:35+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-08-04T11:47:39+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">8</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I applied Neeraj's patch manually and it made the test pass. Here is a combined patch for 3-0-stable with both the test and fix. Tests are passing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I applied Neeraj's patch manually and it made the test pass.
Here is a combined patch for 3-0-stable with both the test and fix.
Tests are passing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T13:55:58+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-08-04T13:56:53+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">9</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27625)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27625&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T04:10:33+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-08-30T04:10:33+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">10</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-15T23:01:53+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 82861
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-10-15T23:01:53+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">11</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-07T11:38:10+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 88038
:assigned_user: 40272
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-11-07T11:38:16+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">12</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T01:05:53+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-11-08T23:12:00+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">13</version>
      <user-name>jim123456</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [fdc591351e5a231c4da47a4b363e961ae89cc864]) collapsing same table / column WHERE clauses to be OR [#4598 state:resolved]
https://github.com/rails/rails/commit/fdc591351e5a231c4da47a4b363e961ae89cc864</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/fdc591351e5a231c4da47a4b363e961ae89cc864&quot;
title=
&quot;Changeset [fdc591351e5a231c4da47a4b363e961ae89cc864]&quot;&gt;[fdc591351e5a231c4da47a4b363e961ae89cc864]&lt;/a&gt;)
collapsing same table / column WHERE clauses to be OR [&lt;a href=
&quot;/projects/8994/tickets/4598&quot; title=&quot;Ticket #4598&quot;&gt;#4598&lt;/a&gt;
state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/fdc591351e5a231c4da47a4b363e961ae89cc864&quot;&gt;
https://github.com/rails/rails/commit/fdc591351e5a231c4da47a4b363e9...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-18T01:14:52+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-11-18T01:14:55+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">14</version>
      <user-name>Repository</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [00693209ecc222842949d7cab076f89890cbd507]) collapsing same table / column WHERE clauses to be OR [#4598 state:resolved]
https://github.com/rails/rails/commit/00693209ecc222842949d7cab076f89890cbd507</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/00693209ecc222842949d7cab076f89890cbd507&quot;
title=
&quot;Changeset [00693209ecc222842949d7cab076f89890cbd507]&quot;&gt;[00693209ecc222842949d7cab076f89890cbd507]&lt;/a&gt;)
collapsing same table / column WHERE clauses to be OR [&lt;a href=
&quot;/projects/8994/tickets/4598&quot; title=&quot;Ticket #4598&quot;&gt;#4598&lt;/a&gt;
state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/00693209ecc222842949d7cab076f89890cbd507&quot;&gt;
https://github.com/rails/rails/commit/00693209ecc222842949d7cab076f...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-18T01:14:55+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2010-11-18T01:14:58+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">15</version>
      <user-name>Repository</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>http://groups.google.com/group/rubyonrails-core/browse_thread/thread/407f746fd1de6636

This inconsistency seems ok in context: second hash condition overwrites the first, whereas the second .where relation ANDs on to it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/407f746fd1de6636&quot;&gt;
http://groups.google.com/group/rubyonrails-core/browse_thread/threa...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This inconsistency seems ok in context: second hash condition
overwrites the first, whereas the second .where relation ANDs on to
it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-16T17:27:51+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
:milestone: 71470
</diffable-attributes>
      <milestone-id type="integer">101623</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2011-02-16T17:28:24+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">16</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.0.5</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>FWIW, I think that having to know that the .where and conditions work differently is confusing and puts an unnecessary burden on users, even if everything is visible in the same context. In our case, we broke the behavior of a gem by adding conditions to the default scope in a model, so we didn't have all the context in one place. Having conditions and .where work differently made it all the more confusing, which is why I submitted this ticket in the first place.</body>
      <body-html>&lt;div&gt;&lt;p&gt;FWIW, I think that having to know that the .where and conditions
work differently is confusing and puts an unnecessary burden on
users, even if everything is visible in the same context. In our
case, we broke the behavior of a gem by adding conditions to the
default scope in a model, so we didn't have all the context in one
place. Having conditions and .where work differently made it all
the more confusing, which is why I submitted this ticket in the
first place.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T07:56:05+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">101623</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2011-02-17T07:56:39+00:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">17</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.0.5</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I think what we need to do is change this to do an AND in both cases for Rails 3.1.  I don't like that we change it to an OR when combining *only certain columns*.  It's like we're tying to read the user's mind, and I am terrible at mind reading.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think what we need to do is change this to do an AND in both
cases for Rails 3.1. I don't like that we change it to an OR when
combining &lt;em&gt;only certain columns&lt;/em&gt;. It's like we're tying to
read the user's mind, and I am terrible at mind reading.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-24T02:03:23+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 101623
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4598</number>
      <permalink>default_scope-treats-hashes-and-relations-inconsistently-when-overwriting</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug bugmash patch</tag>
      <title>default_scope treats hashes and relations inconsistently when overwriting</title>
      <updated-at type="datetime">2011-02-24T02:03:53+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">18</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4598</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>6a5bc9e033a91707f29f23b69c4ad7234fdd64ec</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-15T21:45:04+01:00</created-at>
      <filename>relation.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">522710</id>
      <size type="integer">1149</size>
      <uploader-id type="integer">40272</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/522710/relation.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>2d675d42ea704541c7acf484912410a1efb2d613</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-16T01:17:29+01:00</created-at>
      <filename>4598_code_fix_against_rails_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">522769</id>
      <size type="integer">1704</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/522769/4598_code_fix_against_rails_edge.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>17ec9b526847028132841030f35bc89343efce28</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-04T13:55:58+01:00</created-at>
      <filename>relations_combined_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">614594</id>
      <size type="integer">2939</size>
      <uploader-id type="integer">89656</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/614594/relations_combined_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
