Index: activerecord/test/associations/eager_test.rb
===================================================================
--- activerecord/test/associations/eager_test.rb	(revision 6588)
+++ activerecord/test/associations/eager_test.rb	(working copy)
@@ -390,4 +390,9 @@
       assert_equal 3, authors(:david).posts_with_comments.count(:conditions => "length(comments.body) > 15")
     end
   end
+
+  def test_calculated_with_include
+    post = Post.find(:first, :select => '"some calculated value" AS calculated', :include => :comments)
+    assert_equal "some calculated value", post.calculated
+  end
 end
Index: activerecord/lib/active_record/associations.rb
===================================================================
--- activerecord/lib/active_record/associations.rb	(revision 6588)
+++ activerecord/lib/active_record/associations.rb	(working copy)
@@ -1242,7 +1242,10 @@
 
         def construct_finder_sql_with_included_associations(options, join_dependency)
           scope = scope(:find)
-          sql = "SELECT #{column_aliases(join_dependency)} FROM #{(scope && scope[:from]) || options[:from] || table_name} "
+	  select = (scope && scope[:select]) || options[:select]
+	  
+          sql  = "SELECT #{select.to_s + ', ' if select}#{column_aliases(join_dependency)} "
+	  sql << "FROM #{(scope && scope[:from]) || options[:from] || table_name} "
           sql << join_dependency.join_associations.collect{|join| join.association_join }.join
  
           add_joins!(sql, options, scope)
@@ -1498,7 +1501,9 @@
             end
 
             def extract_record(row)
-              column_names_with_alias.inject({}){|record, (cn, an)| record[cn] = row[an]; record}
+              extracted = column_names_with_alias.inject({}){|record, (cn, an)| record[cn] = row[an]; record}
+              extracted.merge!(row.reject{|k, v| k =~ /^t\d+_r\d+$/}) if aliased_prefix == "t0"
+              return extracted
             end
 
             def record_id(row)
