<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-06-04T13:30:41+01:00</created-at>
  <creator-id type="integer">58874</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2757</number>
  <permalink>construct_sql-in-hasmanythroughassociation-is-broken</permalink>
  <priority type="integer">1866</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>construct_sql in HasManyThroughAssociation is broken</title>
  <updated-at type="datetime">2010-10-09T04:05:32+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Jonas Wagner</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2757</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is not, strictly spoken, a bug report as I don't know whether it creates any misbehavior... just a piece of code which certainly doesn't work as intended:

Line 183 and following of active_record/associations/has_many_through_association.rb:

@@@ ruby
def construct_sql
  case
    when @reflection.options[:finder_sql]
      @finder_sql = interpolate_sql(@reflection.options[:finder_sql])

      @finder_sql = &quot;#{@reflection.quoted_table_name}.#{@reflection.primary_key_name} = #{owner_quoted_id}&quot;
      @finder_sql &lt;&lt; &quot; AND (#{conditions})&quot; if conditions
    else
      @finder_sql = construct_conditions
  end
@@@

The case statement does not have a value to test.

@finder_sql is assigned twice, the first value gets overwritten, thus @reflection.options[:finder_sql] has no effect.

Any comments? Somebody with more in-depth knowledge of ActiveRecord motivated to have a look at it?</original-body>
  <latest-body>This is not, strictly spoken, a bug report as I don't know whether it creates any misbehavior... just a piece of code which certainly doesn't work as intended:

Line 183 and following of active_record/associations/has_many_through_association.rb:

@@@ ruby
def construct_sql
  case
    when @reflection.options[:finder_sql]
      @finder_sql = interpolate_sql(@reflection.options[:finder_sql])

      @finder_sql = &quot;#{@reflection.quoted_table_name}.#{@reflection.primary_key_name} = #{owner_quoted_id}&quot;
      @finder_sql &lt;&lt; &quot; AND (#{conditions})&quot; if conditions
    else
      @finder_sql = construct_conditions
  end
@@@

The case statement does not have a value to test.

@finder_sql is assigned twice, the first value gets overwritten, thus @reflection.options[:finder_sql] has no effect.

Any comments? Somebody with more in-depth knowledge of ActiveRecord motivated to have a look at it?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is not, strictly spoken, a bug report as I don't know
whether it creates any misbehavior... just a piece of code which
certainly doesn't work as intended:&lt;/p&gt;
&lt;p&gt;Line 183 and following of
active_record/associations/has_many_through_association.rb:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
def construct_sql
  case
    when @reflection.options[:finder_sql]
      @finder_sql = interpolate_sql(@reflection.options[:finder_sql])

      @finder_sql = &amp;quot;#{@reflection.quoted_table_name}.#{@reflection.primary_key_name} = #{owner_quoted_id}&amp;quot;
      @finder_sql &amp;lt;&amp;lt; &amp;quot; AND (#{conditions})&amp;quot; if conditions
    else
      @finder_sql = construct_conditions
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The case statement does not have a value to test.&lt;/p&gt;
&lt;p&gt;@finder_sql is assigned twice, the first value gets overwritten,
thus @reflection.options[:finder_sql] has no effect.&lt;/p&gt;
&lt;p&gt;Any comments? Somebody with more in-depth knowledge of
ActiveRecord motivated to have a look at it?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is not, strictly spoken, a bug report as I don't know whether it creates any misbehavior... just a piece of code which certainly doesn't work as intended:

Line 183 and following of active_record/associations/has_many_through_association.rb:

@@@ ruby
def construct_sql
  case
    when @reflection.options[:finder_sql]
      @finder_sql = interpolate_sql(@reflection.options[:finder_sql])

      @finder_sql = &quot;#{@reflection.quoted_table_name}.#{@reflection.primary_key_name} = #{owner_quoted_id}&quot;
      @finder_sql &lt;&lt; &quot; AND (#{conditions})&quot; if conditions
    else
      @finder_sql = construct_conditions
  end
@@@

The case statement does not have a value to test.

@finder_sql is assigned twice, the first value gets overwritten, thus @reflection.options[:finder_sql] has no effect.

Any comments? Somebody with more in-depth knowledge of ActiveRecord motivated to have a look at it?</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is not, strictly spoken, a bug report as I don't know
whether it creates any misbehavior... just a piece of code which
certainly doesn't work as intended:&lt;/p&gt;
&lt;p&gt;Line 183 and following of
active_record/associations/has_many_through_association.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def construct_sql
  case
    when @reflection.options[:finder_sql]
      @finder_sql = interpolate_sql(@reflection.options[:finder_sql])

      @finder_sql = &quot;#{@reflection.quoted_table_name}.#{@reflection.primary_key_name} = #{owner_quoted_id}&quot;
      @finder_sql &amp;lt;&amp;lt; &quot; AND (#{conditions})&quot; if conditions
    else
      @finder_sql = construct_conditions
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The case statement does not have a value to test.&lt;/p&gt;
&lt;p&gt;@finder_sql is assigned twice, the first value gets overwritten,
thus @reflection.options[:finder_sql] has no effect.&lt;/p&gt;
&lt;p&gt;Any comments? Somebody with more in-depth knowledge of
ActiveRecord motivated to have a look at it?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-04T13:30:41+01:00</created-at>
      <creator-id type="integer">58874</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2757</number>
      <permalink>construct_sql-in-hasmanythroughassociation-is-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>construct_sql in HasManyThroughAssociation is broken</title>
      <updated-at type="datetime">2009-06-04T13:30:44+01:00</updated-at>
      <user-id type="integer">58874</user-id>
      <version type="integer">1</version>
      <user-name>Jonas Wagner</user-name>
      <creator-name>Jonas Wagner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2757</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:51+01:00</created-at>
      <creator-id type="integer">58874</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2757</number>
      <permalink>construct_sql-in-hasmanythroughassociation-is-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>construct_sql in HasManyThroughAssociation is broken</title>
      <updated-at type="datetime">2010-05-04T18:48:51+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jonas Wagner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2757</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T04:05:27+01:00</created-at>
      <creator-id type="integer">58874</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2757</number>
      <permalink>construct_sql-in-hasmanythroughassociation-is-broken</permalink>
      <priority type="integer">1866</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>construct_sql in HasManyThroughAssociation is broken</title>
      <updated-at type="datetime">2010-10-09T04:05:32+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Jonas Wagner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2757</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
