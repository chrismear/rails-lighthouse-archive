From 1ed7f9b073626de361fe241459fddf5cc553523d Mon Sep 17 00:00:00 2001
From: Neeraj Singh <neerajdotname@gmail.com>
Date: Mon, 26 Jul 2010 15:12:36 -0400
Subject: [PATCH] Eager loading an association should not change the count of
 children

[#4971 state:resolved]
---
 activerecord/lib/active_record/associations.rb |    4 ++++
 activerecord/test/cases/associations_test.rb   |   13 +++++++++++++
 activerecord/test/models/electron.rb           |    3 +++
 activerecord/test/models/liquid.rb             |    5 +++++
 activerecord/test/models/molecule.rb           |    4 ++++
 activerecord/test/schema/schema.rb             |   13 +++++++++++++
 6 files changed, 42 insertions(+), 0 deletions(-)
 create mode 100644 activerecord/test/models/electron.rb
 create mode 100644 activerecord/test/models/liquid.rb
 create mode 100644 activerecord/test/models/molecule.rb

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index 1b9b725..d9e0dfb 100644
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1812,6 +1812,10 @@ module ActiveRecord
               when Hash
                 associations.keys.each do |name|
                   reflection = base.reflections[name]
+                  
+                  if records.any? && reflection.options && reflection.options[:uniq]
+                    records.each { |record| record.send(reflection.name).target.uniq! }
+                  end
 
                   parent_records = []
                   records.each do |record|
diff --git a/activerecord/test/cases/associations_test.rb b/activerecord/test/cases/associations_test.rb
index a1c794c..d328ca6 100644
--- a/activerecord/test/cases/associations_test.rb
+++ b/activerecord/test/cases/associations_test.rb
@@ -14,11 +14,24 @@ require 'models/reader'
 require 'models/parrot'
 require 'models/ship_part'
 require 'models/ship'
+require 'models/liquid'
+require 'models/molecule'
+require 'models/electron'
 
 class AssociationsTest < ActiveRecord::TestCase
   fixtures :accounts, :companies, :developers, :projects, :developers_projects,
            :computers, :people, :readers
 
+  def test_eager_loading_should_not_change_count_of_children
+    liquid = Liquid.create(:name => 'salty')
+    molecule = liquid.molecules.create(:name => 'molecule_1')
+    molecule.electrons.create(:name => 'electron_1')
+    molecule.electrons.create(:name => 'electron_2')
+
+    liquids = Liquid.includes(:molecules => :electrons).where('molecules.id is not null')
+    assert_equal 1, liquids[0].molecules.length
+  end
+
   def test_loading_the_association_target_should_keep_child_records_marked_for_destruction
     ship = Ship.create!(:name => "The good ship Dollypop")
     part = ship.parts.create!(:name => "Mast")
diff --git a/activerecord/test/models/electron.rb b/activerecord/test/models/electron.rb
new file mode 100644
index 0000000..35af9f6
--- /dev/null
+++ b/activerecord/test/models/electron.rb
@@ -0,0 +1,3 @@
+class Electron < ActiveRecord::Base
+  belongs_to :molecule
+end
diff --git a/activerecord/test/models/liquid.rb b/activerecord/test/models/liquid.rb
new file mode 100644
index 0000000..b96c054
--- /dev/null
+++ b/activerecord/test/models/liquid.rb
@@ -0,0 +1,5 @@
+class Liquid < ActiveRecord::Base
+  set_table_name :liquid
+  has_many :molecules, :uniq => true
+end
+
diff --git a/activerecord/test/models/molecule.rb b/activerecord/test/models/molecule.rb
new file mode 100644
index 0000000..69325b8
--- /dev/null
+++ b/activerecord/test/models/molecule.rb
@@ -0,0 +1,4 @@
+class Molecule < ActiveRecord::Base
+  belongs_to :liquid
+  has_many :electrons
+end
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index f3fd37c..ec9278b 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -616,6 +616,19 @@ ActiveRecord::Schema.define do
     t.datetime :updated_at
   end
 
+  create_table :liquid, :force => true do |t|
+    t.string :name
+  end
+  create_table :molecules, :force => true do |t|
+    t.integer :liquid_id
+    t.string :name
+  end
+  create_table :electrons, :force => true do |t|
+    t.integer :molecule_id
+    t.string :name
+  end
+
+
   except 'SQLite' do
     # fk_test_has_fk should be before fk_test_has_pk
     create_table :fk_test_has_fk, :force => true do |t|
-- 
1.6.5.2

