<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-04-07T17:08:45+01:00</created-at>
  <creator-id type="integer">58368</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4338</number>
  <permalink>many-tomany-creates-foreign-key-attributes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>many-tomany creates foreign key attributes</title>
  <updated-at type="datetime">2011-02-02T17:51:58+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Hery</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4338</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hello, 

Use rails 2.3.x

I this a feature or a bug ?

     class Word
       has_and_belongs_to_many :sentences
     end

     class Sentence
       has_and_belongs_to_many :words
     end

     sentenza = Sentence.first
     first_word = sentenza.words.first

     first_word.attributes #=&gt; {&quot;label&quot;=&gt;&quot;This&quot;, &quot;created_at&quot;=&gt;Wed Apr 07 15:48:30 UTC 2010, &quot;updated_at&quot;=&gt;Wed Apr 07 15:48:30 UTC 2010, &quot;sentence_id&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;1, &quot;word_id&quot;=&gt;&quot;1&quot;}

I just want to try to make a deep copy of an ActiveRecord::Base object but I can't use attributes method :

Here is my example :

     words_attributes = sentenza.words.map(&amp;:attributes)

     new_sentenza = Sentenza.create(:label =&gt; &quot;2nd Sentence&quot;)

     new_sentenza.words.create(words_attributes) but it will fail (since word_id and sentence_id are not present in Word.column_names

Using a safe_attributes method will solve this issue but I am wondering if there is a better way to do it :

    def safe_attributes
      attributes.select{|a| self.class.columns_hash[a] }
    end

And the call:

     words_attributes = sentenza.words.map(&amp;:safe_attributes)</original-body>
  <latest-body>Hello, 

Use rails 2.3.x

I this a feature or a bug ?

     class Word
       has_and_belongs_to_many :sentences
     end

     class Sentence
       has_and_belongs_to_many :words
     end

     sentenza = Sentence.first
     first_word = sentenza.words.first

     first_word.attributes #=&gt; {&quot;label&quot;=&gt;&quot;This&quot;, &quot;created_at&quot;=&gt;Wed Apr 07 15:48:30 UTC 2010, &quot;updated_at&quot;=&gt;Wed Apr 07 15:48:30 UTC 2010, &quot;sentence_id&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;1, &quot;word_id&quot;=&gt;&quot;1&quot;}

I just want to try to make a deep copy of an ActiveRecord::Base object but I can't use attributes method :

Here is my example :

     words_attributes = sentenza.words.map(&amp;:attributes)

     new_sentenza = Sentenza.create(:label =&gt; &quot;2nd Sentence&quot;)

     new_sentenza.words.create(words_attributes) but it will fail (since word_id and sentence_id are not present in Word.column_names

Using a safe_attributes method will solve this issue but I am wondering if there is a better way to do it :

    def safe_attributes
      attributes.select{|a| self.class.columns_hash[a] }
    end

And the call:

     words_attributes = sentenza.words.map(&amp;:safe_attributes)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;Use rails 2.3.x&lt;/p&gt;
&lt;p&gt;I this a feature or a bug ?&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; class Word
   has_and_belongs_to_many :sentences
 end

 class Sentence
   has_and_belongs_to_many :words
 end

 sentenza = Sentence.first
 first_word = sentenza.words.first

 first_word.attributes #=&amp;gt; {&quot;label&quot;=&amp;gt;&quot;This&quot;, &quot;created_at&quot;=&amp;gt;Wed Apr 07 15:48:30 UTC 2010, &quot;updated_at&quot;=&amp;gt;Wed Apr 07 15:48:30 UTC 2010, &quot;sentence_id&quot;=&amp;gt;&quot;1&quot;, &quot;id&quot;=&amp;gt;1, &quot;word_id&quot;=&amp;gt;&quot;1&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I just want to try to make a deep copy of an ActiveRecord::Base
object but I can't use attributes method :&lt;/p&gt;
&lt;p&gt;Here is my example :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; words_attributes = sentenza.words.map(&amp;amp;:attributes)

 new_sentenza = Sentenza.create(:label =&amp;gt; &quot;2nd Sentence&quot;)

 new_sentenza.words.create(words_attributes) but it will fail (since word_id and sentence_id are not present in Word.column_names&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Using a safe_attributes method will solve this issue but I am
wondering if there is a better way to do it :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def safe_attributes
  attributes.select{|a| self.class.columns_hash[a] }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And the call:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; words_attributes = sentenza.words.map(&amp;amp;:safe_attributes)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello, 

Use rails 2.3.x

I this a feature or a bug ?

     class Word
       has_and_belongs_to_many :sentences
     end

     class Sentence
       has_and_belongs_to_many :words
     end

     sentenza = Sentence.first
     first_word = sentenza.words.first

     first_word.attributes #=&gt; {&quot;label&quot;=&gt;&quot;This&quot;, &quot;created_at&quot;=&gt;Wed Apr 07 15:48:30 UTC 2010, &quot;updated_at&quot;=&gt;Wed Apr 07 15:48:30 UTC 2010, &quot;sentence_id&quot;=&gt;&quot;1&quot;, &quot;id&quot;=&gt;1, &quot;word_id&quot;=&gt;&quot;1&quot;}

I just want to try to make a deep copy of an ActiveRecord::Base object but I can't use attributes method :

Here is my example :

     words_attributes = sentenza.words.map(&amp;:attributes)

     new_sentenza = Sentenza.create(:label =&gt; &quot;2nd Sentence&quot;)

     new_sentenza.words.create(words_attributes) but it will fail (since word_id and sentence_id are not present in Word.column_names

Using a safe_attributes method will solve this issue but I am wondering if there is a better way to do it :

    def safe_attributes
      attributes.select{|a| self.class.columns_hash[a] }
    end

And the call:

     words_attributes = sentenza.words.map(&amp;:safe_attributes)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;Use rails 2.3.x&lt;/p&gt;
&lt;p&gt;I this a feature or a bug ?&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; class Word
   has_and_belongs_to_many :sentences
 end

 class Sentence
   has_and_belongs_to_many :words
 end

 sentenza = Sentence.first
 first_word = sentenza.words.first

 first_word.attributes #=&amp;gt; {&quot;label&quot;=&amp;gt;&quot;This&quot;, &quot;created_at&quot;=&amp;gt;Wed Apr 07 15:48:30 UTC 2010, &quot;updated_at&quot;=&amp;gt;Wed Apr 07 15:48:30 UTC 2010, &quot;sentence_id&quot;=&amp;gt;&quot;1&quot;, &quot;id&quot;=&amp;gt;1, &quot;word_id&quot;=&amp;gt;&quot;1&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I just want to try to make a deep copy of an ActiveRecord::Base
object but I can't use attributes method :&lt;/p&gt;
&lt;p&gt;Here is my example :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; words_attributes = sentenza.words.map(&amp;amp;:attributes)

 new_sentenza = Sentenza.create(:label =&amp;gt; &quot;2nd Sentence&quot;)

 new_sentenza.words.create(words_attributes) but it will fail (since word_id and sentence_id are not present in Word.column_names&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Using a safe_attributes method will solve this issue but I am
wondering if there is a better way to do it :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def safe_attributes
  attributes.select{|a| self.class.columns_hash[a] }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And the call:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; words_attributes = sentenza.words.map(&amp;amp;:safe_attributes)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-07T17:08:45+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4338</number>
      <permalink>many-tomany-creates-foreign-key-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>many-tomany creates foreign key attributes</title>
      <updated-at type="datetime">2010-04-07T17:08:47+01:00</updated-at>
      <user-id type="integer">58368</user-id>
      <version type="integer">1</version>
      <user-name>Hery</user-name>
      <creator-name>Hery</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4338</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:44:08+00:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4338</number>
      <permalink>many-tomany-creates-foreign-key-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>many-tomany creates foreign key attributes</title>
      <updated-at type="datetime">2011-02-02T17:51:58+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Hery</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4338</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:44:09+00:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4338</number>
      <permalink>many-tomany-creates-foreign-key-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>many-tomany creates foreign key attributes</title>
      <updated-at type="datetime">2011-02-02T17:51:29+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Hery</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4338</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
