<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-02T18:07:34+00:00</created-at>
  <creator-id type="integer">6016</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6508</number>
  <permalink>undocumented-actionmailer-openssl_verify_mode-option</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>actionmailer certificate documentation openssl_verify_mode &quot;rails 30&quot; self-signed ssl verify wildcard</tag>
  <title>Undocumented ActionMailer openssl_verify_mode option</title>
  <updated-at type="datetime">2011-04-19T19:47:22+01:00</updated-at>
  <user-id type="integer">6016</user-id>
  <version type="integer">3</version>
  <user-name>Florent Piteau</user-name>
  <creator-name>Florent Piteau</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6508</url>
  <priority-name nil="true"></priority-name>
  <original-body>In the mail lib used by ActionMailer, there is a really usefull option for people using wildcard and/or self-signed ssl certificates for their mail server : openssl_verify_mode which can take a string value (none, peer, client_once, fail_if_no_peer_cert) or OpenSSL verify mode constant (OpenSSL::SSL::VERIFY_NONE, OpenSSL::SSL::VERIFY_PEER, ...)

This is how i'm using it :

@@@ ruby  
ActionMailer::Base.smtp_settings = {  
  :address              =&gt; 'mail.mydomain.net',
  :port                 =&gt; 587,  
  :domain               =&gt; 'mydomain.net',  
  :user_name            =&gt; 'user@mydomain.net',  
  :password             =&gt; 'thatsasecret',  
  :authentication       =&gt; :login,  
  :enable_starttls_auto =&gt; true,  
  :openssl_verify_mode  =&gt; 'none' # Only use this option for a self-signed and/or wildcard certificate
}  
@@@

I think this should be mentioned in the &quot;Configuration options&quot; section of ActionMailer::Base documentation. Some people could really use it and shouldn't have to go in to the mail lib documentation to find it.</original-body>
  <latest-body>In the mail lib used by ActionMailer, there is a really usefull option for people using wildcard and/or self-signed ssl certificates for their mail server : openssl_verify_mode which can take a string value (none, peer, client_once, fail_if_no_peer_cert) or OpenSSL verify mode constant (OpenSSL::SSL::VERIFY_NONE, OpenSSL::SSL::VERIFY_PEER, ...)

This is how i'm using it :

@@@ ruby  
ActionMailer::Base.smtp_settings = {  
  :address              =&gt; 'mail.mydomain.net',
  :port                 =&gt; 587,  
  :domain               =&gt; 'mydomain.net',  
  :user_name            =&gt; 'user@mydomain.net',  
  :password             =&gt; 'thatsasecret',  
  :authentication       =&gt; :login,  
  :enable_starttls_auto =&gt; true,  
  :openssl_verify_mode  =&gt; 'none' # Only use this option for a self-signed and/or wildcard certificate
}  
@@@

I think this should be mentioned in the &quot;Configuration options&quot; section of ActionMailer::Base documentation. Some people could really use it and shouldn't have to go in to the mail lib documentation to find it.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In the mail lib used by ActionMailer, there is a really usefull
option for people using wildcard and/or self-signed ssl
certificates for their mail server : openssl_verify_mode which can
take a string value (none, peer, client_once, fail_if_no_peer_cert)
or OpenSSL verify mode constant (OpenSSL::SSL::VERIFY_NONE,
OpenSSL::SSL::VERIFY_PEER, ...)&lt;/p&gt;
&lt;p&gt;This is how i'm using it :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;ActionMailer::Base.smtp_settings = {  
  :address              =&amp;gt; 'mail.mydomain.net',
  :port                 =&amp;gt; 587,  
  :domain               =&amp;gt; 'mydomain.net',  
  :user_name            =&amp;gt; 'user@mydomain.net',  
  :password             =&amp;gt; 'thatsasecret',  
  :authentication       =&amp;gt; :login,  
  :enable_starttls_auto =&amp;gt; true,  
  :openssl_verify_mode  =&amp;gt; 'none' # Only use this option for a self-signed and/or wildcard certificate
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think this should be mentioned in the &quot;Configuration options&quot;
section of ActionMailer::Base documentation. Some people could
really use it and shouldn't have to go in to the mail lib
documentation to find it.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In the mail lib used by ActionMailer, there is a really usefull option for people using wildcard and/or self-signed ssl certificates for their mail server : openssl_verify_mode which can take a string value (none, peer, client_once, fail_if_no_peer_cert) or OpenSSL verify mode constant (OpenSSL::SSL::VERIFY_NONE, OpenSSL::SSL::VERIFY_PEER, ...)

This is how i'm using it :

@@@ ruby  
ActionMailer::Base.smtp_settings = {  
  :address              =&gt; 'mail.mydomain.net',
  :port                 =&gt; 587,  
  :domain               =&gt; 'mydomain.net',  
  :user_name            =&gt; 'user@mydomain.net',  
  :password             =&gt; 'thatsasecret',  
  :authentication       =&gt; :login,  
  :enable_starttls_auto =&gt; true,  
  :openssl_verify_mode  =&gt; 'none' # Only use this option for a self-signed and/or wildcard certificate
}  
@@@

I think this should be mentioned in the &quot;Configuration options&quot; section of ActionMailer::Base documentation. Some people could really use it and shouldn't have to go in to the mail lib documentation to find it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In the mail lib used by ActionMailer, there is a really usefull
option for people using wildcard and/or self-signed ssl
certificates for their mail server : openssl_verify_mode which can
take a string value (none, peer, client_once, fail_if_no_peer_cert)
or OpenSSL verify mode constant (OpenSSL::SSL::VERIFY_NONE,
OpenSSL::SSL::VERIFY_PEER, ...)&lt;/p&gt;
&lt;p&gt;This is how i'm using it :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;ActionMailer::Base.smtp_settings = {  
  :address              =&amp;gt; 'mail.mydomain.net',
  :port                 =&amp;gt; 587,  
  :domain               =&amp;gt; 'mydomain.net',  
  :user_name            =&amp;gt; 'user@mydomain.net',  
  :password             =&amp;gt; 'thatsasecret',  
  :authentication       =&amp;gt; :login,  
  :enable_starttls_auto =&amp;gt; true,  
  :openssl_verify_mode  =&amp;gt; 'none' # Only use this option for a self-signed and/or wildcard certificate
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think this should be mentioned in the &quot;Configuration options&quot;
section of ActionMailer::Base documentation. Some people could
really use it and shouldn't have to go in to the mail lib
documentation to find it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-02T18:07:34+00:00</created-at>
      <creator-id type="integer">6016</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6508</number>
      <permalink>undocumented-actionmailer-openssl_verify_mode-option</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionmailer certificate openssl_verify_mode &quot;rails 30&quot; self-signed ssl verify wildcard</tag>
      <title>Undocumented ActionMailer openssl_verify_mode option</title>
      <updated-at type="datetime">2011-03-02T18:07:37+00:00</updated-at>
      <user-id type="integer">6016</user-id>
      <version type="integer">1</version>
      <user-name>Florent Piteau</user-name>
      <creator-name>Florent Piteau</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6508</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Florent, 

If you can do the documentation, you can make it directly in [docrails](https://github.com/lifo/docrails). That repo has public commit access. You can make the changes and push it there. Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Florent,&lt;/p&gt;
&lt;p&gt;If you can do the documentation, you can make it directly in
&lt;a href=&quot;https://github.com/lifo/docrails&quot;&gt;docrails&lt;/a&gt;. That repo
has public commit access. You can make the changes and push it
there. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-02T19:54:06+00:00</created-at>
      <creator-id type="integer">6016</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: actionmailer certificate openssl_verify_mode &quot;rails 30&quot; self-signed ssl verify wildcard
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6508</number>
      <permalink>undocumented-actionmailer-openssl_verify_mode-option</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionmailer certificate documentation openssl_verify_mode &quot;rails 30&quot; self-signed ssl verify wildcard</tag>
      <title>Undocumented ActionMailer openssl_verify_mode option</title>
      <updated-at type="datetime">2011-03-02T19:54:09+00:00</updated-at>
      <user-id type="integer">82083</user-id>
      <version type="integer">2</version>
      <user-name>Vijay Dev</user-name>
      <creator-name>Florent Piteau</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6508</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Finally wrote it : https://github.com/lifo/docrails/commit/a1639ad7524127be0a9e9398dc2ccc8c6629adee</body>
      <body-html>&lt;div&gt;&lt;p&gt;Finally wrote it : &lt;a href=
&quot;https://github.com/lifo/docrails/commit/a1639ad7524127be0a9e9398dc2ccc8c6629adee&quot;&gt;
https://github.com/lifo/docrails/commit/a1639ad7524127be0a9e9398dc2...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-19T19:47:19+01:00</created-at>
      <creator-id type="integer">6016</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6508</number>
      <permalink>undocumented-actionmailer-openssl_verify_mode-option</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionmailer certificate documentation openssl_verify_mode &quot;rails 30&quot; self-signed ssl verify wildcard</tag>
      <title>Undocumented ActionMailer openssl_verify_mode option</title>
      <updated-at type="datetime">2011-04-19T19:47:22+01:00</updated-at>
      <user-id type="integer">6016</user-id>
      <version type="integer">3</version>
      <user-name>Florent Piteau</user-name>
      <creator-name>Florent Piteau</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6508</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
