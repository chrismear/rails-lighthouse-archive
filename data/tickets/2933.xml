<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-21T01:45:48+01:00</created-at>
  <creator-id type="integer">58368</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">73534</milestone-id>
  <number type="integer">2933</number>
  <permalink>232-update_attributes-save-many-to-many-associations</permalink>
  <priority type="integer">2014</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord</tag>
  <title>2.3.2 update_attributes save many-to-many associations</title>
  <updated-at type="datetime">2010-09-21T16:40:25+01:00</updated-at>
  <user-id type="integer">8406</user-id>
  <version type="integer">28</version>
  <user-name>Eloy Duran</user-name>
  <creator-name>Hery</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
  <milestone-title>2.3.9</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,

I use ruby 1.8.7 and Rails 2.3.2

&gt; update_attributes
&gt;&gt; Updates all the attributes from the passed-in Hash and saves the record. If the object is invalid, the saving will &gt;&gt; fail and false will be returned.

Hmm, as I understand this purpose :

@@@ ruby

class User

  has_and_belongs_to_many :sites
  validates_presence_of :login

end

class Site
  has_and_belongs_to_many :users
end

class UsersController &lt; ApplicationController

  def update
    @user = User.find(params[:id])
    if @user.update_attributes(params[:user]])
      redirect_to :action =&gt; &quot;list&quot;
    else
      render(:action =&gt; &quot;edit&quot;)
    end  
  end

end

@@@

Before the request @user.site_ids == [12,13,14,15]

params[:user][:site_ids] == [12,13]
params[:user][:login] == &quot;&quot;

When @user is not valid, I expect that the table sites_users is not updated but as I can see in the log files rails checks the validity of User AFTER updating sites_users

&gt;  SQL (0.0ms)   BEGIN
&gt;  SQL (0.2ms)   DELETE FROM `sites_users` WHERE user_id = 431 AND site_id IN (15,14)
&gt;  SQL (0.0ms)   COMMIT

&gt;  User Exists (0.7ms)   SELECT `users`.id FROM `users` WHERE (`users`.`login` = BINARY '' AND `users`.id &lt;&gt; 431) &gt;LIMIT 1
&gt;  User Exists (0.4ms)   SELECT `users`.id FROM `users` WHERE (`users`.`name` = BINARY '*******' AND `users`.id &lt;&gt;    &gt; 431) LIMIT 1

Is this the normal behaviour ? I think it should be &quot;check for the validity of a user, then update the associations&quot;.</original-body>
  <latest-body>Hi,

I use ruby 1.8.7 and Rails 2.3.2

&gt; update_attributes
&gt;&gt; Updates all the attributes from the passed-in Hash and saves the record. If the object is invalid, the saving will &gt;&gt; fail and false will be returned.

Hmm, as I understand this purpose :

@@@ ruby

class User

  has_and_belongs_to_many :sites
  validates_presence_of :login

end

class Site
  has_and_belongs_to_many :users
end

class UsersController &lt; ApplicationController

  def update
    @user = User.find(params[:id])
    if @user.update_attributes(params[:user]])
      redirect_to :action =&gt; &quot;list&quot;
    else
      render(:action =&gt; &quot;edit&quot;)
    end  
  end

end

@@@

Before the request @user.site_ids == [12,13,14,15]

params[:user][:site_ids] == [12,13]
params[:user][:login] == &quot;&quot;

When @user is not valid, I expect that the table sites_users is not updated but as I can see in the log files rails checks the validity of User AFTER updating sites_users

&gt;  SQL (0.0ms)   BEGIN
&gt;  SQL (0.2ms)   DELETE FROM `sites_users` WHERE user_id = 431 AND site_id IN (15,14)
&gt;  SQL (0.0ms)   COMMIT

&gt;  User Exists (0.7ms)   SELECT `users`.id FROM `users` WHERE (`users`.`login` = BINARY '' AND `users`.id &lt;&gt; 431) &gt;LIMIT 1
&gt;  User Exists (0.4ms)   SELECT `users`.id FROM `users` WHERE (`users`.`name` = BINARY '*******' AND `users`.id &lt;&gt;    &gt; 431) LIMIT 1

Is this the normal behaviour ? I think it should be &quot;check for the validity of a user, then update the associations&quot;.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I use ruby 1.8.7 and Rails 2.3.2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;update_attributes&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Updates all the attributes from the passed-in Hash and saves the
record. If the object is invalid, the saving will &amp;gt;&amp;gt; fail and
false will be returned.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hmm, as I understand this purpose :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class User

  has_and_belongs_to_many :sites
  validates_presence_of :login

end

class Site
  has_and_belongs_to_many :users
end

class UsersController &amp;lt; ApplicationController

  def update
    @user = User.find(params[:id])
    if @user.update_attributes(params[:user]])
      redirect_to :action =&amp;gt; &quot;list&quot;
    else
      render(:action =&amp;gt; &quot;edit&quot;)
    end  
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Before the request @user.site_ids == [12,13,14,15]&lt;/p&gt;
&lt;p&gt;params[:user][:site_ids] == [12,13]&lt;br&gt;
params[:user][:login] == &quot;&quot;&lt;/p&gt;
&lt;p&gt;When @user is not valid, I expect that the table sites_users is
not updated but as I can see in the log files rails checks the
validity of User AFTER updating sites_users&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SQL (0.0ms) BEGIN SQL (0.2ms) DELETE FROM
&lt;code&gt;sites_users&lt;/code&gt; WHERE user_id = 431 AND site_id IN (15,14)
SQL (0.0ms) COMMIT&lt;/p&gt;
&lt;p&gt;User Exists (0.7ms) SELECT &lt;code&gt;users&lt;/code&gt;.id FROM
&lt;code&gt;users&lt;/code&gt; WHERE (&lt;code&gt;users&lt;/code&gt;.&lt;code&gt;login&lt;/code&gt; =
BINARY '' AND &lt;code&gt;users&lt;/code&gt;.id &amp;lt;&amp;gt; 431) &amp;gt;LIMIT 1 User
Exists (0.4ms) SELECT &lt;code&gt;users&lt;/code&gt;.id FROM &lt;code&gt;users&lt;/code&gt;
WHERE (&lt;code&gt;users&lt;/code&gt;.&lt;code&gt;name&lt;/code&gt; = BINARY '*******' AND
&lt;code&gt;users&lt;/code&gt;.id &amp;lt;&amp;gt; &amp;gt; 431) LIMIT 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Is this the normal behaviour ? I think it should be &quot;check for
the validity of a user, then update the associations&quot;.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

I use ruby 1.8.7 and Rails 2.3.2

&gt; update_attributes
&gt;&gt; Updates all the attributes from the passed-in Hash and saves the record. If the object is invalid, the saving will &gt;&gt; fail and false will be returned.

Hmm, as I understand this purpose :

@@@ ruby

class User

  has_and_belongs_to_many :sites
  validates_presence_of :login

end

class Site
  has_and_belongs_to_many :users
end

class UsersController &lt; ApplicationController

  def update
    @user = User.find(params[:id])
    if @user.update_attributes(params[:user]])
      redirect_to :action =&gt; &quot;list&quot;
    else
      render(:action =&gt; &quot;edit&quot;)
    end  
  end

end

@@@

Before the request @user.site_ids == [12,13,14,15]

params[:user][:site_ids] == [12,13]
params[:user][:login] == &quot;&quot;

When @user is not valid, I expect that the table sites_users is not updated but as I can see in the log files rails checks the validity of User AFTER updating sites_users

&gt;  SQL (0.0ms)   BEGIN
&gt;  SQL (0.2ms)   DELETE FROM `sites_users` WHERE user_id = 431 AND site_id IN (15,14)
&gt;  SQL (0.0ms)   COMMIT

&gt;  User Exists (0.7ms)   SELECT `users`.id FROM `users` WHERE (`users`.`login` = BINARY '' AND `users`.id &lt;&gt; 431) &gt;LIMIT 1
&gt;  User Exists (0.4ms)   SELECT `users`.id FROM `users` WHERE (`users`.`name` = BINARY '*******' AND `users`.id &lt;&gt;    &gt; 431) LIMIT 1

Is this the normal behaviour ? I think it should be &quot;check for the validity of a user, then update the associations&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I use ruby 1.8.7 and Rails 2.3.2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;update_attributes&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Updates all the attributes from the passed-in Hash and saves the
record. If the object is invalid, the saving will &amp;gt;&amp;gt; fail and
false will be returned.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hmm, as I understand this purpose :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class User

  has_and_belongs_to_many :sites
  validates_presence_of :login

end

class Site
  has_and_belongs_to_many :users
end

class UsersController &amp;lt; ApplicationController

  def update
    @user = User.find(params[:id])
    if @user.update_attributes(params[:user]])
      redirect_to :action =&amp;gt; &quot;list&quot;
    else
      render(:action =&amp;gt; &quot;edit&quot;)
    end  
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Before the request @user.site_ids == [12,13,14,15]&lt;/p&gt;
&lt;p&gt;params[:user][:site_ids] == [12,13]&lt;br&gt;
params[:user][:login] == &quot;&quot;&lt;/p&gt;
&lt;p&gt;When @user is not valid, I expect that the table sites_users is
not updated but as I can see in the log files rails checks the
validity of User AFTER updating sites_users&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SQL (0.0ms) BEGIN SQL (0.2ms) DELETE FROM
&lt;code&gt;sites_users&lt;/code&gt; WHERE user_id = 431 AND site_id IN (15,14)
SQL (0.0ms) COMMIT&lt;/p&gt;
&lt;p&gt;User Exists (0.7ms) SELECT &lt;code&gt;users&lt;/code&gt;.id FROM
&lt;code&gt;users&lt;/code&gt; WHERE (&lt;code&gt;users&lt;/code&gt;.&lt;code&gt;login&lt;/code&gt; =
BINARY '' AND &lt;code&gt;users&lt;/code&gt;.id &amp;lt;&amp;gt; 431) &amp;gt;LIMIT 1 User
Exists (0.4ms) SELECT &lt;code&gt;users&lt;/code&gt;.id FROM &lt;code&gt;users&lt;/code&gt;
WHERE (&lt;code&gt;users&lt;/code&gt;.&lt;code&gt;name&lt;/code&gt; = BINARY '*******' AND
&lt;code&gt;users&lt;/code&gt;.id &amp;lt;&amp;gt; &amp;gt; 431) LIMIT 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Is this the normal behaviour ? I think it should be &quot;check for
the validity of a user, then update the associations&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-21T17:12:41+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T13:19:02+01:00</updated-at>
      <user-id type="integer">58368</user-id>
      <version type="integer">1</version>
      <user-name>Hery</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-03T06:17:28+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2009-08-03T06:17:35+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:54+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-05-04T18:48:54+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T08:38:41+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 8406
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-08T08:38:42+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">4</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am not able to reproduce this error in rails edge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not able to reproduce this error in rails edge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T10:16:55+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T10:17:00+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is more info about my test case.

@@@ ruby
class Country &lt; ActiveRecord::Base
  has_and_belongs_to_many :treaties

  validates_presence_of :name

  def self.setup
    c = Country.create(:name =&gt; 'india')
    c.treaties.create(:name =&gt; 'peace1')
    c.treaties.create(:name =&gt; 'peace2')
    c.treaties.create(:name =&gt; 'peace3')
  end

  def self.lab
    c = Country.first
    c.name = nil
    c.treaty_ids = [1,2]
  end

end

ree-1.8.7-2010.01 &gt; Country.lab
 Country Load (0.3ms)  SELECT &quot;countries&quot;.* FROM &quot;countries&quot; LIMIT 1
  Treaty Load (0.4ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; WHERE (&quot;treaties&quot;.&quot;id&quot; IN (1, 2))
  Treaty Load (0.4ms)  SELECT * FROM &quot;treaties&quot; INNER JOIN &quot;countries_treaties&quot; ON &quot;treaties&quot;.id = &quot;countries_treaties&quot;.treaty_id WHERE (&quot;countries_treaties&quot;.country_id = 1 )
  SQL (0.6ms)  DELETE FROM &quot;countries_treaties&quot; WHERE (&quot;countries_treaties&quot;.&quot;country_id&quot; = 1 AND &quot;countries_treaties&quot;.&quot;treaty_id&quot; IN (3))
 =&gt; [1, 2] 
ree-1.8.7-2010.01 &gt; Treaty.all
  Treaty Load (0.5ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot;
 =&gt; [#&lt;Treaty id: 1, name: &quot;peace1&quot;&gt;, #&lt;Treaty id: 2, name: &quot;peace2&quot;&gt;, #&lt;Treaty id: 3, name: &quot;peace3&quot;&gt;] 
ree-1.8.7-2010.01 &gt; 

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is more info about my test case.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Country &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :treaties

  validates_presence_of :name

  def self.setup
    c = Country.create(:name =&amp;gt; 'india')
    c.treaties.create(:name =&amp;gt; 'peace1')
    c.treaties.create(:name =&amp;gt; 'peace2')
    c.treaties.create(:name =&amp;gt; 'peace3')
  end

  def self.lab
    c = Country.first
    c.name = nil
    c.treaty_ids = [1,2]
  end

end

ree-1.8.7-2010.01 &amp;gt; Country.lab
 Country Load (0.3ms)  SELECT &quot;countries&quot;.* FROM &quot;countries&quot; LIMIT 1
  Treaty Load (0.4ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; WHERE (&quot;treaties&quot;.&quot;id&quot; IN (1, 2))
  Treaty Load (0.4ms)  SELECT * FROM &quot;treaties&quot; INNER JOIN &quot;countries_treaties&quot; ON &quot;treaties&quot;.id = &quot;countries_treaties&quot;.treaty_id WHERE (&quot;countries_treaties&quot;.country_id = 1 )
  SQL (0.6ms)  DELETE FROM &quot;countries_treaties&quot; WHERE (&quot;countries_treaties&quot;.&quot;country_id&quot; = 1 AND &quot;countries_treaties&quot;.&quot;treaty_id&quot; IN (3))
 =&amp;gt; [1, 2] 
ree-1.8.7-2010.01 &amp;gt; Treaty.all
  Treaty Load (0.5ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot;
 =&amp;gt; [#&amp;lt;Treaty id: 1, name: &quot;peace1&quot;&amp;gt;, #&amp;lt;Treaty id: 2, name: &quot;peace2&quot;&amp;gt;, #&amp;lt;Treaty id: 3, name: &quot;peace3&quot;&amp;gt;] 
ree-1.8.7-2010.01 &amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T10:19:05+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T10:19:06+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">6</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Neeraj,

I would like to point that you did not use update_attributes method

Here is a modified test case and as you can see, it is the same behaviour as in 2.x

@@@ ruby
class Country &lt; ActiveRecord::Base
  has_and_belongs_to_many :treaties
  validates_presence_of :name

  def self.setup
    Country.destroy_all
    c = Country.create(:name =&gt; 'india')
    c.treaties.create(:name =&gt; 'peace1')
    c.treaties.create(:name =&gt; 'peace2')
    c.treaties.create(:name =&gt; 'peace3')
  end

  def self.lab
    c = Country.first
    c.update_attributes({:name =&gt; nil, :treaty_ids =&gt; [1,2]})
  end
end

@@@


@@@ sql

  Country Load (0.3ms)  SELECT `countries`.* FROM `countries` LIMIT 1
  Treaty Load (0.3ms)  SELECT `treaties`.* FROM `treaties` WHERE (`treaties`.`id` IN (1, 2))
  Treaty Load (3.5ms)  SELECT * FROM `treaties` INNER JOIN `countries_treaties` ON `treaties`.id = `countries_treaties`.treaty_id WHERE (`countries_treaties`.country_id = 4 )
  SQL (0.1ms)  BEGIN
  SQL (0.2ms)  DELETE FROM `countries_treaties` WHERE (`countries_treaties`.`country_id` = 4 AND `countries_treaties`.`treaty_id` IN (8, 9, 10))
  SQL (0.2ms)  INSERT INTO `countries_treaties` (`country_id`, `treaty_id`) VALUES (4, 1)
  SQL (0.2ms)  INSERT INTO `countries_treaties` (`country_id`, `treaty_id`) VALUES (4, 2)
  SQL (49.5ms)  COMMIT
  SQL (0.1ms)  BEGIN
  SQL (0.1ms)  ROLLBACK


@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Neeraj,&lt;/p&gt;
&lt;p&gt;I would like to point that you did not use update_attributes
method&lt;/p&gt;
&lt;p&gt;Here is a modified test case and as you can see, it is the same
behaviour as in 2.x&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Country &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :treaties
  validates_presence_of :name

  def self.setup
    Country.destroy_all
    c = Country.create(:name =&amp;gt; 'india')
    c.treaties.create(:name =&amp;gt; 'peace1')
    c.treaties.create(:name =&amp;gt; 'peace2')
    c.treaties.create(:name =&amp;gt; 'peace3')
  end

  def self.lab
    c = Country.first
    c.update_attributes({:name =&amp;gt; nil, :treaty_ids =&amp;gt; [1,2]})
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;sql&quot;&gt;
  Country Load (0.3ms)  SELECT `countries`.* FROM `countries` LIMIT 1
  Treaty Load (0.3ms)  SELECT `treaties`.* FROM `treaties` WHERE (`treaties`.`id` IN (1, 2))
  Treaty Load (3.5ms)  SELECT * FROM `treaties` INNER JOIN `countries_treaties` ON `treaties`.id = `countries_treaties`.treaty_id WHERE (`countries_treaties`.country_id = 4 )
  SQL (0.1ms)  BEGIN
  SQL (0.2ms)  DELETE FROM `countries_treaties` WHERE (`countries_treaties`.`country_id` = 4 AND `countries_treaties`.`treaty_id` IN (8, 9, 10))
  SQL (0.2ms)  INSERT INTO `countries_treaties` (`country_id`, `treaty_id`) VALUES (4, 1)
  SQL (0.2ms)  INSERT INTO `countries_treaties` (`country_id`, `treaty_id`) VALUES (4, 2)
  SQL (49.5ms)  COMMIT
  SQL (0.1ms)  BEGIN
  SQL (0.1ms)  ROLLBACK&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T13:38:41+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T13:38:42+01:00</updated-at>
      <user-id type="integer">58368</user-id>
      <version type="integer">7</version>
      <user-name>Hery</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am still not able to recreate the problem in edge.

Here is my test code.

@@@ ruby
class Country &lt; ActiveRecord::Base
  has_and_belongs_to_many :treaties

  validates_presence_of :name

  def self.setup
    c = Country.create(:name =&gt; 'india')
    c.treaties.create(:name =&gt; 'peace1')
    c.treaties.create(:name =&gt; 'peace2')
    c.treaties.create(:name =&gt; 'peace3')
  end

  def self.lab
    Country.delete_all
    Treaty.delete_all
    self.setup
    c = Country.first
    c.update_attributes({:name =&gt; nil, :treaty_ids =&gt; [Treaty.first.id, Treaty.last.id]})
    puts Treaty.all.inspect
  end

end

@@@

Here is what  I got on my console

@@@ ruby
  SQL (2.0ms)  DELETE FROM &quot;countries&quot; WHERE 1=1
  SQL (1.7ms)  DELETE FROM &quot;treaties&quot; WHERE 1=1
  SQL (0.4ms)  INSERT INTO &quot;countries&quot; (&quot;name&quot;) VALUES ('india')
  SQL (0.5ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;) VALUES ('peace1')
  SQL (2.2ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES (3, 7)
  SQL (0.4ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;) VALUES ('peace2')
  SQL (1.6ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES (3, 8)
  SQL (0.4ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;) VALUES ('peace3')
  SQL (1.4ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES (3, 9)
  Country Load (0.3ms)  SELECT &quot;countries&quot;.* FROM &quot;countries&quot; LIMIT 1
  Treaty Load (0.2ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; LIMIT 1
  Treaty Load (0.3ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; ORDER BY treaties.id DESC LIMIT 1
  Treaty Load (0.3ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; WHERE (&quot;treaties&quot;.&quot;id&quot; IN (7, 9))
  Treaty Load (0.6ms)  SELECT * FROM &quot;treaties&quot; INNER JOIN &quot;countries_treaties&quot; ON &quot;treaties&quot;.id = &quot;countries_treaties&quot;.treaty_id WHERE (&quot;countries_treaties&quot;.country_id = 3 )
  SQL (0.4ms)  DELETE FROM &quot;countries_treaties&quot; WHERE (&quot;countries_treaties&quot;.&quot;country_id&quot; = 3 AND &quot;countries_treaties&quot;.&quot;treaty_id&quot; IN (8))
  Treaty Load (0.3ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot;
[#&lt;Treaty id: 7, name: &quot;peace1&quot;&gt;, #&lt;Treaty id: 8, name: &quot;peace2&quot;&gt;, #&lt;Treaty id: 9, name: &quot;peace3&quot;&gt;]
 =&gt; nil 

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am still not able to recreate the problem in edge.&lt;/p&gt;
&lt;p&gt;Here is my test code.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Country &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :treaties

  validates_presence_of :name

  def self.setup
    c = Country.create(:name =&amp;gt; 'india')
    c.treaties.create(:name =&amp;gt; 'peace1')
    c.treaties.create(:name =&amp;gt; 'peace2')
    c.treaties.create(:name =&amp;gt; 'peace3')
  end

  def self.lab
    Country.delete_all
    Treaty.delete_all
    self.setup
    c = Country.first
    c.update_attributes({:name =&amp;gt; nil, :treaty_ids =&amp;gt; [Treaty.first.id, Treaty.last.id]})
    puts Treaty.all.inspect
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here is what I got on my console&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  SQL (2.0ms)  DELETE FROM &quot;countries&quot; WHERE 1=1
  SQL (1.7ms)  DELETE FROM &quot;treaties&quot; WHERE 1=1
  SQL (0.4ms)  INSERT INTO &quot;countries&quot; (&quot;name&quot;) VALUES ('india')
  SQL (0.5ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;) VALUES ('peace1')
  SQL (2.2ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES (3, 7)
  SQL (0.4ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;) VALUES ('peace2')
  SQL (1.6ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES (3, 8)
  SQL (0.4ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;) VALUES ('peace3')
  SQL (1.4ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES (3, 9)
  Country Load (0.3ms)  SELECT &quot;countries&quot;.* FROM &quot;countries&quot; LIMIT 1
  Treaty Load (0.2ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; LIMIT 1
  Treaty Load (0.3ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; ORDER BY treaties.id DESC LIMIT 1
  Treaty Load (0.3ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot; WHERE (&quot;treaties&quot;.&quot;id&quot; IN (7, 9))
  Treaty Load (0.6ms)  SELECT * FROM &quot;treaties&quot; INNER JOIN &quot;countries_treaties&quot; ON &quot;treaties&quot;.id = &quot;countries_treaties&quot;.treaty_id WHERE (&quot;countries_treaties&quot;.country_id = 3 )
  SQL (0.4ms)  DELETE FROM &quot;countries_treaties&quot; WHERE (&quot;countries_treaties&quot;.&quot;country_id&quot; = 3 AND &quot;countries_treaties&quot;.&quot;treaty_id&quot; IN (8))
  Treaty Load (0.3ms)  SELECT &quot;treaties&quot;.* FROM &quot;treaties&quot;
[#&amp;lt;Treaty id: 7, name: &quot;peace1&quot;&amp;gt;, #&amp;lt;Treaty id: 8, name: &quot;peace2&quot;&amp;gt;, #&amp;lt;Treaty id: 9, name: &quot;peace3&quot;&amp;gt;]
 =&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T16:07:46+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T16:07:47+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes you had !

@@@ ruby
  SQL (0.4ms)  DELETE FROM &quot;countries_treaties&quot; WHERE (&quot;countries_treaties&quot;.&quot;country_id&quot; = 3 AND &quot;countries_treaties&quot;.&quot;treaty_id&quot; IN (8))
@@@

It deletes countries_treaties rows even if @country is invalid !!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes you had !&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  SQL (0.4ms)  DELETE FROM &quot;countries_treaties&quot; WHERE (&quot;countries_treaties&quot;.&quot;country_id&quot; = 3 AND &quot;countries_treaties&quot;.&quot;treaty_id&quot; IN (8))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It deletes countries_treaties rows even if @country is invalid
!!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T17:00:00+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T17:00:03+01:00</updated-at>
      <user-id type="integer">58368</user-id>
      <version type="integer">9</version>
      <user-name>Hery</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>my bad. I totally missed that part that I was dealing with habtm and not with simpe has_many.

I will look into it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;my bad. I totally missed that part that I was dealing with habtm
and not with simpe has_many.&lt;/p&gt;
&lt;p&gt;I will look into it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T17:10:05+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T17:10:09+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">10</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If the fix for #922 is applied then that would resolve this ticket too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If the fix for &lt;a href=&quot;/projects/8994/tickets/922&quot; title=
&quot;Ticket #922&quot;&gt;#922&lt;/a&gt; is applied then that would resolve this
ticket too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T17:50:52+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-13T17:50:57+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Neeraj, could you then backport #922 to 2-3-stable so I can appply it? Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj, could you then backport &lt;a href=
&quot;/projects/8994/tickets/922&quot; title=&quot;Ticket #922&quot;&gt;#922&lt;/a&gt; to
2-3-stable so I can appply it? Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T07:06:48+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 71472
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-14T07:06:50+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">12</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>#922 fix for 2-3-stable has been attached in ticket #922 .</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/922&quot; title=
&quot;Ticket #922&quot;&gt;#922&lt;/a&gt; fix for 2-3-stable has been attached in
ticket &lt;a href=&quot;/projects/8994/tickets/922&quot; title=
&quot;Ticket #922&quot;&gt;#922&lt;/a&gt; .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T15:51:47+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-14T15:51:49+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">13</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok. #922 applied.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok. &lt;a href=&quot;/projects/8994/tickets/922&quot; title=
&quot;Ticket #922&quot;&gt;#922&lt;/a&gt; applied.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-18T10:12:11+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-18T10:12:13+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">14</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ch customer. &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/604803-replica-5382.html&quot;&gt;Movado 604803 Replica&lt;/a&gt;&lt;/b&gt; These purses fall for &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-chopard-watches.html&quot;&gt;Replica Chopard Watches&lt;/a&gt;&lt;/b&gt; been associated with adorableness &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/fiero-replica.html&quot;&gt;Fiero replica&lt;/a&gt;&lt;/b&gt; and royalty. The Hollywood &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-oris-watches.html&quot;&gt;Replica Oris&lt;/a&gt;&lt;/b&gt; has an age-old oath &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/4972g-replica-6738.html&quot;&gt;4972G replica&lt;/a&gt;&lt;/b&gt; harbour thee purses. Audrey &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/039-151-47-f166-fw30r-replica-3713.html&quot;&gt;Bubble 039-151-47-F166-FW30R replica&lt;/a&gt;&lt;/b&gt; Hepburn carried a Louis &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/serenade-replica.html&quot;&gt;Serenade replica watches&lt;/a&gt;&lt;/b&gt; Vuitton alertness agency the &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; film Charade. These bags &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; believe been pragmatic time &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/sxd692-replica-3469.html&quot;&gt;cheap SXD692 replica&lt;/a&gt;&lt;/b&gt; and also prerogative films, markeitng campaigns of</body>
      <body-html>&lt;div&gt;&lt;p&gt;ch customer. &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/604803-replica-5382.html&quot;&gt;Movado
604803 Replica&lt;/a&gt;&lt;/b&gt; These purses fall for &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-chopard-watches.html&quot;&gt;
Replica Chopard Watches&lt;/a&gt;&lt;/b&gt; been associated with adorableness
&lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/fiero-replica.html&quot;&gt;Fiero
replica&lt;/a&gt;&lt;/b&gt; and royalty. The Hollywood &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-oris-watches.html&quot;&gt;
Replica Oris&lt;/a&gt;&lt;/b&gt; has an age-old oath &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/4972g-replica-6738.html&quot;&gt;4972G
replica&lt;/a&gt;&lt;/b&gt; harbour thee purses. Audrey &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/039-151-47-f166-fw30r-replica-3713.html&quot;&gt;
Bubble 039-151-47-F166-FW30R replica&lt;/a&gt;&lt;/b&gt; Hepburn carried a
Louis &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/serenade-replica.html&quot;&gt;Serenade
replica watches&lt;/a&gt;&lt;/b&gt; Vuitton alertness agency the &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; film
Charade. These bags &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; believe
been pragmatic time &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/sxd692-replica-3469.html&quot;&gt;cheap
SXD692 replica&lt;/a&gt;&lt;/b&gt; and also prerogative films, markeitng
campaigns of&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T11:12:01+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-07-21T01:45:48+01:00</updated-at>
      <user-id type="integer">107790</user-id>
      <version type="integer">15</version>
      <user-name>a4490302sc</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This bug still affects attributes= method. It should be fixed there as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This bug still affects attributes= method. It should be fixed
there as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T10:59:51+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T10:59:56+01:00</updated-at>
      <user-id type="integer">102627</user-id>
      <version type="integer">16</version>
      <user-name>lcars</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>lcarls, a patch is welcome!</body>
      <body-html>&lt;div&gt;&lt;p&gt;lcarls, a patch is welcome!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T11:03:18+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T11:03:20+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">17</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Working on a patch right now, I should also note that I would treat this issue as a security bug as it allows validation to fails but still to update associations. It should be pushed to stable as soon as possible. I'm not familiar with Rails/ActiveRecord release process though, so I defer to maintainers...just voicing my opinion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Working on a patch right now, I should also note that I would
treat this issue as a security bug as it allows validation to fails
but still to update associations. It should be pushed to stable as
soon as possible. I'm not familiar with Rails/ActiveRecord release
process though, so I defer to maintainers...just voicing my
opinion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T11:25:16+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T11:25:21+01:00</updated-at>
      <user-id type="integer">102627</user-id>
      <version type="integer">18</version>
      <user-name>lcars</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Other than validation concerns, is .attributes= expected to update associations before .save ? It is not clear from documentation that .attributes implies .save, but that's how it works against associations. Feels there are two bugs here, 1) validation is not honoured, 2) associations are instantly updated (but not attributes).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Other than validation concerns, is .attributes= expected to
update associations before .save ? It is not clear from
documentation that .attributes implies .save, but that's how it
works against associations. Feels there are two bugs here, 1)
validation is not honoured, 2) associations are instantly updated
(but not attributes).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T11:52:55+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T11:52:58+01:00</updated-at>
      <user-id type="integer">102627</user-id>
      <version type="integer">19</version>
      <user-name>lcars</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Not sure how to fix the .attributes = case. I assume that it's implied in the documentation that foo.bar_ids = immediately replaces the collection. Being this the case .attributes =, by calling that method triggers association changes (but not attribute changes which are saved only when .save is invoked).

In order to fix the validation issue we should change .attributes so that it performs a .save as well, this would allow to use transaction as a fix like it was done for update_attributes.

I'm not sure how this could be fixed otherwise.

Any input is appreciated.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure how to fix the .attributes = case. I assume that it's
implied in the documentation that foo.bar_ids = immediately
replaces the collection. Being this the case .attributes =, by
calling that method triggers association changes (but not attribute
changes which are saved only when .save is invoked).&lt;/p&gt;
&lt;p&gt;In order to fix the validation issue we should change
.attributes so that it performs a .save as well, this would allow
to use transaction as a fix like it was done for
update_attributes.&lt;/p&gt;
&lt;p&gt;I'm not sure how this could be fixed otherwise.&lt;/p&gt;
&lt;p&gt;Any input is appreciated.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T13:06:47+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T13:06:50+01:00</updated-at>
      <user-id type="integer">102627</user-id>
      <version type="integer">20</version>
      <user-name>lcars</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;code&gt;#attributes=&lt;/code&gt; should never save any records by itself, that&#8217;s what &lt;code&gt;#update_attributes&lt;/code&gt; is for. IMO it might be better if you&#8217;d start on a failing test case for the ActiveRecord test suite, then we can discuss the problem/solution from there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;#attributes=&lt;/code&gt; should never save any records by
itself, that&amp;#8217;s what &lt;code&gt;#update_attributes&lt;/code&gt; is for.
IMO it might be better if you&amp;#8217;d start on a failing test case
for the ActiveRecord test suite, then we can discuss the
problem/solution from there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T15:08:41+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T15:08:45+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">21</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>added this test to autosave_association_test.rb

  def test_assign_ids_without_saving
    firm = Firm.new(&quot;name&quot; =&gt; &quot;Apple&quot;)
    firm.save
    firm.reload
    firm.client_ids = [companies(:first_client).id, companies(:second_client).id]
    assert_not_equal 2, firm.clients.length
    assert !firm.clients.include?(companies(:second_client))
  end

The existing test_assign_ids succeeds while test_assign_ids_without_saving fails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;added this test to autosave_association_test.rb&lt;/p&gt;
&lt;p&gt;def test_assign_ids_without_saving&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;firm = Firm.new(&quot;name&quot; =&amp;gt; &quot;Apple&quot;)
firm.save
firm.reload
firm.client_ids = [companies(:first_client).id, companies(:second_client).id]
assert_not_equal 2, firm.clients.length
assert !firm.clients.include?(companies(:second_client))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;The existing test_assign_ids succeeds while
test_assign_ids_without_saving fails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T15:38:02+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T15:38:05+01:00</updated-at>
      <user-id type="integer">102627</user-id>
      <version type="integer">22</version>
      <user-name>lcars</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, this is expected and I believe it is well documented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, this is expected and I believe it is well documented.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T15:39:52+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T15:39:54+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">23</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hmm, I don&#8217;t really get what the test is trying to explain here&#8230; Afaik assigning to &lt;code&gt;#assoc_ids=&lt;/code&gt; will always perform an implicit save directly. However, it seems Jos&#233; understands, so I&#8217;ll digress :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hmm, I don&amp;#8217;t really get what the test is trying to explain
here&amp;#8230; Afaik assigning to &lt;code&gt;#assoc_ids=&lt;/code&gt; will always
perform an implicit save directly. However, it seems Jos&amp;eacute;
understands, so I&amp;#8217;ll digress :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T15:43:12+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T15:43:15+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">24</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry, my test wasn't focused on the specific issue. Is it then also expected for #attributes= ti save records?

 def test_assign_ids_via_attributes_without_saving
    firm = Firm.new(&quot;name&quot; =&gt; &quot;Apple&quot;)
    firm.save
    firm.reload
    firm.attributes = { :client_ids =&gt; [companies(:first_client).id, companies(:second_client).id] }
    assert_not_equal 2, firm.clients.length
    assert !firm.clients.include?(companies(:second_client))
  end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, my test wasn't focused on the specific issue. Is it then
also expected for #attributes= ti save records?&lt;/p&gt;
&lt;p&gt;def test_assign_ids_via_attributes_without_saving&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;firm = Firm.new(&quot;name&quot; =&amp;gt; &quot;Apple&quot;)
firm.save
firm.reload
firm.attributes = { :client_ids =&amp;gt; [companies(:first_client).id, companies(:second_client).id] }
assert_not_equal 2, firm.clients.length
assert !firm.clients.include?(companies(:second_client))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T15:46:01+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T15:46:03+01:00</updated-at>
      <user-id type="integer">102627</user-id>
      <version type="integer">25</version>
      <user-name>lcars</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Eloy, the test was showing exactly what you said: assigning to #assoc_ids= will always perform an implicit save directly. In his opinion, it seems that should not happen. That could even be a valid point, but not way we can change it as it is completely backwards incompatible.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Eloy, the test was showing exactly what you said: assigning to
#assoc_ids= will always perform an implicit save directly. In his
opinion, it seems that should not happen. That could even be a
valid point, but not way we can change it as it is completely
backwards incompatible.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T15:46:03+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T15:46:05+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">26</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree changing it's backwards incompatible and really problematic. I just wonder if #attributes= is expected to behave the same (I'm not saying it shouldn't), and if it does I wonder how we could fix it in regards to this ticket issue.

It feels &quot;wrong&quot; that using #attributes= { :local_column =&gt; 'foobar', :stuff_ids =&gt; [1,2,3] } would require a .save just for :local_column (which otherwise doesn't get updated) but would automatically save 'stuff' association.

This behaviour doesn't allow relying on .save return code for evaluating if the object has been saved along with associations or not, and I don't see an easy way for rolling back the effect of the association changes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree changing it's backwards incompatible and really
problematic. I just wonder if #attributes= is expected to behave
the same (I'm not saying it shouldn't), and if it does I wonder how
we could fix it in regards to this ticket issue.&lt;/p&gt;
&lt;p&gt;It feels &quot;wrong&quot; that using #attributes= { :local_column =&amp;gt;
'foobar', :stuff_ids =&amp;gt; [1,2,3] } would require a .save just for
:local_column (which otherwise doesn't get updated) but would
automatically save 'stuff' association.&lt;/p&gt;
&lt;p&gt;This behaviour doesn't allow relying on .save return code for
evaluating if the object has been saved along with associations or
not, and I don't see an easy way for rolling back the effect of the
association changes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T15:49:42+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T15:49:47+01:00</updated-at>
      <user-id type="integer">102627</user-id>
      <version type="integer">27</version>
      <user-name>lcars</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Jos&#233; Gotcha :)

@lcars Ah, now I see the problem. &lt;code&gt;#attributes=&lt;/code&gt; does basically the following for each attribute/value pair in the hash: &lt;code&gt;send(&quot;#{attribute}=&quot;, value)&lt;/code&gt;. I.e. you are calling &lt;code&gt;#stuff_ids=&lt;/code&gt; with the array of IDs, which, as explained, does an implicit save. Maybe the solution would be to allow &lt;code&gt;#assoc_ids=&lt;/code&gt; to defer its action until &lt;code&gt;#save&lt;/code&gt; is called on the parent? Maybe with an association option, or even automatically when &lt;code&gt;:autosave&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;? I have no idea right now how backwards compatible that would be, though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Jos&amp;eacute; Gotcha :)&lt;/p&gt;
&lt;p&gt;@lcars Ah, now I see the problem. &lt;code&gt;#attributes=&lt;/code&gt; does
basically the following for each attribute/value pair in the hash:
&lt;code&gt;send(&quot;#{attribute}=&quot;, value)&lt;/code&gt;. I.e. you are calling
&lt;code&gt;#stuff_ids=&lt;/code&gt; with the array of IDs, which, as
explained, does an implicit save. Maybe the solution would be to
allow &lt;code&gt;#assoc_ids=&lt;/code&gt; to defer its action until
&lt;code&gt;#save&lt;/code&gt; is called on the parent? Maybe with an
association option, or even automatically when
&lt;code&gt;:autosave&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;? I have no idea
right now how backwards compatible that would be, though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T16:40:22+01:00</created-at>
      <creator-id type="integer">58368</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2933</number>
      <permalink>232-update_attributes-save-many-to-many-associations</permalink>
      <priority type="integer">2014</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord</tag>
      <title>2.3.2 update_attributes save many-to-many associations</title>
      <updated-at type="datetime">2010-09-21T16:40:25+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">28</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Hery</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2933</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
