<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-04-29T19:13:46+01:00</created-at>
  <creator-id type="integer">17971</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">62</number>
  <permalink>add-in-place-versions-of-compact-uniq-flatten-to-array-prototype</permalink>
  <priority type="integer">10408</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>Add in place versions of compact, uniq, flatten to Array.prototype</title>
  <updated-at type="datetime">2008-04-30T21:40:27+01:00</updated-at>
  <user-id type="integer">83</user-id>
  <version type="integer">4</version>
  <user-name>DHH</user-name>
  <creator-name>matthuhiggins</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/62</url>
  <priority-name nil="true"></priority-name>
  <original-body>Given that prototype is modeled after Ruby, it seems like the in place '!' versions of these functions are missing. Since Array.prototype.reverse already takes an optional 'inline' parameter, it seems inconsistent that these other functions do not support it.

Let me try to hand type a rough version in this little text box:

@@@ javascript
  _compact: function() {
    var index = 0, last = this.length - 1;
    while(index &lt;= last) {
      if (this[last] == null) {
        last--;
      } else if (this[index] == null) {
        this[index++] = this[last--];
      } else {
        index++;
      }
    }
    this.length = last + 1;
    return this;
  },

  compact: function(inline) {
    return (inline !== false ? this : this.toArray())._compact();
  }
  ...
@@@

(Apologies if I am bringing up an old subject that has already been shot down.)</original-body>
  <latest-body>Given that prototype is modeled after Ruby, it seems like the in place '!' versions of these functions are missing. Since Array.prototype.reverse already takes an optional 'inline' parameter, it seems inconsistent that these other functions do not support it.

Let me try to hand type a rough version in this little text box:

@@@ javascript
  _compact: function() {
    var index = 0, last = this.length - 1;
    while(index &lt;= last) {
      if (this[last] == null) {
        last--;
      } else if (this[index] == null) {
        this[index++] = this[last--];
      } else {
        index++;
      }
    }
    this.length = last + 1;
    return this;
  },

  compact: function(inline) {
    return (inline !== false ? this : this.toArray())._compact();
  }
  ...
@@@

(Apologies if I am bringing up an old subject that has already been shot down.)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Given that prototype is modeled after Ruby, it seems like the in place '!' versions of these functions are missing. Since Array.prototype.reverse already takes an optional 'inline' parameter, it seems inconsistent that these other functions do not support it.
&lt;/p&gt;&lt;p&gt;
Let me try to hand type a rough version in this little text box:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;  _compact: function() {
    var index = 0, last = this.length - 1;
    while(index &amp;lt;= last) {
      if (this[last] == null) {
        last--;
      } else if (this[index] == null) {
        this[index++] = this[last--];
      } else {
        index++;
      }
    }
    this.length = last + 1;
    return this;
  },

  compact: function(inline) {
    return (inline !== false ? this : this.toArray())._compact();
  }
  ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(Apologies if I am bringing up an old subject that has already been shot down.)
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given that prototype is modeled after Ruby, it seems like the in place '!' versions of these functions are missing. Since Array.prototype.reverse already takes an optional 'inline' parameter, it seems inconsistent that these other functions do not support it.

Let me try to hand type a rough version in this little text box:

@@@ javascript
  _compact: function() {
    var index = 0, last = this.length - 1;
    while(index &lt;= last) {
      if (this[last] == null) {
        last--;
      } else if (this[index] == null) {
        this[index++] = this[last--];
      } else {
        index++;
      }
    }
    this.length = last + 1;
    return this;
  },

  compact: function(inline) {
    return (inline !== false ? this : this.toArray())._compact();
  }
  ...
@@@

(Apologies if I am bringing up an old subject that has already been shot down.)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Given that prototype is modeled after Ruby, it seems like the in place '!' versions of these functions are missing. Since Array.prototype.reverse already takes an optional 'inline' parameter, it seems inconsistent that these other functions do not support it.
&lt;/p&gt;&lt;p&gt;
Let me try to hand type a rough version in this little text box:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;  _compact: function() {
    var index = 0, last = this.length - 1;
    while(index &amp;lt;= last) {
      if (this[last] == null) {
        last--;
      } else if (this[index] == null) {
        this[index++] = this[last--];
      } else {
        index++;
      }
    }
    this.length = last + 1;
    return this;
  },

  compact: function(inline) {
    return (inline !== false ? this : this.toArray())._compact();
  }
  ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(Apologies if I am bringing up an old subject that has already been shot down.)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-29T19:13:46+01:00</created-at>
      <creator-id type="integer">17971</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">62</number>
      <permalink>add-in-place-versions-of-compact-uniq-flatten-to-array-prototype</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add in place versions of compact, uniq, flatten to Array.prototype</title>
      <updated-at type="datetime">2008-04-29T19:13:46+01:00</updated-at>
      <user-id type="integer">17971</user-id>
      <version type="integer">1</version>
      <user-name>matthuhiggins</user-name>
      <creator-name>matthuhiggins</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/62</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This should be on the prototype light house (http://prototype.lighthouseapp.com/)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This should be on the prototype light house (&lt;a href=&quot;http://prototype.lighthouseapp.com/&quot;&gt;http://prototype.lighthouseapp.com/&lt;/a&gt;)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-29T19:42:36+01:00</created-at>
      <creator-id type="integer">17971</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">62</number>
      <permalink>add-in-place-versions-of-compact-uniq-flatten-to-array-prototype</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add in place versions of compact, uniq, flatten to Array.prototype</title>
      <updated-at type="datetime">2008-04-29T19:42:36+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>matthuhiggins</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/62</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I added this ticket over at prototype.lighthouse. I do not have privileges to close this one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I added this ticket over at prototype.lighthouse. I do not have privileges to close this one.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-29T20:28:26+01:00</created-at>
      <creator-id type="integer">17971</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">62</number>
      <permalink>add-in-place-versions-of-compact-uniq-flatten-to-array-prototype</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add in place versions of compact, uniq, flatten to Array.prototype</title>
      <updated-at type="datetime">2008-04-29T20:28:26+01:00</updated-at>
      <user-id type="integer">17971</user-id>
      <version type="integer">3</version>
      <user-name>matthuhiggins</user-name>
      <creator-name>matthuhiggins</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/62</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-04-30T21:40:27+01:00</created-at>
      <creator-id type="integer">17971</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">62</number>
      <permalink>add-in-place-versions-of-compact-uniq-flatten-to-array-prototype</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Add in place versions of compact, uniq, flatten to Array.prototype</title>
      <updated-at type="datetime">2008-04-30T21:40:27+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">4</version>
      <user-name>DHH</user-name>
      <creator-name>matthuhiggins</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/62</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
