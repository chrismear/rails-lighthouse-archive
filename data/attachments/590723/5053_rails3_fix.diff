From 6c3e3bb8c45cb7c6c87a91284ad6fbef3dd2116b Mon Sep 17 00:00:00 2001
From: Szetobo <szetobo@gmail.com
Date: Mon, 12 Jul 2010 09:47:47 +0800
Subject: [PATCH] association load target shouldn't replace records from db if
 it is already loaded by nested attributes assignment

[%5053 state:resolved]
---
 .../associations/association_collection.rb         |    6 +++---
 activerecord/test/cases/nested_attributes_test.rb  |   10 +++++++++-
 2 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/activerecord/lib/active_record/associations/association_collection.rb b/activerecord/lib/active_record/associations/association_collection.rb
index 1fc8f33..503f1e1 100644
--- a/activerecord/lib/active_record/associations/association_collection.rb
+++ b/activerecord/lib/active_record/associations/association_collection.rb
@@ -393,11 +393,11 @@ module ActiveRecord
                 if @target.is_a?(Array) && @target.any?
                   @target = find_target.map do |f|
                     i = @target.index(f)
-                    t = @target.delete_at(i) if i
-                    if t && t.changed?
+                    if i
+                      t = @target.delete_at(i)
+                      t.attributes = f.attributes.except(*(["id"] + t.changes.keys + (f.attribute_names - t.attribute_names)))
                       t
                     else
-                      f.mark_for_destruction if t && t.marked_for_destruction?
                       f
                     end
                   end + @target
diff --git a/activerecord/test/cases/nested_attributes_test.rb b/activerecord/test/cases/nested_attributes_test.rb
index 788e1c2..f5411c6 100644
--- a/activerecord/test/cases/nested_attributes_test.rb
+++ b/activerecord/test/cases/nested_attributes_test.rb
@@ -817,7 +817,15 @@ class TestHasManyAutosaveAssociationWhichItselfHasAutosaveAssociations < ActiveR
     assert_equal 1, @ship.parts.proxy_target.size
     assert_equal 'Deck', @ship.parts[0].name
   end
-  
+
+  test "if association is not loaded and child doesn't change and I am saving a grandchild then in memory record should be used" do
+    @ship.parts_attributes=[{:id => @part.id,:trinkets_attributes =>[{:id => @trinket.id, :name => 'Ruby'}]}]
+    assert_equal 1, @ship.parts.proxy_target.size
+    assert_equal 'Mast', @ship.parts[0].name
+    assert_equal 1, @ship.parts[0].trinkets.proxy_target.size
+    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
+  end
+
   test "when grandchild changed in memory, saving parent should save grandchild" do
     @trinket.name = "changed"
     @ship.save
-- 
1.7.0.4

