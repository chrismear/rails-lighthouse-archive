<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-03T19:33:16+00:00</created-at>
  <creator-id type="integer">38760</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6113</number>
  <permalink>patch-dont-silently-discard-exceptions-when-gettingsetting-session-via-memcache</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;23x 2310&quot; memcachestore</tag>
  <title>[PATCH] Don't silently discard exceptions when getting/setting session via memcache</title>
  <updated-at type="datetime">2011-03-04T00:00:30+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>Joe Rafaniello</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6113</url>
  <priority-name nil="true"></priority-name>
  <original-body>It's not clear to me why the code should 'rescue MemCache::MemCacheError, Errno::ECONNREFUSED' silently in the get_session and set_session methods returning {} and true respectively.  Even if the higher level is to handle a false returned from set_session, how will it know what to do with no context? 

In my case, I had a &gt; 1 MB value being stored in memcache that was silently failing on the set_session in one location and then the get_session came back nil on retrieving it a few seconds later, leaving me thoroughly confused.  I had turned up memcached -vv tracing and could see the &quot;set&quot; never occurring and finally found the following:


This was originally fixed back in 2007 in this commit:

commit d0df7f2b12b201edbef0d59360224e68f9a0a447
Author: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
Date:   Sun Oct 14 20:46:06 2007 +0000

    Memcached sessions: add session data on initialization; don't silently discard exceptions; add unit tests. Closes #9823.

and was broken in this commit:

commit ed708307137c811d14e5fd2cb4ea550add381a82
Author: Joshua Peek &lt;josh@joshpeek.com&gt;
Date:   Mon Dec 15 16:33:31 2008 -0600

    Switch to Rack based session stores.
    

Attached is a patch with test for the set_session &gt; 1 MB.</original-body>
  <latest-body>It's not clear to me why the code should 'rescue MemCache::MemCacheError, Errno::ECONNREFUSED' silently in the get_session and set_session methods returning {} and true respectively.  Even if the higher level is to handle a false returned from set_session, how will it know what to do with no context? 

In my case, I had a &gt; 1 MB value being stored in memcache that was silently failing on the set_session in one location and then the get_session came back nil on retrieving it a few seconds later, leaving me thoroughly confused.  I had turned up memcached -vv tracing and could see the &quot;set&quot; never occurring and finally found the following:


This was originally fixed back in 2007 in this commit:

commit d0df7f2b12b201edbef0d59360224e68f9a0a447
Author: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
Date:   Sun Oct 14 20:46:06 2007 +0000

    Memcached sessions: add session data on initialization; don't silently discard exceptions; add unit tests. Closes #9823.

and was broken in this commit:

commit ed708307137c811d14e5fd2cb4ea550add381a82
Author: Joshua Peek &lt;josh@joshpeek.com&gt;
Date:   Mon Dec 15 16:33:31 2008 -0600

    Switch to Rack based session stores.
    

Attached is a patch with test for the set_session &gt; 1 MB.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It's not clear to me why the code should 'rescue
MemCache::MemCacheError, Errno::ECONNREFUSED' silently in the
get_session and set_session methods returning {} and true
respectively. Even if the higher level is to handle a false
returned from set_session, how will it know what to do with no
context?&lt;/p&gt;
&lt;p&gt;In my case, I had a &amp;gt; 1 MB value being stored in memcache
that was silently failing on the set_session in one location and
then the get_session came back nil on retrieving it a few seconds
later, leaving me thoroughly confused. I had turned up memcached
-vv tracing and could see the &quot;set&quot; never occurring and finally
found the following:&lt;/p&gt;
&lt;p&gt;This was originally fixed back in 2007 in this commit:&lt;/p&gt;
&lt;p&gt;commit d0df7f2b12b201edbef0d59360224e68f9a0a447&lt;br&gt;
Author: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
Date: Sun Oct 14 20:46:06 2007 +0000&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Memcached sessions: add session data on initialization; don't silently discard exceptions; add unit tests. Closes [#9823](/projects/8994/tickets/9823 &quot;Ticket #9823&quot;).&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and was broken in this commit:&lt;/p&gt;
&lt;p&gt;commit ed708307137c811d14e5fd2cb4ea550add381a82&lt;br&gt;
Author: Joshua Peek &lt;a&gt;josh@joshpeek.com&lt;/a&gt;&lt;br&gt;
Date: Mon Dec 15 16:33:31 2008 -0600&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Switch to Rack based session stores.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached is a patch with test for the set_session &amp;gt; 1 MB.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's not clear to me why the code should 'rescue MemCache::MemCacheError, Errno::ECONNREFUSED' silently in the get_session and set_session methods returning {} and true respectively.  Even if the higher level is to handle a false returned from set_session, how will it know what to do with no context? 

In my case, I had a &gt; 1 MB value being stored in memcache that was silently failing on the set_session in one location and then the get_session came back nil on retrieving it a few seconds later, leaving me thoroughly confused.  I had turned up memcached -vv tracing and could see the &quot;set&quot; never occurring and finally found the following:


This was originally fixed back in 2007 in this commit:

commit d0df7f2b12b201edbef0d59360224e68f9a0a447
Author: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
Date:   Sun Oct 14 20:46:06 2007 +0000

    Memcached sessions: add session data on initialization; don't silently discard exceptions; add unit tests. Closes #9823.

and was broken in this commit:

commit ed708307137c811d14e5fd2cb4ea550add381a82
Author: Joshua Peek &lt;josh@joshpeek.com&gt;
Date:   Mon Dec 15 16:33:31 2008 -0600

    Switch to Rack based session stores.
    

Attached is a patch with test for the set_session &gt; 1 MB.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's not clear to me why the code should 'rescue
MemCache::MemCacheError, Errno::ECONNREFUSED' silently in the
get_session and set_session methods returning {} and true
respectively. Even if the higher level is to handle a false
returned from set_session, how will it know what to do with no
context?&lt;/p&gt;
&lt;p&gt;In my case, I had a &amp;gt; 1 MB value being stored in memcache
that was silently failing on the set_session in one location and
then the get_session came back nil on retrieving it a few seconds
later, leaving me thoroughly confused. I had turned up memcached
-vv tracing and could see the &quot;set&quot; never occurring and finally
found the following:&lt;/p&gt;
&lt;p&gt;This was originally fixed back in 2007 in this commit:&lt;/p&gt;
&lt;p&gt;commit d0df7f2b12b201edbef0d59360224e68f9a0a447&lt;br&gt;
Author: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
Date: Sun Oct 14 20:46:06 2007 +0000&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Memcached sessions: add session data on initialization; don't silently discard exceptions; add unit tests. Closes [#9823](/projects/8994/tickets/9823 &quot;Ticket #9823&quot;).&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and was broken in this commit:&lt;/p&gt;
&lt;p&gt;commit ed708307137c811d14e5fd2cb4ea550add381a82&lt;br&gt;
Author: Joshua Peek &lt;a&gt;josh@joshpeek.com&lt;/a&gt;&lt;br&gt;
Date: Mon Dec 15 16:33:31 2008 -0600&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Switch to Rack based session stores.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached is a patch with test for the set_session &amp;gt; 1 MB.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-03T19:33:16+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6113</number>
      <permalink>patch-dont-silently-discard-exceptions-when-gettingsetting-session-via-memcache</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.3.x 2.3.10&quot;</tag>
      <title>[PATCH] Don't silently discard exceptions when getting/setting session via memcache</title>
      <updated-at type="datetime">2010-12-03T19:33:21+00:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">1</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6113</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-03T19:34:27+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;2.3.x 2.3.10\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6113</number>
      <permalink>patch-dont-silently-discard-exceptions-when-gettingsetting-session-via-memcache</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.3.x 2.3.10&quot; memcachestore</tag>
      <title>[PATCH] Don't silently discard exceptions when getting/setting session via memcache</title>
      <updated-at type="datetime">2010-12-03T19:34:33+00:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">2</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6113</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T00:00:09+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;2.3.x 2.3.10\&quot; memcachestore&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6113</number>
      <permalink>patch-dont-silently-discard-exceptions-when-gettingsetting-session-via-memcache</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;23x 2310&quot; memcachestore</tag>
      <title>[PATCH] Don't silently discard exceptions when getting/setting session via memcache</title>
      <updated-at type="datetime">2011-03-04T00:00:13+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6113</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-04T00:00:10+00:00</created-at>
      <creator-id type="integer">38760</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6113</number>
      <permalink>patch-dont-silently-discard-exceptions-when-gettingsetting-session-via-memcache</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;23x 2310&quot; memcachestore</tag>
      <title>[PATCH] Don't silently discard exceptions when getting/setting session via memcache</title>
      <updated-at type="datetime">2011-03-04T00:00:30+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Joe Rafaniello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6113</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>52fa9665c427e2ef5300aaacd4e05914f6a5acae</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-03T19:33:16+00:00</created-at>
      <filename>memcache_exceptions_on_get_set.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">802332</id>
      <size type="integer">2741</size>
      <uploader-id type="integer">38760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/802332/memcache_exceptions_on_get_set.patch</url>
    </attachment>
  </attachments>
</ticket>
