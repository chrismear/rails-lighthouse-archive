<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">7697</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-23T12:20:25+01:00</created-at>
  <creator-id type="integer">33887</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5430</number>
  <permalink>defining-subdomain-constraints-in-router-with-various-tld-lengths</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>constraints router routing scope subdomain</tag>
  <title>defining subdomain constraints in router with various TLD lengths</title>
  <updated-at type="datetime">2010-10-15T23:02:01+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">5</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Jakub Suder</creator-name>
  <assigned-user-name>Andrew White</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5430</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>In the new router, it's possible to define a constraint on the subdomain field, like this:

    constraints(:subdomain =&gt; 'api') do ... end

However, the subdomain method in request takes an argument that says how long the TLD domain is. Default is 1, so if you have a site like server.com, it works correctly, but for other sites (server.co.uk, localhost) you need to call request.subdomain(2) or request.subdomain(0) respectively.

The problem is that while it's possible to do that in a controller method, it's not possible in the router, which makes the constraints(:subdomain) useless in most cases (unless you use a custom class for constraints). This could be solved by changing the request.subdomain() method so that it takes the TLD length from some kind of global setting which can be set in somewhere in config/ directory.</original-body>
  <latest-body>In the new router, it's possible to define a constraint on the subdomain field, like this:

    constraints(:subdomain =&gt; 'api') do ... end

However, the subdomain method in request takes an argument that says how long the TLD domain is. Default is 1, so if you have a site like server.com, it works correctly, but for other sites (server.co.uk, localhost) you need to call request.subdomain(2) or request.subdomain(0) respectively.

The problem is that while it's possible to do that in a controller method, it's not possible in the router, which makes the constraints(:subdomain) useless in most cases (unless you use a custom class for constraints). This could be solved by changing the request.subdomain() method so that it takes the TLD length from some kind of global setting which can be set in somewhere in config/ directory.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In the new router, it's possible to define a constraint on the
subdomain field, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;constraints(:subdomain =&amp;gt; 'api') do ... end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, the subdomain method in request takes an argument that
says how long the TLD domain is. Default is 1, so if you have a
site like server.com, it works correctly, but for other sites
(server.co.uk, localhost) you need to call request.subdomain(2) or
request.subdomain(0) respectively.&lt;/p&gt;
&lt;p&gt;The problem is that while it's possible to do that in a
controller method, it's not possible in the router, which makes the
constraints(:subdomain) useless in most cases (unless you use a
custom class for constraints). This could be solved by changing the
request.subdomain() method so that it takes the TLD length from
some kind of global setting which can be set in somewhere in
config/ directory.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In the new router, it's possible to define a constraint on the subdomain field, like this:

    constraints(:subdomain =&gt; 'api') do ... end

However, the subdomain method in request takes an argument that says how long the TLD domain is. Default is 1, so if you have a site like server.com, it works correctly, but for other sites (server.co.uk, localhost) you need to call request.subdomain(2) or request.subdomain(0) respectively.

The problem is that while it's possible to do that in a controller method, it's not possible in the router, which makes the constraints(:subdomain) useless in most cases (unless you use a custom class for constraints). This could be solved by changing the request.subdomain() method so that it takes the TLD length from some kind of global setting which can be set in somewhere in config/ directory.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In the new router, it's possible to define a constraint on the
subdomain field, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;constraints(:subdomain =&amp;gt; 'api') do ... end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, the subdomain method in request takes an argument that
says how long the TLD domain is. Default is 1, so if you have a
site like server.com, it works correctly, but for other sites
(server.co.uk, localhost) you need to call request.subdomain(2) or
request.subdomain(0) respectively.&lt;/p&gt;
&lt;p&gt;The problem is that while it's possible to do that in a
controller method, it's not possible in the router, which makes the
constraints(:subdomain) useless in most cases (unless you use a
custom class for constraints). This could be solved by changing the
request.subdomain() method so that it takes the TLD length from
some kind of global setting which can be set in somewhere in
config/ directory.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T11:33:02+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5430</number>
      <permalink>defining-subdomain-constraints-in-router-with-various-tld-lengths</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>constraints router routing scope subdomain</tag>
      <title>defining subdomain constraints in router with various TLD lengths</title>
      <updated-at type="datetime">2010-08-23T11:33:07+01:00</updated-at>
      <user-id type="integer">33887</user-id>
      <version type="integer">1</version>
      <user-name>Jakub Suder</user-name>
      <creator-name>Jakub Suder</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5430</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Not sure about adding another global config option but as a workaround you can do the following:

@@@ ruby
  constraints{ |req| req.subdomain(req.host == 'localhost' ? 0 : 2) == 'api' } do
    ...
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure about adding another global config option but as a
workaround you can do the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  constraints{ |req| req.subdomain(req.host == 'localhost' ? 0 : 2) == 'api' } do
    ...
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T12:14:30+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5430</number>
      <permalink>defining-subdomain-constraints-in-router-with-various-tld-lengths</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>constraints router routing scope subdomain</tag>
      <title>defining subdomain constraints in router with various TLD lengths</title>
      <updated-at type="datetime">2010-08-23T12:14:34+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jakub Suder</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5430</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Another workaround would be to use a regexp and host:

@@@ ruby
  constraints :host =&gt; /^api\.(localhost|rubyonrails\.org\.uk)$/ do
    ...
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another workaround would be to use a regexp and host:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  constraints :host =&amp;gt; /^api\.(localhost|rubyonrails\.org\.uk)$/ do
    ...
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T12:20:25+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5430</number>
      <permalink>defining-subdomain-constraints-in-router-with-various-tld-lengths</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>constraints router routing scope subdomain</tag>
      <title>defining subdomain constraints in router with various TLD lengths</title>
      <updated-at type="datetime">2010-08-23T12:21:01+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jakub Suder</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5430</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-23T12:43:56+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5430</number>
      <permalink>defining-subdomain-constraints-in-router-with-various-tld-lengths</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>constraints router routing scope subdomain</tag>
      <title>defining subdomain constraints in router with various TLD lengths</title>
      <updated-at type="datetime">2010-08-23T12:44:02+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jakub Suder</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5430</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:02:01+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5430</number>
      <permalink>defining-subdomain-constraints-in-router-with-various-tld-lengths</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>constraints router routing scope subdomain</tag>
      <title>defining subdomain constraints in router with various TLD lengths</title>
      <updated-at type="datetime">2010-10-15T23:02:01+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jakub Suder</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5430</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
