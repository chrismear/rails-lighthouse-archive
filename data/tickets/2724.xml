<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40263</assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-25T22:24:50+00:00</created-at>
  <creator-id type="integer">18422</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2724</number>
  <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
  <priority type="integer">1841</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activecord include joins named_scope</tag>
  <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
  <updated-at type="datetime">2011-03-01T00:01:54+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">11</version>
  <user-name>rails</user-name>
  <creator-name>J&#243;nas Tryggvi</creator-name>
  <assigned-user-name>Neeraj Singh</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When we combine multiple scopes that join on the same table, use :include to eager load from that table and use a parameter to the scopes that has a dot in it, we get duplicate joins on the same table.

This can be seen in the attached project, by doing:
rake db:migrate
scipt/server
go to: http://localhost:3000/as?s=gaman.saman

(at least on mysql)</original-body>
  <latest-body>When we combine multiple scopes that join on the same table, use :include to eager load from that table and use a parameter to the scopes that has a dot in it, we get duplicate joins on the same table.

This can be seen in the attached project, by doing:
rake db:migrate
scipt/server
go to: http://localhost:3000/as?s=gaman.saman

(at least on mysql)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When we combine multiple scopes that join on the same table, use
:include to eager load from that table and use a parameter to the
scopes that has a dot in it, we get duplicate joins on the same
table.&lt;/p&gt;
&lt;p&gt;This can be seen in the attached project, by doing: rake
db:migrate scipt/server go to: &lt;a href=&quot;http://localhost:3000/as?s=gaman.saman&quot;&gt;http://localhost:3000/as?s=gaman...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(at least on mysql)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When we combine multiple scopes that join on the same table, use :include to eager load from that table and use a parameter to the scopes that has a dot in it, we get duplicate joins on the same table.

This can be seen in the attached project, by doing:
rake db:migrate
scipt/server
go to: http://localhost:3000/as?s=gaman.saman

The :joins in the model a.rb in the project attached with this ticket should have joins like this;

      :joins =&gt; &quot;LEFT OUTER JOIN `bs` ON `bs`.id = `as`.b_id&quot;,  

The join strings are identical to those generated by rails in :include, but we still get the join twice in the sql.

Also, if you try setting 

      :joins =&gt; :b

you also get an error, but only when there is a dot in the parameter (like the link with ?s=gaman.saman demonstrates), but not when the parameter doesn't have a dot in it</body>
      <body-html>&lt;div&gt;&lt;p&gt;When we combine multiple scopes that join on the same table, use
:include to eager load from that table and use a parameter to the
scopes that has a dot in it, we get duplicate joins on the same
table.&lt;/p&gt;
&lt;p&gt;This can be seen in the attached project, by doing:&lt;br&gt;
rake db:migrate&lt;br&gt;
scipt/server&lt;br&gt;
go to: &lt;a href=
&quot;http://localhost:3000/as?s=gaman.saman&quot;&gt;http://localhost:3000/as?s=gaman.saman&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The :joins in the model a.rb in the project attached with this
ticket should have joins like this;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  :joins =&amp;gt; &quot;LEFT OUTER JOIN `bs` ON `bs`.id = `as`.b_id&quot;,&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The join strings are identical to those generated by rails in
:include, but we still get the join twice in the sql.&lt;/p&gt;
&lt;p&gt;Also, if you try setting&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  :joins =&amp;gt; :b&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;you also get an error, but only when there is a dot in the
parameter (like the link with ?s=gaman.saman demonstrates), but not
when the parameter doesn't have a dot in it&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-27T00:02:15+01:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2009-05-27T00:19:53+01:00</updated-at>
      <user-id type="integer">18422</user-id>
      <version type="integer">1</version>
      <user-name>J&#243;nas Tryggvi</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm seeing a similar error. I'm trying to come up with a minimal test to reproduce.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm seeing a similar error. I'm trying to come up with a minimal
test to reproduce.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-22T03:36:17+01:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2009-06-22T03:36:20+01:00</updated-at>
      <user-id type="integer">12631</user-id>
      <version type="integer">2</version>
      <user-name>Pete Yandell</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>A minimal test is attached, based on a production app in which I'm seeing this issue.

The guts of it is this:

    # This succeeds.
    publisher.subscribers.tagged_with(&quot;a&quot;).all(:include =&gt; :tags)

    # This generates invalid SQL.
    publisher.subscribers.tagged_with(&quot;a.&quot;).all(:include =&gt; :tags)

The tagged_with named scope looks like this:

    lambda {|tag| { :joins =&gt; :tags, :conditions =&gt; [&quot;tags.name = ?&quot;, tag ] } }

So, if you include a dot anywhere in the tag you're looking for, ActiveRecord starts spitting out bad SQL!

The error is:

    SQLite3::SQLException: ambiguous column name: tags.id: SELECT &quot;subscribers&quot;.&quot;id&quot; AS t0_r0, &quot;subscribers&quot;.&quot;publisher_id&quot; AS t0_r1, &quot;tags&quot;.&quot;id&quot; AS t1_r0, &quot;tags&quot;.&quot;name&quot; AS t1_r1 FROM &quot;subscribers&quot;  LEFT OUTER JOIN &quot;taggings&quot; ON (&quot;subscribers&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;subscriber_id&quot;)  LEFT OUTER JOIN &quot;tags&quot; ON (&quot;tags&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;tag_id&quot;)   INNER JOIN &quot;taggings&quot; ON (&quot;subscribers&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;subscriber_id&quot;)  INNER JOIN &quot;tags&quot; ON (&quot;tags&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;tag_id&quot;)  WHERE (((tags.name = 'a.') AND (&quot;subscribers&quot;.publisher_id = 1)) AND (&quot;subscribers&quot;.publisher_id = 1))  (ActiveRecord::StatementInvalid)

Same problem occurs on both MySQL and SQLite.

If I just do Subscriber.tagged_with (i.e. leave out the parent relationship), the problem doesn't occur.</body>
      <body-html>&lt;div&gt;&lt;p&gt;A minimal test is attached, based on a production app in which
I'm seeing this issue.&lt;/p&gt;
&lt;p&gt;The guts of it is this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# This succeeds.
publisher.subscribers.tagged_with(&quot;a&quot;).all(:include =&amp;gt; :tags)

# This generates invalid SQL.
publisher.subscribers.tagged_with(&quot;a.&quot;).all(:include =&amp;gt; :tags)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The tagged_with named scope looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;lambda {|tag| { :joins =&amp;gt; :tags, :conditions =&amp;gt; [&quot;tags.name = ?&quot;, tag ] } }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So, if you include a dot anywhere in the tag you're looking for,
ActiveRecord starts spitting out bad SQL!&lt;/p&gt;
&lt;p&gt;The error is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SQLite3::SQLException: ambiguous column name: tags.id: SELECT &quot;subscribers&quot;.&quot;id&quot; AS t0_r0, &quot;subscribers&quot;.&quot;publisher_id&quot; AS t0_r1, &quot;tags&quot;.&quot;id&quot; AS t1_r0, &quot;tags&quot;.&quot;name&quot; AS t1_r1 FROM &quot;subscribers&quot;  LEFT OUTER JOIN &quot;taggings&quot; ON (&quot;subscribers&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;subscriber_id&quot;)  LEFT OUTER JOIN &quot;tags&quot; ON (&quot;tags&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;tag_id&quot;)   INNER JOIN &quot;taggings&quot; ON (&quot;subscribers&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;subscriber_id&quot;)  INNER JOIN &quot;tags&quot; ON (&quot;tags&quot;.&quot;id&quot; = &quot;taggings&quot;.&quot;tag_id&quot;)  WHERE (((tags.name = 'a.') AND (&quot;subscribers&quot;.publisher_id = 1)) AND (&quot;subscribers&quot;.publisher_id = 1))  (ActiveRecord::StatementInvalid)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Same problem occurs on both MySQL and SQLite.&lt;/p&gt;
&lt;p&gt;If I just do Subscriber.tagged_with (i.e. leave out the parent
relationship), the problem doesn't occur.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-22T04:03:09+01:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2009-06-22T04:03:13+01:00</updated-at>
      <user-id type="integer">12631</user-id>
      <version type="integer">3</version>
      <user-name>Pete Yandell</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I have a similar problem, but what triggered it was an actual search string that included a dot.

The problem lies on lib/active_record/associations.rb#tables_in_string, the following regexp:

/([\.a-zA-Z_]+).?\./

Just searches for anything that has a pattenr like string.string and returns the part before the dot. So, even if you have a search string of &quot;%search.&quot; it will think the string &quot;search&quot; is actually a table name and try to join it.

The solution to my specific problem would be to make the regexp more specific and to search ignore this pattern when preceded by % and followed by %, but since Ruby 1.8.7 doesn't support regexp lookahead or lookbehind, not sure what to do without impacting the API too much.

I'll try to come up with something and get a patch up.

Marcelo.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a similar problem, but what triggered it was an actual
search string that included a dot.&lt;/p&gt;
&lt;p&gt;The problem lies on
lib/active_record/associations.rb#tables_in_string, the following
regexp:&lt;/p&gt;
&lt;p&gt;/([.a-zA-Z_]+).?./&lt;/p&gt;
&lt;p&gt;Just searches for anything that has a pattenr like string.string
and returns the part before the dot. So, even if you have a search
string of &quot;%search.&quot; it will think the string &quot;search&quot; is actually
a table name and try to join it.&lt;/p&gt;
&lt;p&gt;The solution to my specific problem would be to make the regexp
more specific and to search ignore this pattern when preceded by %
and followed by %, but since Ruby 1.8.7 doesn't support regexp
lookahead or lookbehind, not sure what to do without impacting the
API too much.&lt;/p&gt;
&lt;p&gt;I'll try to come up with something and get a patch up.&lt;/p&gt;
&lt;p&gt;Marcelo.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T19:54:36+01:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2010-04-29T19:54:39+01:00</updated-at>
      <user-id type="integer">63654</user-id>
      <version type="integer">4</version>
      <user-name>Marcelo Serpa</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Another solution, at the application level, is to just sanitize dots from the string. In my case this would work, but not sure it would work for you guys. I think that we are not supposed to include dots in strings we provide to find's parameters. I can live with that, for now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another solution, at the application level, is to just sanitize
dots from the string. In my case this would work, but not sure it
would work for you guys. I think that we are not supposed to
include dots in strings we provide to find's parameters. I can live
with that, for now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T19:57:28+01:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2010-04-29T19:57:33+01:00</updated-at>
      <user-id type="integer">63654</user-id>
      <version type="integer">5</version>
      <user-name>Marcelo Serpa</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:50+01:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2010-05-04T18:48:50+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Any updates here?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Any updates here?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T04:07:12+01:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">1841</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2010-10-09T04:07:17+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">7</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>This is still an issue in 3.0.3, causing things like:

@@@ ruby
Alpha.where(:name =&gt; 'foobar').includes(:bravo)
@@@

To generate normal queries like this:

@@@ sql
SELECT &quot;alphas&quot;.* FROM &quot;alphas&quot; WHERE (&quot;alphas&quot;.&quot;name&quot; = 'foobar')
SELECT &quot;bravos&quot;.* FROM &quot;bravos&quot; WHERE (&quot;bravos&quot;.&quot;id&quot; IN (...))
@@@

While something like:

@@@ ruby
Alpha.where(:name =&gt; 'foo.bar').includes(:bravo)
@@@

To generate this join query:

@@@ sql
SELECT &quot;alphas&quot;.&quot;id&quot; AS t0_r0, &quot;alphas&quot;.&quot;name&quot; AS t0_r1, &quot;alphas&quot;.&quot;created_at&quot; AS t0_r2, 
&quot;alphas&quot;.&quot;updated_at&quot; AS t0_r3, &quot;alphas&quot;.&quot;bravo_id&quot; AS t0_r4, &quot;bravos&quot;.&quot;id&quot; AS t1_r0, 
&quot;bravos&quot;.&quot;some&quot; AS t1_r1, &quot;bravos&quot;.&quot;other&quot; AS t1_r2, &quot;bravos&quot;.&quot;created_at&quot; AS t1_r3, 
&quot;bravos&quot;.&quot;updated_at&quot; AS t1_r4 FROM &quot;alphas&quot; LEFT OUTER JOIN &quot;bravos&quot; ON 
&quot;bravos&quot;.&quot;id&quot; = &quot;alphas&quot;.&quot;bravo_id&quot; WHERE (&quot;alphas&quot;.&quot;name&quot; = 'foo.bar')
@@@

When you have more complex queries it can go bad very easily (performance-wise and exceptions) just because the user included a dot in their query. 

An example of a crashing issue is if the Bravo model is in a separate database. You can handle it fine in the first case as it does separate queries, but the second one will raise an SQL exception because the table &quot;bravos&quot; doesn't exist in Alpha model's database. Very bad that the user can break your application by just adding a dot in a string.

Here are other open tickets about this issue:

https://rails.lighthouseapp.com/projects/8994/tickets/3446
https://rails.lighthouseapp.com/projects/8994/tickets/5200

Sorry, but I don't know enough about Rails internals to propose a patch, just wanted to give an update as I found this issue today. I had to rewrite my code to not use includes in some queries to avoid this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is still an issue in 3.0.3, causing things like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Alpha.where(:name =&amp;gt; 'foobar').includes(:bravo)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To generate normal queries like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;alphas&quot;.* FROM &quot;alphas&quot; WHERE (&quot;alphas&quot;.&quot;name&quot; = 'foobar')
SELECT &quot;bravos&quot;.* FROM &quot;bravos&quot; WHERE (&quot;bravos&quot;.&quot;id&quot; IN (...))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;While something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Alpha.where(:name =&amp;gt; 'foo.bar').includes(:bravo)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To generate this join query:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT &quot;alphas&quot;.&quot;id&quot; AS t0_r0, &quot;alphas&quot;.&quot;name&quot; AS t0_r1, &quot;alphas&quot;.&quot;created_at&quot; AS t0_r2, 
&quot;alphas&quot;.&quot;updated_at&quot; AS t0_r3, &quot;alphas&quot;.&quot;bravo_id&quot; AS t0_r4, &quot;bravos&quot;.&quot;id&quot; AS t1_r0, 
&quot;bravos&quot;.&quot;some&quot; AS t1_r1, &quot;bravos&quot;.&quot;other&quot; AS t1_r2, &quot;bravos&quot;.&quot;created_at&quot; AS t1_r3, 
&quot;bravos&quot;.&quot;updated_at&quot; AS t1_r4 FROM &quot;alphas&quot; LEFT OUTER JOIN &quot;bravos&quot; ON 
&quot;bravos&quot;.&quot;id&quot; = &quot;alphas&quot;.&quot;bravo_id&quot; WHERE (&quot;alphas&quot;.&quot;name&quot; = 'foo.bar')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When you have more complex queries it can go bad very easily
(performance-wise and exceptions) just because the user included a
dot in their query.&lt;/p&gt;
&lt;p&gt;An example of a crashing issue is if the Bravo model is in a
separate database. You can handle it fine in the first case as it
does separate queries, but the second one will raise an SQL
exception because the table &quot;bravos&quot; doesn't exist in Alpha model's
database. Very bad that the user can break your application by just
adding a dot in a string.&lt;/p&gt;
&lt;p&gt;Here are other open tickets about this issue:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/3446&quot;&gt;https://rails.lighthouseapp.com/projects/8994/tickets/3446&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/5200&quot;&gt;https://rails.lighthouseapp.com/projects/8994/tickets/5200&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sorry, but I don't know enough about Rails internals to propose
a patch, just wanted to give an update as I found this issue today.
I had to rewrite my code to not use includes in some queries to
avoid this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-25T22:24:50+00:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">1841</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2010-11-26T01:58:56+00:00</updated-at>
      <user-id type="integer">126747</user-id>
      <version type="integer">8</version>
      <user-name>David Bittencourt</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-28T00:23:00+00:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">1841</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:include :joins activecord named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2010-11-28T00:23:16+00:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">9</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-01T00:00:17+00:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;:include :joins activecord named_scope&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">1841</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activecord include joins named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2011-03-01T00:01:32+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">10</version>
      <user-name>rails</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-01T00:00:17+00:00</created-at>
      <creator-id type="integer">18422</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2724</number>
      <permalink>duplicate-joins-when-combining-scopes-and-includes-with-dots-in-parameres</permalink>
      <priority type="integer">1841</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activecord include joins named_scope</tag>
      <title>Duplicate joins when combining scopes and includes with dots in parameters</title>
      <updated-at type="datetime">2011-03-01T00:01:54+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">11</version>
      <user-name>rails</user-name>
      <creator-name>J&#243;nas Tryggvi</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2724</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>10f3e4b55a253da618b43bce960e9617585d08d2</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2009-05-27T00:02:15+01:00</created-at>
      <filename>dotbug.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">126475</id>
      <size type="integer">110587</size>
      <uploader-id type="integer">18422</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/126475/dotbug.zip</url>
    </attachment>
    <attachment type="Attachment">
      <code>ed1784c0a500a408a7e26e90a282b131e6083d04</code>
      <content-type>text/x-ruby-script</content-type>
      <created-at type="datetime">2009-06-22T04:03:09+01:00</created-at>
      <filename>test.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">135835</id>
      <size type="integer">1166</size>
      <uploader-id type="integer">12631</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/135835/test.rb</url>
    </attachment>
    <attachment-image type="Attachment">
      <code>4c121a8c58548b5d478f1d96d6f5cdedddeceebb</code>
      <content-type>image/png</content-type>
      <created-at type="datetime">2010-04-29T19:54:36+01:00</created-at>
      <filename>screen-shot-2010-04-29-at-14746-pm.png</filename>
      <height type="integer">800</height>
      <id type="integer">504138</id>
      <size type="integer">333853</size>
      <uploader-id type="integer">63654</uploader-id>
      <width type="integer">1280</width>
      <url>http://rails.lighthouseapp.com/attachments/504138/screen-shot-2010-04-29-at-14746-pm.png</url>
    </attachment-image>
  </attachments>
</ticket>
