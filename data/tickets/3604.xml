<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-21T15:56:28+00:00</created-at>
  <creator-id type="integer">80416</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3604</number>
  <permalink>postgres-adapter-does-not-honor-set_sequence_name</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>postgresql sequence</tag>
  <title>Postgres adapter does not honor set_sequence_name</title>
  <updated-at type="datetime">2010-10-08T12:30:42+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">2</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Jade Rubick</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3604</url>
  <priority-name>Low</priority-name>
  <original-body>I am using a legacy database that uses one sequence for all the tables in the system. There does not seem to be a way to support this in Rails using Postgres.

I read in various places that you could use set_sequence_name is your Rails models:

class ForumsForum &lt; ActiveRecord::Base
set_primary_key :forum_id
set_sequence_name 't_acs_object_id_seq'
...
end

However, Rails seems to completely ignore this directive for Postgres. I think it does work for Oracle, but it really does not seem to for Postgres.

Here's a unit test:

def test_save_message
forum = ForumsForum.new(:name =&gt; 'Test forum', \
:charter =&gt; 'Test charter', \
:presentation_type =&gt; 'abc', \
:posting_policy =&gt; 'abc', \
:enabled_p =&gt; 'f')
forum.save
...
end

Here's the result of the test:

1) Error:
test_save_message(ForumsMessageTest):
ActiveRecord::StatementInvalid: PGError: ERROR: null value in column &quot;forum_id&quot; violates not-null constraint
: INSERT INTO &quot;forums_forums&quot; (&quot;name&quot;, &quot;package_id&quot;, &quot;last_post&quot;, &quot;thread_count&quot;, &quot;approved_thread_count&quot;, &quot;max_child_sortkey&quot;, &quot;charter&quot;, &quot;posting_policy&quot;, &quot;presentation_type&quot;, &quot;enabled_p&quot;) VALUES(E'Test forum', NULL, NULL, 0, 0, NULL, E'Test charter', E'abc', E'abc', E'f') RETURNING &quot;forum_id&quot;
test/unit/forums_message_test.rb:20:in `test_save_message'

1 tests, 0 assertions, 0 failures, 1 errors


Note the RETURNING statement. All variations I tried to set_sequence_name did not work. After a little looking, I saw this:

http://www.ruby-forum.com/topic/81873

And looking into the Rails source code, at first glance it does appear that the sequence name is not honored.</original-body>
  <latest-body>I am using a legacy database that uses one sequence for all the tables in the system. There does not seem to be a way to support this in Rails using Postgres.

I read in various places that you could use set_sequence_name is your Rails models:

class ForumsForum &lt; ActiveRecord::Base
set_primary_key :forum_id
set_sequence_name 't_acs_object_id_seq'
...
end

However, Rails seems to completely ignore this directive for Postgres. I think it does work for Oracle, but it really does not seem to for Postgres.

Here's a unit test:

def test_save_message
forum = ForumsForum.new(:name =&gt; 'Test forum', \
:charter =&gt; 'Test charter', \
:presentation_type =&gt; 'abc', \
:posting_policy =&gt; 'abc', \
:enabled_p =&gt; 'f')
forum.save
...
end

Here's the result of the test:

1) Error:
test_save_message(ForumsMessageTest):
ActiveRecord::StatementInvalid: PGError: ERROR: null value in column &quot;forum_id&quot; violates not-null constraint
: INSERT INTO &quot;forums_forums&quot; (&quot;name&quot;, &quot;package_id&quot;, &quot;last_post&quot;, &quot;thread_count&quot;, &quot;approved_thread_count&quot;, &quot;max_child_sortkey&quot;, &quot;charter&quot;, &quot;posting_policy&quot;, &quot;presentation_type&quot;, &quot;enabled_p&quot;) VALUES(E'Test forum', NULL, NULL, 0, 0, NULL, E'Test charter', E'abc', E'abc', E'f') RETURNING &quot;forum_id&quot;
test/unit/forums_message_test.rb:20:in `test_save_message'

1 tests, 0 assertions, 0 failures, 1 errors


Note the RETURNING statement. All variations I tried to set_sequence_name did not work. After a little looking, I saw this:

http://www.ruby-forum.com/topic/81873

And looking into the Rails source code, at first glance it does appear that the sequence name is not honored.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I am using a legacy database that uses one sequence for all the
tables in the system. There does not seem to be a way to support
this in Rails using Postgres.&lt;/p&gt;
&lt;p&gt;I read in various places that you could use set_sequence_name is
your Rails models:&lt;/p&gt;
&lt;p&gt;class ForumsForum &amp;lt; ActiveRecord::Base&lt;br&gt;
set_primary_key :forum_id&lt;br&gt;
set_sequence_name 't_acs_object_id_seq'&lt;br&gt;
... end&lt;/p&gt;
&lt;p&gt;However, Rails seems to completely ignore this directive for
Postgres. I think it does work for Oracle, but it really does not
seem to for Postgres.&lt;/p&gt;
&lt;p&gt;Here's a unit test:&lt;/p&gt;
&lt;p&gt;def test_save_message&lt;br&gt;
forum = ForumsForum.new(:name =&amp;gt; 'Test forum', &amp;lt;br/&amp;gt;
:charter =&amp;gt; 'Test charter', \ :presentation_type =&amp;gt; 'abc', \
:posting_policy =&amp;gt; 'abc', \ :enabled_p =&amp;gt; 'f') forum.save&lt;br&gt;
... end&lt;/p&gt;
&lt;p&gt;Here's the result of the test:&lt;/p&gt;
&lt;p&gt;1) Error:&lt;br&gt;
test_save_message(ForumsMessageTest):&lt;br&gt;
ActiveRecord::StatementInvalid: PGError: ERROR: null value in
column &quot;forum_id&quot; violates not-null constraint&lt;br&gt;
: INSERT INTO &quot;forums_forums&quot; (&quot;name&quot;, &quot;package_id&quot;, &quot;last_post&quot;,
&quot;thread_count&quot;, &quot;approved_thread_count&quot;, &quot;max_child_sortkey&quot;,
&quot;charter&quot;, &quot;posting_policy&quot;, &quot;presentation_type&quot;, &quot;enabled_p&quot;)
VALUES(E'Test forum', NULL, NULL, 0, 0, NULL, E'Test charter',
E'abc', E'abc', E'f') RETURNING &quot;forum_id&quot;
test/unit/forums_message_test.rb:20:in
&lt;code&gt;test_save_message'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1 tests, 0 assertions, 0 failures, 1 errors&lt;/p&gt;
&lt;p&gt;Note the RETURNING statement. All variations I tried to
set_sequence_name did not work. After a little looking, I saw
this:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://www.ruby-forum.com/topic/81873&quot;&gt;http://www.ruby-forum.com/topic/81873&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And looking into the Rails source code, at first glance it does
appear that the sequence name is not honored.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am using a legacy database that uses one sequence for all the tables in the system. There does not seem to be a way to support this in Rails using Postgres.

I read in various places that you could use set_sequence_name is your Rails models:

class ForumsForum &lt; ActiveRecord::Base
set_primary_key :forum_id
set_sequence_name 't_acs_object_id_seq'
...
end

However, Rails seems to completely ignore this directive for Postgres. I think it does work for Oracle, but it really does not seem to for Postgres.

Here's a unit test:

def test_save_message
forum = ForumsForum.new(:name =&gt; 'Test forum', \
:charter =&gt; 'Test charter', \
:presentation_type =&gt; 'abc', \
:posting_policy =&gt; 'abc', \
:enabled_p =&gt; 'f')
forum.save
...
end

Here's the result of the test:

1) Error:
test_save_message(ForumsMessageTest):
ActiveRecord::StatementInvalid: PGError: ERROR: null value in column &quot;forum_id&quot; violates not-null constraint
: INSERT INTO &quot;forums_forums&quot; (&quot;name&quot;, &quot;package_id&quot;, &quot;last_post&quot;, &quot;thread_count&quot;, &quot;approved_thread_count&quot;, &quot;max_child_sortkey&quot;, &quot;charter&quot;, &quot;posting_policy&quot;, &quot;presentation_type&quot;, &quot;enabled_p&quot;) VALUES(E'Test forum', NULL, NULL, 0, 0, NULL, E'Test charter', E'abc', E'abc', E'f') RETURNING &quot;forum_id&quot;
test/unit/forums_message_test.rb:20:in `test_save_message'

1 tests, 0 assertions, 0 failures, 1 errors


Note the RETURNING statement. All variations I tried to set_sequence_name did not work. After a little looking, I saw this:

http://www.ruby-forum.com/topic/81873

And looking into the Rails source code, at first glance it does appear that the sequence name is not honored.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am using a legacy database that uses one sequence for all the
tables in the system. There does not seem to be a way to support
this in Rails using Postgres.&lt;/p&gt;
&lt;p&gt;I read in various places that you could use set_sequence_name is
your Rails models:&lt;/p&gt;
&lt;p&gt;class ForumsForum &amp;lt; ActiveRecord::Base&lt;br&gt;
set_primary_key :forum_id&lt;br&gt;
set_sequence_name 't_acs_object_id_seq'&lt;br&gt;
... end&lt;/p&gt;
&lt;p&gt;However, Rails seems to completely ignore this directive for
Postgres. I think it does work for Oracle, but it really does not
seem to for Postgres.&lt;/p&gt;
&lt;p&gt;Here's a unit test:&lt;/p&gt;
&lt;p&gt;def test_save_message&lt;br&gt;
forum = ForumsForum.new(:name =&amp;gt; 'Test forum', &amp;lt;br/&amp;gt;
:charter =&amp;gt; 'Test charter', \ :presentation_type =&amp;gt; 'abc', \
:posting_policy =&amp;gt; 'abc', \ :enabled_p =&amp;gt; 'f') forum.save&lt;br&gt;
... end&lt;/p&gt;
&lt;p&gt;Here's the result of the test:&lt;/p&gt;
&lt;p&gt;1) Error:&lt;br&gt;
test_save_message(ForumsMessageTest):&lt;br&gt;
ActiveRecord::StatementInvalid: PGError: ERROR: null value in
column &quot;forum_id&quot; violates not-null constraint&lt;br&gt;
: INSERT INTO &quot;forums_forums&quot; (&quot;name&quot;, &quot;package_id&quot;, &quot;last_post&quot;,
&quot;thread_count&quot;, &quot;approved_thread_count&quot;, &quot;max_child_sortkey&quot;,
&quot;charter&quot;, &quot;posting_policy&quot;, &quot;presentation_type&quot;, &quot;enabled_p&quot;)
VALUES(E'Test forum', NULL, NULL, 0, 0, NULL, E'Test charter',
E'abc', E'abc', E'f') RETURNING &quot;forum_id&quot;
test/unit/forums_message_test.rb:20:in
&lt;code&gt;test_save_message'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1 tests, 0 assertions, 0 failures, 1 errors&lt;/p&gt;
&lt;p&gt;Note the RETURNING statement. All variations I tried to
set_sequence_name did not work. After a little looking, I saw
this:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://www.ruby-forum.com/topic/81873&quot;&gt;http://www.ruby-forum.com/topic/81873&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And looking into the Rails source code, at first glance it does
appear that the sequence name is not honored.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-21T15:56:28+00:00</created-at>
      <creator-id type="integer">80416</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3604</number>
      <permalink>postgres-adapter-does-not-honor-set_sequence_name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>postgresql sequence</tag>
      <title>Postgres adapter does not honor set_sequence_name</title>
      <updated-at type="datetime">2009-12-21T15:56:29+00:00</updated-at>
      <user-id type="integer">80416</user-id>
      <version type="integer">1</version>
      <user-name>Jade Rubick</user-name>
      <creator-name>Jade Rubick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3604</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T12:30:40+01:00</created-at>
      <creator-id type="integer">80416</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3604</number>
      <permalink>postgres-adapter-does-not-honor-set_sequence_name</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>postgresql sequence</tag>
      <title>Postgres adapter does not honor set_sequence_name</title>
      <updated-at type="datetime">2010-10-08T12:30:42+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Jade Rubick</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3604</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
