<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40272</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-05-01T19:38:11+01:00</created-at>
  <creator-id type="integer">51632</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">4520</number>
  <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>activerecord activesupport json serialization</tag>
  <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
  <updated-at type="datetime">2011-04-25T08:54:40+01:00</updated-at>
  <user-id type="integer">108595</user-id>
  <version type="integer">8</version>
  <user-name>rke</user-name>
  <creator-name>Brian Lopez</creator-name>
  <assigned-user-name>Santiago Pastorino</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>By my understanding, the #as_json method should return an object that can be nearly mapped directly to JSON (given the data types mentioned in this issue's title). This makes it so other JSON encoding libraries don't have to know or do anything special to encode the object.

If this were the expected behavior, C extension JSON libraries would be able to take advantage of the #as_json method as an optimization over calling #to_json - which may be doing it's own encoding in Ruby land.

See: http://gist.github.com/386545

A little backstory for the gist:
Each ActiveRecord object is having it's #to_json method called, which is falling through ActiveSupport's JSON encoder in pure ruby.
An an example in using the Mysql2 gem directly, I'm able to get pure ruby hashes and encode them in C.

The comparison isn't totally fair, since using ActiveRecord will surely be a little slower than using the db driver directly - but my hope is that you can see the benefits in returning mappable ruby types to the encoder directly.</original-body>
  <latest-body>By my understanding, the #as_json method should return an object that can be nearly mapped directly to JSON (given the data types mentioned in this issue's title). This makes it so other JSON encoding libraries don't have to know or do anything special to encode the object.

If this were the expected behavior, C extension JSON libraries would be able to take advantage of the #as_json method as an optimization over calling #to_json - which may be doing it's own encoding in Ruby land.

See: http://gist.github.com/386545

A little backstory for the gist:
Each ActiveRecord object is having it's #to_json method called, which is falling through ActiveSupport's JSON encoder in pure ruby.
An an example in using the Mysql2 gem directly, I'm able to get pure ruby hashes and encode them in C.

The comparison isn't totally fair, since using ActiveRecord will surely be a little slower than using the db driver directly - but my hope is that you can see the benefits in returning mappable ruby types to the encoder directly.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;By my understanding, the #as_json method should return an object
that can be nearly mapped directly to JSON (given the data types
mentioned in this issue's title). This makes it so other JSON
encoding libraries don't have to know or do anything special to
encode the object.&lt;/p&gt;
&lt;p&gt;If this were the expected behavior, C extension JSON libraries
would be able to take advantage of the #as_json method as an
optimization over calling #to_json - which may be doing it's own
encoding in Ruby land.&lt;/p&gt;
&lt;p&gt;See: &lt;a href=
&quot;http://gist.github.com/386545&quot;&gt;http://gist.github.com/386545&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A little backstory for the gist:&lt;br&gt;
Each ActiveRecord object is having it's #to_json method called,
which is falling through ActiveSupport's JSON encoder in pure
ruby.&lt;br&gt;
An an example in using the Mysql2 gem directly, I'm able to get
pure ruby hashes and encode them in C.&lt;/p&gt;
&lt;p&gt;The comparison isn't totally fair, since using ActiveRecord will
surely be a little slower than using the db driver directly - but
my hope is that you can see the benefits in returning mappable ruby
types to the encoder directly.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>By my understanding, the #as_json method should return an object that can be nearly mapped directly to JSON (given the data types mentioned in this issue's title). This makes it so other JSON encoding libraries don't have to know or do anything special to encode the object.

If this were the expected behavior, C extension JSON libraries would be able to take advantage of the #as_json method as an optimization over calling #to_json - which may be doing it's own encoding in Ruby land.

See: http://gist.github.com/386545

A little backstory for the gist:
Each ActiveRecord object is having it's #to_json method called, which is falling through ActiveSupport's JSON encoder in pure ruby.
An an example in using the Mysql2 gem directly, I'm able to get pure ruby hashes and encode them in C.

The comparison isn't totally fair, since using ActiveRecord will surely be a little slower than using the db driver directly - but my hope is that you can see the benefits in returning mappable ruby types to the encoder directly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;By my understanding, the #as_json method should return an object
that can be nearly mapped directly to JSON (given the data types
mentioned in this issue's title). This makes it so other JSON
encoding libraries don't have to know or do anything special to
encode the object.&lt;/p&gt;
&lt;p&gt;If this were the expected behavior, C extension JSON libraries
would be able to take advantage of the #as_json method as an
optimization over calling #to_json - which may be doing it's own
encoding in Ruby land.&lt;/p&gt;
&lt;p&gt;See: &lt;a href=
&quot;http://gist.github.com/386545&quot;&gt;http://gist.github.com/386545&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A little backstory for the gist:&lt;br&gt;
Each ActiveRecord object is having it's #to_json method called,
which is falling through ActiveSupport's JSON encoder in pure
ruby.&lt;br&gt;
An an example in using the Mysql2 gem directly, I'm able to get
pure ruby hashes and encode them in C.&lt;/p&gt;
&lt;p&gt;The comparison isn't totally fair, since using ActiveRecord will
surely be a little slower than using the db driver directly - but
my hope is that you can see the benefits in returning mappable ruby
types to the encoder directly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-01T19:38:11+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2010-05-01T19:38:13+01:00</updated-at>
      <user-id type="integer">51632</user-id>
      <version type="integer">1</version>
      <user-name>Brian Lopez</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-01T19:38:31+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord activesupport json serialization</tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2010-05-01T19:38:34+01:00</updated-at>
      <user-id type="integer">51632</user-id>
      <version type="integer">2</version>
      <user-name>Brian Lopez</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:43:09+00:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord activesupport json serialization</tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2011-02-02T17:47:41+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:43:10+00:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord activesupport json serialization</tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2011-02-02T17:47:36+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree. It would be very useful to have the following invariant:

&#8704;o, o.as_json == JSON.parse(o.to_json)

The principal violator is ActiveModel::Serializers::JSON#as_json, which does not call #as_json on the serializable_hash. This means that the hash values are whatever types came back or were typecasted from the database (the most common non-JSON-native types being Time, Date, and DateTime). This necessitates a further workaround in Hash#encode_json which should not be necessary.

Attaching a patch that fixes this.

[state:open]</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree. It would be very useful to have the following
invariant:&lt;/p&gt;
&lt;p&gt;&amp;#8704;o, o.as_json == JSON.parse(o.to_json)&lt;/p&gt;
&lt;p&gt;The principal violator is
ActiveModel::Serializers::JSON#as_json, which does not call
#as_json on the serializable_hash. This means that the hash values
are whatever types came back or were typecasted from the database
(the most common non-JSON-native types being Time, Date, and
DateTime). This necessitates a further workaround in
Hash#encode_json which should not be necessary.&lt;/p&gt;
&lt;p&gt;Attaching a patch that fixes this.&lt;/p&gt;
&lt;p&gt;[state:open]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-06T22:13:18+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord activesupport json serialization</tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2011-04-06T22:13:26+01:00</updated-at>
      <user-id type="integer">72273</user-id>
      <version type="integer">5</version>
      <user-name>John Firebaugh</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Another issue: TrueClass, FalseClass, and NilClass return an ActiveSupport::JSON::Variable from #as_json. Instead, they should return self and override encode_json.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another issue: TrueClass, FalseClass, and NilClass return an
ActiveSupport::JSON::Variable from #as_json. Instead, they should
return self and override encode_json.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-07T20:44:30+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord activesupport json serialization</tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2011-04-07T20:44:39+01:00</updated-at>
      <user-id type="integer">72273</user-id>
      <version type="integer">6</version>
      <user-name>John Firebaugh</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-14T05:05:26+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord activesupport json serialization</tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2011-04-14T05:05:35+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Instead of Numeric shouldn't this be Float? http://www.ietf.org/rfc/rfc4627.txt does not allow Rationals or Complex numbers and although it does not impose a limit on precision and exponent, http://www.json.org/ describes itself as a subset of ECMA-262 which just says:
8.5	The Number Type
The Number type has exactly 18437736874454810627 (that is, 2**64&#8722;2**53+3) values, representing the double- precision 64-bit format IEEE 754 values as specified in the IEEE Standard for Binary Floating-Point Arithmetic, ...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Instead of Numeric shouldn't this be Float? &lt;a href=
&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;http://www.ietf.org/rfc/rfc4627.txt&lt;/a&gt;
does not allow Rationals or Complex numbers and although it does
not impose a limit on precision and exponent, &lt;a href=
&quot;http://www.json.org/&quot;&gt;http://www.json.org/&lt;/a&gt; describes itself as
a subset of ECMA-262 which just says:&lt;br&gt;
8.5 The Number Type&lt;br&gt;
The Number type has exactly 18437736874454810627 (that is,
2&lt;strong&gt;64&amp;#8722;2&lt;/strong&gt;53+3) values, representing the double-
precision 64-bit format IEEE 754 values as specified in the IEEE
Standard for Binary Floating-Point Arithmetic, ...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-25T08:54:28+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4520</number>
      <permalink>as_json-should-only-ever-return-a-hash-array-numeric-string-nil-true-or-false</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord activesupport json serialization</tag>
      <title>#as_json should only ever return a Hash, Array, Numeric, String, nil, true or false</title>
      <updated-at type="datetime">2011-04-25T08:54:40+01:00</updated-at>
      <user-id type="integer">108595</user-id>
      <version type="integer">8</version>
      <user-name>rke</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4520</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>583d7ab9184ea198d99a085a55ef1c7f18f622ad</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-04-06T22:13:18+01:00</created-at>
      <filename>0001-activemodel-serializers-js.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">999583</id>
      <size type="integer">2078</size>
      <uploader-id type="integer">72273</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/999583/0001-activemodel-serializers-js.patch</url>
    </attachment>
  </attachments>
</ticket>
