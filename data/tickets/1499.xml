<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-01T01:26:52+00:00</created-at>
  <creator-id type="integer">22580</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1499</number>
  <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
  <priority type="integer">862</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope patch scope with_scope</tag>
  <title>find_last (find(:last)) affects other calls on the same scope</title>
  <updated-at type="datetime">2008-12-22T00:14:03+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">7</version>
  <user-name>Repository</user-name>
  <creator-name>Daniel Luz</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Using find(:last) within a scope leaves side effects on it, affecting all future calls within the same scope.

Pseudocode example:

    Book.with_scope(:find =&gt; {:order =&gt; &quot;id&quot;}) do
      p Book.find(:all)  # returns: 1, 2, 3, 4, 5...
      p Book.find(:last) # returns Book #10
      p Book.find(:all)  # now returns 10, 9, 8, 7...
      p Book.find(:last) # now returns Book #1
    end

An ActiveRecord testcase patch is included.</original-body>
  <latest-body>Using find(:last) within a scope leaves side effects on it, affecting all future calls within the same scope.

Pseudocode example:

    Book.with_scope(:find =&gt; {:order =&gt; &quot;id&quot;}) do
      p Book.find(:all)  # returns: 1, 2, 3, 4, 5...
      p Book.find(:last) # returns Book #10
      p Book.find(:all)  # now returns 10, 9, 8, 7...
      p Book.find(:last) # now returns Book #1
    end

An ActiveRecord testcase patch is included.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using find(:last) within a scope leaves side effects on it,
affecting all future calls within the same scope.&lt;/p&gt;
&lt;p&gt;Pseudocode example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Book.with_scope(:find =&amp;gt; {:order =&amp;gt; &quot;id&quot;}) do
  p Book.find(:all)  # returns: 1, 2, 3, 4, 5...
  p Book.find(:last) # returns Book [#10](/projects/8994/tickets/10 &quot;Ticket #10&quot;)
  p Book.find(:all)  # now returns 10, 9, 8, 7...
  p Book.find(:last) # now returns Book [#1](/projects/8994/tickets/1 &quot;Ticket #1&quot;)
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;An ActiveRecord testcase patch is included.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using find(:last) within a scope leaves side effects on it, affecting all future calls within the same scope.

Pseudocode example:

@@@ ruby
Book.with_scope(:find =&gt; {:order =&gt; &quot;id&quot;}) do
  p Book.find(:all)  # returns: 1, 2, 3, 4, 5...
  p Book.find(:last) # returns Book #10
  p Book.find(:all)  # now returns 10, 9, 8, 7...
  p Book.find(:last) # now returns Book #1
end
@@@

An ActiveRecord testcase patch is included.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using find(:last) within a scope leaves side effects on it,
affecting all future calls within the same scope.&lt;/p&gt;
&lt;p&gt;Pseudocode example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Book.with_scope(:find =&amp;gt; {:order =&amp;gt; &amp;quot;id&amp;quot;}) do
  p Book.find(:all)  # returns: 1, 2, 3, 4, 5...
  p Book.find(:last) # returns Book #10
  p Book.find(:all)  # now returns 10, 9, 8, 7...
  p Book.find(:last) # now returns Book #1
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An ActiveRecord testcase patch is included.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-01T01:26:53+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1499</number>
      <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope scope with_scope</tag>
      <title>find_last (find(:last)) affects other calls on the same scope</title>
      <updated-at type="datetime">2008-12-01T01:28:07+00:00</updated-at>
      <user-id type="integer">22580</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Luz</user-name>
      <creator-name>Daniel Luz</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Patch altering the way `#find_last` works with scoped_methods.

Rather than updating all elements on the stack, update just the current scope, and restore its state afterward.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch altering the way &lt;code&gt;#find_last&lt;/code&gt; works with
scoped_methods.&lt;/p&gt;
&lt;p&gt;Rather than updating all elements on the stack, update just the
current scope, and restore its state afterward.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-01T04:36:50+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1-stable 2.2-stable :order activerecord bug find_last named_scope scope with_scope
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1499</number>
      <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope patch scope with_scope</tag>
      <title>find_last (find(:last)) affects other calls on the same scope</title>
      <updated-at type="datetime">2008-12-01T04:36:53+00:00</updated-at>
      <user-id type="integer">22580</user-id>
      <version type="integer">2</version>
      <user-name>Daniel Luz</user-name>
      <creator-name>Daniel Luz</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-01T05:59:13+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- 
:title: find_last (find(:last)) affects other calls on the same scope
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1499</number>
      <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope patch scope with_scope</tag>
      <title>[PATCH] find_last (find(:last)) affects other calls on the same scope</title>
      <updated-at type="datetime">2008-12-01T05:59:15+00:00</updated-at>
      <user-id type="integer">22580</user-id>
      <version type="integer">3</version>
      <user-name>Daniel Luz</user-name>
      <creator-name>Daniel Luz</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1, nice catch.

Tried it out, looks good. Tests are great; patch fixes the problem, although I don't know enough about method scoping to know if there's a better way to do it. This one looks fine, though.

p.s. if you merge those into one patch formatted with `git format-patch`, it makes it way easier to apply (and commit on your behalf). [Directions here.](http://rails.lighthouseapp.com/projects/8994/sending-patches) Otherwise, git doesn't know who wrote the patch, thinks it's an uncommitted change, etc.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, nice catch.&lt;/p&gt;
&lt;p&gt;Tried it out, looks good. Tests are great; patch fixes the
problem, although I don't know enough about method scoping to know
if there's a better way to do it. This one looks fine, though.&lt;/p&gt;
&lt;p&gt;p.s. if you merge those into one patch formatted with &lt;code&gt;git
format-patch&lt;/code&gt;, it makes it way easier to apply (and commit on
your behalf). &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;Directions
here.&lt;/a&gt; Otherwise, git doesn't know who wrote the patch, thinks
it's an uncommitted change, etc.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-01T07:20:11+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1499</number>
      <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope patch scope with_scope</tag>
      <title>[PATCH] find_last (find(:last)) affects other calls on the same scope</title>
      <updated-at type="datetime">2008-12-01T07:20:12+00:00</updated-at>
      <user-id type="integer">17373</user-id>
      <version type="integer">4</version>
      <user-name>Chris Kampmeier</user-name>
      <creator-name>Daniel Luz</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Testcase and fix in a single patch.

They were separated because at first I didn't have a solution, so I just came here to leave a report and a test case. After some more fiddling I had a better understanding of how the scoping works and came up with this patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Testcase and fix in a single patch.&lt;/p&gt;
&lt;p&gt;They were separated because at first I didn't have a solution,
so I just came here to leave a report and a test case. After some
more fiddling I had a better understanding of how the scoping works
and came up with this patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-01T08:05:32+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1499</number>
      <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope patch scope with_scope</tag>
      <title>[PATCH] find_last (find(:last)) affects other calls on the same scope</title>
      <updated-at type="datetime">2008-12-01T08:05:34+00:00</updated-at>
      <user-id type="integer">22580</user-id>
      <version type="integer">5</version>
      <user-name>Daniel Luz</user-name>
      <creator-name>Daniel Luz</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-21T19:04:27+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[PATCH] find_last (find(:last)) affects other calls on the same scope&quot;
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1499</number>
      <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope patch scope with_scope</tag>
      <title>find_last (find(:last)) affects other calls on the same scope</title>
      <updated-at type="datetime">2008-12-21T19:04:32+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Daniel Luz</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [f7bd0beb67c5d9d50e37aa596605b91e61197fbe]) Ensure Model#last doesn't affects order for another finders inside the same scope [#1499 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/f7bd0beb67c5d9d50e37aa596605b91e61197fbe</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [f7bd0beb67c5d9d50e37aa596605b91e61197fbe]) Ensure
Model#last doesn't affects order for another finders inside the
same scope [&lt;a href=&quot;/projects/8994/tickets/1499&quot; title=&quot;Ticket #1499&quot;&gt;#1499&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/f7bd0beb67c5d9d50e37aa596605b91e61197fbe&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-22T00:14:00+00:00</created-at>
      <creator-id type="integer">22580</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1499</number>
      <permalink>find_last-findlast-affects-other-calls-on-the-same-scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1-stable 2.2-stable :order activerecord bug find_last named_scope patch scope with_scope</tag>
      <title>find_last (find(:last)) affects other calls on the same scope</title>
      <updated-at type="datetime">2008-12-22T00:14:03+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Daniel Luz</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1499</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>972da36b64a161adfeee1f15825b04f70ae4c9e7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-01T01:26:53+00:00</created-at>
      <filename>testcase.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">66502</id>
      <size type="integer">1244</size>
      <uploader-id type="integer">22580</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/66502/testcase.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>d856eef0c112556aa336049ed6ddd3a2162f3187</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-01T04:36:51+00:00</created-at>
      <filename>0001-Don-t-modify-the-elements-in-the-scoped_methods-stac.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">66532</id>
      <size type="integer">1373</size>
      <uploader-id type="integer">22580</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/66532/0001-Don-t-modify-the-elements-in-the-scoped_methods-stac.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>3656ab57cd05f3e484a45855111e7ff827647a4a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-01T08:05:32+00:00</created-at>
      <filename>0001-Don-t-modify-the-elements-in-the-scoped_methods-stac.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">66559</id>
      <size type="integer">2698</size>
      <uploader-id type="integer">22580</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/66559/0001-Don-t-modify-the-elements-in-the-scoped_methods-stac.patch</url>
    </attachment>
  </attachments>
</ticket>
