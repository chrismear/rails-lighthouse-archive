From 4504bd6f6bc6fcf993394955d1f4fb4e8cb74ef4 Mon Sep 17 00:00:00 2001
From: Matt Jones <al2o3cr@gmail.com>
Date: Sat, 6 Sep 2008 06:49:08 -0400
Subject: [PATCH] Reverts changes from a5db1488251304ec93256654859b430148f0c506 that made route lookup
 linear time again (was generating lookup code when routes array	was empty) and fix
 bug with route reloading - clearing routes and loading a different set would give
 errors. (Observed with 2.1.0 version)

Timing results:	(Macbook Core2 2GHz) (from time	tests in routing_test.rb)
 -----Before change:-----
Generation (RouteSet): (40000 urls)
0.0556527018547058 ms/url
17968.5795419372 url/s

Recognition (215 routes):
0.258163173993429 ms/url
3873.5191566302 url/s

 -----After change:-----
Generation (RouteSet): (40000 urls)
0.0557102739810944 ms/url
17950.0104476125 url/s

Recognition (215 routes):
0.0320691665013631 ms/url
31182.6002698728 url/s
---
 .../routing/recognition_optimisation.rb            |   10 ++++++
 .../lib/action_controller/routing/route_set.rb     |    4 +-
 actionpack/test/controller/routing_test.rb         |   30 ++++++++++++++++++++
 3 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/actionpack/lib/action_controller/routing/recognition_optimisation.rb b/actionpack/lib/action_controller/routing/recognition_optimisation.rb
index 6d54d03..5a7389c 100644
--- a/actionpack/lib/action_controller/routing/recognition_optimisation.rb
+++ b/actionpack/lib/action_controller/routing/recognition_optimisation.rb
@@ -147,6 +147,16 @@ module ActionController
             end
           }, __FILE__, __LINE__
         end
+        
+        def clear_recognize_optimized!
+          instance_eval %{
+            def recognize_optimized(path, environment)
+              write_recognize_optimized!
+              recognize_optimized(path, environment)
+            end            
+          }, __FILE__, __LINE__
+        end
+        
     end
   end
 end
diff --git a/actionpack/lib/action_controller/routing/route_set.rb b/actionpack/lib/action_controller/routing/route_set.rb
index 9d48f28..ff44849 100644
--- a/actionpack/lib/action_controller/routing/route_set.rb
+++ b/actionpack/lib/action_controller/routing/route_set.rb
@@ -195,7 +195,7 @@ module ActionController
         self.routes = []
         self.named_routes = NamedRouteCollection.new
 
-        write_recognize_optimized!
+        clear_recognize_optimized!
       end
 
       # Subclasses and plugins may override this method to specify a different
@@ -217,7 +217,7 @@ module ActionController
         @routes_by_controller = nil
         # This will force routing/recognition_optimization.rb
         # to refresh optimisations.
-        @compiled_recognize_optimized = nil
+        clear_recognize_optimized!
       end
 
       def install_helpers(destinations = [ActionController::Base, ActionView::Base], regenerate_code = false)
diff --git a/actionpack/test/controller/routing_test.rb b/actionpack/test/controller/routing_test.rb
index 8bb1c49..63eea73 100644
--- a/actionpack/test/controller/routing_test.rb
+++ b/actionpack/test/controller/routing_test.rb
@@ -1375,6 +1375,36 @@ uses_mocha 'LegacyRouteSet, Route, RouteSet and RouteLoading' do
         x.send(:foo_with_requirement_url, "I am Against the requirements")
       end
     end
+        
+    def test_routes_changed_correctly_after_clear
+      ActionController::Base.optimise_named_routes = true
+      rs = ::ActionController::Routing::RouteSet.new
+      rs.draw do |r|
+        r.connect 'ca', :controller => 'ca', :action => "aa"
+        r.connect 'cb', :controller => 'cb', :action => "ab"
+        r.connect 'cc', :controller => 'cc', :action => "ac"
+        r.connect ':controller/:action/:id'
+        r.connect ':controller/:action/:id.:format'
+      end
+      
+      hash = rs.recognize_path "/cc"
+      
+      assert_not_nil hash
+      assert_equal %w(cc ac), [hash[:controller], hash[:action]]
+      
+      rs.draw do |r|
+        r.connect 'cb', :controller => 'cb', :action => "ab"
+        r.connect 'cc', :controller => 'cc', :action => "ac"    
+        r.connect ':controller/:action/:id'
+        r.connect ':controller/:action/:id.:format'
+      end
+      
+      hash = rs.recognize_path "/cc"
+      
+      assert_not_nil hash
+      assert_equal %w(cc ac), [hash[:controller], hash[:action]]
+      
+    end
   end
 
   class RouteTest < Test::Unit::TestCase
-- 
1.5.3.1

