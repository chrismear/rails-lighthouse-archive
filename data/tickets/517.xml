<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-30T20:22:02+01:00</created-at>
  <creator-id type="integer">18096</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">517</number>
  <permalink>link_to_remote-should-behave-like-remote_form_for</permalink>
  <priority type="integer">14</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>actionpack actionview doc enhancement helper javascript link_to_remote patch prototype tested</tag>
  <title>link_to_remote should behave like remote_form_for</title>
  <updated-at type="datetime">2008-07-04T01:40:50+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">2</version>
  <user-name>Pratik</user-name>
  <creator-name>Clemens Kofler</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/517</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>One thing that has bugged me for quite some time now is that link_to_remote and remote_form_for behave differently regarding their target. If you don't specify the :action attribute with remote_form_for it automatically gets populated with the URL of the Ajax.Request. But if you don't specify :href for a link_to_remote it simply get a hash mark for the href part of the resulting link.

I find that in most cases I handle both, AJAX and non-AJAX requests, with the same controller and action. Therefore, I think that setting the href attribute to the same value as the :url (as is the case for remote_form_for) would make a valid default.

I've attached a patch that fixes said problem and I've also updated the old tests to reflect the change plus added a new one to test that the :href attribute can be manually overwritten. Finally, I've updated the documentation for the method.

Apart from the updated tests, the change doesn't produce any errors in the ActionPack.

What still needs to be considered is handling of POST/PUT/DELETE as they break the &quot;rules&quot;. But then again, this is the responsibility of the web developer anyways.</original-body>
  <latest-body>One thing that has bugged me for quite some time now is that link_to_remote and remote_form_for behave differently regarding their target. If you don't specify the :action attribute with remote_form_for it automatically gets populated with the URL of the Ajax.Request. But if you don't specify :href for a link_to_remote it simply get a hash mark for the href part of the resulting link.

I find that in most cases I handle both, AJAX and non-AJAX requests, with the same controller and action. Therefore, I think that setting the href attribute to the same value as the :url (as is the case for remote_form_for) would make a valid default.

I've attached a patch that fixes said problem and I've also updated the old tests to reflect the change plus added a new one to test that the :href attribute can be manually overwritten. Finally, I've updated the documentation for the method.

Apart from the updated tests, the change doesn't produce any errors in the ActionPack.

What still needs to be considered is handling of POST/PUT/DELETE as they break the &quot;rules&quot;. But then again, this is the responsibility of the web developer anyways.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
One thing that has bugged me for quite some time now is that link_to_remote and remote_form_for behave differently regarding their target. If you don't specify the :action attribute with remote_form_for it automatically gets populated with the URL of the Ajax.Request. But if you don't specify :href for a link_to_remote it simply get a hash mark for the href part of the resulting link.
&lt;/p&gt;&lt;p&gt;
I find that in most cases I handle both, AJAX and non-AJAX requests, with the same controller and action. Therefore, I think that setting the href attribute to the same value as the :url (as is the case for remote_form_for) would make a valid default.
&lt;/p&gt;&lt;p&gt;
I've attached a patch that fixes said problem and I've also updated the old tests to reflect the change plus added a new one to test that the :href attribute can be manually overwritten. Finally, I've updated the documentation for the method.
&lt;/p&gt;&lt;p&gt;
Apart from the updated tests, the change doesn't produce any errors in the ActionPack.
&lt;/p&gt;&lt;p&gt;
What still needs to be considered is handling of POST/PUT/DELETE as they break the &quot;rules&quot;. But then again, this is the responsibility of the web developer anyways.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>One thing that has bugged me for quite some time now is that link_to_remote and remote_form_for behave differently regarding their target. If you don't specify the :action attribute with remote_form_for it automatically gets populated with the URL of the Ajax.Request. But if you don't specify :href for a link_to_remote it simply get a hash mark for the href part of the resulting link.

I find that in most cases I handle both, AJAX and non-AJAX requests, with the same controller and action. Therefore, I think that setting the href attribute to the same value as the :url (as is the case for remote_form_for) would make a valid default.

I've attached a patch that fixes said problem and I've also updated the old tests to reflect the change plus added a new one to test that the :href attribute can be manually overwritten. Finally, I've updated the documentation for the method.

Apart from the updated tests, the change doesn't produce any errors in the ActionPack.

What still needs to be considered is handling of POST/PUT/DELETE as they break the &quot;rules&quot;. But then again, this is the responsibility of the web developer anyways.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
One thing that has bugged me for quite some time now is that link_to_remote and remote_form_for behave differently regarding their target. If you don't specify the :action attribute with remote_form_for it automatically gets populated with the URL of the Ajax.Request. But if you don't specify :href for a link_to_remote it simply get a hash mark for the href part of the resulting link.
&lt;/p&gt;&lt;p&gt;
I find that in most cases I handle both, AJAX and non-AJAX requests, with the same controller and action. Therefore, I think that setting the href attribute to the same value as the :url (as is the case for remote_form_for) would make a valid default.
&lt;/p&gt;&lt;p&gt;
I've attached a patch that fixes said problem and I've also updated the old tests to reflect the change plus added a new one to test that the :href attribute can be manually overwritten. Finally, I've updated the documentation for the method.
&lt;/p&gt;&lt;p&gt;
Apart from the updated tests, the change doesn't produce any errors in the ActionPack.
&lt;/p&gt;&lt;p&gt;
What still needs to be considered is handling of POST/PUT/DELETE as they break the &quot;rules&quot;. But then again, this is the responsibility of the web developer anyways.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-30T20:22:02+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">517</number>
      <permalink>link_to_remote-should-behave-like-remote_form_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack actionview doc enhancement helper javascript link_to_remote patch prototype tested</tag>
      <title>link_to_remote should behave like remote_form_for</title>
      <updated-at type="datetime">2008-06-30T20:22:02+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">1</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/517</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The current behavior is just fine IMO. But please do continue the discussion in Rails core mailing list if you insist. If there is enough interest in proposed behavior, this patch can be reconsidered.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The current behavior is just fine IMO. But please do continue the discussion in Rails core mailing list if you insist. If there is enough interest in proposed behavior, this patch can be reconsidered.
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-04T01:40:50+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">517</number>
      <permalink>link_to_remote-should-behave-like-remote_form_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>actionpack actionview doc enhancement helper javascript link_to_remote patch prototype tested</tag>
      <title>link_to_remote should behave like remote_form_for</title>
      <updated-at type="datetime">2008-07-04T01:40:50+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/517</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>771498c0b2c3eebd57204fe6b6edc1e25b539e3b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-30T20:22:02+01:00</created-at>
      <filename>LinkToRemoteWithAutopopulatedHref.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">30097</id>
      <size type="integer">9852</size>
      <uploader-id type="integer">18096</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/30097/LinkToRemoteWithAutopopulatedHref.diff</url>
    </attachment>
  </attachments>
</ticket>
