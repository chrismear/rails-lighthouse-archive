<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-13T13:08:31+00:00</created-at>
  <creator-id type="integer">14395</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5767</number>
  <permalink>activerecordarel-takes-over-2-minutes-to-generate-a-pseudo-complex-sql-query</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>ActiveRecord/Arel(?) takes over 2 minutes to generate a pseudo-complex SQL query.</title>
  <updated-at type="datetime">2010-12-13T13:08:31+00:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">2</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Ray</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5767</url>
  <priority-name>Low</priority-name>
  <original-body>Here is an example query:

joins = [{:dim_locations=&gt;[:dim_zip, {:dim_city=&gt;{:dim_state=&gt;:dim_country}}]}, :dim_ages, :dim_car_makes, :dim_educations, :dim_employments, :dim_foods, :dim_genders, :dim_get_aways, :dim_home_ownerships, :dim_incomes, :dim_marital_statuses, :dim_teams]

conditions = [&quot;(dim_zips.zip_code = ? OR dim_zips.zip_code IS NULL) AND (dim_cities.city = ? OR dim_cities.city IS NULL) AND (dim_states.state_code = ? OR dim_states.state_code IS NULL) AND (dim_states.state = ? OR dim_states.state IS NULL) AND (dim_countries.country_code = ? OR dim_countries.country_code IS NULL) AND (dim_countries.country = ? OR dim_countries.country IS NULL) AND (dim_ages.age = ? OR dim_ages.age IS NULL) AND (dim_car_makes.car_make IN (?) OR dim_car_makes.car_make IS NULL) AND (dim_educations.education = ? OR dim_educations.education IS NULL) AND (dim_employments.employment = ? OR dim_employments.employment IS NULL) AND (dim_foods.food IN (?) OR dim_foods.food IS NULL) AND (dim_genders.gender = ? OR dim_genders.gender IS NULL) AND (dim_get_aways.get_away IN (?) OR dim_get_aways.get_away IS NULL) AND (dim_home_ownerships.home_ownership = ? OR dim_home_ownerships.home_ownership IS NULL) AND (dim_incomes.income = ? OR dim_incomes.income IS NULL) AND (dim_marital_statuses.marital_status = ? OR dim_marital_statuses.marital_status IS NULL) AND (dim_teams.team IN (?) OR dim_teams.team IS NULL)&quot;, &quot;98104&quot;, &quot;Seattle&quot;, &quot;WA&quot;, &quot;Washington&quot;, &quot;US&quot;, &quot;United States of America&quot;, &quot;18-34&quot;, [&quot;Ashton Martin&quot;], &quot;Bachelors&quot;, &quot;Full Time&quot;, [&quot;Brazilian&quot;], &quot;Male&quot;, [&quot;France&quot;], &quot;Rent&quot;, &quot;Less than 30k&quot;, &quot;Married&quot;, [&quot;Arizona Cardinals&quot;, &quot;Boston Bruins&quot;]]

Benchmark.measure do
  Koupon.includes(joins).where(conditions).each
end
=&gt; 127.930000   0.390000 128.320000 (129.897278)

(I append the .each to force a query)

In Rails 2.x ActiveRecord this query was generated nearly instantaneously. I have 
verified it isn't even hitting the database until the very end of that 2 minute period.</original-body>
  <latest-body>Here is an example query:

joins = [{:dim_locations=&gt;[:dim_zip, {:dim_city=&gt;{:dim_state=&gt;:dim_country}}]}, :dim_ages, :dim_car_makes, :dim_educations, :dim_employments, :dim_foods, :dim_genders, :dim_get_aways, :dim_home_ownerships, :dim_incomes, :dim_marital_statuses, :dim_teams]

conditions = [&quot;(dim_zips.zip_code = ? OR dim_zips.zip_code IS NULL) AND (dim_cities.city = ? OR dim_cities.city IS NULL) AND (dim_states.state_code = ? OR dim_states.state_code IS NULL) AND (dim_states.state = ? OR dim_states.state IS NULL) AND (dim_countries.country_code = ? OR dim_countries.country_code IS NULL) AND (dim_countries.country = ? OR dim_countries.country IS NULL) AND (dim_ages.age = ? OR dim_ages.age IS NULL) AND (dim_car_makes.car_make IN (?) OR dim_car_makes.car_make IS NULL) AND (dim_educations.education = ? OR dim_educations.education IS NULL) AND (dim_employments.employment = ? OR dim_employments.employment IS NULL) AND (dim_foods.food IN (?) OR dim_foods.food IS NULL) AND (dim_genders.gender = ? OR dim_genders.gender IS NULL) AND (dim_get_aways.get_away IN (?) OR dim_get_aways.get_away IS NULL) AND (dim_home_ownerships.home_ownership = ? OR dim_home_ownerships.home_ownership IS NULL) AND (dim_incomes.income = ? OR dim_incomes.income IS NULL) AND (dim_marital_statuses.marital_status = ? OR dim_marital_statuses.marital_status IS NULL) AND (dim_teams.team IN (?) OR dim_teams.team IS NULL)&quot;, &quot;98104&quot;, &quot;Seattle&quot;, &quot;WA&quot;, &quot;Washington&quot;, &quot;US&quot;, &quot;United States of America&quot;, &quot;18-34&quot;, [&quot;Ashton Martin&quot;], &quot;Bachelors&quot;, &quot;Full Time&quot;, [&quot;Brazilian&quot;], &quot;Male&quot;, [&quot;France&quot;], &quot;Rent&quot;, &quot;Less than 30k&quot;, &quot;Married&quot;, [&quot;Arizona Cardinals&quot;, &quot;Boston Bruins&quot;]]

Benchmark.measure do
  Koupon.includes(joins).where(conditions).each
end
=&gt; 127.930000   0.390000 128.320000 (129.897278)

(I append the .each to force a query)

In Rails 2.x ActiveRecord this query was generated nearly instantaneously. I have 
verified it isn't even hitting the database until the very end of that 2 minute period.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Here is an example query:&lt;/p&gt;
&lt;p&gt;joins = [{:dim_locations=&amp;gt;[:dim_zip,
{:dim_city=&amp;gt;{:dim_state=&amp;gt;:dim_country}}]}, :dim_ages,
:dim_car_makes, :dim_educations, :dim_employments, :dim_foods,
:dim_genders, :dim_get_aways, :dim_home_ownerships, :dim_incomes,
:dim_marital_statuses, :dim_teams]&lt;/p&gt;
&lt;p&gt;conditions = [&quot;(dim_zips.zip_code = ? OR dim_zips.zip_code IS
NULL) AND (dim_cities.city = ? OR dim_cities.city IS NULL) AND
(dim_states.state_code = ? OR dim_states.state_code IS NULL) AND
(dim_states.state = ? OR dim_states.state IS NULL) AND
(dim_countries.country_code = ? OR dim_countries.country_code IS
NULL) AND (dim_countries.country = ? OR dim_countries.country IS
NULL) AND (dim_ages.age = ? OR dim_ages.age IS NULL) AND
(dim_car_makes.car_make IN (?) OR dim_car_makes.car_make IS NULL)
AND (dim_educations.education = ? OR dim_educations.education IS
NULL) AND (dim_employments.employment = ? OR
dim_employments.employment IS NULL) AND (dim_foods.food IN (?) OR
dim_foods.food IS NULL) AND (dim_genders.gender = ? OR
dim_genders.gender IS NULL) AND (dim_get_aways.get_away IN (?) OR
dim_get_aways.get_away IS NULL) AND
(dim_home_ownerships.home_ownership = ? OR
dim_home_ownerships.home_ownership IS NULL) AND (dim_incomes.income
= ? OR dim_incomes.income IS NULL) AND
(dim_marital_statuses.marital_status = ? OR
dim_marital_statuses.marital_status IS NULL) AND (dim_teams.team IN
(?) OR dim_teams.team IS NULL)&quot;, &quot;98104&quot;, &quot;Seattle&quot;, &quot;WA&quot;,
&quot;Washington&quot;, &quot;US&quot;, &quot;United States of America&quot;, &quot;18-34&quot;, [&quot;Ashton
Martin&quot;], &quot;Bachelors&quot;, &quot;Full Time&quot;, [&quot;Brazilian&quot;], &quot;Male&quot;,
[&quot;France&quot;], &quot;Rent&quot;, &quot;Less than 30k&quot;, &quot;Married&quot;, [&quot;Arizona
Cardinals&quot;, &quot;Boston Bruins&quot;]]&lt;/p&gt;
&lt;p&gt;Benchmark.measure do&lt;br&gt;
Koupon.includes(joins).where(conditions).each end&lt;br&gt;
=&amp;gt; 127.930000 0.390000 128.320000 (129.897278)&lt;/p&gt;
&lt;p&gt;(I append the .each to force a query)&lt;/p&gt;
&lt;p&gt;In Rails 2.x ActiveRecord this query was generated nearly
instantaneously. I have&lt;br&gt;
verified it isn't even hitting the database until the very end of
that 2 minute period.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is an example query:

joins = [{:dim_locations=&gt;[:dim_zip, {:dim_city=&gt;{:dim_state=&gt;:dim_country}}]}, :dim_ages, :dim_car_makes, :dim_educations, :dim_employments, :dim_foods, :dim_genders, :dim_get_aways, :dim_home_ownerships, :dim_incomes, :dim_marital_statuses, :dim_teams]

conditions = [&quot;(dim_zips.zip_code = ? OR dim_zips.zip_code IS NULL) AND (dim_cities.city = ? OR dim_cities.city IS NULL) AND (dim_states.state_code = ? OR dim_states.state_code IS NULL) AND (dim_states.state = ? OR dim_states.state IS NULL) AND (dim_countries.country_code = ? OR dim_countries.country_code IS NULL) AND (dim_countries.country = ? OR dim_countries.country IS NULL) AND (dim_ages.age = ? OR dim_ages.age IS NULL) AND (dim_car_makes.car_make IN (?) OR dim_car_makes.car_make IS NULL) AND (dim_educations.education = ? OR dim_educations.education IS NULL) AND (dim_employments.employment = ? OR dim_employments.employment IS NULL) AND (dim_foods.food IN (?) OR dim_foods.food IS NULL) AND (dim_genders.gender = ? OR dim_genders.gender IS NULL) AND (dim_get_aways.get_away IN (?) OR dim_get_aways.get_away IS NULL) AND (dim_home_ownerships.home_ownership = ? OR dim_home_ownerships.home_ownership IS NULL) AND (dim_incomes.income = ? OR dim_incomes.income IS NULL) AND (dim_marital_statuses.marital_status = ? OR dim_marital_statuses.marital_status IS NULL) AND (dim_teams.team IN (?) OR dim_teams.team IS NULL)&quot;, &quot;98104&quot;, &quot;Seattle&quot;, &quot;WA&quot;, &quot;Washington&quot;, &quot;US&quot;, &quot;United States of America&quot;, &quot;18-34&quot;, [&quot;Ashton Martin&quot;], &quot;Bachelors&quot;, &quot;Full Time&quot;, [&quot;Brazilian&quot;], &quot;Male&quot;, [&quot;France&quot;], &quot;Rent&quot;, &quot;Less than 30k&quot;, &quot;Married&quot;, [&quot;Arizona Cardinals&quot;, &quot;Boston Bruins&quot;]]

Benchmark.measure do
  Koupon.includes(joins).where(conditions).each
end
=&gt; 127.930000   0.390000 128.320000 (129.897278)

(I append the .each to force a query)

In Rails 2.x ActiveRecord this query was generated nearly instantaneously. I have 
verified it isn't even hitting the database until the very end of that 2 minute period.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is an example query:&lt;/p&gt;
&lt;p&gt;joins = [{:dim_locations=&amp;gt;[:dim_zip,
{:dim_city=&amp;gt;{:dim_state=&amp;gt;:dim_country}}]}, :dim_ages,
:dim_car_makes, :dim_educations, :dim_employments, :dim_foods,
:dim_genders, :dim_get_aways, :dim_home_ownerships, :dim_incomes,
:dim_marital_statuses, :dim_teams]&lt;/p&gt;
&lt;p&gt;conditions = [&quot;(dim_zips.zip_code = ? OR dim_zips.zip_code IS
NULL) AND (dim_cities.city = ? OR dim_cities.city IS NULL) AND
(dim_states.state_code = ? OR dim_states.state_code IS NULL) AND
(dim_states.state = ? OR dim_states.state IS NULL) AND
(dim_countries.country_code = ? OR dim_countries.country_code IS
NULL) AND (dim_countries.country = ? OR dim_countries.country IS
NULL) AND (dim_ages.age = ? OR dim_ages.age IS NULL) AND
(dim_car_makes.car_make IN (?) OR dim_car_makes.car_make IS NULL)
AND (dim_educations.education = ? OR dim_educations.education IS
NULL) AND (dim_employments.employment = ? OR
dim_employments.employment IS NULL) AND (dim_foods.food IN (?) OR
dim_foods.food IS NULL) AND (dim_genders.gender = ? OR
dim_genders.gender IS NULL) AND (dim_get_aways.get_away IN (?) OR
dim_get_aways.get_away IS NULL) AND
(dim_home_ownerships.home_ownership = ? OR
dim_home_ownerships.home_ownership IS NULL) AND (dim_incomes.income
= ? OR dim_incomes.income IS NULL) AND
(dim_marital_statuses.marital_status = ? OR
dim_marital_statuses.marital_status IS NULL) AND (dim_teams.team IN
(?) OR dim_teams.team IS NULL)&quot;, &quot;98104&quot;, &quot;Seattle&quot;, &quot;WA&quot;,
&quot;Washington&quot;, &quot;US&quot;, &quot;United States of America&quot;, &quot;18-34&quot;, [&quot;Ashton
Martin&quot;], &quot;Bachelors&quot;, &quot;Full Time&quot;, [&quot;Brazilian&quot;], &quot;Male&quot;,
[&quot;France&quot;], &quot;Rent&quot;, &quot;Less than 30k&quot;, &quot;Married&quot;, [&quot;Arizona
Cardinals&quot;, &quot;Boston Bruins&quot;]]&lt;/p&gt;
&lt;p&gt;Benchmark.measure do&lt;br&gt;
Koupon.includes(joins).where(conditions).each end&lt;br&gt;
=&amp;gt; 127.930000 0.390000 128.320000 (129.897278)&lt;/p&gt;
&lt;p&gt;(I append the .each to force a query)&lt;/p&gt;
&lt;p&gt;In Rails 2.x ActiveRecord this query was generated nearly
instantaneously. I have&lt;br&gt;
verified it isn't even hitting the database until the very end of
that 2 minute period.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T19:06:52+01:00</created-at>
      <creator-id type="integer">14395</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5767</number>
      <permalink>activerecordarel-takes-over-2-minutes-to-generate-a-pseudo-complex-sql-query</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord/Arel(?) takes over 2 minutes to generate a pseudo-complex SQL query.</title>
      <updated-at type="datetime">2010-10-07T19:06:56+01:00</updated-at>
      <user-id type="integer">14395</user-id>
      <version type="integer">1</version>
      <user-name>Ray</user-name>
      <creator-name>Ray</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5767</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is fixed by ARel 2.0.  Upgrading to Rails 3.0.2 should fix the problem (when it's released).</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is fixed by ARel 2.0. Upgrading to Rails 3.0.2 should fix
the problem (when it's released).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T02:15:05+01:00</created-at>
      <creator-id type="integer">14395</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5767</number>
      <permalink>activerecordarel-takes-over-2-minutes-to-generate-a-pseudo-complex-sql-query</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>ActiveRecord/Arel(?) takes over 2 minutes to generate a pseudo-complex SQL query.</title>
      <updated-at type="datetime">2010-11-15T18:21:03+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">2</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Ray</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5767</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>One of the things I have in common with the far more rich and famous Oprah Winfrey is a love of the&#160;&lt;a href=&quot;http://www.nikedunks2011.com/&quot;&gt;nike shoes&lt;/a&gt; Free Run+&#160;shoes. I began wearing them when they first debuted and my friend Carolyn praised them highly. &lt;a href=&quot;http://www.nikedunks2011.com/&quot;&gt;nike sneaker&lt;/a&gt; are super flexible and meant to simulate barefoot walking. This supposedly helps strengthen your feet and ankles, &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-force-1-c-18.html&quot;&gt;nike air force 1&lt;/a&gt; and as such I classify them as a&#160;toning &lt;a href=&quot;http://www.nikedunks2011.com/nike-dunks-c-155.html&quot;&gt;dunks shoes&lt;/a&gt;.I've worn several versions of the &lt;a href=&quot;http://www.nikedunks2011.com/nike-dunks-nike-dunk-high-c-155_212.html&quot;&gt;nike dunk high&lt;/a&gt; Free Run shoes as my daily lifestyle shoe, &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-jordan-c-17.html&quot;&gt;air jordan 2011&lt;/a&gt; good for shorter workouts of up to three miles. While I have friends who wear them on six mile walks (10K), I think they just don't have enough cushioning for going any further than that without beating up your feet.One other caution, &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-max-c-215.html&quot;&gt;air max shoes&lt;/a&gt; is notorious for a narrow toe box and these &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-max-nike-air-max-90-c-215_220.html&quot;&gt;Nike air max 90&lt;/a&gt; come in only one width.&#160; My wide foot fit, but barely, &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-griffey-max-c-213.html&quot;&gt;Nike Air Griffey Max&lt;/a&gt; so I wore them without socks. They feel great without socks, but the &lt;a href=&quot;http://www.nikedunks2011.com/nike-basketball-shoes-c-235.html&quot;&gt;basketball shoes&lt;/a&gt; quickly developed a terrible odor problem. Foot powder helped, and I can also recommend&#160;Stink Free &lt;a href=&quot;http://www.nikedunks2011.com/nike-basketball-shoes-nike-lebron-james-c-235_242.html&quot;&gt;lebron james shoes&lt;/a&gt; spray.</body>
      <body-html>&lt;div&gt;&lt;p&gt;One of the things I have in common with the far more rich and
famous Oprah Winfrey is a love of the&amp;nbsp;&lt;a href=
&quot;http://www.nikedunks2011.com/&quot;&gt;nike shoes&lt;/a&gt; Free
Run+&amp;nbsp;shoes. I began wearing them when they first debuted and
my friend Carolyn praised them highly. &lt;a href=
&quot;http://www.nikedunks2011.com/&quot;&gt;nike sneaker&lt;/a&gt; are super flexible
and meant to simulate barefoot walking. This supposedly helps
strengthen your feet and ankles, &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-force-1-c-18.html&quot;&gt;nike air
force 1&lt;/a&gt; and as such I classify them as a&amp;nbsp;toning &lt;a href=
&quot;http://www.nikedunks2011.com/nike-dunks-c-155.html&quot;&gt;dunks
shoes&lt;/a&gt;.I've worn several versions of the &lt;a href=
&quot;http://www.nikedunks2011.com/nike-dunks-nike-dunk-high-c-155_212.html&quot;&gt;
nike dunk high&lt;/a&gt; Free Run shoes as my daily lifestyle shoe,
&lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-jordan-c-17.html&quot;&gt;air jordan
2011&lt;/a&gt; good for shorter workouts of up to three miles. While I
have friends who wear them on six mile walks (10K), I think they
just don't have enough cushioning for going any further than that
without beating up your feet.One other caution, &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-max-c-215.html&quot;&gt;air max
shoes&lt;/a&gt; is notorious for a narrow toe box and these &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-max-nike-air-max-90-c-215_220.html&quot;&gt;
Nike air max 90&lt;/a&gt; come in only one width.&amp;nbsp; My wide foot fit,
but barely, &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-griffey-max-c-213.html&quot;&gt;Nike
Air Griffey Max&lt;/a&gt; so I wore them without socks. They feel great
without socks, but the &lt;a href=
&quot;http://www.nikedunks2011.com/nike-basketball-shoes-c-235.html&quot;&gt;basketball
shoes&lt;/a&gt; quickly developed a terrible odor problem. Foot powder
helped, and I can also recommend&amp;nbsp;Stink Free &lt;a href=
&quot;http://www.nikedunks2011.com/nike-basketball-shoes-nike-lebron-james-c-235_242.html&quot;&gt;
lebron james shoes&lt;/a&gt; spray.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-13T10:08:28+00:00</created-at>
      <creator-id type="integer">14395</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5767</number>
      <permalink>activerecordarel-takes-over-2-minutes-to-generate-a-pseudo-complex-sql-query</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>ActiveRecord/Arel(?) takes over 2 minutes to generate a pseudo-complex SQL query.</title>
      <updated-at type="datetime">2010-12-13T13:08:31+00:00</updated-at>
      <user-id type="integer">128794</user-id>
      <version type="integer">3</version>
      <user-name>nike dunks</user-name>
      <creator-name>Ray</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5767</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
