<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-14T18:58:48+01:00</created-at>
  <creator-id type="integer">29017</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">833</number>
  <permalink>eager-loading-does-not-work-for-polymorphic-relationships</permalink>
  <priority type="integer">290</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord eager_loading ploymorphic</tag>
  <title>Eager Loading does not work for Polymorphic Relationships</title>
  <updated-at type="datetime">2008-11-22T18:49:10+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">4</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Orion Delwaterman</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/833</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The ActiveRecord class method &quot;find&quot;'s include option does not work with polymorphic relationships:

# migratation
class CreateSampleMigration &lt; ActiveRecord::Migration
  def self.up
    create_table :content_items do |t|
      t.string :name, :null =&gt; false
      t.timestamps
    end
    
    create_table :system_blobs do |t|
      t.integer :blobable_id, :null =&gt; false
      t.string :blobable_type, :null =&gt; false, :limit =&gt; 100
      t.binary :data, :limit =&gt; 2.megabytes
      t.timestamps
    end
  end
end

# ContentItem model
Class ContentItem &lt; ActiveRecord::Base
  has_one :system_blob, :as =&gt; &quot;blobable&quot;,
                        :dependent =&gt; :delete
end

# SystemBlob model
class SystemBlob &lt; ActiveRecord::Base
  belongs_to :blobable, :polymorphic =&gt; true
end

# Test code
c = ContentItem.new(:name =&gt; &quot;test&quot;)
c.save!
c.create_system_blob(:data =&gt; &quot;TEST_DATA&quot;)

found_c = ContentItem.find(:first, :conditions =&gt; {:name =&gt; &quot;test&quot;}, :include =&gt; :system_blob
found_c.system_blob
# =&gt; nil
found_c.system_blob(true)
# =&gt; &lt;#SystemBlob ...</original-body>
  <latest-body>The ActiveRecord class method &quot;find&quot;'s include option does not work with polymorphic relationships:

# migratation
class CreateSampleMigration &lt; ActiveRecord::Migration
  def self.up
    create_table :content_items do |t|
      t.string :name, :null =&gt; false
      t.timestamps
    end
    
    create_table :system_blobs do |t|
      t.integer :blobable_id, :null =&gt; false
      t.string :blobable_type, :null =&gt; false, :limit =&gt; 100
      t.binary :data, :limit =&gt; 2.megabytes
      t.timestamps
    end
  end
end

# ContentItem model
Class ContentItem &lt; ActiveRecord::Base
  has_one :system_blob, :as =&gt; &quot;blobable&quot;,
                        :dependent =&gt; :delete
end

# SystemBlob model
class SystemBlob &lt; ActiveRecord::Base
  belongs_to :blobable, :polymorphic =&gt; true
end

# Test code
c = ContentItem.new(:name =&gt; &quot;test&quot;)
c.save!
c.create_system_blob(:data =&gt; &quot;TEST_DATA&quot;)

found_c = ContentItem.find(:first, :conditions =&gt; {:name =&gt; &quot;test&quot;}, :include =&gt; :system_blob
found_c.system_blob
# =&gt; nil
found_c.system_blob(true)
# =&gt; &lt;#SystemBlob ...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The ActiveRecord class method &quot;find&quot;'s include option does not work with polymorphic relationships:&lt;/p&gt;

&lt;h1&gt; migratation&lt;/h1&gt;

&lt;p&gt;class CreateSampleMigration &amp;lt; ActiveRecord::Migration
  def self.up&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;create_table :content_items do |t|
  t.string :name, :null =&amp;gt; false
  t.timestamps
end

create_table :system_blobs do |t|
  t.integer :blobable_id, :null =&amp;gt; false
  t.string :blobable_type, :null =&amp;gt; false, :limit =&amp;gt; 100
  t.binary :data, :limit =&amp;gt; 2.megabytes
  t.timestamps
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  end
end&lt;/p&gt;

&lt;h1&gt; ContentItem model&lt;/h1&gt;

&lt;p&gt;Class ContentItem &amp;lt; ActiveRecord::Base
  has_one :system_blob, :as =&gt; &quot;blobable&quot;,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                    :dependent =&amp;gt; :delete
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;h1&gt; SystemBlob model&lt;/h1&gt;

&lt;p&gt;class SystemBlob &amp;lt; ActiveRecord::Base
  belongs_to :blobable, :polymorphic =&gt; true
end&lt;/p&gt;

&lt;h1&gt; Test code&lt;/h1&gt;

&lt;p&gt;c = ContentItem.new(:name =&gt; &quot;test&quot;)
c.save!
c.create_system_blob(:data =&gt; &quot;TEST_DATA&quot;)&lt;/p&gt;

&lt;p&gt;found_c = ContentItem.find(:first, :conditions =&gt; {:name =&gt; &quot;test&quot;}, :include =&gt; :system_blob
found_c.system_blob&lt;/p&gt;

&lt;h1&gt; =&gt; nil&lt;/h1&gt;

&lt;p&gt;found_c.system_blob(true)&lt;/p&gt;

&lt;h1&gt; =&gt; &amp;lt;#SystemBlob ...&lt;/h1&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The ActiveRecord class method &quot;find&quot;'s include option does not work with polymorphic relationships:

# migratation
class CreateSampleMigration &lt; ActiveRecord::Migration
  def self.up
    create_table :content_items do |t|
      t.string :name, :null =&gt; false
      t.timestamps
    end
    
    create_table :system_blobs do |t|
      t.integer :blobable_id, :null =&gt; false
      t.string :blobable_type, :null =&gt; false, :limit =&gt; 100
      t.binary :data, :limit =&gt; 2.megabytes
      t.timestamps
    end
  end
end

# ContentItem model
Class ContentItem &lt; ActiveRecord::Base
  has_one :system_blob, :as =&gt; &quot;blobable&quot;,
                        :dependent =&gt; :delete
end

# SystemBlob model
class SystemBlob &lt; ActiveRecord::Base
  belongs_to :blobable, :polymorphic =&gt; true
end

# Test code
c = ContentItem.new(:name =&gt; &quot;test&quot;)
c.save!
c.create_system_blob(:data =&gt; &quot;TEST_DATA&quot;)

found_c = ContentItem.find(:first, :conditions =&gt; {:name =&gt; &quot;test&quot;}, :include =&gt; :system_blob
found_c.system_blob
# =&gt; nil
found_c.system_blob(true)
# =&gt; &lt;#SystemBlob ...</body>
      <body-html>&lt;div&gt;&lt;p&gt;The ActiveRecord class method &quot;find&quot;'s include option does not work with polymorphic relationships:&lt;/p&gt;

&lt;h1&gt; migratation&lt;/h1&gt;

&lt;p&gt;class CreateSampleMigration &amp;lt; ActiveRecord::Migration
  def self.up&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;create_table :content_items do |t|
  t.string :name, :null =&amp;gt; false
  t.timestamps
end

create_table :system_blobs do |t|
  t.integer :blobable_id, :null =&amp;gt; false
  t.string :blobable_type, :null =&amp;gt; false, :limit =&amp;gt; 100
  t.binary :data, :limit =&amp;gt; 2.megabytes
  t.timestamps
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  end
end&lt;/p&gt;

&lt;h1&gt; ContentItem model&lt;/h1&gt;

&lt;p&gt;Class ContentItem &amp;lt; ActiveRecord::Base
  has_one :system_blob, :as =&gt; &quot;blobable&quot;,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                    :dependent =&amp;gt; :delete
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;h1&gt; SystemBlob model&lt;/h1&gt;

&lt;p&gt;class SystemBlob &amp;lt; ActiveRecord::Base
  belongs_to :blobable, :polymorphic =&gt; true
end&lt;/p&gt;

&lt;h1&gt; Test code&lt;/h1&gt;

&lt;p&gt;c = ContentItem.new(:name =&gt; &quot;test&quot;)
c.save!
c.create_system_blob(:data =&gt; &quot;TEST_DATA&quot;)&lt;/p&gt;

&lt;p&gt;found_c = ContentItem.find(:first, :conditions =&gt; {:name =&gt; &quot;test&quot;}, :include =&gt; :system_blob
found_c.system_blob&lt;/p&gt;

&lt;h1&gt; =&gt; nil&lt;/h1&gt;

&lt;p&gt;found_c.system_blob(true)&lt;/p&gt;

&lt;h1&gt; =&gt; &amp;lt;#SystemBlob ...&lt;/h1&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T18:58:48+01:00</created-at>
      <creator-id type="integer">29017</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">833</number>
      <permalink>eager-loading-does-not-work-for-polymorphic-relationships</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;layer idsearchwp-highlighting9 highlightterm-3 classsearchwp-termeagerlayer_layer idsearchwp-highlighting10 highlightterm-4 classsearchwp-termloadinglayer&quot;</tag>
      <title>Eager Loading does not work for Polymorphic Relationships</title>
      <updated-at type="datetime">2008-08-14T18:58:48+01:00</updated-at>
      <user-id type="integer">29017</user-id>
      <version type="integer">1</version>
      <user-name>Orion Delwaterman</user-name>
      <creator-name>Orion Delwaterman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Do the queries made look sane ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Do the queries made look sane ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-21T21:06:28+01:00</created-at>
      <creator-id type="integer">29017</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord &quot;layer idsearchwp-highlighting9 highlightterm-3 classsearchwp-termeagerlayer_layer idsearchwp-highlighting10 highlightterm-4 classsearchwp-termloadinglayer&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">833</number>
      <permalink>eager-loading-does-not-work-for-polymorphic-relationships</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading ploymorphic</tag>
      <title>Eager Loading does not work for Polymorphic Relationships</title>
      <updated-at type="datetime">2008-08-21T21:06:28+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Orion Delwaterman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oops, not sure what happened with the tags there! I bashed in your code against edge  and 2.1 and couldn't reproduce it</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, not sure what happened with the tags there! I bashed in your code against edge  and 2.1 and couldn't reproduce it&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-21T21:12:48+01:00</created-at>
      <creator-id type="integer">29017</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">833</number>
      <permalink>eager-loading-does-not-work-for-polymorphic-relationships</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading ploymorphic</tag>
      <title>Eager Loading does not work for Polymorphic Relationships</title>
      <updated-at type="datetime">2008-08-21T21:12:48+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Orion Delwaterman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T18:49:08+00:00</created-at>
      <creator-id type="integer">29017</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">833</number>
      <permalink>eager-loading-does-not-work-for-polymorphic-relationships</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord eager_loading ploymorphic</tag>
      <title>Eager Loading does not work for Polymorphic Relationships</title>
      <updated-at type="datetime">2008-11-22T18:49:10+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">4</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Orion Delwaterman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
