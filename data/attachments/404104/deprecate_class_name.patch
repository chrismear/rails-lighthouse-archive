diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index c4e07e8..25c30a7 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -995,7 +995,10 @@ module ActiveRecord #:nodoc:
       alias :sequence_name= :set_sequence_name
 
       # Turns the +table_name+ back into a class name following the reverse rules of +table_name+.
+      # deprecated method to be removed by rails 3.1
+      # see https://rails.lighthouseapp.com/projects/8994/tickets/379-activerecord-base-class_name-weirdness#
       def class_name(table_name = table_name) # :nodoc:
+        ActiveSupport::Deprecation.warn "ActiveRecord::Base#class_name is deprecated and will be removed in rails 3.1" 
         # remove any prefix and/or suffix from the table name
         class_name = table_name[table_name_prefix.length..-(table_name_suffix.length + 1)].camelize
         class_name = class_name.singularize if pluralize_table_names
diff --git a/activerecord/test/cases/base_test.rb b/activerecord/test/cases/base_test.rb
index 1441b42..7a1e0b8 100755
--- a/activerecord/test/cases/base_test.rb
+++ b/activerecord/test/cases/base_test.rb
@@ -803,24 +803,6 @@ class BasicsTest < ActiveRecord::TestCase
     assert_raise(NoMethodError) { t.title2 }
   end
 
-  def test_class_name
-    assert_equal "Firm", ActiveRecord::Base.class_name("firms")
-    assert_equal "Category", ActiveRecord::Base.class_name("categories")
-    assert_equal "AccountHolder", ActiveRecord::Base.class_name("account_holder")
-
-    ActiveRecord::Base.pluralize_table_names = false
-    assert_equal "Firms", ActiveRecord::Base.class_name( "firms" )
-    ActiveRecord::Base.pluralize_table_names = true
-
-    ActiveRecord::Base.table_name_prefix = "test_"
-    assert_equal "Firm", ActiveRecord::Base.class_name( "test_firms" )
-    ActiveRecord::Base.table_name_suffix = "_tests"
-    assert_equal "Firm", ActiveRecord::Base.class_name( "test_firms_tests" )
-    ActiveRecord::Base.table_name_prefix = ""
-    assert_equal "Firm", ActiveRecord::Base.class_name( "firms_tests" )
-    ActiveRecord::Base.table_name_suffix = ""
-    assert_equal "Firm", ActiveRecord::Base.class_name( "firms" )
-  end
 
   def test_null_fields
     assert_nil Topic.find(1).parent_id
