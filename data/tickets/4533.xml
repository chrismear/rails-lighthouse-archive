<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:12+00:00</created-at>
  <creator-id type="integer">97899</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4533</number>
  <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>actionpack cache read_fragment</tag>
  <title>read_fragment should cache itself for a request to avoid race conditions</title>
  <updated-at type="datetime">2011-03-26T01:33:38+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">7</version>
  <user-name>bingbing</user-name>
  <creator-name>Michael Vastola</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,
I'm reposting this bug from the old Rails trac site since I can't sign up to comment on it (http://dev.rubyonrails.org/ticket/8408) and the post seems to have been abandoned.  The original bug post is as follows:

----------

A good paradigm to support would be to allow in your controller:

unless read_fragment(blah)

    #do something to set instance variables from the database here

end

Then you only do the tough database access from your controller if there is no cache for the relevant items (this would be less necessary if there were support for pagination in the models or at least in views, though there are still cases where it would apply). The problem is that the cache can be expired between the controller method and the view method.

So, let's say that @result is the result of a large database query.

MyController.rb:

unless read_fragment(blah)

    @result = do_large_calc

end

myview.rhtml: cache(blah) do

    #do something with @result

end

The problem is that if someone expires your cache fragment between the controller and the view (which I have happen a LOT), then you wind up using @result even though it is not set up.

What needs to happen is that read_fragment is cached in memory during a request, so that all future cache requests to that fragment within the same request returns the same result. 

----------
I would like to second this bug report and confirm the bug still exists in ActionPack 2.3.5 (the bug was originally reported in version 1.2.3).  I think it would be great if the bug could be fixed in this way or if there were some other workaround.

Thanks a ton,
Mike</original-body>
  <latest-body>Hi,
I'm reposting this bug from the old Rails trac site since I can't sign up to comment on it (http://dev.rubyonrails.org/ticket/8408) and the post seems to have been abandoned.  The original bug post is as follows:

----------

A good paradigm to support would be to allow in your controller:

unless read_fragment(blah)

    #do something to set instance variables from the database here

end

Then you only do the tough database access from your controller if there is no cache for the relevant items (this would be less necessary if there were support for pagination in the models or at least in views, though there are still cases where it would apply). The problem is that the cache can be expired between the controller method and the view method.

So, let's say that @result is the result of a large database query.

MyController.rb:

unless read_fragment(blah)

    @result = do_large_calc

end

myview.rhtml: cache(blah) do

    #do something with @result

end

The problem is that if someone expires your cache fragment between the controller and the view (which I have happen a LOT), then you wind up using @result even though it is not set up.

What needs to happen is that read_fragment is cached in memory during a request, so that all future cache requests to that fragment within the same request returns the same result. 

----------
I would like to second this bug report and confirm the bug still exists in ActionPack 2.3.5 (the bug was originally reported in version 1.2.3).  I think it would be great if the bug could be fixed in this way or if there were some other workaround.

Thanks a ton,
Mike</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
I'm reposting this bug from the old Rails trac site since I can't
sign up to comment on it (&lt;a href=
&quot;http://dev.rubyonrails.org/ticket/8408&quot;&gt;http://dev.rubyonrails.org/ticket/8408&lt;/a&gt;)
and the post seems to have been abandoned. The original bug post is
as follows:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A good paradigm to support would be to allow in your
controller:&lt;/p&gt;
&lt;p&gt;unless read_fragment(blah)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#do something to set instance variables from the database here&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Then you only do the tough database access from your controller
if there is no cache for the relevant items (this would be less
necessary if there were support for pagination in the models or at
least in views, though there are still cases where it would apply).
The problem is that the cache can be expired between the controller
method and the view method.&lt;/p&gt;
&lt;p&gt;So, let's say that @result is the result of a large database
query.&lt;/p&gt;
&lt;p&gt;MyController.rb:&lt;/p&gt;
&lt;p&gt;unless read_fragment(blah)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@result = do_large_calc&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;myview.rhtml: cache(blah) do&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#do something with @result&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;The problem is that if someone expires your cache fragment
between the controller and the view (which I have happen a LOT),
then you wind up using @result even though it is not set up.&lt;/p&gt;
&lt;p&gt;What needs to happen is that read_fragment is cached in memory
during a request, so that all future cache requests to that
fragment within the same request returns the same result.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I would like to second this bug report and confirm the bug still
exists in ActionPack 2.3.5 (the bug was originally reported in
version 1.2.3). I think it would be great if the bug could be fixed
in this way or if there were some other workaround.&lt;/p&gt;
&lt;p&gt;Thanks a ton,&lt;br&gt;
Mike&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,
I'm reposting this bug from the old Rails trac site since I can't sign up to comment on it (http://dev.rubyonrails.org/ticket/8408) and the post seems to have been abandoned.  The original bug post is as follows:

----------

A good paradigm to support would be to allow in your controller:

unless read_fragment(blah)

    #do something to set instance variables from the database here

end

Then you only do the tough database access from your controller if there is no cache for the relevant items (this would be less necessary if there were support for pagination in the models or at least in views, though there are still cases where it would apply). The problem is that the cache can be expired between the controller method and the view method.

So, let's say that @result is the result of a large database query.

MyController.rb:

unless read_fragment(blah)

    @result = do_large_calc

end

myview.rhtml: cache(blah) do

    #do something with @result

end

The problem is that if someone expires your cache fragment between the controller and the view (which I have happen a LOT), then you wind up using @result even though it is not set up.

What needs to happen is that read_fragment is cached in memory during a request, so that all future cache requests to that fragment within the same request returns the same result. 

----------
I would like to second this bug report and confirm the bug still exists in ActionPack 2.3.5 (the bug was originally reported in version 1.2.3).  I think it would be great if the bug could be fixed in this way or if there were some other workaround.

Thanks a ton,
Mike</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
I'm reposting this bug from the old Rails trac site since I can't
sign up to comment on it (&lt;a href=
&quot;http://dev.rubyonrails.org/ticket/8408&quot;&gt;http://dev.rubyonrails.org/ticket/8408&lt;/a&gt;)
and the post seems to have been abandoned. The original bug post is
as follows:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A good paradigm to support would be to allow in your
controller:&lt;/p&gt;
&lt;p&gt;unless read_fragment(blah)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#do something to set instance variables from the database here&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Then you only do the tough database access from your controller
if there is no cache for the relevant items (this would be less
necessary if there were support for pagination in the models or at
least in views, though there are still cases where it would apply).
The problem is that the cache can be expired between the controller
method and the view method.&lt;/p&gt;
&lt;p&gt;So, let's say that @result is the result of a large database
query.&lt;/p&gt;
&lt;p&gt;MyController.rb:&lt;/p&gt;
&lt;p&gt;unless read_fragment(blah)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@result = do_large_calc&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;myview.rhtml: cache(blah) do&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#do something with @result&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;The problem is that if someone expires your cache fragment
between the controller and the view (which I have happen a LOT),
then you wind up using @result even though it is not set up.&lt;/p&gt;
&lt;p&gt;What needs to happen is that read_fragment is cached in memory
during a request, so that all future cache requests to that
fragment within the same request returns the same result.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I would like to second this bug report and confirm the bug still
exists in ActionPack 2.3.5 (the bug was originally reported in
version 1.2.3). I think it would be great if the bug could be fixed
in this way or if there were some other workaround.&lt;/p&gt;
&lt;p&gt;Thanks a ton,&lt;br&gt;
Mike&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-05T00:14:21+01:00</created-at>
      <creator-id type="integer">97899</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4533</number>
      <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;cache read_fragment actionpack&quot;</tag>
      <title>read_fragment should cache itself for a request to avoid race conditions</title>
      <updated-at type="datetime">2010-05-05T00:14:22+01:00</updated-at>
      <user-id type="integer">97899</user-id>
      <version type="integer">1</version>
      <user-name>Michael Vastola</user-name>
      <creator-name>Michael Vastola</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-05T00:15:16+01:00</created-at>
      <creator-id type="integer">97899</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;cache read_fragment actionpack\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4533</number>
      <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack cache read_fragment</tag>
      <title>read_fragment should cache itself for a request to avoid race conditions</title>
      <updated-at type="datetime">2010-05-05T00:15:20+01:00</updated-at>
      <user-id type="integer">97899</user-id>
      <version type="integer">2</version>
      <user-name>Michael Vastola</user-name>
      <creator-name>Michael Vastola</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:02:40+00:00</created-at>
      <creator-id type="integer">97899</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4533</number>
      <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionpack cache read_fragment</tag>
      <title>read_fragment should cache itself for a request to avoid race conditions</title>
      <updated-at type="datetime">2011-02-02T19:04:39+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Michael Vastola</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:02:41+00:00</created-at>
      <creator-id type="integer">97899</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4533</number>
      <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack cache read_fragment</tag>
      <title>read_fragment should cache itself for a request to avoid race conditions</title>
      <updated-at type="datetime">2011-02-02T19:04:10+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Michael Vastola</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:08:27+00:00</created-at>
      <creator-id type="integer">97899</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4533</number>
      <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack cache read_fragment</tag>
      <title>read_fragment should cache itself for a request to avoid race conditions</title>
      <updated-at type="datetime">2011-02-17T06:48:11+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">5</version>
      <user-name>gfh</user-name>
      <creator-name>Michael Vastola</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T00:27:54+00:00</created-at>
      <creator-id type="integer">97899</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4533</number>
      <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack cache read_fragment</tag>
      <title>read_fragment should cache itself for a request to avoid race conditions</title>
      <updated-at type="datetime">2011-02-19T09:28:12+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">6</version>
      <user-name>mklo</user-name>
      <creator-name>Michael Vastola</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;gucci watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;gucci
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T01:24:27+00:00</created-at>
      <creator-id type="integer">97899</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4533</number>
      <permalink>read_fragment-should-cache-itself-for-a-request-to-avoid-race-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack cache read_fragment</tag>
      <title>read_fragment should cache itself for a request to avoid race conditions</title>
      <updated-at type="datetime">2011-03-26T01:33:38+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">7</version>
      <user-name>bingbing</user-name>
      <creator-name>Michael Vastola</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4533</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
