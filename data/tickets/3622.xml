<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-27T07:24:45+00:00</created-at>
  <creator-id type="integer">42916</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3622</number>
  <permalink>exception_classto_json-inheritable_attributes</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>inheritable_attributes</tag>
  <title>exception_class.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;</title>
  <updated-at type="datetime">2010-10-18T00:16:11+01:00</updated-at>
  <user-id type="integer">42916</user-id>
  <version type="integer">4</version>
  <user-name>Greg Hazel</user-name>
  <creator-name>Greg Hazel</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3622</url>
  <priority-name>Low</priority-name>
  <original-body>The way to_json treats classes is strange, and new in 2.3 (this worked as expected in 2.2):

@@@ ruby
StandardError.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;
StandardError.to_s == &quot;StandardError&quot;
@@@

However:

@@@ ruby
irb(main):001:0&gt; require 'json'
=&gt; true
irb(main):002:0&gt; StandardError.to_json
=&gt; &quot;\&quot;StandardError\&quot;&quot;
irb(main):003:0&gt; StandardError.to_s
=&gt; &quot;StandardError&quot;
@@@</original-body>
  <latest-body>The way to_json treats classes is strange, and new in 2.3 (this worked as expected in 2.2):

@@@ ruby
StandardError.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;
StandardError.to_s == &quot;StandardError&quot;
@@@

However:

@@@ ruby
irb(main):001:0&gt; require 'json'
=&gt; true
irb(main):002:0&gt; StandardError.to_json
=&gt; &quot;\&quot;StandardError\&quot;&quot;
irb(main):003:0&gt; StandardError.to_s
=&gt; &quot;StandardError&quot;
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The way to_json treats classes is strange, and new in 2.3 (this
worked as expected in 2.2):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;StandardError.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;
StandardError.to_s == &quot;StandardError&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;irb(main):001:0&amp;gt; require 'json'
=&amp;gt; true
irb(main):002:0&amp;gt; StandardError.to_json
=&amp;gt; &quot;\&quot;StandardError\&quot;&quot;
irb(main):003:0&amp;gt; StandardError.to_s
=&amp;gt; &quot;StandardError&quot;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The way to_json treats classes is strange, and new in 2.3 (this worked as expected in 2.2):

@@@ ruby
StandardError.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;
StandardError.to_s == &quot;StandardError&quot;
@@@

However:

@@@ ruby
irb(main):001:0&gt; require 'json'
=&gt; true
irb(main):002:0&gt; StandardError.to_json
=&gt; &quot;\&quot;StandardError\&quot;&quot;
irb(main):003:0&gt; StandardError.to_s
=&gt; &quot;StandardError&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The way to_json treats classes is strange, and new in 2.3 (this
worked as expected in 2.2):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;StandardError.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;
StandardError.to_s == &quot;StandardError&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;irb(main):001:0&amp;gt; require 'json'
=&amp;gt; true
irb(main):002:0&amp;gt; StandardError.to_json
=&amp;gt; &quot;\&quot;StandardError\&quot;&quot;
irb(main):003:0&amp;gt; StandardError.to_s
=&amp;gt; &quot;StandardError&quot;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-27T07:24:45+00:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3622</number>
      <permalink>exception_classto_json-inheritable_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>inheritable_attributes</tag>
      <title>exception_class.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;</title>
      <updated-at type="datetime">2009-12-27T07:29:59+00:00</updated-at>
      <user-id type="integer">42916</user-id>
      <version type="integer">1</version>
      <user-name>Greg Hazel</user-name>
      <creator-name>Greg Hazel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3622</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

From your report, I think you are suggesting that Rails' `to_json` should have the same outcome as pure `irb`, right?

I can confirm the above outcome on Rails 3.0.1. However, I don't think this is a bug, as this is the way Rails make sure that everything can be converted to JSON. Calling `to_json` on an object would actually calling `to_hash` or returning `instance_values` if it doesn't implements `to_hash`. Unintentionally, `StandardError` doesn't implements `to_hash`, and so you got the instance variables (or class variables, in this case) instead.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;From your report, I think you are suggesting that Rails'
&lt;code&gt;to_json&lt;/code&gt; should have the same outcome as pure
&lt;code&gt;irb&lt;/code&gt;, right?&lt;/p&gt;
&lt;p&gt;I can confirm the above outcome on Rails 3.0.1. However, I don't
think this is a bug, as this is the way Rails make sure that
everything can be converted to JSON. Calling &lt;code&gt;to_json&lt;/code&gt;
on an object would actually calling &lt;code&gt;to_hash&lt;/code&gt; or
returning &lt;code&gt;instance_values&lt;/code&gt; if it doesn't implements
&lt;code&gt;to_hash&lt;/code&gt;. Unintentionally, &lt;code&gt;StandardError&lt;/code&gt;
doesn't implements &lt;code&gt;to_hash&lt;/code&gt;, and so you got the
instance variables (or class variables, in this case) instead.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-17T17:09:51+01:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3622</number>
      <permalink>exception_classto_json-inheritable_attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>inheritable_attributes</tag>
      <title>exception_class.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;</title>
      <updated-at type="datetime">2010-10-17T17:09:55+01:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">2</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Greg Hazel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3622</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>One more thing,

and you saw `inheritable_attributes` in the list of attributes because that's actually a hash storing the list of class's inheritable attributes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;One more thing,&lt;/p&gt;
&lt;p&gt;and you saw &lt;code&gt;inheritable_attributes&lt;/code&gt; in the list of
attributes because that's actually a hash storing the list of
class's inheritable attributes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-17T17:11:42+01:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3622</number>
      <permalink>exception_classto_json-inheritable_attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>inheritable_attributes</tag>
      <title>exception_class.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;</title>
      <updated-at type="datetime">2010-10-17T17:11:43+01:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">3</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Greg Hazel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3622</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Why should Rails to_json work any differently than regular to_json for non-Rails objects?

Also, as you can see from Marshal, there is no need to dump anything about `inheritable_attributes` in order to instantiate StandardError again.

@@@ ruby
&gt;&gt; Marshal.dump(StandardError)
=&gt; &quot;\004\bc\022StandardError&quot;
&gt;&gt; Marshal.load(Marshal.dump(StandardError))
=&gt; StandardError
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Why should Rails to_json work any differently than regular
to_json for non-Rails objects?&lt;/p&gt;
&lt;p&gt;Also, as you can see from Marshal, there is no need to dump
anything about &lt;code&gt;inheritable_attributes&lt;/code&gt; in order to
instantiate StandardError again.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; Marshal.dump(StandardError)
=&amp;gt; &quot;\004\bc\022StandardError&quot;
&amp;gt;&amp;gt; Marshal.load(Marshal.dump(StandardError))
=&amp;gt; StandardError&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-18T00:16:09+01:00</created-at>
      <creator-id type="integer">42916</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3622</number>
      <permalink>exception_classto_json-inheritable_attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>inheritable_attributes</tag>
      <title>exception_class.to_json == &quot;{\&quot;inheritable_attributes\&quot;:{}}&quot;</title>
      <updated-at type="datetime">2010-10-18T00:16:11+01:00</updated-at>
      <user-id type="integer">42916</user-id>
      <version type="integer">4</version>
      <user-name>Greg Hazel</user-name>
      <creator-name>Greg Hazel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3622</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
