<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-22T16:07:10+00:00</created-at>
  <creator-id type="integer">22814</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1434</number>
  <permalink>add_column-with-non-existing-type</permalink>
  <priority type="integer">820</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord edge migrations patch sqlite</tag>
  <title>add_column with non-existing type</title>
  <updated-at type="datetime">2009-07-29T15:53:57+01:00</updated-at>
  <user-id type="integer">60523</user-id>
  <version type="integer">7</version>
  <user-name>bterkuile</user-name>
  <creator-name>qoobaa</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>We can add column with non-existing (or misspelled) type. Migration works with SQLite3, but it can't be undone:

@@@
rake db:migrate:down VERSION=20081122152613 --trace

...
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb:423:in `column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:318:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:98:in `create_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:310:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:304:in `move_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:297:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:296:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:228:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `send'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `method_missing'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:326:in `say_with_time'
...
@@@</original-body>
  <latest-body>We can add column with non-existing (or misspelled) type. Migration works with SQLite3, but it can't be undone:

@@@
rake db:migrate:down VERSION=20081122152613 --trace

...
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb:423:in `column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:318:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:98:in `create_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:310:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:304:in `move_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:297:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:296:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:228:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `send'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `method_missing'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:326:in `say_with_time'
...
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;We can add column with non-existing (or misspelled) type.
Migration works with SQLite3, but it can't be undone:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
rake db:migrate:down VERSION=20081122152613 --trace

...
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb:423:in `column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:318:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:98:in `create_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:310:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:304:in `move_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:297:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:296:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:228:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `send'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `method_missing'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:326:in `say_with_time'
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We can add column with non-existing (or misspelled) type.
@@@
add_column :users, :enabled, :bool # misspelled - should be :boolean
@@@
Migration works fine with SQLite3, but it can't be undone:
@@@
rake db:migrate:down VERSION=20081122152613 --trace

...
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb:423:in `column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:318:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:98:in `create_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:310:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:304:in `move_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:297:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:296:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:228:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `send'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `method_missing'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:326:in `say_with_time'
...
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;We can add column with non-existing (or misspelled) type.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
add_column :users, :enabled, :bool # misspelled - should be :boolean
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Migration works fine with SQLite3, but it can't be undone:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
rake db:migrate:down VERSION=20081122152613 --trace

...
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_definitions.rb:423:in `column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:318:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:312:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:98:in `create_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:310:in `copy_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:304:in `move_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:297:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:296:in `alter_table'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:228:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `each'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb:227:in `remove_column'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `send'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:346:in `method_missing'
/home/kuba/edetailing/vendor/rails/activerecord/lib/active_record/migration.rb:326:in `say_with_time'
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-22T16:07:10+00:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1434</number>
      <permalink>add_column-with-non-existing-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge migrations sqlite</tag>
      <title>add_column with non-existing type</title>
      <updated-at type="datetime">2008-11-22T16:11:55+00:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">1</version>
      <user-name>qoobaa</user-name>
      <creator-name>qoobaa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The patch solves problem with reversing migrations. We should also consider restricting SQLite3 types to avoid mistakes like above.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch solves problem with reversing migrations. We should
also consider restricting SQLite3 types to avoid mistakes like
above.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-22T17:28:57+00:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord edge migrations sqlite
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1434</number>
      <permalink>add_column-with-non-existing-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge migrations patch sqlite</tag>
      <title>add_column with non-existing type</title>
      <updated-at type="datetime">2008-11-22T17:29:00+00:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">2</version>
      <user-name>qoobaa</user-name>
      <creator-name>qoobaa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Shouldn't the real fix be to raise an exception when someone tries to add a column of unknown type ?

Also, the patch is missing tests.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Shouldn't the real fix be to raise an exception when someone
tries to add a column of unknown type ?&lt;/p&gt;
&lt;p&gt;Also, the patch is missing tests.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T19:46:18+00:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1434</number>
      <permalink>add_column-with-non-existing-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge migrations patch sqlite</tag>
      <title>add_column with non-existing type</title>
      <updated-at type="datetime">2009-03-06T19:46:21+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>qoobaa</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>AFAIR (it was few months ago) the problem is that SQLite3 doesn't have any strict set of types. Restricting them is the easiest way to fix the problem but it might cause problems when somebody uses strange type names already (don't know what for :-) ).</body>
      <body-html>&lt;div&gt;&lt;p&gt;AFAIR (it was few months ago) the problem is that SQLite3
doesn't have any strict set of types. Restricting them is the
easiest way to fix the problem but it might cause problems when
somebody uses strange type names already (don't know what for :-)
).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T22:54:51+00:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1434</number>
      <permalink>add_column-with-non-existing-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge migrations patch sqlite</tag>
      <title>add_column with non-existing type</title>
      <updated-at type="datetime">2009-03-06T22:54:57+00:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">4</version>
      <user-name>qoobaa</user-name>
      <creator-name>qoobaa</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It's also really nasty bug. When you create such strange typed column, there's no easy way to remove it - SQLite3 doesn't support removing columns from tables. My solution was the easiest way to repair my DB.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's also really nasty bug. When you create such strange typed
column, there's no easy way to remove it - SQLite3 doesn't support
removing columns from tables. My solution was the easiest way to
repair my DB.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T23:00:35+00:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1434</number>
      <permalink>add_column-with-non-existing-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge migrations patch sqlite</tag>
      <title>add_column with non-existing type</title>
      <updated-at type="datetime">2009-03-06T23:00:39+00:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">5</version>
      <user-name>qoobaa</user-name>
      <creator-name>qoobaa</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-18T22:08:22+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1434</number>
      <permalink>add_column-with-non-existing-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord edge migrations patch sqlite</tag>
      <title>add_column with non-existing type</title>
      <updated-at type="datetime">2009-05-18T22:08:26+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>qoobaa</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I had the same problem, setting a type to :bool for sqlite3 will cause many problems. At least it should be converted to :boolean when a sqlite database is used. The problem is described at: http://kconrails.com/blog/articles/2008/07/15/ruby-on-rails-bool-vs-boolean-in-sqlite3 so I won't add much words to that, except how I resolved the problem.

Since migrations fail when the field has type bool it has to be changed manually. Since I don't like the code to change the column type for sqlite my most elegant solution was in the console:
&lt;code&gt;ActiveRecord::Base.connection.change_column :table_name, :column_name, :boolean, :default =&gt; false&lt;/code&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had the same problem, setting a type to :bool for sqlite3 will
cause many problems. At least it should be converted to :boolean
when a sqlite database is used. The problem is described at:
&lt;a href=
&quot;http://kconrails.com/blog/articles/2008/07/15/ruby-on-rails-bool-vs-boolean-in-sqlite3&quot;&gt;
http://kconrails.com/blog/articles/2008/07/15/ruby-on-rails-bool-vs...&lt;/a&gt;
so I won't add much words to that, except how I resolved the
problem.&lt;/p&gt;
&lt;p&gt;Since migrations fail when the field has type bool it has to be
changed manually. Since I don't like the code to change the column
type for sqlite my most elegant solution was in the console:&lt;br&gt;
&lt;code&gt;ActiveRecord::Base.connection.change_column :table_name,
:column_name, :boolean, :default =&amp;gt; false&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-29T15:53:49+01:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1434</number>
      <permalink>add_column-with-non-existing-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord edge migrations patch sqlite</tag>
      <title>add_column with non-existing type</title>
      <updated-at type="datetime">2009-07-29T15:53:57+01:00</updated-at>
      <user-id type="integer">60523</user-id>
      <version type="integer">7</version>
      <user-name>bterkuile</user-name>
      <creator-name>qoobaa</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1434</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>207f65565818812cdb5142981ed94e9b7b9b3c65</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-22T17:28:57+00:00</created-at>
      <filename>removing_sqlite3_columns_with_custom_types.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">64716</id>
      <size type="integer">1998</size>
      <uploader-id type="integer">22814</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/64716/removing_sqlite3_columns_with_custom_types.diff</url>
    </attachment>
  </attachments>
</ticket>
