<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-06T15:29:12+01:00</created-at>
  <creator-id type="integer">64954</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3000</number>
  <permalink>periodically_call_remote-in-233</permalink>
  <priority type="integer">130358</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>periodically_call_remote in 2.3.3</title>
  <updated-at type="datetime">2010-10-11T10:56:26+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">4</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>phlegx</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3000</url>
  <priority-name nil="true"></priority-name>
  <original-body>I use periodically_call_remote in one of my views like that: &lt;%=periodically_call_remote(:url =&gt; { :action =&gt; 'check'}, :with =&gt; &quot;'id=#{name}'&quot;)%&gt;
I have a for loop within the view that calls  periodically_call_remote like for about 10 times.

Now in 2.3.2 all works fine and no errors do appear. 
However in 2.3.3 I get three different error messages more or less frequently. The errors happens always on different  periodically_call_remote calls and I really can't say when and on which one it will occur.

Those are the error messages that I get (on some items on some calls):

   - Expected x.rb to define X error
   - A copy of XX has been removed from the module tree but is still active!
   - and sometimes a database error that happens frequently!

While switching between the two versions Code remained unchanged, and as I said in 2.3.2 everything worked like a charm: no single error message.

Could this be a bug?

cheers
martin</original-body>
  <latest-body>I use periodically_call_remote in one of my views like that: &lt;%=periodically_call_remote(:url =&gt; { :action =&gt; 'check'}, :with =&gt; &quot;'id=#{name}'&quot;)%&gt;
I have a for loop within the view that calls  periodically_call_remote like for about 10 times.

Now in 2.3.2 all works fine and no errors do appear. 
However in 2.3.3 I get three different error messages more or less frequently. The errors happens always on different  periodically_call_remote calls and I really can't say when and on which one it will occur.

Those are the error messages that I get (on some items on some calls):

   - Expected x.rb to define X error
   - A copy of XX has been removed from the module tree but is still active!
   - and sometimes a database error that happens frequently!

While switching between the two versions Code remained unchanged, and as I said in 2.3.2 everything worked like a charm: no single error message.

Could this be a bug?

cheers
martin</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I use periodically_call_remote in one of my views like that:
&amp;lt;%=periodically_call_remote(:url =&amp;gt; { :action =&amp;gt; 'check'},
:with =&amp;gt; &quot;'id=#{name}'&quot;)%&amp;gt; I have a for loop within the view
that calls periodically_call_remote like for about 10 times.&lt;/p&gt;
&lt;p&gt;Now in 2.3.2 all works fine and no errors do appear. However in
2.3.3 I get three different error messages more or less frequently.
The errors happens always on different periodically_call_remote
calls and I really can't say when and on which one it will
occur.&lt;/p&gt;
&lt;p&gt;Those are the error messages that I get (on some items on some
calls):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Expected x.rb to define X error&lt;/li&gt;
&lt;li&gt;A copy of XX has been removed from the module tree but is still
active!&lt;/li&gt;
&lt;li&gt;and sometimes a database error that happens frequently!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While switching between the two versions Code remained
unchanged, and as I said in 2.3.2 everything worked like a charm:
no single error message.&lt;/p&gt;
&lt;p&gt;Could this be a bug?&lt;/p&gt;
&lt;p&gt;cheers martin&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I use periodically_call_remote in one of my views like that: &lt;%=periodically_call_remote(:url =&gt; { :action =&gt; 'check'}, :with =&gt; &quot;'id=#{name}'&quot;)%&gt;
I have a for loop within the view that calls  periodically_call_remote like for about 10 times.

Now in 2.3.2 all works fine and no errors do appear. 
However in 2.3.3 I get three different error messages more or less frequently. The errors happens always on different  periodically_call_remote calls and I really can't say when and on which one it will occur.

Those are the error messages that I get (on some items on some calls):

   - Expected x.rb to define X error
   - A copy of XX has been removed from the module tree but is still active!
   - and sometimes a database error that happens frequently!

While switching between the two versions Code remained unchanged, and as I said in 2.3.2 everything worked like a charm: no single error message.

Could this be a bug?

cheers
martin</body>
      <body-html>&lt;div&gt;&lt;p&gt;I use periodically_call_remote in one of my views like that:
&amp;lt;%=periodically_call_remote(:url =&amp;gt; { :action =&amp;gt; 'check'},
:with =&amp;gt; &quot;'id=#{name}'&quot;)%&amp;gt;&lt;br&gt;
I have a for loop within the view that calls
periodically_call_remote like for about 10 times.&lt;/p&gt;
&lt;p&gt;Now in 2.3.2 all works fine and no errors do appear.&lt;br&gt;
However in 2.3.3 I get three different error messages more or less
frequently. The errors happens always on different
periodically_call_remote calls and I really can't say when and on
which one it will occur.&lt;/p&gt;
&lt;p&gt;Those are the error messages that I get (on some items on some
calls):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Expected x.rb to define X error&lt;/li&gt;
&lt;li&gt;A copy of XX has been removed from the module tree but is still
active!&lt;/li&gt;
&lt;li&gt;and sometimes a database error that happens frequently!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While switching between the two versions Code remained
unchanged, and as I said in 2.3.2 everything worked like a charm:
no single error message.&lt;/p&gt;
&lt;p&gt;Could this be a bug?&lt;/p&gt;
&lt;p&gt;cheers&lt;br&gt;
martin&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-06T15:29:12+01:00</created-at>
      <creator-id type="integer">64954</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3000</number>
      <permalink>periodically_call_remote-in-233</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 2.3.3 periodically_call_remote</tag>
      <title>periodically_call_remote in 2.3.3</title>
      <updated-at type="datetime">2009-08-06T15:29:19+01:00</updated-at>
      <user-id type="integer">64954</user-id>
      <version type="integer">1</version>
      <user-name>phlegx</user-name>
      <creator-name>phlegx</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3000</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It would be helpful to know what x.rb is. It's probably a part of your code trying to load a constant which is undefined, then autoloading kicks in attempting to load a file that doesn't define that constant. Closing as stale.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It would be helpful to know what x.rb is. It's probably a part
of your code trying to load a constant which is undefined, then
autoloading kicks in attempting to load a file that doesn't define
that constant. Closing as stale.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-16T23:36:08+01:00</created-at>
      <creator-id type="integer">64954</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3000</number>
      <permalink>periodically_call_remote-in-233</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.3.2 2.3.3 periodically_call_remote</tag>
      <title>periodically_call_remote in 2.3.3</title>
      <updated-at type="datetime">2010-06-16T23:36:14+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>phlegx</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3000</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T10:56:23+01:00</created-at>
      <creator-id type="integer">64954</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 2.3.3 periodically_call_remote
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3000</number>
      <permalink>periodically_call_remote-in-233</permalink>
      <priority type="integer">130358</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>periodically_call_remote in 2.3.3</title>
      <updated-at type="datetime">2010-10-11T10:56:25+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>phlegx</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3000</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
