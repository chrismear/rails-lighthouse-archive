<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-17T05:54:32+01:00</created-at>
  <creator-id type="integer">4023</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">436</number>
  <permalink>implied-routes-to-nested-collections</permalink>
  <priority type="integer">16870</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>actionpack enhancement patch routing</tag>
  <title>Implied routes to nested collections</title>
  <updated-at type="datetime">2008-08-21T12:13:47+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">3</version>
  <user-name>Pratik</user-name>
  <creator-name>Chris</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/436</url>
  <priority-name nil="true"></priority-name>
  <original-body>Often a resource is little more than a container for a nested collection. The tendency of applications lately is to use &quot;pretty urls&quot; to enhance the readability of a resource's URL. Additionally, it is quite common when performing search engine optimization to try to eliminate as many folders in the url path as possible. In such situations, it makes sense to collapse the primary path to a nested resource.

For example, consider a website with a local product where they list businesses by category, subcategory, state, city, and finally business name. The default url using nested routes would be:
/local/categories/restaurants/subcategories/korean/states/california/cities/mountain-view/totoro-tofu-house

However, all the types here can be assumed as long as the developer takes care to prevent the use of reserved names like &quot;new&quot; and &quot;edit&quot; resulting in a very pleasant and readable url like so:

/local/restaurants/korean/california/mountain-view/totoro-tofu-house

Having been faced with such requirements a number of times now, I became irritated that I couldn't use nested routes so I dug around in the resources code and found it not that hard to extend.

The result is a plugin for people to try this functionality located at:
http://github.com/caring/default_routing/tree/master

And a patch to rails at:
http://github.com/chriseppstein/rails/tree/master
as well as attached.

This provides the ability for a resources declaration to declare itself as :default =&gt; true, thereby omitting the leading scope identifier. It also provides a :show =&gt; :foos that will delegate the show action of a nested resource to the index action of the FoosController by generating the show route with a lower routing priority than the nested index.</original-body>
  <latest-body>Often a resource is little more than a container for a nested collection. The tendency of applications lately is to use &quot;pretty urls&quot; to enhance the readability of a resource's URL. Additionally, it is quite common when performing search engine optimization to try to eliminate as many folders in the url path as possible. In such situations, it makes sense to collapse the primary path to a nested resource.

For example, consider a website with a local product where they list businesses by category, subcategory, state, city, and finally business name. The default url using nested routes would be:
/local/categories/restaurants/subcategories/korean/states/california/cities/mountain-view/totoro-tofu-house

However, all the types here can be assumed as long as the developer takes care to prevent the use of reserved names like &quot;new&quot; and &quot;edit&quot; resulting in a very pleasant and readable url like so:

/local/restaurants/korean/california/mountain-view/totoro-tofu-house

Having been faced with such requirements a number of times now, I became irritated that I couldn't use nested routes so I dug around in the resources code and found it not that hard to extend.

The result is a plugin for people to try this functionality located at:
http://github.com/caring/default_routing/tree/master

And a patch to rails at:
http://github.com/chriseppstein/rails/tree/master
as well as attached.

This provides the ability for a resources declaration to declare itself as :default =&gt; true, thereby omitting the leading scope identifier. It also provides a :show =&gt; :foos that will delegate the show action of a nested resource to the index action of the FoosController by generating the show route with a lower routing priority than the nested index.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Often a resource is little more than a container for a nested collection. The tendency of applications lately is to use &quot;pretty urls&quot; to enhance the readability of a resource's URL. Additionally, it is quite common when performing search engine optimization to try to eliminate as many folders in the url path as possible. In such situations, it makes sense to collapse the primary path to a nested resource.
&lt;/p&gt;&lt;p&gt;
For example, consider a website with a local product where they list businesses by category, subcategory, state, city, and finally business name. The default url using nested routes would be:
&lt;/p&gt;&lt;p&gt;
/local/categories/restaurants/subcategories/korean/states/california/cities/mountain-view/totoro-tofu-house
&lt;/p&gt;&lt;p&gt;
However, all the types here can be assumed as long as the developer takes care to prevent the use of reserved names like &quot;new&quot; and &quot;edit&quot; resulting in a very pleasant and readable url like so:
&lt;/p&gt;&lt;p&gt;
/local/restaurants/korean/california/mountain-view/totoro-tofu-house
&lt;/p&gt;&lt;p&gt;
Having been faced with such requirements a number of times now, I became irritated that I couldn't use nested routes so I dug around in the resources code and found it not that hard to extend.
&lt;/p&gt;&lt;p&gt;
The result is a plugin for people to try this functionality located at:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/caring/default_routing/tree/master&quot;&gt;http://github.com/caring/default...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
And a patch to rails at:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/chriseppstein/rails/tree/master&quot;&gt;http://github.com/chriseppstein/...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
as well as attached.
&lt;/p&gt;&lt;p&gt;
This provides the ability for a resources declaration to declare itself as :default =&gt; true, thereby omitting the leading scope identifier. It also provides a :show =&gt; :foos that will delegate the show action of a nested resource to the index action of the FoosController by generating the show route with a lower routing priority than the nested index.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Often a resource is little more than a container for a nested collection. The tendency of applications lately is to use &quot;pretty urls&quot; to enhance the readability of a resource's URL. Additionally, it is quite common when performing search engine optimization to try to eliminate as many folders in the url path as possible. In such situations, it makes sense to collapse the primary path to a nested resource.

For example, consider a website with a local product where they list businesses by category, subcategory, state, city, and finally business name. The default url using nested routes would be:
/local/categories/restaurants/subcategories/korean/states/california/cities/mountain-view/totoro-tofu-house

However, all the types here can be assumed as long as the developer takes care to prevent the use of reserved names like &quot;new&quot; and &quot;edit&quot; resulting in a very pleasant and readable url like so:

/local/restaurants/korean/california/mountain-view/totoro-tofu-house

Having been faced with such requirements a number of times now, I became irritated that I couldn't use nested routes so I dug around in the resources code and found it not that hard to extend.

The result is a plugin for people to try this functionality located at:
http://github.com/caring/default_routing/tree/master

And a patch to rails at:
http://github.com/chriseppstein/rails/tree/master
as well as attached.

This provides the ability for a resources declaration to declare itself as :default =&gt; true, thereby omitting the leading scope identifier. It also provides a :show =&gt; :foos that will delegate the show action of a nested resource to the index action of the FoosController by generating the show route with a lower routing priority than the nested index.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Often a resource is little more than a container for a nested collection. The tendency of applications lately is to use &quot;pretty urls&quot; to enhance the readability of a resource's URL. Additionally, it is quite common when performing search engine optimization to try to eliminate as many folders in the url path as possible. In such situations, it makes sense to collapse the primary path to a nested resource.
&lt;/p&gt;&lt;p&gt;
For example, consider a website with a local product where they list businesses by category, subcategory, state, city, and finally business name. The default url using nested routes would be:
&lt;/p&gt;&lt;p&gt;
/local/categories/restaurants/subcategories/korean/states/california/cities/mountain-view/totoro-tofu-house
&lt;/p&gt;&lt;p&gt;
However, all the types here can be assumed as long as the developer takes care to prevent the use of reserved names like &quot;new&quot; and &quot;edit&quot; resulting in a very pleasant and readable url like so:
&lt;/p&gt;&lt;p&gt;
/local/restaurants/korean/california/mountain-view/totoro-tofu-house
&lt;/p&gt;&lt;p&gt;
Having been faced with such requirements a number of times now, I became irritated that I couldn't use nested routes so I dug around in the resources code and found it not that hard to extend.
&lt;/p&gt;&lt;p&gt;
The result is a plugin for people to try this functionality located at:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/caring/default_routing/tree/master&quot;&gt;http://github.com/caring/default...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
And a patch to rails at:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/chriseppstein/rails/tree/master&quot;&gt;http://github.com/chriseppstein/...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
as well as attached.
&lt;/p&gt;&lt;p&gt;
This provides the ability for a resources declaration to declare itself as :default =&gt; true, thereby omitting the leading scope identifier. It also provides a :show =&gt; :foos that will delegate the show action of a nested resource to the index action of the FoosController by generating the show route with a lower routing priority than the nested index.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-17T05:54:32+01:00</created-at>
      <creator-id type="integer">4023</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">436</number>
      <permalink>implied-routes-to-nested-collections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Implied routes to nested collections</title>
      <updated-at type="datetime">2008-06-17T05:54:32+01:00</updated-at>
      <user-id type="integer">4023</user-id>
      <version type="integer">1</version>
      <user-name>Chris</user-name>
      <creator-name>Chris</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/436</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry:

&quot;...delegate the show action of a nested resource to the index action...&quot;

Should have been:
&quot;...delgate the show action of a parent resource to the nested index action...&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sorry:
&lt;/p&gt;&lt;p&gt;
&quot;...delegate the show action of a nested resource to the index action...&quot;
&lt;/p&gt;&lt;p&gt;
Should have been:
&lt;/p&gt;&lt;p&gt;
&quot;...delgate the show action of a parent resource to the nested index action...&quot;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-17T06:07:42+01:00</created-at>
      <creator-id type="integer">4023</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">436</number>
      <permalink>implied-routes-to-nested-collections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Implied routes to nested collections</title>
      <updated-at type="datetime">2008-06-17T06:07:42+01:00</updated-at>
      <user-id type="integer">4023</user-id>
      <version type="integer">2</version>
      <user-name>Chris</user-name>
      <creator-name>Chris</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/436</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think this is a better fit for a plugin. There are similar discussions going on in rails core mailing list. Probably you could express your opinions/suggestions there.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this is a better fit for a plugin. There are similar discussions going on in rails core mailing list. Probably you could express your opinions/suggestions there.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-21T12:13:46+01:00</created-at>
      <creator-id type="integer">4023</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">436</number>
      <permalink>implied-routes-to-nested-collections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack enhancement patch routing</tag>
      <title>Implied routes to nested collections</title>
      <updated-at type="datetime">2008-08-21T12:13:46+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Chris</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/436</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d7bf0b08240bb740251cff4cde5e5a3934117cdd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-17T05:54:32+01:00</created-at>
      <filename>0001-Default-Routing.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">27770</id>
      <size type="integer">9097</size>
      <uploader-id type="integer">4023</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/27770/0001-Default-Routing.patch</url>
    </attachment>
  </attachments>
</ticket>
