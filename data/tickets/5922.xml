<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-09T23:41:49+01:00</created-at>
  <creator-id type="integer">81551</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5922</number>
  <permalink>functional-tests-cannot-add-a-route</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>actionpack rails3 routes</tag>
  <title>Functional tests cannot add a route</title>
  <updated-at type="datetime">2011-04-09T23:41:49+01:00</updated-at>
  <user-id type="integer">136</user-id>
  <version type="integer">4</version>
  <user-name>Murray Steele</user-name>
  <creator-name>Andrea Campi</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5922</url>
  <priority-name nil="true"></priority-name>
  <original-body>I may be overlooking something, but:

I have a functional test that uses its own mock controller, which prepares some data and ends up calling a helper.
Among other things, I want to test that this helper generates the correct URLs, so I need my routes from config/routes.rb.
To be able to invoke actions on my mock controller, I have:

&lt;pre&gt;
  setup do
    Rails.application.routes.draw do
      match '/foo' =&gt; &quot;tags_tree_test/tags_tree_test#index&quot;
    end
  end

  teardown do
    Rails.application.reload_routes!
  end
&lt;/pre&gt;

The problem is that #draw first clears existing routes.
Of course this would just work if I used an existing controller for which I already have a route in config/routes.rb--but I want to run this test in a clean environment.

Am I correct that there's no way to do this?
Do we want to support this use case?</original-body>
  <latest-body>I may be overlooking something, but:

I have a functional test that uses its own mock controller, which prepares some data and ends up calling a helper.
Among other things, I want to test that this helper generates the correct URLs, so I need my routes from config/routes.rb.
To be able to invoke actions on my mock controller, I have:

&lt;pre&gt;
  setup do
    Rails.application.routes.draw do
      match '/foo' =&gt; &quot;tags_tree_test/tags_tree_test#index&quot;
    end
  end

  teardown do
    Rails.application.reload_routes!
  end
&lt;/pre&gt;

The problem is that #draw first clears existing routes.
Of course this would just work if I used an existing controller for which I already have a route in config/routes.rb--but I want to run this test in a clean environment.

Am I correct that there's no way to do this?
Do we want to support this use case?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I may be overlooking something, but:&lt;/p&gt;
&lt;p&gt;I have a functional test that uses its own mock controller,
which prepares some data and ends up calling a helper.&lt;br&gt;
Among other things, I want to test that this helper generates the
correct URLs, so I need my routes from config/routes.rb.&lt;br&gt;
To be able to invoke actions on my mock controller, I have:&lt;/p&gt;
&lt;pre&gt;
  setup do
    Rails.application.routes.draw do
      match '/foo' =&amp;gt; &quot;tags_tree_test/tags_tree_test#index&quot;
    end
  end

  teardown do
    Rails.application.reload_routes!
  end
&lt;/pre&gt;
&lt;p&gt;The problem is that #draw first clears existing routes.&lt;br&gt;
Of course this would just work if I used an existing controller for
which I already have a route in config/routes.rb--but I want to run
this test in a clean environment.&lt;/p&gt;
&lt;p&gt;Am I correct that there's no way to do this?&lt;br&gt;
Do we want to support this use case?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I may be overlooking something, but:

I have a functional test that uses its own mock controller, which prepares some data and ends up calling a helper.
Among other things, I want to test that this helper generates the correct URLs, so I need my routes from config/routes.rb.
To be able to invoke actions on my mock controller, I have:

&lt;pre&gt;
  setup do
    Rails.application.routes.draw do
      match '/foo' =&gt; &quot;tags_tree_test/tags_tree_test#index&quot;
    end
  end

  teardown do
    Rails.application.reload_routes!
  end
&lt;/pre&gt;

The problem is that #draw first clears existing routes.
Of course this would just work if I used an existing controller for which I already have a route in config/routes.rb--but I want to run this test in a clean environment.

Am I correct that there's no way to do this?
Do we want to support this use case?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I may be overlooking something, but:&lt;/p&gt;
&lt;p&gt;I have a functional test that uses its own mock controller,
which prepares some data and ends up calling a helper.&lt;br&gt;
Among other things, I want to test that this helper generates the
correct URLs, so I need my routes from config/routes.rb.&lt;br&gt;
To be able to invoke actions on my mock controller, I have:&lt;/p&gt;
&lt;pre&gt;
  setup do
    Rails.application.routes.draw do
      match '/foo' =&amp;gt; &quot;tags_tree_test/tags_tree_test#index&quot;
    end
  end

  teardown do
    Rails.application.reload_routes!
  end
&lt;/pre&gt;
&lt;p&gt;The problem is that #draw first clears existing routes.&lt;br&gt;
Of course this would just work if I used an existing controller for
which I already have a route in config/routes.rb--but I want to run
this test in a clean environment.&lt;/p&gt;
&lt;p&gt;Am I correct that there's no way to do this?&lt;br&gt;
Do we want to support this use case?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-05T17:03:55+00:00</created-at>
      <creator-id type="integer">81551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5922</number>
      <permalink>functional-tests-cannot-add-a-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack rails3 routes</tag>
      <title>Functional tests cannot add a route</title>
      <updated-at type="datetime">2010-11-05T17:03:56+00:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">1</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Andrea Campi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5922</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-05T20:56:36+00:00</created-at>
      <creator-id type="integer">81551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5922</number>
      <permalink>functional-tests-cannot-add-a-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionpack rails3 routes</tag>
      <title>Functional tests cannot add a route</title>
      <updated-at type="datetime">2011-02-05T20:56:39+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Andrea Campi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5922</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-05T20:56:36+00:00</created-at>
      <creator-id type="integer">81551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5922</number>
      <permalink>functional-tests-cannot-add-a-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack rails3 routes</tag>
      <title>Functional tests cannot add a route</title>
      <updated-at type="datetime">2011-02-05T20:56:42+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Andrea Campi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5922</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[state:open]

It's certainly still a problem as routes are cleared if we redraw them in our tests and sometimes we want the new route and our application routes.  Not sure what the solution is, but I got around it as follows:

@@@ ruby
  def setup
    routes = Rails.application.routes
    routes.disable_clear_and_finalize = true
    routes.clear!
    Rails.application.routes_reloader.paths.each { |path| load(path) }
    routes.draw do
      match &quot;/test-action&quot; =&gt; &quot;my_controller_test/test#index&quot;
    end
    routes.disable_clear_and_finalize = false
    routes.finalize!
  end

  def teardown
    Rails.application.reload_routes!
  end
@@@

But this is clearly upsetting.  Perhaps the with_routing helper from ActionDispatch::Assertions::RoutingAssertions could be updated to work in 2 ways.  The default is to work as it does now, where the routes defined in the block are the only available ones.  The 2nd mode (or new helper) would provide routing that keeps the existing app routes around and adds those in the block to them.  Both modes should reset back to the default app routes at the end of the block.</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open]&lt;/p&gt;
&lt;p&gt;It's certainly still a problem as routes are cleared if we
redraw them in our tests and sometimes we want the new route and
our application routes. Not sure what the solution is, but I got
around it as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  def setup
    routes = Rails.application.routes
    routes.disable_clear_and_finalize = true
    routes.clear!
    Rails.application.routes_reloader.paths.each { |path| load(path) }
    routes.draw do
      match &quot;/test-action&quot; =&amp;gt; &quot;my_controller_test/test#index&quot;
    end
    routes.disable_clear_and_finalize = false
    routes.finalize!
  end

  def teardown
    Rails.application.reload_routes!
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But this is clearly upsetting. Perhaps the with_routing helper
from ActionDispatch::Assertions::RoutingAssertions could be updated
to work in 2 ways. The default is to work as it does now, where the
routes defined in the block are the only available ones. The 2nd
mode (or new helper) would provide routing that keeps the existing
app routes around and adds those in the block to them. Both modes
should reset back to the default app routes at the end of the
block.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T18:19:29+00:00</created-at>
      <creator-id type="integer">81551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5922</number>
      <permalink>functional-tests-cannot-add-a-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionpack rails3 routes</tag>
      <title>Functional tests cannot add a route</title>
      <updated-at type="datetime">2011-02-17T18:19:33+00:00</updated-at>
      <user-id type="integer">136</user-id>
      <version type="integer">4</version>
      <user-name>Murray Steele</user-name>
      <creator-name>Andrea Campi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5922</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Our online shop can meet all the demands.It is the best source of buying Cheap 
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you will come across unbelievable surprise. We have a big variety of jersey on sale in different styles and colors.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Our online shop can meet all the demands.It is the best source
of buying Cheap&lt;br&gt;
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you
will come across unbelievable surprise. We have a big variety of
jersey on sale in different styles and colors.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-09T03:24:21+01:00</created-at>
      <creator-id type="integer">81551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5922</number>
      <permalink>functional-tests-cannot-add-a-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionpack rails3 routes</tag>
      <title>Functional tests cannot add a route</title>
      <updated-at type="datetime">2011-04-09T23:41:49+01:00</updated-at>
      <user-id type="integer">144925</user-id>
      <version type="integer">5</version>
      <user-name>jerseysforsales</user-name>
      <creator-name>Andrea Campi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5922</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
