<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-06T00:51:37+00:00</created-at>
  <creator-id type="integer">28849</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">3871</number>
  <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>3</tag>
  <title>Chaining scopes can trigger excessive db queries</title>
  <updated-at type="datetime">2010-10-15T23:01:43+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">8</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>ender672</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Medium</priority-name>
  <original-body>Scope#method_missing was testing whether the initial scoped methods were missing. However this test triggered Scope#== which actually loads scopes from the database. In some situations, this caused unnecessary database access.

I noticed extra db queries on a production app and narrowed it down to this test for initial scoped methods.

Note that there were no unit tests for the initial scoped methods code path and I am unsure where it would be needed. We might want to add a unit test for this scenario or take out that path entirely.</original-body>
  <latest-body>Scope#method_missing was testing whether the initial scoped methods were missing. However this test triggered Scope#== which actually loads scopes from the database. In some situations, this caused unnecessary database access.

I noticed extra db queries on a production app and narrowed it down to this test for initial scoped methods.

Note that there were no unit tests for the initial scoped methods code path and I am unsure where it would be needed. We might want to add a unit test for this scenario or take out that path entirely.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Scope#method_missing was testing whether the initial scoped
methods were missing. However this test triggered Scope#== which
actually loads scopes from the database. In some situations, this
caused unnecessary database access.&lt;/p&gt;
&lt;p&gt;I noticed extra db queries on a production app and narrowed it
down to this test for initial scoped methods.&lt;/p&gt;
&lt;p&gt;Note that there were no unit tests for the initial scoped
methods code path and I am unsure where it would be needed. We
might want to add a unit test for this scenario or take out that
path entirely.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Scope#method_missing was testing whether the initial scoped methods were missing. However this test triggered Scope#== which actually loads scopes from the database. In some situations, this caused unnecessary database access.

I noticed extra db queries on a production app and narrowed it down to this test for initial scoped methods.

Note that there were no unit tests for the initial scoped methods code path and I am unsure where it would be needed. We might want to add a unit test for this scenario or take out that path entirely.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Scope#method_missing was testing whether the initial scoped
methods were missing. However this test triggered Scope#== which
actually loads scopes from the database. In some situations, this
caused unnecessary database access.&lt;/p&gt;
&lt;p&gt;I noticed extra db queries on a production app and narrowed it
down to this test for initial scoped methods.&lt;/p&gt;
&lt;p&gt;Note that there were no unit tests for the initial scoped
methods code path and I am unsure where it would be needed. We
might want to add a unit test for this scenario or take out that
path entirely.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-06T00:51:37+00:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;3.0 scopes&quot;</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-02-06T00:51:45+00:00</updated-at>
      <user-id type="integer">28849</user-id>
      <version type="integer">1</version>
      <user-name>ender672</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-06T00:52:51+00:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;3.0 scopes\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-02-06T00:52:53+00:00</updated-at>
      <user-id type="integer">28849</user-id>
      <version type="integer">2</version>
      <user-name>ender672</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-06T04:24:19+00:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.0</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-02-06T04:24:21+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I was unable to find a reason for the current_scoped_methods_when_defined test in Scope#method_missing. All tests pass without it.

I am attaching an updated patch with a better unit test and that removes the current_scoped_methods_when_defined test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was unable to find a reason for the
current_scoped_methods_when_defined test in Scope#method_missing.
All tests pass without it.&lt;/p&gt;
&lt;p&gt;I am attaching an updated patch with a better unit test and that
removes the current_scoped_methods_when_defined test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-10T02:08:15+00:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.0</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-02-10T02:08:22+00:00</updated-at>
      <user-id type="integer">28849</user-id>
      <version type="integer">4</version>
      <user-name>ender672</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for the patch. Went from this

    &gt;&gt; Cow.after('a').after('b').after('c').after('d').all
      Cow Load (0.5ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &gt; 'a') AND (name &gt; 'b')
      Cow Load (0.2ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &gt; 'a')
      Cow Load (0.2ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &gt; 'a') AND (name &gt; 'b') AND (name &gt; 'c')
      Cow Load (0.2ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &gt; 'a') AND (name &gt; 'b') AND (name &gt; 'c') AND (name &gt; 'd')
    =&gt; [#&lt;Cow id: 1, name: &quot;sam&quot;, created_at: &quot;2010-02-25 05:04:04&quot;, updated_at: &quot;2010-02-25 05:04:04&quot;&gt;]

to this! Happy cows.

    &gt;&gt; Cow.after('a').after('b').after('c').after('d').all
      Cow Load (0.3ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &gt; 'a') AND (name &gt; 'b') AND (name &gt; 'c') AND (name &gt; 'd')
    =&gt; [#&lt;Cow id: 1, name: &quot;sam&quot;, created_at: &quot;2010-02-25 05:04:04&quot;, updated_at: &quot;2010-02-25 05:04:04&quot;&gt;]</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for the patch. Went from this&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; Cow.after('a').after('b').after('c').after('d').all
  Cow Load (0.5ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &amp;gt; 'a') AND (name &amp;gt; 'b')
  Cow Load (0.2ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &amp;gt; 'a')
  Cow Load (0.2ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &amp;gt; 'a') AND (name &amp;gt; 'b') AND (name &amp;gt; 'c')
  Cow Load (0.2ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &amp;gt; 'a') AND (name &amp;gt; 'b') AND (name &amp;gt; 'c') AND (name &amp;gt; 'd')
=&amp;gt; [#&amp;lt;Cow id: 1, name: &quot;sam&quot;, created_at: &quot;2010-02-25 05:04:04&quot;, updated_at: &quot;2010-02-25 05:04:04&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to this! Happy cows.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; Cow.after('a').after('b').after('c').after('d').all
  Cow Load (0.3ms)  SELECT &quot;kine&quot;.* FROM &quot;kine&quot; WHERE (name &amp;gt; 'a') AND (name &amp;gt; 'b') AND (name &amp;gt; 'c') AND (name &amp;gt; 'd')
=&amp;gt; [#&amp;lt;Cow id: 1, name: &quot;sam&quot;, created_at: &quot;2010-02-25 05:04:04&quot;, updated_at: &quot;2010-02-25 05:04:04&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T05:37:23+00:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.0</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-02-25T05:37:24+00:00</updated-at>
      <user-id type="integer">85255</user-id>
      <version type="integer">5</version>
      <user-name>Samuel Danielson</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>A patch similar to this (but sans test) looks to have been committed with 0be31f85639cf2f536c558819ef3ee45ba7d83a3.

Link here:
http://github.com/rails/rails/commit/0be31f85639cf2f536c558819ef3ee45ba7d83a3

I don't have permission to close the ticket, but this ticket is no longer needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;A patch similar to this (but sans test) looks to have been
committed with 0be31f85639cf2f536c558819ef3ee45ba7d83a3.&lt;/p&gt;
&lt;p&gt;Link here:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/0be31f85639cf2f536c558819ef3ee45ba7d83a3&quot;&gt;
http://github.com/rails/rails/commit/0be31f85639cf2f536c558819ef3ee...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don't have permission to close the ticket, but this ticket is
no longer needed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-05T20:13:15+01:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;3.0&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-04-05T20:13:17+01:00</updated-at>
      <user-id type="integer">28849</user-id>
      <version type="integer">6</version>
      <user-name>ender672</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-06T00:07:07+01:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-04-06T00:07:46+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:43+01:00</created-at>
      <creator-id type="integer">28849</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">3871</number>
      <permalink>chaining-scopes-can-trigger-excessive-db-queries</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3</tag>
      <title>Chaining scopes can trigger excessive db queries</title>
      <updated-at type="datetime">2010-10-15T23:01:43+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>ender672</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3871</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>52f0fdb238a9ddde4ff39cd65cbfc2e764de0411</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-02-10T02:08:15+00:00</created-at>
      <filename>0001-don-t-re-scope-with-current_scoped_methods_when_defi.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">405899</id>
      <size type="integer">2673</size>
      <uploader-id type="integer">28849</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/405899/0001-don-t-re-scope-with-current_scoped_methods_when_defi.patch</url>
    </attachment>
  </attachments>
</ticket>
