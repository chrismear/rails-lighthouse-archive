<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">94458</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-10T10:10:09+00:00</created-at>
  <creator-id type="integer">17407</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">6555</number>
  <permalink>delete_all-doesnt-work-when-chained-with-joins</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>activerecord delete_all patch</tag>
  <title>delete_all doesn't work when chained with joins</title>
  <updated-at type="datetime">2011-03-12T12:03:39+00:00</updated-at>
  <user-id type="integer">94458</user-id>
  <version type="integer">4</version>
  <user-name>Jeff Kreeftmeijer</user-name>
  <creator-name>Akira Matsuda</creator-name>
  <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6555</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Given a case when `Pet.has_many :toys`, the following `delete_all` fails:

@@@ ruby
Pet.joins(:toys).where(:toys =&gt; {:name =&gt; 'Bone'}).delete_all
@@@

bacause current Arel implementation ignores `joins` parameter and tries to execute the following SQL.

@@@ sql
DELETE FROM &quot;pets&quot; WHERE &quot;toys&quot;.&quot;name&quot; = 'Bone'
@@@

Attached is a patch that avoids this error by constructing a subquery only when `delete_all` is chained with `joins`.</original-body>
  <latest-body>Given a case when `Pet.has_many :toys`, the following `delete_all` fails:

@@@ ruby
Pet.joins(:toys).where(:toys =&gt; {:name =&gt; 'Bone'}).delete_all
@@@

bacause current Arel implementation ignores `joins` parameter and tries to execute the following SQL.

@@@ sql
DELETE FROM &quot;pets&quot; WHERE &quot;toys&quot;.&quot;name&quot; = 'Bone'
@@@

Attached is a patch that avoids this error by constructing a subquery only when `delete_all` is chained with `joins`.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given a case when &lt;code&gt;Pet.has_many :toys&lt;/code&gt;, the following
&lt;code&gt;delete_all&lt;/code&gt; fails:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Pet.joins(:toys).where(:toys =&amp;gt; {:name =&amp;gt; 'Bone'}).delete_all&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;bacause current Arel implementation ignores &lt;code&gt;joins&lt;/code&gt;
parameter and tries to execute the following SQL.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;DELETE FROM &quot;pets&quot; WHERE &quot;toys&quot;.&quot;name&quot; = 'Bone'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached is a patch that avoids this error by constructing a
subquery only when &lt;code&gt;delete_all&lt;/code&gt; is chained with
&lt;code&gt;joins&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given a case when `Pet.has_many :toys`, the following `delete_all` fails:

@@@ ruby
Pet.joins(:toys).where(:toys =&gt; {:name =&gt; 'Bone'}).delete_all
@@@

bacause current Arel implementation ignores `joins` parameter and tries to execute the following SQL.

@@@ sql
DELETE FROM &quot;pets&quot; WHERE &quot;toys&quot;.&quot;name&quot; = 'Bone'
@@@

Attached is a patch that avoids this error by constructing a subquery only when `delete_all` is chained with `joins`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given a case when &lt;code&gt;Pet.has_many :toys&lt;/code&gt;, the following
&lt;code&gt;delete_all&lt;/code&gt; fails:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Pet.joins(:toys).where(:toys =&amp;gt; {:name =&amp;gt; 'Bone'}).delete_all&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;bacause current Arel implementation ignores &lt;code&gt;joins&lt;/code&gt;
parameter and tries to execute the following SQL.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;DELETE FROM &quot;pets&quot; WHERE &quot;toys&quot;.&quot;name&quot; = 'Bone'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached is a patch that avoids this error by constructing a
subquery only when &lt;code&gt;delete_all&lt;/code&gt; is chained with
&lt;code&gt;joins&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-10T10:10:09+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6555</number>
      <permalink>delete_all-doesnt-work-when-chained-with-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; bug delete_all edge patch tested</tag>
      <title>delete_all doesn't work when chained with joins</title>
      <updated-at type="datetime">2011-03-10T10:10:12+00:00</updated-at>
      <user-id type="integer">17407</user-id>
      <version type="integer">1</version>
      <user-name>Akira Matsuda</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6555</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-10T18:14:44+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6555</number>
      <permalink>delete_all-doesnt-work-when-chained-with-joins</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; bug delete_all edge patch tested</tag>
      <title>delete_all doesn't work when chained with joins</title>
      <updated-at type="datetime">2011-03-10T18:14:53+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6555</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Akira's patch fixes the issue for me, but the attached test fails because `Pet.joins(:toys).where(:toys =&gt; {:name =&gt; 'Bone'}).count` returns `0`.

Also, I'm not a great fan of the formatting:

@@@
def test_delete_all_with_joins
  assert (count = Pet.joins(:toys).where(:toys =&gt; {:name =&gt; 'Bone'}).count) &gt; 0

  assert_equal count, Pet.joins(:toys).where(:toys =&gt; {:name =&gt; 'Bone'}).delete_all
end
@@@

It would probably be more readable (and understandable) like this:

@@@
def test_delete_all_with_joins
  pets = Pet.joins(:toys).where(:toys =&gt; {:name =&gt; 'Bone'})
  count = pets.count
  
  assert count &gt; 0
  assert_equal count, pets.delete_all
end
@@@

Akira, could you check out if the test fails for you too? What do you think about my code formatting suggestion? Please note I haven't tested the last code snippet, it's just to show how I'd like it to look :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Akira's patch fixes the issue for me, but the attached test
fails because &lt;code&gt;Pet.joins(:toys).where(:toys =&amp;gt; {:name =&amp;gt;
'Bone'}).count&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, I'm not a great fan of the formatting:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_delete_all_with_joins
  assert (count = Pet.joins(:toys).where(:toys =&amp;gt; {:name =&amp;gt; 'Bone'}).count) &amp;gt; 0

  assert_equal count, Pet.joins(:toys).where(:toys =&amp;gt; {:name =&amp;gt; 'Bone'}).delete_all
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It would probably be more readable (and understandable) like
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_delete_all_with_joins
  pets = Pet.joins(:toys).where(:toys =&amp;gt; {:name =&amp;gt; 'Bone'})
  count = pets.count
  
  assert count &amp;gt; 0
  assert_equal count, pets.delete_all
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Akira, could you check out if the test fails for you too? What
do you think about my code formatting suggestion? Please note I
haven't tested the last code snippet, it's just to show how I'd
like it to look :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-12T12:02:25+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6555</number>
      <permalink>delete_all-doesnt-work-when-chained-with-joins</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; bug delete_all edge patch tested</tag>
      <title>delete_all doesn't work when chained with joins</title>
      <updated-at type="datetime">2011-03-12T12:02:36+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">3</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6555</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">94458</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-12T12:03:29+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord rails3\&quot; bug delete_all edge patch tested&quot;
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6555</number>
      <permalink>delete_all-doesnt-work-when-chained-with-joins</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord delete_all patch</tag>
      <title>delete_all doesn't work when chained with joins</title>
      <updated-at type="datetime">2011-03-12T12:03:39+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">4</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jeff Kreeftmeijer</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6555</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9e6bad2e4de1bef6f6c395f5e35c88eb317ca012</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-10T10:10:09+00:00</created-at>
      <filename>delete_all_with_joins.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">951962</id>
      <size type="integer">2189</size>
      <uploader-id type="integer">17407</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/951962/delete_all_with_joins.diff</url>
    </attachment>
  </attachments>
</ticket>
