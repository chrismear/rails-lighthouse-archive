<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-15T04:55:39+01:00</created-at>
  <creator-id type="integer">9853</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1046</number>
  <permalink>http-only-cookies-in-cookiestore</permalink>
  <priority type="integer">4</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>actionpack cookiestore patch security sessions</tag>
  <title>Http only cookies in CookieStore</title>
  <updated-at type="datetime">2009-03-20T22:47:02+00:00</updated-at>
  <user-id type="integer">8964</user-id>
  <version type="integer">9</version>
  <user-name>cainlevy</user-name>
  <creator-name>Pelle Braendgaard</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
  <priority-name nil="true"></priority-name>
  <original-body>While the cookie store is tamper proof. Abusive Javascript could still remove the session cookie or cause a TamperedWithCookie exception.

This patch exposes a configuration parameter :session_http_only which defaults to true. This sets the HttpOnly flag on the cookie from the CookieStore.</original-body>
  <latest-body>While the cookie store is tamper proof. Abusive Javascript could still remove the session cookie or cause a TamperedWithCookie exception.

This patch exposes a configuration parameter :session_http_only which defaults to true. This sets the HttpOnly flag on the cookie from the CookieStore.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;While the cookie store is tamper proof. Abusive Javascript could
still remove the session cookie or cause a TamperedWithCookie
exception.&lt;/p&gt;
&lt;p&gt;This patch exposes a configuration parameter :session_http_only
which defaults to true. This sets the HttpOnly flag on the cookie
from the CookieStore.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While the cookie store is tamper proof. Abusive Javascript could still remove the session cookie or cause a TamperedWithCookie exception.

This patch exposes a configuration parameter :session_http_only which defaults to true. This sets the HttpOnly flag on the cookie from the CookieStore.</body>
      <body-html>&lt;div&gt;&lt;p&gt;While the cookie store is tamper proof. Abusive Javascript could
still remove the session cookie or cause a TamperedWithCookie
exception.&lt;/p&gt;
&lt;p&gt;This patch exposes a configuration parameter :session_http_only
which defaults to true. This sets the HttpOnly flag on the cookie
from the CookieStore.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T04:55:39+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-15T12:32:49+01:00</updated-at>
      <user-id type="integer">9853</user-id>
      <version type="integer">1</version>
      <user-name>Pelle Braendgaard</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This patch has no tests, it would be good to add them.  The last time we changed the session options we had a few glitches as a result.

Also, why change the default?  It seems that may break some applications</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch has no tests, it would be good to add them. The last
time we changed the session options we had a few glitches as a
result.&lt;/p&gt;
&lt;p&gt;Also, why change the default? It seems that may break some
applications&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T10:24:55+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: actionpack
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-15T13:05:42+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'll work on a group of comprehensive tests. I couldn't find a good starting point for testing it, but I will revisit it. It seems like the individual cookie settings for sessions aren't tested very well anywhere.

I can't see why it should break applications, as it is only for the session store which wouldn't be tampered with in JS anyway.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll work on a group of comprehensive tests. I couldn't find a
good starting point for testing it, but I will revisit it. It seems
like the individual cookie settings for sessions aren't tested very
well anywhere.&lt;/p&gt;
&lt;p&gt;I can't see why it should break applications, as it is only for
the session store which wouldn't be tampered with in JS anyway.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T11:16:00+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-15T13:04:58+01:00</updated-at>
      <user-id type="integer">9853</user-id>
      <version type="integer">3</version>
      <user-name>Pelle Braendgaard</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Is there any reason why we shouldn't set the session_id cookie for the other stores to HttpOnly also?

The breakage I'm worried about is people accessing the cookie from their application code rather than actually trying to do anything with it.  f.ex flash movies doing file uploads etc.  At the very least we should document it in the release notes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is there any reason why we shouldn't set the session_id cookie
for the other stores to HttpOnly also?&lt;/p&gt;
&lt;p&gt;The breakage I'm worried about is people accessing the cookie
from their application code rather than actually trying to do
anything with it. f.ex flash movies doing file uploads etc. At the
very least we should document it in the release notes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T13:57:25+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-15T14:01:51+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've updated the patch with support for the rack_process as well as better unit tests. While I was at it I added unit tests for the session_secure flag in the cookie store.

I am in agreement that session_id cookie should also be HttpOnly. The code that actually creates that cookie is deep in standard ruby library. But I think it should be able to be set in rail's session.rb after it calls ruby's initializer. That said, I think that should be a separate patch and ticket, which I'm happy to take on.

There shouldn't be any breakage within the application code as HttpOnly only restricts Javascript access to the session cookie and not the rails application itself. The change should definitely be documented in the release notes though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've updated the patch with support for the rack_process as well
as better unit tests. While I was at it I added unit tests for the
session_secure flag in the cookie store.&lt;/p&gt;
&lt;p&gt;I am in agreement that session_id cookie should also be
HttpOnly. The code that actually creates that cookie is deep in
standard ruby library. But I think it should be able to be set in
rail's session.rb after it calls ruby's initializer. That said, I
think that should be a separate patch and ticket, which I'm happy
to take on.&lt;/p&gt;
&lt;p&gt;There shouldn't be any breakage within the application code as
HttpOnly only restricts Javascript access to the session cookie and
not the rails application itself. The change should definitely be
documented in the release notes though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T20:23:29+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-15T20:23:33+01:00</updated-at>
      <user-id type="integer">9853</user-id>
      <version type="integer">5</version>
      <user-name>Pelle Braendgaard</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>OK, It'd be great if you could look into the other session cookies.

I realise HttpOnly won't break the rails code of an app, but they could possibly be dependent on accessing the cookie through javascript.  However I think that it's probably enough to clearly document this in the Changelog and release notes.

Unfortunately, I get errors trying to apply the patch:

@@@
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  6446  100  6446    0     0   2471      0  0:00:02  0:00:02 --:--:-- 28342
Applying: Added support for http_only cookies in cookie_store
Applying: Added http_only as default to rack_process Added unit tests for secure and http_only cookies to cookie_store
fatal: patch with only garbage at line 100
Patch failed at 0002.
When you have resolved this problem run &quot;git am --resolved&quot;.
If you would prefer to skip this patch, instead run &quot;git am --skip&quot;.
To restore the original branch and stop patching run &quot;git am --abort&quot;.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, It'd be great if you could look into the other session
cookies.&lt;/p&gt;
&lt;p&gt;I realise HttpOnly won't break the rails code of an app, but
they could possibly be dependent on accessing the cookie through
javascript. However I think that it's probably enough to clearly
document this in the Changelog and release notes.&lt;/p&gt;
&lt;p&gt;Unfortunately, I get errors trying to apply the patch:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  6446  100  6446    0     0   2471      0  0:00:02  0:00:02 --:--:-- 28342
Applying: Added support for http_only cookies in cookie_store
Applying: Added http_only as default to rack_process Added unit tests for secure and http_only cookies to cookie_store
fatal: patch with only garbage at line 100
Patch failed at 0002.
When you have resolved this problem run &amp;quot;git am --resolved&amp;quot;.
If you would prefer to skip this patch, instead run &amp;quot;git am --skip&amp;quot;.
To restore the original branch and stop patching run &amp;quot;git am --abort&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-16T09:48:54+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: actionpack cookiestore patch security sessions
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-16T09:48:59+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Hmm. Dunno what went wrong there, anyway I created a new patch that I've actually test applied...

I will start looking at http_only for regular sessions.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hmm. Dunno what went wrong there, anyway I created a new patch
that I've actually test applied...&lt;/p&gt;
&lt;p&gt;I will start looking at http_only for regular sessions.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-16T17:25:18+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-16T17:25:22+01:00</updated-at>
      <user-id type="integer">9853</user-id>
      <version type="integer">7</version>
      <user-name>Pelle Braendgaard</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [7ecb9689b03335ec28958c506b083390f4212d45]) Added support for http_only cookies in cookie_store Added unit tests for secure and http_only cookies in cookie_store

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1046 state:committed]
http://github.com/rails/rails/commit/7ecb9689b03335ec28958c506b083390f4212d45</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [7ecb9689b03335ec28958c506b083390f4212d45]) Added support
for http_only cookies in cookie_store Added unit tests for secure
and http_only cookies in cookie_store&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1046&quot; title=&quot;Ticket #1046&quot;&gt;#1046&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/7ecb9689b03335ec28958c506b083390f4212d45&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-17T12:21:44+01:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2008-09-17T12:21:47+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>You were right Michael -- I was trying to access the cookie from JavaScript to provide a clean solution for Flash uploads. Not sure where this change was noted? The Rails 2.3 release notes mentioned the http_only =&gt; httponly name change, but no change to the default value.

Changing a default is very unexpected in a 2.x release. It would've made more sense in a 3.0. Isn't this the sort of thing that config/initializers/new_rails_defaults.rb is meant for?</body>
      <body-html>&lt;div&gt;&lt;p&gt;You were right Michael -- I was trying to access the cookie from
JavaScript to provide a clean solution for Flash uploads. Not sure
where this change was noted? The Rails 2.3 release notes mentioned
the http_only =&amp;gt; httponly name change, but no change to the
default value.&lt;/p&gt;
&lt;p&gt;Changing a default is very unexpected in a 2.x release. It
would've made more sense in a 3.0. Isn't this the sort of thing
that config/initializers/new_rails_defaults.rb is meant for?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-20T22:47:00+00:00</created-at>
      <creator-id type="integer">9853</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1046</number>
      <permalink>http-only-cookies-in-cookiestore</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack cookiestore patch security sessions</tag>
      <title>Http only cookies in CookieStore</title>
      <updated-at type="datetime">2009-03-20T22:47:02+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">9</version>
      <user-name>cainlevy</user-name>
      <creator-name>Pelle Braendgaard</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1046</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>3e92be885ac7c7cb8ac711726a71a98edefe8196</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-15T04:55:39+01:00</created-at>
      <filename>http_only_sessions.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">45883</id>
      <size type="integer">2654</size>
      <uploader-id type="integer">9853</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/45883/http_only_sessions.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d9e917d31a6b00059c45383aaae1cc8d9e914bdc</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-15T20:23:30+01:00</created-at>
      <filename>http_only_sessions_ws.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">46055</id>
      <size type="integer">6446</size>
      <uploader-id type="integer">9853</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/46055/http_only_sessions_ws.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>fef841233fc5a94c4bb257e5cef8e3846a93625b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-16T17:25:18+01:00</created-at>
      <filename>http_only_sessions.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">46309</id>
      <size type="integer">6070</size>
      <uploader-id type="integer">9853</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/46309/http_only_sessions.diff</url>
    </attachment>
  </attachments>
</ticket>
