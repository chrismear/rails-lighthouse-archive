<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-09T11:38:17+01:00</created-at>
  <creator-id type="integer">17505</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">584</number>
  <permalink>route-matching-in-assert_redirected_to</permalink>
  <priority type="integer">76</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>actionpack regression tests</tag>
  <title>Route matching in assert_redirected_to</title>
  <updated-at type="datetime">2008-07-13T09:42:32+01:00</updated-at>
  <user-id type="integer">141</user-id>
  <version type="integer">8</version>
  <user-name>Michael Koziarski</user-name>
  <creator-name>Andrew Vit</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When testing redirects, the ability to partially match routes broke with the refactoring in commit #c3aaba01. Previously, it was possible to simply assert that a redirect went to another action, or only the parameters that were needed, without needing to specify all of the other parameters to build the route's URL string.

@@@ ruby
def test_create_should_redirect_to_edit
  post :create, valid_form_input
  assert_redirected_to :action =&gt; 'edit'
end
@@@

The above no longer works because the :id parameter isn't included in the assertion. We don't necessarily care what it will be for the purpose of the test. We could find the id by digging into assigns(:model), but that's assuming that the controller puts it there during the edit action. (And we shouldn't be testing the edit action when testing the redirection from create).

The attached test shows the described behaviour.</original-body>
  <latest-body>When testing redirects, the ability to partially match routes broke with the refactoring in commit #c3aaba01. Previously, it was possible to simply assert that a redirect went to another action, or only the parameters that were needed, without needing to specify all of the other parameters to build the route's URL string.

@@@ ruby
def test_create_should_redirect_to_edit
  post :create, valid_form_input
  assert_redirected_to :action =&gt; 'edit'
end
@@@

The above no longer works because the :id parameter isn't included in the assertion. We don't necessarily care what it will be for the purpose of the test. We could find the id by digging into assigns(:model), but that's assuming that the controller puts it there during the edit action. (And we shouldn't be testing the edit action when testing the redirection from create).

The attached test shows the described behaviour.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When testing redirects, the ability to partially match routes broke with the refactoring in commit #c3aaba01. Previously, it was possible to simply assert that a redirect went to another action, or only the parameters that were needed, without needing to specify all of the other parameters to build the route's URL string.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def test_create_should_redirect_to_edit
  post :create, valid_form_input
  assert_redirected_to :action =&amp;gt; 'edit'
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The above no longer works because the :id parameter isn't included in the assertion. We don't necessarily care what it will be for the purpose of the test. We could find the id by digging into assigns(:model), but that's assuming that the controller puts it there during the edit action. (And we shouldn't be testing the edit action when testing the redirection from create).
&lt;/p&gt;&lt;p&gt;
The attached test shows the described behaviour.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>When testing redirects, the ability to partially match routes broke with the refactoring in commit #c3aaba01. Previously, it was possible to simply assert that a redirect went to another action, or only the parameters that were needed, without needing to specify all of the other parameters to build the route's URL string.

@@@ ruby
def test_create_should_redirect_to_edit
  post :create, valid_form_input
  assert_redirected_to :action =&gt; 'edit'
end
@@@

The above no longer works because the :id parameter isn't included in the assertion. We don't necessarily care what it will be for the purpose of the test. We could find the id by digging into assigns(:model), but that's assuming that the controller puts it there during the edit action. (And we shouldn't be testing the edit action when testing the redirection from create).

The attached test shows the described behaviour.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When testing redirects, the ability to partially match routes broke with the refactoring in commit #c3aaba01. Previously, it was possible to simply assert that a redirect went to another action, or only the parameters that were needed, without needing to specify all of the other parameters to build the route's URL string.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def test_create_should_redirect_to_edit
  post :create, valid_form_input
  assert_redirected_to :action =&amp;gt; 'edit'
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The above no longer works because the :id parameter isn't included in the assertion. We don't necessarily care what it will be for the purpose of the test. We could find the id by digging into assigns(:model), but that's assuming that the controller puts it there during the edit action. (And we shouldn't be testing the edit action when testing the redirection from create).
&lt;/p&gt;&lt;p&gt;
The attached test shows the described behaviour.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-09T11:38:17+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-09T11:38:17+01:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">1</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've restored most of this functionality in:

http://github.com/rails/rails/commit/e53f5fe696d692f1985981c34bb311e898fe3c72

I'm still not sold on the test case you submitted originally, you're coupling your assertion to the implementation of your routes.  But hopefully this is a decent enough middle ground. 

If you feel strongly about it, grab me in irc the next time you see me and we can talk about it a little more.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've restored most of this functionality in:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/e53f5fe696d692f1985981c34bb311e898fe3c72&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
I'm still not sold on the test case you submitted originally, you're coupling your assertion to the implementation of your routes.  But hopefully this is a decent enough middle ground.
&lt;/p&gt;&lt;p&gt;
If you feel strongly about it, grab me in irc the next time you see me and we can talk about it a little more.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-12T10:47:14+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-12T10:47:14+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for the quick patch... I was just trying it now, but it doesn't really change what I illustrated. If the controller says redirect_to _string_ and the test doesn't have all the url params derived by the controller, then it can't know the whole url string.

I guess it basically means either don't use url helpers in controllers if you wanna test it, or hack around these limitations in the tests.

I don't know if you're right to say that my example assertion is too coupled to the routes... If anything, I think I'm trying to keep my test concerns within the bounds of the request logic, and leave the implementation of the routes to themselves. 

The whole thing boils down to one's opinion of what we should actually be testing here:

# Should functional tests concern themselves only with the external appearance of the URL, and just verify that we're redirecting to a specific address?

# Or, should we test that the redirect connects to the right endpoint (action &amp; params), ignoring the format of the URLs as a separate issue--an abstraction that's done for the HTTP round-trip, and left up to the routes?

I personally still prefer the idea of comparing the hashes because that represents our functional interface. The url strings are the external representation, and to me the format of those is a separate concern.

Just to show where I'm coming from, I have to admit that I never even considered that I was redirecting to either a string or a params hash... at some point it gets converted to a string anyway, then back to a hash again on the other side. Either way, this black box magically _just works_, so why shouldn't it work in our tests? :-)

It's not a real biggie, but since it worked before I'd like to leave it open for discussion...</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Thanks for the quick patch... I was just trying it now, but it doesn't really change what I illustrated. If the controller says redirect_to &lt;em&gt;string&lt;/em&gt; and the test doesn't have all the url params derived by the controller, then it can't know the whole url string.
&lt;/p&gt;&lt;p&gt;
I guess it basically means either don't use url helpers in controllers if you wanna test it, or hack around these limitations in the tests.
&lt;/p&gt;&lt;p&gt;
I don't know if you're right to say that my example assertion is too coupled to the routes... If anything, I think I'm trying to keep my test concerns within the bounds of the request logic, and leave the implementation of the routes to themselves.
&lt;/p&gt;&lt;p&gt;
The whole thing boils down to one's opinion of what we should actually be testing here:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
Should functional tests concern themselves only with the external appearance of the URL, and just verify that we're redirecting to a specific address?
&lt;/li&gt;&lt;li&gt;
Or, should we test that the redirect connects to the right endpoint (action &amp; params), ignoring the format of the URLs as a separate issue--an abstraction that's done for the HTTP round-trip, and left up to the routes?
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
I personally still prefer the idea of comparing the hashes because that represents our functional interface. The url strings are the external representation, and to me the format of those is a separate concern.
&lt;/p&gt;&lt;p&gt;
Just to show where I'm coming from, I have to admit that I never even considered that I was redirecting to either a string or a params hash... at some point it gets converted to a string anyway, then back to a hash again on the other side. Either way, this black box magically _just works_, so why shouldn't it work in our tests? :-)
&lt;/p&gt;&lt;p&gt;
It's not a real biggie, but since it worked before I'd like to leave it open for discussion...
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-12T22:57:54+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-12T22:57:54+01:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">3</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I still kinda think the assertion that you're making isn't right, especially when you have access to assigns in order to make the full assertion.  

It's not about the appearance of the URL either, you can pass *any* argument to assert_redirected_to which resolves to the same place as they would in redirect_to

@@@
  redirect_to @customer
  assert_redirected_to customer_url(@customer)
  assert_redirected_to customer_url(:id=&gt;@customer)
  assert_redirected_to @customer
  assert_redirected_to :action=&gt;'show', :id=&gt;@customer
@@@

If you change your controller to redirect_to :action=&gt;'edit' it goes somewhere completely different to where it does now.  Which makes me think that the assertion you're making is a little broken.

Similarly if you changed the edit_foo_url named route to point to some other action (ludicrous proposition for edit, but bear with me).  Your controller doesn't change, it's still redirecting to the 'edit' url, but your assertion fails because the action is only specified in routes.rb

With all the tools like mocking and assigns available to you, I can't see a situation where you need to do it the way you were.  But I fully admit I could be missing something.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I still kinda think the assertion that you're making isn't right, especially when you have access to assigns in order to make the full assertion.
&lt;/p&gt;&lt;p&gt;
It's not about the appearance of the URL either, you can pass &lt;strong&gt;any&lt;/strong&gt; argument to assert_redirected_to which resolves to the same place as they would in redirect_to
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  redirect_to @customer
  assert_redirected_to customer_url(@customer)
  assert_redirected_to customer_url(:id=&amp;gt;@customer)
  assert_redirected_to @customer
  assert_redirected_to :action=&amp;gt;'show', :id=&amp;gt;@customer&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
If you change your controller to redirect_to :action=&gt;'edit' it goes somewhere completely different to where it does now.  Which makes me think that the assertion you're making is a little broken.
&lt;/p&gt;&lt;p&gt;
Similarly if you changed the edit_foo_url named route to point to some other action (ludicrous proposition for edit, but bear with me).  Your controller doesn't change, it's still redirecting to the 'edit' url, but your assertion fails because the action is only specified in routes.rb
&lt;/p&gt;&lt;p&gt;
With all the tools like mocking and assigns available to you, I can't see a situation where you need to do it the way you were.  But I fully admit I could be missing something.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-13T07:53:52+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-13T07:53:52+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, let's leave it unless anyone else has an opinion. My closing arguments:

&gt; &quot;you can pass any argument to assert_redirected_to which resolves to the same place as they would in redirect_to&quot;

Understood, but then it's just a question of repeating yourself in the tests exactly, and you can't really isolate the params/route segments that are relevant and ignore the rest.

&gt; &quot;If you change your controller to redirect_to :action=&gt;'edit' it goes somewhere completely different to where it does now.&quot;

Yes, and the assertion would fail as expected, no? Why would you call that broken?

&gt; &quot;Similarly if you changed the edit_foo_url named route to point to some other action...your assertion fails because the action is only specified in routes.rb&quot;

I would prefer that it throw an error if it can't find a new route to the asserted action, instead of a false pass because the URL looks the same but now points to a different action.

&gt; &quot;you have access to assigns&quot;

I still don't like this idea--assigns is for the view on the far side of the redirect. Isn't this like saying &quot;assert that I was redirected to the id that I was redirected to&quot;? 

Mocking will have to be the solution then.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ok, let's leave it unless anyone else has an opinion. My closing arguments:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
&quot;you can pass any argument to assert_redirected_to which resolves to the same place as they would in redirect_to&quot;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;
Understood, but then it's just a question of repeating yourself in the tests exactly, and you can't really isolate the params/route segments that are relevant and ignore the rest.
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
&quot;If you change your controller to redirect_to :action=&gt;'edit' it goes somewhere completely different to where it does now.&quot;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, and the assertion would fail as expected, no? Why would you call that broken?
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
&quot;Similarly if you changed the edit_foo_url named route to point to some other action...your assertion fails because the action is only specified in routes.rb&quot;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;
I would prefer that it throw an error if it can't find a new route to the asserted action, instead of a false pass because the URL looks the same but now points to a different action.
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
&quot;you have access to assigns&quot;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;
I still don't like this idea--assigns is for the view on the far side of the redirect. Isn't this like saying &quot;assert that I was redirected to the id that I was redirected to&quot;?
&lt;/p&gt;&lt;p&gt;
Mocking will have to be the solution then.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-13T09:27:34+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-13T09:27:34+01:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">5</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; I still don't like this idea--assigns is for the view on the far side of the redirect. Isn't this like saying &quot;assert that I was redirected to the id that I was redirected to&quot;? 

I think you misunderstand assigns, it's not for the view on the far side of the redirect, it's for the action that was *just* executed.  So because you have

@@@
  @foo = Foo.create!
  redirect_to @foo
@@@

You can use

@@@
  assert_redirected_to assigns(:foo)
@@@</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;&lt;p&gt;
I still don't like this idea--assigns is for the view on the far side of the redirect. Isn't this like saying &quot;assert that I was redirected to the id that I was redirected to&quot;?
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;
I think you misunderstand assigns, it's not for the view on the far side of the redirect, it's for the action that was &lt;strong&gt;just&lt;/strong&gt; executed.  So because you have
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  @foo = Foo.create!
  redirect_to @foo&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
You can use
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  assert_redirected_to assigns(:foo)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-13T09:31:15+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-13T09:31:15+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks... that does clear up a part of it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Thanks... that does clear up a part of it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-13T09:33:54+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-13T09:33:54+01:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">7</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'll bounce this ticket off a few people and see if they have strong opinions on it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'll bounce this ticket off a few people and see if they have strong opinions on it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-13T09:42:32+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">584</number>
      <permalink>route-matching-in-assert_redirected_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionpack regression tests</tag>
      <title>Route matching in assert_redirected_to</title>
      <updated-at type="datetime">2008-07-13T09:42:32+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">8</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4201bcb35f4bfd39073d1eee1b17c98175bae0c8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-09T11:38:17+01:00</created-at>
      <filename>test_assert_redirected_to.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">31614</id>
      <size type="integer">964</size>
      <uploader-id type="integer">17505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/31614/test_assert_redirected_to.diff</url>
    </attachment>
  </attachments>
</ticket>
