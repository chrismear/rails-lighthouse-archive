From 06024139b6564f7430a980ce508a5f2f83a9d491 Mon Sep 17 00:00:00 2001
From: Matt Darby <matt@matt-darby.com>
Date: Fri, 20 Mar 2009 16:19:10 -0400
Subject: [PATCH 1/6] Added #weekday? and #weekdays_until

---
 .../active_support/core_ext/date/calculations.rb   |   11 +++++++++++
 activesupport/test/core_ext/date_ext_test.rb       |   13 +++++++++++++
 2 files changed, 24 insertions(+), 0 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/date/calculations.rb b/activesupport/lib/active_support/core_ext/date/calculations.rb
index 7f94da0..34a6fb8 100644
--- a/activesupport/lib/active_support/core_ext/date/calculations.rb
+++ b/activesupport/lib/active_support/core_ext/date/calculations.rb
@@ -47,6 +47,11 @@ module ActiveSupport #:nodoc:
           self > ::Date.current
         end
 
+        # Tells whether the Date object is a weekday
+        def weekday?
+          (1..5).include?(wday)
+        end
+
         # Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the day (0:00)
         # and then subtracts the specified number of seconds
         def ago(seconds)
@@ -215,6 +220,12 @@ module ActiveSupport #:nodoc:
         end
         alias :at_end_of_year :end_of_year
 
+        # Returns the number of weekdays until a future Date
+        def weekdays_until(date)
+          return 0 if date <= self
+          (self...date).select{|day| day.weekday?}.size
+        end
+
         # Convenience method which returns a new Date/DateTime representing the time 1 day ago
         def yesterday
           self - 1
diff --git a/activesupport/test/core_ext/date_ext_test.rb b/activesupport/test/core_ext/date_ext_test.rb
index 1001868..70fb96a 100644
--- a/activesupport/test/core_ext/date_ext_test.rb
+++ b/activesupport/test/core_ext/date_ext_test.rb
@@ -231,6 +231,19 @@ class DateExtCalculationsTest < Test::Unit::TestCase
     assert_equal true, Date.new(2000,1,2).future?
   end
 
+  def test_weekday
+    Date.stubs(:today).returns(Date.new(2000, 1, 1))
+    assert_equal false, Date.today.weekday?
+    
+    Date.stubs(:today).returns(Date.new(2000, 1, 3))
+    assert_equal true, Date.today.weekday?
+  end
+  
+  def test_weekdays_until
+    Date.stubs(:today).returns(Date.new(2000, 1, 1))
+    assert_equal 5, Date.today.weekdays_until(Date.new(2000, 1, 8))
+  end
+
   def test_current_returns_date_today_when_zone_default_not_set
     with_env_tz 'US/Central' do
       Time.stubs(:now).returns Time.local(1999, 12, 31, 23)
-- 
1.6.2


From 09cafb78960f7afc022584a3176861b70c4ba62e Mon Sep 17 00:00:00 2001
From: Matt Darby <matt@matt-darby.com>
Date: Fri, 20 Mar 2009 16:19:39 -0400
Subject: [PATCH 2/6] Added #weekdays_from and #weekdays_ago

---
 .../lib/active_support/core_ext/numeric/time.rb    |   30 ++++++++++++++++++++
 activesupport/test/core_ext/time_ext_test.rb       |   16 ++++++++++
 2 files changed, 46 insertions(+), 0 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/numeric/time.rb b/activesupport/lib/active_support/core_ext/numeric/time.rb
index bc7f180..fd975b0 100644
--- a/activesupport/lib/active_support/core_ext/numeric/time.rb
+++ b/activesupport/lib/active_support/core_ext/numeric/time.rb
@@ -75,6 +75,36 @@ module ActiveSupport #:nodoc:
 
         # Reads best without arguments:  10.minutes.from_now
         alias :from_now :since
+        
+        # Returns a Date that is n number of weekdays in the future of a given Date
+        def weekdays_from(date = ::Time.now.to_date)
+          x = 0
+          curr_date = nil
+
+          until x == self
+            curr_date = date + 1.days
+            x += 1 if curr_date.weekday?
+            date = curr_date
+          end
+
+          curr_date
+        end
+        alias :weekdays_from_now :weekdays_from
+
+        # Returns a Date that is n number of weekdays in the past from a given Date
+        def weekdays_ago(date = ::Time.now.to_date)
+          x = 0
+          curr_date = nil
+
+          until x == self
+            curr_date = date - 1.days
+            x += 1 if curr_date.weekday?
+            date = curr_date
+          end
+
+          curr_date
+        end
+        
       end
     end
   end
diff --git a/activesupport/test/core_ext/time_ext_test.rb b/activesupport/test/core_ext/time_ext_test.rb
index c085552..0009bf2 100644
--- a/activesupport/test/core_ext/time_ext_test.rb
+++ b/activesupport/test/core_ext/time_ext_test.rb
@@ -354,6 +354,22 @@ class TimeExtCalculationsTest < Test::Unit::TestCase
     assert_equal Time.local(2005,3,2,10,10,10),  Time.local(2005,2,28,10,10,10).tomorrow.tomorrow
   end
 
+  def test_weekdays_from
+    assert_equal 5.weekdays_from(Date.new(2000, 1, 1)), Date.new(2000, 1, 7)
+  end
+
+  def test_weekdays_from_now
+    Time.stubs(:now).returns(Date.new(2000, 1, 1))
+    assert_equal 5.weekdays_from_now, Date.new(2000, 1, 7)
+  end
+
+  def test_weekdays_ago
+    Time.stubs(:now).returns(Date.new(2000, 1, 1))
+    assert_equal 5.weekdays_ago, Date.new(1999, 12, 27)
+  
+    assert_equal 5.weekdays_ago(Date.new(1999, 12, 27)), Date.new(1999, 12, 20)
+  end
+
   def test_change
     assert_equal Time.local(2006,2,22,15,15,10), Time.local(2005,2,22,15,15,10).change(:year => 2006)
     assert_equal Time.local(2005,6,22,15,15,10), Time.local(2005,2,22,15,15,10).change(:month => 6)
-- 
1.6.2


From 91b9943db99ad2a4e8d6db00b16e4d227d2527f5 Mon Sep 17 00:00:00 2001
From: Matt Darby <matt@matt-darby.com>
Date: Mon, 30 Mar 2009 13:49:21 -0400
Subject: [PATCH 3/6] weekdays_from and weekdays_ago now handle negative values, tightened up.

---
 .../lib/active_support/core_ext/numeric/time.rb    |   24 ++++++++-----
 activesupport/test/core_ext/numeric_ext_test.rb    |   36 ++++++++++++++++++++
 2 files changed, 50 insertions(+), 10 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/numeric/time.rb b/activesupport/lib/active_support/core_ext/numeric/time.rb
index fd975b0..6b339ee 100644
--- a/activesupport/lib/active_support/core_ext/numeric/time.rb
+++ b/activesupport/lib/active_support/core_ext/numeric/time.rb
@@ -76,30 +76,34 @@ module ActiveSupport #:nodoc:
         # Reads best without arguments:  10.minutes.from_now
         alias :from_now :since
         
-        # Returns a Date that is n number of weekdays in the future of a given Date
-        def weekdays_from(date = ::Time.now.to_date)
+        # Returns a Time object that is n number of weekdays in the future of a given Date
+        def weekdays_from(time = ::Time.now)
+          # -5.weekdays_from(time) == 5.weekdays_ago(time)
+          return self.abs.weekdays_ago(time) if self < 0
+          
           x = 0
-          curr_date = nil
+          curr_date = time
 
           until x == self
-            curr_date = date + 1.days
+            curr_date += 1.days
             x += 1 if curr_date.weekday?
-            date = curr_date
           end
 
           curr_date
         end
         alias :weekdays_from_now :weekdays_from
 
-        # Returns a Date that is n number of weekdays in the past from a given Date
-        def weekdays_ago(date = ::Time.now.to_date)
+        # Returns a Time object that is n number of weekdays in the past from a given Date
+        def weekdays_ago(time = ::Time.now)
+          # -5.weekdays_ago(time) == 5.weekdays_from(time)
+          return self.abs.weekdays_from(time) if self < 0
+          
           x = 0
-          curr_date = nil
+          curr_date = time
 
           until x == self
-            curr_date = date - 1.days
+            curr_date -= 1.days
             x += 1 if curr_date.weekday?
-            date = curr_date
           end
 
           curr_date
diff --git a/activesupport/test/core_ext/numeric_ext_test.rb b/activesupport/test/core_ext/numeric_ext_test.rb
index 5401ed7..6f6aab4 100644
--- a/activesupport/test/core_ext/numeric_ext_test.rb
+++ b/activesupport/test/core_ext/numeric_ext_test.rb
@@ -85,6 +85,42 @@ class NumericExtTimeAndDateTimeTest < Test::Unit::TestCase
     assert_equal Time.utc(2005,2,28,15,15,10), Time.utc(2004,2,29,15,15,10) + 1.year
     assert_equal DateTime.civil(2005,2,28,15,15,10), DateTime.civil(2004,2,29,15,15,10) + 1.year
   end
+
+  def test_weekdays_from
+    assert_equal 5.weekdays_from(Date.new(2000, 1, 1).beginning_of_day), Date.new(2000, 1, 7).beginning_of_day
+  end
+
+  def test_weekdays_from_now
+    Time.stubs(:now).returns(Date.new(2000, 1, 1).beginning_of_day)
+    assert_equal 5.weekdays_from_now, Date.new(2000, 1, 7).beginning_of_day
+  end
+
+  def test_zero_weekdays_from_now
+    Time.stubs(:now).returns(Date.new(2000, 1, 1).beginning_of_day)
+    assert_equal 0.weekdays_from_now, Date.new(2000, 1, 1).beginning_of_day
+  end
+
+  def test_negative_weekdays_from_now
+    Time.stubs(:now).returns(Date.new(2000, 1, 1).beginning_of_day)
+    assert_equal -5.weekdays_from_now, Date.new(1999, 12, 27).beginning_of_day
+  end
+
+  def test_weekdays_ago
+    Time.stubs(:now).returns(Date.new(2000, 1, 1).beginning_of_day)
+    assert_equal 5.weekdays_ago, Date.new(1999, 12, 27).beginning_of_day
+  
+    assert_equal 5.weekdays_ago(Date.new(1999, 12, 27).beginning_of_day), Date.new(1999, 12, 20).beginning_of_day
+  end
+
+  def test_zero_weekdays_ago
+    Time.stubs(:now).returns(Date.new(2000, 1, 1).beginning_of_day)
+    assert_equal 0.weekdays_ago, Date.new(2000, 1, 1).beginning_of_day
+  end
+
+  def test_negative_weekdays_ago
+    Time.stubs(:now).returns(Date.new(2000, 1, 1).beginning_of_day)
+    assert_equal -5.weekdays_ago, Date.new(2000, 1, 7).beginning_of_day
+  end
 end
 
 class NumericExtDateTest < Test::Unit::TestCase
-- 
1.6.2


From 633e18f1f94b634fa4c471551c592adbc85adad9 Mon Sep 17 00:00:00 2001
From: Matt Darby <matt@matt-darby.com>
Date: Mon, 30 Mar 2009 13:50:37 -0400
Subject: [PATCH 4/6] Added #weekday?

---
 .../core_ext/date_time/calculations.rb             |    5 +++++
 activesupport/test/core_ext/date_time_ext_test.rb  |    5 +++++
 2 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/date_time/calculations.rb b/activesupport/lib/active_support/core_ext/date_time/calculations.rb
index 0099431..977339a 100644
--- a/activesupport/lib/active_support/core_ext/date_time/calculations.rb
+++ b/activesupport/lib/active_support/core_ext/date_time/calculations.rb
@@ -35,6 +35,11 @@ module ActiveSupport #:nodoc:
           self > ::DateTime.current
         end
 
+        # Tells whether the Date object is a weekday
+        def weekday?
+          (1..5).include?(wday)
+        end
+
         # Seconds since midnight: DateTime.now.seconds_since_midnight
         def seconds_since_midnight
           self.sec + (self.min * 60) + (self.hour * 3600)
diff --git a/activesupport/test/core_ext/date_time_ext_test.rb b/activesupport/test/core_ext/date_time_ext_test.rb
index 45eb52c..1719875 100644
--- a/activesupport/test/core_ext/date_time_ext_test.rb
+++ b/activesupport/test/core_ext/date_time_ext_test.rb
@@ -349,6 +349,11 @@ class DateTimeExtCalculationsTest < Test::Unit::TestCase
     assert_equal 946684800.0, DateTime.civil(1999,12,31,19,0,0,Rational(-5,24)).to_f
   end
 
+  def test_weekday?
+    assert_equal false, DateTime.civil(2000, 1, 1, 0, 0, 0).weekday?
+    assert_equal true, DateTime.civil(2000, 1, 3, 0, 0, 0).weekday?
+  end
+
   protected
     def with_env_tz(new_tz = 'US/Eastern')
       old_tz, ENV['TZ'] = ENV['TZ'], new_tz
-- 
1.6.2


From 98763f1e4b41ef277503a1c35e8e3ecef7e5c642 Mon Sep 17 00:00:00 2001
From: Matt Darby <matt@matt-darby.com>
Date: Mon, 30 Mar 2009 13:50:57 -0400
Subject: [PATCH 5/6] Added #weekday?, #weekdays_until

---
 .../active_support/core_ext/time/calculations.rb   |   12 +++++++++++-
 activesupport/test/core_ext/time_ext_test.rb       |   17 +++++++----------
 2 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/time/calculations.rb b/activesupport/lib/active_support/core_ext/time/calculations.rb
index 5ed750a..296a520 100644
--- a/activesupport/lib/active_support/core_ext/time/calculations.rb
+++ b/activesupport/lib/active_support/core_ext/time/calculations.rb
@@ -74,6 +74,11 @@ module ActiveSupport #:nodoc:
           self > ::Time.current
         end
 
+        # Tells whether the Time object is a weekday
+        def weekday?
+          (1..5).include?(wday)
+        end
+
         # Seconds since midnight: Time.now.seconds_since_midnight
         def seconds_since_midnight
           self.to_i - self.change(:hour => 0).to_i + (self.usec/1.0e+6)
@@ -167,7 +172,6 @@ module ActiveSupport #:nodoc:
           years_since(1)
         end
 
-
         # Short-hand for months_ago(1)
         def last_month
           months_ago(1)
@@ -261,6 +265,12 @@ module ActiveSupport #:nodoc:
           advance(:days => 1)
         end
 
+        # Returns the number of weekdays until a future Date
+        def weekdays_until(date)
+          return 0 if date <= self.to_date
+          (self.to_date...date).select{|day| day.weekday?}.size
+        end
+
         def plus_with_duration(other) #:nodoc:
           if ActiveSupport::Duration === other
             other.since(self)
diff --git a/activesupport/test/core_ext/time_ext_test.rb b/activesupport/test/core_ext/time_ext_test.rb
index 0009bf2..e624194 100644
--- a/activesupport/test/core_ext/time_ext_test.rb
+++ b/activesupport/test/core_ext/time_ext_test.rb
@@ -354,20 +354,17 @@ class TimeExtCalculationsTest < Test::Unit::TestCase
     assert_equal Time.local(2005,3,2,10,10,10),  Time.local(2005,2,28,10,10,10).tomorrow.tomorrow
   end
 
-  def test_weekdays_from
-    assert_equal 5.weekdays_from(Date.new(2000, 1, 1)), Date.new(2000, 1, 7)
+  def test_weekday?
+    assert_equal false, Date.new(2000, 1, 1).beginning_of_day.weekday?
+    assert_equal true, Date.new(2000, 1, 3).beginning_of_day.weekday?
   end
 
-  def test_weekdays_from_now
-    Time.stubs(:now).returns(Date.new(2000, 1, 1))
-    assert_equal 5.weekdays_from_now, Date.new(2000, 1, 7)
+  def test_weekdays_until
+    assert_equal 5, Date.new(2000, 1, 1).beginning_of_day.weekdays_until(Date.new(2000, 1, 8))
   end
-
-  def test_weekdays_ago
-    Time.stubs(:now).returns(Date.new(2000, 1, 1))
-    assert_equal 5.weekdays_ago, Date.new(1999, 12, 27)
   
-    assert_equal 5.weekdays_ago(Date.new(1999, 12, 27)), Date.new(1999, 12, 20)
+  def test_reversed_weekdays_until
+    assert_equal 0, Date.new(2000, 1, 8).beginning_of_day.weekdays_until(Date.new(2000, 1, 1))
   end
 
   def test_change
-- 
1.6.2


From dda133950e573fce01cc20cd2d4022a4d74293b0 Mon Sep 17 00:00:00 2001
From: Matt Darby <matt@matt-darby.com>
Date: Mon, 30 Mar 2009 13:51:31 -0400
Subject: [PATCH 6/6] Smartened up tests

---
 activesupport/test/core_ext/date_ext_test.rb |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/activesupport/test/core_ext/date_ext_test.rb b/activesupport/test/core_ext/date_ext_test.rb
index 70fb96a..50c61f0 100644
--- a/activesupport/test/core_ext/date_ext_test.rb
+++ b/activesupport/test/core_ext/date_ext_test.rb
@@ -231,17 +231,17 @@ class DateExtCalculationsTest < Test::Unit::TestCase
     assert_equal true, Date.new(2000,1,2).future?
   end
 
-  def test_weekday
-    Date.stubs(:today).returns(Date.new(2000, 1, 1))
-    assert_equal false, Date.today.weekday?
-    
-    Date.stubs(:today).returns(Date.new(2000, 1, 3))
-    assert_equal true, Date.today.weekday?
+  def test_weekday?
+    assert_equal false, Date.new(2000, 1, 1).weekday?
+    assert_equal true, Date.new(2000, 1, 3).weekday?
   end
   
   def test_weekdays_until
-    Date.stubs(:today).returns(Date.new(2000, 1, 1))
-    assert_equal 5, Date.today.weekdays_until(Date.new(2000, 1, 8))
+    assert_equal 5, Date.new(2000, 1, 1).weekdays_until(Date.new(2000, 1, 8))
+  end
+  
+  def test_reversed_weekdays_until
+    assert_equal 0, Date.new(2000, 1, 8).weekdays_until(Date.new(2000, 1, 1))
   end
 
   def test_current_returns_date_today_when_zone_default_not_set
-- 
1.6.2

