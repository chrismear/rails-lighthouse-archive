<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-17T14:01:48+00:00</created-at>
  <creator-id type="integer">10626</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6590</number>
  <permalink>transaction-callbacks-arent-called-by-transactional-fixtures</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>activerecord callbacks fixtures transactions</tag>
  <title>Transaction Callbacks Aren't Called by Transactional Fixtures</title>
  <updated-at type="datetime">2011-03-17T14:01:50+00:00</updated-at>
  <user-id type="integer">10626</user-id>
  <version type="integer">1</version>
  <user-name>Tyler Hunt</user-name>
  <creator-name>Tyler Hunt</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6590</url>
  <priority-name nil="true"></priority-name>
  <original-body>Because the logic for handling transaction callbacks (`after_commit` and `after_rollback`) is tied up inside `ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction`, and because the transactional fixtures are implemented by manually calling `begin_db_transaction` and `rollback_db_transaction` rather than using a `transaction` block, the transaction callbacks aren't executed at the end of the test run as should be expected.</original-body>
  <latest-body>Because the logic for handling transaction callbacks (`after_commit` and `after_rollback`) is tied up inside `ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction`, and because the transactional fixtures are implemented by manually calling `begin_db_transaction` and `rollback_db_transaction` rather than using a `transaction` block, the transaction callbacks aren't executed at the end of the test run as should be expected.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Because the logic for handling transaction callbacks
(&lt;code&gt;after_commit&lt;/code&gt; and &lt;code&gt;after_rollback&lt;/code&gt;) is tied
up inside
&lt;code&gt;ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction&lt;/code&gt;,
and because the transactional fixtures are implemented by manually
calling &lt;code&gt;begin_db_transaction&lt;/code&gt; and
&lt;code&gt;rollback_db_transaction&lt;/code&gt; rather than using a
&lt;code&gt;transaction&lt;/code&gt; block, the transaction callbacks aren't
executed at the end of the test run as should be expected.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Because the logic for handling transaction callbacks (`after_commit` and `after_rollback`) is tied up inside `ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction`, and because the transactional fixtures are implemented by manually calling `begin_db_transaction` and `rollback_db_transaction` rather than using a `transaction` block, the transaction callbacks aren't executed at the end of the test run as should be expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Because the logic for handling transaction callbacks
(&lt;code&gt;after_commit&lt;/code&gt; and &lt;code&gt;after_rollback&lt;/code&gt;) is tied
up inside
&lt;code&gt;ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction&lt;/code&gt;,
and because the transactional fixtures are implemented by manually
calling &lt;code&gt;begin_db_transaction&lt;/code&gt; and
&lt;code&gt;rollback_db_transaction&lt;/code&gt; rather than using a
&lt;code&gt;transaction&lt;/code&gt; block, the transaction callbacks aren't
executed at the end of the test run as should be expected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-17T14:01:48+00:00</created-at>
      <creator-id type="integer">10626</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6590</number>
      <permalink>transaction-callbacks-arent-called-by-transactional-fixtures</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord callbacks fixtures transactions</tag>
      <title>Transaction Callbacks Aren't Called by Transactional Fixtures</title>
      <updated-at type="datetime">2011-03-17T14:01:50+00:00</updated-at>
      <user-id type="integer">10626</user-id>
      <version type="integer">1</version>
      <user-name>Tyler Hunt</user-name>
      <creator-name>Tyler Hunt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6590</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
