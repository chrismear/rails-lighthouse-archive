From b4d26d62f58c9fe8c300b1ce1a1cb4dc67e9d105 Mon Sep 17 00:00:00 2001
From: Jon Crawford <mail@joncrawford.com>
Date: Fri, 5 Sep 2008 01:50:38 -0500
Subject: [PATCH] Added optgroups_with_options_for_select helper to form_options_helper for wrapping option tags in optgroups.

---
 .../lib/action_view/helpers/form_options_helper.rb |   46 +++++++++++++++++++-
 .../test/template/form_options_helper_test.rb      |   29 ++++++++++++
 2 files changed, 74 insertions(+), 1 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_options_helper.rb b/actionpack/lib/action_view/helpers/form_options_helper.rb
index 9aae945..2873d08 100644
--- a/actionpack/lib/action_view/helpers/form_options_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_options_helper.rb
@@ -268,7 +268,51 @@ module ActionView
           options_for_select += '</optgroup>'
         end
       end
-
+      
+      # Returns a string of <tt><option></tt> tags, like <tt>options_from_collection_for_select</tt>, but
+      # wraps them with <tt><optgroup></tt> tags.
+      #
+      # Parameters:
+      # * +labels+ - An array of strings representing the <tt><optgroup></tt> text.
+      # * +options+ - An array of arrays each containing the options for a corresponding optgroup.
+      # * +selected_key+ - A value equal to the +value+ attribute for one of the <tt><option></tt> tags,
+      #   which will have the +selected+ attribute set. Corresponds to the return value of one of the calls
+      #   to +option_key_method+. If +nil+, no selection is made.
+      # * +prompt+ - set to true or a prompt string. When the select element doesn’t have a value yet, this
+      #    prepends an option with a generic prompt — "Please select" — or the given prompt string.
+      #
+      #
+      # Sample usage:
+      #   labels = ['North America','Europe']
+      #   groups = [['United States','Canada'],['Denmark','Germany','France']]
+      #   optgroups_with_options_for_select(labels,groups)
+      #
+      # Possible output:
+      #   <optgroup label="North America">
+      #     <option value="United States">United States</option>
+      #     <option value="Canada">Canada</option>
+      #   </optgroup>
+      #   <optgroup label="Europe">
+      #     <option value="Denmark">Denmark</option>
+      #     <option value="Germany">Germany</option>
+      #     <option value="France">France</option>
+      #   </optgroup>
+      #
+      # <b>Note:</b> Only the <tt><optgroup></tt> and <tt><option></tt> tags are returned, so you still have to
+      # wrap the output in an appropriate <tt><select></tt> tag.
+      def optgroups_with_options_for_select(labels, groups, selected_key = nil, prompt = nil)
+        return "<option>Error: Sizes don't match.</option>" if labels.size != groups.size
+        str = String.new
+        unless prompt.nil?
+           prompt.kind_of?(String) ? prompt : 'Please select'
+           str += content_tag :option, prompt, :value => ""
+        end
+        (0..labels.size-1).each do |i|
+           str += content_tag :optgroup, options_for_select(groups[i], selected_key), :label => labels[i]
+        end
+        str
+      end
+      
       # Returns a string of option tags for pretty much any time zone in the
       # world. Supply a TimeZone name as +selected+ to have it marked as the
       # selected option tag. You can also supply an array of TimeZone objects
diff --git a/actionpack/test/template/form_options_helper_test.rb b/actionpack/test/template/form_options_helper_test.rb
index a33eb85..507f962 100644
--- a/actionpack/test/template/form_options_helper_test.rb
+++ b/actionpack/test/template/form_options_helper_test.rb
@@ -141,6 +141,35 @@ uses_mocha "FormOptionsHelperTest" do
         option_groups_from_collection_for_select(@continents, "countries", "continent_name", "country_id", "country_name", "dk")
       )
     end
+    
+    def test_optgroups_with_options_for_select
+      assert_dom_equal(
+        "<optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option value=\"Cowboy Hat\">Cowboy Hat</option></optgroup>",
+        optgroups_with_options_for_select(["Hats"], [["Baseball Cap","Cowboy Hat"]])
+      )
+    end
+
+    def test_optgroups_with_options_for_select_with_selected
+      assert_dom_equal(
+          "<optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option selected=\"selected\" value=\"Cowboy Hat\">Cowboy Hat</option></optgroup>",
+          optgroups_with_options_for_select(["Hats"], [["Baseball Cap","Cowboy Hat"]], "Cowboy Hat")
+      )
+    end
+
+    def test_optgroups_with_options_for_select_with_prompt
+       assert_dom_equal(
+          "<option value=\"\">Choose a product...</option><optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option value=\"Cowboy Hat\">Cowboy Hat</option></optgroup>",
+          optgroups_with_options_for_select(["Hats"], [["Baseball Cap","Cowboy Hat"]], nil, "Choose a product...")
+        )
+    end
+
+    def test_optgroups_with_options_for_select_bad_arguments
+       assert_dom_equal(
+            "<option>Error: Sizes don't match.</option>",
+            optgroups_with_options_for_select(["Hats"], ["Baseball Cap","Cowboy Hat"])
+          )
+
+    end
 
     def test_time_zone_options_no_parms
       opts = time_zone_options_for_select
-- 
1.5.4.5


From 9b50a482f9cc7f8f4d783dcbccc28cae5286b139 Mon Sep 17 00:00:00 2001
From: Jon Crawford <mail@joncrawford.com>
Date: Fri, 5 Sep 2008 10:18:04 -0500
Subject: [PATCH] Fixed typos in optgroups_with_options_for_select and added a test.

---
 .../lib/action_view/helpers/form_options_helper.rb |    6 +++---
 .../test/template/form_options_helper_test.rb      |    7 +++++++
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_options_helper.rb b/actionpack/lib/action_view/helpers/form_options_helper.rb
index 2873d08..bab320b 100644
--- a/actionpack/lib/action_view/helpers/form_options_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_options_helper.rb
@@ -269,15 +269,15 @@ module ActionView
         end
       end
       
-      # Returns a string of <tt><option></tt> tags, like <tt>options_from_collection_for_select</tt>, but
+      # Returns a string of <tt><option></tt> tags, like <tt>options_for_select</tt>, but
       # wraps them with <tt><optgroup></tt> tags.
       #
       # Parameters:
       # * +labels+ - An array of strings representing the <tt><optgroup></tt> text.
       # * +options+ - An array of arrays each containing the options for a corresponding optgroup.
       # * +selected_key+ - A value equal to the +value+ attribute for one of the <tt><option></tt> tags,
-      #   which will have the +selected+ attribute set. Corresponds to the return value of one of the calls
-      #   to +option_key_method+. If +nil+, no selection is made.
+      #   which will have the +selected+ attribute set. Note: It is possible for this value to match multiple options
+      #   as you might have the same option in multiple groups.  Each will then get <tt>selected="selected"</tt>.
       # * +prompt+ - set to true or a prompt string. When the select element doesn’t have a value yet, this
       #    prepends an option with a generic prompt — "Please select" — or the given prompt string.
       #
diff --git a/actionpack/test/template/form_options_helper_test.rb b/actionpack/test/template/form_options_helper_test.rb
index 507f962..b784e7c 100644
--- a/actionpack/test/template/form_options_helper_test.rb
+++ b/actionpack/test/template/form_options_helper_test.rb
@@ -170,6 +170,13 @@ uses_mocha "FormOptionsHelperTest" do
           )
 
     end
+    
+    def test_optgroups_with_options_for_select_with_multiple_selected
+        assert_dom_equal(
+            "<optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option selected=\"selected\" value=\"Cowboy\">Cowboy</option></optgroup><optgroup label=\"Boots\"><option value=\"Snow\">Snow</option>\n<option selected=\"selected\" value=\"Cowboy\">Cowboy</option></optgroup>",
+             optgroups_with_options_for_select(["Hats","Boots"], [["Baseball Cap","Cowboy"],["Snow","Cowboy"]],"Cowboy")
+           )
+    end
 
     def test_time_zone_options_no_parms
       opts = time_zone_options_for_select
-- 
1.5.4.5


From b3a5dcfdeda437cb762b4e09fcc763a7151dc7bd Mon Sep 17 00:00:00 2001
From: Jon Crawford <mail@joncrawford.com>
Date: Mon, 8 Sep 2008 10:58:59 -0500
Subject: [PATCH] Changed to a single argument, either Array or Hash. Changed to grouped_options_for_select

---
 .../lib/action_view/helpers/form_options_helper.rb |   40 +++++++++++++-------
 .../test/template/form_options_helper_test.rb      |   37 +++++-------------
 2 files changed, 37 insertions(+), 40 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_options_helper.rb b/actionpack/lib/action_view/helpers/form_options_helper.rb
index bab320b..88d3dde 100644
--- a/actionpack/lib/action_view/helpers/form_options_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_options_helper.rb
@@ -273,8 +273,9 @@ module ActionView
       # wraps them with <tt><optgroup></tt> tags.
       #
       # Parameters:
-      # * +labels+ - An array of strings representing the <tt><optgroup></tt> text.
-      # * +options+ - An array of arrays each containing the options for a corresponding optgroup.
+      # * +grouped_options+ - Accepts a nested array or hash of strings.  The first value serves as the 
+      #   <tt><optgroup></tt> label while the second value must be an array of options. The second value can be a
+      #   nested array of text-value pairs.  See <tt>options_for_select</tt> for more info.
       # * +selected_key+ - A value equal to the +value+ attribute for one of the <tt><option></tt> tags,
       #   which will have the +selected+ attribute set. Note: It is possible for this value to match multiple options
       #   as you might have the same option in multiple groups.  Each will then get <tt>selected="selected"</tt>.
@@ -282,33 +283,44 @@ module ActionView
       #    prepends an option with a generic prompt — "Please select" — or the given prompt string.
       #
       #
-      # Sample usage:
-      #   labels = ['North America','Europe']
-      #   groups = [['United States','Canada'],['Denmark','Germany','France']]
-      #   optgroups_with_options_for_select(labels,groups)
+      # Sample usage (Array):
+      #   grouped_options = [
+      #    ['North America',
+      #      ['United States','Canada']],
+      #    ['Europe',
+      #      ['Denmark','Germany','France']]
+      #   ]
+      #   grouped_options_for_select(grouped_options)
+      #
+      # Sample usage (Hash):
+      #   grouped_options = {
+      #    'North America' => ['United States', 'Canada'],
+      #    'Europe' => ['Denmark','Germany','France']
+      #   }
+      #   grouped_options_for_select(grouped_options)
       #
       # Possible output:
-      #   <optgroup label="North America">
-      #     <option value="United States">United States</option>
-      #     <option value="Canada">Canada</option>
-      #   </optgroup>
       #   <optgroup label="Europe">
       #     <option value="Denmark">Denmark</option>
       #     <option value="Germany">Germany</option>
       #     <option value="France">France</option>
       #   </optgroup>
+      #   <optgroup label="North America">
+      #     <option value="United States">United States</option>
+      #     <option value="Canada">Canada</option>
+      #   </optgroup>
       #
       # <b>Note:</b> Only the <tt><optgroup></tt> and <tt><option></tt> tags are returned, so you still have to
       # wrap the output in an appropriate <tt><select></tt> tag.
-      def optgroups_with_options_for_select(labels, groups, selected_key = nil, prompt = nil)
-        return "<option>Error: Sizes don't match.</option>" if labels.size != groups.size
+      def grouped_options_for_select(grouped_options, selected_key = nil, prompt = nil)
         str = String.new
         unless prompt.nil?
            prompt.kind_of?(String) ? prompt : 'Please select'
            str += content_tag :option, prompt, :value => ""
         end
-        (0..labels.size-1).each do |i|
-           str += content_tag :optgroup, options_for_select(groups[i], selected_key), :label => labels[i]
+        grouped_options = grouped_options.sort if grouped_options.is_a? Hash
+        for group in grouped_options
+           str += content_tag :optgroup, options_for_select(group[1], selected_key), :label => group[0]
         end
         str
       end
diff --git a/actionpack/test/template/form_options_helper_test.rb b/actionpack/test/template/form_options_helper_test.rb
index b784e7c..609b248 100644
--- a/actionpack/test/template/form_options_helper_test.rb
+++ b/actionpack/test/template/form_options_helper_test.rb
@@ -142,42 +142,27 @@ uses_mocha "FormOptionsHelperTest" do
       )
     end
     
-    def test_optgroups_with_options_for_select
+    def test_grouped_options_for_select_with_array
       assert_dom_equal(
         "<optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option value=\"Cowboy Hat\">Cowboy Hat</option></optgroup>",
-        optgroups_with_options_for_select(["Hats"], [["Baseball Cap","Cowboy Hat"]])
+        grouped_options_for_select([["Hats", ["Baseball Cap","Cowboy Hat"]]])
       )
     end
 
-    def test_optgroups_with_options_for_select_with_selected
+    def test_grouped_options_for_select_with_selected_and_prompt
       assert_dom_equal(
-          "<optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option selected=\"selected\" value=\"Cowboy Hat\">Cowboy Hat</option></optgroup>",
-          optgroups_with_options_for_select(["Hats"], [["Baseball Cap","Cowboy Hat"]], "Cowboy Hat")
+          "<option value=\"\">Choose a product...</option><optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option selected=\"selected\" value=\"Cowboy Hat\">Cowboy Hat</option></optgroup>",
+          grouped_options_for_select([["Hats", ["Baseball Cap","Cowboy Hat"]]], "Cowboy Hat", "Choose a product...")
       )
     end
-
-    def test_optgroups_with_options_for_select_with_prompt
-       assert_dom_equal(
-          "<option value=\"\">Choose a product...</option><optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option value=\"Cowboy Hat\">Cowboy Hat</option></optgroup>",
-          optgroups_with_options_for_select(["Hats"], [["Baseball Cap","Cowboy Hat"]], nil, "Choose a product...")
-        )
-    end
-
-    def test_optgroups_with_options_for_select_bad_arguments
-       assert_dom_equal(
-            "<option>Error: Sizes don't match.</option>",
-            optgroups_with_options_for_select(["Hats"], ["Baseball Cap","Cowboy Hat"])
-          )
-
-    end
     
-    def test_optgroups_with_options_for_select_with_multiple_selected
-        assert_dom_equal(
-            "<optgroup label=\"Hats\"><option value=\"Baseball Cap\">Baseball Cap</option>\n<option selected=\"selected\" value=\"Cowboy\">Cowboy</option></optgroup><optgroup label=\"Boots\"><option value=\"Snow\">Snow</option>\n<option selected=\"selected\" value=\"Cowboy\">Cowboy</option></optgroup>",
-             optgroups_with_options_for_select(["Hats","Boots"], [["Baseball Cap","Cowboy"],["Snow","Cowboy"]],"Cowboy")
-           )
+    def test_optgroups_with_with_options_with_hash
+      assert_dom_equal(
+         "<optgroup label=\"Europe\"><option value=\"Denmark\">Denmark</option>\n<option value=\"Germany\">Germany</option></optgroup><optgroup label=\"North America\"><option value=\"United States\">United States</option>\n<option value=\"Canada\">Canada</option></optgroup>",
+         grouped_options_for_select({'North America' => ['United States','Canada'], 'Europe' => ['Denmark','Germany']})
+      )
     end
-
+ 
     def test_time_zone_options_no_parms
       opts = time_zone_options_for_select
       assert_dom_equal "<option value=\"A\">A</option>\n" +
-- 
1.5.4.5

