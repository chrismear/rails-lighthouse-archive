<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-27T05:00:18+01:00</created-at>
  <creator-id type="integer">30933</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3276</number>
  <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
  <priority type="integer">154043</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activeresource patch</tag>
  <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
  <updated-at type="datetime">2011-02-02T18:40:03+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">10</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jordan Brough</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
  <priority-name nil="true"></priority-name>
  <original-body>The exception raised here:

http://github.com/rails/rails/commit/328ba3b333777bbc1269cbe0e9f590c845006c9d#L0R911

is invalid because `ResourceInvalid` is a `ConnectionError` and it requires an HTTP response object (not an ActiveResource object).

Trying to inspect the raise `ActiveResource::ResourceInvalid` exception would result in an exception:

@@@ ruby
&gt;&gt; begin
?&gt;   raise(ActiveResource::ResourceInvalid.new(ActiveResource::Base.new))
&gt;&gt; rescue =&gt; e
&gt;&gt;   puts e
&gt;&gt; end
NoMethodError: undefined method `code' for #&lt;ActiveResource::Base:0x35edeb0&gt;
	from /Users/jordan/rails/web2/vendor/rails/activeresource/lib/active_resource/base.rb:1073:in `method_missing'
	from /Users/jordan/rails/web2/vendor/plugins/animoto_extensions/lib/rails/active_resource/base.rb:6:in `to_s'
	from (irb):4:in `puts'
	from (irb):4
@@@

So we really need to supply the response object, but we'll only have a response object to supply if the validation failure was on the remote side.  If client-side validations fail then no http request is made.

The problem is that ActiveResource::ResourceInvalid is trying to be like `ActiveRecord::RecordInvalid `and representing any kind of validation error (a good thing) but it's really set up to represent the occurrence of a '422 Unprocessable Entity'.

My solution is to separate out these concerns -- 422's should be wrapped up as `ActiveResource::UnprocessableEntity` exceptions and client/remote validation failures should be wrapped up `as ActiveResource::ResourceInvalid` errors.

Attached is a patch that does this.  

(Note: Since ActiveResource is different from ActiveRecord in that we actually have to try to save the object before we can tell if remote validations failed, I'm thinking that `save!` should be defined first in the mixed-in `ActiveResource::Validations` module.  This is reflected in the patch.)</original-body>
  <latest-body>The exception raised here:

http://github.com/rails/rails/commit/328ba3b333777bbc1269cbe0e9f590c845006c9d#L0R911

is invalid because `ResourceInvalid` is a `ConnectionError` and it requires an HTTP response object (not an ActiveResource object).

Trying to inspect the raise `ActiveResource::ResourceInvalid` exception would result in an exception:

@@@ ruby
&gt;&gt; begin
?&gt;   raise(ActiveResource::ResourceInvalid.new(ActiveResource::Base.new))
&gt;&gt; rescue =&gt; e
&gt;&gt;   puts e
&gt;&gt; end
NoMethodError: undefined method `code' for #&lt;ActiveResource::Base:0x35edeb0&gt;
	from /Users/jordan/rails/web2/vendor/rails/activeresource/lib/active_resource/base.rb:1073:in `method_missing'
	from /Users/jordan/rails/web2/vendor/plugins/animoto_extensions/lib/rails/active_resource/base.rb:6:in `to_s'
	from (irb):4:in `puts'
	from (irb):4
@@@

So we really need to supply the response object, but we'll only have a response object to supply if the validation failure was on the remote side.  If client-side validations fail then no http request is made.

The problem is that ActiveResource::ResourceInvalid is trying to be like `ActiveRecord::RecordInvalid `and representing any kind of validation error (a good thing) but it's really set up to represent the occurrence of a '422 Unprocessable Entity'.

My solution is to separate out these concerns -- 422's should be wrapped up as `ActiveResource::UnprocessableEntity` exceptions and client/remote validation failures should be wrapped up `as ActiveResource::ResourceInvalid` errors.

Attached is a patch that does this.  

(Note: Since ActiveResource is different from ActiveRecord in that we actually have to try to save the object before we can tell if remote validations failed, I'm thinking that `save!` should be defined first in the mixed-in `ActiveResource::Validations` module.  This is reflected in the patch.)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The exception raised here:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/328ba3b333777bbc1269cbe0e9f590c845006c9d#L0R911&quot;&gt;
http://github.com/rails/rails/commit/328ba3b333777bbc1269cbe0e9f590...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;is invalid because &lt;code&gt;ResourceInvalid&lt;/code&gt; is a
&lt;code&gt;ConnectionError&lt;/code&gt; and it requires an HTTP response
object (not an ActiveResource object).&lt;/p&gt;
&lt;p&gt;Trying to inspect the raise
&lt;code&gt;ActiveResource::ResourceInvalid&lt;/code&gt; exception would result
in an exception:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; begin
?&amp;gt;   raise(ActiveResource::ResourceInvalid.new(ActiveResource::Base.new))
&amp;gt;&amp;gt; rescue =&amp;gt; e
&amp;gt;&amp;gt;   puts e
&amp;gt;&amp;gt; end
NoMethodError: undefined method `code' for #&amp;lt;ActiveResource::Base:0x35edeb0&amp;gt;
    from /Users/jordan/rails/web2/vendor/rails/activeresource/lib/active_resource/base.rb:1073:in `method_missing'
    from /Users/jordan/rails/web2/vendor/plugins/animoto_extensions/lib/rails/active_resource/base.rb:6:in `to_s'
    from (irb):4:in `puts'
    from (irb):4&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So we really need to supply the response object, but we'll only
have a response object to supply if the validation failure was on
the remote side. If client-side validations fail then no http
request is made.&lt;/p&gt;
&lt;p&gt;The problem is that ActiveResource::ResourceInvalid is trying to
be like &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt;and representing
any kind of validation error (a good thing) but it's really set up
to represent the occurrence of a '422 Unprocessable Entity'.&lt;/p&gt;
&lt;p&gt;My solution is to separate out these concerns -- 422's should be
wrapped up as &lt;code&gt;ActiveResource::UnprocessableEntity&lt;/code&gt;
exceptions and client/remote validation failures should be wrapped
up &lt;code&gt;as ActiveResource::ResourceInvalid&lt;/code&gt; errors.&lt;/p&gt;
&lt;p&gt;Attached is a patch that does this.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;(Note: Since ActiveResource is different from ActiveRecord in
that we actually have to try to save the object before we can tell
if remote validations failed, I'm thinking that &lt;code&gt;save!&lt;/code&gt;
should be defined first in the mixed-in
&lt;code&gt;ActiveResource::Validations&lt;/code&gt; module. This is reflected
in the patch.)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The exception raised here:

@@@ ruby
def save!
  save || raise(ResourceInvalid.new(self))
end
@@@

(on master in activeresource/lib/active_resource/base.rb - see http://github.com/rails/rails/commit/328ba3b333777bbc1269cbe0e9f590c845006c9d#L0R911)

is invalid because `ResourceInvalid` is a `ConnectionError` and it requires an HTTP response object (not an ActiveResource object).

Trying to inspect the raised `ResourceInvalid` exception, for example, would result in an exception:

@@@ ruby
&gt;&gt; begin
?&gt;   raise(ActiveResource::ResourceInvalid.new(ActiveResource::Base.new))
&gt;&gt; rescue =&gt; e
&gt;&gt;   puts e
&gt;&gt; end
NoMethodError: undefined method `code' for #&lt;ActiveResource::Base:0x35edeb0&gt;
	from /Users/jordan/rails/web2/vendor/rails/activeresource/lib/active_resource/base.rb:1073:in `method_missing'
	from /Users/jordan/rails/web2/vendor/plugins/animoto_extensions/lib/rails/active_resource/base.rb:6:in `to_s'
	from (irb):4:in `puts'
	from (irb):4
@@@

So we really need to supply the response object, but we'll only have a response object to supply if the validation failure was on the remote side.  If client-side validations fail then no http request is made.

The problem is that ResourceInvalid is set up to represent the occurrence of a '422 Unprocessable Entity' response, not a general validation failure.

My solution is to separate out these concerns -- 422's should be wrapped up as `UnprocessableEntity` exceptions and client/remote validation failures should be wrapped up as `ResourceInvalid` errors.

Attached is a patch that does this.  

(Note: Since ActiveResource is different from ActiveRecord in that we actually have to try to save the object before we can tell if remote validations failed, I'm thinking that `save!` should be defined first in the mixed-in `ActiveResource::Validations` module.  This is reflected in the patch.)</body>
      <body-html>&lt;div&gt;&lt;p&gt;The exception raised here:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def save!
  save || raise(ResourceInvalid.new(self))
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(on master in activeresource/lib/active_resource/base.rb - see
&lt;a href=
&quot;http://github.com/rails/rails/commit/328ba3b333777bbc1269cbe0e9f590c845006c9d#L0R911&quot;&gt;
http://github.com/rails/rails/commit/328ba3b333777bbc1269cbe0e9f590...&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;is invalid because &lt;code&gt;ResourceInvalid&lt;/code&gt; is a
&lt;code&gt;ConnectionError&lt;/code&gt; and it requires an HTTP response
object (not an ActiveResource object).&lt;/p&gt;
&lt;p&gt;Trying to inspect the raised &lt;code&gt;ResourceInvalid&lt;/code&gt;
exception, for example, would result in an exception:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; begin
?&amp;gt;   raise(ActiveResource::ResourceInvalid.new(ActiveResource::Base.new))
&amp;gt;&amp;gt; rescue =&amp;gt; e
&amp;gt;&amp;gt;   puts e
&amp;gt;&amp;gt; end
NoMethodError: undefined method `code' for #&amp;lt;ActiveResource::Base:0x35edeb0&amp;gt;
    from /Users/jordan/rails/web2/vendor/rails/activeresource/lib/active_resource/base.rb:1073:in `method_missing'
    from /Users/jordan/rails/web2/vendor/plugins/animoto_extensions/lib/rails/active_resource/base.rb:6:in `to_s'
    from (irb):4:in `puts'
    from (irb):4&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So we really need to supply the response object, but we'll only
have a response object to supply if the validation failure was on
the remote side. If client-side validations fail then no http
request is made.&lt;/p&gt;
&lt;p&gt;The problem is that ResourceInvalid is set up to represent the
occurrence of a '422 Unprocessable Entity' response, not a general
validation failure.&lt;/p&gt;
&lt;p&gt;My solution is to separate out these concerns -- 422's should be
wrapped up as &lt;code&gt;UnprocessableEntity&lt;/code&gt; exceptions and
client/remote validation failures should be wrapped up as
&lt;code&gt;ResourceInvalid&lt;/code&gt; errors.&lt;/p&gt;
&lt;p&gt;Attached is a patch that does this.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;(Note: Since ActiveResource is different from ActiveRecord in
that we actually have to try to save the object before we can tell
if remote validations failed, I'm thinking that &lt;code&gt;save!&lt;/code&gt;
should be defined first in the mixed-in
&lt;code&gt;ActiveResource::Validations&lt;/code&gt; module. This is reflected
in the patch.)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T05:00:18+01:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;&quot; activeresource patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2009-09-28T13:52:07+01:00</updated-at>
      <user-id type="integer">30933</user-id>
      <version type="integer">1</version>
      <user-name>Jordan Brough</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Forgot the patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Forgot the patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T05:04:40+01:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;\&quot; activeresource patch&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2009-09-27T05:04:45+01:00</updated-at>
      <user-id type="integer">30933</user-id>
      <version type="integer">2</version>
      <user-name>Jordan Brough</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T05:26:52+01:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activeresource patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bugmash patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2009-09-27T05:26:52+01:00</updated-at>
      <user-id type="integer">30933</user-id>
      <version type="integer">3</version>
      <user-name>Jordan Brough</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(hoping it's ok to tag this as bugmash myself)</body>
      <body-html>&lt;div&gt;&lt;p&gt;(hoping it's ok to tag this as bugmash myself)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T05:31:16+01:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bugmash patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2009-09-27T05:31:20+01:00</updated-at>
      <user-id type="integer">30933</user-id>
      <version type="integer">4</version>
      <user-name>Jordan Brough</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 verified

Patch applies, tests run successfully.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified&lt;/p&gt;
&lt;p&gt;Patch applies, tests run successfully.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T19:21:29+01:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bugmash patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2009-09-27T19:21:32+01:00</updated-at>
      <user-id type="integer">71145</user-id>
      <version type="integer">5</version>
      <user-name>Blue Box Stephen</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Which version? I cannot apply this patch to 2.3 Stable.

-1 without a version. +1 if you change it to apply to 2.3 stable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Which version? I cannot apply this patch to 2.3 Stable.&lt;/p&gt;
&lt;p&gt;-1 without a version. +1 if you change it to apply to 2.3
stable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T21:49:53+01:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bugmash patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2009-09-27T21:49:57+01:00</updated-at>
      <user-id type="integer">15704</user-id>
      <version type="integer">6</version>
      <user-name>Gaius Centus Novus</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@gaius: `save!` for ActiveResource exists only on master so the patch is for master.  As a separate issue I'd be willing to backport the whole `ActiveResource::Base#save!` concept to 2-3-stable if there's interest in that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@gaius: &lt;code&gt;save!&lt;/code&gt; for ActiveResource exists only on
master so the patch is for master. As a separate issue I'd be
willing to backport the whole
&lt;code&gt;ActiveResource::Base#save!&lt;/code&gt; concept to 2-3-stable if
there's interest in that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-28T14:50:29+01:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource bugmash patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2009-09-28T15:52:49+01:00</updated-at>
      <user-id type="integer">30933</user-id>
      <version type="integer">7</version>
      <user-name>Jordan Brough</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:19+00:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activeresource bugmash patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2010-02-12T12:46:19+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">8</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:55:19+00:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">154043</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activeresource patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2011-02-02T18:40:03+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:55:20+00:00</created-at>
      <creator-id type="integer">30933</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3276</number>
      <permalink>patch-activeresourcesave-exception-is-invalid-causes-an-nomethoderror-exception</permalink>
      <priority type="integer">154043</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activeresource patch</tag>
      <title>[PATCH] ActiveResource#save! exception is invalid (causes an NoMethodError exception)</title>
      <updated-at type="datetime">2011-02-02T18:39:45+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jordan Brough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3276</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>10305bd00bb36ea8b7998b32b70056ba3ad90c95</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-27T05:04:40+01:00</created-at>
      <filename>resource-invalid-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279573</id>
      <size type="integer">8711</size>
      <uploader-id type="integer">30933</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279573/resource-invalid-fix.diff</url>
    </attachment>
  </attachments>
</ticket>
