From 42fb11cde177fc7a7e9ac6245bc7d7f6b6c7d17f Mon Sep 17 00:00:00 2001
From: Gregor Schmidt <ruby@schmidtwisser.de>
Date: Tue, 26 Jan 2010 12:02:31 +0100
Subject: [PATCH] Adding custom yaml (de-)serialization for OrderedHash (#3608)

---
 activesupport/lib/active_support/ordered_hash.rb |   23 +++++++++++++++++++++-
 activesupport/test/ordered_hash_test.rb          |   15 ++++++++++++++
 2 files changed, 37 insertions(+), 1 deletions(-)

diff --git a/activesupport/lib/active_support/ordered_hash.rb b/activesupport/lib/active_support/ordered_hash.rb
index b492648..582eb9a 100644
--- a/activesupport/lib/active_support/ordered_hash.rb
+++ b/activesupport/lib/active_support/ordered_hash.rb
@@ -2,7 +2,8 @@
 module ActiveSupport
   # Hash is ordered in Ruby 1.9!
   if RUBY_VERSION >= '1.9'
-    OrderedHash = ::Hash
+    class OrderedHash < ::Hash #:nodoc:
+    end
   else
     class OrderedHash < Hash #:nodoc:
       def initialize(*args, &block)
@@ -138,4 +139,24 @@ module ActiveSupport
       end
     end
   end
+
+  class OrderedHash #:nodoc:
+    def to_yaml_type
+      "!tag:yaml.org,2002:omap"
+    end
+
+    def to_yaml(opts = {})
+      YAML.quick_emit(self, opts) do |out|
+        out.seq(taguri, to_yaml_style) do |seq|
+          each do |k, v|
+            seq.add(k => v)
+          end
+        end
+      end
+    end
+  end
+
+  YAML.add_builtin_type("omap") do |type, val|
+    ActiveSupport::OrderedHash[*val.map(&:to_a).flatten]
+  end
 end
diff --git a/activesupport/test/ordered_hash_test.rb b/activesupport/test/ordered_hash_test.rb
index 1521279..72f2afd 100644
--- a/activesupport/test/ordered_hash_test.rb
+++ b/activesupport/test/ordered_hash_test.rb
@@ -198,4 +198,19 @@ class OrderedHashTest < Test::Unit::TestCase
     assert_same original, @ordered_hash
     assert_equal @other_ordered_hash.keys, @ordered_hash.keys
   end
+
+  def test_each_after_yaml_serialization
+    values = []
+    @deserialized_ordered_hash = YAML::load(YAML::dump(@ordered_hash))
+
+    @deserialized_ordered_hash.each {|key, value| values << value}
+    assert_equal @values, values
+  end
+
+  def test_order_after_yaml_serialization
+    @deserialized_ordered_hash = YAML::load(YAML::dump(@ordered_hash))
+
+    assert_equal @keys,   @deserialized_ordered_hash.keys
+    assert_equal @values, @deserialized_ordered_hash.values
+  end
 end
-- 
1.6.0.2

