<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-27T16:23:37+00:00</created-at>
  <creator-id type="integer">18019</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6481</number>
  <permalink>activerecord-postgresql-floats-returned-as-strings-sqlite-floats-returned-as-floats</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;active record&quot; float parsing postgresql returning string</tag>
  <title>ActiveRecord: PostgreSQL floats returned as Strings; SQLite floats returned as floats</title>
  <updated-at type="datetime">2011-02-28T10:59:25+00:00</updated-at>
  <user-id type="integer">112843</user-id>
  <version type="integer">4</version>
  <user-name>Utkarsh Kukreti</user-name>
  <creator-name>Hans Engel</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6481</url>
  <priority-name nil="true"></priority-name>
  <original-body>I've been working on a Rails app and just switched over to PostgreSQL for use on Heroku. The view for the index of my site calls the `round` method for some float values returned from the database. This worked fine when I was using SQLite &#8212; ActiveRecord returned Ruby `Float`s for columns that held float values in the database. I switched to PostgreSQL and got this error, however, after migrating / seeding the database and visiting the homepage:
@@@
2011-02-27T08:14:00-08:00 app[web.1]: ActionView::Template::Error (undefined method `round' for &quot;86.0000000000000000&quot;:String):
2011-02-27T08:14:00-08:00 app[web.1]:     16: 		%tr
2011-02-27T08:14:00-08:00 app[web.1]:     17: 			%td= link_to p[0].layout + &quot; / &quot; + p[0].keyboard, :controller =&gt; 'profiles', :action =&gt; 'view', :id =&gt; p[0].id
2011-02-27T08:14:00-08:00 app[web.1]:     18: 			%td= p[1]
2011-02-27T08:14:00-08:00 app[web.1]:     19: 			%td= p[2].round
2011-02-27T08:14:00-08:00 app[web.1]:     20: 			%td= p[3].round
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:19:in `_app_views_home_index_haml__1618257786_23737684188900_0'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `each'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `_app_views_home_index_haml__1618257786_23737684188900_0'
@@@

I'm guessing this is a bug in how ActiveRecord handles PostgreSQL data types?</original-body>
  <latest-body>I've been working on a Rails app and just switched over to PostgreSQL for use on Heroku. The view for the index of my site calls the `round` method for some float values returned from the database. This worked fine when I was using SQLite &#8212; ActiveRecord returned Ruby `Float`s for columns that held float values in the database. I switched to PostgreSQL and got this error, however, after migrating / seeding the database and visiting the homepage:
@@@
2011-02-27T08:14:00-08:00 app[web.1]: ActionView::Template::Error (undefined method `round' for &quot;86.0000000000000000&quot;:String):
2011-02-27T08:14:00-08:00 app[web.1]:     16: 		%tr
2011-02-27T08:14:00-08:00 app[web.1]:     17: 			%td= link_to p[0].layout + &quot; / &quot; + p[0].keyboard, :controller =&gt; 'profiles', :action =&gt; 'view', :id =&gt; p[0].id
2011-02-27T08:14:00-08:00 app[web.1]:     18: 			%td= p[1]
2011-02-27T08:14:00-08:00 app[web.1]:     19: 			%td= p[2].round
2011-02-27T08:14:00-08:00 app[web.1]:     20: 			%td= p[3].round
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:19:in `_app_views_home_index_haml__1618257786_23737684188900_0'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `each'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `_app_views_home_index_haml__1618257786_23737684188900_0'
@@@

I'm guessing this is a bug in how ActiveRecord handles PostgreSQL data types?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've been working on a Rails app and just switched over to
PostgreSQL for use on Heroku. The view for the index of my site
calls the &lt;code&gt;round&lt;/code&gt; method for some float values returned
from the database. This worked fine when I was using SQLite &amp;#8212;
ActiveRecord returned Ruby &lt;code&gt;Float&lt;/code&gt;s for columns that
held float values in the database. I switched to PostgreSQL and got
this error, however, after migrating / seeding the database and
visiting the homepage:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;2011-02-27T08:14:00-08:00 app[web.1]: ActionView::Template::Error (undefined method `round' for &quot;86.0000000000000000&quot;:String):
2011-02-27T08:14:00-08:00 app[web.1]:     16:       %tr
2011-02-27T08:14:00-08:00 app[web.1]:     17:           %td= link_to p[0].layout + &quot; / &quot; + p[0].keyboard, :controller =&amp;gt; 'profiles', :action =&amp;gt; 'view', :id =&amp;gt; p[0].id
2011-02-27T08:14:00-08:00 app[web.1]:     18:           %td= p[1]
2011-02-27T08:14:00-08:00 app[web.1]:     19:           %td= p[2].round
2011-02-27T08:14:00-08:00 app[web.1]:     20:           %td= p[3].round
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:19:in `_app_views_home_index_haml__1618257786_23737684188900_0'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `each'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `_app_views_home_index_haml__1618257786_23737684188900_0'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm guessing this is a bug in how ActiveRecord handles
PostgreSQL data types?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've been working on a Rails app and just switched over to PostgreSQL for use on Heroku. The view for the index of my site calls the `round` method for some float values returned from the database. This worked fine when I was using SQLite &#8212; ActiveRecord returned Ruby `Float`s for columns that held float values in the database. I switched to PostgreSQL and got this error, however, after migrating / seeding the database and visiting the homepage:
@@@
2011-02-27T08:14:00-08:00 app[web.1]: ActionView::Template::Error (undefined method `round' for &quot;86.0000000000000000&quot;:String):
2011-02-27T08:14:00-08:00 app[web.1]:     16: 		%tr
2011-02-27T08:14:00-08:00 app[web.1]:     17: 			%td= link_to p[0].layout + &quot; / &quot; + p[0].keyboard, :controller =&gt; 'profiles', :action =&gt; 'view', :id =&gt; p[0].id
2011-02-27T08:14:00-08:00 app[web.1]:     18: 			%td= p[1]
2011-02-27T08:14:00-08:00 app[web.1]:     19: 			%td= p[2].round
2011-02-27T08:14:00-08:00 app[web.1]:     20: 			%td= p[3].round
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:19:in `_app_views_home_index_haml__1618257786_23737684188900_0'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `each'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `_app_views_home_index_haml__1618257786_23737684188900_0'
@@@

I'm guessing this is a bug in how ActiveRecord handles PostgreSQL data types?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've been working on a Rails app and just switched over to
PostgreSQL for use on Heroku. The view for the index of my site
calls the &lt;code&gt;round&lt;/code&gt; method for some float values returned
from the database. This worked fine when I was using SQLite &amp;#8212;
ActiveRecord returned Ruby &lt;code&gt;Float&lt;/code&gt;s for columns that
held float values in the database. I switched to PostgreSQL and got
this error, however, after migrating / seeding the database and
visiting the homepage:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;2011-02-27T08:14:00-08:00 app[web.1]: ActionView::Template::Error (undefined method `round' for &quot;86.0000000000000000&quot;:String):
2011-02-27T08:14:00-08:00 app[web.1]:     16:       %tr
2011-02-27T08:14:00-08:00 app[web.1]:     17:           %td= link_to p[0].layout + &quot; / &quot; + p[0].keyboard, :controller =&amp;gt; 'profiles', :action =&amp;gt; 'view', :id =&amp;gt; p[0].id
2011-02-27T08:14:00-08:00 app[web.1]:     18:           %td= p[1]
2011-02-27T08:14:00-08:00 app[web.1]:     19:           %td= p[2].round
2011-02-27T08:14:00-08:00 app[web.1]:     20:           %td= p[3].round
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:19:in `_app_views_home_index_haml__1618257786_23737684188900_0'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `each'
2011-02-27T08:14:00-08:00 app[web.1]:   app/views/home/index.haml:15:in `_app_views_home_index_haml__1618257786_23737684188900_0'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm guessing this is a bug in how ActiveRecord handles
PostgreSQL data types?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-27T16:23:37+00:00</created-at>
      <creator-id type="integer">18019</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6481</number>
      <permalink>activerecord-postgresql-floats-returned-as-strings-sqlite-floats-returned-as-floats</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; float parsing postgresql returning string</tag>
      <title>ActiveRecord: PostgreSQL floats returned as Strings; SQLite floats returned as floats</title>
      <updated-at type="datetime">2011-02-27T16:23:40+00:00</updated-at>
      <user-id type="integer">18019</user-id>
      <version type="integer">1</version>
      <user-name>Hans Engel</user-name>
      <creator-name>Hans Engel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6481</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What do you have in your `schema.rb`? A similar piece of code works fine for me on Heroku/PostgreSQL</body>
      <body-html>&lt;div&gt;&lt;p&gt;What do you have in your &lt;code&gt;schema.rb&lt;/code&gt;? A similar piece
of code works fine for me on Heroku/PostgreSQL&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-27T21:15:34+00:00</created-at>
      <creator-id type="integer">18019</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6481</number>
      <permalink>activerecord-postgresql-floats-returned-as-strings-sqlite-floats-returned-as-floats</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; float parsing postgresql returning string</tag>
      <title>ActiveRecord: PostgreSQL floats returned as Strings; SQLite floats returned as floats</title>
      <updated-at type="datetime">2011-02-27T21:15:40+00:00</updated-at>
      <user-id type="integer">112843</user-id>
      <version type="integer">2</version>
      <user-name>Utkarsh Kukreti</user-name>
      <creator-name>Hans Engel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6481</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is the relevant table in `schema.rb`:
@@@ ruby
  create_table &quot;records&quot;, :force =&gt; true do |t|
    t.integer  &quot;user_id&quot;
    t.integer  &quot;profile_id&quot;
    t.integer  &quot;words&quot;
    t.integer  &quot;duration&quot;
    t.integer  &quot;wpm&quot;
    t.integer  &quot;cpm&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end
@@@
The columns `wpm` and `cpm` were being returned as `String`s. Maybe because I was using an integer type in my migrations instead of specifying a float type?</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is the relevant table in &lt;code&gt;schema.rb&lt;/code&gt;:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  create_table &quot;records&quot;, :force =&amp;gt; true do |t|
    t.integer  &quot;user_id&quot;
    t.integer  &quot;profile_id&quot;
    t.integer  &quot;words&quot;
    t.integer  &quot;duration&quot;
    t.integer  &quot;wpm&quot;
    t.integer  &quot;cpm&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The columns &lt;code&gt;wpm&lt;/code&gt; and &lt;code&gt;cpm&lt;/code&gt; were being
returned as &lt;code&gt;String&lt;/code&gt;s. Maybe because I was using an
integer type in my migrations instead of specifying a float
type?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-27T21:19:55+00:00</created-at>
      <creator-id type="integer">18019</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6481</number>
      <permalink>activerecord-postgresql-floats-returned-as-strings-sqlite-floats-returned-as-floats</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; float parsing postgresql returning string</tag>
      <title>ActiveRecord: PostgreSQL floats returned as Strings; SQLite floats returned as floats</title>
      <updated-at type="datetime">2011-02-27T21:19:58+00:00</updated-at>
      <user-id type="integer">18019</user-id>
      <version type="integer">3</version>
      <user-name>Hans Engel</user-name>
      <creator-name>Hans Engel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6481</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes. That should have been `t.float`. I'm guessing the data was imported as-is into PostgreSQL, which made the fields behave like String, as they had an invalid value for their column. Could you try again with `t.float`?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes. That should have been &lt;code&gt;t.float&lt;/code&gt;. I'm guessing
the data was imported as-is into PostgreSQL, which made the fields
behave like String, as they had an invalid value for their column.
Could you try again with &lt;code&gt;t.float&lt;/code&gt;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-28T10:59:19+00:00</created-at>
      <creator-id type="integer">18019</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6481</number>
      <permalink>activerecord-postgresql-floats-returned-as-strings-sqlite-floats-returned-as-floats</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; float parsing postgresql returning string</tag>
      <title>ActiveRecord: PostgreSQL floats returned as Strings; SQLite floats returned as floats</title>
      <updated-at type="datetime">2011-02-28T10:59:25+00:00</updated-at>
      <user-id type="integer">112843</user-id>
      <version type="integer">4</version>
      <user-name>Utkarsh Kukreti</user-name>
      <creator-name>Hans Engel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6481</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
