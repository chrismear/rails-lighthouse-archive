<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-13T06:52:10+00:00</created-at>
  <creator-id type="integer">192</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1785</number>
  <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>multipart patch rack</tag>
  <title>Empty file uploads should not come through as empty Tempfiles</title>
  <updated-at type="datetime">2011-01-13T06:52:10+00:00</updated-at>
  <user-id type="integer">192</user-id>
  <version type="integer">15</version>
  <user-name>Mislav</user-name>
  <creator-name>Mislav</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
  <priority-name nil="true"></priority-name>
  <original-body>We're using Paperclip for file uploads and recent edge Rails rendered our user profile forms unusable.

File uploads don't break our application when there was an actual file upload; what breaks Paperclip is the case when *nothing was selected* in the file input. The form is still sent with multipart encoding and parsed by Rack, which creates a Tempfile *regardless* of whether some data was received or not.

The result of Rack processing a single file field is a hash with these keys: {:filename, :type, :name, :tempfile, :head}.

Rails further processes this in ActionController::UrlEncodedPairParser.get_typed_value. When it sees the above formatted hash, it replaces it with the Tempfile object it references and applies other metadata, like filename, as properties of this object.

In short, when a &quot;user[avatar]&quot; file field was sent empty, *older* Rails version would receive nothing:

@@@ ruby
params[:user][:avatar]  # =&gt; nil
@@@

*Now* a Tempfile is received in any case:

@@@ ruby
params[:user][:avatar]  # =&gt; #&lt;File:/tmp/RackMultipart.xxxyyy&gt;
@@@

So naturally Paperclip thinks a file was uploaded and explodes because this object has nil value `original_filename` and a size of 0.

**A solution** is to check for Tempfile size and not let it through if it's zero.</original-body>
  <latest-body>We're using Paperclip for file uploads and recent edge Rails rendered our user profile forms unusable.

File uploads don't break our application when there was an actual file upload; what breaks Paperclip is the case when *nothing was selected* in the file input. The form is still sent with multipart encoding and parsed by Rack, which creates a Tempfile *regardless* of whether some data was received or not.

The result of Rack processing a single file field is a hash with these keys: {:filename, :type, :name, :tempfile, :head}.

Rails further processes this in ActionController::UrlEncodedPairParser.get_typed_value. When it sees the above formatted hash, it replaces it with the Tempfile object it references and applies other metadata, like filename, as properties of this object.

In short, when a &quot;user[avatar]&quot; file field was sent empty, *older* Rails version would receive nothing:

@@@ ruby
params[:user][:avatar]  # =&gt; nil
@@@

*Now* a Tempfile is received in any case:

@@@ ruby
params[:user][:avatar]  # =&gt; #&lt;File:/tmp/RackMultipart.xxxyyy&gt;
@@@

So naturally Paperclip thinks a file was uploaded and explodes because this object has nil value `original_filename` and a size of 0.

**A solution** is to check for Tempfile size and not let it through if it's zero.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;We're using Paperclip for file uploads and recent edge Rails
rendered our user profile forms unusable.&lt;/p&gt;
&lt;p&gt;File uploads don't break our application when there was an
actual file upload; what breaks Paperclip is the case when
&lt;em&gt;nothing was selected&lt;/em&gt; in the file input. The form is still
sent with multipart encoding and parsed by Rack, which creates a
Tempfile &lt;em&gt;regardless&lt;/em&gt; of whether some data was received or
not.&lt;/p&gt;
&lt;p&gt;The result of Rack processing a single file field is a hash with
these keys: {:filename, :type, :name, :tempfile, :head}.&lt;/p&gt;
&lt;p&gt;Rails further processes this in
ActionController::UrlEncodedPairParser.get_typed_value. When it
sees the above formatted hash, it replaces it with the Tempfile
object it references and applies other metadata, like filename, as
properties of this object.&lt;/p&gt;
&lt;p&gt;In short, when a &quot;user[avatar]&quot; file field was sent empty,
&lt;em&gt;older&lt;/em&gt; Rails version would receive nothing:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
params[:user][:avatar]  # =&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Now&lt;/em&gt; a Tempfile is received in any case:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
params[:user][:avatar]  # =&amp;gt; #&amp;lt;File:/tmp/RackMultipart.xxxyyy&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So naturally Paperclip thinks a file was uploaded and explodes
because this object has nil value &lt;code&gt;original_filename&lt;/code&gt;
and a size of 0.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A solution&lt;/strong&gt; is to check for Tempfile size and
not let it through if it's zero.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We're using Paperclip for file uploads and recent edge Rails rendered our user profile forms unusable.

File uploads don't break our application when there was an actual file upload; what breaks Paperclip is the case when *nothing was selected* in the file input. The form is still sent with multipart encoding and parsed by Rack, which creates a Tempfile *regardless* of whether some data was received or not.

The result of Rack processing a single file field is a hash with these keys: {:filename, :type, :name, :tempfile, :head}.

Rails further processes this in ActionController::UrlEncodedPairParser.get_typed_value. When it sees the above formatted hash, it replaces it with the Tempfile object it references and applies other metadata, like filename, as properties of this object.

In short, when a &quot;user[avatar]&quot; file field was sent empty, *older* Rails version would receive nothing:

@@@ ruby
params[:user][:avatar]  # =&gt; nil
@@@

*Now* a Tempfile is received in any case:

@@@ ruby
params[:user][:avatar]  # =&gt; #&lt;File:/tmp/RackMultipart.xxxyyy&gt;
@@@

So naturally Paperclip thinks a file was uploaded and explodes because this object has nil value `original_filename` and a size of 0.

**A solution** is to check for Tempfile size and not let it through if it's zero.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We're using Paperclip for file uploads and recent edge Rails
rendered our user profile forms unusable.&lt;/p&gt;
&lt;p&gt;File uploads don't break our application when there was an
actual file upload; what breaks Paperclip is the case when
&lt;em&gt;nothing was selected&lt;/em&gt; in the file input. The form is still
sent with multipart encoding and parsed by Rack, which creates a
Tempfile &lt;em&gt;regardless&lt;/em&gt; of whether some data was received or
not.&lt;/p&gt;
&lt;p&gt;The result of Rack processing a single file field is a hash with
these keys: {:filename, :type, :name, :tempfile, :head}.&lt;/p&gt;
&lt;p&gt;Rails further processes this in
ActionController::UrlEncodedPairParser.get_typed_value. When it
sees the above formatted hash, it replaces it with the Tempfile
object it references and applies other metadata, like filename, as
properties of this object.&lt;/p&gt;
&lt;p&gt;In short, when a &quot;user[avatar]&quot; file field was sent empty,
&lt;em&gt;older&lt;/em&gt; Rails version would receive nothing:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
params[:user][:avatar]  # =&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Now&lt;/em&gt; a Tempfile is received in any case:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
params[:user][:avatar]  # =&amp;gt; #&amp;lt;File:/tmp/RackMultipart.xxxyyy&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So naturally Paperclip thinks a file was uploaded and explodes
because this object has nil value &lt;code&gt;original_filename&lt;/code&gt;
and a size of 0.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A solution&lt;/strong&gt; is to check for Tempfile size and
not let it through if it's zero.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-20T17:18:25+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T17:18:28+00:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">1</version>
      <user-name>Mislav</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-20T17:31:49+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T17:31:51+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>An uploaded file could have size 0... Wouldn't be possible to test something else like value[:filename].nil? ?

Not really into it so don't know if it is a valid alternative indeed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;An uploaded file could have size 0... Wouldn't be possible to
test something else like value[:filename].nil? ?&lt;/p&gt;
&lt;p&gt;Not really into it so don't know if it is a valid alternative
indeed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-20T17:53:35+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T17:53:39+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">3</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Theoretically it could, but what good is storing a 0-byte file? I say ignore it</body>
      <body-html>&lt;div&gt;&lt;p&gt;Theoretically it could, but what good is storing a 0-byte file?
I say ignore it&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-20T18:38:37+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 424
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T18:38:41+00:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">4</version>
      <user-name>Mislav</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [01f06fc7f4dda52035d5a2273d402d8555a897a5]) Don't let empty Tempfiles come through as uploaded files [#1785 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/01f06fc7f4dda52035d5a2273d402d8555a897a5</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [01f06fc7f4dda52035d5a2273d402d8555a897a5]) Don't let
empty Tempfiles come through as uploaded files [&lt;a href=&quot;/projects/8994/tickets/1785&quot; title=&quot;Ticket #1785&quot;&gt;#1785&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Joshua Peek &lt;a href=&quot;mailto:josh@joshpeek.com&quot;&gt;josh@joshpeek.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/01f06fc7f4dda52035d5a2273d402d8555a897a5&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-20T18:40:17+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T18:40:18+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think it doesn't matter if you cannot come up with a use case if you can be correct by the same price.

The patch should test whether a file was uploaded, and it doesn't test that. That's my point. If it could it should.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think it doesn't matter if you cannot come up with a use case
if you can be correct by the same price.&lt;/p&gt;
&lt;p&gt;The patch should test whether a file was uploaded, and it
doesn't test that. That's my point. If it could it should.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-20T18:45:38+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T18:45:41+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">6</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I created the test fixture by dumping the raw POST body from an empty file upload in Safari.

http://github.com/rails/rails/blob/01f06fc7f4dda52035d5a2273d402d8555a897a5/actionpack/test/fixtures/multipart/empty

Am I missing something else?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I created the test fixture by dumping the raw POST body from an
empty file upload in Safari.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/blob/01f06fc7f4dda52035d5a2273d402d8555a897a5/actionpack/test/fixtures/multipart/empty&quot;&gt;
http://github.com/rails/rails/bl...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Am I missing something else?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-20T20:49:28+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T20:49:28+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">7</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Xavier, would you say that this is a better test for when a file was not uploaded?

@@@ ruby
if value.has_key?(:tempfile) and
  not (value[:tempfile].size == 0 and value[:filename].blank?)
@@@

This check allows 0-sized files to be uploaded if they have a filename.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Xavier, would you say that this is a better test for when a file
was not uploaded?&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if value.has_key?(:tempfile) and
  not (value[:tempfile].size == 0 and value[:filename].blank?)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This check allows 0-sized files to be uploaded if they have a
filename.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-20T22:54:22+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-20T22:54:23+00:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">8</version>
      <user-name>Mislav</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Now I'm confused? Xavier, I guess you were referring the to test conditional not test fixture :)

After some more testing, it seems like we could just check for value[:filename].blank? This always seems to be the case when the user does not select a file. This should allow users to upload a text file with no contents.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Now I'm confused? Xavier, I guess you were referring the to test
conditional not test fixture :)&lt;/p&gt;
&lt;p&gt;After some more testing, it seems like we could just check for
value[:filename].blank? This always seems to be the case when the
user does not select a file. This should allow users to upload a
text file with no contents.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-21T00:05:33+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-21T00:05:37+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">9</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Related Rack Ticket: http://rack.lighthouseapp.com/projects/22435-rack/tickets/25</body>
      <body-html>&lt;div&gt;&lt;p&gt;Related Rack Ticket: &lt;a href=&quot;http://rack.lighthouseapp.com/projects/22435-rack/tickets/25&quot;&gt;http://rack.lighthouseapp.com/pr...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-21T00:09:18+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-21T00:09:23+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">10</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Exactly, my untested guess is that to test if the file was uploaded you just check value[:filename].blank?.

If that's correct checking the size would not be necessary.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Exactly, my untested guess is that to test if the file was
uploaded you just check value[:filename].blank?.&lt;/p&gt;
&lt;p&gt;If that's correct checking the size would not be necessary.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-21T00:33:23+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-21T00:33:24+00:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">11</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think this is the fix we wanted

http://github.com/rails/rails/commit/a8ad6568f9fe21668df9b6b631c0cd9783cb5ab3</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this is the fix we wanted&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/a8ad6568f9fe21668df9b6b631c0cd9783cb5ab3&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-21T02:36:50+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-21T02:36:51+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">12</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Great

Thanks.

I hit this problem on Monday,
but didn't have time to debug it.

Nice one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;
&lt;p&gt;I hit this problem on Monday, but didn't have time to debug
it.&lt;/p&gt;
&lt;p&gt;Nice one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-21T10:14:18+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-01-21T10:14:23+00:00</updated-at>
      <user-id type="integer">21403</user-id>
      <version type="integer">13</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm stil seeing the first reported behaviour with Paperclip master and Rails master. Am I missing something?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm stil seeing the first reported behaviour with Paperclip
master and Rails master. Am I missing something?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-14T17:11:21+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-02-14T17:11:23+00:00</updated-at>
      <user-id type="integer">11904</user-id>
      <version type="integer">14</version>
      <user-name>Thijs</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I didn't experience it anymore after the fix.

The best bet is to test this in your browser: submit a form with empty file field and inspect the parameters you've got in the controller. Is it a Tempfile? If so, can you inspect its properties like `original_filename` and `size`?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I didn't experience it anymore after the fix.&lt;/p&gt;
&lt;p&gt;The best bet is to test this in your browser: submit a form with
empty file field and inspect the parameters you've got in the
controller. Is it a Tempfile? If so, can you inspect its properties
like &lt;code&gt;original_filename&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-15T11:46:50+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2009-02-15T11:46:52+00:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">15</version>
      <user-name>Mislav</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=&quot;http://www.mp4converter.jp/dvd-creator-mac.html&quot;&gt;DVD&#20316;&#25104;Mac &lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/dvd-ripper-mac.html&quot;&gt;DVD&#12522;&#12483;&#12500;&#12531;&#12464;Mac&lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/dvd-copy-mac.html&quot;&gt; DVD&#12467;&#12500;&#12540;Mac &lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/avi-to-dvd-converter-mac.html&quot;&gt;AVI DVD&#22793;&#25563; Mac&lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/video-to-dvd-converter-mac.html&quot;&gt;&#21205;&#30011; DVD&#22793;&#25563; Mac &lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/dvd-audio-ripper-mac.html&quot;&gt;DVD&#38899;&#22768;&#12522;&#12483;&#12500;&#12531;&#12464; Mac&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://www.mp4converter.jp/dvd-creator-mac.html&quot;&gt;DVD&amp;#20316;&amp;#25104;Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/dvd-ripper-mac.html&quot;&gt;DVD&amp;#12522;&amp;#12483;&amp;#12500;&amp;#12531;&amp;#12464;Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/dvd-copy-mac.html&quot;&gt;DVD&amp;#12467;&amp;#12500;&amp;#12540;Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/avi-to-dvd-converter-mac.html&quot;&gt;AVI
DVD&amp;#22793;&amp;#25563; Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/video-to-dvd-converter-mac.html&quot;&gt;&amp;#21205;&amp;#30011;
DVD&amp;#22793;&amp;#25563; Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/dvd-audio-ripper-mac.html&quot;&gt;DVD&amp;#38899;&amp;#22768;&amp;#12522;&amp;#12483;&amp;#12500;&amp;#12531;&amp;#12464;
Mac&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-06T06:31:45+00:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1785</number>
      <permalink>empty-file-uploads-should-not-come-through-as-empty-tempfiles</permalink>
      <priority type="integer">66</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>multipart patch rack</tag>
      <title>Empty file uploads should not come through as empty Tempfiles</title>
      <updated-at type="datetime">2011-01-13T06:52:10+00:00</updated-at>
      <user-id type="integer">127909</user-id>
      <version type="integer">16</version>
      <user-name>xiangxiang</user-name>
      <creator-name>Mislav</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1785</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>71d0dc6fe263f00036a852c549ceae1637e46605</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-20T17:18:25+00:00</created-at>
      <filename>rack-multipart.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">80114</id>
      <size type="integer">1068</size>
      <uploader-id type="integer">192</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/80114/rack-multipart.patch</url>
    </attachment>
  </attachments>
</ticket>
