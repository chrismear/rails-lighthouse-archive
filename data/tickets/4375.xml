<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-04-12T22:52:24+01:00</created-at>
  <creator-id type="integer">51632</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4375</number>
  <permalink>as_json-returning-self</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;json encoding as_json&quot;</tag>
  <title>#as_json returning self?</title>
  <updated-at type="datetime">2010-06-17T21:52:56+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">4</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Brian Lopez</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4375</url>
  <priority-name>Low</priority-name>
  <original-body>I may have completely misunderstood what the #as_json method is for, but it was my assumption that it's supposed to return a JSON-mappable version of the object.

Meaning, it should return a String, Fixnum, TrueClass, FalseClass, NilClass, Array or Hash. In literally *every* example of it's use those are the types that are returned - which makes perfect sense.

But classes like Regexp and BigDecimal return self? If a JSON library checks to see if the object responds to #as_json, and calls it if so, it'll infinitely loop.

Should BigDecimal return to_f? And Regexp to_s?</original-body>
  <latest-body>I may have completely misunderstood what the #as_json method is for, but it was my assumption that it's supposed to return a JSON-mappable version of the object.

Meaning, it should return a String, Fixnum, TrueClass, FalseClass, NilClass, Array or Hash. In literally *every* example of it's use those are the types that are returned - which makes perfect sense.

But classes like Regexp and BigDecimal return self? If a JSON library checks to see if the object responds to #as_json, and calls it if so, it'll infinitely loop.

Should BigDecimal return to_f? And Regexp to_s?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I may have completely misunderstood what the #as_json method is
for, but it was my assumption that it's supposed to return a
JSON-mappable version of the object.&lt;/p&gt;
&lt;p&gt;Meaning, it should return a String, Fixnum, TrueClass,
FalseClass, NilClass, Array or Hash. In literally &lt;em&gt;every&lt;/em&gt;
example of it's use those are the types that are returned - which
makes perfect sense.&lt;/p&gt;
&lt;p&gt;But classes like Regexp and BigDecimal return self? If a JSON
library checks to see if the object responds to #as_json, and calls
it if so, it'll infinitely loop.&lt;/p&gt;
&lt;p&gt;Should BigDecimal return to_f? And Regexp to_s?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I may have completely misunderstood what the #as_json method is for, but it was my assumption that it's supposed to return a JSON-mappable version of the object.

Meaning, it should return a String, Fixnum, TrueClass, FalseClass, NilClass, Array or Hash. In literally *every* example of it's use those are the types that are returned - which makes perfect sense.

But classes like Regexp and BigDecimal return self? If a JSON library checks to see if the object responds to #as_json, and calls it if so, it'll infinitely loop.

Should BigDecimal return to_f? And Regexp to_s?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I may have completely misunderstood what the #as_json method is
for, but it was my assumption that it's supposed to return a
JSON-mappable version of the object.&lt;/p&gt;
&lt;p&gt;Meaning, it should return a String, Fixnum, TrueClass,
FalseClass, NilClass, Array or Hash. In literally &lt;em&gt;every&lt;/em&gt;
example of it's use those are the types that are returned - which
makes perfect sense.&lt;/p&gt;
&lt;p&gt;But classes like Regexp and BigDecimal return self? If a JSON
library checks to see if the object responds to #as_json, and calls
it if so, it'll infinitely loop.&lt;/p&gt;
&lt;p&gt;Should BigDecimal return to_f? And Regexp to_s?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-12T22:52:24+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4375</number>
      <permalink>as_json-returning-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;json encoding as_json&quot;</tag>
      <title>#as_json returning self?</title>
      <updated-at type="datetime">2010-04-12T22:52:38+01:00</updated-at>
      <user-id type="integer">51632</user-id>
      <version type="integer">1</version>
      <user-name>Brian Lopez</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4375</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>That's right, though `as_json` maps to any objects which are JSON-encodable (respond to `encode_json`), not just objects that directly correspond to JSON primitives.

BigDecimal is Numeric which encodes itself using `to_s`.

Regexp encodes itself using `inspect`, which is arguably wrong since it may not be valid JSON in some cases.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's right, though &lt;code&gt;as_json&lt;/code&gt; maps to any objects
which are JSON-encodable (respond to &lt;code&gt;encode_json&lt;/code&gt;), not
just objects that directly correspond to JSON primitives.&lt;/p&gt;
&lt;p&gt;BigDecimal is Numeric which encodes itself using
&lt;code&gt;to_s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Regexp encodes itself using &lt;code&gt;inspect&lt;/code&gt;, which is
arguably wrong since it may not be valid JSON in some cases.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-13T00:53:43+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4375</number>
      <permalink>as_json-returning-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;json encoding as_json&quot;</tag>
      <title>#as_json returning self?</title>
      <updated-at type="datetime">2010-04-13T00:53:47+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4375</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Any updates to this ticket?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Any updates to this ticket?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-16T14:46:08+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4375</number>
      <permalink>as_json-returning-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;json encoding as_json&quot;</tag>
      <title>#as_json returning self?</title>
      <updated-at type="datetime">2010-06-16T14:46:14+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4375</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Was resolved by c1d73270717f30498f8f4d55d6695509107c2834</body>
      <body-html>&lt;div&gt;&lt;p&gt;Was resolved by c1d73270717f30498f8f4d55d6695509107c2834&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-17T21:52:50+01:00</created-at>
      <creator-id type="integer">51632</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4375</number>
      <permalink>as_json-returning-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;json encoding as_json&quot;</tag>
      <title>#as_json returning self?</title>
      <updated-at type="datetime">2010-06-17T21:52:56+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Brian Lopez</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4375</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
