From bd45cf737d4e39da900f08b1d323e5cee5225cd2 Mon Sep 17 00:00:00 2001
From: Tanel Suurhans <tanel.suurhans@perfectline.ee>
Date: Fri, 30 Apr 2010 13:29:39 +0300
Subject: [PATCH] Fix issues with polymorphic belongs_to blank parameters [#4503:resolved]

---
 .../belongs_to_polymorphic_association.rb          |    4 +-
 .../associations/belongs_to_associations_test.rb   |   21 +++++++++++++++++++-
 2 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/associations/belongs_to_polymorphic_association.rb b/activerecord/lib/active_record/associations/belongs_to_polymorphic_association.rb
index f6edd63..b8c68fe 100644
--- a/activerecord/lib/active_record/associations/belongs_to_polymorphic_association.rb
+++ b/activerecord/lib/active_record/associations/belongs_to_polymorphic_association.rb
@@ -2,7 +2,7 @@ module ActiveRecord
   module Associations
     class BelongsToPolymorphicAssociation < AssociationProxy #:nodoc:
       def replace(record)
-        if record.nil?
+        if record.blank?
           @target = @owner[@reflection.primary_key_name] = @owner[@reflection.options[:foreign_type]] = nil
         else
           @target = (AssociationProxy === record ? record.target : record)
@@ -70,7 +70,7 @@ module ActiveRecord
         end
 
         def association_class
-          @owner[@reflection.options[:foreign_type]] ? @owner[@reflection.options[:foreign_type]].constantize : nil
+          @owner[@reflection.options[:foreign_type]].present? ? @owner[@reflection.options[:foreign_type]].constantize : nil
         end
     end
   end
diff --git a/activerecord/test/cases/associations/belongs_to_associations_test.rb b/activerecord/test/cases/associations/belongs_to_associations_test.rb
index be77ee4..e8fecf5 100644
--- a/activerecord/test/cases/associations/belongs_to_associations_test.rb
+++ b/activerecord/test/cases/associations/belongs_to_associations_test.rb
@@ -468,4 +468,23 @@ class BelongsToAssociationsTest < ActiveRecord::TestCase
       Author.belongs_to :special_author_address, :dependent => :restrict
     end
   end
-end
+
+  def test_polymorphic_assigment_with_blank_object_and_attributes
+    sponsor = Sponsor.new
+
+    assert_nothing_raised do
+      sponsor.sponsorable = ""
+    end
+
+    assert_equal nil, sponsor.sponsorable
+
+    sponsor.sponsorable_id = ""
+    sponsor.sponsorable_type = ""
+    sponsor.save
+    sponsor.reload
+
+    assert_nothing_raised do
+      sponsor.sponsorable
+    end
+  end
+end
\ No newline at end of file
-- 
1.7.0.5

