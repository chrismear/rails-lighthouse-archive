<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-01T14:02:26+01:00</created-at>
  <creator-id type="integer">143876</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6663</number>
  <permalink>loading-railscli-with-missing-plugin-provides-obscure-error</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Loading rails/cli with missing plugin provides obscure error</title>
  <updated-at type="datetime">2011-04-01T14:02:29+01:00</updated-at>
  <user-id type="integer">143876</user-id>
  <version type="integer">1</version>
  <user-name>Samu Voutilainen</user-name>
  <creator-name>Samu Voutilainen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6663</url>
  <priority-name nil="true"></priority-name>
  <original-body>In Gentoo ebuilds there is bug that Rails doesn&#8217;t depend on rake where railties needs it. When trying to use rails(with any argument), one gets fun error message:

www ~ # rails -v
/usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require': no such file to load -- rails/cli (LoadError)
        from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `require'
        from /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails:8
        from /usr/bin/rails:8:in `load'
        from /usr/bin/rails:8

Loading this file manually does work:

www ~ # cat foo.rb 
require &quot;rails/cli&quot;

www ~ # ruby foo.rb 
/usr/lib64/ruby/site_ruby/1.8/rubygems.rb:779:in `report_activate_error': Could not find RubyGem rake (&gt;= 0.8.7) (Gem::LoadError)
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:214:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:249:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `each'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:35:in `require'
        from foo.rb:3

The cause for this dummy error is in file 
www ~ # head -n10 /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails
#!/usr/bin/env ruby

begin
  require &quot;rails/cli&quot;
rescue LoadError
  railties_path = File.expand_path('../../railties/lib', __FILE__)
  $:.unshift(railties_path)
  require &quot;rails/cli&quot;
end

Here, since require fails due missing plugin, it tries with invalid path and is trying to tell that actual plugin is missing. Commenting other stuff than require gives real error. Actual problem fixed out by installing rake too, making requiring work as expected.</original-body>
  <latest-body>In Gentoo ebuilds there is bug that Rails doesn&#8217;t depend on rake where railties needs it. When trying to use rails(with any argument), one gets fun error message:

www ~ # rails -v
/usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require': no such file to load -- rails/cli (LoadError)
        from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `require'
        from /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails:8
        from /usr/bin/rails:8:in `load'
        from /usr/bin/rails:8

Loading this file manually does work:

www ~ # cat foo.rb 
require &quot;rails/cli&quot;

www ~ # ruby foo.rb 
/usr/lib64/ruby/site_ruby/1.8/rubygems.rb:779:in `report_activate_error': Could not find RubyGem rake (&gt;= 0.8.7) (Gem::LoadError)
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:214:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:249:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `each'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:35:in `require'
        from foo.rb:3

The cause for this dummy error is in file 
www ~ # head -n10 /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails
#!/usr/bin/env ruby

begin
  require &quot;rails/cli&quot;
rescue LoadError
  railties_path = File.expand_path('../../railties/lib', __FILE__)
  $:.unshift(railties_path)
  require &quot;rails/cli&quot;
end

Here, since require fails due missing plugin, it tries with invalid path and is trying to tell that actual plugin is missing. Commenting other stuff than require gives real error. Actual problem fixed out by installing rake too, making requiring work as expected.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In Gentoo ebuilds there is bug that Rails doesn&amp;#8217;t depend
on rake where railties needs it. When trying to use rails(with any
argument), one gets fun error message:&lt;/p&gt;
&lt;p&gt;www ~ # rails -v&lt;br&gt;
/usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in
`gem_original_require': no such file to load -- rails/cli
(LoadError)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `require'
    from /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails:8
    from /usr/bin/rails:8:in `load'
    from /usr/bin/rails:8&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Loading this file manually does work:&lt;/p&gt;
&lt;p&gt;www ~ # cat foo.rb&lt;br&gt;
require &quot;rails/cli&quot;&lt;/p&gt;
&lt;p&gt;www ~ # ruby foo.rb&lt;br&gt;
/usr/lib64/ruby/site_ruby/1.8/rubygems.rb:779:in
`report_activate_error': Could not find RubyGem rake (&amp;gt;= 0.8.7)
(Gem::LoadError)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:214:in `activate'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:249:in `activate'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `each'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `activate'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:35:in `require'
    from foo.rb:3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The cause for this dummy error is in file&lt;br&gt;
www ~ # head -n10
/usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;!/usr/bin/env ruby&lt;/h1&gt;
&lt;p&gt;begin&lt;br&gt;
require &quot;rails/cli&quot; rescue LoadError&lt;br&gt;
railties_path = File.expand_path('../../railties/lib',
&lt;strong&gt;FILE&lt;/strong&gt;) $:.unshift(railties_path) require
&quot;rails/cli&quot; end&lt;/p&gt;
&lt;p&gt;Here, since require fails due missing plugin, it tries with
invalid path and is trying to tell that actual plugin is missing.
Commenting other stuff than require gives real error. Actual
problem fixed out by installing rake too, making requiring work as
expected.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In Gentoo ebuilds there is bug that Rails doesn&#8217;t depend on rake where railties needs it. When trying to use rails(with any argument), one gets fun error message:

www ~ # rails -v
/usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require': no such file to load -- rails/cli (LoadError)
        from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `require'
        from /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails:8
        from /usr/bin/rails:8:in `load'
        from /usr/bin/rails:8

Loading this file manually does work:

www ~ # cat foo.rb 
require &quot;rails/cli&quot;

www ~ # ruby foo.rb 
/usr/lib64/ruby/site_ruby/1.8/rubygems.rb:779:in `report_activate_error': Could not find RubyGem rake (&gt;= 0.8.7) (Gem::LoadError)
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:214:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:249:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `each'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `activate'
        from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:35:in `require'
        from foo.rb:3

The cause for this dummy error is in file 
www ~ # head -n10 /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails
#!/usr/bin/env ruby

begin
  require &quot;rails/cli&quot;
rescue LoadError
  railties_path = File.expand_path('../../railties/lib', __FILE__)
  $:.unshift(railties_path)
  require &quot;rails/cli&quot;
end

Here, since require fails due missing plugin, it tries with invalid path and is trying to tell that actual plugin is missing. Commenting other stuff than require gives real error. Actual problem fixed out by installing rake too, making requiring work as expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In Gentoo ebuilds there is bug that Rails doesn&amp;#8217;t depend
on rake where railties needs it. When trying to use rails(with any
argument), one gets fun error message:&lt;/p&gt;
&lt;p&gt;www ~ # rails -v&lt;br&gt;
/usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in
`gem_original_require': no such file to load -- rails/cli
(LoadError)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:36:in `require'
    from /usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails:8
    from /usr/bin/rails:8:in `load'
    from /usr/bin/rails:8&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Loading this file manually does work:&lt;/p&gt;
&lt;p&gt;www ~ # cat foo.rb&lt;br&gt;
require &quot;rails/cli&quot;&lt;/p&gt;
&lt;p&gt;www ~ # ruby foo.rb&lt;br&gt;
/usr/lib64/ruby/site_ruby/1.8/rubygems.rb:779:in
`report_activate_error': Could not find RubyGem rake (&amp;gt;= 0.8.7)
(Gem::LoadError)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:214:in `activate'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:249:in `activate'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `each'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems.rb:248:in `activate'
    from /usr/lib64/ruby/site_ruby/1.8/rubygems/custom_require.rb:35:in `require'
    from foo.rb:3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The cause for this dummy error is in file&lt;br&gt;
www ~ # head -n10
/usr/lib64/ruby/gems/1.8/gems/rails-3.0.3/bin/rails&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;!/usr/bin/env ruby&lt;/h1&gt;
&lt;p&gt;begin&lt;br&gt;
require &quot;rails/cli&quot; rescue LoadError&lt;br&gt;
railties_path = File.expand_path('../../railties/lib',
&lt;strong&gt;FILE&lt;/strong&gt;) $:.unshift(railties_path) require
&quot;rails/cli&quot; end&lt;/p&gt;
&lt;p&gt;Here, since require fails due missing plugin, it tries with
invalid path and is trying to tell that actual plugin is missing.
Commenting other stuff than require gives real error. Actual
problem fixed out by installing rake too, making requiring work as
expected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-01T14:02:26+01:00</created-at>
      <creator-id type="integer">143876</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6663</number>
      <permalink>loading-railscli-with-missing-plugin-provides-obscure-error</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Loading rails/cli with missing plugin provides obscure error</title>
      <updated-at type="datetime">2011-04-01T14:02:29+01:00</updated-at>
      <user-id type="integer">143876</user-id>
      <version type="integer">1</version>
      <user-name>Samu Voutilainen</user-name>
      <creator-name>Samu Voutilainen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6663</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
