From 1b908d7ffff2fda8f95f2d923be740d91619f2eb Mon Sep 17 00:00:00 2001
From: George Ogata <george.ogata@gmail.com>
Date: Mon, 9 Jun 2008 13:45:57 +1000
Subject: [PATCH] Fix observers that use after_find.

---
 activerecord/lib/active_record/observer.rb |    2 +-
 activerecord/test/cases/lifecycle_test.rb  |   14 ++++++++++++++
 2 files changed, 15 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/observer.rb b/activerecord/lib/active_record/observer.rb
index 6e55e36..25e0e61 100644
--- a/activerecord/lib/active_record/observer.rb
+++ b/activerecord/lib/active_record/observer.rb
@@ -189,7 +189,7 @@ module ActiveRecord
 
       def add_observer!(klass)
         klass.add_observer(self)
-        klass.class_eval 'def after_find() end' unless klass.respond_to?(:after_find)
+        klass.class_eval 'def after_find() end' unless klass.method_defined?(:after_find)
       end
   end
 end
diff --git a/activerecord/test/cases/lifecycle_test.rb b/activerecord/test/cases/lifecycle_test.rb
index ddcacac..aac2893 100755
--- a/activerecord/test/cases/lifecycle_test.rb
+++ b/activerecord/test/cases/lifecycle_test.rb
@@ -44,6 +44,14 @@ class TopicObserver < ActiveRecord::Observer
   end
 end
 
+class MinimalisticObserver < ActiveRecord::Observer
+  attr_reader :minimalistic
+
+  def after_find(minimalistic)
+    @minimalistic = minimalistic
+  end
+end
+
 class MultiObserver < ActiveRecord::Observer
   attr_reader :record
 
@@ -134,6 +142,12 @@ class LifecycleTest < ActiveRecord::TestCase
     assert_equal developer.name, multi_observer.record.name
   end
 
+  def test_observing_after_find_when_not_defined_on_the_model
+    observer = MinimalisticObserver.instance
+    minimalistic = Minimalistic.find(1)
+    assert_equal minimalistic, observer.minimalistic
+  end
+
   def test_invalid_observer
     assert_raise(ArgumentError) { Topic.observers = Object.new; Topic.instantiate_observers }
   end
-- 
1.5.4.3

