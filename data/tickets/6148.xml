<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-12T10:23:30+00:00</created-at>
  <creator-id type="integer">126375</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6148</number>
  <permalink>parts-of-template-are-rendered-twice-induced-by-yield-or-cache</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Parts of template are rendered twice, induced by yield or cache</title>
  <updated-at type="datetime">2010-12-12T17:15:38+00:00</updated-at>
  <user-id type="integer">7341</user-id>
  <version type="integer">5</version>
  <user-name>Piotr Sarnacki</user-name>
  <creator-name>Jan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6148</url>
  <priority-name>Low</priority-name>
  <original-body>When I use a helper method, that yields to a given content block, the surrounding(!) template is rendered twice above where the helper is used. Rails 3.0.3.

Standard layout:

    &lt;!DOCTYPE html&gt;
    &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;Foo&lt;/title&gt;
      &lt;%= stylesheet_link_tag :all %&gt;
      &lt;%= javascript_include_tag :defaults %&gt;
      &lt;%= csrf_meta_tag %&gt;
    &lt;/head&gt;
    &lt;body&gt;
    
    &lt;%= yield %&gt;
    
    &lt;/body&gt;
    &lt;/html&gt;

Helper:

    def foo(&amp;block)
      yield
    end

Template:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- foo do -%&gt;
    &lt;p&gt;YIELDED STUFF&lt;/p&gt;
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;

Output:

    TOP
    YIELDED STUFF
    TOP
    YIELDED STUFF
    BOTTOM

I'm having this same issue with cache do:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if false; cache do -%&gt;
    Something
    &lt;%- end; else -%&gt;
    foobar
    &lt;%- end -%&gt;

    &lt;p&gt;BOTTOM&lt;/p&gt;

Output:

    TOP
    foobar
    TOP
    foobar
    BOTTOM


The double rendering does **NOT** occur like this:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if false -%&gt;
    Something - without cache
    &lt;%- else -%&gt;
    foobar
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;

Or this:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if true; cache do -%&gt;
    Something - note the TRUE in this version
    &lt;%- end; else -%&gt;
    Bar
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;</original-body>
  <latest-body>When I use a helper method, that yields to a given content block, the surrounding(!) template is rendered twice above where the helper is used. Rails 3.0.3.

Standard layout:

    &lt;!DOCTYPE html&gt;
    &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;Foo&lt;/title&gt;
      &lt;%= stylesheet_link_tag :all %&gt;
      &lt;%= javascript_include_tag :defaults %&gt;
      &lt;%= csrf_meta_tag %&gt;
    &lt;/head&gt;
    &lt;body&gt;
    
    &lt;%= yield %&gt;
    
    &lt;/body&gt;
    &lt;/html&gt;

Helper:

    def foo(&amp;block)
      yield
    end

Template:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- foo do -%&gt;
    &lt;p&gt;YIELDED STUFF&lt;/p&gt;
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;

Output:

    TOP
    YIELDED STUFF
    TOP
    YIELDED STUFF
    BOTTOM

I'm having this same issue with cache do:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if false; cache do -%&gt;
    Something
    &lt;%- end; else -%&gt;
    foobar
    &lt;%- end -%&gt;

    &lt;p&gt;BOTTOM&lt;/p&gt;

Output:

    TOP
    foobar
    TOP
    foobar
    BOTTOM


The double rendering does **NOT** occur like this:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if false -%&gt;
    Something - without cache
    &lt;%- else -%&gt;
    foobar
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;

Or this:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if true; cache do -%&gt;
    Something - note the TRUE in this version
    &lt;%- end; else -%&gt;
    Bar
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When I use a helper method, that yields to a given content
block, the surrounding(!) template is rendered twice above where
the helper is used. Rails 3.0.3.&lt;/p&gt;
&lt;p&gt;Standard layout:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;Foo&amp;lt;/title&amp;gt;
  &amp;lt;%= stylesheet_link_tag :all %&amp;gt;
  &amp;lt;%= javascript_include_tag :defaults %&amp;gt;
  &amp;lt;%= csrf_meta_tag %&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;%= yield %&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Helper:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def foo(&amp;amp;block)
  yield
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Template:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- foo do -%&amp;gt;
&amp;lt;p&amp;gt;YIELDED STUFF&amp;lt;/p&amp;gt;
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;TOP
YIELDED STUFF
TOP
YIELDED STUFF
BOTTOM&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm having this same issue with cache do:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- if false; cache do -%&amp;gt;
Something
&amp;lt;%- end; else -%&amp;gt;
foobar
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;TOP
foobar
TOP
foobar
BOTTOM&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The double rendering does &lt;strong&gt;NOT&lt;/strong&gt; occur like
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- if false -%&amp;gt;
Something - without cache
&amp;lt;%- else -%&amp;gt;
foobar
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- if true; cache do -%&amp;gt;
Something - note the TRUE in this version
&amp;lt;%- end; else -%&amp;gt;
Bar
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When I use a helper method, that yields to a given content block, the surrounding(!) template is rendered twice above where the helper is used. Rails 3.0.3.

Standard layout:

    &lt;!DOCTYPE html&gt;
    &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;Foo&lt;/title&gt;
      &lt;%= stylesheet_link_tag :all %&gt;
      &lt;%= javascript_include_tag :defaults %&gt;
      &lt;%= csrf_meta_tag %&gt;
    &lt;/head&gt;
    &lt;body&gt;
    
    &lt;%= yield %&gt;
    
    &lt;/body&gt;
    &lt;/html&gt;

Helper:

    def foo(&amp;block)
      yield
    end

Template:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- foo do -%&gt;
    &lt;p&gt;YIELDED STUFF&lt;/p&gt;
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;

Output:

    TOP
    YIELDED STUFF
    TOP
    YIELDED STUFF
    BOTTOM

I'm having this same issue with cache do:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if false; cache do -%&gt;
    Something
    &lt;%- end; else -%&gt;
    foobar
    &lt;%- end -%&gt;

    &lt;p&gt;BOTTOM&lt;/p&gt;

Output:

    TOP
    foobar
    TOP
    foobar
    BOTTOM


The double rendering does **NOT** occur like this:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if false -%&gt;
    Something - without cache
    &lt;%- else -%&gt;
    foobar
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;

Or this:

    &lt;p&gt;TOP&lt;/p&gt;
    
    &lt;%- if true; cache do -%&gt;
    Something - note the TRUE in this version
    &lt;%- end; else -%&gt;
    Bar
    &lt;%- end -%&gt;
    
    &lt;p&gt;BOTTOM&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When I use a helper method, that yields to a given content
block, the surrounding(!) template is rendered twice above where
the helper is used. Rails 3.0.3.&lt;/p&gt;
&lt;p&gt;Standard layout:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;Foo&amp;lt;/title&amp;gt;
  &amp;lt;%= stylesheet_link_tag :all %&amp;gt;
  &amp;lt;%= javascript_include_tag :defaults %&amp;gt;
  &amp;lt;%= csrf_meta_tag %&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;%= yield %&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Helper:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def foo(&amp;amp;block)
  yield
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Template:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- foo do -%&amp;gt;
&amp;lt;p&amp;gt;YIELDED STUFF&amp;lt;/p&amp;gt;
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;TOP
YIELDED STUFF
TOP
YIELDED STUFF
BOTTOM&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm having this same issue with cache do:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- if false; cache do -%&amp;gt;
Something
&amp;lt;%- end; else -%&amp;gt;
foobar
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;TOP
foobar
TOP
foobar
BOTTOM&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The double rendering does &lt;strong&gt;NOT&lt;/strong&gt; occur like
this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- if false -%&amp;gt;
Something - without cache
&amp;lt;%- else -%&amp;gt;
foobar
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;p&amp;gt;TOP&amp;lt;/p&amp;gt;

&amp;lt;%- if true; cache do -%&amp;gt;
Something - note the TRUE in this version
&amp;lt;%- end; else -%&amp;gt;
Bar
&amp;lt;%- end -%&amp;gt;

&amp;lt;p&amp;gt;BOTTOM&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-11T12:29:10+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6148</number>
      <permalink>parts-of-template-are-rendered-twice-induced-by-yield-or-cache</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Parts of template are rendered twice, induced by yield or cache</title>
      <updated-at type="datetime">2010-12-11T12:29:12+00:00</updated-at>
      <user-id type="integer">126375</user-id>
      <version type="integer">1</version>
      <user-name>Jan</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6148</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You need to use capture in your helper:

    def foo(&amp;block)
      capture(&amp;block)
    end

And add = in front of the call in view:

    &lt;%= foo do -%&gt;
      Something
    &lt;% end -%&gt;

As of second example, I think that this is based on implementation of &lt;%= block_helper do %&gt; in Rails 3:
https://github.com/rails/rails/blob/master/actionpack/lib/action_view/template/handlers/erb.rb#L33

I don't know if this can be fixed, as for now you should use that form:

    &lt;%- if false -%&gt;
      &lt;%= cache do -%&gt;
        Something
      &lt;%- end -%&gt;
    &lt;%- else -%&gt;
     foobar
    &lt;%- end -%&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;You need to use capture in your helper:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def foo(&amp;amp;block)
  capture(&amp;amp;block)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And add = in front of the call in view:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= foo do -%&amp;gt;
  Something
&amp;lt;% end -%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As of second example, I think that this is based on
implementation of &amp;lt;%= block_helper do %&amp;gt; in Rails 3:&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/blob/master/actionpack/lib/action_view/template/handlers/erb.rb#L33&quot;&gt;
https://github.com/rails/rails/blob/master/actionpack/lib/action_vi...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don't know if this can be fixed, as for now you should use
that form:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%- if false -%&amp;gt;
  &amp;lt;%= cache do -%&amp;gt;
    Something
  &amp;lt;%- end -%&amp;gt;
&amp;lt;%- else -%&amp;gt;
 foobar
&amp;lt;%- end -%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-11T14:37:24+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6148</number>
      <permalink>parts-of-template-are-rendered-twice-induced-by-yield-or-cache</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Parts of template are rendered twice, induced by yield or cache</title>
      <updated-at type="datetime">2010-12-11T14:37:31+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">2</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6148</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well, the cache thing was my real problem, the other one was just how I tried to understand what might be going wrong. So thanks for pointing out my mistakes! I already went a little crazy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well, the cache thing was my real problem, the other one was
just how I tried to understand what might be going wrong. So thanks
for pointing out my mistakes! I already went a little crazy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-12T08:21:37+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6148</number>
      <permalink>parts-of-template-are-rendered-twice-induced-by-yield-or-cache</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Parts of template are rendered twice, induced by yield or cache</title>
      <updated-at type="datetime">2010-12-12T08:21:46+00:00</updated-at>
      <user-id type="integer">126375</user-id>
      <version type="integer">3</version>
      <user-name>Jan</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6148</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>API and guide use &lt;% cache do %&gt; without =.

http://api.rubyonrails.org/classes/ActionView/Helpers/CacheHelper.html#method-i-cache
http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching</body>
      <body-html>&lt;div&gt;&lt;p&gt;API and guide use &amp;lt;% cache do %&amp;gt; without =.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://api.rubyonrails.org/classes/ActionView/Helpers/CacheHelper.html#method-i-cache&quot;&gt;
http://api.rubyonrails.org/classes/ActionView/Helpers/CacheHelper.h...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching&quot;&gt;
http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-12T08:48:44+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6148</number>
      <permalink>parts-of-template-are-rendered-twice-induced-by-yield-or-cache</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Parts of template are rendered twice, induced by yield or cache</title>
      <updated-at type="datetime">2010-12-12T08:48:52+00:00</updated-at>
      <user-id type="integer">126375</user-id>
      <version type="integer">4</version>
      <user-name>Jan</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6148</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think that cache works both with = and without, probably it just writes to @output_buffer and returns nil, so = does not change anything. I just thought that it needs it. Seems like a little bit inconsistent, though.

I think this can be closed and I'll start a discussion on block helpers on rails group later.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think that cache works both with = and without, probably it
just writes to @output_buffer and returns nil, so = does not change
anything. I just thought that it needs it. Seems like a little bit
inconsistent, though.&lt;/p&gt;
&lt;p&gt;I think this can be closed and I'll start a discussion on block
helpers on rails group later.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-12T10:23:30+00:00</created-at>
      <creator-id type="integer">126375</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6148</number>
      <permalink>parts-of-template-are-rendered-twice-induced-by-yield-or-cache</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Parts of template are rendered twice, induced by yield or cache</title>
      <updated-at type="datetime">2010-12-12T17:15:38+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">5</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>Jan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6148</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
