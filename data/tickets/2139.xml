<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-05T19:25:05+00:00</created-at>
  <creator-id type="integer">11063</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2139</number>
  <permalink>rails-23-compatibility-with-rack-spec</permalink>
  <priority type="integer">1356</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Rails 2.3 Compatibility with Rack Spec</title>
  <updated-at type="datetime">2009-03-06T00:41:45+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">3</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Rick DeNatale</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2139</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I notice that ActionController::Session::AbstractStore is using the environment keys 'rack.session' and 'rack.session.options' to allow middleware in the stack to access the rails session.

This seems to be disallowed by the Rack specification http://rack.rubyforge.org/doc/files/SPEC.html

&quot;In addition to this, the Rack environment must include these Rack-specific variables:
rack.version
rack.url_scheme
rack.input
rack.errors
rack.multithread
rack.multiprocess
rack.run_once

The server or the application can store their own data in the environment, too. The keys must contain at least one dot, and should be prefixed uniquely. The prefix rack. is reserved for use with the Rack core distribution and must not be used otherwise.&quot;

Although Rack::Lint does not enforce the absence of keys prefixed by 'rack.' other than those listed, I think that's a bug in Lint since it includes that last paragraph in its comments.

Is it possible to get the rack specification changed to bless these two new environment variables in the rack namespace.  If not, should Rails change to use something within the spec before 2.3 is officially released?</original-body>
  <latest-body>I notice that ActionController::Session::AbstractStore is using the environment keys 'rack.session' and 'rack.session.options' to allow middleware in the stack to access the rails session.

This seems to be disallowed by the Rack specification http://rack.rubyforge.org/doc/files/SPEC.html

&quot;In addition to this, the Rack environment must include these Rack-specific variables:
rack.version
rack.url_scheme
rack.input
rack.errors
rack.multithread
rack.multiprocess
rack.run_once

The server or the application can store their own data in the environment, too. The keys must contain at least one dot, and should be prefixed uniquely. The prefix rack. is reserved for use with the Rack core distribution and must not be used otherwise.&quot;

Although Rack::Lint does not enforce the absence of keys prefixed by 'rack.' other than those listed, I think that's a bug in Lint since it includes that last paragraph in its comments.

Is it possible to get the rack specification changed to bless these two new environment variables in the rack namespace.  If not, should Rails change to use something within the spec before 2.3 is officially released?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I notice that ActionController::Session::AbstractStore is using
the environment keys 'rack.session' and 'rack.session.options' to
allow middleware in the stack to access the rails session.&lt;/p&gt;
&lt;p&gt;This seems to be disallowed by the Rack specification &lt;a href=&quot;http://rack.rubyforge.org/doc/files/SPEC.html&quot;&gt;http://rack.rubyforge.org/doc/fi...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&quot;In addition to this, the Rack environment must include these
Rack-specific variables: rack.version rack.url_scheme rack.input
rack.errors rack.multithread rack.multiprocess rack.run_once&lt;/p&gt;
&lt;p&gt;The server or the application can store their own data in the
environment, too. The keys must contain at least one dot, and
should be prefixed uniquely. The prefix rack. is reserved for use
with the Rack core distribution and must not be used
otherwise.&quot;&lt;/p&gt;
&lt;p&gt;Although Rack::Lint does not enforce the absence of keys
prefixed by 'rack.' other than those listed, I think that's a bug
in Lint since it includes that last paragraph in its comments.&lt;/p&gt;
&lt;p&gt;Is it possible to get the rack specification changed to bless
these two new environment variables in the rack namespace. If not,
should Rails change to use something within the spec before 2.3 is
officially released?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I notice that ActionController::Session::AbstractStore is using the environment keys 'rack.session' and 'rack.session.options' to allow middleware in the stack to access the rails session.

This seems to be disallowed by the Rack specification http://rack.rubyforge.org/doc/files/SPEC.html

&quot;In addition to this, the Rack environment must include these Rack-specific variables:
rack.version
rack.url_scheme
rack.input
rack.errors
rack.multithread
rack.multiprocess
rack.run_once

The server or the application can store their own data in the environment, too. The keys must contain at least one dot, and should be prefixed uniquely. The prefix rack. is reserved for use with the Rack core distribution and must not be used otherwise.&quot;

Although Rack::Lint does not enforce the absence of keys prefixed by 'rack.' other than those listed, I think that's a bug in Lint since it includes that last paragraph in its comments.

Is it possible to get the rack specification changed to bless these two new environment variables in the rack namespace.  If not, should Rails change to use something within the spec before 2.3 is officially released?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I notice that ActionController::Session::AbstractStore is using
the environment keys 'rack.session' and 'rack.session.options' to
allow middleware in the stack to access the rails session.&lt;/p&gt;
&lt;p&gt;This seems to be disallowed by the Rack specification &lt;a href=&quot;http://rack.rubyforge.org/doc/files/SPEC.html&quot;&gt;http://rack.rubyforge.org/doc/fi...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&quot;In addition to this, the Rack environment must include these
Rack-specific variables: rack.version rack.url_scheme rack.input
rack.errors rack.multithread rack.multiprocess rack.run_once&lt;/p&gt;
&lt;p&gt;The server or the application can store their own data in the
environment, too. The keys must contain at least one dot, and
should be prefixed uniquely. The prefix rack. is reserved for use
with the Rack core distribution and must not be used
otherwise.&quot;&lt;/p&gt;
&lt;p&gt;Although Rack::Lint does not enforce the absence of keys
prefixed by 'rack.' other than those listed, I think that's a bug
in Lint since it includes that last paragraph in its comments.&lt;/p&gt;
&lt;p&gt;Is it possible to get the rack specification changed to bless
these two new environment variables in the rack namespace. If not,
should Rails change to use something within the spec before 2.3 is
officially released?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-05T19:25:05+00:00</created-at>
      <creator-id type="integer">11063</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2139</number>
      <permalink>rails-23-compatibility-with-rack-spec</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.3 Compatibility with Rack Spec</title>
      <updated-at type="datetime">2009-03-05T19:25:09+00:00</updated-at>
      <user-id type="integer">11063</user-id>
      <version type="integer">1</version>
      <user-name>Rick DeNatale</user-name>
      <creator-name>Rick DeNatale</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2139</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-05T20:05:54+00:00</created-at>
      <creator-id type="integer">11063</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2139</number>
      <permalink>rails-23-compatibility-with-rack-spec</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.3 Compatibility with Rack Spec</title>
      <updated-at type="datetime">2009-03-05T20:05:56+00:00</updated-at>
      <user-id type="integer">22128</user-id>
      <version type="integer">2</version>
      <user-name>Mark Imbriaco</user-name>
      <creator-name>Rick DeNatale</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2139</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yeah, we working on adding other conventions like rack.session to a list so people know what data type should be stored there. These won't be part of the main list since they are gear towards middleware and are not required.

Don't worry, we are doing the right thing by supporting rack.session.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, we working on adding other conventions like rack.session
to a list so people know what data type should be stored there.
These won't be part of the main list since they are gear towards
middleware and are not required.&lt;/p&gt;
&lt;p&gt;Don't worry, we are doing the right thing by supporting
rack.session.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-06T00:41:41+00:00</created-at>
      <creator-id type="integer">11063</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2139</number>
      <permalink>rails-23-compatibility-with-rack-spec</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Rails 2.3 Compatibility with Rack Spec</title>
      <updated-at type="datetime">2009-03-06T00:41:45+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Rick DeNatale</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2139</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
