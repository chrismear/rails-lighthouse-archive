From 7d887bb5f691cd7e62f287ede3daae36b4ac4155 Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Sat, 27 Mar 2010 11:54:22 -0300
Subject: [PATCH 1/2] flatten not needed here

---
 .../core_ext/class/attribute_accessors.rb          |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
index c795871..9b4a8f9 100644
--- a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
+++ b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
@@ -8,7 +8,7 @@
 #  Person.hair_colors = [:brown, :black, :blonde, :red]
 class Class
   def cattr_reader(*syms)
-    syms.flatten.each do |sym|
+    syms.each do |sym|
       next if sym.is_a?(Hash)
       class_eval(<<-EOS, __FILE__, __LINE__)
         unless defined? @@#{sym}  # unless defined? @@hair_colors
@@ -28,7 +28,7 @@ class Class
 
   def cattr_writer(*syms)
     options = syms.extract_options!
-    syms.flatten.each do |sym|
+    syms.each do |sym|
       class_eval(<<-EOS, __FILE__, __LINE__)
         unless defined? @@#{sym}                       # unless defined? @@hair_colors
           @@#{sym} = nil                               #   @@hair_colors = nil
-- 
1.7.0


From e301cb536fe88087fe3ab47b0bfecd51299f2329 Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Sat, 27 Mar 2010 12:10:13 -0300
Subject: [PATCH 2/2] backport of inconsistency with cattr_reader and matter_reader with some tweaks

---
 .../core_ext/class/attribute_accessors.rb          |   59 +++++++++++---------
 .../core_ext/module/attribute_accessors.rb         |   59 +++++++++++---------
 .../test/core_ext/class/attribute_accessor_test.rb |    9 +++-
 .../core_ext/module/attribute_accessor_test.rb     |    8 ++-
 4 files changed, 81 insertions(+), 54 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
index 9b4a8f9..7ccf8b0 100644
--- a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
+++ b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
@@ -8,42 +8,49 @@
 #  Person.hair_colors = [:brown, :black, :blonde, :red]
 class Class
   def cattr_reader(*syms)
+    options = syms.extract_options!
     syms.each do |sym|
       next if sym.is_a?(Hash)
-      class_eval(<<-EOS, __FILE__, __LINE__)
-        unless defined? @@#{sym}  # unless defined? @@hair_colors
-          @@#{sym} = nil          #   @@hair_colors = nil
-        end                       # end
-                                  #
-        def self.#{sym}           # def self.hair_colors
-          @@#{sym}                #   @@hair_colors
-        end                       # end
-                                  #
-        def #{sym}                # def hair_colors
-          @@#{sym}                #   @@hair_colors
-        end                       # end
+      class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
+
+        def self.#{sym}
+          @@#{sym}
+        end
       EOS
+
+      unless options[:instance_reader] == false
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}
+            @@#{sym}
+          end
+        EOS
+      end
     end
   end
 
   def cattr_writer(*syms)
     options = syms.extract_options!
     syms.each do |sym|
-      class_eval(<<-EOS, __FILE__, __LINE__)
-        unless defined? @@#{sym}                       # unless defined? @@hair_colors
-          @@#{sym} = nil                               #   @@hair_colors = nil
-        end                                            # end
-                                                       #
-        def self.#{sym}=(obj)                          # def self.hair_colors=(obj)
-          @@#{sym} = obj                               #   @@hair_colors = obj
-        end                                            # end
-                                                       #
-        #{"                                            #
-        def #{sym}=(obj)                               # def hair_colors=(obj)
-          @@#{sym} = obj                               #   @@hair_colors = obj
-        end                                            # end
-        " unless options[:instance_writer] == false }  # # instance writer above is generated unless options[:instance_writer] == false
+      class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
+
+        def self.#{sym}=(obj)
+          @@#{sym} = obj
+        end
       EOS
+
+      unless options[:instance_writer] == false
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}=(obj)
+            @@#{sym} = obj
+          end
+        EOS
+      end
     end
   end
 
diff --git a/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb b/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb
index 9359b22..54a29c0 100644
--- a/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb
+++ b/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb
@@ -14,42 +14,49 @@ require "active_support/core_ext/array"
 #  AppConfiguration.google_api_key = "overriding the api key!"
 class Module
   def mattr_reader(*syms)
+    options = syms.extract_options!
     syms.each do |sym|
       next if sym.is_a?(Hash)
-      class_eval(<<-EOS, __FILE__, __LINE__)
-        unless defined? @@#{sym}  # unless defined? @@pagination_options
-          @@#{sym} = nil          #   @@pagination_options = nil
-        end                       # end
-                                  #
-        def self.#{sym}           # def self.pagination_options
-          @@#{sym}                #   @@pagination_options
-        end                       # end
-                                  #
-        def #{sym}                # def pagination_options
-          @@#{sym}                #   @@pagination_options
-        end                       # end
+      class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
+
+        def self.#{sym}
+          @@#{sym}
+        end
       EOS
+
+      unless options[:instance_reader] == false
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}
+            @@#{sym}
+          end
+        EOS
+      end
     end
   end
   
   def mattr_writer(*syms)
     options = syms.extract_options!
     syms.each do |sym|
-      class_eval(<<-EOS, __FILE__, __LINE__)
-        unless defined? @@#{sym}                       # unless defined? @@pagination_options
-          @@#{sym} = nil                               #   @@pagination_options = nil
-        end                                            # end
-                                                       #
-        def self.#{sym}=(obj)                          # def self.pagination_options=(obj)
-          @@#{sym} = obj                               #   @@pagination_options = obj
-        end                                            # end
-                                                       #
-        #{"                                            #
-        def #{sym}=(obj)                               # def pagination_options=(obj)
-          @@#{sym} = obj                               #   @@pagination_options = obj
-        end                                            # end
-        " unless options[:instance_writer] == false }  # # instance writer above is generated unless options[:instance_writer] == false
+      class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
+
+        def self.#{sym}=(obj)
+          @@#{sym} = obj
+        end
       EOS
+
+      unless options[:instance_writer] == false
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}=(obj)
+            @@#{sym} = obj
+          end
+        EOS
+      end
     end
   end
   
diff --git a/activesupport/test/core_ext/class/attribute_accessor_test.rb b/activesupport/test/core_ext/class/attribute_accessor_test.rb
index 85d0dd8..d6bb1a6 100644
--- a/activesupport/test/core_ext/class/attribute_accessor_test.rb
+++ b/activesupport/test/core_ext/class/attribute_accessor_test.rb
@@ -4,7 +4,8 @@ class ClassAttributeAccessorTest < Test::Unit::TestCase
   def setup
     @class = Class.new do
       cattr_accessor :foo
-      cattr_accessor :bar, :instance_writer => false
+      cattr_accessor :bar,  :instance_writer => false
+      cattr_reader   :shaq, :instance_reader => false
     end
     @object = @class.new
   end
@@ -28,4 +29,10 @@ class ClassAttributeAccessorTest < Test::Unit::TestCase
     assert @object.respond_to?(:bar)
     assert !@object.respond_to?(:bar=)
   end
+
+
+  def test_should_not_create_instance_reader
+    assert @class.respond_to?(:shaq)
+    assert !@object.respond_to?(:shaq)
+  end
 end
diff --git a/activesupport/test/core_ext/module/attribute_accessor_test.rb b/activesupport/test/core_ext/module/attribute_accessor_test.rb
index 9697508..af64a07 100644
--- a/activesupport/test/core_ext/module/attribute_accessor_test.rb
+++ b/activesupport/test/core_ext/module/attribute_accessor_test.rb
@@ -4,7 +4,8 @@ class ModuleAttributeAccessorTest < Test::Unit::TestCase
   def setup
     m = @module = Module.new do
       mattr_accessor :foo
-      mattr_accessor :bar, :instance_writer => false
+      mattr_accessor :bar,  :instance_writer => false
+      mattr_reader   :shaq, :instance_reader => false
     end
     @class = Class.new
     @class.instance_eval { include m }
@@ -30,4 +31,9 @@ class ModuleAttributeAccessorTest < Test::Unit::TestCase
     assert @object.respond_to?(:bar)
     assert !@object.respond_to?(:bar=)
   end
+
+  def test_should_not_create_instance_reader
+    assert @module.respond_to?(:shaq)
+    assert !@object.respond_to?(:shaq)
+  end
 end
-- 
1.7.0

