From 2fc025935a706107182a426e91c30ffc866481bf Mon Sep 17 00:00:00 2001
From: Steven Soroka <ssoroka78@gmail.com>
Date: Thu, 1 May 2008 14:09:12 -0500
Subject: [PATCH] best solution?


Signed-off-by: Steven Soroka <ssoroka78@gmail.com>
---
 .../associations/has_many_through_association.rb   |    4 ++--
 .../has_many_through_associations_test.rb          |   12 ++++++++++++
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/associations/has_many_through_association.rb b/activerecord/lib/active_record/associations/has_many_through_association.rb
index ebea313..f683669 100644
--- a/activerecord/lib/active_record/associations/has_many_through_association.rb
+++ b/activerecord/lib/active_record/associations/has_many_through_association.rb
@@ -10,14 +10,14 @@ module ActiveRecord
 
       def create!(attrs = nil)
         @reflection.klass.transaction do
-          self << (object = @reflection.klass.send(:with_scope, :create => attrs) { @reflection.klass.create! })
+          self << (object = attrs ? @reflection.klass.send(:with_scope, :create => attrs) { @reflection.klass.create! } : @reflection.klass.create!)
           object
         end
       end
 
       def create(attrs = nil)
         @reflection.klass.transaction do
-          self << (object = @reflection.klass.send(:with_scope, :create => attrs) { @reflection.klass.create })
+          self << (object = attrs ? @reflection.klass.send(:with_scope, :create => attrs) { @reflection.klass.create } : @reflection.klass.create)
           object
         end
       end
diff --git a/activerecord/test/cases/associations/has_many_through_associations_test.rb b/activerecord/test/cases/associations/has_many_through_associations_test.rb
index a989910..e297447 100644
--- a/activerecord/test/cases/associations/has_many_through_associations_test.rb
+++ b/activerecord/test/cases/associations/has_many_through_associations_test.rb
@@ -115,6 +115,18 @@ class HasManyThroughAssociationsTest < ActiveRecord::TestCase
     assert posts(:thinking).reload.people(true).collect(&:first_name).include?("Jeb")
   end
 
+  def test_associate_with_create_and_no_options
+    peeps = posts(:thinking).people.count
+    posts(:thinking).people.create
+    assert_equal peeps + 1, posts(:thinking).people.count
+  end
+
+  def test_associate_with_create_exclaimation_and_no_options
+    peeps = posts(:thinking).people.count
+    posts(:thinking).people.create!
+    assert_equal peeps + 1, posts(:thinking).people.count
+  end
+
   def test_clear_associations
     assert_queries(2) { posts(:welcome);posts(:welcome).people(true) }
     
-- 
1.5.5

