<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-24T02:35:13+00:00</created-at>
  <creator-id type="integer">27836</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3777</number>
  <permalink>patch-postgresql-timestamp-with-zone-type-support</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>3.0 activerecord postgresql &quot;time zone&quot; timestamp &quot;timestamp with zone&quot;</tag>
  <title>[PATCH] PostgreSQL timestamp with zone type support</title>
  <updated-at type="datetime">2010-01-26T02:58:18+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>JackC</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3777</url>
  <priority-name nil="true"></priority-name>
  <original-body>The current Rails practice with PostgreSQL is to use timestamp without zone and use ActiveRecord's time zone handling. This works fine for Rails but makes it slightly inconvenient for ad hoc, local time queries outside of Rails. With this patch ActiveRecord sets the connection time to UTC when creating the connection if AR::Base.default_timezone is :utc. Rails can then handle time zones its way and other clients can use PostgreSQL's time zone handling.</original-body>
  <latest-body>The current Rails practice with PostgreSQL is to use timestamp without zone and use ActiveRecord's time zone handling. This works fine for Rails but makes it slightly inconvenient for ad hoc, local time queries outside of Rails. With this patch ActiveRecord sets the connection time to UTC when creating the connection if AR::Base.default_timezone is :utc. Rails can then handle time zones its way and other clients can use PostgreSQL's time zone handling.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The current Rails practice with PostgreSQL is to use timestamp
without zone and use ActiveRecord's time zone handling. This works
fine for Rails but makes it slightly inconvenient for ad hoc, local
time queries outside of Rails. With this patch ActiveRecord sets
the connection time to UTC when creating the connection if
AR::Base.default_timezone is :utc. Rails can then handle time zones
its way and other clients can use PostgreSQL's time zone
handling.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The current Rails practice with PostgreSQL is to use timestamp without zone and use ActiveRecord's time zone handling. This works fine for Rails but makes it slightly inconvenient for ad hoc, local time queries outside of Rails. With this patch ActiveRecord sets the connection time to UTC when creating the connection if AR::Base.default_timezone is :utc. Rails can then handle time zones its way and other clients can use PostgreSQL's time zone handling.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The current Rails practice with PostgreSQL is to use timestamp
without zone and use ActiveRecord's time zone handling. This works
fine for Rails but makes it slightly inconvenient for ad hoc, local
time queries outside of Rails. With this patch ActiveRecord sets
the connection time to UTC when creating the connection if
AR::Base.default_timezone is :utc. Rails can then handle time zones
its way and other clients can use PostgreSQL's time zone
handling.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-24T02:35:13+00:00</created-at>
      <creator-id type="integer">27836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3777</number>
      <permalink>patch-postgresql-timestamp-with-zone-type-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord postgresql &quot;time zone&quot; timestamp &quot;timestamp with zone&quot;</tag>
      <title>[PATCH] PostgreSQL timestamp with zone type support</title>
      <updated-at type="datetime">2010-01-24T02:35:14+00:00</updated-at>
      <user-id type="integer">27836</user-id>
      <version type="integer">1</version>
      <user-name>JackC</user-name>
      <creator-name>JackC</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3777</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [c5b652f3d25ef92ae0f67551464fb03bda6aeb4f]) PostgreSQLAdapter: set time_zone to UTC when Base.default_timezone == :utc so that Postgres doesn't incorrectly offset-adjust values inserted into TIMESTAMP WITH TIME ZONE columns [#3777 state:resolved]
http://github.com/rails/rails/commit/c5b652f3d25ef92ae0f67551464fb03bda6aeb4f</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/c5b652f3d25ef92ae0f67551464fb03bda6aeb4f&quot;
title=
&quot;Changeset [c5b652f3d25ef92ae0f67551464fb03bda6aeb4f]&quot;&gt;[c5b652f3d25ef92ae0f67551464fb03bda6aeb4f]&lt;/a&gt;)
PostgreSQLAdapter: set time_zone to UTC when Base.default_timezone
== :utc so that Postgres doesn't incorrectly offset-adjust values
inserted into TIMESTAMP WITH TIME ZONE columns [&lt;a href=
&quot;/projects/8994/tickets/3777&quot; title=&quot;Ticket #3777&quot;&gt;#3777&lt;/a&gt;
state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/c5b652f3d25ef92ae0f67551464fb03bda6aeb4f&quot;&gt;
http://github.com/rails/rails/commit/c5b652f3d25ef92ae0f67551464fb0...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-26T02:58:17+00:00</created-at>
      <creator-id type="integer">27836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3777</number>
      <permalink>patch-postgresql-timestamp-with-zone-type-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 activerecord postgresql &quot;time zone&quot; timestamp &quot;timestamp with zone&quot;</tag>
      <title>[PATCH] PostgreSQL timestamp with zone type support</title>
      <updated-at type="datetime">2010-01-26T02:58:18+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>JackC</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3777</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c898c644c83d1ccb4c2363f8cd18dfed9838e2de</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-24T02:35:13+00:00</created-at>
      <filename>postgresql_timestamp_with_zone_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">388142</id>
      <size type="integer">5141</size>
      <uploader-id type="integer">27836</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/388142/postgresql_timestamp_with_zone_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
