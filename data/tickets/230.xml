<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-21T15:57:21+01:00</created-at>
  <creator-id type="integer">6917</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">230</number>
  <permalink>fire-model-callbacks-before-notifying-observers</permalink>
  <priority type="integer">9</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord patch verified</tag>
  <title>Fire model callbacks before notifying observers</title>
  <updated-at type="datetime">2010-01-29T02:19:28+00:00</updated-at>
  <user-id type="integer">10945</user-id>
  <version type="integer">21</version>
  <user-name>Obie</user-name>
  <creator-name>Craig Demyanovich</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>While extracting some behavior from a model callback to an observer, I discovered that observers are notified before model callbacks are fired. I expected the opposite. Since I know of no particular reason for the order, I'm submitting a patch to change it.

I didn't add any documentation, but I can envision adding a &quot;Callbacks and Observers&quot; section to the docs that indicates that model callbacks fire before observers are notified.</original-body>
  <latest-body>While extracting some behavior from a model callback to an observer, I discovered that observers are notified before model callbacks are fired. I expected the opposite. Since I know of no particular reason for the order, I'm submitting a patch to change it.

I didn't add any documentation, but I can envision adding a &quot;Callbacks and Observers&quot; section to the docs that indicates that model callbacks fire before observers are notified.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
While extracting some behavior from a model callback to an observer, I discovered that observers are notified before model callbacks are fired. I expected the opposite. Since I know of no particular reason for the order, I'm submitting a patch to change it.
&lt;/p&gt;&lt;p&gt;
I didn't add any documentation, but I can envision adding a &quot;Callbacks and Observers&quot; section to the docs that indicates that model callbacks fire before observers are notified.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While extracting some behavior from a model callback to an observer, I discovered that observers are notified before model callbacks are fired. I expected the opposite. Since I know of no particular reason for the order, I'm submitting a patch to change it.

I didn't add any documentation, but I can envision adding a &quot;Callbacks and Observers&quot; section to the docs that indicates that model callbacks fire before observers are notified.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
While extracting some behavior from a model callback to an observer, I discovered that observers are notified before model callbacks are fired. I expected the opposite. Since I know of no particular reason for the order, I'm submitting a patch to change it.
&lt;/p&gt;&lt;p&gt;
I didn't add any documentation, but I can envision adding a &quot;Callbacks and Observers&quot; section to the docs that indicates that model callbacks fire before observers are notified.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-21T15:57:22+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-21T15:57:22+01:00</updated-at>
      <user-id type="integer">6917</user-id>
      <version type="integer">1</version>
      <user-name>Craig Demyanovich</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1. This patch is simple and the test is clean and easy to read. The proposed behavior also seems to be correct: model callbacks should fire before external Observer callbacks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1. This patch is simple and the test is clean and easy to read. The proposed behavior also seems to be correct: model callbacks should fire before external Observer callbacks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-21T16:41:26+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-21T16:41:26+01:00</updated-at>
      <user-id type="integer">14510</user-id>
      <version type="integer">2</version>
      <user-name>Zach Dennis</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1. Looks good to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1. Looks good to me.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-21T17:05:06+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-21T17:05:06+01:00</updated-at>
      <user-id type="integer">20904</user-id>
      <version type="integer">3</version>
      <user-name>Jason Stewart</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'd also like to add that the tests look good, and firing the callbacks on the model before the observers seems to be the right thing to do.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'd also like to add that the tests look good, and firing the callbacks on the model before the observers seems to be the right thing to do.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-21T17:16:39+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-21T17:16:39+01:00</updated-at>
      <user-id type="integer">20904</user-id>
      <version type="integer">4</version>
      <user-name>Jason Stewart</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I can't think of any reason why it should be the way it is. Seems logical that the callbacks defined closest to the model should be called first.

+1 - patch and tests look good.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I can't think of any reason why it should be the way it is. Seems logical that the callbacks defined closest to the model should be called first.
&lt;/p&gt;&lt;p&gt;
+1 - patch and tests look good.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-23T05:06:53+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-23T05:06:53+01:00</updated-at>
      <user-id type="integer">18068</user-id>
      <version type="integer">5</version>
      <user-name>Brandon Keepers</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

I think it makes much more sense for model callbacks to fire first, then observers. Tests all look good and pass.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1
&lt;/p&gt;&lt;p&gt;
I think it makes much more sense for model callbacks to fire first, then observers. Tests all look good and pass.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-23T08:00:31+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-23T08:00:31+01:00</updated-at>
      <user-id type="integer">1607</user-id>
      <version type="integer">6</version>
      <user-name>Mark Van Holstyn</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-25T00:29:01+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-25T00:29:01+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">7</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [08763e606282f14fe98f4cf87a9f93d6836373cc]) Callbacks fire before notifying observers [#230 state:resolved]
Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/08763e606282f14fe98f4cf87a9f93d6836373cc</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [08763e606282f14fe98f4cf87a9f93d6836373cc]) Callbacks fire before notifying observers [#230 state:resolved]
&lt;/p&gt;&lt;p&gt;
Signed-off-by: Joshua Peek 
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/08763e606282f14fe98f4cf87a9f93d6836373cc&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-28T16:16:51+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-28T16:16:51+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After 2.1</body>
      <body-html>&lt;div&gt;&lt;p&gt;
After 2.1
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-28T16:26:44+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
:milestone: 9901
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-05-28T16:26:44+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">9</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [aa1771668877f20ca044e8f45a9736fbb7c8402e]) Callbacks fire before notifying observers [#230 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/aa1771668877f20ca044e8f45a9736fbb7c8402e</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [aa1771668877f20ca044e8f45a9736fbb7c8402e]) Callbacks fire before notifying observers [#230 state:resolved]
&lt;/p&gt;&lt;p&gt;
Signed-off-by: Joshua Peek 
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/aa1771668877f20ca044e8f45a9736fbb7c8402e&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-03T19:38:19+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-06-03T19:38:19+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">10</version>
      <user-name>Repository</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Actually, this just broke my application. Here's why:

I have ComponentInstances, a tree based model that's the core of my CMS. Instances of ComponentInstances are polymorphic so you can add Pages, Links, Podcasts etc... to your site and ComponentInstance handles the ordering and tree structuring.

To make this nice and automatic when you create a Page (for example) there is an observer on the Page model that creates and links the ComponentInstance. Actually there's only one observer that watches all my models that need associated ComponentInstances (but that's nothing surprising).

The issue comes when I have after_create callbacks on my models that need to use the associated component_instance. For example, I have a callback on one of our models that creates some children instances below this model instance. To do this we need to go page.component_instance.children &lt;&lt; blah. But here's the catch, because this callback in the model is called before the callback in the observer, the component_instance doesn't exist yet.

Obviously this is a fairly complex case, but there's nothing wrong with it as far as I'm aware. Can we come to a solution that works for all?

Cheers,

Brendon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually, this just broke my application. Here's why:&lt;/p&gt;
&lt;p&gt;I have ComponentInstances, a tree based model that's the core of
my CMS. Instances of ComponentInstances are polymorphic so you can
add Pages, Links, Podcasts etc... to your site and
ComponentInstance handles the ordering and tree structuring.&lt;/p&gt;
&lt;p&gt;To make this nice and automatic when you create a Page (for
example) there is an observer on the Page model that creates and
links the ComponentInstance. Actually there's only one observer
that watches all my models that need associated ComponentInstances
(but that's nothing surprising).&lt;/p&gt;
&lt;p&gt;The issue comes when I have after_create callbacks on my models
that need to use the associated component_instance. For example, I
have a callback on one of our models that creates some children
instances below this model instance. To do this we need to go
page.component_instance.children &amp;lt;&amp;lt; blah. But here's the
catch, because this callback in the model is called before the
callback in the observer, the component_instance doesn't exist
yet.&lt;/p&gt;
&lt;p&gt;Obviously this is a fairly complex case, but there's nothing
wrong with it as far as I'm aware. Can we come to a solution that
works for all?&lt;/p&gt;
&lt;p&gt;Cheers,&lt;/p&gt;
&lt;p&gt;Brendon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-26T06:40:41+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-11-26T06:40:46+00:00</updated-at>
      <user-id type="integer">38947</user-id>
      <version type="integer">11</version>
      <user-name>Brendon Muir</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That a model's callbacks fire before any of its observers are notified makes the most sense to me, at least as a default. Indeed, the surprise that they didn't work that way is the reason that I wrote the patch. Assuming that there's no good way to change your implementation to match this behavior, you could explore ways to configure the callback and observer notification order, perhaps on a per-model basis.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That a model's callbacks fire before any of its observers are
notified makes the most sense to me, at least as a default. Indeed,
the surprise that they didn't work that way is the reason that I
wrote the patch. Assuming that there's no good way to change your
implementation to match this behavior, you could explore ways to
configure the callback and observer notification order, perhaps on
a per-model basis.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-26T14:41:47+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-11-26T14:41:50+00:00</updated-at>
      <user-id type="integer">6917</user-id>
      <version type="integer">12</version>
      <user-name>Craig Demyanovich</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks Craig, I managed to work around it with superclasses. When you define callbacks in superclasses (and do self.abstract_class = true on that superclass of course), these callbacks get called first. Handily, I already had the superclass in place so it was an easy change and now I don't need to maintain a list of observed classes in my observer.

However, what upset me about this change was that you mention that documenting the modification would have been nice, but you never actually did it. I searched for half a day (literally) trying to find an explanation as to why the behaviour had suddenly changed and finally stumbled upon this ticket. Needless to say that if the execution order was documented I would have found the problem much sooner as I scoured the API for any hint of it :) Perhaps could you add a line to the docs to this effect now?

Cheers,

Brendon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks Craig, I managed to work around it with superclasses.
When you define callbacks in superclasses (and do
self.abstract_class = true on that superclass of course), these
callbacks get called first. Handily, I already had the superclass
in place so it was an easy change and now I don't need to maintain
a list of observed classes in my observer.&lt;/p&gt;
&lt;p&gt;However, what upset me about this change was that you mention
that documenting the modification would have been nice, but you
never actually did it. I searched for half a day (literally) trying
to find an explanation as to why the behaviour had suddenly changed
and finally stumbled upon this ticket. Needless to say that if the
execution order was documented I would have found the problem much
sooner as I scoured the API for any hint of it :) Perhaps could you
add a line to the docs to this effect now?&lt;/p&gt;
&lt;p&gt;Cheers,&lt;/p&gt;
&lt;p&gt;Brendon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-27T08:39:19+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2008-11-27T08:39:23+00:00</updated-at>
      <user-id type="integer">34659</user-id>
      <version type="integer">13</version>
      <user-name>Brendon</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I was searching the book, The Rails Way, for an answer to another question when I stumbled upon the &quot;Timing&quot; section on p. 284. It states that, &quot;Observers are notified before the in-object callbacks are triggered. Otherwise, it wouldn't be possible to act on the whole object in something like a before_destroy observer without having the object's own callbacks executed first.&quot;

Does this new information make anyone else want to remove my patch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was searching the book, The Rails Way, for an answer to
another question when I stumbled upon the &quot;Timing&quot; section on p.
284. It states that, &quot;Observers are notified before the in-object
callbacks are triggered. Otherwise, it wouldn't be possible to act
on the whole object in something like a before_destroy observer
without having the object's own callbacks executed first.&quot;&lt;/p&gt;
&lt;p&gt;Does this new information make anyone else want to remove my
patch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-04T18:56:32+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2009-02-04T18:56:35+00:00</updated-at>
      <user-id type="integer">6917</user-id>
      <version type="integer">14</version>
      <user-name>Craig Demyanovich</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yes please. It makes sense to reverse the change (and document it in an obvious place) especially since a prominent book explicitly talks of it and states a very good reason to have it the original order.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes please. It makes sense to reverse the change (and document
it in an obvious place) especially since a prominent book
explicitly talks of it and states a very good reason to have it the
original order.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-04T23:38:10+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2009-02-04T23:38:14+00:00</updated-at>
      <user-id type="integer">34659</user-id>
      <version type="integer">15</version>
      <user-name>Brendon</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't think the order should be reverted. Trying to appeal to the book as the authority is not a solid argument, and unless the book expands in more detail on why it is such a good thing, I don't see the sentence that Craig found that compelling.

In what concrete example would you expect or need an external callback to be called first? 

After a model object is destroyed it still retains all of its properties in memory, so any external before_destroy callback would still be able to operate just fine. The only time it wouldn't would be if it needed to operate on the object itself (by updating and saving the object), but that seems pointless since it's in the process of being deleted.

An object's internal callbacks should take precedence over external callbacks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think the order should be reverted. Trying to appeal to
the book as the authority is not a solid argument, and unless the
book expands in more detail on why it is such a good thing, I don't
see the sentence that Craig found that compelling.&lt;/p&gt;
&lt;p&gt;In what concrete example would you expect or need an external
callback to be called first?&lt;/p&gt;
&lt;p&gt;After a model object is destroyed it still retains all of its
properties in memory, so any external before_destroy callback would
still be able to operate just fine. The only time it wouldn't would
be if it needed to operate on the object itself (by updating and
saving the object), but that seems pointless since it's in the
process of being deleted.&lt;/p&gt;
&lt;p&gt;An object's internal callbacks should take precedence over
external callbacks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-05T00:31:06+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2009-02-05T00:31:11+00:00</updated-at>
      <user-id type="integer">14510</user-id>
      <version type="integer">16</version>
      <user-name>Zach Dennis</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I gave a perfectly fine example above where I wanted to create dependent objects after the creation of the observed object, and then work on these as a group via internal callbacks specific to certain objects.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I gave a perfectly fine example above where I wanted to create
dependent objects after the creation of the observed object, and
then work on these as a group via internal callbacks specific to
certain objects.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-05T03:06:50+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2009-02-05T03:06:53+00:00</updated-at>
      <user-id type="integer">34659</user-id>
      <version type="integer">17</version>
      <user-name>Brendon</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>i am in trouble now with post notifying observers ...

Assume you want to prevent object destruction based on observing before_destroy.

There are two problems now:

1) the return value of notified callback is thrown away. This seems to be ok for me, as i think an observer should not have an easy to use way of changing model behaviour.

but now

2) i do not have a chance to define something like 
model.please_do_not_destoy_as_external_conditions_are_not_met = true
and react on it within the model before_destroy callback itself ...

What could be a solution to this problem now?</body>
      <body-html>&lt;div&gt;&lt;p&gt;i am in trouble now with post notifying observers ...&lt;/p&gt;
&lt;p&gt;Assume you want to prevent object destruction based on observing
before_destroy.&lt;/p&gt;
&lt;p&gt;There are two problems now:&lt;/p&gt;
&lt;p&gt;1) the return value of notified callback is thrown away. This
seems to be ok for me, as i think an observer should not have an
easy to use way of changing model behaviour.&lt;/p&gt;
&lt;p&gt;but now&lt;/p&gt;
&lt;p&gt;2) i do not have a chance to define something like
model.please_do_not_destoy_as_external_conditions_are_not_met =
true and react on it within the model before_destroy callback
itself ...&lt;/p&gt;
&lt;p&gt;What could be a solution to this problem now?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T10:32:13+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2009-04-21T10:32:15+01:00</updated-at>
      <user-id type="integer">47165</user-id>
      <version type="integer">18</version>
      <user-name>Paul</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This change broke my app, too.  (I use before_save() to set a belongs_to association to a new record, but now that record doesn't get saved.)

Perhaps the best of both worlds is to call notify() and run_callback() in different order based on whether the prefix is 'before_' or 'after_'.  That way, observers have access to the latest data (after some event) and the ability to modify data (before some event).</body>
      <body-html>&lt;div&gt;&lt;p&gt;This change broke my app, too. (I use before_save() to set a
belongs_to association to a new record, but now that record doesn't
get saved.)&lt;/p&gt;
&lt;p&gt;Perhaps the best of both worlds is to call notify() and
run_callback() in different order based on whether the prefix is
'before&lt;em&gt;' or 'after&lt;/em&gt;'. That way, observers have access to
the latest data (after some event) and the ability to modify data
(before some event).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-22T19:42:07+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2009-07-22T19:42:11+01:00</updated-at>
      <user-id type="integer">63657</user-id>
      <version type="integer">19</version>
      <user-name>tom_302</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 @tom_302

I completely agree that _before_ and _after_ callbacks should be handled differently.  

In the case of before callbacks, observers can (1) process external information that the model shouldn't have to worry about, (2) change the state of the model appropriately, so (3) the model can make an informed final decision on whether to follow through with the action.  

In the case of &quot;after&quot; observers like after_create, the model can do it's own post-processing first, providing a complete model for the observer to use when, say, sending an email.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 @tom_302&lt;/p&gt;
&lt;p&gt;I completely agree that &lt;em&gt;before&lt;/em&gt; and &lt;em&gt;after&lt;/em&gt;
callbacks should be handled differently.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In the case of before callbacks, observers can (1) process
external information that the model shouldn't have to worry about,
(2) change the state of the model appropriately, so (3) the model
can make an informed final decision on whether to follow through
with the action.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In the case of &quot;after&quot; observers like after_create, the model
can do it's own post-processing first, providing a complete model
for the observer to use when, say, sending an email.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-31T14:57:47+01:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2009-08-31T16:16:45+01:00</updated-at>
      <user-id type="integer">68189</user-id>
      <version type="integer">20</version>
      <user-name>legolin</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 @legolin Well-reasoned option, should be considered.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 @legolin Well-reasoned option, should be considered.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-29T02:19:24+00:00</created-at>
      <creator-id type="integer">6917</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">230</number>
      <permalink>fire-model-callbacks-before-notifying-observers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch verified</tag>
      <title>Fire model callbacks before notifying observers</title>
      <updated-at type="datetime">2010-01-29T02:19:28+00:00</updated-at>
      <user-id type="integer">10945</user-id>
      <version type="integer">21</version>
      <user-name>Obie</user-name>
      <creator-name>Craig Demyanovich</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/230</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1e5bbc202c1cadd7210cdf8aa889d6f2a9a7d5d3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-21T15:57:22+01:00</created-at>
      <filename>fire_model_callbacks_before_notifying_observers.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">23988</id>
      <size type="integer">4065</size>
      <uploader-id type="integer">6917</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/23988/fire_model_callbacks_before_notifying_observers.diff</url>
    </attachment>
  </attachments>
</ticket>
