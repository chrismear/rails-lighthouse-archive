<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-07T10:28:56+01:00</created-at>
  <creator-id type="integer">8551</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3155</number>
  <permalink>first-post-to-a-fresh-production-server-loses-form-data</permalink>
  <priority type="integer">138969</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag nil="true"></tag>
  <title>First POST to a fresh production server loses form data</title>
  <updated-at type="datetime">2009-09-25T12:49:31+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">4</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Fjan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3155</url>
  <priority-name nil="true"></priority-name>
  <original-body>Just after restarting a production Mongrel if (and only if) the first request to that server is a POST the associated form data gets lost. It is not possible to write a test case since this only happens in production mode, but the production log will confirm that the posted query does not contain any data.

This bug does not occur on any subsequent requests, and it also does not occur if the first request to the server is a GET Since restarts are rare and the first request will often be a GET the bug will typically not get noticed. It is still an insidious bug since the user could be just about to submit a large form while the server was restarted and lose his work. Also, some application might not be coded to expect an empty POST and throw an error.

I'm not sure if Rails or Mongrel is to blame, but since it only happens in production mode my guess would be Rails.</original-body>
  <latest-body>Just after restarting a production Mongrel if (and only if) the first request to that server is a POST the associated form data gets lost. It is not possible to write a test case since this only happens in production mode, but the production log will confirm that the posted query does not contain any data.

This bug does not occur on any subsequent requests, and it also does not occur if the first request to the server is a GET Since restarts are rare and the first request will often be a GET the bug will typically not get noticed. It is still an insidious bug since the user could be just about to submit a large form while the server was restarted and lose his work. Also, some application might not be coded to expect an empty POST and throw an error.

I'm not sure if Rails or Mongrel is to blame, but since it only happens in production mode my guess would be Rails.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Just after restarting a production Mongrel if (and only if) the
first request to that server is a POST the associated form data
gets lost. It is not possible to write a test case since this only
happens in production mode, but the production log will confirm
that the posted query does not contain any data.&lt;/p&gt;
&lt;p&gt;This bug does not occur on any subsequent requests, and it also
does not occur if the first request to the server is a GET Since
restarts are rare and the first request will often be a GET the bug
will typically not get noticed. It is still an insidious bug since
the user could be just about to submit a large form while the
server was restarted and lose his work. Also, some application
might not be coded to expect an empty POST and throw an error.&lt;/p&gt;
&lt;p&gt;I'm not sure if Rails or Mongrel is to blame, but since it only
happens in production mode my guess would be Rails.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just after restarting a production Mongrel if (and only if) the first request to that server is a POST the associated form data gets lost. It is not possible to write a test case since this only happens in production mode, but the production log will confirm that the posted query does not contain any data.

This bug does not occur on any subsequent requests, and it also does not occur if the first request to the server is a GET Since restarts are rare and the first request will often be a GET the bug will typically not get noticed. It is still an insidious bug since the user could be just about to submit a large form while the server was restarted and lose his work. Also, some application might not be coded to expect an empty POST and throw an error.

I'm not sure if Rails or Mongrel is to blame, but since it only happens in production mode my guess would be Rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just after restarting a production Mongrel if (and only if) the
first request to that server is a POST the associated form data
gets lost. It is not possible to write a test case since this only
happens in production mode, but the production log will confirm
that the posted query does not contain any data.&lt;/p&gt;
&lt;p&gt;This bug does not occur on any subsequent requests, and it also
does not occur if the first request to the server is a GET Since
restarts are rare and the first request will often be a GET the bug
will typically not get noticed. It is still an insidious bug since
the user could be just about to submit a large form while the
server was restarted and lose his work. Also, some application
might not be coded to expect an empty POST and throw an error.&lt;/p&gt;
&lt;p&gt;I'm not sure if Rails or Mongrel is to blame, but since it only
happens in production mode my guess would be Rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-07T10:28:56+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3155</number>
      <permalink>first-post-to-a-fresh-production-server-loses-form-data</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>First POST to a fresh production server loses form data</title>
      <updated-at type="datetime">2009-09-07T10:29:01+01:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">1</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3155</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have tried to reproduce this on another server without any luck, so this makes it less likely that Rails is to blame.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have tried to reproduce this on another server without any
luck, so this makes it less likely that Rails is to blame.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-09T13:44:45+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3155</number>
      <permalink>first-post-to-a-fresh-production-server-loses-form-data</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>First POST to a fresh production server loses form data</title>
      <updated-at type="datetime">2009-09-09T13:44:51+01:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">2</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3155</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just noticed this is a dupe of [2993][https://rails.lighthouseapp.com/projects/8994/tickets/2993-first-request-will-always-have-an-empty-body-due-to-delayed-load-of-action_controllercgi_process]. The description there is better, we can close this one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just noticed this is a dupe of &lt;a href=
&quot;/projects/8994/changesets/2993&quot; title=
&quot;Changeset [2993]&quot;&gt;[2993]&lt;/a&gt;[&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2993-first-request-will-always-have-an-empty-body-due-to-delayed-load-of-action_controllercgi_process]&quot;&gt;https://rails.lighthouseapp.com/projects/8994/tickets/2993-first-re...&lt;/a&gt;.
The description there is better, we can close this one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-09T14:58:19+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3155</number>
      <permalink>first-post-to-a-fresh-production-server-loses-form-data</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>First POST to a fresh production server loses form data</title>
      <updated-at type="datetime">2009-09-09T14:58:21+01:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">3</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3155</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Dupe of #2993</body>
      <body-html>&lt;div&gt;&lt;p&gt;Dupe of &lt;a href=&quot;/projects/8994/tickets/2993&quot; title=
&quot;Ticket #2993&quot;&gt;#2993&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-25T12:32:08+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3155</number>
      <permalink>first-post-to-a-fresh-production-server-loses-form-data</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>First POST to a fresh production server loses form data</title>
      <updated-at type="datetime">2009-09-25T12:49:31+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">4</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3155</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
