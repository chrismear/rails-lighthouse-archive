<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-08T23:12:08+00:00</created-at>
  <creator-id type="integer">13349</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1290</number>
  <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
  <priority type="integer">6</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>activerecord bug cache</tag>
  <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
  <updated-at type="datetime">2010-11-08T23:12:08+00:00</updated-at>
  <user-id type="integer">41316</user-id>
  <version type="integer">42</version>
  <user-name>macario</user-name>
  <creator-name>Nando Vieira</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm having some weird problems with ActiveRecord in the edge version. Sometimes the application raises the following error and won't stop until I restart the server, even at development environment with cache disabled.

@@@
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:75:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `each'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:242:in `method_missing'
@@@

Apparently is something related to datetime fields and Timezone conversion.

My application have nothing special and never raises this error when using Rails 2.1.1.</original-body>
  <latest-body>I'm having some weird problems with ActiveRecord in the edge version. Sometimes the application raises the following error and won't stop until I restart the server, even at development environment with cache disabled.

@@@
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:75:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `each'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:242:in `method_missing'
@@@

Apparently is something related to datetime fields and Timezone conversion.

My application have nothing special and never raises this error when using Rails 2.1.1.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm having some weird problems with ActiveRecord in the edge
version. Sometimes the application raises the following error and
won't stop until I restart the server, even at development
environment with cache disabled.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:75:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `each'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:242:in `method_missing'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Apparently is something related to datetime fields and Timezone
conversion.&lt;/p&gt;
&lt;p&gt;My application have nothing special and never raises this error
when using Rails 2.1.1.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm having some weird problems with ActiveRecord in the edge version. Sometimes the application raises the following error and won't stop until I restart the server, even at development environment with cache disabled.

@@@
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:75:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `each'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:242:in `method_missing'
@@@

Apparently is something related to datetime fields and Timezone conversion.

My application have nothing special and never raises this error when using Rails 2.1.1.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having some weird problems with ActiveRecord in the edge
version. Sometimes the application raises the following error and
won't stop until I restart the server, even at development
environment with cache disabled.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:75:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `each'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:71:in `define_attribute_methods'
vendor/rails/activerecord/lib/active_record/attribute_methods.rb:242:in `method_missing'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Apparently is something related to datetime fields and Timezone
conversion.&lt;/p&gt;
&lt;p&gt;My application have nothing special and never raises this error
when using Rails 2.1.1.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-29T20:51:47+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-10-29T20:51:48+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">1</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T10:36:42+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord date datetime edge timezone utc
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-10-30T10:36:47+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">2</version>
      <user-name>DHH</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Nando,

Specifically what error is raised? (this is just the stack trace)

Also, which version of Ruby are you using, and what are you setting config.time_zone to?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Nando,&lt;/p&gt;
&lt;p&gt;Specifically what error is raised? (this is just the stack
trace)&lt;/p&gt;
&lt;p&gt;Also, which version of Ruby are you using, and what are you
setting config.time_zone to?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T14:29:21+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-10-30T14:29:25+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">3</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey Geoff,

Just a NoMethodError for nil.include?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Geoff,&lt;/p&gt;
&lt;p&gt;Just a NoMethodError for nil.include?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T20:10:19+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-10-31T20:10:21+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">4</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's the error:

@@@
You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.include?
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's the error:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.include?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T20:14:22+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-10-31T20:14:25+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">5</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Don't know where and why but *skip_time_zone_conversion_for_attributes* is being set no nil.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Don't know where and why but
&lt;em&gt;skip_time_zone_conversion_for_attributes&lt;/em&gt; is being set no
nil.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T20:27:52+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-10-31T20:27:55+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">6</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm having this issue on edge rails as well.  I'm running ruby 1.8.7 (2008-08-11 patchlevel 72), and unfortunately I don't have a 1.8.6 machine to test on at the moment.  Nando, what ruby version are you running?

More info which may help with troubleshooting:

My config.time_zone is set to 'UTC'.

In my application, I can do one successful request for a url that has the following code (in the view) before I get this error and have to restart the server:

@@@
link_to(image_tag(@refacement.images.first.thumbnails.find_by_thumbnail('medium').url), @refacement.images.first.thumbnails.find_by_thumbnail('large'), :popup =&gt; true)
@@@

If I remove the link_to, and just include the image_tag part of the code above, I can't reproduce the issue:

@@@
image_tag(@refacement.images.first.thumbnails.find_by_thumbnail('medium').url)
@@@

The primary resource that I'm testing with is eager-loading its associated resources (including images and thumbnails), but I have the same issue when I take out the eager-loading code.  It doesn't change the behavior when I turn on or off caching of the result set that I'm using with memcached.

So the most minimal set of code changes that I can make involve the link_to in the view above.  Let me know if I can do anything else to help troubleshoot this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having this issue on edge rails as well. I'm running ruby
1.8.7 (2008-08-11 patchlevel 72), and unfortunately I don't have a
1.8.6 machine to test on at the moment. Nando, what ruby version
are you running?&lt;/p&gt;
&lt;p&gt;More info which may help with troubleshooting:&lt;/p&gt;
&lt;p&gt;My config.time_zone is set to 'UTC'.&lt;/p&gt;
&lt;p&gt;In my application, I can do one successful request for a url
that has the following code (in the view) before I get this error
and have to restart the server:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
link_to(image_tag(@refacement.images.first.thumbnails.find_by_thumbnail('medium').url), @refacement.images.first.thumbnails.find_by_thumbnail('large'), :popup =&amp;gt; true)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If I remove the link_to, and just include the image_tag part of
the code above, I can't reproduce the issue:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
image_tag(@refacement.images.first.thumbnails.find_by_thumbnail('medium').url)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The primary resource that I'm testing with is eager-loading its
associated resources (including images and thumbnails), but I have
the same issue when I take out the eager-loading code. It doesn't
change the behavior when I turn on or off caching of the result set
that I'm using with memcached.&lt;/p&gt;
&lt;p&gt;So the most minimal set of code changes that I can make involve
the link_to in the view above. Let me know if I can do anything
else to help troubleshoot this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T13:09:32+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-01T13:09:38+00:00</updated-at>
      <user-id type="integer">36205</user-id>
      <version type="integer">7</version>
      <user-name>Justin Leitgeb</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm using the Mac OS X 10.5 Ruby:

$ ruby -v
ruby 1.8.6 (2008-03-03 patchlevel 114) [universal-darwin9.0]

My time zone is also set to UTC but I overwrite it when user is logged.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using the Mac OS X 10.5 Ruby:&lt;/p&gt;
&lt;p&gt;$ ruby -v ruby 1.8.6 (2008-03-03 patchlevel 114)
[universal-darwin9.0]&lt;/p&gt;
&lt;p&gt;My time zone is also set to UTC but I overwrite it when user is
logged.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T14:34:38+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-01T14:34:43+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">8</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Jsl and Nano, thanks for your help with this.

@Jsl, just to confirm, you're getting exactly the same error that Nano is getting, i.e., a NoMethodError when  &quot;create_time_zone_conversion_attribute?&quot; is called by ActiveRecord?

I tried creating a new app on edge and replicating this issue (I'm on ruby 1.8.6 (2007-09-24 patchlevel 111)), but I wasn't able to.

Can you both confirm that there's no code in your app or plugins that would be setting skip_time_zone_conversion_for_attributes to nil? Rails itself initializes this to an empty array, and otherwise never changes it; it only reads from it.

Does this error occur when running in both development and production modes? I'm wondering if this might be an issue with reloading.

Does this issue occur with different resources in your apps, or is it just with a particular resource/association?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jsl and Nano, thanks for your help with this.&lt;/p&gt;
&lt;p&gt;@Jsl, just to confirm, you're getting exactly the same error
that Nano is getting, i.e., a NoMethodError when
&quot;create_time_zone_conversion_attribute?&quot; is called by
ActiveRecord?&lt;/p&gt;
&lt;p&gt;I tried creating a new app on edge and replicating this issue
(I'm on ruby 1.8.6 (2007-09-24 patchlevel 111)), but I wasn't able
to.&lt;/p&gt;
&lt;p&gt;Can you both confirm that there's no code in your app or plugins
that would be setting skip_time_zone_conversion_for_attributes to
nil? Rails itself initializes this to an empty array, and otherwise
never changes it; it only reads from it.&lt;/p&gt;
&lt;p&gt;Does this error occur when running in both development and
production modes? I'm wondering if this might be an issue with
reloading.&lt;/p&gt;
&lt;p&gt;Does this issue occur with different resources in your apps, or
is it just with a particular resource/association?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T19:57:03+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-01T19:57:04+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">9</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Geoff,

Yes, the error is the same as the one that Nano reported.  Attached is the application trace, in case it provides any useful information.  I did a grep through everything in my project and plugins for the string &quot;skip_time_zone_conversion_for_attributes&quot;, but it didn't appear anywhere outside of vendor/rails.

I can only produce this error with the one association that I mentioned in my initial ticket (a polymorphic association), but I haven't tested extensively with other association types.

I think that you may be on to something with the suspicion about reloading.  I initialized my development environment with most of the settings from production.rb, and couldn't reproduce the error.  I started modifying them one at a time, and finally figured out that the error only occurs when config.cache_classes is set to false.

@Nando - does changing config.cache_classes to true stop this error for you as well?

Justin</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Geoff,&lt;/p&gt;
&lt;p&gt;Yes, the error is the same as the one that Nano reported.
Attached is the application trace, in case it provides any useful
information. I did a grep through everything in my project and
plugins for the string &quot;skip_time_zone_conversion_for_attributes&quot;,
but it didn't appear anywhere outside of vendor/rails.&lt;/p&gt;
&lt;p&gt;I can only produce this error with the one association that I
mentioned in my initial ticket (a polymorphic association), but I
haven't tested extensively with other association types.&lt;/p&gt;
&lt;p&gt;I think that you may be on to something with the suspicion about
reloading. I initialized my development environment with most of
the settings from production.rb, and couldn't reproduce the error.
I started modifying them one at a time, and finally figured out
that the error only occurs when config.cache_classes is set to
false.&lt;/p&gt;
&lt;p&gt;@Nando - does changing config.cache_classes to true stop this
error for you as well?&lt;/p&gt;
&lt;p&gt;Justin&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T20:31:13+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-01T20:31:14+00:00</updated-at>
      <user-id type="integer">36205</user-id>
      <version type="integer">10</version>
      <user-name>Justin Leitgeb</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-02T09:22:06+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-02T09:22:08+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">11</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>As best as I can tell, this is an issue with certain AR models not reloading correctly in development, as opposed to an issue with just the time zone features.

In 2.2, skip_time_zone_conversion_for_attributes was changed from a cattr_accessor, which stores the value in a @@skip_time_zone_conversion_for_attributes class variable, to a class_inheritable_accessor, which stores the value in a hash stored in the @inheritable_attributes instance variable.

In development mode, ActiveRecord::Base.reset_subclasses is called at the end of each request. This method removes all instance variables from each subclass, which would blow away @inheritable_attributes.

If the class reloads correctly, @inheritable_attributes will be reset to their default values (for skip_time_zone_conversion_for_attributes, this defaulted to an empty Array.)

However, if a model class somehow does not reload correctly, we could be left with a model with all instance variables removed, but not re-initialized. Hence the blow up when #include? is called on nil instead of the array that skip_ was supposed to be initialized to.

I came up with this pastie -- http://pastie.org/305903 -- which, when added as an initializer, shows debug info each time attributes are inherited by a subclass of AR::Base. In development mode, each time I request a page that requires an AR model class, I'll see output that shows that the model inherited @inheritable_attributes correctly.

@Justin and @Nando, 

1. could you pull in this pastie, and see if it shows that your models are inheriting these attributes correctly?

2. with the models that are causing problems, are you doing STI, or using observers, or including code from specific plugins? Or something else out of the ordinary?

3. are you doing anything custom with dispatching, or dependencies, or including libraries that would do this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;As best as I can tell, this is an issue with certain AR models
not reloading correctly in development, as opposed to an issue with
just the time zone features.&lt;/p&gt;
&lt;p&gt;In 2.2, skip_time_zone_conversion_for_attributes was changed
from a cattr_accessor, which stores the value in a
@@skip_time_zone_conversion_for_attributes class variable, to a
class_inheritable_accessor, which stores the value in a hash stored
in the @inheritable_attributes instance variable.&lt;/p&gt;
&lt;p&gt;In development mode, ActiveRecord::Base.reset_subclasses is
called at the end of each request. This method removes all instance
variables from each subclass, which would blow away
@inheritable_attributes.&lt;/p&gt;
&lt;p&gt;If the class reloads correctly, @inheritable_attributes will be
reset to their default values (for
skip_time_zone_conversion_for_attributes, this defaulted to an
empty Array.)&lt;/p&gt;
&lt;p&gt;However, if a model class somehow does not reload correctly, we
could be left with a model with all instance variables removed, but
not re-initialized. Hence the blow up when #include? is called on
nil instead of the array that skip_ was supposed to be initialized
to.&lt;/p&gt;
&lt;p&gt;I came up with this pastie -- &lt;a href=&quot;http://pastie.org/305903&quot;&gt;http://pastie.org/305903&lt;/a&gt; -- which,
when added as an initializer, shows debug info each time attributes
are inherited by a subclass of AR::Base. In development mode, each
time I request a page that requires an AR model class, I'll see
output that shows that the model inherited @inheritable_attributes
correctly.&lt;/p&gt;
&lt;p&gt;@Justin and @Nando,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;could you pull in this pastie, and see if it shows that your
models are inheriting these attributes correctly?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;with the models that are causing problems, are you doing STI, or
using observers, or including code from specific plugins? Or
something else out of the ordinary?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;are you doing anything custom with dispatching, or dependencies,
or including libraries that would do this?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-02T17:10:54+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-02T17:10:57+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">12</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Geoff,

Setting `config.cache_classes = true`stopped raising this error.

About the logging method you created, I'm receiving this error:

@@@
/Users/fnando/Sites/wiiluv/app/config/initializers/dependencies.rb:29:in `inherited': undefined method `inherited_without_logging' for Object:Class (NoMethodError)
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/actionpack/lib/action_controller/dispatcher.rb:4
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `require'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/activesupport/lib/active_support/dependencies.rb:148:in `require'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/activesupport/lib/active_support/dependencies.rb:507:in `new_constants_in'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/activesupport/lib/active_support/dependencies.rb:148:in `require'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/railties/lib/dispatcher.rb:23
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	 ... 35 levels...
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/railties/lib/commands/server.rb:49
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `require'
	from script/server:3

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Geoff,&lt;/p&gt;
&lt;p&gt;Setting &lt;code&gt;config.cache_classes = true&lt;/code&gt;stopped raising
this error.&lt;/p&gt;
&lt;p&gt;About the logging method you created, I'm receiving this
error:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
/Users/fnando/Sites/wiiluv/app/config/initializers/dependencies.rb:29:in `inherited': undefined method `inherited_without_logging' for Object:Class (NoMethodError)
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/actionpack/lib/action_controller/dispatcher.rb:4
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `require'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/activesupport/lib/active_support/dependencies.rb:148:in `require'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/activesupport/lib/active_support/dependencies.rb:507:in `new_constants_in'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/activesupport/lib/active_support/dependencies.rb:148:in `require'
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/railties/lib/dispatcher.rb:23
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	 ... 35 levels...
	from /Users/fnando/Sites/wiiluv/app/vendor/rails/railties/lib/commands/server.rb:49
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:27:in `require'
	from script/server:3

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-02T21:28:08+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-02T21:28:13+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">13</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Nando,

Apologies, there was a typo in that last pastie -- try this one:

http://pastie.org/306051</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Nando,&lt;/p&gt;
&lt;p&gt;Apologies, there was a typo in that last pastie -- try this
one:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pastie.org/306051&quot;&gt;http://pastie.org/306051&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-02T22:21:09+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-02T22:21:12+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">14</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Geoff,

All classes are being loaded correctly. 

@@@
SUCCESS REQUEST
===========

=== User is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&gt;{:scoped=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :sort_by=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :paginate=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;}, :record_timestamps=&gt;true, :skip_time_zone_conversion_for_attributes=&gt;[]} ===

=== Game is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&gt;{:scoped=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :sort_by=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :paginate=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;}, :record_timestamps=&gt;true, :skip_time_zone_conversion_for_attributes=&gt;[]} ===


RAISED REQUEST
==============

=== User is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&gt;{:scoped=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :sort_by=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :paginate=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;}, :record_timestamps=&gt;true, :skip_time_zone_conversion_for_attributes=&gt;[]} ===

=== Game is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&gt;{:scoped=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :sort_by=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;, :paginate=&gt;#&lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&gt;}, :record_timestamps=&gt;true, :skip_time_zone_conversion_for_attributes=&gt;[]} ===
@@@

Double checked all plugins I'm using: they're not using `skip_time_zone_conversion_for_attributes` at all!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Geoff,&lt;/p&gt;
&lt;p&gt;All classes are being loaded correctly.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
SUCCESS REQUEST
===========

=== User is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&amp;gt;{:scoped=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :sort_by=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :paginate=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;}, :record_timestamps=&amp;gt;true, :skip_time_zone_conversion_for_attributes=&amp;gt;[]} ===

=== Game is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&amp;gt;{:scoped=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :sort_by=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :paginate=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;}, :record_timestamps=&amp;gt;true, :skip_time_zone_conversion_for_attributes=&amp;gt;[]} ===


RAISED REQUEST
==============

=== User is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&amp;gt;{:scoped=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :sort_by=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :paginate=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;}, :record_timestamps=&amp;gt;true, :skip_time_zone_conversion_for_attributes=&amp;gt;[]} ===

=== Game is inheriting attributes from ActiveRecord::Base. @inheritable_attributes={:scopes=&amp;gt;{:scoped=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :sort_by=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;, :paginate=&amp;gt;#&amp;lt;Proc:0x0219e090@/Users/fnando/Sites/wiiluv/app/vendor/rails/activerecord/lib/active_record/named_scope.rb:86&amp;gt;}, :record_timestamps=&amp;gt;true, :skip_time_zone_conversion_for_attributes=&amp;gt;[]} ===
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Double checked all plugins I'm using: they're not using
&lt;code&gt;skip_time_zone_conversion_for_attributes&lt;/code&gt; at all!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-02T22:48:22+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-02T22:48:24+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">15</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Thanks, Nando. Ok, so it appears inheritable attributes are inheriting correctly for AR::Base.

Something else to try -- if you set explicitly set skip_time_zone_conversion_for_attributes to an empty array in your models,  like so:

class Game &lt; ActiveRecord::Base
  # ...
  self.skip_time_zone_conversion_for_attributes = []
  # ...
end

...does the problem still occur?

(if it does, what if you then set it to a non-empty array, like [:created_at] ?)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks, Nando. Ok, so it appears inheritable attributes are
inheriting correctly for AR::Base.&lt;/p&gt;
&lt;p&gt;Something else to try -- if you set explicitly set
skip_time_zone_conversion_for_attributes to an empty array in your
models, like so:&lt;/p&gt;
&lt;p&gt;class Game &amp;lt; ActiveRecord::Base # ...
self.skip_time_zone_conversion_for_attributes = [] # ... end&lt;/p&gt;
&lt;p&gt;...does the problem still occur?&lt;/p&gt;
&lt;p&gt;(if it does, what if you then set it to a non-empty array, like
[:created_at] ?)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-03T00:08:06+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-03T00:08:09+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">16</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>..try again with that code snippet:

@@@ ruby
class Game &lt; ActiveRecord::Base 
  # ... 
  self.skip_time_zone_conversion_for_attributes = [] 
  # ... 
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;..try again with that code snippet:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Game &amp;lt; ActiveRecord::Base
  # ...
  self.skip_time_zone_conversion_for_attributes = []
  # ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-03T00:09:03+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-03T00:09:07+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">17</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Setting `self.skip_time_zone_conversion_for_attributes` to an empty array or `[:created_at]`  doesn't solve the problem. Anything else?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Setting
&lt;code&gt;self.skip_time_zone_conversion_for_attributes&lt;/code&gt; to an
empty array or &lt;code&gt;[:created_at]&lt;/code&gt; doesn't solve the
problem. Anything else?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-03T01:55:04+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-03T01:55:11+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">18</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm getting this too, exactly the same scenario.

* Production environment is fine, it only affects development.
* The first page load works, all subsequent requests fail with this error. 
* Manually setting **skip_time_zone_conversion_for_attributes** doesn't solve it.
* Ruby 1.8.6 (Patchlevel 22) on Leopard
* Default tz is set
* Rails 2.2 release candidate &amp;&amp; edge

Let me know if there's anything that I can help with.

Best,
Dave</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm getting this too, exactly the same scenario.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Production environment is fine, it only affects
development.&lt;/li&gt;
&lt;li&gt;The first page load works, all subsequent requests fail with
this error.&lt;/li&gt;
&lt;li&gt;Manually setting
&lt;strong&gt;skip_time_zone_conversion_for_attributes&lt;/strong&gt; doesn't
solve it.&lt;/li&gt;
&lt;li&gt;Ruby 1.8.6 (Patchlevel 22) on Leopard&lt;/li&gt;
&lt;li&gt;Default tz is set&lt;/li&gt;
&lt;li&gt;Rails 2.2 release candidate &amp;amp;&amp;amp; edge&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let me know if there's anything that I can help with.&lt;/p&gt;
&lt;p&gt;Best, Dave&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-04T17:42:56+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-04T17:43:02+00:00</updated-at>
      <user-id type="integer">14945</user-id>
      <version type="integer">19</version>
      <user-name>David Rice</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@David, thanks for the report. As Justin and Nando have reported, does the problem only happen with a specific page?

I think a next step here would be, if someone who's experiencing the issue could try to replicate this issue in a fresh app. That, or try building up the problem page from scratch, to isolate the code that's causing the problem.

@David, @Nando or @Justin, would one of you be willing to help us out with this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@David, thanks for the report. As Justin and Nando have
reported, does the problem only happen with a specific page?&lt;/p&gt;
&lt;p&gt;I think a next step here would be, if someone who's experiencing
the issue could try to replicate this issue in a fresh app. That,
or try building up the problem page from scratch, to isolate the
code that's causing the problem.&lt;/p&gt;
&lt;p&gt;@David, @Nando or @Justin, would one of you be willing to help
us out with this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-04T18:15:22+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-04T18:15:26+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">20</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Geoff, it happens on every request (logic is referenced in application.html.erb) 

So, I'm trying to get example code together to replicate this but (would you believe) it's being a little bit pesky... will post if I uncover anything.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Geoff, it happens on every request (logic is referenced in
application.html.erb)&lt;/p&gt;
&lt;p&gt;So, I'm trying to get example code together to replicate this
but (would you believe) it's being a little bit pesky... will post
if I uncover anything.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-04T18:48:44+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-04T18:48:46+00:00</updated-at>
      <user-id type="integer">14945</user-id>
      <version type="integer">21</version>
      <user-name>David Rice</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Result. Here's a rails app that replicates this issue. The cause as far as I can see is *assigning an ActiveRecord::Base subclass to a constant (on initialize of Rails)*

http://github.com/davidjrice/buggy_rails_app_1290/tree/master

Now, it's probably an anti-pattern we've uncovered (I'm on a refactoring mission after all)... The data is more perhaps better suited to be represented with a struct (or even just a hash). 

I'll be refactoring that part of the client's app for sure so I'm not too bothered if it's a wontfix :) 

Best,
Dave</body>
      <body-html>&lt;div&gt;&lt;p&gt;Result. Here's a rails app that replicates this issue. The cause
as far as I can see is &lt;em&gt;assigning an ActiveRecord::Base subclass
to a constant (on initialize of Rails)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/davidjrice/buggy_rails_app_1290/tree/master&quot;&gt;http://github.com/davidjrice/bug...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, it's probably an anti-pattern we've uncovered (I'm on a
refactoring mission after all)... The data is more perhaps better
suited to be represented with a struct (or even just a hash).&lt;/p&gt;
&lt;p&gt;I'll be refactoring that part of the client's app for sure so
I'm not too bothered if it's a wontfix :)&lt;/p&gt;
&lt;p&gt;Best, Dave&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-04T23:40:16+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-04T23:40:20+00:00</updated-at>
      <user-id type="integer">14945</user-id>
      <version type="integer">22</version>
      <user-name>David Rice</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Zip file added here for posterity.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Zip file added here for posterity.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-04T23:41:59+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-04T23:42:03+00:00</updated-at>
      <user-id type="integer">14945</user-id>
      <version type="integer">23</version>
      <user-name>David Rice</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@David, thanks for isolating this problem, and the demo app example -- very helpful.

A few things:

1. with this example app, I get the error &quot;undefined method `&gt;' for #&lt;Monkey:0x208faa0&gt;&quot; on edge, and 2.1.0-2 gems (as expected)

2. if I alter the failing code in this example from

@@@ ruby
MONKEY_ONE &gt; @monkey_two
@@@

to 

@@@ ruby
MONKEY_ONE.created_at
@@@

...on edge, I get the nil.include? error reported by Justin and Nando above, but on 2.1.x gems, it works fine (concurrent with the behavior that Nando reported in his app when upgrading to edge.)

I guess this makes sense -- AR::Base#method_missing re-generates attribute methods, but not #&gt;. I would assume that if Nando were calling a non-attribute method in his failing example, it would have failed on 2.1.x as well.

3. I found this Lighthouse ticket: http://rails.lighthouseapp.com/projects/8994/tickets/785-caching-models-fails-in-development
 which seems to be addressing the same issue. Looks like some folks are getting this problem from storing an AR object in the Rails.cache.

Given all the evidence from this ticket and the related ticket referenced above, I think we can assume that the issues reported in this ticket are because of an issue with AR instances persisting between requests (from Rails.cache, constant caching, or whatever other situations this could occur) when config.cache_classes = false.

@Nando and @Justin, in your failing cases, are you doing any sort of caching of AR objects?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@David, thanks for isolating this problem, and the demo app
example -- very helpful.&lt;/p&gt;
&lt;p&gt;A few things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;with this example app, I get the error &quot;undefined method
&lt;code&gt;&amp;gt;' for #&amp;lt;Monkey:0x208faa0&amp;gt;&quot; on edge, and 2.1.0-2
gems (as expected)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if I alter the failing code in this example from&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
MONKEY_ONE &amp;gt; @monkey_two
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
MONKEY_ONE.created_at
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;...on edge, I get the nil.include? error reported by Justin and
Nando above, but on 2.1.x gems, it works fine (concurrent with the
behavior that Nando reported in his app when upgrading to
edge.)&lt;/p&gt;
&lt;p&gt;I guess this makes sense -- AR::Base#method_missing re-generates
attribute methods, but not #&amp;gt;. I would assume that if Nando were
calling a non-attribute method in his failing example, it would
have failed on 2.1.x as well.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I found this Lighthouse ticket: &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/785-caching-models-fails-in-development&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt; which seems to be
addressing the same issue. Looks like some folks are getting this
problem from storing an AR object in the Rails.cache.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Given all the evidence from this ticket and the related ticket
referenced above, I think we can assume that the issues reported in
this ticket are because of an issue with AR instances persisting
between requests (from Rails.cache, constant caching, or whatever
other situations this could occur) when config.cache_classes =
false.&lt;/p&gt;
&lt;p&gt;@Nando and @Justin, in your failing cases, are you doing any
sort of caching of AR objects?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T15:29:59+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-05T15:30:00+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">24</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Josh, I think this ticket relates to the caching issue identified in http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/785-caching-models-fails-in-development#ticket-785-91</body>
      <body-html>&lt;div&gt;&lt;p&gt;Josh, I think this ticket relates to the caching issue
identified in &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/785-caching-models-fails-in-development#ticket-785-91&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T15:39:37+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bug date datetime edge timezone utc
:assigned_user: 15783
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-05T15:39:41+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">25</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I think I just hit the same bug - or at least similar
Loading data into a model in the console I get:
@@@
NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.include?
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.0/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
@@@
Adding the line:
@@@
self.skip_time_zone_conversion_for_attributes=[]
@@@
to the model removes the problem

and so does commenting out the line:
@@@
config.time_zone = 'UTC'
@@@
in environment.rb

This with Rails RC2.2 and ruby 1.8.7</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think I just hit the same bug - or at least similar Loading
data into a model in the console I get:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.include?
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.0/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Adding the line:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
self.skip_time_zone_conversion_for_attributes=[]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the model removes the problem&lt;/p&gt;
&lt;p&gt;and so does commenting out the line:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
config.time_zone = 'UTC'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in environment.rb&lt;/p&gt;
&lt;p&gt;This with Rails RC2.2 and ruby 1.8.7&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T15:43:58+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bug cache
:assigned_user: 424
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-05T15:44:02+00:00</updated-at>
      <user-id type="integer">36559</user-id>
      <version type="integer">26</version>
      <user-name>chrispanda</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@Geoff, I assume the following fixes the issue:
   http://rails.lighthouseapp.com/attachments/39464/prevent_class_method_and_variable_nukeing_on_AR_reset_subclasses.diff

#785 went very stale because we ended up with a catch-22, either existing instances lose their methods and go mental, or existing instances remain as they were before the `reload!`. After a while I just gave up hope, there was no panacea that would monkey patch all existing subclasses with updated instance methods and variables, to keep their instances sane.

There is no good reason for stripping down all subclasses of AR::Base before a reload, apart from the alleged memory leak issue, which I can't replicate.

IMHO (and for that matter IIRC) the lines should be stripped out, they are irrelevant in production, and were intended to do a job in development, that:
A) isn't needed (who cares about a little wasted memory in dev mode?)
B) shows no signs of doing the job it was intended to.
c) has no test coverage.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Geoff, I assume the following fixes the issue: &lt;a href=&quot;http://rails.lighthouseapp.com/attachments/39464/prevent_class_method_and_variable_nukeing_on_AR_reset_subclasses.diff&quot;&gt;
http://rails.lighthouseapp.com/a...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/785&quot; title=&quot;Ticket #785&quot;&gt;#785&lt;/a&gt; went very stale because we ended up with a
catch-22, either existing instances lose their methods and go
mental, or existing instances remain as they were before the
&lt;code&gt;reload!&lt;/code&gt;. After a while I just gave up hope, there was
no panacea that would monkey patch all existing subclasses with
updated instance methods and variables, to keep their instances
sane.&lt;/p&gt;
&lt;p&gt;There is no good reason for stripping down all subclasses of
AR::Base before a reload, apart from the alleged memory leak issue,
which I can't replicate.&lt;/p&gt;
&lt;p&gt;IMHO (and for that matter IIRC) the lines should be stripped
out, they are irrelevant in production, and were intended to do a
job in development, that: A) isn't needed (who cares about a little
wasted memory in dev mode?) B) shows no signs of doing the job it
was intended to. c) has no test coverage.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T16:50:05+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-05T16:50:09+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">27</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>sorry - my problem was unrelated though it threw a similar error - fixed by replacing 
@@@
config.time_zone = 'UTC'
@@@
with
@@@ 
config.active_record.default_timezone = :utc
@@@
as required for 2.2</body>
      <body-html>&lt;div&gt;&lt;p&gt;sorry - my problem was unrelated though it threw a similar error
- fixed by replacing&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
config.time_zone = 'UTC'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
config.active_record.default_timezone = :utc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;as required for 2.2&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T17:39:27+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug date datetime edge timezone utc</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-05T17:39:30+00:00</updated-at>
      <user-id type="integer">36559</user-id>
      <version type="integer">28</version>
      <user-name>chrispanda</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@Tom Lea -- thanks for the info. Indeed, that seems like the best fix here. But we should definitely confirm that the memory leak is no longer an issue, or at least, is not enough of an issue to merit this confusing/broken behavior in development mode.

If you were able to write up a description of the problem and solution and post it to the core list, so that we could get feedback, that would be helpful here -- the outstanding tickets about this issue are quite long and hard to follow.

@chrispanda -- actually, I there's a good chance your problem is related to what we've discovered here. By removing config.time_zone and adding config.active_record.default_timezone (which, btw, is not required for 2.2) you may have worked around the issue, but you've removed time zone support from your app in the process.

@Lighthouse -- if someone submits a comment with a stale version of the page, it says they changed tags etc. Consider splitting these functions into two separate forms.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Tom Lea -- thanks for the info. Indeed, that seems like the
best fix here. But we should definitely confirm that the memory
leak is no longer an issue, or at least, is not enough of an issue
to merit this confusing/broken behavior in development mode.&lt;/p&gt;
&lt;p&gt;If you were able to write up a description of the problem and
solution and post it to the core list, so that we could get
feedback, that would be helpful here -- the outstanding tickets
about this issue are quite long and hard to follow.&lt;/p&gt;
&lt;p&gt;@chrispanda -- actually, I there's a good chance your problem is
related to what we've discovered here. By removing config.time_zone
and adding config.active_record.default_timezone (which, btw, is
not required for 2.2) you may have worked around the issue, but
you've removed time zone support from your app in the process.&lt;/p&gt;
&lt;p&gt;@Lighthouse -- if someone submits a comment with a stale version
of the page, it says they changed tags etc. Consider splitting
these functions into two separate forms.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T19:51:57+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bug date datetime edge timezone utc
:assigned_user: 15783
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-05T19:51:59+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">29</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Yay!!!! Will this patch be applied on edge?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yay!!!! Will this patch be applied on edge?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T22:53:56+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-05T22:53:58+00:00</updated-at>
      <user-id type="integer">13349</user-id>
      <version type="integer">30</version>
      <user-name>Nando Vieira</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body># Was posted to core list, here for reference.



I diagnosed the following issue as part of [1], but it has since come up again as part of [2].

== The issue: ==

Whenever an AR::Base instance is persisted between requests with cache_classes disabled, Dispatcher#reset_application! will go through all its subclasses and remove all its instance methods and instance variables (those on the instance of Class not on instances of AR::Base, it's all very confusing!).

This was intended to fix a memory leak [3], and had a test associated with it. The test is now long gone, and my efforts at re-adding it failed because I never got it to pass, with or without the class stripping.

== The effect: ==

The example app by David Rice [4] will explode with error [5] after 2 page loads.

This app saves an AR model to a constant at startup... then expects it to work after a reload!.

After a reload the model gets very confused, as its class has all its class_inheritable_attributes stripped.

It expects an array to be dangling off the end of #skip_time_zone_conversion_for_attributes, but instead it finds nil.

This sucks.

== What should happen (IMHO): ==

Removing the references to classes in @@subclasses should be enough to allow garbage collection to do the good stuff when the relevant constants (that refer to the classes) are removed.

This way, any objects that are still referencing those classes (you know, like when they are an instance of them), can still operate without unnecessary loss of organs.

== The patch: ==

The attached patch, rebased especially for the occasion, stops AR from behaving in this odd way, and seems to pass the existing test pack.

== The questions: ==

Does anyone have a good reason why these lines should stay?

Can anyone create a failing test case? (preferably one that passes before the patch is applied ;)

Does anyone remember why the code is there?



Thanks in advance for any thoughts / input / other.
  - Tom

p.s.
I had to revert my local rails back to 55707da1a1481, as 8adb79b9b598 onwards clashed with my MySQL.
Tests passed at that point though.



[1] http://rails.lighthouseapp.com/projects/8994/tickets/785
[2] http://rails.lighthouseapp.com/projects/8994/tickets/1290
[3] http://github.com/rails/rails/commit/e7f61eab56d8a628cc605e5fa1e9055c4df852c7
[4] http://rails.lighthouseapp.com/attachments/59425/lighthouse-ticket-1290.zip
[5] http://pastie.org/308884</body>
      <body-html>&lt;div&gt;&lt;h1&gt;Was posted to core list, here for reference.&lt;/h1&gt;
&lt;p&gt;I diagnosed the following issue as part of &lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt;, but it
has since come up again as part of &lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;== The issue: ==&lt;/p&gt;
&lt;p&gt;Whenever an AR::Base instance is persisted between requests with
cache_classes disabled, Dispatcher#reset_application! will go
through all its subclasses and remove all its instance methods and
instance variables (those on the instance of Class not on instances
of AR::Base, it's all very confusing!).&lt;/p&gt;
&lt;p&gt;This was intended to fix a memory leak &lt;a href=&quot;/projects/8994/changesets/3&quot; title=&quot;Changeset #3&quot;&gt;[3]&lt;/a&gt;, and had
a test associated with it. The test is now long gone, and my
efforts at re-adding it failed because I never got it to pass, with
or without the class stripping.&lt;/p&gt;
&lt;p&gt;== The effect: ==&lt;/p&gt;
&lt;p&gt;The example app by David Rice &lt;a href=&quot;/projects/8994/changesets/4&quot; title=&quot;Changeset #4&quot;&gt;[4]&lt;/a&gt; will
explode with error &lt;a href=&quot;/projects/8994/changesets/5&quot; title=&quot;Changeset #5&quot;&gt;[5]&lt;/a&gt; after 2 page loads.&lt;/p&gt;
&lt;p&gt;This app saves an AR model to a constant at startup... then
expects it to work after a reload!.&lt;/p&gt;
&lt;p&gt;After a reload the model gets very confused, as its class has
all its class_inheritable_attributes stripped.&lt;/p&gt;
&lt;p&gt;It expects an array to be dangling off the end of
#skip_time_zone_conversion_for_attributes, but instead it finds
nil.&lt;/p&gt;
&lt;p&gt;This sucks.&lt;/p&gt;
&lt;p&gt;== What should happen (IMHO): ==&lt;/p&gt;
&lt;p&gt;Removing the references to classes in @@subclasses should be
enough to allow garbage collection to do the good stuff when the
relevant constants (that refer to the classes) are removed.&lt;/p&gt;
&lt;p&gt;This way, any objects that are still referencing those classes
(you know, like when they are an instance of them), can still
operate without unnecessary loss of organs.&lt;/p&gt;
&lt;p&gt;== The patch: ==&lt;/p&gt;
&lt;p&gt;The attached patch, rebased especially for the occasion, stops
AR from behaving in this odd way, and seems to pass the existing
test pack.&lt;/p&gt;
&lt;p&gt;== The questions: ==&lt;/p&gt;
&lt;p&gt;Does anyone have a good reason why these lines should stay?&lt;/p&gt;
&lt;p&gt;Can anyone create a failing test case? (preferably one that
passes before the patch is applied ;)&lt;/p&gt;
&lt;p&gt;Does anyone remember why the code is there?&lt;/p&gt;
&lt;p&gt;Thanks in advance for any thoughts / input / other. - Tom&lt;/p&gt;
&lt;p&gt;p.s. I had to revert my local rails back to 55707da1a1481, as
8adb79b9b598 onwards clashed with my MySQL. Tests passed at that
point though.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/785&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;
&lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt;
&lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1290&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;
&lt;a href=&quot;/projects/8994/changesets/3&quot; title=&quot;Changeset #3&quot;&gt;[3]&lt;/a&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/e7f61eab56d8a628cc605e5fa1e9055c4df852c7&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt; &lt;a href=&quot;/projects/8994/changesets/4&quot; title=&quot;Changeset #4&quot;&gt;[4]&lt;/a&gt; &lt;a href=&quot;http://rails.lighthouseapp.com/attachments/59425/lighthouse-ticket-1290.zip&quot;&gt;
http://rails.lighthouseapp.com/a...&lt;/a&gt; &lt;a href=&quot;/projects/8994/changesets/5&quot; title=&quot;Changeset #5&quot;&gt;[5]&lt;/a&gt; &lt;a href=&quot;http://pastie.org/308884&quot;&gt;http://pastie.org/308884&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T20:43:36+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-06T20:43:38+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">31</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Woah, really long story.

@Tom Maybe we should start a new ticket that wraps up all the issues across the multiple tickets. I don't really feel comfortable committing this because the dependency loading is not my area of expertise. Though it sounds like this should fix the issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Woah, really long story.&lt;/p&gt;
&lt;p&gt;@Tom Maybe we should start a new ticket that wraps up all the
issues across the multiple tickets. I don't really feel comfortable
committing this because the dependency loading is not my area of
expertise. Though it sounds like this should fix the issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T21:17:16+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-06T21:17:19+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">32</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Yeah, it is a little epic, and all that for a 2 line patch!

New ticket opened: #1339</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, it is a little epic, and all that for a 2 line patch!&lt;/p&gt;
&lt;p&gt;New ticket opened: &lt;a href=&quot;/projects/8994/tickets/1339&quot; title=&quot;Ticket #1339&quot;&gt;#1339&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-06T21:41:06+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-06T21:41:12+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">33</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>So should we close this one in favour of #1339?</body>
      <body-html>&lt;div&gt;&lt;p&gt;So should we close this one in favour of &lt;a href=&quot;/projects/8994/tickets/1339&quot; title=&quot;Ticket #1339&quot;&gt;#1339&lt;/a&gt;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-07T07:42:36+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-07T07:42:42+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">34</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Yeah, please refer to #1339</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, please refer to &lt;a href=&quot;/projects/8994/tickets/1339&quot; title=&quot;Ticket #1339&quot;&gt;#1339&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-10T18:39:25+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-10T18:39:28+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">35</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Just wanted to add a note that this error may not be directly related to #1339 - I was getting it in a class when it was first used in a Rails console, without any reloading taking place. I'll spare you the exciting details but I eventually tracked it down to ActsAsStateMachine.

So if you're using an STI model with the Rubyist-aasm gem v2.0.2 and get the error described at the start of this ticket you need to freeze the 'edge' version of the aasm gem in vendor/gems. 

The relevant commit that fixes this problem is here if you're interested:
http://github.com/rubyist/aasm/commit/fee9487e0d5464fc328f1c9c91eb059fef75988e

Hopefully this will save others spending too much time trying to track down the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just wanted to add a note that this error may not be directly
related to &lt;a href=&quot;/projects/8994/tickets/1339&quot; title=&quot;Ticket #1339&quot;&gt;#1339&lt;/a&gt; - I was getting it in a class when it was
first used in a Rails console, without any reloading taking place.
I'll spare you the exciting details but I eventually tracked it
down to ActsAsStateMachine.&lt;/p&gt;
&lt;p&gt;So if you're using an STI model with the Rubyist-aasm gem v2.0.2
and get the error described at the start of this ticket you need to
freeze the 'edge' version of the aasm gem in vendor/gems.&lt;/p&gt;
&lt;p&gt;The relevant commit that fixes this problem is here if you're
interested: &lt;a href=&quot;http://github.com/rubyist/aasm/commit/fee9487e0d5464fc328f1c9c91eb059fef75988e&quot;&gt;
http://github.com/rubyist/aasm/c...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hopefully this will save others spending too much time trying to
track down the problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-24T12:19:30+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2008-11-24T12:19:33+00:00</updated-at>
      <user-id type="integer">10510</user-id>
      <version type="integer">36</version>
      <user-name>Rob Anderton</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I'm using rails 2.3.4 and i recieved the same error and stack trace as the original poster.  issue #1339 may help fix it, how knows, as that ticket is a mess.  but the simple fix for me was the comment by chrispanda regarding switching to the old style of config line.

i added 

    config.active_record.default_timezone = 'Eastern Time (US &amp; Canada)'

and it seems to work fine and more importantly I don't have to switch config.cache_classes = false to true, now and my rails app acts like normal.  Setting to true is not the real answer, and i'm unsure what is, as i don't even know where to begin to help out on this one.

I am just reporting that this issue happened to me also in 2.3.4. I also don't know what is going to happen to my timezones now that i am using the old style of setting.  time will tell.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using rails 2.3.4 and i recieved the same error and stack
trace as the original poster. issue &lt;a href=
&quot;/projects/8994/tickets/1339&quot; title=&quot;Ticket #1339&quot;&gt;#1339&lt;/a&gt; may
help fix it, how knows, as that ticket is a mess. but the simple
fix for me was the comment by chrispanda regarding switching to the
old style of config line.&lt;/p&gt;
&lt;p&gt;i added&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;config.active_record.default_timezone = 'Eastern Time (US &amp;amp; Canada)'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and it seems to work fine and more importantly I don't have to
switch config.cache_classes = false to true, now and my rails app
acts like normal. Setting to true is not the real answer, and i'm
unsure what is, as i don't even know where to begin to help out on
this one.&lt;/p&gt;
&lt;p&gt;I am just reporting that this issue happened to me also in
2.3.4. I also don't know what is going to happen to my timezones
now that i am using the old style of setting. time will tell.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-13T17:29:29+01:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2009-09-13T17:29:34+01:00</updated-at>
      <user-id type="integer">32315</user-id>
      <version type="integer">37</version>
      <user-name>pjammer</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@pjammer this solution also works for me on rails 2.3.2 so I cancel previous solution confi.cache_classes = true</body>
      <body-html>&lt;div&gt;&lt;p&gt;@pjammer this solution also works for me on rails 2.3.2 so I
cancel previous solution confi.cache_classes = true&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-18T08:45:33+01:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2009-09-18T08:45:35+01:00</updated-at>
      <user-id type="integer">53443</user-id>
      <version type="integer">38</version>
      <user-name>Peter Zlatnar</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I got this error under Rails 2.3.4, and renaming one of my AR models from &quot;Sync&quot; to &quot;SyncObject&quot; seemed to fix the issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I got this error under Rails 2.3.4, and renaming one of my AR
models from &quot;Sync&quot; to &quot;SyncObject&quot; seemed to fix the issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-26T18:16:08+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 424
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2009-11-26T18:16:14+00:00</updated-at>
      <user-id type="integer">57569</user-id>
      <version type="integer">39</version>
      <user-name>igul222</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(oops, didn't mean to clear the assigned user)</body>
      <body-html>&lt;div&gt;&lt;p&gt;(oops, didn't mean to clear the assigned user)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-26T18:17:15+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2009-11-26T18:17:17+00:00</updated-at>
      <user-id type="integer">57569</user-id>
      <version type="integer">40</version>
      <user-name>igul222</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>If you are getting this bug because of storing an AR object in cache, here is a fix:

http://gist.github.com/251886</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you are getting this bug because of storing an AR object in
cache, here is a fix:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/251886&quot;&gt;http://gist.github.com/251886&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-12-08T18:53:01+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2009-12-08T18:53:04+00:00</updated-at>
      <user-id type="integer">2633</user-id>
      <version type="integer">41</version>
      <user-name>rubymaverick</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I was having the very same issue with 2.5.8 but then suddenly I stated having a can't dup NilClass in /Users/sistemasinteractivos/.rvm/gems/ruby-1.8.7-p174/gems/activerecord-2.3.8/lib/active_record/base.rb:2219:in `dup':

Spoooky!!!

http://gist.github.com/493164

I turned cache_classes to true so I wouldn't go nuts.

I think I can live with that since I spend most of my time in textmate with rspec.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was having the very same issue with 2.5.8 but then suddenly I
stated having a can't dup NilClass in
/Users/sistemasinteractivos/.rvm/gems/ruby-1.8.7-p174/gems/activerecord-2.3.8/lib/active_record/base.rb:2219:in
&lt;code&gt;dup':&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Spoooky!!!&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/493164&quot;&gt;http://gist.github.com/493164&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I turned cache_classes to true so I wouldn't go nuts.&lt;/p&gt;
&lt;p&gt;I think I can live with that since I spend most of my time in
textmate with rspec.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-28T02:41:41+01:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">6</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2010-07-28T02:41:44+01:00</updated-at>
      <user-id type="integer">41316</user-id>
      <version type="integer">42</version>
      <user-name>macario</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:19:18+00:00</created-at>
      <creator-id type="integer">13349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1290</number>
      <permalink>activerecord-raises-randomly-apparently-a-timezone-issue</permalink>
      <priority type="integer">6</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bug cache</tag>
      <title>ActiveRecord raises randomly, apparently a TimeZone issue</title>
      <updated-at type="datetime">2010-11-08T23:12:08+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">43</version>
      <user-name>jim123456</user-name>
      <creator-name>Nando Vieira</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1290</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>57c601ed1ec314ae1955a8ec25f77506014f7f8b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-29T20:51:47+00:00</created-at>
      <filename>trace.txt</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58034</id>
      <size type="integer">5050</size>
      <uploader-id type="integer">13349</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58034/trace.txt</url>
    </attachment>
    <attachment type="Attachment">
      <code>b5c118c607b1b4ad55c4fba5b0cde06e270067ae</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-01T20:31:13+00:00</created-at>
      <filename>trace.txt</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58761</id>
      <size type="integer">4379</size>
      <uploader-id type="integer">36205</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58761/trace.txt</url>
    </attachment>
    <attachment type="Attachment">
      <code>0a1df01014b9ca823bf348babdccc410e19ce09b</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2008-11-04T23:41:59+00:00</created-at>
      <filename>lighthouse-ticket-1290.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">59425</id>
      <size type="integer">106716</size>
      <uploader-id type="integer">14945</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/59425/lighthouse-ticket-1290.zip</url>
    </attachment>
    <attachment type="Attachment">
      <code>92cab68e15356d331cc684c79c704c80ec341e45</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-06T20:43:36+00:00</created-at>
      <filename>prevent_class_method_and_variable_nukeing_on_AR_reset_subclasses.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">60040</id>
      <size type="integer">1091</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/60040/prevent_class_method_and_variable_nukeing_on_AR_reset_subclasses.diff</url>
    </attachment>
  </attachments>
</ticket>
