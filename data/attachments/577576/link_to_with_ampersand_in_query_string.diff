From 1db00a648c55065a97f1b836f3e7073dbcfe7e73 Mon Sep 17 00:00:00 2001
From: Bruno Michel <bmichel@menfin.info>
Date: Sat, 26 Jun 2010 17:29:22 +0200
Subject: [PATCH] Escape ampersand in the query string for link_to

---
 actionpack/lib/action_view/helpers/url_helper.rb |   17 ++++++++---------
 actionpack/test/template/url_helper_test.rb      |    7 ++++++-
 2 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/url_helper.rb b/actionpack/lib/action_view/helpers/url_helper.rb
index 6af11e6..7a9eb3b 100644
--- a/actionpack/lib/action_view/helpers/url_helper.rb
+++ b/actionpack/lib/action_view/helpers/url_helper.rb
@@ -38,9 +38,6 @@ module ActionView
       # <tt>:only_path</tt> is <tt>true</tt> so you'll get the relative "/controller/action"
       # instead of the fully qualified URL like "http://example.com/controller/action".
       #
-      # When called from a view, +url_for+ returns an HTML escaped url. If you
-      # need an unescaped url, pass <tt>:escape => false</tt> in the +options+.
-      #
       # ==== Options
       # * <tt>:anchor</tt> - Specifies the anchor name to be appended to the path.
       # * <tt>:only_path</tt> - If true, returns the relative URL (omitting the protocol, host name, and port) (<tt>true</tt> by default unless <tt>:host</tt> is specified).
@@ -50,7 +47,7 @@ module ActionView
       # * <tt>:protocol</tt> - Overrides the default (current) protocol if provided.
       # * <tt>:user</tt> - Inline HTTP authentication (only plucked out if <tt>:password</tt> is also present).
       # * <tt>:password</tt> - Inline HTTP authentication (only plucked out if <tt>:user</tt> is also present).
-      # * <tt>:escape</tt> - Determines whether the returned URL will be HTML escaped or not (<tt>true</tt> by default).
+      # * <tt>:escape</tt> - Determines whether the returned URL will be HTML escaped or not (<tt>false</tt> by default).
       #
       # ==== Relying on named routes
       #
@@ -73,11 +70,11 @@ module ActionView
       #   # => /messages/play/#player
       #
       #   <%= url_for(:action => 'checkout', :anchor => 'tax&ship') %>
-      #   # => /testing/jump/#tax&amp;ship
-      #
-      #   <%= url_for(:action => 'checkout', :anchor => 'tax&ship', :escape => false) %>
       #   # => /testing/jump/#tax&ship
       #
+      #   <%= url_for(:action => 'checkout', :anchor => 'tax&ship', :escape => true) %>
+      #   # => /testing/jump/#tax&amp;ship
+      #
       #   <%= url_for(Workshop.new) %>
       #   # relies on Workshop answering a persisted? call (and in this case returning false)
       #   # => /workshops
@@ -244,6 +241,7 @@ module ActionView
           html_options = args[2]
 
           html_options = convert_options_to_data_attributes(options, html_options)
+          options[:escape] = true if Hash === options
           url = url_for(options)
 
           if html_options
@@ -332,14 +330,15 @@ module ActionView
           request_token_tag = tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token)
         end
 
-        url = options.is_a?(String) ? options : self.url_for(options)
+        options[:escape] = true if Hash === options
+        url = self.url_for(options)
         name ||= url
 
         html_options = convert_options_to_data_attributes(options, html_options)
 
         html_options.merge!("type" => "submit", "value" => name)
 
-        ("<form method=\"#{form_method}\" action=\"#{escape_once url}\" #{"data-remote=\"true\"" if remote} class=\"button_to\"><div>" +
+        ("<form method=\"#{form_method}\" action=\"#{url}\" #{"data-remote=\"true\"" if remote} class=\"button_to\"><div>" +
           method_tag + tag("input", html_options) + request_token_tag + "</div></form>").html_safe
       end
 
diff --git a/actionpack/test/template/url_helper_test.rb b/actionpack/test/template/url_helper_test.rb
index 299d6dd..807c7fd 100644
--- a/actionpack/test/template/url_helper_test.rb
+++ b/actionpack/test/template/url_helper_test.rb
@@ -260,6 +260,11 @@ class UrlHelperTest < ActiveSupport::TestCase
     assert_equal '<a href="/">Example site</a>', out
   end
 
+  def test_link_to_with_ampersand_in_query_string
+    assert_equal %{<a href="/?baz=quux&amp;foo=bar">Foo</a>},
+      link_to("Foo", hash_for(:foo => :bar, :baz => :quux))
+  end
+
   def test_link_to_unless
     assert_equal "Showing", link_to_unless(true, "Showing", url_hash)
 
@@ -345,7 +350,7 @@ class UrlHelperTest < ActiveSupport::TestCase
       link_to_unless_current("Showing", "http://www.example.com/?order=asc")
 
     @request = request_for_url("/?order=desc")
-    assert_equal %{<a href="/?order=desc&page=2\">Showing</a>},
+    assert_equal %{<a href="/?order=desc&amp;page=2\">Showing</a>},
       link_to_unless_current("Showing", hash_for(:order => "desc", :page => 2))
     assert_equal %{<a href="http://www.example.com/?order=desc&amp;page=2">Showing</a>},
       link_to_unless_current("Showing", "http://www.example.com/?order=desc&page=2")
-- 
1.7.0.4

