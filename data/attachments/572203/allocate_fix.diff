From 603a5354bdb29682650c24e1442761a78ad1e261 Mon Sep 17 00:00:00 2001
From: Jean-Baptiste Escoyez <jbe@belighted.com>
Date: Thu, 24 Jun 2010 17:27:16 +0200
Subject: [PATCH] Object#respond_to and Object#inspect for ActiveRecord classes after allocate fix

---
 activerecord/lib/active_record/base.rb        |    4 ++--
 activerecord/lib/active_record/persistence.rb |    2 +-
 activerecord/test/cases/base_test.rb          |   11 +++++++++++
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index 16cf501..7f7a744 100644
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -1488,12 +1488,12 @@ module ActiveRecord #:nodoc:
 
       # Returns true if the given attribute is in the attributes hash
       def has_attribute?(attr_name)
-        @attributes.has_key?(attr_name.to_s)
+        @attributes.has_key?(attr_name.to_s) if instance_variable_defined?("@attributes")
       end
 
       # Returns an array of names for the attributes available on this object sorted alphabetically.
       def attribute_names
-        @attributes.keys.sort
+        instance_variable_defined?("@attributes") ? @attributes.keys.sort : []
       end
 
       # Returns the value of the attribute identified by <tt>attr_name</tt> after it has been typecast (for example,
diff --git a/activerecord/lib/active_record/persistence.rb b/activerecord/lib/active_record/persistence.rb
index 9e28aa2..2dc266f 100644
--- a/activerecord/lib/active_record/persistence.rb
+++ b/activerecord/lib/active_record/persistence.rb
@@ -4,7 +4,7 @@ module ActiveRecord
     # Returns true if this object hasn't been saved yet -- that is, a record 
     # for the object doesn't exist in the data store yet; otherwise, returns false.
     def new_record?
-      @new_record
+      instance_variable_defined?("@new_record") && @new_record
     end
 
     # Returns true if this object has been destroyed, otherwise returns false.
diff --git a/activerecord/test/cases/base_test.rb b/activerecord/test/cases/base_test.rb
index f8b90d8..e351098 100644
--- a/activerecord/test/cases/base_test.rb
+++ b/activerecord/test/cases/base_test.rb
@@ -123,6 +123,17 @@ class BasicsTest < ActiveRecord::TestCase
     assert !topic.respond_to?(:nothingness)
   end
 
+  def test_respond_to_after_allocate
+    topic = Topic.allocate
+    assert_nothing_raised{ topic.respond_to?("nothingness") }
+    assert_nothing_raised{ topic.respond_to?(:nothingness) }
+  end
+
+  def test_inspect_after_allocate
+    topic = Topic.allocate
+    assert_nothing_raised{ topic.inspect }
+  end
+
   def test_array_content
     topic = Topic.new
     topic.content = %w( one two three )
-- 
1.7.1

