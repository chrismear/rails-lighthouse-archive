<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-26T21:50:37+01:00</created-at>
  <creator-id type="integer">26009</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6751</number>
  <permalink>rails-assumes-too-much-about-the-name-of-the-production-environment</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>environments production</tag>
  <title>Rails assumes too much about the name of the &quot;production&quot; environment</title>
  <updated-at type="datetime">2011-04-26T21:50:43+01:00</updated-at>
  <user-id type="integer">26009</user-id>
  <version type="integer">1</version>
  <user-name>Brian Ploetz</user-name>
  <creator-name>Brian Ploetz</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6751</url>
  <priority-name nil="true"></priority-name>
  <original-body>For various reasons, we actually have several &quot;production&quot; Rails environments, and have a naming convention for them along the lines of &quot;prod1&quot;, &quot;prod2&quot;, etc. We've found that within the Rails source, there are a few checks for Rails.env.production?, which assumes the name of your production Rails environment is always just &quot;production&quot;. For example:

https://github.com/rails/rails/blob/master/railties/lib/rails/application/configuration.rb#L108
https://github.com/rails/rails/blob/master/railties/lib/rails/application/bootstrap.rb#L29
https://github.com/rails/rails/blob/master/railties/lib/rails/test_help.rb#L3

This has tripped us up a couple of times. It would be nice if Rails provided a hook that allowed you to override the default name of the production environment, and also accounts for the fact that there could be more than one environment that are &quot;production&quot; like.

I understand that this is breaking a very well understood Rails convention, but as more and more SaaS apps are built with Rails (as ours is) this is becoming prohibitive.

Thoughts?</original-body>
  <latest-body>For various reasons, we actually have several &quot;production&quot; Rails environments, and have a naming convention for them along the lines of &quot;prod1&quot;, &quot;prod2&quot;, etc. We've found that within the Rails source, there are a few checks for Rails.env.production?, which assumes the name of your production Rails environment is always just &quot;production&quot;. For example:

https://github.com/rails/rails/blob/master/railties/lib/rails/application/configuration.rb#L108
https://github.com/rails/rails/blob/master/railties/lib/rails/application/bootstrap.rb#L29
https://github.com/rails/rails/blob/master/railties/lib/rails/test_help.rb#L3

This has tripped us up a couple of times. It would be nice if Rails provided a hook that allowed you to override the default name of the production environment, and also accounts for the fact that there could be more than one environment that are &quot;production&quot; like.

I understand that this is breaking a very well understood Rails convention, but as more and more SaaS apps are built with Rails (as ours is) this is becoming prohibitive.

Thoughts?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;For various reasons, we actually have several &quot;production&quot; Rails
environments, and have a naming convention for them along the lines
of &quot;prod1&quot;, &quot;prod2&quot;, etc. We've found that within the Rails source,
there are a few checks for Rails.env.production?, which assumes the
name of your production Rails environment is always just
&quot;production&quot;. For example:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://github.com/rails/rails/blob/master/railties/lib/rails/application/configuration.rb#L108&quot;&gt;
https://github.com/rails/rails/blob/master/railties/lib/rails/appli...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/blob/master/railties/lib/rails/application/bootstrap.rb#L29&quot;&gt;
https://github.com/rails/rails/blob/master/railties/lib/rails/appli...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/blob/master/railties/lib/rails/test_help.rb#L3&quot;&gt;
https://github.com/rails/rails/blob/master/railties/lib/rails/test_...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This has tripped us up a couple of times. It would be nice if
Rails provided a hook that allowed you to override the default name
of the production environment, and also accounts for the fact that
there could be more than one environment that are &quot;production&quot;
like.&lt;/p&gt;
&lt;p&gt;I understand that this is breaking a very well understood Rails
convention, but as more and more SaaS apps are built with Rails (as
ours is) this is becoming prohibitive.&lt;/p&gt;
&lt;p&gt;Thoughts?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For various reasons, we actually have several &quot;production&quot; Rails environments, and have a naming convention for them along the lines of &quot;prod1&quot;, &quot;prod2&quot;, etc. We've found that within the Rails source, there are a few checks for Rails.env.production?, which assumes the name of your production Rails environment is always just &quot;production&quot;. For example:

https://github.com/rails/rails/blob/master/railties/lib/rails/application/configuration.rb#L108
https://github.com/rails/rails/blob/master/railties/lib/rails/application/bootstrap.rb#L29
https://github.com/rails/rails/blob/master/railties/lib/rails/test_help.rb#L3

This has tripped us up a couple of times. It would be nice if Rails provided a hook that allowed you to override the default name of the production environment, and also accounts for the fact that there could be more than one environment that are &quot;production&quot; like.

I understand that this is breaking a very well understood Rails convention, but as more and more SaaS apps are built with Rails (as ours is) this is becoming prohibitive.

Thoughts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;For various reasons, we actually have several &quot;production&quot; Rails
environments, and have a naming convention for them along the lines
of &quot;prod1&quot;, &quot;prod2&quot;, etc. We've found that within the Rails source,
there are a few checks for Rails.env.production?, which assumes the
name of your production Rails environment is always just
&quot;production&quot;. For example:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://github.com/rails/rails/blob/master/railties/lib/rails/application/configuration.rb#L108&quot;&gt;
https://github.com/rails/rails/blob/master/railties/lib/rails/appli...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/blob/master/railties/lib/rails/application/bootstrap.rb#L29&quot;&gt;
https://github.com/rails/rails/blob/master/railties/lib/rails/appli...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/blob/master/railties/lib/rails/test_help.rb#L3&quot;&gt;
https://github.com/rails/rails/blob/master/railties/lib/rails/test_...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This has tripped us up a couple of times. It would be nice if
Rails provided a hook that allowed you to override the default name
of the production environment, and also accounts for the fact that
there could be more than one environment that are &quot;production&quot;
like.&lt;/p&gt;
&lt;p&gt;I understand that this is breaking a very well understood Rails
convention, but as more and more SaaS apps are built with Rails (as
ours is) this is becoming prohibitive.&lt;/p&gt;
&lt;p&gt;Thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-26T21:50:37+01:00</created-at>
      <creator-id type="integer">26009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6751</number>
      <permalink>rails-assumes-too-much-about-the-name-of-the-production-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>environments production</tag>
      <title>Rails assumes too much about the name of the &quot;production&quot; environment</title>
      <updated-at type="datetime">2011-04-26T21:50:43+01:00</updated-at>
      <user-id type="integer">26009</user-id>
      <version type="integer">1</version>
      <user-name>Brian Ploetz</user-name>
      <creator-name>Brian Ploetz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6751</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
