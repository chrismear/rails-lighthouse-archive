<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-21T11:19:28+01:00</created-at>
  <creator-id type="integer">19078</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5674</number>
  <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>3.0 activerecord habtm patch</tag>
  <title>Regression: HABTM deletion fails when join table has foreign keys</title>
  <updated-at type="datetime">2010-11-23T12:26:05+00:00</updated-at>
  <user-id type="integer">76656</user-id>
  <version type="integer">11</version>
  <user-name>Hemant Kumar</user-name>
  <creator-name>Steve Purcell</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
  <priority-name>Low</priority-name>
  <original-body>Given models One and Two, where One declares &quot;has_and_belongs_to_many :twos&quot;, it's no longer possible to delete an instance of One if there are corresponding rows in the join table (ones_twos) and that join table has a foreign key on one_id.

In Rails &lt; 3, the rows in the join table would be deleted before the parent object, but in 3.0 the join table rows appear to be deleted afterwards, and so any foreign key will block the deletion of the parent object -- dropping the foreign keys makes everything work, but this is an extremely undesirable workaround.

There's no obvious option for habtm to fix this behavior, and no mention of related changes in the Rails 3 Guides, so I can only guess that this is a regression.

The problem presents itself with both PostgreSQL 8.4 and 9.0, but would also presumably affect other DBs with foreign key support.</original-body>
  <latest-body>Given models One and Two, where One declares &quot;has_and_belongs_to_many :twos&quot;, it's no longer possible to delete an instance of One if there are corresponding rows in the join table (ones_twos) and that join table has a foreign key on one_id.

In Rails &lt; 3, the rows in the join table would be deleted before the parent object, but in 3.0 the join table rows appear to be deleted afterwards, and so any foreign key will block the deletion of the parent object -- dropping the foreign keys makes everything work, but this is an extremely undesirable workaround.

There's no obvious option for habtm to fix this behavior, and no mention of related changes in the Rails 3 Guides, so I can only guess that this is a regression.

The problem presents itself with both PostgreSQL 8.4 and 9.0, but would also presumably affect other DBs with foreign key support.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given models One and Two, where One declares
&quot;has_and_belongs_to_many :twos&quot;, it's no longer possible to delete
an instance of One if there are corresponding rows in the join
table (ones_twos) and that join table has a foreign key on
one_id.&lt;/p&gt;
&lt;p&gt;In Rails &amp;lt; 3, the rows in the join table would be deleted
before the parent object, but in 3.0 the join table rows appear to
be deleted afterwards, and so any foreign key will block the
deletion of the parent object -- dropping the foreign keys makes
everything work, but this is an extremely undesirable
workaround.&lt;/p&gt;
&lt;p&gt;There's no obvious option for habtm to fix this behavior, and no
mention of related changes in the Rails 3 Guides, so I can only
guess that this is a regression.&lt;/p&gt;
&lt;p&gt;The problem presents itself with both PostgreSQL 8.4 and 9.0,
but would also presumably affect other DBs with foreign key
support.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given models One and Two, where One declares &quot;has_and_belongs_to_many :twos&quot;, it's no longer possible to delete an instance of One if there are corresponding rows in the join table (ones_twos) and that join table has a foreign key on one_id.

In Rails &lt; 3, the rows in the join table would be deleted before the parent object, but in 3.0 the join table rows appear to be deleted afterwards, and so any foreign key will block the deletion of the parent object -- dropping the foreign keys makes everything work, but this is an extremely undesirable workaround.

There's no obvious option for habtm to fix this behavior, and no mention of related changes in the Rails 3 Guides, so I can only guess that this is a regression.

The problem presents itself with both PostgreSQL 8.4 and 9.0, but would also presumably affect other DBs with foreign key support.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given models One and Two, where One declares
&quot;has_and_belongs_to_many :twos&quot;, it's no longer possible to delete
an instance of One if there are corresponding rows in the join
table (ones_twos) and that join table has a foreign key on
one_id.&lt;/p&gt;
&lt;p&gt;In Rails &amp;lt; 3, the rows in the join table would be deleted
before the parent object, but in 3.0 the join table rows appear to
be deleted afterwards, and so any foreign key will block the
deletion of the parent object -- dropping the foreign keys makes
everything work, but this is an extremely undesirable
workaround.&lt;/p&gt;
&lt;p&gt;There's no obvious option for habtm to fix this behavior, and no
mention of related changes in the Rails 3 Guides, so I can only
guess that this is a regression.&lt;/p&gt;
&lt;p&gt;The problem presents itself with both PostgreSQL 8.4 and 9.0,
but would also presumably affect other DBs with foreign key
support.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T11:19:28+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord habtm</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-21T11:19:30+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">1</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The attached patch to schema.rb causes the relevant tests to fail with the problem as described.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The attached patch to schema.rb causes the relevant tests to
fail with the problem as described.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T11:39:43+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord habtm</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-21T11:39:45+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">2</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Verified. Problem exists. A quick workaround is, to have ON DELETE CASCADE on such foreign keys.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Verified. Problem exists. A quick workaround is, to have ON
DELETE CASCADE on such foreign keys.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T19:10:00+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord habtm</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-21T19:10:02+01:00</updated-at>
      <user-id type="integer">2053</user-id>
      <version type="integer">3</version>
      <user-name>gnufied</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Indeed, though it's generally recommended to avoid ON DELETE CASCADE, since records can disappear without Rails knowing. For example, adding ON DELETE CASCADE to developers_projects breaks 2 cases in NestedScopingTest.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Indeed, though it's generally recommended to avoid ON DELETE
CASCADE, since records can disappear without Rails knowing. For
example, adding ON DELETE CASCADE to developers_projects breaks 2
cases in NestedScopingTest.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T19:54:10+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord habtm</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-21T19:54:12+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">4</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached patch fixes the problem and updates the failing test cases to accomodate the new behavior.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached patch fixes the problem and updates the failing test
cases to accomodate the new behavior.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-21T21:03:24+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 3.0 activerecord habtm
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord habtm patch</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-21T21:03:26+01:00</updated-at>
      <user-id type="integer">2053</user-id>
      <version type="integer">5</version>
      <user-name>gnufied</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I've committed this, thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've committed this, thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-21T22:02:11+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0 activerecord habtm patch</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-21T22:02:13+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">6</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Cool, thanks! -- will that fix get into 3.0.1? I don't see it in the 3-0-stable branch, but maybe the plan is to merge master for that release.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cool, thanks! -- will that fix get into 3.0.1? I don't see it in
the 3-0-stable branch, but maybe the plan is to merge master for
that release.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-22T10:47:55+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0 activerecord habtm patch</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-22T10:48:00+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">7</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>No! I made a mistake.  I was going to merge to the 3-0-stable branch, but I forgot!  Thanks for reminding me.  It should be on the 3-0-stable branch now.  Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;No! I made a mistake. I was going to merge to the 3-0-stable
branch, but I forgot! Thanks for reminding me. It should be on the
3-0-stable branch now. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-22T16:37:05+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0 activerecord habtm patch</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-09-22T16:37:07+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">8</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>In case it helps anyone while we wait for 3.0.1, I've posted the monkey patch initializer I'm using to work around this issue here:

http://gist.github.com/605268</body>
      <body-html>&lt;div&gt;&lt;p&gt;In case it helps anyone while we wait for 3.0.1, I've posted the
monkey patch initializer I'm using to work around this issue
here:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/605268&quot;&gt;http://gist.github.com/605268&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-04T10:43:43+01:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0 activerecord habtm patch</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-10-04T10:43:45+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">9</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The problem with the patch that was committed is that now `before_destroy` callbacks on the models with HABTM associations don't see the corresponding associations. For example if you wanted to prevent models referenced by HABTM from being destroyed you can't do that with `before_destroy` callback any longer.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The problem with the patch that was committed is that now
&lt;code&gt;before_destroy&lt;/code&gt; callbacks on the models with HABTM
associations don't see the corresponding associations. For example
if you wanted to prevent models referenced by HABTM from being
destroyed you can't do that with &lt;code&gt;before_destroy&lt;/code&gt;
callback any longer.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-23T12:09:41+00:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0 activerecord habtm patch</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-11-23T12:09:44+00:00</updated-at>
      <user-id type="integer">43210</user-id>
      <version type="integer">10</version>
      <user-name>Evgeniy Dolzhenko</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Can you get a test case attached, I will see what I can do to fix the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you get a test case attached, I will see what I can do to
fix the problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-23T12:25:51+00:00</created-at>
      <creator-id type="integer">19078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5674</number>
      <permalink>regression-habtm-deletion-fails-when-join-table-has-foreign-keys</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>3.0 activerecord habtm patch</tag>
      <title>Regression: HABTM deletion fails when join table has foreign keys</title>
      <updated-at type="datetime">2010-11-23T12:26:05+00:00</updated-at>
      <user-id type="integer">76656</user-id>
      <version type="integer">11</version>
      <user-name>Hemant Kumar</user-name>
      <creator-name>Steve Purcell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5674</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>90bd614c588400f0f2c65b5a93ae88530c30419c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-21T11:39:43+01:00</created-at>
      <filename>0001-add-foreign-key-on-developers_projectsdeveloper_id.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">683152</id>
      <size type="integer">1020</size>
      <uploader-id type="integer">19078</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/683152/0001-add-foreign-key-on-developers_projectsdeveloper_id.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>b7508b7683777b4014b4e56531f326697c4c7c56</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-21T21:03:24+01:00</created-at>
      <filename>5674_habtm_destroy.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">684311</id>
      <size type="integer">1996</size>
      <uploader-id type="integer">2053</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/684311/5674_habtm_destroy.patch</url>
    </attachment>
  </attachments>
</ticket>
