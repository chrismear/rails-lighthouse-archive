<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-26T08:35:09+00:00</created-at>
  <creator-id type="integer">16302</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1478</number>
  <permalink>override-content-type-when-rendering-default-error-file</permalink>
  <priority type="integer">844</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bug content_type patch render</tag>
  <title>Override content type when rendering default error file</title>
  <updated-at type="datetime">2008-12-17T16:22:50+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Brady Bouchard</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1478</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>If a template is rendered with a content type other than 'text/html', when an exception is raised and considered a non-local request, the default error file (500.html) will be rendered with the specified content type rather than 'text/html'. This can cause wonkiness in some browsers.

For example:

class DummyController &lt; ApplicationController
  def index
    render :inline =&gt; &quot;&lt;%= response.bad_method %&gt;&quot;, :content_type =&gt; 'text/plain'
  end

When the above method is accessed, the default file (500.html) will be rendered with a content type of 'text/plain', which will cause browsers such as Safari to render the page as plain text rather than HTML. Ugly.

A fix is attached. I spent quite a bit of time trying to come up with a test, but it looks like a test would mean adding quite a bit of code to either rescue_test.rb or render_test.rb (since it requires both the set up code for rendering as well as rescuing). If anyone can code one up, that would be great - and/or point me in the right direction.</original-body>
  <latest-body>If a template is rendered with a content type other than 'text/html', when an exception is raised and considered a non-local request, the default error file (500.html) will be rendered with the specified content type rather than 'text/html'. This can cause wonkiness in some browsers.

For example:

class DummyController &lt; ApplicationController
  def index
    render :inline =&gt; &quot;&lt;%= response.bad_method %&gt;&quot;, :content_type =&gt; 'text/plain'
  end

When the above method is accessed, the default file (500.html) will be rendered with a content type of 'text/plain', which will cause browsers such as Safari to render the page as plain text rather than HTML. Ugly.

A fix is attached. I spent quite a bit of time trying to come up with a test, but it looks like a test would mean adding quite a bit of code to either rescue_test.rb or render_test.rb (since it requires both the set up code for rendering as well as rescuing). If anyone can code one up, that would be great - and/or point me in the right direction.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If a template is rendered with a content type other than
'text/html', when an exception is raised and considered a non-local
request, the default error file (500.html) will be rendered with
the specified content type rather than 'text/html'. This can cause
wonkiness in some browsers.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;class DummyController &amp;lt; ApplicationController def index&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;render :inline =&amp;gt; &quot;&amp;lt;%= response.bad_method %&amp;gt;&quot;, :content_type =&amp;gt; 'text/plain'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;When the above method is accessed, the default file (500.html)
will be rendered with a content type of 'text/plain', which will
cause browsers such as Safari to render the page as plain text
rather than HTML. Ugly.&lt;/p&gt;
&lt;p&gt;A fix is attached. I spent quite a bit of time trying to come up
with a test, but it looks like a test would mean adding quite a bit
of code to either rescue_test.rb or render_test.rb (since it
requires both the set up code for rendering as well as rescuing).
If anyone can code one up, that would be great - and/or point me in
the right direction.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If a template is rendered with a content type other than 'text/html', when an exception is raised and considered a non-local request, the default error file (500.html) will be rendered with the specified content type rather than 'text/html'. This can cause wonkiness in some browsers.

For example:
@@@ ruby
class DummyController &lt; ApplicationController
  def index
    render :inline =&gt; &quot;&lt;%= response.bad_method %&gt;&quot;, :content_type =&gt; 'text/plain'
  end
end
@@@

When the above method is accessed, the default file (500.html) will be rendered with a content type of 'text/plain', which will cause browsers such as Safari to render the page as plain text rather than HTML. Ugly.

A fix is attached. I spent quite a bit of time trying to come up with a test, but it looks like a test would mean adding quite a bit of code to either rescue_test.rb or render_test.rb (since it requires both the set up code for rendering as well as rescuing). If anyone can code one up, that would be great - and/or point me in the right direction.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If a template is rendered with a content type other than
'text/html', when an exception is raised and considered a non-local
request, the default error file (500.html) will be rendered with
the specified content type rather than 'text/html'. This can cause
wonkiness in some browsers.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class DummyController &amp;lt; ApplicationController
  def index
    render :inline =&amp;gt; &amp;quot;&amp;lt;%= response.bad_method %&amp;gt;&amp;quot;, :content_type =&amp;gt; 'text/plain'
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When the above method is accessed, the default file (500.html)
will be rendered with a content type of 'text/plain', which will
cause browsers such as Safari to render the page as plain text
rather than HTML. Ugly.&lt;/p&gt;
&lt;p&gt;A fix is attached. I spent quite a bit of time trying to come up
with a test, but it looks like a test would mean adding quite a bit
of code to either rescue_test.rb or render_test.rb (since it
requires both the set up code for rendering as well as rescuing).
If anyone can code one up, that would be great - and/or point me in
the right direction.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-26T08:35:09+00:00</created-at>
      <creator-id type="integer">16302</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1478</number>
      <permalink>override-content-type-when-rendering-default-error-file</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Override content type when rendering default error file</title>
      <updated-at type="datetime">2008-11-26T08:41:05+00:00</updated-at>
      <user-id type="integer">16302</user-id>
      <version type="integer">1</version>
      <user-name>Brady Bouchard</user-name>
      <creator-name>Brady Bouchard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1478</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-15T21:31:18+00:00</created-at>
      <creator-id type="integer">16302</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1478</number>
      <permalink>override-content-type-when-rendering-default-error-file</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug content_type patch render</tag>
      <title>Override content type when rendering default error file</title>
      <updated-at type="datetime">2008-12-15T21:31:19+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Brady Bouchard</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1478</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [33f76bb25a973a4707437064e2f963c521413fcb]) Ensure error file is sent with a 'text/html' content type [#1478 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/33f76bb25a973a4707437064e2f963c521413fcb</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [33f76bb25a973a4707437064e2f963c521413fcb]) Ensure error
file is sent with a 'text/html' content type [&lt;a href=&quot;/projects/8994/tickets/1478&quot; title=&quot;Ticket #1478&quot;&gt;#1478&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Joshua Peek &lt;a href=&quot;mailto:josh@joshpeek.com&quot;&gt;josh@joshpeek.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/33f76bb25a973a4707437064e2f963c521413fcb&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-17T16:22:48+00:00</created-at>
      <creator-id type="integer">16302</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1478</number>
      <permalink>override-content-type-when-rendering-default-error-file</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug content_type patch render</tag>
      <title>Override content type when rendering default error file</title>
      <updated-at type="datetime">2008-12-17T16:22:50+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Brady Bouchard</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1478</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b6b5f600d0f1601bb59b97b34103927150a83b77</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-26T08:35:09+00:00</created-at>
      <filename>error_file_sent_as_text_html.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">65586</id>
      <size type="integer">948</size>
      <uploader-id type="integer">16302</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/65586/error_file_sent_as_text_html.diff</url>
    </attachment>
  </attachments>
</ticket>
