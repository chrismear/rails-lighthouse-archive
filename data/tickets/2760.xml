<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-06-04T20:02:22+01:00</created-at>
  <creator-id type="integer">31826</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2760</number>
  <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
  <priority type="integer">1868</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2-3-stable action_pack polymorphic</tag>
  <title>polymorphic_url assumes a record is provided</title>
  <updated-at type="datetime">2010-01-03T00:20:03+00:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">13</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Gus</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have a very special case whereby I am building a polymorphic_url using only singleton resources. For example, if my routes were defined as such:

@@@ ruby
map.resource :person do |person|
  person.resource :preference
end
@@@

and I attempt to build a URL like so:

@@@ ruby
polymorphic_url([:person, :preference])
@@@


The method call that is generated would end up looking like `person_preference_nil_class_path`. This is because `build_named_route_call` in `polymorphic_routes.rb` assumes a record is provided to polymorphic_url.

Attached is a fix.</original-body>
  <latest-body>I have a very special case whereby I am building a polymorphic_url using only singleton resources. For example, if my routes were defined as such:

@@@ ruby
map.resource :person do |person|
  person.resource :preference
end
@@@

and I attempt to build a URL like so:

@@@ ruby
polymorphic_url([:person, :preference])
@@@


The method call that is generated would end up looking like `person_preference_nil_class_path`. This is because `build_named_route_call` in `polymorphic_routes.rb` assumes a record is provided to polymorphic_url.

Attached is a fix.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a very special case whereby I am building a
polymorphic_url using only singleton resources. For example, if my
routes were defined as such:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
map.resource :person do |person|
  person.resource :preference
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and I attempt to build a URL like so:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
polymorphic_url([:person, :preference])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The method call that is generated would end up looking like
&lt;code&gt;person_preference_nil_class_path&lt;/code&gt;. This is because
&lt;code&gt;build_named_route_call&lt;/code&gt; in
&lt;code&gt;polymorphic_routes.rb&lt;/code&gt; assumes a record is provided to
polymorphic_url.&lt;/p&gt;
&lt;p&gt;Attached is a fix.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a very special case whereby I am building a polymorphic_url using only singleton resources. For example, if my routes were defined as such:

@@@ ruby
map.resource :person do |person|
  person.resource :preference
end
@@@

and I attempt to build a URL like so:

@@@ ruby
polymorphic_url([:person, :preference])
@@@


The method call that is generated would end up looking like `person_preference_nil_class_path`. This is because `build_named_route_call` in `polymorphic_routes.rb` assumes a record is provided to polymorphic_url.

Attached is a fix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a very special case whereby I am building a
polymorphic_url using only singleton resources. For example, if my
routes were defined as such:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;map.resource :person do |person|
  person.resource :preference
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and I attempt to build a URL like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;polymorphic_url([:person, :preference])&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The method call that is generated would end up looking like
&lt;code&gt;person_preference_nil_class_path&lt;/code&gt;. This is because
&lt;code&gt;build_named_route_call&lt;/code&gt; in
&lt;code&gt;polymorphic_routes.rb&lt;/code&gt; assumes a record is provided to
polymorphic_url.&lt;/p&gt;
&lt;p&gt;Attached is a fix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-04T20:02:22+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-04T20:02:26+01:00</updated-at>
      <user-id type="integer">31826</user-id>
      <version type="integer">1</version>
      <user-name>Gus</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>if there's no record, then you don't need polymorphic_url

You want person_preference_url</body>
      <body-html>&lt;div&gt;&lt;p&gt;if there's no record, then you don't need polymorphic_url&lt;/p&gt;
&lt;p&gt;You want person_preference_url&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-09T09:44:40+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-09T09:44:44+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Normally I would agree. Using person_preference_url is specific and that would be what I would go to first.

However, I am using a polymorphic url in this very specific instance for - what I consider to be - a good reason. And in using it, I expected my above case to work. It did not work and I considered that fact to be a bug. Being a bug, I sought to remedy it, which I did do :)

I can't see any reason why this is not an appropriate fix given the documentation for polymorphic_url. Tests were written before making the change; all tests pass after making the change.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Normally I would agree. Using person_preference_url is specific
and that would be what I would go to first.&lt;/p&gt;
&lt;p&gt;However, I am using a polymorphic url in this very specific
instance for - what I consider to be - a good reason. And in using
it, I expected my above case to work. It did not work and I
considered that fact to be a bug. Being a bug, I sought to remedy
it, which I did do :)&lt;/p&gt;
&lt;p&gt;I can't see any reason why this is not an appropriate fix given
the documentation for polymorphic_url. Tests were written before
making the change; all tests pass after making the change.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-09T20:26:31+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-09T20:26:31+01:00</updated-at>
      <user-id type="integer">31826</user-id>
      <version type="integer">3</version>
      <user-name>Gus</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If the documentation implies you should be using polymorphic_url when there's no instances, nor any chance you'd be passing in an instance then that's what we should be fixing.

But what's the good reason you have in mind for using it here?  It's entirely possible I'm missing something ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;If the documentation implies you should be using polymorphic_url
when there's no instances, nor any chance you'd be passing in an
instance then that's what we should be fixing.&lt;/p&gt;
&lt;p&gt;But what's the good reason you have in mind for using it here?
It's entirely possible I'm missing something ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-10T04:40:30+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-10T04:40:30+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; Constructs a call to a named RESTful route for the given record and returns the resulting URL string

The first third of that piece of documentation applies in this case, &quot;Constructs a call to a named RESTful route&quot;. The second third would apply, &quot;for the given record&quot;, if I were not using singleton resources. It seems illogical to me to say that polymorphic_url should handle the case `foos_bar(bar)` if foos is a collection resource, but not `foo_bar` when foo is a singleton resource. The point is to aid in the construction of a named route.

My good reason is context sensitive and meaningful to my project. In generic terms, we have a controller that can be called through two different paths. It used to be that these paths where symmetrical in terms of the parameters required. We went through the process of turning one of root controllers for a path into singleton resource and found this bug.

I honestly don't see why polymorphic_url should not handle this case.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;Constructs a call to a named RESTful route for the given record
and returns the resulting URL string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The first third of that piece of documentation applies in this
case, &quot;Constructs a call to a named RESTful route&quot;. The second
third would apply, &quot;for the given record&quot;, if I were not using
singleton resources. It seems illogical to me to say that
polymorphic_url should handle the case &lt;code&gt;foos_bar(bar)&lt;/code&gt;
if foos is a collection resource, but not &lt;code&gt;foo_bar&lt;/code&gt; when
foo is a singleton resource. The point is to aid in the
construction of a named route.&lt;/p&gt;
&lt;p&gt;My good reason is context sensitive and meaningful to my
project. In generic terms, we have a controller that can be called
through two different paths. It used to be that these paths where
symmetrical in terms of the parameters required. We went through
the process of turning one of root controllers for a path into
singleton resource and found this bug.&lt;/p&gt;
&lt;p&gt;I honestly don't see why polymorphic_url should not handle this
case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-10T13:42:14+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-10T13:42:14+01:00</updated-at>
      <user-id type="integer">31826</user-id>
      <version type="integer">5</version>
      <user-name>Gus</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>How about I open up a patch to fix the documentation, then we can come back to this one?</body>
      <body-html>&lt;div&gt;&lt;p&gt;How about I open up a patch to fix the documentation, then we
can come back to this one?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-10T22:30:26+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-10T22:30:26+01:00</updated-at>
      <user-id type="integer">31826</user-id>
      <version type="integer">6</version>
      <user-name>Gus</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Oh boy ... did a little bit of digging. I did a blame on polymorphic_routes, see:

http://github.com/rails/rails/blame/47ff57f6d14fe161900bf85e2d2cf6d7e21a1eb8/actionpack/lib/action_controller/routing/generation/polymorphic_routes.rb

Notice line 166. Ok, if you check the commit message for the change of line 166 (and the other related lines), you find:

http://github.com/rails/rails/commit/bb6e8eea5a8190aaab67da0a7efedb3bb3d9fccb

To quote, the message says &quot;Fixed polymorphic_url to be able to handle singleton resources&quot;. Well, it didn't handle the case I spoke of, therefore, my patch makes it better.

Can we mark this as &quot;Will fix&quot; now?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh boy ... did a little bit of digging. I did a blame on
polymorphic_routes, see:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/blame/47ff57f6d14fe161900bf85e2d2cf6d7e21a1eb8/actionpack/lib/action_controller/routing/generation/polymorphic_routes.rb&quot;&gt;
http://github.com/rails/rails/blame/47ff57f6d14fe161900bf85e2d2cf6d...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Notice line 166. Ok, if you check the commit message for the
change of line 166 (and the other related lines), you find:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/bb6e8eea5a8190aaab67da0a7efedb3bb3d9fccb&quot;&gt;
http://github.com/rails/rails/commit/bb6e8eea5a8190aaab67da0a7efedb...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To quote, the message says &quot;Fixed polymorphic_url to be able to
handle singleton resources&quot;. Well, it didn't handle the case I
spoke of, therefore, my patch makes it better.&lt;/p&gt;
&lt;p&gt;Can we mark this as &quot;Will fix&quot; now?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-11T00:33:08+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-11T00:33:08+01:00</updated-at>
      <user-id type="integer">31826</user-id>
      <version type="integer">7</version>
      <user-name>Gus</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-11T00:37:31+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-11T00:37:31+01:00</updated-at>
      <user-id type="integer">31826</user-id>
      <version type="integer">8</version>
      <user-name>Gus</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sure thing,

Jeremy can take it though as I'm clearly too skeptical ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sure thing,&lt;/p&gt;
&lt;p&gt;Jeremy can take it though as I'm clearly too skeptical ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-11T00:56:37+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- 
:state: wontfix
:assigned_user: 141
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-11T00:56:37+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">9</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Woot! Thanks so much.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Woot! Thanks so much.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-11T03:44:44+01:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-06-11T03:44:44+01:00</updated-at>
      <user-id type="integer">31826</user-id>
      <version type="integer">10</version>
      <user-name>Gus</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I agree. This fix would help app code consistency and help it follow &quot;the principle of least surprise&quot;. ;-D

A quick semi-fictional example of why this is needed:

@@@
&lt;% unless current_user.admin? %&gt;
	&lt;%= link_to &quot;My Account&quot;, [current_user] %&gt;&lt;%# works: generates &quot;/users/1&quot; %&gt;
	&lt;%= link_to &quot;Logout&quot;, [:user_session], :method =&gt; :delete %&gt;&lt;%# works: generates &quot;/user_session&quot; %&gt;
&lt;% else %&gt;
	&lt;%= link_to &quot;My Account&quot;, [:admin, current_user] %&gt;&lt;%# works: generates &quot;/admin/users/1&quot; %&gt;
	&lt;%= link_to &quot;Logout&quot;, [:admin, :user_session], :method =&gt; :delete %&gt;&lt;%# breaks: &quot;undefined method `admin_user_session_nil_class_path'&quot; %&gt;
&lt;% end %&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree. This fix would help app code consistency and help it
follow &quot;the principle of least surprise&quot;. ;-D&lt;/p&gt;
&lt;p&gt;A quick semi-fictional example of why this is needed:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;% unless current_user.admin? %&amp;gt;
    &amp;lt;%= link_to &quot;My Account&quot;, [current_user] %&amp;gt;&amp;lt;%# works: generates &quot;/users/1&quot; %&amp;gt;
    &amp;lt;%= link_to &quot;Logout&quot;, [:user_session], :method =&amp;gt; :delete %&amp;gt;&amp;lt;%# works: generates &quot;/user_session&quot; %&amp;gt;
&amp;lt;% else %&amp;gt;
    &amp;lt;%= link_to &quot;My Account&quot;, [:admin, current_user] %&amp;gt;&amp;lt;%# works: generates &quot;/admin/users/1&quot; %&amp;gt;
    &amp;lt;%= link_to &quot;Logout&quot;, [:admin, :user_session], :method =&amp;gt; :delete %&amp;gt;&amp;lt;%# breaks: &quot;undefined method `admin_user_session_nil_class_path'&quot; %&amp;gt;
&amp;lt;% end %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-16T20:58:36+00:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-11-16T20:58:38+00:00</updated-at>
      <user-id type="integer">36886</user-id>
      <version type="integer">11</version>
      <user-name>Slippy Douglas</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>i second this</body>
      <body-html>&lt;div&gt;&lt;p&gt;i second this&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-25T15:16:41+00:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2009-12-25T15:16:45+00:00</updated-at>
      <user-id type="integer">40146</user-id>
      <version type="integer">12</version>
      <user-name>Dmitry V</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Both master and 2-3-stables have tests proving this works:

http://github.com/rails/rails/blob/master/actionpack/test/activerecord/polymorphic_routes_test.rb#L246

http://github.com/rails/rails/blob/2-3-stable/actionpack/test/controller/polymorphic_routes_test.rb#L293

So this is working or will in the next release.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Both master and 2-3-stables have tests proving this works:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/blob/master/actionpack/test/activerecord/polymorphic_routes_test.rb#L246&quot;&gt;
http://github.com/rails/rails/blob/master/actionpack/test/activerec...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/blob/2-3-stable/actionpack/test/controller/polymorphic_routes_test.rb#L293&quot;&gt;
http://github.com/rails/rails/blob/2-3-stable/actionpack/test/contr...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So this is working or will in the next release.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-03T00:20:00+00:00</created-at>
      <creator-id type="integer">31826</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2760</number>
      <permalink>polymorphic_url-assumes-a-record-is-provided</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable action_pack polymorphic</tag>
      <title>polymorphic_url assumes a record is provided</title>
      <updated-at type="datetime">2010-01-03T00:20:03+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">13</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Gus</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2760</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b258c4f066c4b41a6e6b5ea4430b19f5c02994ef</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-06-04T20:02:22+01:00</created-at>
      <filename>polymorphic_routes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">129765</id>
      <size type="integer">1741</size>
      <uploader-id type="integer">31826</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/129765/polymorphic_routes.diff</url>
    </attachment>
  </attachments>
</ticket>
