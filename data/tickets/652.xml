<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-18T16:51:11+01:00</created-at>
  <creator-id type="integer">20191</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">652</number>
  <permalink>stack-error-with-hash-to_json-for-nested-number-values</permalink>
  <priority type="integer">134</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>2.1 activesupport json</tag>
  <title>Stack error with Hash.to_json for nested number values</title>
  <updated-at type="datetime">2008-12-01T20:16:12+00:00</updated-at>
  <user-id type="integer">20191</user-id>
  <version type="integer">5</version>
  <user-name>Noel Rappin</user-name>
  <creator-name>Noel Rappin</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/652</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Here's the test

@@@should &quot;output json&quot; do
    hash = {
      &quot;CHI&quot; =&gt; {
        :dislay_name =&gt; &quot;chicago&quot;,
        :latitude =&gt; 123.234
      }
    }
    result = hash.to_json
@@@

And the result

@@@
Error:
test: Institution should output json. (InstitutionTest):
SystemStackError: stack level too deep
    /Users/noel/Projects/botanic/plant_collections/vendor/rails/activerecord/lib/../../activesupport/lib/active_support/json/encoding.rb:29
@@@

Poking around, converting the number to a string did not trigger the problem, and using a flat hash rather than a nested hash also did not. I'm wondering if this is a odd side effect of the stack check to avoid circular references?</original-body>
  <latest-body>Here's the test

@@@should &quot;output json&quot; do
    hash = {
      &quot;CHI&quot; =&gt; {
        :dislay_name =&gt; &quot;chicago&quot;,
        :latitude =&gt; 123.234
      }
    }
    result = hash.to_json
@@@

And the result

@@@
Error:
test: Institution should output json. (InstitutionTest):
SystemStackError: stack level too deep
    /Users/noel/Projects/botanic/plant_collections/vendor/rails/activerecord/lib/../../activesupport/lib/active_support/json/encoding.rb:29
@@@

Poking around, converting the number to a string did not trigger the problem, and using a flat hash rather than a nested hash also did not. I'm wondering if this is a odd side effect of the stack check to avoid circular references?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Here's the test
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hould &quot;&gt;    hash = {
      &amp;quot;CHI&amp;quot; =&amp;gt; {
        :dislay_name =&amp;gt; &amp;quot;chicago&amp;quot;,
        :latitude =&amp;gt; 123.234
      }
    }
    result = hash.to_json&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
And the result
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;Error:
test: Institution should output json. (InstitutionTest):
SystemStackError: stack level too deep
    /Users/noel/Projects/botanic/plant_collections/vendor/rails/activerecord/lib/../../activesupport/lib/active_support/json/encoding.rb:29&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Poking around, converting the number to a string did not trigger the problem, and using a flat hash rather than a nested hash also did not. I'm wondering if this is a odd side effect of the stack check to avoid circular references?
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's the test

@@@should &quot;output json&quot; do
    hash = {
      &quot;CHI&quot; =&gt; {
        :dislay_name =&gt; &quot;chicago&quot;,
        :latitude =&gt; 123.234
      }
    }
    result = hash.to_json
@@@

And the result

@@@
Error:
test: Institution should output json. (InstitutionTest):
SystemStackError: stack level too deep
    /Users/noel/Projects/botanic/plant_collections/vendor/rails/activerecord/lib/../../activesupport/lib/active_support/json/encoding.rb:29
@@@

Poking around, converting the number to a string did not trigger the problem, and using a flat hash rather than a nested hash also did not. I'm wondering if this is a odd side effect of the stack check to avoid circular references?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Here's the test
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hould &quot;&gt;    hash = {
      &amp;quot;CHI&amp;quot; =&amp;gt; {
        :dislay_name =&amp;gt; &amp;quot;chicago&amp;quot;,
        :latitude =&amp;gt; 123.234
      }
    }
    result = hash.to_json&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
And the result
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;Error:
test: Institution should output json. (InstitutionTest):
SystemStackError: stack level too deep
    /Users/noel/Projects/botanic/plant_collections/vendor/rails/activerecord/lib/../../activesupport/lib/active_support/json/encoding.rb:29&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Poking around, converting the number to a string did not trigger the problem, and using a flat hash rather than a nested hash also did not. I'm wondering if this is a odd side effect of the stack check to avoid circular references?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-18T16:51:11+01:00</created-at>
      <creator-id type="integer">20191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">652</number>
      <permalink>stack-error-with-hash-to_json-for-nested-number-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activesupport bug</tag>
      <title>Stack error with Hash.to_json for nested number values</title>
      <updated-at type="datetime">2008-07-18T16:51:11+01:00</updated-at>
      <user-id type="integer">20191</user-id>
      <version type="integer">1</version>
      <user-name>Noel Rappin</user-name>
      <creator-name>Noel Rappin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/652</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I wrote a unit test for this that passed on edge rails, so it looks like this has been fixed already.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I wrote a unit test for this that passed on edge rails, so it
looks like this has been fixed already.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-12T21:42:46+01:00</created-at>
      <creator-id type="integer">20191</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 activesupport bug
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">652</number>
      <permalink>stack-error-with-hash-to_json-for-nested-number-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activesupport bug bug</tag>
      <title>Stack error with Hash.to_json for nested number values</title>
      <updated-at type="datetime">2008-10-12T21:42:49+01:00</updated-at>
      <user-id type="integer">17510</user-id>
      <version type="integer">2</version>
      <user-name>Dan Barry</user-name>
      <creator-name>Noel Rappin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/652</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [0d4dbb3dfaec8355e072d8f758de40a277f2f009]) test nested hash with float

[#652 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/0d4dbb3dfaec8355e072d8f758de40a277f2f009</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [0d4dbb3dfaec8355e072d8f758de40a277f2f009]) test nested
hash with float&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/652&quot; title=&quot;Ticket #652&quot;&gt;#652&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/0d4dbb3dfaec8355e072d8f758de40a277f2f009&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-12T22:25:26+01:00</created-at>
      <creator-id type="integer">20191</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">652</number>
      <permalink>stack-error-with-hash-to_json-for-nested-number-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.1 activesupport bug bug</tag>
      <title>Stack error with Hash.to_json for nested number values</title>
      <updated-at type="datetime">2008-10-12T22:25:29+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Noel Rappin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/652</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Oddly, I'm still having the problem, with Rails 2.2.  Just saw it when trying to run the open flash chart example, 

http://pullmonkey.com/projects/open_flash_chart2/

The resulting JSON should look like this

{&quot;title&quot;: &quot;Tasker&quot;, &quot;elements&quot;: [{&quot;type&quot;: &quot;bar_glass&quot;, &quot;values&quot;: [1, 2]}]}

But I'm getting the same stack overflow error. The original example doesn't work for me either.

noel$ script/console
Loading development environment (Rails 2.2.2)
&gt;&gt; hash = {
?&gt;           &quot;CHI&quot; =&gt; {
?&gt;             :dislay_name =&gt; &quot;chicago&quot;,
?&gt;             :latitude =&gt; 123.234
&gt;&gt;           }
&gt;&gt;         }
=&gt; {&quot;CHI&quot;=&gt;{:dislay_name=&gt;&quot;chicago&quot;, :latitude=&gt;123.234}}
&gt;&gt;         result = hash.to_json</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oddly, I'm still having the problem, with Rails 2.2. Just saw it
when trying to run the open flash chart example,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pullmonkey.com/projects/open_flash_chart2/&quot;&gt;http://pullmonkey.com/projects/o...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The resulting JSON should look like this&lt;/p&gt;
&lt;p&gt;{&quot;title&quot;: &quot;Tasker&quot;, &quot;elements&quot;: [{&quot;type&quot;: &quot;bar_glass&quot;, &quot;values&quot;:
[1, 2]}]}&lt;/p&gt;
&lt;p&gt;But I'm getting the same stack overflow error. The original
example doesn't work for me either.&lt;/p&gt;
&lt;p&gt;noel$ script/console Loading development environment (Rails
2.2.2)&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hash = { ?&amp;gt; &quot;CHI&quot; =&amp;gt; { ?&amp;gt; :dislay_name =&amp;gt; &quot;chicago&quot;,
?&amp;gt; :latitude =&amp;gt; 123.234&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      }
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;=&amp;gt; {&quot;CHI&quot;=&amp;gt;{:dislay_name=&amp;gt;&quot;chicago&quot;,
:latitude=&amp;gt;123.234}}&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    result = hash.to_json
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-01T20:14:03+00:00</created-at>
      <creator-id type="integer">20191</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 activesupport bug bug
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">652</number>
      <permalink>stack-error-with-hash-to_json-for-nested-number-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.1 activesupport json</tag>
      <title>Stack error with Hash.to_json for nested number values</title>
      <updated-at type="datetime">2008-12-01T20:14:08+00:00</updated-at>
      <user-id type="integer">20191</user-id>
      <version type="integer">4</version>
      <user-name>Noel Rappin</user-name>
      <creator-name>Noel Rappin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/652</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Asking around my group, the original example works for some of us, but not for others in a script/console session.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Asking around my group, the original example works for some of
us, but not for others in a script/console session.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-01T20:16:09+00:00</created-at>
      <creator-id type="integer">20191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">652</number>
      <permalink>stack-error-with-hash-to_json-for-nested-number-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.1 activesupport json</tag>
      <title>Stack error with Hash.to_json for nested number values</title>
      <updated-at type="datetime">2008-12-01T20:16:12+00:00</updated-at>
      <user-id type="integer">20191</user-id>
      <version type="integer">5</version>
      <user-name>Noel Rappin</user-name>
      <creator-name>Noel Rappin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/652</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>01bc64175c3d7105a1c43a65336c8b7da797dd90</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-12T21:42:46+01:00</created-at>
      <filename>0001-test-nested-hash-with-float.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">53370</id>
      <size type="integer">963</size>
      <uploader-id type="integer">17510</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/53370/0001-test-nested-hash-with-float.patch</url>
    </attachment>
  </attachments>
</ticket>
