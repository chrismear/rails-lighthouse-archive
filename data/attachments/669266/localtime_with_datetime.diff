From 5cc9f9d4aab8dc01873fe25a37c21551840ce7ae Mon Sep 17 00:00:00 2001
From: Alvaro Bautista <alvarobp@gmail.com>
Date: Sat, 11 Sep 2010 21:12:10 +0200
Subject: [PATCH] Fix ActiveSupport::TimeWithZone#localtime method with DateTime

---
 activesupport/lib/active_support/time_with_zone.rb |    2 +-
 activesupport/test/core_ext/time_with_zone_test.rb |   11 +++++++++++
 2 files changed, 12 insertions(+), 1 deletions(-)

diff --git a/activesupport/lib/active_support/time_with_zone.rb b/activesupport/lib/active_support/time_with_zone.rb
index 93f5d5a..d993ba3 100644
--- a/activesupport/lib/active_support/time_with_zone.rb
+++ b/activesupport/lib/active_support/time_with_zone.rb
@@ -73,7 +73,7 @@ module ActiveSupport
 
     # Returns a <tt>Time.local()</tt> instance of the simultaneous time in your system's <tt>ENV['TZ']</tt> zone
     def localtime
-      utc.getlocal
+      utc.is_a?(DateTime) ? utc.to_time.getlocal : utc.getlocal
     end
     alias_method :getlocal, :localtime
 
diff --git a/activesupport/test/core_ext/time_with_zone_test.rb b/activesupport/test/core_ext/time_with_zone_test.rb
index 0bb2c4a..5579c27 100644
--- a/activesupport/test/core_ext/time_with_zone_test.rb
+++ b/activesupport/test/core_ext/time_with_zone_test.rb
@@ -36,6 +36,10 @@ class TimeWithZoneTest < Test::Unit::TestCase
     assert_equal @twz.object_id, @twz.in_time_zone(ActiveSupport::TimeZone['Eastern Time (US & Canada)']).object_id
   end
 
+  def test_localtime
+    assert_equal @twz.localtime, @twz.utc.getlocal
+  end
+
   def test_utc?
     assert_equal false, @twz.utc?
     assert_equal true, ActiveSupport::TimeWithZone.new(Time.utc(2000), ActiveSupport::TimeZone['UTC']).utc?
@@ -763,6 +767,13 @@ class TimeWithZoneMethodsForTimeAndDateTimeTest < Test::Unit::TestCase
     end
   end
 
+  def test_localtime
+    Time.zone_default = ActiveSupport::TimeZone['Eastern Time (US & Canada)']
+    assert_equal @dt.in_time_zone.localtime, @dt.in_time_zone.utc.to_time.getlocal
+  ensure
+    Time.zone_default = nil
+  end
+
   def test_use_zone
     Time.zone = 'Alaska'
     Time.use_zone 'Hawaii' do
-- 
1.7.2.2

