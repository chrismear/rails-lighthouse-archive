From 9220584c0777206dc948b8956bb481c3c1178d9a Mon Sep 17 00:00:00 2001
From: Travis Briggs <briggs.travis@gmail.com>
Date: Wed, 18 Mar 2009 21:51:26 -0400
Subject: [PATCH] Fixed number_to_human_size regex

The previous regex is incorrect. Because the #{escaped_separator} was
inside a zero or one group (ie ()?), it would strip out any zeros at
the end of a string, even if there was no decimal:

number_to_human_size(41100, :precision => 0)  # => "4 KB"
---
 .../lib/action_view/helpers/number_helper.rb       |    7 ++++++-
 actionpack/test/template/number_helper_test.rb     |    4 ++++
 2 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/number_helper.rb b/actionpack/lib/action_view/helpers/number_helper.rb
index dea958d..1760a13 100644
--- a/actionpack/lib/action_view/helpers/number_helper.rb
+++ b/actionpack/lib/action_view/helpers/number_helper.rb
@@ -246,6 +246,11 @@ module ActionView
       #  number_to_human_size(483989, :precision => 0)                      # => 473 KB
       #  number_to_human_size(1234567, :precision => 2, :separator => ',')  # => 1,18 MB
       #
+      # Zeros after the decimal point are always stripped out, regardless of the
+      # specified precision:
+      #  helper.number_to_human_size(1234567890123, :precision => 5)        # => "1.12283 TB"
+      #  helper.number_to_human_size(524288000, :precision=>5)              # => "500 MB"
+      #
       # You can still use <tt>number_to_human_size</tt> with the old API that accepts the
       # +precision+ as its optional second parameter:
       #  number_to_human_size(1234567, 2)    # => 1.18 MB
@@ -291,7 +296,7 @@ module ActionView
               :precision => precision,
               :separator => separator,
               :delimiter => delimiter
-            ).sub(/(\d)(#{escaped_separator}[1-9]*)?0+\z/, '\1\2').sub(/#{escaped_separator}\z/, '')
+            ).sub(/(#{escaped_separator})(\d*[1-9])?0+\z/, '\1\2').sub(/#{escaped_separator}\z/, '')
             storage_units_format.gsub(/%n/, formatted_number).gsub(/%u/, unit)
           rescue
             number
diff --git a/actionpack/test/template/number_helper_test.rb b/actionpack/test/template/number_helper_test.rb
index 29cb60f..b6542ef 100644
--- a/actionpack/test/template/number_helper_test.rb
+++ b/actionpack/test/template/number_helper_test.rb
@@ -118,6 +118,10 @@ class NumberHelperTest < ActionView::TestCase
     assert_equal '1.01 KB',   number_to_human_size(1.0123.kilobytes, :precision => 2)
     assert_equal '1.01 KB',   number_to_human_size(1.0100.kilobytes, :precision => 4)
     assert_equal '10 KB',     number_to_human_size(10.000.kilobytes, :precision => 4)
+    assert_equal '1 TB', number_to_human_size(1234567890123, :precision => 0)
+    assert_equal '500 MB', number_to_human_size(524288000, :precision=>0)
+    assert_equal '40 KB', number_to_human_size(41010, :precision => 0)
+    assert_equal '40 KB', number_to_human_size(41100, :precision => 0)
   end
 
   def test_number_to_human_size_with_custom_delimiter_and_separator
-- 
1.6.1.2

