<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-25T02:40:55+01:00</created-at>
  <creator-id type="integer">109255</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5451</number>
  <permalink>belongs_to-relationship-creation-should-fail-if-foreign-key-does-not-exist</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;rails 30rc&quot; &quot;rails 3rc2&quot;</tag>
  <title>belongs_to relationship creation should fail if foreign key does not exist.</title>
  <updated-at type="datetime">2011-02-02T17:03:07+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Matt Scilipoti</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5451</url>
  <priority-name nil="true"></priority-name>
  <original-body>ItemA belongs_to ItemB
item_b_id is not in table ItemAs.

ItemA.new.create_item_b -&gt; does NOT raise error

A new ItemB is saved to db.

ItemA.first.item_b == nil


Env:
ree 1.8.7 2010.02
rails 3.0.0.rc, 3.0.0.rc2


This test identifies the issue.  It can be placed in AR test/cases/associations/belongs_to_associations_test.rb

@@@ ruby

  class ItemA &lt; ActiveRecord::Base
    belongs_to :item_b
  end
  class ItemB &lt; ActiveRecord::Base
  end

  def test_creating_the_belonging_object_when_foreign_key_does_not_exist
    ActiveRecord::Base.connection.create_table :item_as, :force =&gt; true do |t|
      t.string :name
    end

    ActiveRecord::Base.connection.create_table :item_bs, :force =&gt; true do |t|
      t.string :name
    end
    
    item_a = ItemA.create!(&quot;name&quot; =&gt; &quot;Apple&quot;)
    item_b = item_a.create_item_b(&quot;name&quot; =&gt; &quot;(fan)Boy&quot;)
    assert_equal item_b, item_a.item_b
    item_a.save!
    item_a = ItemA.last
    assert_equal item_b, item_a.item_b
  end
@@@</original-body>
  <latest-body>ItemA belongs_to ItemB
item_b_id is not in table ItemAs.

ItemA.new.create_item_b -&gt; does NOT raise error

A new ItemB is saved to db.

ItemA.first.item_b == nil


Env:
ree 1.8.7 2010.02
rails 3.0.0.rc, 3.0.0.rc2


This test identifies the issue.  It can be placed in AR test/cases/associations/belongs_to_associations_test.rb

@@@ ruby

  class ItemA &lt; ActiveRecord::Base
    belongs_to :item_b
  end
  class ItemB &lt; ActiveRecord::Base
  end

  def test_creating_the_belonging_object_when_foreign_key_does_not_exist
    ActiveRecord::Base.connection.create_table :item_as, :force =&gt; true do |t|
      t.string :name
    end

    ActiveRecord::Base.connection.create_table :item_bs, :force =&gt; true do |t|
      t.string :name
    end
    
    item_a = ItemA.create!(&quot;name&quot; =&gt; &quot;Apple&quot;)
    item_b = item_a.create_item_b(&quot;name&quot; =&gt; &quot;(fan)Boy&quot;)
    assert_equal item_b, item_a.item_b
    item_a.save!
    item_a = ItemA.last
    assert_equal item_b, item_a.item_b
  end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ItemA belongs_to ItemB&lt;br&gt;
item_b_id is not in table ItemAs.&lt;/p&gt;
&lt;p&gt;ItemA.new.create_item_b -&amp;gt; does NOT raise error&lt;/p&gt;
&lt;p&gt;A new ItemB is saved to db.&lt;/p&gt;
&lt;p&gt;ItemA.first.item_b == nil&lt;/p&gt;
&lt;p&gt;Env:&lt;br&gt;
ree 1.8.7 2010.02&lt;br&gt;
rails 3.0.0.rc, 3.0.0.rc2&lt;/p&gt;
&lt;p&gt;This test identifies the issue. It can be placed in AR
test/cases/associations/belongs_to_associations_test.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
  class ItemA &amp;lt; ActiveRecord::Base
    belongs_to :item_b
  end
  class ItemB &amp;lt; ActiveRecord::Base
  end

  def test_creating_the_belonging_object_when_foreign_key_does_not_exist
    ActiveRecord::Base.connection.create_table :item_as, :force =&amp;gt; true do |t|
      t.string :name
    end

    ActiveRecord::Base.connection.create_table :item_bs, :force =&amp;gt; true do |t|
      t.string :name
    end
    
    item_a = ItemA.create!(&quot;name&quot; =&amp;gt; &quot;Apple&quot;)
    item_b = item_a.create_item_b(&quot;name&quot; =&amp;gt; &quot;(fan)Boy&quot;)
    assert_equal item_b, item_a.item_b
    item_a.save!
    item_a = ItemA.last
    assert_equal item_b, item_a.item_b
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ItemA belongs_to ItemB
item_b_id is not in table ItemAs.

ItemA.new.create_item_b -&gt; does NOT raise error

A new ItemB is saved to db.

ItemA.first.item_b == nil


Env:
ree 1.8.7 2010.02
rails 3.0.0.rc, 3.0.0.rc2


This test identifies the issue.  It can be placed in AR test/cases/associations/belongs_to_associations_test.rb

@@@ ruby

  class ItemA &lt; ActiveRecord::Base
    belongs_to :item_b
  end
  class ItemB &lt; ActiveRecord::Base
  end

  def test_creating_the_belonging_object_when_foreign_key_does_not_exist
    ActiveRecord::Base.connection.create_table :item_as, :force =&gt; true do |t|
      t.string :name
    end

    ActiveRecord::Base.connection.create_table :item_bs, :force =&gt; true do |t|
      t.string :name
    end
    
    item_a = ItemA.create!(&quot;name&quot; =&gt; &quot;Apple&quot;)
    item_b = item_a.create_item_b(&quot;name&quot; =&gt; &quot;(fan)Boy&quot;)
    assert_equal item_b, item_a.item_b
    item_a.save!
    item_a = ItemA.last
    assert_equal item_b, item_a.item_b
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;ItemA belongs_to ItemB&lt;br&gt;
item_b_id is not in table ItemAs.&lt;/p&gt;
&lt;p&gt;ItemA.new.create_item_b -&amp;gt; does NOT raise error&lt;/p&gt;
&lt;p&gt;A new ItemB is saved to db.&lt;/p&gt;
&lt;p&gt;ItemA.first.item_b == nil&lt;/p&gt;
&lt;p&gt;Env:&lt;br&gt;
ree 1.8.7 2010.02&lt;br&gt;
rails 3.0.0.rc, 3.0.0.rc2&lt;/p&gt;
&lt;p&gt;This test identifies the issue. It can be placed in AR
test/cases/associations/belongs_to_associations_test.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
  class ItemA &amp;lt; ActiveRecord::Base
    belongs_to :item_b
  end
  class ItemB &amp;lt; ActiveRecord::Base
  end

  def test_creating_the_belonging_object_when_foreign_key_does_not_exist
    ActiveRecord::Base.connection.create_table :item_as, :force =&amp;gt; true do |t|
      t.string :name
    end

    ActiveRecord::Base.connection.create_table :item_bs, :force =&amp;gt; true do |t|
      t.string :name
    end
    
    item_a = ItemA.create!(&quot;name&quot; =&amp;gt; &quot;Apple&quot;)
    item_b = item_a.create_item_b(&quot;name&quot; =&amp;gt; &quot;(fan)Boy&quot;)
    assert_equal item_b, item_a.item_b
    item_a.save!
    item_a = ItemA.last
    assert_equal item_b, item_a.item_b
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-25T02:40:55+01:00</created-at>
      <creator-id type="integer">109255</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5451</number>
      <permalink>belongs_to-relationship-creation-should-fail-if-foreign-key-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rails 3.0.rc&quot; &quot;rails 3.rc2&quot;</tag>
      <title>belongs_to relationship creation should fail if foreign key does not exist.</title>
      <updated-at type="datetime">2010-08-25T02:40:57+01:00</updated-at>
      <user-id type="integer">109255</user-id>
      <version type="integer">1</version>
      <user-name>Matt Scilipoti</user-name>
      <creator-name>Matt Scilipoti</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5451</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This test identifies the issue but, it may be better to use:

    item_a = ItemA.create!(&quot;name&quot; =&gt; &quot;Apple&quot;)
    assert_raise &lt;insert appropriate error here&gt; do
      item_b = item_a.create_item_b(&quot;name&quot; =&gt; &quot;(fan)Boy&quot;)
    end</body>
      <body-html>&lt;div&gt;&lt;p&gt;This test identifies the issue but, it may be better to use:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;item_a = ItemA.create!(&quot;name&quot; =&amp;gt; &quot;Apple&quot;)
assert_raise &amp;lt;insert appropriate error here&amp;gt; do
  item_b = item_a.create_item_b(&quot;name&quot; =&amp;gt; &quot;(fan)Boy&quot;)
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-25T14:15:55+01:00</created-at>
      <creator-id type="integer">109255</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5451</number>
      <permalink>belongs_to-relationship-creation-should-fail-if-foreign-key-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rails 3.0.rc&quot; &quot;rails 3.rc2&quot;</tag>
      <title>belongs_to relationship creation should fail if foreign key does not exist.</title>
      <updated-at type="datetime">2010-08-25T14:15:59+01:00</updated-at>
      <user-id type="integer">109255</user-id>
      <version type="integer">2</version>
      <user-name>Matt Scilipoti</user-name>
      <creator-name>Matt Scilipoti</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5451</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:33:46+00:00</created-at>
      <creator-id type="integer">109255</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;rails 3.0.rc\&quot; \&quot;rails 3.rc2\&quot;&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5451</number>
      <permalink>belongs_to-relationship-creation-should-fail-if-foreign-key-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 30rc&quot; &quot;rails 3rc2&quot;</tag>
      <title>belongs_to relationship creation should fail if foreign key does not exist.</title>
      <updated-at type="datetime">2011-02-02T17:02:58+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Matt Scilipoti</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5451</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:33:47+00:00</created-at>
      <creator-id type="integer">109255</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5451</number>
      <permalink>belongs_to-relationship-creation-should-fail-if-foreign-key-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;rails 30rc&quot; &quot;rails 3rc2&quot;</tag>
      <title>belongs_to relationship creation should fail if foreign key does not exist.</title>
      <updated-at type="datetime">2011-02-02T17:03:07+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Matt Scilipoti</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5451</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
