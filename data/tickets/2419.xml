<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-05T00:50:37+01:00</created-at>
  <creator-id type="integer">18670</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">2419</number>
  <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
  <priority type="integer">4</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
  <title>[Patch] Raise specific exceptions for violated database constraints</title>
  <updated-at type="datetime">2010-10-15T23:01:31+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">29</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Michael Schuerig</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The attached patch adds two new exceptions, ActiveRecord::RecordNotUnique and ActiveRecord::InvalidForeignKey as subclasses of ActiveRecord::InvalidStatement.

ActiveRecord::RecordNotUnique is raised when a uniqueness constraint is violated.

ActiveRecord::InvalidForeignKey is raised on an attempted INSERT or UPDATE with a foreign key not corresponding to a primary key.

Sqlite(3) apparently doesn't report foreign key errors at all, therefore no exception is raised for them.</original-body>
  <latest-body>The attached patch adds two new exceptions, ActiveRecord::RecordNotUnique and ActiveRecord::InvalidForeignKey as subclasses of ActiveRecord::InvalidStatement.

ActiveRecord::RecordNotUnique is raised when a uniqueness constraint is violated.

ActiveRecord::InvalidForeignKey is raised on an attempted INSERT or UPDATE with a foreign key not corresponding to a primary key.

Sqlite(3) apparently doesn't report foreign key errors at all, therefore no exception is raised for them.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The attached patch adds two new exceptions,
ActiveRecord::RecordNotUnique and ActiveRecord::InvalidForeignKey
as subclasses of ActiveRecord::InvalidStatement.&lt;/p&gt;
&lt;p&gt;ActiveRecord::RecordNotUnique is raised when a uniqueness
constraint is violated.&lt;/p&gt;
&lt;p&gt;ActiveRecord::InvalidForeignKey is raised on an attempted INSERT
or UPDATE with a foreign key not corresponding to a primary
key.&lt;/p&gt;
&lt;p&gt;Sqlite(3) apparently doesn't report foreign key errors at all,
therefore no exception is raised for them.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The attached patch adds two new exceptions, ActiveRecord::RecordNotUnique and ActiveRecord::InvalidForeignKey as subclasses of ActiveRecord::InvalidStatement.

ActiveRecord::RecordNotUnique is raised when a uniqueness constraint is violated.

ActiveRecord::InvalidForeignKey is raised on an attempted INSERT or UPDATE with a foreign key not corresponding to a primary key.

Sqlite(3) apparently doesn't report foreign key errors at all, therefore no exception is raised for them.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The attached patch adds two new exceptions,
ActiveRecord::RecordNotUnique and ActiveRecord::InvalidForeignKey
as subclasses of ActiveRecord::InvalidStatement.&lt;/p&gt;
&lt;p&gt;ActiveRecord::RecordNotUnique is raised when a uniqueness
constraint is violated.&lt;/p&gt;
&lt;p&gt;ActiveRecord::InvalidForeignKey is raised on an attempted INSERT
or UPDATE with a foreign key not corresponding to a primary
key.&lt;/p&gt;
&lt;p&gt;Sqlite(3) apparently doesn't report foreign key errors at all,
therefore no exception is raised for them.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T00:50:37+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key uniqueness</tag>
      <title>Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T00:50:42+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">1</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T00:55:04+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Raise specific exceptions for violated database constraints
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T00:55:08+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">2</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Looks good.

I had been working on something like this a little while back in some spare cycles - the one thing I really found useful was to pull out the column name that had caused the violation.  That lets you use the exceptions in your validations (and makes a non-race vuo really trivial) flagging the field to the end user that caused the problem.

I wonder if there's room in your patch to have a look at this?  MySQL and SQLite both report the column(s) in the error message.

With Postgres I think you just get the index name.  So you'd need to infer it from the name of the index (fragile - relies on the index having been created using a migration helper) or query the DB for that index to find the column(s) (or something else magical :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks good.&lt;/p&gt;
&lt;p&gt;I had been working on something like this a little while back in
some spare cycles - the one thing I really found useful was to pull
out the column name that had caused the violation. That lets you
use the exceptions in your validations (and makes a non-race vuo
really trivial) flagging the field to the end user that caused the
problem.&lt;/p&gt;
&lt;p&gt;I wonder if there's room in your patch to have a look at this?
MySQL and SQLite both report the column(s) in the error
message.&lt;/p&gt;
&lt;p&gt;With Postgres I think you just get the index name. So you'd need
to infer it from the name of the index (fragile - relies on the
index having been created using a migration helper) or query the DB
for that index to find the column(s) (or something else magical
:)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T01:53:40+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T01:53:46+01:00</updated-at>
      <user-id type="integer">47655</user-id>
      <version type="integer">3</version>
      <user-name>JasonKing</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think all those subclasses should have an accessor for the original exception.  That way there's no dataloss and people wanting to do awesome things with the original exceptions can get access to it.  e.g.

@@@
rescue =&gt; e
  if e.original_exception.some_crazy_stuff
@@@

I also like the idea of having that mapping stuff happen in a seperate class rather than just the adapter, but that's neither here nor there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think all those subclasses should have an accessor for the
original exception. That way there's no dataloss and people wanting
to do awesome things with the original exceptions can get access to
it. e.g.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
rescue =&amp;gt; e
  if e.original_exception.some_crazy_stuff
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I also like the idea of having that mapping stuff happen in a
seperate class rather than just the adapter, but that's neither
here nor there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T03:19:48+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T03:19:50+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've added the original adapter exception to ActiveRecord::InvalidStatement (and descendents).

Using a separate class for the mapping seems a bit like overkill to me at this stage where the code involved comprises just a few lines. Extracting it would mean an additional class for each adapter. In case the amount of code grows, however, I'm all for separation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've added the original adapter exception to
ActiveRecord::InvalidStatement (and descendents).&lt;/p&gt;
&lt;p&gt;Using a separate class for the mapping seems a bit like overkill
to me at this stage where the code involved comprises just a few
lines. Extracting it would mean an additional class for each
adapter. In case the amount of code grows, however, I'm all for
separation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T08:56:06+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T08:56:08+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">5</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Jason, I've considered your idea, and while I'm all for providing as much information as possible in an exception, I'm not sure whether it is really a good idea in this case.

Apart from violated uniqueness constraints (and retryable concurrency-related errors), all other exception raised from the database indicate programming errors, as far as I can see. In that case, all information is available in the log, just not easily interpreted by the program. IOW, you should not try to recover from these exceptions, you should fix the bugs that caused them.

As to implementing validates_uniqueness_of using DB exceptions, here's what I do in a mocdel class to handle the newly minted exception. The drawback is that #create_or_update is private.

@@@
  def create_or_update
    Awarding.transaction(:requires_new =&gt; true) do
      # The nested transaction is required 
      # at least for PostgreSQL as otherwise
      # the failing INSERT aborts the entire
      # (outer) transaction.
      super
    end
  rescue ActiveRecord::RecordNotUnique =&gt; e
    errors.add_to_base('Sorry, already taken.')
    false
  end
@@@

Code like this could be pushed into ActiveRecord.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jason, I've considered your idea, and while I'm all for
providing as much information as possible in an exception, I'm not
sure whether it is really a good idea in this case.&lt;/p&gt;
&lt;p&gt;Apart from violated uniqueness constraints (and retryable
concurrency-related errors), all other exception raised from the
database indicate programming errors, as far as I can see. In that
case, all information is available in the log, just not easily
interpreted by the program. IOW, you should not try to recover from
these exceptions, you should fix the bugs that caused them.&lt;/p&gt;
&lt;p&gt;As to implementing validates_uniqueness_of using DB exceptions,
here's what I do in a mocdel class to handle the newly minted
exception. The drawback is that #create_or_update is private.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  def create_or_update
    Awarding.transaction(:requires_new =&amp;gt; true) do
      # The nested transaction is required 
      # at least for PostgreSQL as otherwise
      # the failing INSERT aborts the entire
      # (outer) transaction.
      super
    end
  rescue ActiveRecord::RecordNotUnique =&amp;gt; e
    errors.add_to_base('Sorry, already taken.')
    false
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Code like this could be pushed into ActiveRecord.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T09:20:56+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord constraint exception foreign-key uniqueness
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T09:21:00+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">6</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Last thoughts on this are, do sqlite and postgresql not have error
codes?  I'm not sure the current approach you're taking there will
work with LANG != C</body>
      <body-html>&lt;div&gt;&lt;p&gt;Last thoughts on this are, do sqlite and postgresql not have
error codes? I'm not sure the current approach you're taking there
will work with LANG != C&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T09:58:28+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T09:58:29+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">7</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I would have much preferred to dispatch on error codes for all databases, unfortunately this doesn't appear to be possible with the drivers as they are.

The pg driver doesn't propagate any error codes. Any improvements would have to rely on a patched driver.

The sqlite3 driver does support error codes, but all the interesting causes map to error code 1 and SQLite3::SQLException, as far as I can tell.

For both PostgreSQL and SQLite3, the error message doesn't seem to depend on the locale of the client app. It might be affected by the locale of the server.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would have much preferred to dispatch on error codes for all
databases, unfortunately this doesn't appear to be possible with
the drivers as they are.&lt;/p&gt;
&lt;p&gt;The pg driver doesn't propagate any error codes. Any
improvements would have to rely on a patched driver.&lt;/p&gt;
&lt;p&gt;The sqlite3 driver does support error codes, but all the
interesting causes map to error code 1 and SQLite3::SQLException,
as far as I can tell.&lt;/p&gt;
&lt;p&gt;For both PostgreSQL and SQLite3, the error message doesn't seem
to depend on the locale of the client app. It might be affected by
the locale of the server.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T11:51:11+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T11:51:17+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">8</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>From earlier - I think you're right and that it's cleaner to leave my suggestion out of your patch.  Propagating the original exception is the best solution.  Let a plugin wrap it up in a custom v_u_o or for some other purpose.</body>
      <body-html>&lt;div&gt;&lt;p&gt;From earlier - I think you're right and that it's cleaner to
leave my suggestion out of your patch. Propagating the original
exception is the best solution. Let a plugin wrap it up in a custom
v_u_o or for some other purpose.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T12:31:31+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-05T12:31:35+01:00</updated-at>
      <user-id type="integer">47655</user-id>
      <version type="integer">9</version>
      <user-name>JasonKing</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>It seems, that Postgresql libpq doesn't return error codes at all</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems, that Postgresql libpq doesn't return error codes at
all&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-20T17:51:00+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-20T17:51:05+01:00</updated-at>
      <user-id type="integer">9721</user-id>
      <version type="integer">10</version>
      <user-name>Max Lapshin</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1 for this please

This would be a HUGE help for us.  We use unique contraints and foreign keys all over the place, and explicitly DON'T use validates_uniqueness_of due to performance concerns.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for this please&lt;/p&gt;
&lt;p&gt;This would be a HUGE help for us. We use unique contraints and
foreign keys all over the place, and explicitly DON'T use
validates_uniqueness_of due to performance concerns.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-22T20:05:11+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-22T20:05:17+01:00</updated-at>
      <user-id type="integer">15459</user-id>
      <version type="integer">11</version>
      <user-name>Nate Wiger</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1 for this
Would love to use this to gracefully rescue unique and foreign keys. Would be cool to have the violated key name also like exception.key_name for tables with multiple fk indexes if supported by the DB but as is, is a huge help.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for this Would love to use this to gracefully rescue unique
and foreign keys. Would be cool to have the violated key name also
like exception.key_name for tables with multiple fk indexes if
supported by the DB but as is, is a huge help.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-27T17:46:05+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-27T17:46:09+01:00</updated-at>
      <user-id type="integer">47289</user-id>
      <version type="integer">12</version>
      <user-name>blythe</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm currently trying to figure out a way to get at any information from PostgreSQL after an error occurred. For a uniqueness violation, I can get the columns involved, but I need a usable connection. Unfortunately, PostgreSQL rejects any attempt to use the connection until a ROLLBACK is executed.

Now, there are three cases that I don't know how to distinguish when I translate the exception:

* There is no transaction in progress and the connection is usable as is.
* I'm in a transaction and the connection is not usable until ROLLBACK.
* I'm in a nested transaction and the connection is not usable until ROLLBACK TO SAVEPOINT or ROLLBACK.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm currently trying to figure out a way to get at any
information from PostgreSQL after an error occurred. For a
uniqueness violation, I can get the columns involved, but I need a
usable connection. Unfortunately, PostgreSQL rejects any attempt to
use the connection until a ROLLBACK is executed.&lt;/p&gt;
&lt;p&gt;Now, there are three cases that I don't know how to distinguish
when I translate the exception:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is no transaction in progress and the connection is
usable as is.&lt;/li&gt;
&lt;li&gt;I'm in a transaction and the connection is not usable until
ROLLBACK.&lt;/li&gt;
&lt;li&gt;I'm in a nested transaction and the connection is not usable
until ROLLBACK TO SAVEPOINT or ROLLBACK.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-27T20:07:53+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-27T20:07:57+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">13</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Fundamentally I'm uncomfortable doing anything that relies on issuing
subsequent queries.  If the API doesnt let you extract the relevant
information, then just make sure that the error message and the like
are available (as they are with a chained exception).

If it turns out people can figure out a reliable way to figure out
which constraint / column caused the error, we can roll that in at a
later date.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fundamentally I'm uncomfortable doing anything that relies on
issuing subsequent queries. If the API doesnt let you extract the
relevant information, then just make sure that the error message
and the like are available (as they are with a chained
exception).&lt;/p&gt;
&lt;p&gt;If it turns out people can figure out a reliable way to figure
out which constraint / column caused the error, we can roll that in
at a later date.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-28T05:34:56+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-28T05:34:57+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">14</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Good point, then I'll leave the patch as it is. Is there anything still missing?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good point, then I'll leave the patch as it is. Is there
anything still missing?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-28T09:23:53+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-28T09:23:57+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">15</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>if we can get some +1s from people using older postgresql releases,
and/or the postgres gem instead of the pg gem.  Then I'm happy to
apply it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;if we can get some +1s from people using older postgresql
releases, and/or the postgres gem instead of the pg gem. Then I'm
happy to apply it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-28T09:36:25+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-04-28T09:36:26+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">16</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm getting one sqlite test failure from this patch:

  1) Failure:
test_uniqueness_violations_are_translated_to_specific_exception(AdapterTest)
    [./test/cases/adapter_test.rb:136:in `test_uniqueness_violations_are_translated_to_specific_exception'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
&lt;ActiveRecord::RecordNotUnique&gt; exception expected but was
Class: &lt;ActiveRecord::StatementInvalid&gt;
Message: &lt;&quot;SQLite3::SQLException: SQL logic error or missing database: INSERT INTO subscribers(nick) VALUES('me')&quot;&gt;
---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:212:in `log'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:157:in `execute_without_query_record'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:402:in `catch_schema_changes'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:157:in `execute_without_query_record'
./test/cases/helper.rb:37:in `execute'
./test/cases/adapter_test.rb:137:in `test_uniqueness_violations_are_translated_to_specific_exception'
./test/cases/adapter_test.rb:136:in `test_uniqueness_violations_are_translated_to_specific_exception'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run'
---------------

sqlite3-ruby 1.2.1, sqlite3 macport @3.6.11_0.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm getting one sqlite test failure from this patch:&lt;/p&gt;
&lt;p&gt;1) Failure:
test_uniqueness_violations_are_translated_to_specific_exception(AdapterTest)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[./test/cases/adapter_test.rb:136:in `test_uniqueness_violations_are_translated_to_specific_exception'
 ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
 ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;ActiveRecord::RecordNotUnique&amp;gt; exception expected but was
Class: &amp;lt;ActiveRecord::StatementInvalid&amp;gt; Message:
&amp;lt;&quot;SQLite3::SQLException: SQL logic error or missing database:
INSERT INTO subscribers(nick) VALUES('me')&quot;&amp;gt; ---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:212:in
&lt;code&gt;log'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:157:in&lt;/code&gt;execute_without_query_record'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:402:in
&lt;code&gt;catch_schema_changes'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:157:in&lt;/code&gt;execute_without_query_record'
./test/cases/helper.rb:37:in &lt;code&gt;execute'
./test/cases/adapter_test.rb:137:in&lt;/code&gt;test_uniqueness_violations_are_translated_to_specific_exception'
./test/cases/adapter_test.rb:136:in
&lt;code&gt;test_uniqueness_violations_are_translated_to_specific_exception'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in&lt;/code&gt;&lt;strong&gt;send&lt;/strong&gt;'&lt;/p&gt;
&lt;h2&gt;
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in
&lt;code&gt;run'&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;sqlite3-ruby 1.2.1, sqlite3 macport @3.6.11_0.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T02:59:41+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-05-11T02:59:43+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">17</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Will, I can't reproduce this problem. I've tried it on the 2-3-stable branch of a fresh git clone. Applied the patches and ran the tests for mysql, postgresql, sqlite3, and sqlite.

The drivers/gems I've been using are sqlite-ruby-2.2.3 and sqlite3-ruby-1.2.4.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Will, I can't reproduce this problem. I've tried it on the
2-3-stable branch of a fresh git clone. Applied the patches and ran
the tests for mysql, postgresql, sqlite3, and sqlite.&lt;/p&gt;
&lt;p&gt;The drivers/gems I've been using are sqlite-ruby-2.2.3 and
sqlite3-ruby-1.2.4.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T10:24:57+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-05-11T10:24:59+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">18</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1. Tested with postgres gem and PostgreSQL 8.3.

This and many other ActiveRecord tests don't pass with PostgreSQL 8.1  because of test/schema/postgresql_specific_schema.rb relying on DROP TABLE ... IF EXISTS which was introduced in 8.2.</body>
      <body-html>&lt;div&gt;&lt;ol&gt;
&lt;li&gt;Tested with postgres gem and PostgreSQL 8.3.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This and many other ActiveRecord tests don't pass with
PostgreSQL 8.1 because of test/schema/postgresql_specific_schema.rb
relying on DROP TABLE ... IF EXISTS which was introduced in
8.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-12T23:16:44+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-05-12T23:16:47+01:00</updated-at>
      <user-id type="integer">56789</user-id>
      <version type="integer">19</version>
      <user-name>Sava Chankov</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Can anyone reproduce the sqlite errors? I'm happy to apply this but am
a little worried by them</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can anyone reproduce the sqlite errors? I'm happy to apply this
but am&lt;br&gt;
a little worried by them&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-14T01:29:46+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-05-14T01:29:48+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">20</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>As Sava points out, ActiveRecord tests are not compatible with PostgreSQL versions older than 8.2. Am I right in taking this as evidence that these older versions are de facto unsupported as they are not covered by any quality assurance?

The sqlite problems appear to be non-reproducible. So, what's holding back this patch? I'm happy to put in some more work if that's what is needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As Sava points out, ActiveRecord tests are not compatible with
PostgreSQL versions older than 8.2. Am I right in taking this as
evidence that these older versions are de facto unsupported as they
are not covered by any quality assurance?&lt;/p&gt;
&lt;p&gt;The sqlite problems appear to be non-reproducible. So, what's
holding back this patch? I'm happy to put in some more work if
that's what is needed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-14T18:49:40+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-06-14T18:49:40+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">21</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The only thing holding this back now is me having a few free moments.

I'll take a look tomorrow.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The only thing holding this back now is me having a few free
moments.&lt;/p&gt;
&lt;p&gt;I'll take a look tomorrow.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-15T09:54:52+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-06-15T09:54:52+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">22</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [b5dfdc714fab7d2836e0a979ca88b4a17db9ec06]) Make sure the wrapped exceptions also have the original exception available.

[#2419 state:committed]
http://github.com/rails/rails/commit/b5dfdc714fab7d2836e0a979ca88b4a17db9ec06</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/b5dfdc714fab7d2836e0a979ca88b4a17db9ec06&quot;
title=
&quot;Changeset [b5dfdc714fab7d2836e0a979ca88b4a17db9ec06]&quot;&gt;[b5dfdc714fab7d2836e0a979ca88b4a17db9ec06]&lt;/a&gt;)
Make sure the wrapped exceptions also have the original exception
available.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/2419&quot; title=
&quot;Ticket #2419&quot;&gt;#2419&lt;/a&gt; state:committed] &lt;a href=
&quot;http://github.com/rails/rails/commit/b5dfdc714fab7d2836e0a979ca88b4a17db9ec06&quot;&gt;
http://github.com/rails/rails/commit/b5dfdc714fab7d2836e0a979ca88b4...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-26T06:03:26+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-06-26T06:03:27+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">23</version>
      <user-name>Repository</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>For anyone interested I've built on this to create a patch for Rails to handle db-level unique constraints gracefully, which has several advantages in many cases.  Ticket is #3486</body>
      <body-html>&lt;div&gt;&lt;p&gt;For anyone interested I've built on this to create a patch for
Rails to handle db-level unique constraints gracefully, which has
several advantages in many cases. Ticket is &lt;a href=
&quot;/projects/8994/tickets/3486&quot; title=&quot;Ticket #3486&quot;&gt;#3486&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-12T22:35:48+00:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-11-12T22:35:50+00:00</updated-at>
      <user-id type="integer">30933</user-id>
      <version type="integer">24</version>
      <user-name>Jordan Brough</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Also, is there a chance of applying the commits from ticket to to 2-3-stable? (talking about 4d614ec0429ce40c4784162c45ed06e125c0d7de, 605acee71391729ae82ba9012bc37f2f1716fb80, 9b39032925b68a724bd75174db642bc3d2f891fb)  They seem to apply cleanly for me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, is there a chance of applying the commits from ticket to
to 2-3-stable? (talking about
4d614ec0429ce40c4784162c45ed06e125c0d7de,
605acee71391729ae82ba9012bc37f2f1716fb80,
9b39032925b68a724bd75174db642bc3d2f891fb) They seem to apply
cleanly for me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-12T22:37:40+00:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-11-12T22:37:44+00:00</updated-at>
      <user-id type="integer">30933</user-id>
      <version type="integer">25</version>
      <user-name>Jordan Brough</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I am rails newbie, I tried installing your patch using 
scripts/plugin install &lt;name&gt;
and used your code to test, but throws error. Please help</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am rails newbie, I tried installing your patch using&lt;br&gt;
scripts/plugin install&lt;br&gt;
and used your code to test, but throws error. Please help&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-19T07:14:22+00:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-11-19T07:14:25+00:00</updated-at>
      <user-id type="integer">77138</user-id>
      <version type="integer">26</version>
      <user-name>arzvi</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>arzvi - &quot;rails newbie&quot;s really shouldn't be trying to apply patches to the Rails core.  Just wait for the 3.0 release.</body>
      <body-html>&lt;div&gt;&lt;p&gt;arzvi - &quot;rails newbie&quot;s really shouldn't be trying to apply
patches to the Rails core. Just wait for the 3.0 release.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-19T18:26:57+00:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2009-11-19T18:26:59+00:00</updated-at>
      <user-id type="integer">47655</user-id>
      <version type="integer">27</version>
      <user-name>JasonKing</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@arzvi Here is a rollup of the patch based on Rails 2.3.5 release. Just drop this in your config/initializers.  It omits the tests but &quot;seems to work&quot; for me with mysql.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@arzvi Here is a rollup of the patch based on Rails 2.3.5
release. Just drop this in your config/initializers. It omits the
tests but &quot;seems to work&quot; for me with mysql.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-28T03:23:52+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2010-03-28T03:23:57+01:00</updated-at>
      <user-id type="integer">92422</user-id>
      <version type="integer">28</version>
      <user-name>tribalvibes</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:31+01:00</created-at>
      <creator-id type="integer">18670</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">2419</number>
      <permalink>raise-specific-exceptions-for-violated-database-constraints</permalink>
      <priority type="integer">4</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord constraint exception foreign-key patch uniqueness</tag>
      <title>[Patch] Raise specific exceptions for violated database constraints</title>
      <updated-at type="datetime">2010-10-15T23:01:31+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">29</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Michael Schuerig</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2419</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f2071750b8108647526b56696a51fadf64fc0b96</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-05T00:50:37+01:00</created-at>
      <filename>db-exceptions.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">108057</id>
      <size type="integer">8501</size>
      <uploader-id type="integer">18670</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/108057/db-exceptions.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>59cef3abb05efda12adc194790cb80f6a1a176f3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-05T08:56:06+01:00</created-at>
      <filename>db-exceptions.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">108070</id>
      <size type="integer">12723</size>
      <uploader-id type="integer">18670</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/108070/db-exceptions.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>5cca53d2e11447597993e82ba13c85e95e7eda56</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2010-03-28T03:23:52+01:00</created-at>
      <filename>add_record_not_unique_exception.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">462466</id>
      <size type="integer">3060</size>
      <uploader-id type="integer">92422</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/462466/add_record_not_unique_exception.rb</url>
    </attachment>
  </attachments>
</ticket>
