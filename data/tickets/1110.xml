<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:15+00:00</created-at>
  <creator-id type="integer">10460</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1110</number>
  <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
  <priority type="integer">528</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
  <updated-at type="datetime">2011-02-17T06:48:15+00:00</updated-at>
  <user-id type="integer">94458</user-id>
  <version type="integer">18</version>
  <user-name>Jeff Kreeftmeijer</user-name>
  <creator-name>Will Bryant</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>If you have a has_many defined with :includes:

@@@
class Author &lt; ActiveRecord::Base
  has_many :posts_with_comments, :include =&gt; :comments, :class_name =&gt; &quot;Post&quot;
end
@@@

And then you load that with a find that includes the same thing:

@@@ ruby
Author.find(author_id, :include =&gt; {:posts_with_comments =&gt; :comments})
@@@

(or {:posts_with_comments =&gt; {:comments =&gt; :something_else}}, for example)

Then in 2.1.x/edge you'll get two copies of each Comment record in the author's post_with_comments.comments collection.  This is a regression from 2.0 caused by the way the new preloading code works down through the associations.

Attached file includes a testcase demonstrating the problem.</original-body>
  <latest-body>If you have a has_many defined with :includes:

@@@
class Author &lt; ActiveRecord::Base
  has_many :posts_with_comments, :include =&gt; :comments, :class_name =&gt; &quot;Post&quot;
end
@@@

And then you load that with a find that includes the same thing:

@@@ ruby
Author.find(author_id, :include =&gt; {:posts_with_comments =&gt; :comments})
@@@

(or {:posts_with_comments =&gt; {:comments =&gt; :something_else}}, for example)

Then in 2.1.x/edge you'll get two copies of each Comment record in the author's post_with_comments.comments collection.  This is a regression from 2.0 caused by the way the new preloading code works down through the associations.

Attached file includes a testcase demonstrating the problem.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If you have a has_many defined with :includes:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Author &amp;lt; ActiveRecord::Base
  has_many :posts_with_comments, :include =&amp;gt; :comments, :class_name =&amp;gt; &amp;quot;Post&amp;quot;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then you load that with a find that includes the same
thing:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Author.find(author_id, :include =&amp;gt; {:posts_with_comments =&amp;gt; :comments})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(or {:posts_with_comments =&amp;gt; {:comments =&amp;gt;
:something_else}}, for example)&lt;/p&gt;
&lt;p&gt;Then in 2.1.x/edge you'll get two copies of each Comment record
in the author's post_with_comments.comments collection. This is a
regression from 2.0 caused by the way the new preloading code works
down through the associations.&lt;/p&gt;
&lt;p&gt;Attached file includes a testcase demonstrating the problem.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you have a has_many defined with :includes:

@@@
class Author &lt; ActiveRecord::Base
  has_many :posts_with_comments, :include =&gt; :comments, :class_name =&gt; &quot;Post&quot;
end
@@@

And then you load that with a find that includes the same thing:

@@@ ruby
Author.find(author_id, :include =&gt; {:posts_with_comments =&gt; :comments})
@@@

(or {:posts_with_comments =&gt; {:comments =&gt; :something_else}}, for example)

Then in 2.1.x/edge you'll get two copies of each Comment record in the author's post_with_comments.comments collection.  This is a regression from 2.0 caused by the way the new preloading code works down through the associations.

Attached file includes a testcase demonstrating the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you have a has_many defined with :includes:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Author &amp;lt; ActiveRecord::Base
  has_many :posts_with_comments, :include =&amp;gt; :comments, :class_name =&amp;gt; &amp;quot;Post&amp;quot;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then you load that with a find that includes the same
thing:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Author.find(author_id, :include =&amp;gt; {:posts_with_comments =&amp;gt; :comments})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(or {:posts_with_comments =&amp;gt; {:comments =&amp;gt;
:something_else}}, for example)&lt;/p&gt;
&lt;p&gt;Then in 2.1.x/edge you'll get two copies of each Comment record
in the author's post_with_comments.comments collection. This is a
regression from 2.0 caused by the way the new preloading code works
down through the associations.&lt;/p&gt;
&lt;p&gt;Attached file includes a testcase demonstrating the problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-25T12:50:41+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-25T12:50:43+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">1</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Patch and tests attached for has_many, has_one, and belongs_to.  HABTM and has_many :though have unrelated issues so no change needed there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch and tests attached for has_many, has_one, and belongs_to.
HABTM and has_many :though have unrelated issues so no change
needed there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-27T04:54:00+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-27T04:54:05+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">2</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I can't find fred's account in lighthouse (i.e. it doesn't exist).

But do you know if he made any progress with this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can't find fred's account in lighthouse (i.e. it doesn't
exist).&lt;/p&gt;
&lt;p&gt;But do you know if he made any progress with this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T16:52:00+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;2.1\&quot; activerecord bug eager_loading edge has_many&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-29T16:52:04+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fred as in Frederick Cheung from the mailing list?  AFAIK he hasn't had this issue himself.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fred as in Frederick Cheung from the mailing list? AFAIK he
hasn't had this issue himself.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T09:01:57+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-30T09:01:59+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">4</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah, he wrote the preloading code and is probably the best person to fix this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, he wrote the preloading code and is probably the best
person to fix this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T09:45:32+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-30T09:45:36+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">5</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>but fundamentally, why are you doing that duplicate :including anyway :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;but fundamentally, why are you doing that duplicate :including
anyway :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T09:45:48+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-30T09:45:52+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Righto, I'll drop Fred an email.

I'm not doing it, but my clients are :).

They wanted the association to always load the child association, hence the :include on the has_many declaration itself.  But in one part of the app they wanted not just that child but a grandchild, so they had a two-deep :include on their find call, which hits this problem.

(It also showed up in another place where I am guessing that originally people were putting in includes on the find calls, and later on someone else decided to make that global and put it on the association - but didn't remove it from the find calls.)

It's something that worked just fine with Rails 2.0, and broke when they tried to upgrade to Rails 2.1, and it definitely isn't expected behaviour, so I'm hoping we can get the fix included...  Will see what Fred thinks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Righto, I'll drop Fred an email.&lt;/p&gt;
&lt;p&gt;I'm not doing it, but my clients are :).&lt;/p&gt;
&lt;p&gt;They wanted the association to always load the child
association, hence the :include on the has_many declaration itself.
But in one part of the app they wanted not just that child but a
grandchild, so they had a two-deep :include on their find call,
which hits this problem.&lt;/p&gt;
&lt;p&gt;(It also showed up in another place where I am guessing that
originally people were putting in includes on the find calls, and
later on someone else decided to make that global and put it on the
association - but didn't remove it from the find calls.)&lt;/p&gt;
&lt;p&gt;It's something that worked just fine with Rails 2.0, and broke
when they tried to upgrade to Rails 2.1, and it definitely isn't
expected behaviour, so I'm hoping we can get the fix included...
Will see what Fred thinks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T09:57:35+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-30T09:57:38+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">7</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah, a regression isn't cool.  

At the very least a way to work around this would be good to have documented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, a regression isn't cool.&lt;/p&gt;
&lt;p&gt;At the very least a way to work around this would be good to
have documented.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T10:01:24+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-30T10:01:27+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">8</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I do have an account here :-).

I've sort of run into this, albeit not in the context of an association with an :include option (I've been playing with the ability to add an :include at a later date, and doing that twice resulted in duplicate objects).

This approach looks fine to me ( presumably you would also need to implement the same check for preload_has_and_belongs_to_many_association) but if there is one thing I've learnt with this stuff is that it is hard to test well, so I'd double check you aren't introducing regressions. 

One case I'd check is whether the case of a belongs_to where the foo_id is NULL and that sort of edge case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I do have an account here :-).&lt;/p&gt;
&lt;p&gt;I've sort of run into this, albeit not in the context of an
association with an :include option (I've been playing with the
ability to add an :include at a later date, and doing that twice
resulted in duplicate objects).&lt;/p&gt;
&lt;p&gt;This approach looks fine to me ( presumably you would also need
to implement the same check for
preload_has_and_belongs_to_many_association) but if there is one
thing I've learnt with this stuff is that it is hard to test well,
so I'd double check you aren't introducing regressions.&lt;/p&gt;
&lt;p&gt;One case I'd check is whether the case of a belongs_to where the
foo_id is NULL and that sort of edge case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-30T10:24:34+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-09-30T10:24:36+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">9</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fred, no patch there for HABTMs as they don't work at all with includes defined on the association - the :select passed to find gets ignored due to the options[:include], so the the_parent_record_id gets wiped out.  Since that's an unrelated bug it shouldn't block inclusion of this patch.  (Does anyone use HABTMs now anyway?)

I've added a test for the belongs_to case you suggest.  There's quite a few regression tests elsewhere which all pass fine=

I've updated the attached patch to apply to current master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fred, no patch there for HABTMs as they don't work at all with
includes defined on the association - the :select passed to find
gets ignored due to the options[:include], so the
the_parent_record_id gets wiped out. Since that's an unrelated bug
it shouldn't block inclusion of this patch. (Does anyone use HABTMs
now anyway?)&lt;/p&gt;
&lt;p&gt;I've added a test for the belongs_to case you suggest. There's
quite a few regression tests elsewhere which all pass fine=&lt;/p&gt;
&lt;p&gt;I've updated the attached patch to apply to current master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T23:13:07+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-10-06T23:13:13+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">10</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>All yes, I'm getting ahead of myself. There is http://rails.lighthouseapp.com/projects/8994/tickets/1104-references_eager_loaded_tables-should-search-tables-in-join-clauses which means that rails falls back to the join based include more often than it should and also my own patch 

http://rails.lighthouseapp.com/projects/8994/tickets/1060-allow-select-option-with-join-based-include which allows :select to work with :include (as much as it can do) which both make fixing habtm in this way possible, but I guess that has to wait until those paches worm there way in.

That aside, looks good to me?</body>
      <body-html>&lt;div&gt;&lt;p&gt;All yes, I'm getting ahead of myself. There is &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1104-references_eager_loaded_tables-should-search-tables-in-join-clauses&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt; which means that rails
falls back to the join based include more often than it should and
also my own patch&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1060-allow-select-option-with-join-based-include&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt; which allows :select to
work with :include (as much as it can do) which both make fixing
habtm in this way possible, but I guess that has to wait until
those paches worm there way in.&lt;/p&gt;
&lt;p&gt;That aside, looks good to me?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-07T00:00:37+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-10-07T00:00:41+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">11</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If Fred's #1060 patch gets merged, please merge this as well as my patch above - it fixes this #1110 bug for HABTM also.  (You can actually merge it safely even if the #1060 patch doesn't get applied, but the test case would fail due to the #1060 bug).</body>
      <body-html>&lt;div&gt;&lt;p&gt;If Fred's &lt;a href=&quot;/projects/8994/tickets/1060&quot; title=&quot;Ticket #1060&quot;&gt;#1060&lt;/a&gt; patch gets merged, please merge this as
well as my patch above - it fixes this &lt;a href=&quot;/projects/8994/tickets/1110&quot; title=&quot;Ticket #1110&quot;&gt;#1110&lt;/a&gt; bug
for HABTM also. (You can actually merge it safely even if the
&lt;a href=&quot;/projects/8994/tickets/1060&quot; title=&quot;Ticket #1060&quot;&gt;#1060&lt;/a&gt; patch doesn't get applied, but the test
case would fail due to the &lt;a href=&quot;/projects/8994/tickets/1060&quot; title=&quot;Ticket #1060&quot;&gt;#1060&lt;/a&gt; bug).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-07T01:56:56+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-10-07T01:56:58+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">12</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Hmm, I don't like #1060 for 2.2 just because it makes :select mean something different to what it currently does.

So what should we do with this one?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hmm, I don't like &lt;a href=&quot;/projects/8994/tickets/1060&quot; title=&quot;Ticket #1060&quot;&gt;#1060&lt;/a&gt; for 2.2 just because it makes :select mean
something different to what it currently does.&lt;/p&gt;
&lt;p&gt;So what should we do with this one?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-07T20:29:39+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-10-07T20:29:41+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">13</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>OK, just merge the first patch then, and leave out the additional-...diff (or at least, leave out the test case in it).</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, just merge the first patch then, and leave out the
additional-...diff (or at least, leave out the test case in
it).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-07T22:51:03+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1&quot; activerecord bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-10-07T22:51:08+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">14</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Is that one looking OK?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is that one looking OK?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-09T10:37:57+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;2.1\&quot; activerecord bug eager_loading edge has_many patch&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-10-09T10:37:59+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">15</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [4c05055487e149bfa4152c1b42f3519671ca22ac]) explicitly including child associations that are also included in the parent association definition should not result in double records in the collection/double loads (#1110)

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1110 state:committed]
http://github.com/rails/rails/commit/4c05055487e149bfa4152c1b42f3519671ca22ac</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [4c05055487e149bfa4152c1b42f3519671ca22ac]) explicitly
including child associations that are also included in the parent
association definition should not result in double records in the
collection/double loads (#1110)&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1110&quot; title=&quot;Ticket #1110&quot;&gt;#1110&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/4c05055487e149bfa4152c1b42f3519671ca22ac&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-12T17:42:11+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.1 activerecord bug bug eager_loading edge has_many patch</tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2008-10-12T17:42:17+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">16</version>
      <user-name>Repository</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T08:26:54+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 activerecord bug bug eager_loading edge has_many patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">528</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2010-11-08T08:26:57+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">18</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:21:43+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1110</number>
      <permalink>eager-loading-regression-for-find-with-includes-of-associations-already-included-by-the-parent-association</permalink>
      <priority type="integer">528</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>Eager loading regression for find with :includes of associations already :included by the parent association</title>
      <updated-at type="datetime">2011-02-17T06:48:15+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">19</version>
      <user-name>gfh</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1110</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>47de64d74a40cd80dcb69b96663934843a256637</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-06T23:13:07+01:00</created-at>
      <filename>fix_association_preload_double_include.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">51816</id>
      <size type="integer">7346</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/51816/fix_association_preload_double_include.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>4d43e6930ad44645df6ff1bc1f3e50326b594052</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-07T01:56:56+01:00</created-at>
      <filename>additional_habtm_patch__requires_1060_first.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">51858</id>
      <size type="integer">2929</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/51858/additional_habtm_patch__requires_1060_first.diff</url>
    </attachment>
  </attachments>
</ticket>
