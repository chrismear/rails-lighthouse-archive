<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:13+00:00</created-at>
  <creator-id type="integer">96378</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4464</number>
  <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>before_destroy callback has_many_through</tag>
  <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
  <updated-at type="datetime">2011-03-26T01:57:46+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">9</version>
  <user-name>bingbing</user-name>
  <creator-name>gsaravia</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
  <priority-name nil="true"></priority-name>
  <original-body>with the following setup:

@@@
class Foo &lt; ActiveRecord::Base

  has_many :bars, :through =&gt; :foo_bar_joins
  has_many :foo_bar_joins

end

class Bar &lt; ActiveRecord::Base

  has_many :foos, :through =&gt; :foo_bar_joins
  has_many :foo_bar_joins
  
end

class FooBarJoin &lt; ActiveRecord::Base

  belongs_to :foo
  belongs_to :bar
  
  before_destroy :i_am_called
  
  def i_am_called
    raise FooBarJoinBeforeDestroyCallbackIsCalled
  end
  
end

class FooBarJoinBeforeDestroyCallbackIsCalled &lt; StandardError 
end
@@@

Then the following test should pass:

@@@
describe FooBarJoin do
  
  it &quot;'s before_destroy callback should be called when it is called through Association's clear method&quot; do
    foo = Foo.create
    bar = Bar.create
    foo.bars &lt;&lt; bar
    #the next line should raise an error when it executes foobarjoin's before_destroy callback..
    foo.bars.clear.should raise_error(FooBarJoinBeforeDestroyCallbackIsCalled)
  end 
  
end
@@@

The before_destroy callback should also be called when foo.update_attributes removes instances of FooBarJoin

The above code is included as a rails app.</original-body>
  <latest-body>with the following setup:

@@@
class Foo &lt; ActiveRecord::Base

  has_many :bars, :through =&gt; :foo_bar_joins
  has_many :foo_bar_joins

end

class Bar &lt; ActiveRecord::Base

  has_many :foos, :through =&gt; :foo_bar_joins
  has_many :foo_bar_joins
  
end

class FooBarJoin &lt; ActiveRecord::Base

  belongs_to :foo
  belongs_to :bar
  
  before_destroy :i_am_called
  
  def i_am_called
    raise FooBarJoinBeforeDestroyCallbackIsCalled
  end
  
end

class FooBarJoinBeforeDestroyCallbackIsCalled &lt; StandardError 
end
@@@

Then the following test should pass:

@@@
describe FooBarJoin do
  
  it &quot;'s before_destroy callback should be called when it is called through Association's clear method&quot; do
    foo = Foo.create
    bar = Bar.create
    foo.bars &lt;&lt; bar
    #the next line should raise an error when it executes foobarjoin's before_destroy callback..
    foo.bars.clear.should raise_error(FooBarJoinBeforeDestroyCallbackIsCalled)
  end 
  
end
@@@

The before_destroy callback should also be called when foo.update_attributes removes instances of FooBarJoin

The above code is included as a rails app.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;with the following setup:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Foo &amp;lt; ActiveRecord::Base

  has_many :bars, :through =&amp;gt; :foo_bar_joins
  has_many :foo_bar_joins

end

class Bar &amp;lt; ActiveRecord::Base

  has_many :foos, :through =&amp;gt; :foo_bar_joins
  has_many :foo_bar_joins
  
end

class FooBarJoin &amp;lt; ActiveRecord::Base

  belongs_to :foo
  belongs_to :bar
  
  before_destroy :i_am_called
  
  def i_am_called
    raise FooBarJoinBeforeDestroyCallbackIsCalled
  end
  
end

class FooBarJoinBeforeDestroyCallbackIsCalled &amp;lt; StandardError 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then the following test should pass:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;describe FooBarJoin do
  
  it &quot;'s before_destroy callback should be called when it is called through Association's clear method&quot; do
    foo = Foo.create
    bar = Bar.create
    foo.bars &amp;lt;&amp;lt; bar
    #the next line should raise an error when it executes foobarjoin's before_destroy callback..
    foo.bars.clear.should raise_error(FooBarJoinBeforeDestroyCallbackIsCalled)
  end 
  
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The before_destroy callback should also be called when
foo.update_attributes removes instances of FooBarJoin&lt;/p&gt;
&lt;p&gt;The above code is included as a rails app.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>with the following setup:

@@@
class Foo &lt; ActiveRecord::Base

  has_many :bars, :through =&gt; :foo_bar_joins
  has_many :foo_bar_joins

end

class Bar &lt; ActiveRecord::Base

  has_many :foos, :through =&gt; :foo_bar_joins
  has_many :foo_bar_joins
  
end

class FooBarJoin &lt; ActiveRecord::Base

  belongs_to :foo
  belongs_to :bar
  
  before_destroy :i_am_called
  
  def i_am_called
    raise FooBarJoinBeforeDestroyCallbackIsCalled
  end
  
end

class FooBarJoinBeforeDestroyCallbackIsCalled &lt; StandardError 
end
@@@

Then the following test should pass:

@@@
describe FooBarJoin do
  
  it &quot;'s before_destroy callback should be called when it is called through Association's clear method&quot; do
    foo = Foo.create
    bar = Bar.create
    foo.bars &lt;&lt; bar
    #the next line should raise an error when it executes foobarjoin's before_destroy callback..
    foo.bars.clear.should raise_error(FooBarJoinBeforeDestroyCallbackIsCalled)
  end 
  
end
@@@

The before_destroy callback should also be called when foo.update_attributes removes instances of FooBarJoin

The above code is included as a rails app.</body>
      <body-html>&lt;div&gt;&lt;p&gt;with the following setup:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Foo &amp;lt; ActiveRecord::Base

  has_many :bars, :through =&amp;gt; :foo_bar_joins
  has_many :foo_bar_joins

end

class Bar &amp;lt; ActiveRecord::Base

  has_many :foos, :through =&amp;gt; :foo_bar_joins
  has_many :foo_bar_joins
  
end

class FooBarJoin &amp;lt; ActiveRecord::Base

  belongs_to :foo
  belongs_to :bar
  
  before_destroy :i_am_called
  
  def i_am_called
    raise FooBarJoinBeforeDestroyCallbackIsCalled
  end
  
end

class FooBarJoinBeforeDestroyCallbackIsCalled &amp;lt; StandardError 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then the following test should pass:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;describe FooBarJoin do
  
  it &quot;'s before_destroy callback should be called when it is called through Association's clear method&quot; do
    foo = Foo.create
    bar = Bar.create
    foo.bars &amp;lt;&amp;lt; bar
    #the next line should raise an error when it executes foobarjoin's before_destroy callback..
    foo.bars.clear.should raise_error(FooBarJoinBeforeDestroyCallbackIsCalled)
  end 
  
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The before_destroy callback should also be called when
foo.update_attributes removes instances of FooBarJoin&lt;/p&gt;
&lt;p&gt;The above code is included as a rails app.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-23T19:16:42+01:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2010-04-23T19:16:46+01:00</updated-at>
      <user-id type="integer">96378</user-id>
      <version type="integer">1</version>
      <user-name>gsaravia</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Verified this issue. I not sure whether Rails supports calling callbacks on join model for association methods.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Verified this issue. I not sure whether Rails supports calling
callbacks on join model for association methods.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-23T20:13:33+01:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2010-04-23T20:13:35+01:00</updated-at>
      <user-id type="integer">1300</user-id>
      <version type="integer">2</version>
      <user-name>Anil Wadghule</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>See #4386</body>
      <body-html>&lt;div&gt;&lt;p&gt;See &lt;a href=&quot;/projects/8994/tickets/4386&quot; title=
&quot;Ticket #4386&quot;&gt;#4386&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-01T23:17:21+01:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2010-05-01T23:17:23+01:00</updated-at>
      <user-id type="integer">10656</user-id>
      <version type="integer">3</version>
      <user-name>joost baaij</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:43:05+00:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2011-02-02T17:47:04+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:43:07+00:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2011-02-02T17:47:12+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T00:45:28+00:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2011-02-19T09:28:13+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">6</version>
      <user-name>mklo</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I recognized &lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;cheap louboutin shoes&lt;/a&gt; its social value. I saw its ordered happiness &lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;louboutin discount&lt;/a&gt; , but a fever in my blood asked for a wilder &lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;discount louboutin shoes&lt;/a&gt; course. There seemed to me something alarming in such &lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;cheap christian louboutin shoes&lt;/a&gt; Store easy delights. In my heart was desire to live &lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;discounted christian louboutin shoes On Sale&lt;/a&gt; more dangerously. I was not unprepared for jagged rocks and treacherous &lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;http://www.christianlouboutinpumps2u.com/&lt;/a&gt; .</body>
      <body-html>&lt;div&gt;&lt;p&gt;I recognized &lt;a href=
&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;cheap louboutin
shoes&lt;/a&gt; its social value. I saw its ordered happiness &lt;a href=
&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;louboutin discount&lt;/a&gt;
, but a fever in my blood asked for a wilder &lt;a href=
&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;discount louboutin
shoes&lt;/a&gt; course. There seemed to me something alarming in such
&lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;cheap christian
louboutin shoes&lt;/a&gt; Store easy delights. In my heart was desire to
live &lt;a href=&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;discounted
christian louboutin shoes On Sale&lt;/a&gt; more dangerously. I was not
unprepared for jagged rocks and treacherous &lt;a href=
&quot;http://www.christianlouboutinpumps2u.com/&quot;&gt;http://www.christianlouboutinpumps2u.com/&lt;/a&gt;
.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:12:06+00:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2011-02-19T09:27:37+00:00</updated-at>
      <user-id type="integer">137764</user-id>
      <version type="integer">7</version>
      <user-name>afra89</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The &lt;a href=&quot;http://www.christianlouboutins2u.com/&quot;&gt;discount christian  louboutin pumps&lt;/a&gt; happiest people don't necessarily have the best &lt;a href=&quot;http://www.christianlouboutins2u.com/&quot;&gt;christian louboutin shoes&lt;/a&gt; of everything. They just make the most of everything that comes along their &lt;a href=&quot;http://www.christianlouboutins2u.com/&quot;&gt;christian louboutin sale&lt;/a&gt; way. Happiness are for those who cry, those who have searched, and those who have tried because only &lt;a href=&quot;http://www.christianlouboutins2u.com/Christian-Louboutin-/Christian-Louboutin-Boots/&quot; title=&quot;Christian Louboutin Boots&quot;&gt;christian louboutin boots&lt;/a&gt; they can appreciate the importance of people who have touched their &lt;a href=&quot;http://www.christianlouboutins2u.com/&quot;&gt;http://www.christianlouboutins2u.com/&lt;/a&gt; lives.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The &lt;a href=&quot;http://www.christianlouboutins2u.com/&quot;&gt;discount
christian louboutin pumps&lt;/a&gt; happiest people don't necessarily
have the best &lt;a href=
&quot;http://www.christianlouboutins2u.com/&quot;&gt;christian louboutin
shoes&lt;/a&gt; of everything. They just make the most of everything that
comes along their &lt;a href=
&quot;http://www.christianlouboutins2u.com/&quot;&gt;christian louboutin
sale&lt;/a&gt; way. Happiness are for those who cry, those who have
searched, and those who have tried because only &lt;a href=
&quot;http://www.christianlouboutins2u.com/Christian-Louboutin-/Christian-Louboutin-Boots/&quot;
title=&quot;Christian Louboutin Boots&quot;&gt;christian louboutin boots&lt;/a&gt;
they can appreciate the importance of people who have touched their
&lt;a href=
&quot;http://www.christianlouboutins2u.com/&quot;&gt;http://www.christianlouboutins2u.com/&lt;/a&gt;
lives.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:12:48+00:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2011-02-19T09:27:37+00:00</updated-at>
      <user-id type="integer">137764</user-id>
      <version type="integer">8</version>
      <user-name>afra89</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega watch&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega
watch&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T01:39:29+00:00</created-at>
      <creator-id type="integer">96378</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4464</number>
      <permalink>instances-of-a-join-model-should-have-their-before_destroy-callbacks-called-when-destroyed-through-instanceothersclear-or-instanceupdate_attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>before_destroy callback has_many_through</tag>
      <title>instances of a Join Model should have their before_destroy callbacks called when destroyed through @instance.others.clear or @instance.update_attributes</title>
      <updated-at type="datetime">2011-03-26T01:57:46+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">9</version>
      <user-name>bingbing</user-name>
      <creator-name>gsaravia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4464</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>12cf80dcec6000ed80f53aa61393bced8a3e8dfc</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2010-04-23T19:16:42+01:00</created-at>
      <filename>rails_ticket_demo_app.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">495086</id>
      <size type="integer">503782</size>
      <uploader-id type="integer">96378</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/495086/rails_ticket_demo_app.zip</url>
    </attachment>
  </attachments>
</ticket>
