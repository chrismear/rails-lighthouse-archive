<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-03T09:15:58+01:00</created-at>
  <creator-id type="integer">19120</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">98</number>
  <permalink>patch-h-method-is-not-aliased-properly</permalink>
  <priority type="integer">10794</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>actionpack patch</tag>
  <title>h method is not aliased properly</title>
  <updated-at type="datetime">2010-06-01T02:00:28+01:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">9</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Aamer</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
  <priority-name nil="true"></priority-name>
  <original-body>When you call html_escape(string) in a template, it will call the one defined in lib/action_view/template_handlers/erb.rb.

However, if you call h instead of html_escape, it will call the original method defined in the Ruby ERB library, not the one defined in action_view.

This should be properly aliased to make the two method calls identical. Here is a patch you can apply to lib/action_view/template_handlers/erb.rb if you are using actionpack 2.02:

--- erb.rb      2008-05-02 16:43:54.000000000 -0700
+++ erb_patched.rb      2008-05-02 16:44:07.000000000 -0700
@@ -7,6 +7,8 @@ class ERB
     def html_escape(s)
       s.to_s.gsub(/[&amp;&quot;&gt;&lt;]/) { |special| HTML_ESCAPE[special] }
     end
+
+    alias_method :h, :html_escape
   end
 end</original-body>
  <latest-body>When you call html_escape(string) in a template, it will call the one defined in lib/action_view/template_handlers/erb.rb.

However, if you call h instead of html_escape, it will call the original method defined in the Ruby ERB library, not the one defined in action_view.

This should be properly aliased to make the two method calls identical. Here is a patch you can apply to lib/action_view/template_handlers/erb.rb if you are using actionpack 2.02:

--- erb.rb      2008-05-02 16:43:54.000000000 -0700
+++ erb_patched.rb      2008-05-02 16:44:07.000000000 -0700
@@ -7,6 +7,8 @@ class ERB
     def html_escape(s)
       s.to_s.gsub(/[&amp;&quot;&gt;&lt;]/) { |special| HTML_ESCAPE[special] }
     end
+
+    alias_method :h, :html_escape
   end
 end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When you call html_escape(string) in a template, it will call the one defined in lib/action_view/template_handlers/erb.rb.
&lt;/p&gt;&lt;p&gt;
However, if you call h instead of html_escape, it will call the original method defined in the Ruby ERB library, not the one defined in action_view.
&lt;/p&gt;&lt;p&gt;
This should be properly aliased to make the two method calls identical. Here is a patch you can apply to lib/action_view/template_handlers/erb.rb if you are using actionpack 2.02:
&lt;/p&gt;&lt;p&gt;
--- erb.rb      2008-05-02 16:43:54.000000000 -0700
&lt;/p&gt;&lt;p&gt;
+++ erb_patched.rb      2008-05-02 16:44:07.000000000 -0700
&lt;/p&gt;&lt;p&gt;
@@ -7,6 +7,8 @@ class ERB
&lt;/p&gt;&lt;p&gt;
def html_escape(s)
&lt;/p&gt;&lt;p&gt;
s.to_s.gsub(/[&amp;&quot;&gt;&amp;lt;]/) { |special| HTML_ESCAPE[special] }
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
+
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
   alias_method :h, :html_escape
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When you call html_escape(string) in a template, it will call the one defined in lib/action_view/template_handlers/erb.rb.

However, if you call h instead of html_escape, it will call the original method defined in the Ruby ERB library, not the one defined in action_view.  This should be properly aliased to make the two method calls identical.

The attached patch is a quick fix I made for actionpack 2.0.2; you can apply it to lib/action_view/template_handlers/erb.rb.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When you call html_escape(string) in a template, it will call the one defined in lib/action_view/template_handlers/erb.rb.
&lt;/p&gt;&lt;p&gt;
However, if you call h instead of html_escape, it will call the original method defined in the Ruby ERB library, not the one defined in action_view.  This should be properly aliased to make the two method calls identical.
&lt;/p&gt;&lt;p&gt;
The attached patch is a quick fix I made for actionpack 2.0.2; you can apply it to lib/action_view/template_handlers/erb.rb.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-03T09:20:58+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] h method is not aliased properly</title>
      <updated-at type="datetime">2008-05-03T09:20:58+01:00</updated-at>
      <user-id type="integer">19120</user-id>
      <version type="integer">1</version>
      <user-name>Aamer</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(Attaching patch)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(Attaching patch)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-03T09:21:43+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] h method is not aliased properly</title>
      <updated-at type="datetime">2008-05-03T09:21:43+01:00</updated-at>
      <user-id type="integer">19120</user-id>
      <version type="integer">2</version>
      <user-name>Aamer</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Could you please add tests for cases that are affected by this behavior ?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Could you please add tests for cases that are affected by this behavior ?
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-11T19:16:16+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:title: &quot;[PATCH] h method is not aliased properly&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>h method is not aliased properly</title>
      <updated-at type="datetime">2008-05-11T19:16:16+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The thing is that I cannot really write a test for it unless I redefine ERB::Util::HTML_ESCAPE, because there is no loss in functionality.  The only time the two methods would behave differently is if the value of this constant was changed to something else

... And I don't think it's conventional to redefine Rails constants for the purposes of testing (correct me if I'm wrong).


Even though there is no change in functionality, this is still a design flaw as far as I'm concerned.  Since html_escape is redefined by ActionView, then h should also be redefined since they are supposed to be the same method.  This is what my patch does by calling alias_method.

Alternatively, the Rails team could simply remove the fist few lines of action_view/template_handlers/erb.rb so that the html_escape method is not redefined by Rails.  The default method provided by ERB does the exact same thing (although with less &quot;pretty&quot; code) ... but what is the point of redefining a method if you're not changing any functionality?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The thing is that I cannot really write a test for it unless I redefine ERB::Util::HTML_ESCAPE, because there is no loss in functionality.  The only time the two methods would behave differently is if the value of this constant was changed to something else
&lt;/p&gt;&lt;p&gt;
... And I don't think it's conventional to redefine Rails constants for the purposes of testing (correct me if I'm wrong).
&lt;/p&gt;&lt;p&gt;
Even though there is no change in functionality, this is still a design flaw as far as I'm concerned.  Since html_escape is redefined by ActionView, then h should also be redefined since they are supposed to be the same method.  This is what my patch does by calling alias_method.
&lt;/p&gt;&lt;p&gt;
Alternatively, the Rails team could simply remove the fist few lines of action_view/template_handlers/erb.rb so that the html_escape method is not redefined by Rails.  The default method provided by ERB does the exact same thing (although with less &quot;pretty&quot; code) ... but what is the point of redefining a method if you're not changing any functionality?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-12T06:20:21+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>h method is not aliased properly</title>
      <updated-at type="datetime">2008-05-12T06:20:21+01:00</updated-at>
      <user-id type="integer">19120</user-id>
      <version type="integer">4</version>
      <user-name>Aamer</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;blockquote&gt;but what is the point of redefining a method if you're not changing any functionality?&lt;/blockquote&gt;

to improve performance</body>
      <body-html>&lt;div&gt;&lt;p&gt;
&lt;blockquote&gt;but what is the point of redefining a method if you're not changing any functionality?&lt;/blockquote&gt;
&lt;/p&gt;&lt;p&gt;
to improve performance
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-12T07:10:18+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>h method is not aliased properly</title>
      <updated-at type="datetime">2008-05-12T07:10:18+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fair enough.  In that case, I can't really write a performance-based test, so any other suggestions would be welcome.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Fair enough.  In that case, I can't really write a performance-based test, so any other suggestions would be welcome.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-12T07:16:51+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>h method is not aliased properly</title>
      <updated-at type="datetime">2008-05-12T07:16:51+01:00</updated-at>
      <user-id type="integer">19120</user-id>
      <version type="integer">6</version>
      <user-name>Aamer</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-22T08:55:29+00:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack patch</tag>
      <title>h method is not aliased properly</title>
      <updated-at type="datetime">2010-01-22T08:55:33+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">7</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Something got broken here recently (with 2.3.8).  The h method appears to no longer escape, but calling html_escape does.  This started showing up in 2.3.8, but was not an issue in 2.3.5</body>
      <body-html>&lt;div&gt;&lt;p&gt;Something got broken here recently (with 2.3.8). The h method
appears to no longer escape, but calling html_escape does. This
started showing up in 2.3.8, but was not an issue in 2.3.5&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-31T22:05:24+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack patch</tag>
      <title>h method is not aliased properly</title>
      <updated-at type="datetime">2010-05-31T22:05:31+01:00</updated-at>
      <user-id type="integer">25923</user-id>
      <version type="integer">8</version>
      <user-name>Wolfram Arnold</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Wolfram, can you provide a test case or show the code you are trying please?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Wolfram, can you provide a test case or show the code you are
trying please?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-01T02:00:19+01:00</created-at>
      <creator-id type="integer">19120</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">98</number>
      <permalink>patch-h-method-is-not-aliased-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack patch</tag>
      <title>h method is not aliased properly</title>
      <updated-at type="datetime">2010-06-01T02:00:28+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Aamer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/98</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>988692a4cb01134429cf45b394e16096055c9ab1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-03T09:21:43+01:00</created-at>
      <filename>erb_rails_2_0_2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21329</id>
      <size type="integer">294</size>
      <uploader-id type="integer">19120</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21329/erb_rails_2_0_2.diff</url>
    </attachment>
  </attachments>
</ticket>
