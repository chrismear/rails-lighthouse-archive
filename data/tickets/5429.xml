<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-04-22T06:48:04+01:00</created-at>
  <creator-id type="integer">112651</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5429</number>
  <permalink>error-in-activerecordbase-compute_type-method</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>It's hard to understand errors generated by ActiveRecord::Base compute_type method</title>
  <updated-at type="datetime">2011-04-22T06:48:04+01:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">4</version>
  <user-name>Andrew White</user-name>
  <creator-name>Ivan Konyshev</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5429</url>
  <priority-name>Low</priority-name>
  <original-body>Strange exception occurs when try to build association in helper

f.object.send(association).build , where f.object type is Category and association is :rating_criterias

got error:
uninitialized constant Category::RatingCriteria
trace: 
activerecord (3.0.0.rc) lib/active_record/base.rb:1139:in `compute_type'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in `send'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in `klass'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:205:in `quoted_table_name'
activerecord (3.0.0.rc) lib/active_record/associations/has_many_association.rb:102:in `construct_sql'
activerecord (3.0.0.rc) lib/active_record/associations/association_collection.rb:24:in `initialize'
activerecord (3.0.0.rc) lib/active_record/associations/has_many_association.rb:11:in `initialize'
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in `new'
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in `rating_criterias'
app/helpers/application_helper.rb:7:in `link_to_add_fields'

After some investigation I found this:
activerecord-3.0.0.rc/lib/active_record/base.rb in compute_type method:
name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }

if name has no &quot;::&quot; then &quot;name::type_name&quot; is added to candidates instead of type_name itself</original-body>
  <latest-body>Strange exception occurs when try to build association in helper

f.object.send(association).build , where f.object type is Category and association is :rating_criterias

got error:
uninitialized constant Category::RatingCriteria
trace: 
activerecord (3.0.0.rc) lib/active_record/base.rb:1139:in `compute_type'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in `send'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in `klass'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:205:in `quoted_table_name'
activerecord (3.0.0.rc) lib/active_record/associations/has_many_association.rb:102:in `construct_sql'
activerecord (3.0.0.rc) lib/active_record/associations/association_collection.rb:24:in `initialize'
activerecord (3.0.0.rc) lib/active_record/associations/has_many_association.rb:11:in `initialize'
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in `new'
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in `rating_criterias'
app/helpers/application_helper.rb:7:in `link_to_add_fields'

After some investigation I found this:
activerecord-3.0.0.rc/lib/active_record/base.rb in compute_type method:
name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }

if name has no &quot;::&quot; then &quot;name::type_name&quot; is added to candidates instead of type_name itself</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Strange exception occurs when try to build association in
helper&lt;/p&gt;
&lt;p&gt;f.object.send(association).build , where f.object type is
Category and association is :rating_criterias&lt;/p&gt;
&lt;p&gt;got error:&lt;br&gt;
uninitialized constant Category::RatingCriteria&lt;br&gt;
trace:&lt;br&gt;
activerecord (3.0.0.rc) lib/active_record/base.rb:1139:in
&lt;code&gt;compute_type'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/reflection.rb:169:in&lt;/code&gt;send'&lt;br&gt;
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in
&lt;code&gt;klass'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/reflection.rb:205:in&lt;/code&gt;quoted_table_name'&lt;br&gt;
activerecord (3.0.0.rc)
lib/active_record/associations/has_many_association.rb:102:in
&lt;code&gt;construct_sql'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/associations/association_collection.rb:24:in&lt;/code&gt;initialize'&lt;br&gt;
activerecord (3.0.0.rc)
lib/active_record/associations/has_many_association.rb:11:in
&lt;code&gt;initialize'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/associations.rb:1405:in&lt;/code&gt;new'&lt;br&gt;
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in
&lt;code&gt;rating_criterias'&amp;lt;br/&amp;gt;
app/helpers/application_helper.rb:7:in&lt;/code&gt;link_to_add_fields'&lt;/p&gt;
&lt;p&gt;After some investigation I found this:&lt;br&gt;
activerecord-3.0.0.rc/lib/active_record/base.rb in compute_type
method:&lt;br&gt;
name.scan(/::|$/) { candidates.unshift &quot;#{$&lt;code&gt;}::#{type_name}&quot;
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;if name has no &quot;::&quot; then &quot;name::type_name&quot; is added to
candidates instead of type_name itself&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Strange exception occurs when try to build association in helper

f.object.send(association).build , where f.object type is Category and association is :rating_criterias

got error:
uninitialized constant Category::RatingCriteria
trace: 
activerecord (3.0.0.rc) lib/active_record/base.rb:1139:in `compute_type'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in `send'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in `klass'
activerecord (3.0.0.rc) lib/active_record/reflection.rb:205:in `quoted_table_name'
activerecord (3.0.0.rc) lib/active_record/associations/has_many_association.rb:102:in `construct_sql'
activerecord (3.0.0.rc) lib/active_record/associations/association_collection.rb:24:in `initialize'
activerecord (3.0.0.rc) lib/active_record/associations/has_many_association.rb:11:in `initialize'
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in `new'
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in `rating_criterias'
app/helpers/application_helper.rb:7:in `link_to_add_fields'

After some investigation I found this:
activerecord-3.0.0.rc/lib/active_record/base.rb in compute_type method:
name.scan(/::|$/) { candidates.unshift &quot;#{$`}::#{type_name}&quot; }

if name has no &quot;::&quot; then &quot;name::type_name&quot; is added to candidates instead of type_name itself</body>
      <body-html>&lt;div&gt;&lt;p&gt;Strange exception occurs when try to build association in
helper&lt;/p&gt;
&lt;p&gt;f.object.send(association).build , where f.object type is
Category and association is :rating_criterias&lt;/p&gt;
&lt;p&gt;got error:&lt;br&gt;
uninitialized constant Category::RatingCriteria&lt;br&gt;
trace:&lt;br&gt;
activerecord (3.0.0.rc) lib/active_record/base.rb:1139:in
&lt;code&gt;compute_type'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/reflection.rb:169:in&lt;/code&gt;send'&lt;br&gt;
activerecord (3.0.0.rc) lib/active_record/reflection.rb:169:in
&lt;code&gt;klass'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/reflection.rb:205:in&lt;/code&gt;quoted_table_name'&lt;br&gt;
activerecord (3.0.0.rc)
lib/active_record/associations/has_many_association.rb:102:in
&lt;code&gt;construct_sql'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/associations/association_collection.rb:24:in&lt;/code&gt;initialize'&lt;br&gt;
activerecord (3.0.0.rc)
lib/active_record/associations/has_many_association.rb:11:in
&lt;code&gt;initialize'&amp;lt;br/&amp;gt; activerecord (3.0.0.rc)
lib/active_record/associations.rb:1405:in&lt;/code&gt;new'&lt;br&gt;
activerecord (3.0.0.rc) lib/active_record/associations.rb:1405:in
&lt;code&gt;rating_criterias'&amp;lt;br/&amp;gt;
app/helpers/application_helper.rb:7:in&lt;/code&gt;link_to_add_fields'&lt;/p&gt;
&lt;p&gt;After some investigation I found this:&lt;br&gt;
activerecord-3.0.0.rc/lib/active_record/base.rb in compute_type
method:&lt;br&gt;
name.scan(/::|$/) { candidates.unshift &quot;#{$&lt;code&gt;}::#{type_name}&quot;
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;if name has no &quot;::&quot; then &quot;name::type_name&quot; is added to
candidates instead of type_name itself&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T00:35:28+01:00</created-at>
      <creator-id type="integer">112651</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5429</number>
      <permalink>error-in-activerecordbase-compute_type-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Error in ActiveRecord::Base compute_type method</title>
      <updated-at type="datetime">2010-08-23T00:35:30+01:00</updated-at>
      <user-id type="integer">112651</user-id>
      <version type="integer">1</version>
      <user-name>Ivan Konyshev</user-name>
      <creator-name>Ivan Konyshev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5429</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After all it was mistake in my RatingCriteria definition.. Error message is completely misunderstandable. 
ArgumentError was swallowed and uninitialized constant error generated with name of first candidate.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After all it was mistake in my RatingCriteria definition.. Error
message is completely misunderstandable.&lt;br&gt;
ArgumentError was swallowed and uninitialized constant error
generated with name of first candidate.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T01:16:55+01:00</created-at>
      <creator-id type="integer">112651</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5429</number>
      <permalink>error-in-activerecordbase-compute_type-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Error in ActiveRecord::Base compute_type method</title>
      <updated-at type="datetime">2010-08-23T01:16:56+01:00</updated-at>
      <user-id type="integer">112651</user-id>
      <version type="integer">2</version>
      <user-name>Ivan Konyshev</user-name>
      <creator-name>Ivan Konyshev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5429</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T01:18:04+01:00</created-at>
      <creator-id type="integer">112651</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Error in ActiveRecord::Base compute_type method
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5429</number>
      <permalink>error-in-activerecordbase-compute_type-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>It's hard to understand errors generated by ActiveRecord::Base compute_type method</title>
      <updated-at type="datetime">2010-08-23T01:18:06+01:00</updated-at>
      <user-id type="integer">112651</user-id>
      <version type="integer">3</version>
      <user-name>Ivan Konyshev</user-name>
      <creator-name>Ivan Konyshev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5429</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The error message is the same as you would get with pure ruby:

@@@ ruby
#!/usr/bin/ruby

class Category
  def build
    RatingCriteria.new
  end
end

Category.new.build
&gt;&gt; uninitialized constant Category::RatingCriteria (NameError)
@@@

The rescue for ArgumentError is there because constantize can raise one in certain circumstances but the correct class will eventually be found. The error message can't specifically refer to setting :class_name for an association as it's used elsewhere as well (e.g. STI).</body>
      <body-html>&lt;div&gt;&lt;p&gt;The error message is the same as you would get with pure
ruby:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;#!/usr/bin/ruby

class Category
  def build
    RatingCriteria.new
  end
end

Category.new.build
&amp;gt;&amp;gt; uninitialized constant Category::RatingCriteria (NameError)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The rescue for ArgumentError is there because constantize can
raise one in certain circumstances but the correct class will
eventually be found. The error message can't specifically refer to
setting :class_name for an association as it's used elsewhere as
well (e.g. STI).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-23T12:35:29+01:00</created-at>
      <creator-id type="integer">112651</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5429</number>
      <permalink>error-in-activerecordbase-compute_type-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>It's hard to understand errors generated by ActiveRecord::Base compute_type method</title>
      <updated-at type="datetime">2010-08-23T12:35:31+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Ivan Konyshev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5429</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>PDF to JPG Converter is a more efficient pdf to jpg conversion software
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to image converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to tiff converter&lt;/a&gt;
which is able to convert pdf to jpg format with original output quality and fast conversion speed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;PDF to JPG Converter is a more efficient pdf to jpg conversion
software&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg
converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to
image converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to
tiff converter&lt;/a&gt;&lt;br&gt;
which is able to convert pdf to jpg format with original output
quality and fast conversion speed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-22T04:49:43+01:00</created-at>
      <creator-id type="integer">112651</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5429</number>
      <permalink>error-in-activerecordbase-compute_type-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>It's hard to understand errors generated by ActiveRecord::Base compute_type method</title>
      <updated-at type="datetime">2011-04-22T06:48:04+01:00</updated-at>
      <user-id type="integer">146598</user-id>
      <version type="integer">5</version>
      <user-name>machen</user-name>
      <creator-name>Ivan Konyshev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5429</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
