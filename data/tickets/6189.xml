<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-12-18T21:43:32+00:00</created-at>
  <creator-id type="integer">129495</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6189</number>
  <permalink>serialized-unicode-data-returning-as-ascii</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag nil="true"></tag>
  <title>Serialized Unicode data returning as ASCII</title>
  <updated-at type="datetime">2011-04-21T04:01:14+01:00</updated-at>
  <user-id type="integer">129495</user-id>
  <version type="integer">4</version>
  <user-name>William Jones</user-name>
  <creator-name>William Jones</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6189</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm running into a really strange phenomena after upgrading from Rails 2.3/Ruby 1.8 to Rails 3/Ruby 1.9. I'm using Postgres, through the pg gem 0.10.0.

When I make a call to a model's string or text fields that contain Unicode, it works correctly, and they are returned with an encoding of UTF-8.

However, I also make use of serialized Hashes in a number of models, and whenever I make a call to read their contents (which worked perfectly prior to the upgrade), I get the following puzzling behavior:

If the contents contains ASCII-only data, it returns as UTF-8 (correctly), and is properly displayed.
If the contents contains Unicode data, it returns as ASCII, and is displayed as escaped characters.

Mixing these two of course throws an encoding error.</original-body>
  <latest-body>I'm running into a really strange phenomena after upgrading from Rails 2.3/Ruby 1.8 to Rails 3/Ruby 1.9. I'm using Postgres, through the pg gem 0.10.0.

When I make a call to a model's string or text fields that contain Unicode, it works correctly, and they are returned with an encoding of UTF-8.

However, I also make use of serialized Hashes in a number of models, and whenever I make a call to read their contents (which worked perfectly prior to the upgrade), I get the following puzzling behavior:

If the contents contains ASCII-only data, it returns as UTF-8 (correctly), and is properly displayed.
If the contents contains Unicode data, it returns as ASCII, and is displayed as escaped characters.

Mixing these two of course throws an encoding error.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm running into a really strange phenomena after upgrading from
Rails 2.3/Ruby 1.8 to Rails 3/Ruby 1.9. I'm using Postgres, through
the pg gem 0.10.0.&lt;/p&gt;
&lt;p&gt;When I make a call to a model's string or text fields that
contain Unicode, it works correctly, and they are returned with an
encoding of UTF-8.&lt;/p&gt;
&lt;p&gt;However, I also make use of serialized Hashes in a number of
models, and whenever I make a call to read their contents (which
worked perfectly prior to the upgrade), I get the following
puzzling behavior:&lt;/p&gt;
&lt;p&gt;If the contents contains ASCII-only data, it returns as UTF-8
(correctly), and is properly displayed.&lt;br&gt;
If the contents contains Unicode data, it returns as ASCII, and is
displayed as escaped characters.&lt;/p&gt;
&lt;p&gt;Mixing these two of course throws an encoding error.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm running into a really strange phenomena after upgrading from Rails 2.3/Ruby 1.8 to Rails 3/Ruby 1.9. I'm using Postgres, through the pg gem 0.10.0.

When I make a call to a model's string or text fields that contain Unicode, it works correctly, and they are returned with an encoding of UTF-8.

However, I also make use of serialized Hashes in a number of models, and whenever I make a call to read their contents (which worked perfectly prior to the upgrade), I get the following puzzling behavior:

If the contents contains ASCII-only data, it returns as UTF-8 (correctly), and is properly displayed.
If the contents contains Unicode data, it returns as ASCII, and is displayed as escaped characters.

Mixing these two of course throws an encoding error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm running into a really strange phenomena after upgrading from
Rails 2.3/Ruby 1.8 to Rails 3/Ruby 1.9. I'm using Postgres, through
the pg gem 0.10.0.&lt;/p&gt;
&lt;p&gt;When I make a call to a model's string or text fields that
contain Unicode, it works correctly, and they are returned with an
encoding of UTF-8.&lt;/p&gt;
&lt;p&gt;However, I also make use of serialized Hashes in a number of
models, and whenever I make a call to read their contents (which
worked perfectly prior to the upgrade), I get the following
puzzling behavior:&lt;/p&gt;
&lt;p&gt;If the contents contains ASCII-only data, it returns as UTF-8
(correctly), and is properly displayed.&lt;br&gt;
If the contents contains Unicode data, it returns as ASCII, and is
displayed as escaped characters.&lt;/p&gt;
&lt;p&gt;Mixing these two of course throws an encoding error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-18T21:43:32+00:00</created-at>
      <creator-id type="integer">129495</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6189</number>
      <permalink>serialized-unicode-data-returning-as-ascii</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Serialized Unicode data returning as ASCII</title>
      <updated-at type="datetime">2010-12-18T21:43:34+00:00</updated-at>
      <user-id type="integer">129495</user-id>
      <version type="integer">1</version>
      <user-name>William Jones</user-name>
      <creator-name>William Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6189</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-19T00:00:11+00:00</created-at>
      <creator-id type="integer">129495</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6189</number>
      <permalink>serialized-unicode-data-returning-as-ascii</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Serialized Unicode data returning as ASCII</title>
      <updated-at type="datetime">2011-03-19T00:00:22+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>William Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6189</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-19T00:00:12+00:00</created-at>
      <creator-id type="integer">129495</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6189</number>
      <permalink>serialized-unicode-data-returning-as-ascii</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Serialized Unicode data returning as ASCII</title>
      <updated-at type="datetime">2011-03-19T00:00:17+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>William Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6189</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[state:open]

This problem is reproducible still on Ruby 1.9.2, Rails 3.0.7, pg 0.10.1. It should be very easy to confirm this problem's existence, simply create a serialized hash that contains Unicode.</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open]&lt;/p&gt;
&lt;p&gt;This problem is reproducible still on Ruby 1.9.2, Rails 3.0.7,
pg 0.10.1. It should be very easy to confirm this problem's
existence, simply create a serialized hash that contains
Unicode.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-21T04:01:09+01:00</created-at>
      <creator-id type="integer">129495</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6189</number>
      <permalink>serialized-unicode-data-returning-as-ascii</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Serialized Unicode data returning as ASCII</title>
      <updated-at type="datetime">2011-04-21T04:01:14+01:00</updated-at>
      <user-id type="integer">129495</user-id>
      <version type="integer">4</version>
      <user-name>William Jones</user-name>
      <creator-name>William Jones</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6189</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
