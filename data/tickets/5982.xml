<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-16T13:08:11+00:00</created-at>
  <creator-id type="integer">125281</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5982</number>
  <permalink>chaining-named_scopes-that-use-activerecordquerymethods-with-default_scope-doesnt-work</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>chaining named_scopes that use ActiveRecord::QueryMethods with default_scope doesnt work</title>
  <updated-at type="datetime">2011-02-17T00:01:14+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">3</version>
  <user-name>rails</user-name>
  <creator-name>shoreside</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5982</url>
  <priority-name nil="true"></priority-name>
  <original-body>When you use a named scope that uses one of the ActiveRecord::QueryMethods like order('foo ASC') on a model that has a default_scope defined that receives a lambda or a proc, the scope evaluates the lambda of the default_scope only on the first invocation and seems to cache the resulting query. The chaining works when using hash options instead of query methods, e.g. :order =&gt; 'foo ASC'.

We attached a patch that provides two test methods, one for the query methods and one for the hash options example to reproduce the error. We'd like to use default_scope for a multi-tenant solution. Thanks in advance for any help!

Best,
Christian</original-body>
  <latest-body>When you use a named scope that uses one of the ActiveRecord::QueryMethods like order('foo ASC') on a model that has a default_scope defined that receives a lambda or a proc, the scope evaluates the lambda of the default_scope only on the first invocation and seems to cache the resulting query. The chaining works when using hash options instead of query methods, e.g. :order =&gt; 'foo ASC'.

We attached a patch that provides two test methods, one for the query methods and one for the hash options example to reproduce the error. We'd like to use default_scope for a multi-tenant solution. Thanks in advance for any help!

Best,
Christian</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When you use a named scope that uses one of the
ActiveRecord::QueryMethods like order('foo ASC') on a model that
has a default_scope defined that receives a lambda or a proc, the
scope evaluates the lambda of the default_scope only on the first
invocation and seems to cache the resulting query. The chaining
works when using hash options instead of query methods, e.g. :order
=&amp;gt; 'foo ASC'.&lt;/p&gt;
&lt;p&gt;We attached a patch that provides two test methods, one for the
query methods and one for the hash options example to reproduce the
error. We'd like to use default_scope for a multi-tenant solution.
Thanks in advance for any help!&lt;/p&gt;
&lt;p&gt;Best,&lt;br&gt;
Christian&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When you use a named scope that uses one of the ActiveRecord::QueryMethods like order('foo ASC') on a model that has a default_scope defined that receives a lambda or a proc, the scope evaluates the lambda of the default_scope only on the first invocation and seems to cache the resulting query. The chaining works when using hash options instead of query methods, e.g. :order =&gt; 'foo ASC'.

We attached a patch that provides two test methods, one for the query methods and one for the hash options example to reproduce the error. We'd like to use default_scope for a multi-tenant solution. Thanks in advance for any help!

Best,
Christian</body>
      <body-html>&lt;div&gt;&lt;p&gt;When you use a named scope that uses one of the
ActiveRecord::QueryMethods like order('foo ASC') on a model that
has a default_scope defined that receives a lambda or a proc, the
scope evaluates the lambda of the default_scope only on the first
invocation and seems to cache the resulting query. The chaining
works when using hash options instead of query methods, e.g. :order
=&amp;gt; 'foo ASC'.&lt;/p&gt;
&lt;p&gt;We attached a patch that provides two test methods, one for the
query methods and one for the hash options example to reproduce the
error. We'd like to use default_scope for a multi-tenant solution.
Thanks in advance for any help!&lt;/p&gt;
&lt;p&gt;Best,&lt;br&gt;
Christian&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-16T13:08:11+00:00</created-at>
      <creator-id type="integer">125281</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5982</number>
      <permalink>chaining-named_scopes-that-use-activerecordquerymethods-with-default_scope-doesnt-work</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>chaining named_scopes that use ActiveRecord::QueryMethods with default_scope doesnt work</title>
      <updated-at type="datetime">2010-11-16T13:08:16+00:00</updated-at>
      <user-id type="integer">125281</user-id>
      <version type="integer">1</version>
      <user-name>shoreside</user-name>
      <creator-name>shoreside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5982</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T00:00:10+00:00</created-at>
      <creator-id type="integer">125281</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5982</number>
      <permalink>chaining-named_scopes-that-use-activerecordquerymethods-with-default_scope-doesnt-work</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>chaining named_scopes that use ActiveRecord::QueryMethods with default_scope doesnt work</title>
      <updated-at type="datetime">2011-02-17T00:01:14+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>shoreside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5982</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T00:00:11+00:00</created-at>
      <creator-id type="integer">125281</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5982</number>
      <permalink>chaining-named_scopes-that-use-activerecordquerymethods-with-default_scope-doesnt-work</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>chaining named_scopes that use ActiveRecord::QueryMethods with default_scope doesnt work</title>
      <updated-at type="datetime">2011-02-17T00:01:08+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>shoreside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5982</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>30779ee311e4717fb834dc8caa6291582c6d8079</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-16T13:08:11+00:00</created-at>
      <filename>default_scope_test.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">772738</id>
      <size type="integer">1836</size>
      <uploader-id type="integer">125281</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/772738/default_scope_test.patch</url>
    </attachment>
  </attachments>
</ticket>
