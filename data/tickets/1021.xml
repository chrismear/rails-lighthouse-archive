<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-08T23:12:10+00:00</created-at>
  <creator-id type="integer">31702</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1021</number>
  <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>activerecord migration</tag>
  <title>rake db:migrate doesn't detect new migration</title>
  <updated-at type="datetime">2010-11-08T23:12:10+00:00</updated-at>
  <user-id type="integer">17477</user-id>
  <version type="integer">5</version>
  <user-name>Frederick Cheung</user-name>
  <creator-name>Rollo Tomazzi</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Experienced with Rails / ActiveRecord 2.1.1

*  You create a first version with (for example) ruby script\generate scaffold product title:string description:text image_url:string
* This create (for example) a migration file called 20080910122415_create_products.rb
* You apply the migration with rake db:migrate
* Now, you add a field to the product table with ruby script\generate migration add_price_to_product price:decimal
* This create a migration file called 20080910125745_add_price_to_product.rb
* If you try to run rake db:migrate, it will actually revert the first migration, not apply the next one! So your product table will get destroyed!
* But if you ran rake alone, it would have told you that one migration was pending

Pls note that applying rake db:migrate (once the table has been destroyed) will apply all migrations in order.

The only workaround I found is to specify the version of the new migration as in: rake db:migrate version=20080910125745

So I'm wondering: is this an expected new behavior?

Thanks,
Rollo</original-body>
  <latest-body>Experienced with Rails / ActiveRecord 2.1.1

*  You create a first version with (for example) ruby script\generate scaffold product title:string description:text image_url:string
* This create (for example) a migration file called 20080910122415_create_products.rb
* You apply the migration with rake db:migrate
* Now, you add a field to the product table with ruby script\generate migration add_price_to_product price:decimal
* This create a migration file called 20080910125745_add_price_to_product.rb
* If you try to run rake db:migrate, it will actually revert the first migration, not apply the next one! So your product table will get destroyed!
* But if you ran rake alone, it would have told you that one migration was pending

Pls note that applying rake db:migrate (once the table has been destroyed) will apply all migrations in order.

The only workaround I found is to specify the version of the new migration as in: rake db:migrate version=20080910125745

So I'm wondering: is this an expected new behavior?

Thanks,
Rollo</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Experienced with Rails / ActiveRecord 2.1.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You create a first version with (for example) ruby
script\generate scaffold product title:string description:text
image_url:string&lt;/li&gt;
&lt;li&gt;This create (for example) a migration file called
20080910122415_create_products.rb&lt;/li&gt;
&lt;li&gt;You apply the migration with rake db:migrate&lt;/li&gt;
&lt;li&gt;Now, you add a field to the product table with ruby
script\generate migration add_price_to_product price:decimal&lt;/li&gt;
&lt;li&gt;This create a migration file called
20080910125745_add_price_to_product.rb&lt;/li&gt;
&lt;li&gt;If you try to run rake db:migrate, it will actually revert the
first migration, not apply the next one! So your product table will
get destroyed!&lt;/li&gt;
&lt;li&gt;But if you ran rake alone, it would have told you that one
migration was pending&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pls note that applying rake db:migrate (once the table has been
destroyed) will apply all migrations in order.&lt;/p&gt;
&lt;p&gt;The only workaround I found is to specify the version of the new
migration as in: rake db:migrate version=20080910125745&lt;/p&gt;
&lt;p&gt;So I'm wondering: is this an expected new behavior?&lt;/p&gt;
&lt;p&gt;Thanks, Rollo&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Experienced with Rails / ActiveRecord 2.1.1

*  You create a first version with (for example) ruby script\generate scaffold product title:string description:text image_url:string
* This create (for example) a migration file called 20080910122415_create_products.rb
* You apply the migration with rake db:migrate
* Now, you add a field to the product table with ruby script\generate migration add_price_to_product price:decimal
* This create a migration file called 20080910125745_add_price_to_product.rb
* If you try to run rake db:migrate, it will actually revert the first migration, not apply the next one! So your product table will get destroyed!
* But if you ran rake alone, it would have told you that one migration was pending

Pls note that applying rake db:migrate (once the table has been destroyed) will apply all migrations in order.

The only workaround I found is to specify the version of the new migration as in: rake db:migrate version=20080910125745

So I'm wondering: is this an expected new behavior?

Thanks,
Rollo</body>
      <body-html>&lt;div&gt;&lt;p&gt;Experienced with Rails / ActiveRecord 2.1.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You create a first version with (for example) ruby
script\generate scaffold product title:string description:text
image_url:string&lt;/li&gt;
&lt;li&gt;This create (for example) a migration file called
20080910122415_create_products.rb&lt;/li&gt;
&lt;li&gt;You apply the migration with rake db:migrate&lt;/li&gt;
&lt;li&gt;Now, you add a field to the product table with ruby
script\generate migration add_price_to_product price:decimal&lt;/li&gt;
&lt;li&gt;This create a migration file called
20080910125745_add_price_to_product.rb&lt;/li&gt;
&lt;li&gt;If you try to run rake db:migrate, it will actually revert the
first migration, not apply the next one! So your product table will
get destroyed!&lt;/li&gt;
&lt;li&gt;But if you ran rake alone, it would have told you that one
migration was pending&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pls note that applying rake db:migrate (once the table has been
destroyed) will apply all migrations in order.&lt;/p&gt;
&lt;p&gt;The only workaround I found is to specify the version of the new
migration as in: rake db:migrate version=20080910125745&lt;/p&gt;
&lt;p&gt;So I'm wondering: is this an expected new behavior?&lt;/p&gt;
&lt;p&gt;Thanks, Rollo&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-11T10:30:14+01:00</created-at>
      <creator-id type="integer">31702</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1021</number>
      <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord migration</tag>
      <title>rake db:migrate doesn't detect new migration</title>
      <updated-at type="datetime">2008-09-11T10:30:25+01:00</updated-at>
      <user-id type="integer">31702</user-id>
      <version type="integer">1</version>
      <user-name>Rollo Tomazzi</user-name>
      <creator-name>Rollo Tomazzi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rollo,

Could you tell me what OS/Database/Version of Ruby you are using?  It will help in trying to recreate the issue.

Tom</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rollo,&lt;/p&gt;
&lt;p&gt;Could you tell me what OS/Database/Version of Ruby you are
using? It will help in trying to recreate the issue.&lt;/p&gt;
&lt;p&gt;Tom&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-16T10:51:51+01:00</created-at>
      <creator-id type="integer">31702</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord migration
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1021</number>
      <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord migration</tag>
      <title>rake db:migrate doesn't detect new migration</title>
      <updated-at type="datetime">2008-09-16T10:51:55+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">2</version>
      <user-name>Tom Ward</user-name>
      <creator-name>Rollo Tomazzi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>According to http://stackoverflow.com/questions/70318/rake-dbmigrate-doesnt-detect-new-migration#70979 it appears this may be caused by a VERSION environment variable already being set.</body>
      <body-html>&lt;div&gt;&lt;p&gt;According to &lt;a href=&quot;http://stackoverflow.com/questions/70318/rake-dbmigrate-doesnt-detect-new-migration#70979&quot;&gt;
http://stackoverflow.com/questio...&lt;/a&gt; it appears this may be
caused by a VERSION environment variable already being set.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-16T11:20:28+01:00</created-at>
      <creator-id type="integer">31702</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1021</number>
      <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord migration</tag>
      <title>rake db:migrate doesn't detect new migration</title>
      <updated-at type="datetime">2008-09-16T11:20:29+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">3</version>
      <user-name>Tom Ward</user-name>
      <creator-name>Rollo Tomazzi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Tom : as I explain in the stackoverflow post this is still an error. 

# The problem # 

at least on windows, and most likely on *nix envs too, when the environment already has a VERSION variable set (and on windows it is case insensitive so Version brings it up too)  and VERSION contains some arbitrary string which does _not_ map to an integer, the **rake db:migrate** command's behaviour is erroneous. 

running it once on an empty database will migrate up, but then running that same command again to solve pending migrations will actually revert the database instead of upgrading it. 

main incriminated files : 
## database.rake ##
@@@ruby 
desc &quot;Migrate the database through scripts in db/migrate. Target specific version with VERSION=x. Turn off output with VERBOSE=false.&quot;
task :migrate =&gt; :environment do
  ActiveRecord::Migration.verbose = ENV[&quot;VERBOSE&quot;] ? ENV[&quot;VERBOSE&quot;] == &quot;true&quot; : true
  ActiveRecord::Migrator.migrate(&quot;db/migrate/&quot;, ENV[&quot;VERSION&quot;] ? ENV[&quot;VERSION&quot;].to_i : nil)
  Rake::Task[&quot;db:schema:dump&quot;].invoke if ActiveRecord::Base.schema_format == :ruby
end
@@@
### migration.rb in active records library
@@@ruby
class Migrator#:nodoc:
  class &lt;&lt; self
    def migrate(migrations_path, target_version = nil)
      case
        when target_version.nil?              then up(migrations_path, target_version)
        when current_version &gt; target_version then down(migrations_path, target_version)
        else                                       up(migrations_path, target_version)
      end
    end
@@@

the bug is in this line
@@@ruby
 ActiveRecord::Migrator.migrate(&quot;db/migrate/&quot;, ENV[&quot;VERSION&quot;] ? ENV[&quot;VERSION&quot;].to_i : nil)
@@@
ENV[&quot;VERSION&quot;].to_i will return 0 if ENV[&quot;VERSION&quot;] is not a valid integer (ruby behaviour). Thus if for some reason the user has a version variable set, it will behave erratically. 

# Solutions #

## The minimal solution ##
Is to fail loudly when VERSION is not an integer, so that at least the user knows what is wrong and doesn't loose data. for this the code should be changed to be 
@@@ruby 
 ActiveRecord::Migrator.migrate(&quot;db/migrate/&quot;, ENV[&quot;VERSION&quot;] ? Integer.new(ENV[&quot;VERSION&quot;]) : nil)
@@@

## A slightly better solution ##
at least check that the VERSION is a valid timestamp with respect to the YYYYMMDD format instead of checking for an integer (there may be backward compatibility reasons why you wouldn't want to do that)

## Improved solution ##
Actually list the content of the migration directory and ensure that the VERSION is valid for the files in that directory.

## The correct solution ##
Do not use environment variables to store program argument ... this is just wrong and you can not make any assumptions as to the existing or non existing environment variables.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Tom : as I explain in the stackoverflow post this is still an
error.&lt;/p&gt;
&lt;h1&gt;The problem&lt;/h1&gt;
&lt;p&gt;at least on windows, and most likely on *nix envs too, when the
environment already has a VERSION variable set (and on windows it
is case insensitive so Version brings it up too) and VERSION
contains some arbitrary string which does &lt;em&gt;not&lt;/em&gt; map to an
integer, the &lt;strong&gt;rake db:migrate&lt;/strong&gt; command's behaviour
is erroneous.&lt;/p&gt;
&lt;p&gt;running it once on an empty database will migrate up, but then
running that same command again to solve pending migrations will
actually revert the database instead of upgrading it.&lt;/p&gt;
&lt;p&gt;main incriminated files :&lt;/p&gt;
&lt;h2&gt;database.rake&lt;/h2&gt;
&lt;p&gt;@@@ruby desc &quot;Migrate the database through scripts in
db/migrate. Target specific version with VERSION=x. Turn off output
with VERBOSE=false.&quot; task :migrate =&amp;gt; :environment do
ActiveRecord::Migration.verbose = ENV[&quot;VERBOSE&quot;] ? ENV[&quot;VERBOSE&quot;]
== &quot;true&quot; : true ActiveRecord::Migrator.migrate(&quot;db/migrate/&quot;,
ENV[&quot;VERSION&quot;] ? ENV[&quot;VERSION&quot;].to_i : nil)
Rake::Task[&quot;db:schema:dump&quot;].invoke if
ActiveRecord::Base.schema_format == :ruby end&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
### migration.rb in active records library
@@@ruby
class Migrator#:nodoc:
  class &amp;lt;&amp;lt; self
    def migrate(migrations_path, target_version = nil)
      case
        when target_version.nil?              then up(migrations_path, target_version)
        when current_version &amp;gt; target_version then down(migrations_path, target_version)
        else                                       up(migrations_path, target_version)
      end
    end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the bug is in this line @@@ruby
ActiveRecord::Migrator.migrate(&quot;db/migrate/&quot;, ENV[&quot;VERSION&quot;] ?
ENV[&quot;VERSION&quot;].to_i : nil)&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
ENV[&amp;quot;VERSION&amp;quot;].to_i will return 0 if ENV[&amp;quot;VERSION&amp;quot;] is not a valid integer (ruby behaviour). Thus if for some reason the user has a version variable set, it will behave erratically.

# Solutions #

## The minimal solution ##
Is to fail loudly when VERSION is not an integer, so that at least the user knows what is wrong and doesn't loose data. for this the code should be changed to be
@@@ruby
 ActiveRecord::Migrator.migrate(&amp;quot;db/migrate/&amp;quot;, ENV[&amp;quot;VERSION&amp;quot;] ? Integer.new(ENV[&amp;quot;VERSION&amp;quot;]) : nil)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;A slightly better solution&lt;/h2&gt;
&lt;p&gt;at least check that the VERSION is a valid timestamp with
respect to the YYYYMMDD format instead of checking for an integer
(there may be backward compatibility reasons why you wouldn't want
to do that)&lt;/p&gt;
&lt;h2&gt;Improved solution&lt;/h2&gt;
&lt;p&gt;Actually list the content of the migration directory and ensure
that the VERSION is valid for the files in that directory.&lt;/p&gt;
&lt;h2&gt;The correct solution&lt;/h2&gt;
&lt;p&gt;Do not use environment variables to store program argument ...
this is just wrong and you can not make any assumptions as to the
existing or non existing environment variables.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-16T23:19:07+01:00</created-at>
      <creator-id type="integer">31702</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1021</number>
      <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord migration</tag>
      <title>rake db:migrate doesn't detect new migration</title>
      <updated-at type="datetime">2008-09-16T23:19:09+01:00</updated-at>
      <user-id type="integer">22204</user-id>
      <version type="integer">4</version>
      <user-name>Jean</user-name>
      <creator-name>Rollo Tomazzi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicate of #1203 (created later, but has patches)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicate of &lt;a href=&quot;/projects/8994/tickets/1203&quot; title=&quot;Ticket #1203&quot;&gt;#1203&lt;/a&gt; (created later, but has patches)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-10T16:41:43+00:00</created-at>
      <creator-id type="integer">31702</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1021</number>
      <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord migration</tag>
      <title>rake db:migrate doesn't detect new migration</title>
      <updated-at type="datetime">2008-12-10T16:41:44+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">5</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Rollo Tomazzi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>for &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com/products/ferrari-1932-3393.html&quot;&gt;Ferrari Ferrari sale&lt;/a&gt;&lt;/b&gt; a watch is also &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com/products/breitling-a1334011-g5-131a-142.html&quot;&gt;Aeromarine Chrono Superocean Steel Mens A1334011-G5-131A-1125&lt;/a&gt;&lt;/b&gt; not a guarantee of &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com/products/breitling-chronograph8-02-303.html&quot;&gt;Breitling Bentley&lt;/a&gt;&lt;/b&gt; quality, as even they &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com&quot;&gt;cheap watches&lt;/a&gt;&lt;/b&gt; can simply be very &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com&quot;&gt;Omega Watches Store&lt;/a&gt;&lt;/b&gt; well done counterfe &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com/products/breitling-a2133012-g5-435x-393.html&quot;&gt;Chronomatic Evolution 18k Yellow Gold Mens A2133012-G5-435X-1351&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com/products/iwc-5022-18-2006.html&quot;&gt;replica IWC Portuguese&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com/products/baume-mercier-8678-1346.html&quot;&gt;Baume Mercier hampton classic&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com&quot;&gt;designer watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com&quot;&gt;designer watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;for &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com/products/ferrari-1932-3393.html&quot;&gt;
Ferrari Ferrari sale&lt;/a&gt;&lt;/b&gt; a watch is also &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com/products/breitling-a1334011-g5-131a-142.html&quot;&gt;
Aeromarine Chrono Superocean Steel Mens
A1334011-G5-131A-1125&lt;/a&gt;&lt;/b&gt; not a guarantee of &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com/products/breitling-chronograph8-02-303.html&quot;&gt;
Breitling Bentley&lt;/a&gt;&lt;/b&gt; quality, as even they &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com&quot;&gt;cheap watches&lt;/a&gt;&lt;/b&gt; can
simply be very &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com&quot;&gt;Omega
Watches Store&lt;/a&gt;&lt;/b&gt; well done counterfe &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com/products/breitling-a2133012-g5-435x-393.html&quot;&gt;
Chronomatic Evolution 18k Yellow Gold Mens
A2133012-G5-435X-1351&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com/products/iwc-5022-18-2006.html&quot;&gt;replica
IWC Portuguese&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com/products/baume-mercier-8678-1346.html&quot;&gt;
Baume Mercier hampton classic&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesonline.com&quot;&gt;designer watches&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.omegawatchesonline.com&quot;&gt;designer
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T10:53:16+01:00</created-at>
      <creator-id type="integer">31702</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1021</number>
      <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
      <priority type="integer">459</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord migration</tag>
      <title>rake db:migrate doesn't detect new migration</title>
      <updated-at type="datetime">2010-07-21T01:46:05+01:00</updated-at>
      <user-id type="integer">107771</user-id>
      <version type="integer">6</version>
      <user-name>zhuzhu</user-name>
      <creator-name>Rollo Tomazzi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:21:39+00:00</created-at>
      <creator-id type="integer">31702</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1021</number>
      <permalink>rake-dbmigrate-doesnt-detect-new-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord migration</tag>
      <title>rake db:migrate doesn't detect new migration</title>
      <updated-at type="datetime">2010-11-08T23:12:10+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">7</version>
      <user-name>jim123456</user-name>
      <creator-name>Rollo Tomazzi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1021</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
