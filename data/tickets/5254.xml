<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-30T19:47:21+01:00</created-at>
  <creator-id type="integer">34341</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5254</number>
  <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activemodel to_json</tag>
  <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
  <updated-at type="datetime">2010-10-15T23:01:59+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">8</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Alex Le</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>High</priority-name>
  <original-body>This change broke a bunch of my JavaScript code to handle validation on the client side (works perfectly fine on Rails 3B4 but not on Rails 3RC)

To replicate this issue:

Declare a model, say &quot;Expense&quot; with &quot;amount&quot; as a required field:  

    class Expense &lt; ActiveRecord::Base
      validates_numericality_of :amount
    end
 
In the console,

    expense = Expense.new
    expense.errors.to_json
    =&gt;  &quot;[\&quot;Account is not a number\&quot;]&quot;

Basically there's no way that I can get back the column which the error occurs to handle it on the front-end.  In Rails 3 beta 4, it used to return this result, and it's the preferred result as well:

    expense.errors.as_json  # I tried to_json and it gave me a stack level too deep
    =&gt; { :amount =&gt; &quot;is not a number }

For me, I have this snippet in the view code to hook up to my custom JavaScript validations:

    var expense = &lt;%= raw expense.to_json(:methods =&gt; [:errors]) %&gt;;
    // handling errors for the expense depends on the columns in expense.expense.errors

I'd get back the errors as a json object and I can iterate thru the columns attributes to handle the errors, however, this is no longer the case with Rails 3RC.  

I checked the log and I think this commit broke the expected behavior :  7bd85a8fc2d216a5e2b1  (http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c)

Can you please switch this back to how Rails 3b4 handles the serialization of the errors array?  If the user wants to have the full error messages, then they can call another methods like expense.to_json(:methods =&gt; [:error_messages]) and this would get them the full error messages.

Thanks,

Alex</original-body>
  <latest-body>This change broke a bunch of my JavaScript code to handle validation on the client side (works perfectly fine on Rails 3B4 but not on Rails 3RC)

To replicate this issue:

Declare a model, say &quot;Expense&quot; with &quot;amount&quot; as a required field:  

    class Expense &lt; ActiveRecord::Base
      validates_numericality_of :amount
    end
 
In the console,

    expense = Expense.new
    expense.errors.to_json
    =&gt;  &quot;[\&quot;Account is not a number\&quot;]&quot;

Basically there's no way that I can get back the column which the error occurs to handle it on the front-end.  In Rails 3 beta 4, it used to return this result, and it's the preferred result as well:

    expense.errors.as_json  # I tried to_json and it gave me a stack level too deep
    =&gt; { :amount =&gt; &quot;is not a number }

For me, I have this snippet in the view code to hook up to my custom JavaScript validations:

    var expense = &lt;%= raw expense.to_json(:methods =&gt; [:errors]) %&gt;;
    // handling errors for the expense depends on the columns in expense.expense.errors

I'd get back the errors as a json object and I can iterate thru the columns attributes to handle the errors, however, this is no longer the case with Rails 3RC.  

I checked the log and I think this commit broke the expected behavior :  7bd85a8fc2d216a5e2b1  (http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c)

Can you please switch this back to how Rails 3b4 handles the serialization of the errors array?  If the user wants to have the full error messages, then they can call another methods like expense.to_json(:methods =&gt; [:error_messages]) and this would get them the full error messages.

Thanks,

Alex</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This change broke a bunch of my JavaScript code to handle
validation on the client side (works perfectly fine on Rails 3B4
but not on Rails 3RC)&lt;/p&gt;
&lt;p&gt;To replicate this issue:&lt;/p&gt;
&lt;p&gt;Declare a model, say &quot;Expense&quot; with &quot;amount&quot; as a required
field:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Expense &amp;lt; ActiveRecord::Base
  validates_numericality_of :amount
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the console,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;expense = Expense.new
expense.errors.to_json
=&amp;gt;  &quot;[\&quot;Account is not a number\&quot;]&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Basically there's no way that I can get back the column which
the error occurs to handle it on the front-end. In Rails 3 beta 4,
it used to return this result, and it's the preferred result as
well:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;expense.errors.as_json  # I tried to_json and it gave me a stack level too deep
=&amp;gt; { :amount =&amp;gt; &quot;is not a number }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For me, I have this snippet in the view code to hook up to my
custom JavaScript validations:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;var expense = &amp;lt;%= raw expense.to_json(:methods =&amp;gt; [:errors]) %&amp;gt;;
// handling errors for the expense depends on the columns in expense.expense.errors&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'd get back the errors as a json object and I can iterate thru
the columns attributes to handle the errors, however, this is no
longer the case with Rails 3RC.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I checked the log and I think this commit broke the expected
behavior : 7bd85a8fc2d216a5e2b1 (&lt;a href=
&quot;http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c&quot;&gt;http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572...&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Can you please switch this back to how Rails 3b4 handles the
serialization of the errors array? If the user wants to have the
full error messages, then they can call another methods like
expense.to_json(:methods =&amp;gt; [:error_messages]) and this would
get them the full error messages.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Alex&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This change broke a bunch of my JavaScript code to handle validation on the client side (works perfectly fine on Rails 3B4 but not on Rails 3RC)

To replicate this issue:

Declare a model, say &quot;Expense&quot; with &quot;amount&quot; as a required field:  

    class Expense &lt; ActiveRecord::Base
      validates_numericality_of :amount
    end
 
In the console,

    expense = Expense.new
    expense.errors.to_json
    =&gt;  &quot;[\&quot;Account is not a number\&quot;]&quot;

Basically there's no way that I can get back the column which the error occurs to handle it on the front-end.  In Rails 3 beta 4, it used to return this result, and it's the preferred result as well:

    expense.errors.as_json  # I tried to_json and it gave me a stack level too deep
    =&gt; { :amount =&gt; &quot;is not a number }

For me, I have this snippet in the view code to hook up to my custom JavaScript validations:

    var expense = &lt;%= raw expense.to_json(:methods =&gt; [:errors]) %&gt;;
    // handling errors for the expense depends on the columns in expense.expense.errors

I'd get back the errors as a json object and I can iterate thru the columns attributes to handle the errors, however, this is no longer the case with Rails 3RC.  

I checked the log and I think this commit broke the expected behavior :  7bd85a8fc2d216a5e2b1  (http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c)

Can you please switch this back to how Rails 3b4 handles the serialization of the errors array?  If the user wants to have the full error messages, then they can call another methods like expense.to_json(:methods =&gt; [:error_messages]) and this would get them the full error messages.

Thanks,

Alex</body>
      <body-html>&lt;div&gt;&lt;p&gt;This change broke a bunch of my JavaScript code to handle
validation on the client side (works perfectly fine on Rails 3B4
but not on Rails 3RC)&lt;/p&gt;
&lt;p&gt;To replicate this issue:&lt;/p&gt;
&lt;p&gt;Declare a model, say &quot;Expense&quot; with &quot;amount&quot; as a required
field:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Expense &amp;lt; ActiveRecord::Base
  validates_numericality_of :amount
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the console,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;expense = Expense.new
expense.errors.to_json
=&amp;gt;  &quot;[\&quot;Account is not a number\&quot;]&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Basically there's no way that I can get back the column which
the error occurs to handle it on the front-end. In Rails 3 beta 4,
it used to return this result, and it's the preferred result as
well:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;expense.errors.as_json  # I tried to_json and it gave me a stack level too deep
=&amp;gt; { :amount =&amp;gt; &quot;is not a number }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For me, I have this snippet in the view code to hook up to my
custom JavaScript validations:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;var expense = &amp;lt;%= raw expense.to_json(:methods =&amp;gt; [:errors]) %&amp;gt;;
// handling errors for the expense depends on the columns in expense.expense.errors&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'd get back the errors as a json object and I can iterate thru
the columns attributes to handle the errors, however, this is no
longer the case with Rails 3RC.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I checked the log and I think this commit broke the expected
behavior : 7bd85a8fc2d216a5e2b1 (&lt;a href=
&quot;http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c&quot;&gt;http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572...&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Can you please switch this back to how Rails 3b4 handles the
serialization of the errors array? If the user wants to have the
full error messages, then they can call another methods like
expense.to_json(:methods =&amp;gt; [:error_messages]) and this would
get them the full error messages.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Alex&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-30T19:47:21+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-07-30T19:47:26+01:00</updated-at>
      <user-id type="integer">34341</user-id>
      <version type="integer">1</version>
      <user-name>Alex Le</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch with tests please. Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch with tests please. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-30T19:54:00+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-07-30T19:54:05+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Jos&#233;,

Here's the patch for this issue.  Basically now the ActiveModel::Errors#as_json would return the OrderedHash object itself, which will take care of the json serialization itself.

So far I got the activemodel test suite to pass 100%, but the activerecord test suite failed at 3 places.  However I think it's more or less because of my machine lacking the proper language support.  The failing tests in the activerecord suite are:  test_validate_case_insensitive_uniqueness, test_validate_uniqueness, and test_validate_uniqueness_with_limit_and_utf8, none of which relate to the json serialization.

This is my first time patching Rails, so if I missed something, please let me know.

Cheers!

Alex</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Jos&amp;eacute;,&lt;/p&gt;
&lt;p&gt;Here's the patch for this issue. Basically now the
ActiveModel::Errors#as_json would return the OrderedHash object
itself, which will take care of the json serialization itself.&lt;/p&gt;
&lt;p&gt;So far I got the activemodel test suite to pass 100%, but the
activerecord test suite failed at 3 places. However I think it's
more or less because of my machine lacking the proper language
support. The failing tests in the activerecord suite are:
test_validate_case_insensitive_uniqueness,
test_validate_uniqueness, and
test_validate_uniqueness_with_limit_and_utf8, none of which relate
to the json serialization.&lt;/p&gt;
&lt;p&gt;This is my first time patching Rails, so if I missed something,
please let me know.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;
&lt;p&gt;Alex&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-30T22:04:33+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-07-30T22:04:34+01:00</updated-at>
      <user-id type="integer">34341</user-id>
      <version type="integer">3</version>
      <user-name>Alex Le</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Congratulations on your first patch! From what I saw, it looks great. I will try to apply it during next week. Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Congratulations on your first patch! From what I saw, it looks
great. I will try to apply it during next week. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-30T22:15:40+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-07-30T22:15:42+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">4</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [aeaab06c79a9e3cfa9988270847fa8c6f863570a]) ActiveModel::Errors json serialization to work as Rails 3b4 [#5254 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/aeaab06c79a9e3cfa9988270847fa8c6f863570a</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/aeaab06c79a9e3cfa9988270847fa8c6f863570a&quot;
title=
&quot;Changeset [aeaab06c79a9e3cfa9988270847fa8c6f863570a]&quot;&gt;[aeaab06c79a9e3cfa9988270847fa8c6f863570a]&lt;/a&gt;)
ActiveModel::Errors json serialization to work as Rails 3b4
[&lt;a href=&quot;/projects/8994/tickets/5254&quot; title=
&quot;Ticket #5254&quot;&gt;#5254&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/aeaab06c79a9e3cfa9988270847fa8c6f863570a&quot;&gt;
http://github.com/rails/rails/commit/aeaab06c79a9e3cfa9988270847fa8...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-02T15:56:00+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-08-02T15:56:03+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue needs a little more thought. For example if we have multiple errors for an attribute we get a JSON hash with duplicate keys of the attribute name.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue needs a little more thought. For example if we have
multiple errors for an attribute we get a JSON hash with duplicate
keys of the attribute name.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-11T08:31:06+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-09-11T08:31:07+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">6</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>See here for my patch 

https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5615-support-multiple-errors-per-attribute-in-activemodel-errors-json-serialization#ticket-5615-2</body>
      <body-html>&lt;div&gt;&lt;p&gt;See here for my patch&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5615-support-multiple-errors-per-attribute-in-activemodel-errors-json-serialization#ticket-5615-2&quot;&gt;
https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-11T11:15:18+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-09-11T11:15:20+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">7</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:59+01:00</created-at>
      <creator-id type="integer">34341</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5254</number>
      <permalink>rails-3rcs-activemodelas_json-outputs-array-of-message-instead-of-hash-of-columns-and-messages</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activemodel to_json</tag>
      <title>Rails 3RC's ActiveModel#as_json outputs array of message instead of hash of columns and messages</title>
      <updated-at type="datetime">2010-10-15T23:01:59+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Alex Le</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5254</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>High</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>3d50a320a1e29e2fe5dbba575891d9cb98c9e4c0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-30T22:04:33+01:00</created-at>
      <filename>activemodel_errors_as_json_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">610205</id>
      <size type="integer">3189</size>
      <uploader-id type="integer">34341</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/610205/activemodel_errors_as_json_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
