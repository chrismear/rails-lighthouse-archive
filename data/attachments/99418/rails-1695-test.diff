diff --git a/activerecord/test/cases/named_scope_test.rb b/activerecord/test/cases/named_scope_test.rb
index ae6a54a..a556992 100644
--- a/activerecord/test/cases/named_scope_test.rb
+++ b/activerecord/test/cases/named_scope_test.rb
@@ -5,6 +5,9 @@ require 'models/comment'
 require 'models/reply'
 require 'models/author'
 require 'models/developer'
+require 'models/car'
+require 'models/part'
+require 'models/part_type'
 
 class NamedScopeTest < ActiveRecord::TestCase
   fixtures :posts, :authors, :topics, :comments, :author_addresses
@@ -336,6 +339,16 @@ class NamedScopeTest < ActiveRecord::TestCase
       end
     end
   end
+  
+  fixtures :part_types, :cars
+  
+  def test_named_scopes_with_joins_work_within_habtm
+    car = cars(:car54)
+    part3 = car.parts.create :part_type => part_types(:pt3), :name => "3"
+    part2 = car.parts.create :part_type => part_types(:pt2), :name => "2"
+    part1 = car.parts.create :part_type => part_types(:pt1), :name => "1"
+    assert_equal %W(1 2 3), car.parts.ordered.collect { |p| p.name }
+  end
 end
 
 class DynamicScopeMatchTest < ActiveRecord::TestCase  
diff --git a/activerecord/test/fixtures/cars.yml b/activerecord/test/fixtures/cars.yml
new file mode 100644
index 0000000..0a94e99
--- /dev/null
+++ b/activerecord/test/fixtures/cars.yml
@@ -0,0 +1,2 @@
+car54:
+  name: Car 54
diff --git a/activerecord/test/fixtures/part_types.yml b/activerecord/test/fixtures/part_types.yml
new file mode 100644
index 0000000..f38675f
--- /dev/null
+++ b/activerecord/test/fixtures/part_types.yml
@@ -0,0 +1,11 @@
+pt1:
+  name: Part Type 1
+  sort_order: 1
+
+pt2:
+  name: Part Type 2
+  sort_order: 2
+
+pt3:
+  name: Part Type 3
+  sort_order: 3
diff --git a/activerecord/test/models/car.rb b/activerecord/test/models/car.rb
new file mode 100644
index 0000000..e172292
--- /dev/null
+++ b/activerecord/test/models/car.rb
@@ -0,0 +1,3 @@
+class Car < ActiveRecord::Base
+  has_and_belongs_to_many :parts
+end
diff --git a/activerecord/test/models/part.rb b/activerecord/test/models/part.rb
new file mode 100644
index 0000000..48c666e
--- /dev/null
+++ b/activerecord/test/models/part.rb
@@ -0,0 +1,9 @@
+class Part < ActiveRecord::Base
+  belongs_to :part_type
+  has_and_belongs_to_many :cars
+  named_scope :ordered, {
+    :select => "parts.*",
+    :joins => :part_type,
+    :order => "part_types.sort_order ASC"
+  }
+end
diff --git a/activerecord/test/models/part_type.rb b/activerecord/test/models/part_type.rb
new file mode 100644
index 0000000..ee6521d
--- /dev/null
+++ b/activerecord/test/models/part_type.rb
@@ -0,0 +1,3 @@
+class PartType < ActiveRecord::Base
+  has_many :parts
+end
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index ea848a2..f6bcd2b 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -67,6 +67,25 @@ ActiveRecord::Schema.define do
   create_table :booleantests, :force => true do |t|
     t.boolean :value
   end
+  
+  create_table :cars, :force => true do |t|
+    t.string :name
+  end
+  
+  create_table :cars_parts, :force => true, :id => false do |t|
+    t.integer :car_id
+    t.integer :part_id
+  end
+  
+  create_table :parts, :force => true do |t|
+    t.string :name
+    t.integer :part_type_id
+  end
+  
+  create_table :part_types, :force => true do |t|
+    t.string :name
+    t.integer :sort_order
+  end
 
   create_table :categories, :force => true do |t|
     t.string :name, :null => false
