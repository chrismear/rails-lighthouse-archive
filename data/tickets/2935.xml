<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-07-22T01:13:47+01:00</created-at>
  <creator-id type="integer">63543</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2935</number>
  <permalink>allow-classes-using-validation-to-specify-how-attributes-should-be-read</permalink>
  <priority type="integer">2016</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>3.0 hook validation</tag>
  <title>Allow classes using validation to specify how attributes should be read</title>
  <updated-at type="datetime">2009-08-08T11:41:08+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">2</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Jamie Hill</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2935</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This patch adds a hook method to validations allowing a class to define how it's attributes should be acquired. This is useful should the class not use the default of having a method for each attribute and instead store values in a hash e.g.

@@@ ruby
class MyClass
  include ActiveModel::Validations

  def initialize(data = {})
    @data = data
  end
  
  def []=(key, value)
    @data[key] = value
  end

  private
  
  def value_for(key)
    @data[key]
  end
end
@@@

By overriding the value_for method you have control over how attribute values are retrieved.

As Rails 3 is all about not having to hack the framework and instead provide hooks I believe this is a great addition an have use-cases right away.</original-body>
  <latest-body>This patch adds a hook method to validations allowing a class to define how it's attributes should be acquired. This is useful should the class not use the default of having a method for each attribute and instead store values in a hash e.g.

@@@ ruby
class MyClass
  include ActiveModel::Validations

  def initialize(data = {})
    @data = data
  end
  
  def []=(key, value)
    @data[key] = value
  end

  private
  
  def value_for(key)
    @data[key]
  end
end
@@@

By overriding the value_for method you have control over how attribute values are retrieved.

As Rails 3 is all about not having to hack the framework and instead provide hooks I believe this is a great addition an have use-cases right away.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch adds a hook method to validations allowing a class to
define how it's attributes should be acquired. This is useful
should the class not use the default of having a method for each
attribute and instead store values in a hash e.g.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class MyClass
  include ActiveModel::Validations

  def initialize(data = {})
    @data = data
  end
  
  def []=(key, value)
    @data[key] = value
  end

  private
  
  def value_for(key)
    @data[key]
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By overriding the value_for method you have control over how
attribute values are retrieved.&lt;/p&gt;
&lt;p&gt;As Rails 3 is all about not having to hack the framework and
instead provide hooks I believe this is a great addition an have
use-cases right away.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch adds a hook method to validations allowing a class to define how it's attributes should be acquired. This is useful should the class not use the default of having a method for each attribute and instead store values in a hash e.g.

@@@ ruby
class MyClass
  include ActiveModel::Validations

  def initialize(data = {})
    @data = data
  end
  
  def []=(key, value)
    @data[key] = value
  end

  private
  
  def value_for(key)
    @data[key]
  end
end
@@@

By overriding the value_for method you have control over how attribute values are retrieved.

As Rails 3 is all about not having to hack the framework and instead provide hooks I believe this is a great addition an have use-cases right away.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch adds a hook method to validations allowing a class to
define how it's attributes should be acquired. This is useful
should the class not use the default of having a method for each
attribute and instead store values in a hash e.g.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class MyClass
  include ActiveModel::Validations

  def initialize(data = {})
    @data = data
  end
  
  def []=(key, value)
    @data[key] = value
  end

  private
  
  def value_for(key)
    @data[key]
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;By overriding the value_for method you have control over how
attribute values are retrieved.&lt;/p&gt;
&lt;p&gt;As Rails 3 is all about not having to hack the framework and
instead provide hooks I believe this is a great addition an have
use-cases right away.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-22T01:13:47+01:00</created-at>
      <creator-id type="integer">63543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2935</number>
      <permalink>allow-classes-using-validation-to-specify-how-attributes-should-be-read</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 hook validation</tag>
      <title>Allow classes using validation to specify how attributes should be read</title>
      <updated-at type="datetime">2009-07-22T01:13:48+01:00</updated-at>
      <user-id type="integer">63543</user-id>
      <version type="integer">1</version>
      <user-name>Jamie Hill</user-name>
      <creator-name>Jamie Hill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2935</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicated of #2936 (which was already committed).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicated of &lt;a href=&quot;/projects/8994/tickets/2936&quot; title=
&quot;Ticket #2936&quot;&gt;#2936&lt;/a&gt; (which was already committed).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T11:41:04+01:00</created-at>
      <creator-id type="integer">63543</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2935</number>
      <permalink>allow-classes-using-validation-to-specify-how-attributes-should-be-read</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>3.0 hook validation</tag>
      <title>Allow classes using validation to specify how attributes should be read</title>
      <updated-at type="datetime">2009-08-08T11:41:08+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Jamie Hill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2935</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
