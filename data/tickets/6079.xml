<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-29T12:13:28+00:00</created-at>
  <creator-id type="integer">111040</creator-id>
  <milestone-due-on type="datetime">2011-02-27T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">101623</milestone-id>
  <number type="integer">6079</number>
  <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
  <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
  <updated-at type="datetime">2011-02-12T21:58:23+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">10</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Brian Underwood</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
  <milestone-title>3.0.5</milestone-title>
  <priority-name>Medium</priority-name>
  <original-body>I notice that when I have a sample model such as this:

@@@ ruby
   class Foo &lt; ActiveRecord::Base
     serialize :data
   end
@@@

If I try to save the boolean value &quot;true&quot; to the &quot;data&quot; field, it works fine, but when I try to save the boolean value &quot;false&quot;, it saves it as the string &quot;f&quot;:

@@@ console
   ruby-1.9.2-p0 &gt;       ActiveRecord::Base.logger = Logger.new(STDOUT)
   ...
   ruby-1.9.2-p0 &gt; f = Foo.first
     Foo Load (0.2ms)  SELECT &quot;foos&quot;.* FROM &quot;foos&quot; LIMIT 1
    =&gt; #&lt;Foo id: 1, data: true, created_at: &quot;2010-11-28 19:11:05&quot;, updated_at: &quot;2010-11-28 19:13:16&quot;&gt; 
   ruby-1.9.2-p0 &gt; f.data = false
    =&gt; false 
   ruby-1.9.2-p0 &gt; f.save
     AREL (0.5ms)  UPDATE &quot;foos&quot; SET &quot;data&quot; = 'f', &quot;updated_at&quot; = '2010-11-28 19:25:02.547106' WHERE (&quot;foos&quot;.&quot;id&quot; = 1)
@@@

It seems that this is an issue where type casting shouldn't apply to serialized fields.  Could this be fixed simply?  (I poked around in the Rails source for a bit without much luck on how to get started.  Plus I'm not sure if this is limited to sqlite3 or if it's in other drivers).

Using Rails 3.0.3 and Ruby 1.9.2-p0 in RVM on Mac OS 10.6.5 (FWIW)</original-body>
  <latest-body>I notice that when I have a sample model such as this:

@@@ ruby
   class Foo &lt; ActiveRecord::Base
     serialize :data
   end
@@@

If I try to save the boolean value &quot;true&quot; to the &quot;data&quot; field, it works fine, but when I try to save the boolean value &quot;false&quot;, it saves it as the string &quot;f&quot;:

@@@ console
   ruby-1.9.2-p0 &gt;       ActiveRecord::Base.logger = Logger.new(STDOUT)
   ...
   ruby-1.9.2-p0 &gt; f = Foo.first
     Foo Load (0.2ms)  SELECT &quot;foos&quot;.* FROM &quot;foos&quot; LIMIT 1
    =&gt; #&lt;Foo id: 1, data: true, created_at: &quot;2010-11-28 19:11:05&quot;, updated_at: &quot;2010-11-28 19:13:16&quot;&gt; 
   ruby-1.9.2-p0 &gt; f.data = false
    =&gt; false 
   ruby-1.9.2-p0 &gt; f.save
     AREL (0.5ms)  UPDATE &quot;foos&quot; SET &quot;data&quot; = 'f', &quot;updated_at&quot; = '2010-11-28 19:25:02.547106' WHERE (&quot;foos&quot;.&quot;id&quot; = 1)
@@@

It seems that this is an issue where type casting shouldn't apply to serialized fields.  Could this be fixed simply?  (I poked around in the Rails source for a bit without much luck on how to get started.  Plus I'm not sure if this is limited to sqlite3 or if it's in other drivers).

Using Rails 3.0.3 and Ruby 1.9.2-p0 in RVM on Mac OS 10.6.5 (FWIW)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I notice that when I have a sample model such as this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;   class Foo &amp;lt; ActiveRecord::Base
     serialize :data
   end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I try to save the boolean value &quot;true&quot; to the &quot;data&quot; field,
it works fine, but when I try to save the boolean value &quot;false&quot;, it
saves it as the string &quot;f&quot;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;console&quot;&gt;   ruby-1.9.2-p0 &amp;gt;       ActiveRecord::Base.logger = Logger.new(STDOUT)
   ...
   ruby-1.9.2-p0 &amp;gt; f = Foo.first
     Foo Load (0.2ms)  SELECT &quot;foos&quot;.* FROM &quot;foos&quot; LIMIT 1
    =&amp;gt; #&amp;lt;Foo id: 1, data: true, created_at: &quot;2010-11-28 19:11:05&quot;, updated_at: &quot;2010-11-28 19:13:16&quot;&amp;gt; 
   ruby-1.9.2-p0 &amp;gt; f.data = false
    =&amp;gt; false 
   ruby-1.9.2-p0 &amp;gt; f.save
     AREL (0.5ms)  UPDATE &quot;foos&quot; SET &quot;data&quot; = 'f', &quot;updated_at&quot; = '2010-11-28 19:25:02.547106' WHERE (&quot;foos&quot;.&quot;id&quot; = 1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It seems that this is an issue where type casting shouldn't
apply to serialized fields. Could this be fixed simply? (I poked
around in the Rails source for a bit without much luck on how to
get started. Plus I'm not sure if this is limited to sqlite3 or if
it's in other drivers).&lt;/p&gt;
&lt;p&gt;Using Rails 3.0.3 and Ruby 1.9.2-p0 in RVM on Mac OS 10.6.5
(FWIW)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I notice that when I have a sample model such as this:

@@@ ruby
   class Foo &lt; ActiveRecord::Base
     serialize :data
   end
@@@

If I try to save the boolean value &quot;true&quot; to the &quot;data&quot; field, it works fine, but when I try to save the boolean value &quot;false&quot;, it saves it as the string &quot;f&quot;:

@@@ console
   ruby-1.9.2-p0 &gt;       ActiveRecord::Base.logger = Logger.new(STDOUT)
   ...
   ruby-1.9.2-p0 &gt; f = Foo.first
     Foo Load (0.2ms)  SELECT &quot;foos&quot;.* FROM &quot;foos&quot; LIMIT 1
    =&gt; #&lt;Foo id: 1, data: true, created_at: &quot;2010-11-28 19:11:05&quot;, updated_at: &quot;2010-11-28 19:13:16&quot;&gt; 
   ruby-1.9.2-p0 &gt; f.data = false
    =&gt; false 
   ruby-1.9.2-p0 &gt; f.save
     AREL (0.5ms)  UPDATE &quot;foos&quot; SET &quot;data&quot; = 'f', &quot;updated_at&quot; = '2010-11-28 19:25:02.547106' WHERE (&quot;foos&quot;.&quot;id&quot; = 1)
@@@

It seems that this is an issue where type casting shouldn't apply to serialized fields.  Could this be fixed simply?  (I poked around in the Rails source for a bit without much luck on how to get started.  Plus I'm not sure if this is limited to sqlite3 or if it's in other drivers).

Using Rails 3.0.3 and Ruby 1.9.2-p0 in RVM on Mac OS 10.6.5 (FWIW)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I notice that when I have a sample model such as this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;   class Foo &amp;lt; ActiveRecord::Base
     serialize :data
   end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I try to save the boolean value &quot;true&quot; to the &quot;data&quot; field,
it works fine, but when I try to save the boolean value &quot;false&quot;, it
saves it as the string &quot;f&quot;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;console&quot;&gt;   ruby-1.9.2-p0 &amp;gt;       ActiveRecord::Base.logger = Logger.new(STDOUT)
   ...
   ruby-1.9.2-p0 &amp;gt; f = Foo.first
     Foo Load (0.2ms)  SELECT &quot;foos&quot;.* FROM &quot;foos&quot; LIMIT 1
    =&amp;gt; #&amp;lt;Foo id: 1, data: true, created_at: &quot;2010-11-28 19:11:05&quot;, updated_at: &quot;2010-11-28 19:13:16&quot;&amp;gt; 
   ruby-1.9.2-p0 &amp;gt; f.data = false
    =&amp;gt; false 
   ruby-1.9.2-p0 &amp;gt; f.save
     AREL (0.5ms)  UPDATE &quot;foos&quot; SET &quot;data&quot; = 'f', &quot;updated_at&quot; = '2010-11-28 19:25:02.547106' WHERE (&quot;foos&quot;.&quot;id&quot; = 1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It seems that this is an issue where type casting shouldn't
apply to serialized fields. Could this be fixed simply? (I poked
around in the Rails source for a bit without much luck on how to
get started. Plus I'm not sure if this is limited to sqlite3 or if
it's in other drivers).&lt;/p&gt;
&lt;p&gt;Using Rails 3.0.3 and Ruby 1.9.2-p0 in RVM on Mac OS 10.6.5
(FWIW)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-28T19:45:21+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-11-28T19:45:24+00:00</updated-at>
      <user-id type="integer">111040</user-id>
      <version type="integer">1</version>
      <user-name>Brian Underwood</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can see this happen on 1.8.7. I also see that false gets serialized to 0 with mysql adapter.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can see this happen on 1.8.7. I also see that false gets
serialized to 0 with mysql adapter.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T11:32:27+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-11-29T11:32:34+00:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">2</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>On Rails master (will need to do work on Rails 3 stable branch a bit later) - 

On Rails master, i see the behavior is that boolean false is actually saved as nil.

I think the problem is this line of code

@@@ ruby
 if value &amp;&amp; self.class.serialized_attributes.key?(name)
   value = YAML.dump value
 end

@@@

This makes sure that &quot;values&quot; that are set to false are never really YAML.dumped.

Will work on patch and failing test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;On Rails master (will need to do work on Rails 3 stable branch a
bit later) -&lt;/p&gt;
&lt;p&gt;On Rails master, i see the behavior is that boolean false is
actually saved as nil.&lt;/p&gt;
&lt;p&gt;I think the problem is this line of code&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; if value &amp;amp;&amp;amp; self.class.serialized_attributes.key?(name)
   value = YAML.dump value
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This makes sure that &quot;values&quot; that are set to false are never
really YAML.dumped.&lt;/p&gt;
&lt;p&gt;Will work on patch and failing test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T12:13:28+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-11-29T12:14:23+00:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">3</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Adding patch for master to deal with attributes assigned as false to be serialized properly.

Now working on 3.0.x branch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adding patch for master to deal with attributes assigned as
false to be serialized properly.&lt;/p&gt;
&lt;p&gt;Now working on 3.0.x branch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T12:46:35+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 3
:milestone: 
:tag: &quot;\&quot;activerecord rails3\&quot; serialize sqlite3&quot;
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-11-29T12:46:46+00:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">4</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T12:59:42+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-11-29T12:59:45+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>And adding patch for 3-0 stable as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;And adding patch for 3-0 stable as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T13:00:17+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 71472
:assigned_user: 15316
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-11-29T13:00:19+00:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">6</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T13:00:47+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-11-29T13:00:56+00:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">7</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [97e9d8860b277e5ca9f4187c213ddd35d7f76e9b]) Ensure that boolean false is properly serialized [#6079 state:resolved]
https://github.com/rails/rails/commit/97e9d8860b277e5ca9f4187c213ddd35d7f76e9b</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/97e9d8860b277e5ca9f4187c213ddd35d7f76e9b&quot;
title=
&quot;Changeset [97e9d8860b277e5ca9f4187c213ddd35d7f76e9b]&quot;&gt;[97e9d8860b277e5ca9f4187c213ddd35d7f76e9b]&lt;/a&gt;)
Ensure that boolean false is properly serialized [&lt;a href=
&quot;/projects/8994/tickets/6079&quot; title=&quot;Ticket #6079&quot;&gt;#6079&lt;/a&gt;
state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/97e9d8860b277e5ca9f4187c213ddd35d7f76e9b&quot;&gt;
https://github.com/rails/rails/commit/97e9d8860b277e5ca9f4187c213dd...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-08T23:56:39+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-12-08T23:56:47+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [7a237d56aa38c51987af0fd52d001989c4f3da07]) Ensure that boolean false is properly serialized [#6079 state:resolved]
https://github.com/rails/rails/commit/7a237d56aa38c51987af0fd52d001989c4f3da07</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/7a237d56aa38c51987af0fd52d001989c4f3da07&quot;
title=
&quot;Changeset [7a237d56aa38c51987af0fd52d001989c4f3da07]&quot;&gt;[7a237d56aa38c51987af0fd52d001989c4f3da07]&lt;/a&gt;)
Ensure that boolean false is properly serialized [&lt;a href=
&quot;/projects/8994/tickets/6079&quot; title=&quot;Ticket #6079&quot;&gt;#6079&lt;/a&gt;
state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/7a237d56aa38c51987af0fd52d001989c4f3da07&quot;&gt;
https://github.com/rails/rails/commit/7a237d56aa38c51987af0fd52d001...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-08T23:56:48+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2010-12-08T23:57:00+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/42275)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/42275&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-12T21:58:23+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 92071
</diffable-attributes>
      <milestone-id type="integer">101623</milestone-id>
      <number type="integer">6079</number>
      <permalink>serialize-saves-false-boolean-value-as-string-f-in-sqlite3</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord rails3&quot; patch serialize sqlite3</tag>
      <title>Serialize saves false boolean value as string &quot;f&quot; in sqlite3</title>
      <updated-at type="datetime">2011-02-12T21:58:23+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Brian Underwood</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6079</url>
      <milestone-title>3.0.5</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>93db9862e815c6d90f77ff57496c376f6ab85c05</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-29T12:46:35+00:00</created-at>
      <filename>lh6079-master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">792548</id>
      <size type="integer">2765</size>
      <uploader-id type="integer">17433</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/792548/lh6079-master.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d11a076d4eeb5ac386329c4d5e956b8065eaea2c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-29T13:00:17+00:00</created-at>
      <filename>lh6079-30.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">792566</id>
      <size type="integer">2996173</size>
      <uploader-id type="integer">17433</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/792566/lh6079-30.diff</url>
    </attachment>
  </attachments>
</ticket>
