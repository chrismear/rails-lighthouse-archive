<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-05T22:30:27+01:00</created-at>
  <creator-id type="integer">25386</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">552</number>
  <permalink>nested-validations</permalink>
  <priority type="integer">46</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.1 activerecord enhancement models validations</tag>
  <title>Nested validations</title>
  <updated-at type="datetime">2008-11-22T18:39:28+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">3</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>k776</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/552</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Rails 2.1 lacks support for easy nested validations so that multiple validations on the same field dont all show up at once.

It would be nice to have something like this for example.

validates_presence_of :username do
  validates_format_of :username, :with =&gt; /[A-Za-z0-9]+/ do
    validates_uniqueness_of :username, :case_sensitive =&gt; false
  end
end

In this case, uniqueness would only be run if format validates, which would only be run if username is present.</original-body>
  <latest-body>Rails 2.1 lacks support for easy nested validations so that multiple validations on the same field dont all show up at once.

It would be nice to have something like this for example.

validates_presence_of :username do
  validates_format_of :username, :with =&gt; /[A-Za-z0-9]+/ do
    validates_uniqueness_of :username, :case_sensitive =&gt; false
  end
end

In this case, uniqueness would only be run if format validates, which would only be run if username is present.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Rails 2.1 lacks support for easy nested validations so that multiple validations on the same field dont all show up at once.
&lt;/p&gt;&lt;p&gt;
It would be nice to have something like this for example.
&lt;/p&gt;&lt;p&gt;
validates_presence_of :username do
&lt;/p&gt;&lt;p&gt;
validates_format_of :username, :with =&gt; /[A-Za-z0-9]+/ do
&lt;/p&gt;&lt;p&gt;
validates_uniqueness_of :username, :case_sensitive =&gt; false
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
In this case, uniqueness would only be run if format validates, which would only be run if username is present.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 2.1 lacks support for easy nested validations so that multiple validations on the same field dont all show up at once.

It would be nice to have something like this for example.

validates_presence_of :username do
  validates_format_of :username, :with =&gt; /[A-Za-z0-9]+/ do
    validates_uniqueness_of :username, :case_sensitive =&gt; false
  end
end

In this case, uniqueness would only be run if format validates, which would only be run if username is present.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Rails 2.1 lacks support for easy nested validations so that multiple validations on the same field dont all show up at once.
&lt;/p&gt;&lt;p&gt;
It would be nice to have something like this for example.
&lt;/p&gt;&lt;p&gt;
validates_presence_of :username do
&lt;/p&gt;&lt;p&gt;
validates_format_of :username, :with =&gt; /[A-Za-z0-9]+/ do
&lt;/p&gt;&lt;p&gt;
validates_uniqueness_of :username, :case_sensitive =&gt; false
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
In this case, uniqueness would only be run if format validates, which would only be run if username is present.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-05T22:30:27+01:00</created-at>
      <creator-id type="integer">25386</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">552</number>
      <permalink>nested-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord enhancement models validations</tag>
      <title>Nested validations</title>
      <updated-at type="datetime">2008-07-05T22:30:27+01:00</updated-at>
      <user-id type="integer">25386</user-id>
      <version type="integer">1</version>
      <user-name>k776</user-name>
      <creator-name>k776</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/552</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The Validatable gem does this:

http://validatable.rubyforge.org/</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The Validatable gem does this:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://validatable.rubyforge.org/&quot;&gt;http://validatable.rubyforge.org/&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-01T18:52:00+01:00</created-at>
      <creator-id type="integer">25386</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">552</number>
      <permalink>nested-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord enhancement models validations</tag>
      <title>Nested validations</title>
      <updated-at type="datetime">2008-08-01T18:52:00+01:00</updated-at>
      <user-id type="integer">8441</user-id>
      <version type="integer">2</version>
      <user-name>Rob Dupuis</user-name>
      <creator-name>k776</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/552</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T18:39:24+00:00</created-at>
      <creator-id type="integer">25386</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">552</number>
      <permalink>nested-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.1 activerecord enhancement models validations</tag>
      <title>Nested validations</title>
      <updated-at type="datetime">2008-11-22T18:39:28+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>k776</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/552</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
