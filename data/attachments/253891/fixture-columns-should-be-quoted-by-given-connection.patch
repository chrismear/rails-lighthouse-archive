From 617cdbee6f07934c92123c43d2fe9d7fad9f40d5 Mon Sep 17 00:00:00 2001
From: Jeffrey Hardy <packagethief@gmail.com>
Date: Wed, 26 Aug 2009 13:14:40 -0400
Subject: [PATCH] Don't use AR::Base.connection for fixture column quoting. Use the connection given to Fixtures.new

---
 activerecord/lib/active_record/fixtures.rb |   15 ++++++++-------
 1 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/activerecord/lib/active_record/fixtures.rb b/activerecord/lib/active_record/fixtures.rb
index 6eeeddc..32754e3 100644
--- a/activerecord/lib/active_record/fixtures.rb
+++ b/activerecord/lib/active_record/fixtures.rb
@@ -620,7 +620,7 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
               join_fixtures = habtm_fixtures[association]
 
               targets.each do |target|
-                join_fixtures["#{label}_#{target}"] = Fixture.new(
+                join_fixtures["#{label}_#{target}"] = Fixture.new(@connection,
                   { association.primary_key_name => row[primary_key_name],
                     association.association_foreign_key => Fixtures.identify(target) }, nil)
               end
@@ -706,12 +706,12 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
 
         yaml_value.each do |fixture|
           raise Fixture::FormatError, "Bad data for #{@class_name} fixture named #{fixture}" unless fixture.respond_to?(:each)
-	  fixture.each do |name, data|
+	        fixture.each do |name, data|
             unless data
               raise Fixture::FormatError, "Bad data for #{@class_name} fixture named #{name} (nil)"
             end
 
-            self[name] = Fixture.new(data, model_class)
+            self[name] = Fixture.new(@connection, data, model_class)
           end
         end
       end
@@ -724,7 +724,7 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
       reader.each do |row|
         data = {}
         row.each_with_index { |cell, j| data[header[j].to_s.strip] = cell.to_s.strip }
-        self["#{@class_name.to_s.underscore}_#{i+=1}"] = Fixture.new(data, model_class)
+        self["#{@class_name.to_s.underscore}_#{i+=1}"] = Fixture.new(@connection, data, model_class)
       end
     end
 
@@ -762,7 +762,8 @@ class Fixture #:nodoc:
 
   attr_reader :model_class
 
-  def initialize(fixture, model_class)
+  def initialize(connection, fixture, model_class)
+    @connection = connection
     @fixture = fixture
     @model_class = model_class.is_a?(Class) ? model_class : model_class.constantize rescue nil
   end
@@ -784,14 +785,14 @@ class Fixture #:nodoc:
   end
 
   def key_list
-    columns = @fixture.keys.collect{ |column_name| ActiveRecord::Base.connection.quote_column_name(column_name) }
+    columns = @fixture.keys.collect{ |column_name| @connection.quote_column_name(column_name) }
     columns.join(", ")
   end
 
   def value_list
     list = @fixture.inject([]) do |fixtures, (key, value)|
       col = model_class.columns_hash[key] if model_class.respond_to?(:ancestors) && model_class.ancestors.include?(ActiveRecord::Base)
-      fixtures << ActiveRecord::Base.connection.quote(value, col).gsub('[^\]\\n', "\n").gsub('[^\]\\r', "\r")
+      fixtures << @connection.quote(value, col).gsub('[^\]\\n', "\n").gsub('[^\]\\r', "\r")
     end
     list * ', '
   end
-- 
1.6.3.3

