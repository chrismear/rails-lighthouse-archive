<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-19T17:15:22+00:00</created-at>
  <creator-id type="integer">29548</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6015</number>
  <permalink>assetincludetag-ensures-that-files-are-in-the-wrong-directory</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>actionpack action_view asset_tag_helper</tag>
  <title>AssetIncludeTag ensures that files are in the wrong directory</title>
  <updated-at type="datetime">2010-11-19T17:56:31+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Henning</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6015</url>
  <priority-name nil="true"></priority-name>
  <original-body>`javascript_include_tag` and `stylesheet_link_tag` check that the included paths actually exist as files. Under certain circumstances this check is performed in the wrong directory and an error is raised even though all files exist.

The circumstances that expose this issue are:

1. The included paths are named paths like `'script.js'` (instead of `:all`)
2. The asset tag helper is called with the `:cache =&gt; true` option
3. `config.perform_caching` is set to `false`
4. The application is running with a relative URL root (&quot;sub-URI deployment&quot;)

The error that the paths correctly prefixed by the relative URL root are also used to check the files' existence. Since a path prefixed that way is a *virtual* path that does not exist in the local file system, that check fails.

My proposed fix is that paths used to check file existence should not be prefixed by the relative URL root. I will upload a patch with tests for this.

### Steps to reproduce:

1. Configure a Passenger application with `RackBaseURI /sub-folder`
2. In the active application environment, set `config.perform_caching = false`
3. In any view link to an existing javascript file: `&lt;%= javascript_include_tag 'script.js', :cache =&gt; true %&gt;
4. Open that view in the browser
5. You will see the follow error:

&gt; No such file or directory - Asset file not found at '/home/username/rails-project/public/sub-folder/javascripts/script.js'</original-body>
  <latest-body>`javascript_include_tag` and `stylesheet_link_tag` check that the included paths actually exist as files. Under certain circumstances this check is performed in the wrong directory and an error is raised even though all files exist.

The circumstances that expose this issue are:

1. The included paths are named paths like `'script.js'` (instead of `:all`)
2. The asset tag helper is called with the `:cache =&gt; true` option
3. `config.perform_caching` is set to `false`
4. The application is running with a relative URL root (&quot;sub-URI deployment&quot;)

The error that the paths correctly prefixed by the relative URL root are also used to check the files' existence. Since a path prefixed that way is a *virtual* path that does not exist in the local file system, that check fails.

My proposed fix is that paths used to check file existence should not be prefixed by the relative URL root. I will upload a patch with tests for this.

### Steps to reproduce:

1. Configure a Passenger application with `RackBaseURI /sub-folder`
2. In the active application environment, set `config.perform_caching = false`
3. In any view link to an existing javascript file: `&lt;%= javascript_include_tag 'script.js', :cache =&gt; true %&gt;
4. Open that view in the browser
5. You will see the follow error:

&gt; No such file or directory - Asset file not found at '/home/username/rails-project/public/sub-folder/javascripts/script.js'</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;javascript_include_tag&lt;/code&gt; and
&lt;code&gt;stylesheet_link_tag&lt;/code&gt; check that the included paths
actually exist as files. Under certain circumstances this check is
performed in the wrong directory and an error is raised even though
all files exist.&lt;/p&gt;
&lt;p&gt;The circumstances that expose this issue are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The included paths are named paths like
&lt;code&gt;'script.js'&lt;/code&gt; (instead of &lt;code&gt;:all&lt;/code&gt;)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The asset tag helper is called with the &lt;code&gt;:cache =&amp;gt;
true&lt;/code&gt; option&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config.perform_caching&lt;/code&gt; is set to
&lt;code&gt;false&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The application is running with a relative URL root (&quot;sub-URI
deployment&quot;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The error that the paths correctly prefixed by the relative URL
root are also used to check the files' existence. Since a path
prefixed that way is a &lt;em&gt;virtual&lt;/em&gt; path that does not exist in
the local file system, that check fails.&lt;/p&gt;
&lt;p&gt;My proposed fix is that paths used to check file existence
should not be prefixed by the relative URL root. I will upload a
patch with tests for this.&lt;/p&gt;
&lt;h3&gt;Steps to reproduce:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Configure a Passenger application with &lt;code&gt;RackBaseURI
/sub-folder&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;In the active application environment, set
&lt;code&gt;config.perform_caching = false&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;In any view link to an existing javascript file: &lt;code&gt;&amp;lt;%=
javascript_include_tag 'script.js', :cache =&amp;gt; true
%&amp;gt;&amp;lt;br/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open that view in the browser&lt;br&gt;&lt;/li&gt;
&lt;li&gt;You will see the follow error:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;No such file or directory - Asset file not found at
'/home/username/rails-project/public/sub-folder/javascripts/script.js'&lt;/p&gt;
&lt;/blockquote&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>`javascript_include_tag` and `stylesheet_link_tag` check that the included paths actually exist as files. Under certain circumstances this check is performed in the wrong directory and an error is raised even though all files exist.

The circumstances that expose this issue are:

1. The included paths are named paths like `'script.js'` (instead of `:all`)
2. The asset tag helper is called with the `:cache =&gt; true` option
3. `config.perform_caching` is set to `false`
4. The application is running with a relative URL root (&quot;sub-URI deployment&quot;)

The error that the paths correctly prefixed by the relative URL root are also used to check the files' existence. Since a path prefixed that way is a *virtual* path that does not exist in the local file system, that check fails.

My proposed fix is that paths used to check file existence should not be prefixed by the relative URL root. I will upload a patch with tests for this.

### Steps to reproduce:

1. Configure a Passenger application with `RackBaseURI /sub-folder`
2. In the active application environment, set `config.perform_caching = false`
3. In any view link to an existing javascript file: `&lt;%= javascript_include_tag 'script.js', :cache =&gt; true %&gt;
4. Open that view in the browser
5. You will see the follow error:

&gt; No such file or directory - Asset file not found at '/home/username/rails-project/public/sub-folder/javascripts/script.js'</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;javascript_include_tag&lt;/code&gt; and
&lt;code&gt;stylesheet_link_tag&lt;/code&gt; check that the included paths
actually exist as files. Under certain circumstances this check is
performed in the wrong directory and an error is raised even though
all files exist.&lt;/p&gt;
&lt;p&gt;The circumstances that expose this issue are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The included paths are named paths like
&lt;code&gt;'script.js'&lt;/code&gt; (instead of &lt;code&gt;:all&lt;/code&gt;)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The asset tag helper is called with the &lt;code&gt;:cache =&amp;gt;
true&lt;/code&gt; option&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config.perform_caching&lt;/code&gt; is set to
&lt;code&gt;false&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The application is running with a relative URL root (&quot;sub-URI
deployment&quot;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The error that the paths correctly prefixed by the relative URL
root are also used to check the files' existence. Since a path
prefixed that way is a &lt;em&gt;virtual&lt;/em&gt; path that does not exist in
the local file system, that check fails.&lt;/p&gt;
&lt;p&gt;My proposed fix is that paths used to check file existence
should not be prefixed by the relative URL root. I will upload a
patch with tests for this.&lt;/p&gt;
&lt;h3&gt;Steps to reproduce:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Configure a Passenger application with &lt;code&gt;RackBaseURI
/sub-folder&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;In the active application environment, set
&lt;code&gt;config.perform_caching = false&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;In any view link to an existing javascript file: &lt;code&gt;&amp;lt;%=
javascript_include_tag 'script.js', :cache =&amp;gt; true
%&amp;gt;&amp;lt;br/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open that view in the browser&lt;br&gt;&lt;/li&gt;
&lt;li&gt;You will see the follow error:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;No such file or directory - Asset file not found at
'/home/username/rails-project/public/sub-folder/javascripts/script.js'&lt;/p&gt;
&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-19T17:15:22+00:00</created-at>
      <creator-id type="integer">29548</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6015</number>
      <permalink>assetincludetag-ensures-that-files-are-in-the-wrong-directory</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack action_view asset_tag_helper</tag>
      <title>AssetIncludeTag ensures that files are in the wrong directory</title>
      <updated-at type="datetime">2010-11-19T17:15:28+00:00</updated-at>
      <user-id type="integer">29548</user-id>
      <version type="integer">1</version>
      <user-name>Henning</user-name>
      <creator-name>Henning</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6015</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am attaching my proposed patch for this ticket.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am attaching my proposed patch for this ticket.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-19T17:22:39+00:00</created-at>
      <creator-id type="integer">29548</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6015</number>
      <permalink>assetincludetag-ensures-that-files-are-in-the-wrong-directory</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack action_view asset_tag_helper</tag>
      <title>AssetIncludeTag ensures that files are in the wrong directory</title>
      <updated-at type="datetime">2010-11-19T17:22:41+00:00</updated-at>
      <user-id type="integer">29548</user-id>
      <version type="integer">2</version>
      <user-name>Henning</user-name>
      <creator-name>Henning</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6015</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [deff5289474d966bb12ae18c1b816df3eeb11f27]) Fix AssetIncludeTag ensuring that files are in the wrong directory [#6015 state:resolved]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/deff5289474d966bb12ae18c1b816df3eeb11f27</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/deff5289474d966bb12ae18c1b816df3eeb11f27&quot;
title=
&quot;Changeset [deff5289474d966bb12ae18c1b816df3eeb11f27]&quot;&gt;[deff5289474d966bb12ae18c1b816df3eeb11f27]&lt;/a&gt;)
Fix AssetIncludeTag ensuring that files are in the wrong directory
[&lt;a href=&quot;/projects/8994/tickets/6015&quot; title=
&quot;Ticket #6015&quot;&gt;#6015&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino
&lt;a&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/deff5289474d966bb12ae18c1b816df3eeb11f27&quot;&gt;
https://github.com/rails/rails/commit/deff5289474d966bb12ae18c1b816...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-19T17:56:21+00:00</created-at>
      <creator-id type="integer">29548</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6015</number>
      <permalink>assetincludetag-ensures-that-files-are-in-the-wrong-directory</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actionpack action_view asset_tag_helper</tag>
      <title>AssetIncludeTag ensures that files are in the wrong directory</title>
      <updated-at type="datetime">2010-11-19T17:56:31+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Henning</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6015</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9bda148aca63cc5d7442a4922670d45b96befdb2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-19T17:22:39+00:00</created-at>
      <filename>fix_wrong_asset_include_checks_with_relative_url_root.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">780327</id>
      <size type="integer">4114</size>
      <uploader-id type="integer">29548</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/780327/fix_wrong_asset_include_checks_with_relative_url_root.diff</url>
    </attachment>
  </attachments>
</ticket>
