<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-26T08:35:52+01:00</created-at>
  <creator-id type="integer">113164</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5464</number>
  <permalink>uninitialized-constant-mysql-during-rake-dbcreate-using-em_mysql2</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>mysql2 patch</tag>
  <title>&quot;uninitialized constant Mysql&quot; during rake db:create using em_mysql2</title>
  <updated-at type="datetime">2011-01-18T01:32:45+00:00</updated-at>
  <user-id type="integer">119097</user-id>
  <version type="integer">5</version>
  <user-name>Goksel</user-name>
  <creator-name>Sam Aarons</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5464</url>
  <priority-name>Low</priority-name>
  <original-body>When rake db:create is run using the em_mysql2 adapter, Rails wrongly assumes it is suppose to throw a Mysql::Error instead of a Mysql2::Error.  I have attached a patch that fixes this problem.

    rake aborted!
    uninitialized constant Mysql
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:64:in `rescue in create_database'
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:39:in `create_database'
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:35:in `block (2 levels) in &lt;top (required)&gt;'
    /usr/local/lib/ruby/1.9.1/rake.rb:634:in `call'
    /usr/local/lib/ruby/1.9.1/rake.rb:634:in `block in execute'
    /usr/local/lib/ruby/1.9.1/rake.rb:629:in `each'
    /usr/local/lib/ruby/1.9.1/rake.rb:629:in `execute'
    /usr/local/lib/ruby/1.9.1/rake.rb:595:in `block in invoke_with_call_chain'
    /usr/local/lib/ruby/1.9.1/monitor.rb:201:in `mon_synchronize'
    /usr/local/lib/ruby/1.9.1/rake.rb:588:in `invoke_with_call_chain'
    /usr/local/lib/ruby/1.9.1/rake.rb:581:in `invoke'
    /usr/local/lib/ruby/1.9.1/rake.rb:2041:in `invoke_task'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block (2 levels) in top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `each'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block in top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:2058:in `standard_exception_handling'
    /usr/local/lib/ruby/1.9.1/rake.rb:2013:in `top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:1992:in `run'
    /usr/local/bin/rake:31:in `&lt;main&gt;'</original-body>
  <latest-body>When rake db:create is run using the em_mysql2 adapter, Rails wrongly assumes it is suppose to throw a Mysql::Error instead of a Mysql2::Error.  I have attached a patch that fixes this problem.

    rake aborted!
    uninitialized constant Mysql
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:64:in `rescue in create_database'
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:39:in `create_database'
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:35:in `block (2 levels) in &lt;top (required)&gt;'
    /usr/local/lib/ruby/1.9.1/rake.rb:634:in `call'
    /usr/local/lib/ruby/1.9.1/rake.rb:634:in `block in execute'
    /usr/local/lib/ruby/1.9.1/rake.rb:629:in `each'
    /usr/local/lib/ruby/1.9.1/rake.rb:629:in `execute'
    /usr/local/lib/ruby/1.9.1/rake.rb:595:in `block in invoke_with_call_chain'
    /usr/local/lib/ruby/1.9.1/monitor.rb:201:in `mon_synchronize'
    /usr/local/lib/ruby/1.9.1/rake.rb:588:in `invoke_with_call_chain'
    /usr/local/lib/ruby/1.9.1/rake.rb:581:in `invoke'
    /usr/local/lib/ruby/1.9.1/rake.rb:2041:in `invoke_task'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block (2 levels) in top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `each'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block in top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:2058:in `standard_exception_handling'
    /usr/local/lib/ruby/1.9.1/rake.rb:2013:in `top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:1992:in `run'
    /usr/local/bin/rake:31:in `&lt;main&gt;'</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When rake db:create is run using the em_mysql2 adapter, Rails
wrongly assumes it is suppose to throw a Mysql::Error instead of a
Mysql2::Error. I have attached a patch that fixes this problem.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake aborted!
uninitialized constant Mysql
~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:64:in `rescue in create_database'
~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:39:in `create_database'
~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:35:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'
/usr/local/lib/ruby/1.9.1/rake.rb:634:in `call'
/usr/local/lib/ruby/1.9.1/rake.rb:634:in `block in execute'
/usr/local/lib/ruby/1.9.1/rake.rb:629:in `each'
/usr/local/lib/ruby/1.9.1/rake.rb:629:in `execute'
/usr/local/lib/ruby/1.9.1/rake.rb:595:in `block in invoke_with_call_chain'
/usr/local/lib/ruby/1.9.1/monitor.rb:201:in `mon_synchronize'
/usr/local/lib/ruby/1.9.1/rake.rb:588:in `invoke_with_call_chain'
/usr/local/lib/ruby/1.9.1/rake.rb:581:in `invoke'
/usr/local/lib/ruby/1.9.1/rake.rb:2041:in `invoke_task'
/usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block (2 levels) in top_level'
/usr/local/lib/ruby/1.9.1/rake.rb:2019:in `each'
/usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block in top_level'
/usr/local/lib/ruby/1.9.1/rake.rb:2058:in `standard_exception_handling'
/usr/local/lib/ruby/1.9.1/rake.rb:2013:in `top_level'
/usr/local/lib/ruby/1.9.1/rake.rb:1992:in `run'
/usr/local/bin/rake:31:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When rake db:create is run using the em_mysql2 adapter, Rails wrongly assumes it is suppose to throw a Mysql::Error instead of a Mysql2::Error.  I have attached a patch that fixes this problem.

    rake aborted!
    uninitialized constant Mysql
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:64:in `rescue in create_database'
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:39:in `create_database'
    ~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:35:in `block (2 levels) in &lt;top (required)&gt;'
    /usr/local/lib/ruby/1.9.1/rake.rb:634:in `call'
    /usr/local/lib/ruby/1.9.1/rake.rb:634:in `block in execute'
    /usr/local/lib/ruby/1.9.1/rake.rb:629:in `each'
    /usr/local/lib/ruby/1.9.1/rake.rb:629:in `execute'
    /usr/local/lib/ruby/1.9.1/rake.rb:595:in `block in invoke_with_call_chain'
    /usr/local/lib/ruby/1.9.1/monitor.rb:201:in `mon_synchronize'
    /usr/local/lib/ruby/1.9.1/rake.rb:588:in `invoke_with_call_chain'
    /usr/local/lib/ruby/1.9.1/rake.rb:581:in `invoke'
    /usr/local/lib/ruby/1.9.1/rake.rb:2041:in `invoke_task'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block (2 levels) in top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `each'
    /usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block in top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:2058:in `standard_exception_handling'
    /usr/local/lib/ruby/1.9.1/rake.rb:2013:in `top_level'
    /usr/local/lib/ruby/1.9.1/rake.rb:1992:in `run'
    /usr/local/bin/rake:31:in `&lt;main&gt;'</body>
      <body-html>&lt;div&gt;&lt;p&gt;When rake db:create is run using the em_mysql2 adapter, Rails
wrongly assumes it is suppose to throw a Mysql::Error instead of a
Mysql2::Error. I have attached a patch that fixes this problem.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake aborted!
uninitialized constant Mysql
~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:64:in `rescue in create_database'
~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:39:in `create_database'
~/.bundler/ruby/1.9.1/rails-5dd9272/activerecord/lib/active_record/railties/databases.rake:35:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'
/usr/local/lib/ruby/1.9.1/rake.rb:634:in `call'
/usr/local/lib/ruby/1.9.1/rake.rb:634:in `block in execute'
/usr/local/lib/ruby/1.9.1/rake.rb:629:in `each'
/usr/local/lib/ruby/1.9.1/rake.rb:629:in `execute'
/usr/local/lib/ruby/1.9.1/rake.rb:595:in `block in invoke_with_call_chain'
/usr/local/lib/ruby/1.9.1/monitor.rb:201:in `mon_synchronize'
/usr/local/lib/ruby/1.9.1/rake.rb:588:in `invoke_with_call_chain'
/usr/local/lib/ruby/1.9.1/rake.rb:581:in `invoke'
/usr/local/lib/ruby/1.9.1/rake.rb:2041:in `invoke_task'
/usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block (2 levels) in top_level'
/usr/local/lib/ruby/1.9.1/rake.rb:2019:in `each'
/usr/local/lib/ruby/1.9.1/rake.rb:2019:in `block in top_level'
/usr/local/lib/ruby/1.9.1/rake.rb:2058:in `standard_exception_handling'
/usr/local/lib/ruby/1.9.1/rake.rb:2013:in `top_level'
/usr/local/lib/ruby/1.9.1/rake.rb:1992:in `run'
/usr/local/bin/rake:31:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-26T08:35:52+01:00</created-at>
      <creator-id type="integer">113164</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5464</number>
      <permalink>uninitialized-constant-mysql-during-rake-dbcreate-using-em_mysql2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql2 patch</tag>
      <title>&quot;uninitialized constant Mysql&quot; during rake db:create using em_mysql2</title>
      <updated-at type="datetime">2010-08-26T08:45:38+01:00</updated-at>
      <user-id type="integer">113164</user-id>
      <version type="integer">1</version>
      <user-name>Sam Aarons</user-name>
      <creator-name>Sam Aarons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5464</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-27T14:29:36+01:00</created-at>
      <creator-id type="integer">113164</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5464</number>
      <permalink>uninitialized-constant-mysql-during-rake-dbcreate-using-em_mysql2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>mysql2 patch</tag>
      <title>&quot;uninitialized constant Mysql&quot; during rake db:create using em_mysql2</title>
      <updated-at type="datetime">2010-08-27T14:29:38+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Sam Aarons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5464</url>
      <priority-name>Low</priority-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Applied, thanks!

http://github.com/rails/rails/commit/ba03dd47741359e307ff413abfdd3b54ba20f658</body>
      <body-html>&lt;div&gt;&lt;p&gt;Applied, thanks!&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/ba03dd47741359e307ff413abfdd3b54ba20f658&quot;&gt;
http://github.com/rails/rails/commit/ba03dd47741359e307ff413abfdd3b...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-28T14:42:24+01:00</created-at>
      <creator-id type="integer">113164</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5464</number>
      <permalink>uninitialized-constant-mysql-during-rake-dbcreate-using-em_mysql2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>mysql2 patch</tag>
      <title>&quot;uninitialized constant Mysql&quot; during rake db:create using em_mysql2</title>
      <updated-at type="datetime">2010-08-28T14:42:28+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Sam Aarons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5464</url>
      <priority-name>Low</priority-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>it seems this problem persists in that the adapter still requires the mysql gem?
The only way I could avoid this was putting 
gem 'mysql' 
gem 'mysql2' 
in my Gemfile

is this normal?</body>
      <body-html>&lt;div&gt;&lt;p&gt;it seems this problem persists in that the adapter still
requires the mysql gem?&lt;br&gt;
The only way I could avoid this was putting&lt;br&gt;
gem 'mysql'&lt;br&gt;
gem 'mysql2'&lt;br&gt;
in my Gemfile&lt;/p&gt;
&lt;p&gt;is this normal?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-12T14:28:26+00:00</created-at>
      <creator-id type="integer">113164</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5464</number>
      <permalink>uninitialized-constant-mysql-during-rake-dbcreate-using-em_mysql2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>mysql2 patch</tag>
      <title>&quot;uninitialized constant Mysql&quot; during rake db:create using em_mysql2</title>
      <updated-at type="datetime">2011-01-12T14:28:36+00:00</updated-at>
      <user-id type="integer">74047</user-id>
      <version type="integer">4</version>
      <user-name>viktor tron (strawberry)</user-name>
      <creator-name>Sam Aarons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5464</url>
      <priority-name>Low</priority-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This can be a Mysql version problem. You should install the most stable version (MYSQL 5.1). See me blog post : http://geryit.com/blog/2011/01/installing-mysql-with-rails-on-mac-os-x-snow-leopard/</body>
      <body-html>&lt;div&gt;&lt;p&gt;This can be a Mysql version problem. You should install the most
stable version (MYSQL 5.1). See me blog post : &lt;a href=
&quot;http://geryit.com/blog/2011/01/installing-mysql-with-rails-on-mac-os-x-snow-leopard/&quot;&gt;
http://geryit.com/blog/2011/01/installing-mysql-with-rails-on-mac-o...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-18T01:32:33+00:00</created-at>
      <creator-id type="integer">113164</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5464</number>
      <permalink>uninitialized-constant-mysql-during-rake-dbcreate-using-em_mysql2</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>mysql2 patch</tag>
      <title>&quot;uninitialized constant Mysql&quot; during rake db:create using em_mysql2</title>
      <updated-at type="datetime">2011-01-18T01:32:45+00:00</updated-at>
      <user-id type="integer">119097</user-id>
      <version type="integer">5</version>
      <user-name>Goksel</user-name>
      <creator-name>Sam Aarons</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5464</url>
      <priority-name>Low</priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d5b5a689b436bc89516180b651a58873ceb4a6ba</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-26T08:35:52+01:00</created-at>
      <filename>em_mysql2_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">645823</id>
      <size type="integer">1183</size>
      <uploader-id type="integer">113164</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/645823/em_mysql2_fix.diff</url>
    </attachment>
  </attachments>
</ticket>
