<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-11T15:34:53+00:00</created-at>
  <creator-id type="integer">46638</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1941</number>
  <permalink>autosave-generates-error-when-one-to-one-association-is-empty-after-being-accessed</permalink>
  <priority type="integer">1201</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord autosave</tag>
  <title>autosave generates error when one-to-one association is empty after being accessed.</title>
  <updated-at type="datetime">2009-02-22T02:22:50+00:00</updated-at>
  <user-id type="integer">141</user-id>
  <version type="integer">6</version>
  <user-name>Michael Koziarski</user-name>
  <creator-name>pete_lacey</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1941</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I'm not sure how best to phrase this issue, and it might ultimately be a problem with association proxies, but the problem I am seeing in Rails Edge (as of 2009-Feb-11) is visible when working with autosave.  (Actually, I'm working with nested attributes, but they turn on autosave by default.)  In a nutshell:

@@@ ruby
class Entity &lt; ActiveRecord::Base
  has_one :person, :autosave =&gt; true
end
=&gt; nil

class Person &lt; ActiveRecord::Base
end
=&gt; nil

e =  Entity.new
=&gt; #&lt;Entity id: nil, ... &gt;

e.valid?
=&gt; true

e.person
=&gt; nil

e.valid?
NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.each
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:198:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activesupport/lib/active_support/core_ext/object/misc.rb:39:in `returning'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:197:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:184:in `valid?'
	from (irb):64:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `each'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `valid?'
	from (irb):64
@@@

In looking around (amateurishly) it seems the problem is that after accessing the 'person' association, the #loaded? method on the has_one association proxy is returning true even though nothing is loaded.

This sounds somewhat like this old issue: http://dev.rubyonrails.org/ticket/5767</original-body>
  <latest-body>I'm not sure how best to phrase this issue, and it might ultimately be a problem with association proxies, but the problem I am seeing in Rails Edge (as of 2009-Feb-11) is visible when working with autosave.  (Actually, I'm working with nested attributes, but they turn on autosave by default.)  In a nutshell:

@@@ ruby
class Entity &lt; ActiveRecord::Base
  has_one :person, :autosave =&gt; true
end
=&gt; nil

class Person &lt; ActiveRecord::Base
end
=&gt; nil

e =  Entity.new
=&gt; #&lt;Entity id: nil, ... &gt;

e.valid?
=&gt; true

e.person
=&gt; nil

e.valid?
NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.each
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:198:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activesupport/lib/active_support/core_ext/object/misc.rb:39:in `returning'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:197:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:184:in `valid?'
	from (irb):64:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `each'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `valid?'
	from (irb):64
@@@

In looking around (amateurishly) it seems the problem is that after accessing the 'person' association, the #loaded? method on the has_one association proxy is returning true even though nothing is loaded.

This sounds somewhat like this old issue: http://dev.rubyonrails.org/ticket/5767</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm not sure how best to phrase this issue, and it might
ultimately be a problem with association proxies, but the problem I
am seeing in Rails Edge (as of 2009-Feb-11) is visible when working
with autosave. (Actually, I'm working with nested attributes, but
they turn on autosave by default.) In a nutshell:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Entity &amp;lt; ActiveRecord::Base
  has_one :person, :autosave =&amp;gt; true
end
=&amp;gt; nil

class Person &amp;lt; ActiveRecord::Base
end
=&amp;gt; nil

e =  Entity.new
=&amp;gt; #&amp;lt;Entity id: nil, ... &amp;gt;

e.valid?
=&amp;gt; true

e.person
=&amp;gt; nil

e.valid?
NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.each
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:198:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activesupport/lib/active_support/core_ext/object/misc.rb:39:in `returning'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:197:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:184:in `valid?'
	from (irb):64:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `each'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `valid?'
	from (irb):64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In looking around (amateurishly) it seems the problem is that
after accessing the 'person' association, the #loaded? method on
the has_one association proxy is returning true even though nothing
is loaded.&lt;/p&gt;
&lt;p&gt;This sounds somewhat like this old issue: &lt;a href=&quot;http://dev.rubyonrails.org/ticket/5767&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure how best to phrase this issue, and it might ultimately be a problem with association proxies, but the problem I am seeing in Rails Edge (as of 2009-Feb-11) is visible when working with autosave.  (Actually, I'm working with nested attributes, but they turn on autosave by default.)  In a nutshell:

@@@ ruby
class Entity &lt; ActiveRecord::Base
  has_one :person, :autosave =&gt; true
end
=&gt; nil

class Person &lt; ActiveRecord::Base
end
=&gt; nil

e =  Entity.new
=&gt; #&lt;Entity id: nil, ... &gt;

e.valid?
=&gt; true

e.person
=&gt; nil

e.valid?
NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.each
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:198:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activesupport/lib/active_support/core_ext/object/misc.rb:39:in `returning'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:197:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:184:in `valid?'
	from (irb):64:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `each'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `valid?'
	from (irb):64
@@@

In looking around (amateurishly) it seems the problem is that after accessing the 'person' association, the #loaded? method on the has_one association proxy is returning true even though nothing is loaded.

This sounds somewhat like this old issue: http://dev.rubyonrails.org/ticket/5767</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure how best to phrase this issue, and it might
ultimately be a problem with association proxies, but the problem I
am seeing in Rails Edge (as of 2009-Feb-11) is visible when working
with autosave. (Actually, I'm working with nested attributes, but
they turn on autosave by default.) In a nutshell:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Entity &amp;lt; ActiveRecord::Base
  has_one :person, :autosave =&amp;gt; true
end
=&amp;gt; nil

class Person &amp;lt; ActiveRecord::Base
end
=&amp;gt; nil

e =  Entity.new
=&amp;gt; #&amp;lt;Entity id: nil, ... &amp;gt;

e.valid?
=&amp;gt; true

e.person
=&amp;gt; nil

e.valid?
NoMethodError: You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.each
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:198:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activesupport/lib/active_support/core_ext/object/misc.rb:39:in `returning'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:197:in `autosave_association_valid?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:184:in `valid?'
	from (irb):64:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `each'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `all?'
	from /home/placey/Development/tgrii/webapp/vendor/rails/activerecord/lib/active_record/autosave_association.rb:179:in `valid?'
	from (irb):64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In looking around (amateurishly) it seems the problem is that
after accessing the 'person' association, the #loaded? method on
the has_one association proxy is returning true even though nothing
is loaded.&lt;/p&gt;
&lt;p&gt;This sounds somewhat like this old issue: &lt;a href=&quot;http://dev.rubyonrails.org/ticket/5767&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T15:34:53+00:00</created-at>
      <creator-id type="integer">46638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1941</number>
      <permalink>autosave-generates-error-when-one-to-one-association-is-empty-after-being-accessed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord autosave</tag>
      <title>autosave generates error when one-to-one association is empty after being accessed.</title>
      <updated-at type="datetime">2009-02-11T15:34:56+00:00</updated-at>
      <user-id type="integer">46638</user-id>
      <version type="integer">1</version>
      <user-name>pete_lacey</user-name>
      <creator-name>pete_lacey</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1941</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I could reproduce your example =&gt; same error.

I tried to reproduce it with the patch for #1930 (better validations for autosave) =&gt; no error.

The last patch solves your problem: #1930.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I could reproduce your example =&amp;gt; same error.&lt;/p&gt;
&lt;p&gt;I tried to reproduce it with the patch for &lt;a href=&quot;/projects/8994/tickets/1930&quot; title=&quot;Ticket #1930&quot;&gt;#1930&lt;/a&gt;
(better validations for autosave) =&amp;gt; no error.&lt;/p&gt;
&lt;p&gt;The last patch solves your problem: &lt;a href=&quot;/projects/8994/tickets/1930&quot; title=&quot;Ticket #1930&quot;&gt;#1930&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T16:28:33+00:00</created-at>
      <creator-id type="integer">46638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1941</number>
      <permalink>autosave-generates-error-when-one-to-one-association-is-empty-after-being-accessed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord autosave</tag>
      <title>autosave generates error when one-to-one association is empty after being accessed.</title>
      <updated-at type="datetime">2009-02-11T16:28:34+00:00</updated-at>
      <user-id type="integer">4065</user-id>
      <version type="integer">2</version>
      <user-name>Gaspard Bucher</user-name>
      <creator-name>pete_lacey</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1941</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Gaspard,

Thanks!  I thought that patch would help too, and tried it before reporting.  Unfortunately, it's mutually incompatible right now (from a Git point of view at least) with the patch for [#1892](http://rails.lighthouseapp.com/projects/8994/tickets/1892-nested-attributes-should-not-have-meaningful-hash-keys#ticket-1892-21 &quot;#1892&quot;) which I also need. So I was unable to apply it.  I guess I'll wait for both patches to be rebased and committed to trunk.  Maybe there's another way, but I'm a Git newb.

Thanks again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Gaspard,&lt;/p&gt;
&lt;p&gt;Thanks! I thought that patch would help too, and tried it before
reporting. Unfortunately, it's mutually incompatible right now
(from a Git point of view at least) with the patch for &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1892-nested-attributes-should-not-have-meaningful-hash-keys#ticket-1892-21&quot; title=&quot;#1892&quot;&gt;#1892&lt;/a&gt; which I also need. So I was unable to apply
it. I guess I'll wait for both patches to be rebased and committed
to trunk. Maybe there's another way, but I'm a Git newb.&lt;/p&gt;
&lt;p&gt;Thanks again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T17:43:13+00:00</created-at>
      <creator-id type="integer">46638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1941</number>
      <permalink>autosave-generates-error-when-one-to-one-association-is-empty-after-being-accessed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord autosave</tag>
      <title>autosave generates error when one-to-one association is empty after being accessed.</title>
      <updated-at type="datetime">2009-02-11T17:43:15+00:00</updated-at>
      <user-id type="integer">46638</user-id>
      <version type="integer">3</version>
      <user-name>pete_lacey</user-name>
      <creator-name>pete_lacey</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1941</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Final note.  I got a little smarter about Git and was able to apply both patches.  I can now confirm this works and works in conjunction with nested attributes.

Thanks, Gaspard.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Final note. I got a little smarter about Git and was able to
apply both patches. I can now confirm this works and works in
conjunction with nested attributes.&lt;/p&gt;
&lt;p&gt;Thanks, Gaspard.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T18:39:28+00:00</created-at>
      <creator-id type="integer">46638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1941</number>
      <permalink>autosave-generates-error-when-one-to-one-association-is-empty-after-being-accessed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord autosave</tag>
      <title>autosave generates error when one-to-one association is empty after being accessed.</title>
      <updated-at type="datetime">2009-02-11T18:39:33+00:00</updated-at>
      <user-id type="integer">46638</user-id>
      <version type="integer">4</version>
      <user-name>pete_lacey</user-name>
      <creator-name>pete_lacey</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1941</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-17T08:35:34+00:00</created-at>
      <creator-id type="integer">46638</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1941</number>
      <permalink>autosave-generates-error-when-one-to-one-association-is-empty-after-being-accessed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord autosave</tag>
      <title>autosave generates error when one-to-one association is empty after being accessed.</title>
      <updated-at type="datetime">2009-02-17T08:35:39+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">5</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>pete_lacey</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1941</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicate of #1930 if that patch fixes it</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicate of &lt;a href=&quot;/projects/8994/tickets/1930&quot; title=&quot;Ticket #1930&quot;&gt;#1930&lt;/a&gt; if that patch fixes it&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-22T02:22:48+00:00</created-at>
      <creator-id type="integer">46638</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1941</number>
      <permalink>autosave-generates-error-when-one-to-one-association-is-empty-after-being-accessed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord autosave</tag>
      <title>autosave generates error when one-to-one association is empty after being accessed.</title>
      <updated-at type="datetime">2009-02-22T02:22:50+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>pete_lacey</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1941</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
