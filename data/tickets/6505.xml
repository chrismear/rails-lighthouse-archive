<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-02T12:45:19+00:00</created-at>
  <creator-id type="integer">22814</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6505</number>
  <permalink>attr_writeonce-in-ar-models</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;activerecord rails3&quot;</tag>
  <title>attr_writeonce in AR models</title>
  <updated-at type="datetime">2011-03-02T12:50:24+00:00</updated-at>
  <user-id type="integer">22814</user-id>
  <version type="integer">1</version>
  <user-name>qoobaa</user-name>
  <creator-name>qoobaa</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6505</url>
  <priority-name nil="true"></priority-name>
  <original-body>I've spent a while looking for &quot;write once&quot; functionality in Active Record, but it seems there's anything like that at the moment. I'd expect that attr_writeonce allows to change the attribute from nil to a value (exactly once). It's similar to attr_readonly but it works for persisted records. Do you think it's useful? I can try to prepare a patch if there's a chance that it gets merged to Rails.

Method attr_readonly seems to be kind of &quot;badly named&quot;. It actually allows to write a &quot;readonly&quot; attribute, but only when creating the record. I think it'd better to use something like

@@@ ruby
attr_writeonce :title, :on =&gt; :create
@@@

IMO attr_readonly shouldn't allow to change the attribute at all.</original-body>
  <latest-body>I've spent a while looking for &quot;write once&quot; functionality in Active Record, but it seems there's anything like that at the moment. I'd expect that attr_writeonce allows to change the attribute from nil to a value (exactly once). It's similar to attr_readonly but it works for persisted records. Do you think it's useful? I can try to prepare a patch if there's a chance that it gets merged to Rails.

Method attr_readonly seems to be kind of &quot;badly named&quot;. It actually allows to write a &quot;readonly&quot; attribute, but only when creating the record. I think it'd better to use something like

@@@ ruby
attr_writeonce :title, :on =&gt; :create
@@@

IMO attr_readonly shouldn't allow to change the attribute at all.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've spent a while looking for &quot;write once&quot; functionality in
Active Record, but it seems there's anything like that at the
moment. I'd expect that attr_writeonce allows to change the
attribute from nil to a value (exactly once). It's similar to
attr_readonly but it works for persisted records. Do you think it's
useful? I can try to prepare a patch if there's a chance that it
gets merged to Rails.&lt;/p&gt;
&lt;p&gt;Method attr_readonly seems to be kind of &quot;badly named&quot;. It
actually allows to write a &quot;readonly&quot; attribute, but only when
creating the record. I think it'd better to use something like&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;attr_writeonce :title, :on =&amp;gt; :create&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;IMO attr_readonly shouldn't allow to change the attribute at
all.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've spent a while looking for &quot;write once&quot; functionality in Active Record, but it seems there's anything like that at the moment. I'd expect that attr_writeonce allows to change the attribute from nil to a value (exactly once). It's similar to attr_readonly but it works for persisted records. Do you think it's useful? I can try to prepare a patch if there's a chance that it gets merged to Rails.

Method attr_readonly seems to be kind of &quot;badly named&quot;. It actually allows to write a &quot;readonly&quot; attribute, but only when creating the record. I think it'd better to use something like

@@@ ruby
attr_writeonce :title, :on =&gt; :create
@@@

IMO attr_readonly shouldn't allow to change the attribute at all.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've spent a while looking for &quot;write once&quot; functionality in
Active Record, but it seems there's anything like that at the
moment. I'd expect that attr_writeonce allows to change the
attribute from nil to a value (exactly once). It's similar to
attr_readonly but it works for persisted records. Do you think it's
useful? I can try to prepare a patch if there's a chance that it
gets merged to Rails.&lt;/p&gt;
&lt;p&gt;Method attr_readonly seems to be kind of &quot;badly named&quot;. It
actually allows to write a &quot;readonly&quot; attribute, but only when
creating the record. I think it'd better to use something like&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;attr_writeonce :title, :on =&amp;gt; :create&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;IMO attr_readonly shouldn't allow to change the attribute at
all.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-02T12:45:19+00:00</created-at>
      <creator-id type="integer">22814</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6505</number>
      <permalink>attr_writeonce-in-ar-models</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>attr_writeonce in AR models</title>
      <updated-at type="datetime">2011-03-02T12:50:22+00:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">1</version>
      <user-name>qoobaa</user-name>
      <creator-name>qoobaa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6505</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
