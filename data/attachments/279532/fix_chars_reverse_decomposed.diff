From 9b54bad1adfcfe23c55ec045dd5728aa62ce1f2d Mon Sep 17 00:00:00 2001
From: Matias Flores <mflores@atlanware.com>
Date: Sat, 26 Sep 2009 21:32:21 -0300
Subject: [PATCH] Fix chars.reverse for multibyte decomposed strings

---
 .../lib/active_support/multibyte/chars.rb          |    2 +-
 activesupport/test/multibyte_chars_test.rb         |   11 +++++++++++
 2 files changed, 12 insertions(+), 1 deletions(-)

diff --git a/activesupport/lib/active_support/multibyte/chars.rb b/activesupport/lib/active_support/multibyte/chars.rb
index 579ccc1..c9bcfbd 100644
--- a/activesupport/lib/active_support/multibyte/chars.rb
+++ b/activesupport/lib/active_support/multibyte/chars.rb
@@ -321,7 +321,7 @@ module ActiveSupport #:nodoc:
       # Example:
       #   'Café'.mb_chars.reverse.to_s #=> 'éfaC'
       def reverse
-        chars(self.class.u_unpack(@wrapped_string).reverse.pack('U*'))
+        chars(self.class.g_unpack(@wrapped_string).reverse.flatten.pack('U*'))
       end
 
       # Implements Unicode-aware slice with codepoints. Slicing on one point returns the codepoints for that
diff --git a/activesupport/test/multibyte_chars_test.rb b/activesupport/test/multibyte_chars_test.rb
index 680936d..ac7d6c8 100644
--- a/activesupport/test/multibyte_chars_test.rb
+++ b/activesupport/test/multibyte_chars_test.rb
@@ -378,6 +378,17 @@ class MultibyteCharsUTF8BehaviourTest < Test::Unit::TestCase
     assert_equal 'わちにこ', @chars.reverse
   end
 
+  def test_reverse_should_work_with_normalized_strings
+    str = 'bös'
+    reversed_str = 'söb'
+    assert_equal chars(reversed_str).normalize(:kc), chars(str).normalize(:kc).reverse
+    assert_equal chars(reversed_str).normalize(:c), chars(str).normalize(:c).reverse
+    assert_equal chars(reversed_str).normalize(:d), chars(str).normalize(:d).reverse
+    assert_equal chars(reversed_str).normalize(:kd), chars(str).normalize(:kd).reverse
+    assert_equal chars(reversed_str).decompose, chars(str).decompose.reverse
+    assert_equal chars(reversed_str).compose, chars(str).compose.reverse
+  end
+
   def test_slice_should_take_character_offsets
     assert_equal nil, ''.mb_chars.slice(0)
     assert_equal 'こ', @chars.slice(0)
-- 
1.6.0.4

