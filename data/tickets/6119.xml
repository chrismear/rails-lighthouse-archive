<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-13T13:08:30+00:00</created-at>
  <creator-id type="integer">112681</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6119</number>
  <permalink>the-javascript_include_view_js-helper-method</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>javascript &quot;patch rails 310beta&quot;</tag>
  <title>Patch to add the javascript_include_view_js helper method.</title>
  <updated-at type="datetime">2011-03-14T00:01:01+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">7</version>
  <user-name>rails</user-name>
  <creator-name>matt (at ifieldtech)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
  <priority-name>Low</priority-name>
  <original-body>With the release of Rails 3 and the encouragement to use unobtrusive JavaScript, I noticed that there was something missing from Rails 3; a MVC style helper (I know, bad example) for including JavaScript sources. Currently, you have to use javascript_include_tag to include your unobtrusive JavaScript sources. However, what if only half of your controller views actually use the JavaScript source? It seems sloppy to include a large JavaScript source file when it will not be used. It also seems sloppy to include unobtrusive JavaScript in a &lt;script&gt;&lt;/script&gt; tag within your HTML view.

I expected Rails 3 to have a feature to automatically include JavaScript sources based off the current view's controller. However, that is not the case.

So, to make unobtrusive JavaScript flow better with Rails 3, I created the javascript_include_view_js helper method. What does this method do? Well, this method (when added to your layout view) will automatically load any JavaScript sources named after the current controller. If no such JavaScript source exists, then it doesn't even create the tag. For example, lets say I have a controller called &quot;privacy&quot; and have some awesome unobtrusive JavaScript (that will not be use anywhere else), all I have to do is place &quot;privacy_java.js&quot; in public/javascripts. Assuming I placed javascript_include_view_js in my layout view, the JavaScript will be automatically referenced in the appropriate script tag.

The javascript_include_view_js helper method can also handle deep (nested, treed, whatever you want to call it) controller names. For example, I have a Customer Management System (CMS) within one of my Rails applications. The Access controller handles all login and logout procedures. The controller name is &quot;cms/access.&quot; If I need to include any JavaScript sources, I just name it the file &quot;cms_access_java.js&quot; and place it in public/javascripts. javascript_include_view_js will automatically format the controller so that it can hunt for the JavaScript source file.

Please take a look and tell me what you think. Is this a good contribution, or is this helper method better as a plugin?

My rails fork can be found at: github.com/mdoza/rails under the controller_java branch.

Thanks,

Matt</original-body>
  <latest-body>With the release of Rails 3 and the encouragement to use unobtrusive JavaScript, I noticed that there was something missing from Rails 3; a MVC style helper (I know, bad example) for including JavaScript sources. Currently, you have to use javascript_include_tag to include your unobtrusive JavaScript sources. However, what if only half of your controller views actually use the JavaScript source? It seems sloppy to include a large JavaScript source file when it will not be used. It also seems sloppy to include unobtrusive JavaScript in a &lt;script&gt;&lt;/script&gt; tag within your HTML view.

I expected Rails 3 to have a feature to automatically include JavaScript sources based off the current view's controller. However, that is not the case.

So, to make unobtrusive JavaScript flow better with Rails 3, I created the javascript_include_view_js helper method. What does this method do? Well, this method (when added to your layout view) will automatically load any JavaScript sources named after the current controller. If no such JavaScript source exists, then it doesn't even create the tag. For example, lets say I have a controller called &quot;privacy&quot; and have some awesome unobtrusive JavaScript (that will not be use anywhere else), all I have to do is place &quot;privacy_java.js&quot; in public/javascripts. Assuming I placed javascript_include_view_js in my layout view, the JavaScript will be automatically referenced in the appropriate script tag.

The javascript_include_view_js helper method can also handle deep (nested, treed, whatever you want to call it) controller names. For example, I have a Customer Management System (CMS) within one of my Rails applications. The Access controller handles all login and logout procedures. The controller name is &quot;cms/access.&quot; If I need to include any JavaScript sources, I just name it the file &quot;cms_access_java.js&quot; and place it in public/javascripts. javascript_include_view_js will automatically format the controller so that it can hunt for the JavaScript source file.

Please take a look and tell me what you think. Is this a good contribution, or is this helper method better as a plugin?

My rails fork can be found at: github.com/mdoza/rails under the controller_java branch.

Thanks,

Matt</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With the release of Rails 3 and the encouragement to use
unobtrusive JavaScript, I noticed that there was something missing
from Rails 3; a MVC style helper (I know, bad example) for
including JavaScript sources. Currently, you have to use
javascript_include_tag to include your unobtrusive JavaScript
sources. However, what if only half of your controller views
actually use the JavaScript source? It seems sloppy to include a
large JavaScript source file when it will not be used. It also
seems sloppy to include unobtrusive JavaScript in a tag within your
HTML view.&lt;/p&gt;
&lt;p&gt;I expected Rails 3 to have a feature to automatically include
JavaScript sources based off the current view's controller.
However, that is not the case.&lt;/p&gt;
&lt;p&gt;So, to make unobtrusive JavaScript flow better with Rails 3, I
created the javascript_include_view_js helper method. What does
this method do? Well, this method (when added to your layout view)
will automatically load any JavaScript sources named after the
current controller. If no such JavaScript source exists, then it
doesn't even create the tag. For example, lets say I have a
controller called &quot;privacy&quot; and have some awesome unobtrusive
JavaScript (that will not be use anywhere else), all I have to do
is place &quot;privacy_java.js&quot; in public/javascripts. Assuming I placed
javascript_include_view_js in my layout view, the JavaScript will
be automatically referenced in the appropriate script tag.&lt;/p&gt;
&lt;p&gt;The javascript_include_view_js helper method can also handle
deep (nested, treed, whatever you want to call it) controller
names. For example, I have a Customer Management System (CMS)
within one of my Rails applications. The Access controller handles
all login and logout procedures. The controller name is
&quot;cms/access.&quot; If I need to include any JavaScript sources, I just
name it the file &quot;cms_access_java.js&quot; and place it in
public/javascripts. javascript_include_view_js will automatically
format the controller so that it can hunt for the JavaScript source
file.&lt;/p&gt;
&lt;p&gt;Please take a look and tell me what you think. Is this a good
contribution, or is this helper method better as a plugin?&lt;/p&gt;
&lt;p&gt;My rails fork can be found at: github.com/mdoza/rails under the
controller_java branch.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Matt&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With the release of Rails 3 and the encouragement to use unobtrusive JavaScript, I noticed that there was something missing from Rails 3; a MVC style helper (I know, bad example) for including JavaScript sources. Currently, you have to use javascript_include_tag to include your unobtrusive JavaScript sources. However, what if only half of your controller views actually use the JavaScript source? It seems sloppy to include a large JavaScript source file when it will not be used. It also seems sloppy to include unobtrusive JavaScript in a &lt;script&gt;&lt;/script&gt; tag within your HTML view.

I expected Rails 3 to have a feature to automatically include JavaScript sources based off the current view's controller. However, that is not the case.

So, to make unobtrusive JavaScript flow better with Rails 3, I created the javascript_include_view_js helper method. What does this method do? Well, this method (when added to your layout view) will automatically load any JavaScript sources named after the current controller. If no such JavaScript source exists, then it doesn't even create the tag. For example, lets say I have a controller called &quot;privacy&quot; and have some awesome unobtrusive JavaScript (that will not be use anywhere else), all I have to do is place &quot;privacy_java.js&quot; in public/javascripts. Assuming I placed javascript_include_view_js in my layout view, the JavaScript will be automatically referenced in the appropriate script tag.

The javascript_include_view_js helper method can also handle deep (nested, treed, whatever you want to call it) controller names. For example, I have a Customer Management System (CMS) within one of my Rails applications. The Access controller handles all login and logout procedures. The controller name is &quot;cms/access.&quot; If I need to include any JavaScript sources, I just name it the file &quot;cms_access_java.js&quot; and place it in public/javascripts. javascript_include_view_js will automatically format the controller so that it can hunt for the JavaScript source file.

Please take a look and tell me what you think. Is this a good contribution, or is this helper method better as a plugin?

My rails fork can be found at: github.com/mdoza/rails under the controller_java branch.

Thanks,

Matt</body>
      <body-html>&lt;div&gt;&lt;p&gt;With the release of Rails 3 and the encouragement to use
unobtrusive JavaScript, I noticed that there was something missing
from Rails 3; a MVC style helper (I know, bad example) for
including JavaScript sources. Currently, you have to use
javascript_include_tag to include your unobtrusive JavaScript
sources. However, what if only half of your controller views
actually use the JavaScript source? It seems sloppy to include a
large JavaScript source file when it will not be used. It also
seems sloppy to include unobtrusive JavaScript in a tag within your
HTML view.&lt;/p&gt;
&lt;p&gt;I expected Rails 3 to have a feature to automatically include
JavaScript sources based off the current view's controller.
However, that is not the case.&lt;/p&gt;
&lt;p&gt;So, to make unobtrusive JavaScript flow better with Rails 3, I
created the javascript_include_view_js helper method. What does
this method do? Well, this method (when added to your layout view)
will automatically load any JavaScript sources named after the
current controller. If no such JavaScript source exists, then it
doesn't even create the tag. For example, lets say I have a
controller called &quot;privacy&quot; and have some awesome unobtrusive
JavaScript (that will not be use anywhere else), all I have to do
is place &quot;privacy_java.js&quot; in public/javascripts. Assuming I placed
javascript_include_view_js in my layout view, the JavaScript will
be automatically referenced in the appropriate script tag.&lt;/p&gt;
&lt;p&gt;The javascript_include_view_js helper method can also handle
deep (nested, treed, whatever you want to call it) controller
names. For example, I have a Customer Management System (CMS)
within one of my Rails applications. The Access controller handles
all login and logout procedures. The controller name is
&quot;cms/access.&quot; If I need to include any JavaScript sources, I just
name it the file &quot;cms_access_java.js&quot; and place it in
public/javascripts. javascript_include_view_js will automatically
format the controller so that it can hunt for the JavaScript source
file.&lt;/p&gt;
&lt;p&gt;Please take a look and tell me what you think. Is this a good
contribution, or is this helper method better as a plugin?&lt;/p&gt;
&lt;p&gt;My rails fork can be found at: github.com/mdoza/rails under the
controller_java branch.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Matt&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-06T01:32:46+00:00</created-at>
      <creator-id type="integer">112681</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6119</number>
      <permalink>the-javascript_include_view_js-helper-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>javascript &quot;patch rails 3.1.0.beta&quot;</tag>
      <title>The javascript_include_view_js helper method.</title>
      <updated-at type="datetime">2010-12-06T01:35:16+00:00</updated-at>
      <user-id type="integer">112681</user-id>
      <version type="integer">1</version>
      <user-name>matt (at ifieldtech)</user-name>
      <creator-name>matt (at ifieldtech)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-06T01:35:42+00:00</created-at>
      <creator-id type="integer">112681</creator-id>
      <diffable-attributes type="yaml">--- 
:title: The javascript_include_view_js helper method.
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6119</number>
      <permalink>the-javascript_include_view_js-helper-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>javascript &quot;patch rails 3.1.0.beta&quot;</tag>
      <title>Patch to add the javascript_include_view_js helper method.</title>
      <updated-at type="datetime">2010-12-06T01:35:44+00:00</updated-at>
      <user-id type="integer">112681</user-id>
      <version type="integer">2</version>
      <user-name>matt (at ifieldtech)</user-name>
      <creator-name>matt (at ifieldtech)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I had developed a plugin around 6 months ago which provided exactly the same functionality you are talking about. It did not last long. Over the time we found it was more of a hassle to get the js files totally decoupled.

It also meant one more js file for browser to get: one for base file and one for controller (if any).

Just my thought. Of course your mileage will vary if you have a really client rich heavy project.

I personally think something like this should start as a gem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had developed a plugin around 6 months ago which provided
exactly the same functionality you are talking about. It did not
last long. Over the time we found it was more of a hassle to get
the js files totally decoupled.&lt;/p&gt;
&lt;p&gt;It also meant one more js file for browser to get: one for base
file and one for controller (if any).&lt;/p&gt;
&lt;p&gt;Just my thought. Of course your mileage will vary if you have a
really client rich heavy project.&lt;/p&gt;
&lt;p&gt;I personally think something like this should start as a
gem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-06T05:09:50+00:00</created-at>
      <creator-id type="integer">112681</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6119</number>
      <permalink>the-javascript_include_view_js-helper-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>javascript &quot;patch rails 3.1.0.beta&quot;</tag>
      <title>Patch to add the javascript_include_view_js helper method.</title>
      <updated-at type="datetime">2010-12-06T05:09:55+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>matt (at ifieldtech)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&#8220;You&#8217;re a vile one, &lt;a href=&quot;http://www.nikedunks2011.com/&quot;&gt;nike dunks&lt;/a&gt; Mr. Grinch! You have termites in your smile. &lt;a href=&quot;http://www.nikedunks2011.com/&quot;&gt;nike shoes 2011&lt;/a&gt; You have all the tender sweetness of a seasick crocodile,&lt;a href=&quot;http://www.nikedunks2011.com/nike-dunks-c-155.html&quot;&gt;nike dunk sb&lt;/a&gt; Mr. Grinch!&#8221;Something tells me I&#8217;m going to hear words to that legendary song from Dr. Seuss&#8217;&lt;a href=&quot;http://www.nikedunks2011.com/nike-air-griffey-max-c-213.html&quot;&gt;Nike Air Griffey Max&lt;/a&gt; How the Grinch Stole Christmas and it isn&#8217;t just because the holiday season is upon us. It&#8217;s because&#160;Kobe Bryant&#160;plans to make his debut wearing the Grinch edition of the &lt;a href=&quot;http://www.nikedunks2011.com/nike-dunks-nike-dunk-high-c-155_212.html&quot;&gt;nike dunk high&lt;/a&gt; Zoom Kobe VI displayed to your left on the Lakers&#8217; &lt;a href=&quot;http://www.nikedunks2011.com/nike-basketball-shoes-nike-lebron-james-c-235_242.html&quot;&gt;lebron james shoes&lt;/a&gt; Christmas Day game against the Miami Heat (first reported by The Basketball &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-max-c-215.html&quot;&gt;nike air max&lt;/a&gt;&#8217;&#160;Trey Kerby&#160;and displayed at marqueesole.com). &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-max-nike-air-max-90-c-215_220.html&quot;&gt;air max 90&lt;/a&gt; It&#8217;s not exactly the prettiest site to see on your new plasma HD television and the brightness of the Black Mamba&#8217;s &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-force-1-c-18.html&quot;&gt;nike force one&lt;/a&gt; new shoe may make you spend all your Christmas money on seeing an eye doctor. &lt;a href=&quot;http://www.nikedunks2011.com/nike-basketball-shoes-c-235.html&quot;&gt;basketball shoes&lt;/a&gt; Considering the shoes go on sale Dec. 26, you very may well have to decide spending your money between Kobe&#8217;s &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-jordan-c-17.html&quot;&gt;air jordan shoes&lt;/a&gt; new kicks or getting your vision back.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&amp;#8220;You&amp;#8217;re a vile one, &lt;a href=
&quot;http://www.nikedunks2011.com/&quot;&gt;nike dunks&lt;/a&gt; Mr. Grinch! You have
termites in your smile. &lt;a href=
&quot;http://www.nikedunks2011.com/&quot;&gt;nike shoes 2011&lt;/a&gt; You have all
the tender sweetness of a seasick crocodile,&lt;a href=
&quot;http://www.nikedunks2011.com/nike-dunks-c-155.html&quot;&gt;nike dunk
sb&lt;/a&gt; Mr. Grinch!&amp;#8221;Something tells me I&amp;#8217;m going to hear
words to that legendary song from Dr. Seuss&amp;#8217;&lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-griffey-max-c-213.html&quot;&gt;Nike
Air Griffey Max&lt;/a&gt; How the Grinch Stole Christmas and it
isn&amp;#8217;t just because the holiday season is upon us. It&amp;#8217;s
because&amp;nbsp;Kobe Bryant&amp;nbsp;plans to make his debut wearing the
Grinch edition of the &lt;a href=
&quot;http://www.nikedunks2011.com/nike-dunks-nike-dunk-high-c-155_212.html&quot;&gt;
nike dunk high&lt;/a&gt; Zoom Kobe VI displayed to your left on the
Lakers&amp;#8217; &lt;a href=
&quot;http://www.nikedunks2011.com/nike-basketball-shoes-nike-lebron-james-c-235_242.html&quot;&gt;
lebron james shoes&lt;/a&gt; Christmas Day game against the Miami Heat
(first reported by The Basketball &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-max-c-215.html&quot;&gt;nike air
max&lt;/a&gt;&amp;#8217;&amp;nbsp;Trey Kerby&amp;nbsp;and displayed at
marqueesole.com). &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-max-nike-air-max-90-c-215_220.html&quot;&gt;
air max 90&lt;/a&gt; It&amp;#8217;s not exactly the prettiest site to see on
your new plasma HD television and the brightness of the Black
Mamba&amp;#8217;s &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-force-1-c-18.html&quot;&gt;nike
force one&lt;/a&gt; new shoe may make you spend all your Christmas money
on seeing an eye doctor. &lt;a href=
&quot;http://www.nikedunks2011.com/nike-basketball-shoes-c-235.html&quot;&gt;basketball
shoes&lt;/a&gt; Considering the shoes go on sale Dec. 26, you very may
well have to decide spending your money between Kobe&amp;#8217;s
&lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-jordan-c-17.html&quot;&gt;air jordan
shoes&lt;/a&gt; new kicks or getting your vision back.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-13T10:06:09+00:00</created-at>
      <creator-id type="integer">112681</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6119</number>
      <permalink>the-javascript_include_view_js-helper-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>javascript &quot;patch rails 3.1.0.beta&quot;</tag>
      <title>Patch to add the javascript_include_view_js helper method.</title>
      <updated-at type="datetime">2010-12-13T13:08:30+00:00</updated-at>
      <user-id type="integer">128794</user-id>
      <version type="integer">4</version>
      <user-name>nike dunks</user-name>
      <creator-name>matt (at ifieldtech)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&#8220;You&#8217;re a vile one, &lt;a href=&quot;http://www.nikedunks2011.com/&quot;&gt;nike dunks&lt;/a&gt; Mr. Grinch! You have termites in your smile. &lt;a href=&quot;http://www.nikedunks2011.com/&quot;&gt;nike shoes 2011&lt;/a&gt; You have all the tender sweetness of a seasick crocodile,&lt;a href=&quot;http://www.nikedunks2011.com/nike-dunks-c-155.html&quot;&gt;nike dunk sb&lt;/a&gt; Mr. Grinch!&#8221;Something tells me I&#8217;m going to hear words to that legendary song from Dr. Seuss&#8217;&lt;a href=&quot;http://www.nikedunks2011.com/nike-air-griffey-max-c-213.html&quot;&gt;Nike Air Griffey Max&lt;/a&gt; How the Grinch Stole Christmas and it isn&#8217;t just because the holiday season is upon us. It&#8217;s because&#160;Kobe Bryant&#160;plans to make his debut wearing the Grinch edition of the &lt;a href=&quot;http://www.nikedunks2011.com/nike-dunks-nike-dunk-high-c-155_212.html&quot;&gt;nike dunk high&lt;/a&gt; Zoom Kobe VI displayed to your left on the Lakers&#8217; &lt;a href=&quot;http://www.nikedunks2011.com/nike-basketball-shoes-nike-lebron-james-c-235_242.html&quot;&gt;lebron james shoes&lt;/a&gt; Christmas Day game against the Miami Heat (first reported by The Basketball &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-max-c-215.html&quot;&gt;nike air max&lt;/a&gt;&#8217;&#160;Trey Kerby&#160;and displayed at marqueesole.com). &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-max-nike-air-max-90-c-215_220.html&quot;&gt;air max 90&lt;/a&gt; It&#8217;s not exactly the prettiest site to see on your new plasma HD television and the brightness of the Black Mamba&#8217;s &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-force-1-c-18.html&quot;&gt;nike force one&lt;/a&gt; new shoe may make you spend all your Christmas money on seeing an eye doctor. &lt;a href=&quot;http://www.nikedunks2011.com/nike-basketball-shoes-c-235.html&quot;&gt;basketball shoes&lt;/a&gt; Considering the shoes go on sale Dec. 26, you very may well have to decide spending your money between Kobe&#8217;s &lt;a href=&quot;http://www.nikedunks2011.com/nike-air-jordan-c-17.html&quot;&gt;air jordan shoes&lt;/a&gt; new kicks or getting your vision back.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&amp;#8220;You&amp;#8217;re a vile one, &lt;a href=
&quot;http://www.nikedunks2011.com/&quot;&gt;nike dunks&lt;/a&gt; Mr. Grinch! You have
termites in your smile. &lt;a href=
&quot;http://www.nikedunks2011.com/&quot;&gt;nike shoes 2011&lt;/a&gt; You have all
the tender sweetness of a seasick crocodile,&lt;a href=
&quot;http://www.nikedunks2011.com/nike-dunks-c-155.html&quot;&gt;nike dunk
sb&lt;/a&gt; Mr. Grinch!&amp;#8221;Something tells me I&amp;#8217;m going to hear
words to that legendary song from Dr. Seuss&amp;#8217;&lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-griffey-max-c-213.html&quot;&gt;Nike
Air Griffey Max&lt;/a&gt; How the Grinch Stole Christmas and it
isn&amp;#8217;t just because the holiday season is upon us. It&amp;#8217;s
because&amp;nbsp;Kobe Bryant&amp;nbsp;plans to make his debut wearing the
Grinch edition of the &lt;a href=
&quot;http://www.nikedunks2011.com/nike-dunks-nike-dunk-high-c-155_212.html&quot;&gt;
nike dunk high&lt;/a&gt; Zoom Kobe VI displayed to your left on the
Lakers&amp;#8217; &lt;a href=
&quot;http://www.nikedunks2011.com/nike-basketball-shoes-nike-lebron-james-c-235_242.html&quot;&gt;
lebron james shoes&lt;/a&gt; Christmas Day game against the Miami Heat
(first reported by The Basketball &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-max-c-215.html&quot;&gt;nike air
max&lt;/a&gt;&amp;#8217;&amp;nbsp;Trey Kerby&amp;nbsp;and displayed at
marqueesole.com). &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-max-nike-air-max-90-c-215_220.html&quot;&gt;
air max 90&lt;/a&gt; It&amp;#8217;s not exactly the prettiest site to see on
your new plasma HD television and the brightness of the Black
Mamba&amp;#8217;s &lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-force-1-c-18.html&quot;&gt;nike
force one&lt;/a&gt; new shoe may make you spend all your Christmas money
on seeing an eye doctor. &lt;a href=
&quot;http://www.nikedunks2011.com/nike-basketball-shoes-c-235.html&quot;&gt;basketball
shoes&lt;/a&gt; Considering the shoes go on sale Dec. 26, you very may
well have to decide spending your money between Kobe&amp;#8217;s
&lt;a href=
&quot;http://www.nikedunks2011.com/nike-air-jordan-c-17.html&quot;&gt;air jordan
shoes&lt;/a&gt; new kicks or getting your vision back.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-13T10:06:10+00:00</created-at>
      <creator-id type="integer">112681</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6119</number>
      <permalink>the-javascript_include_view_js-helper-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>javascript &quot;patch rails 3.1.0.beta&quot;</tag>
      <title>Patch to add the javascript_include_view_js helper method.</title>
      <updated-at type="datetime">2010-12-13T13:08:30+00:00</updated-at>
      <user-id type="integer">128794</user-id>
      <version type="integer">5</version>
      <user-name>nike dunks</user-name>
      <creator-name>matt (at ifieldtech)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-14T00:00:12+00:00</created-at>
      <creator-id type="integer">112681</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: javascript &quot;patch rails 3.1.0.beta&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6119</number>
      <permalink>the-javascript_include_view_js-helper-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>javascript &quot;patch rails 310beta&quot;</tag>
      <title>Patch to add the javascript_include_view_js helper method.</title>
      <updated-at type="datetime">2011-03-14T00:00:42+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">6</version>
      <user-name>rails</user-name>
      <creator-name>matt (at ifieldtech)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-14T00:00:12+00:00</created-at>
      <creator-id type="integer">112681</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6119</number>
      <permalink>the-javascript_include_view_js-helper-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>javascript &quot;patch rails 310beta&quot;</tag>
      <title>Patch to add the javascript_include_view_js helper method.</title>
      <updated-at type="datetime">2011-03-14T00:01:01+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">7</version>
      <user-name>rails</user-name>
      <creator-name>matt (at ifieldtech)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6119</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a963dc914faa4663931756fbf635ea11ad744e8c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-06T01:32:46+00:00</created-at>
      <filename>javascript_include_view_js.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">803524</id>
      <size type="integer">2867</size>
      <uploader-id type="integer">112681</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/803524/javascript_include_view_js.diff</url>
    </attachment>
  </attachments>
</ticket>
