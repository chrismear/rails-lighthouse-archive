<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-29T13:26:02+01:00</created-at>
  <creator-id type="integer">16383</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1134</number>
  <permalink>counter_cache-destroy-concurrency-issues</permalink>
  <priority type="integer">437</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord affected before concurrency counter_cache destroy minus negative patch rows synchronization</tag>
  <title>counter_cache destroy concurrency issues</title>
  <updated-at type="datetime">2009-03-11T19:02:11+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">8</version>
  <user-name>Pratik</user-name>
  <creator-name>Dmitry Polushkin</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>You have the PostController, you are loading data into a variable to destroy it. For example two processes want to destroy the same post. One of them are getting data from the load_post and the second one got the same object of the post. They trying to destroy and no exception will be thrown, and the counter in topic will be decremented twice.

@@@ ruby
before_filter :load_post

def destroy
  @post.destroy
end

def load_post
  @post = Post.find_by_id(params[:id])
end
@@@

@@@ ruby
class Topic
  has_one :posts, :dependent =&gt; :destroy
end

class Post
  belongs_to :topic, :counter_cache =&gt; true
end

class CounterCacheConcurrencyTest &lt; Test::Unit::TestCase
  def test_counter_cache_concurrency_test
    t = Topic.new

    posts_count_old = t.posts_count

    t.posts &lt;&lt; Post.create

    

    p = t.posts.first
    p.destroy
    p.destroy
    
    # Will be failed, because destroy will invoke decrement_counter twice
    # and the actual value will be -1
    assert_equal posts_count_old, t.posts_count
  end
end
@@@

Could be fixed by adding an invoke of the after_filter, if destroy will affect at least one record in the database.</original-body>
  <latest-body>You have the PostController, you are loading data into a variable to destroy it. For example two processes want to destroy the same post. One of them are getting data from the load_post and the second one got the same object of the post. They trying to destroy and no exception will be thrown, and the counter in topic will be decremented twice.

@@@ ruby
before_filter :load_post

def destroy
  @post.destroy
end

def load_post
  @post = Post.find_by_id(params[:id])
end
@@@

@@@ ruby
class Topic
  has_one :posts, :dependent =&gt; :destroy
end

class Post
  belongs_to :topic, :counter_cache =&gt; true
end

class CounterCacheConcurrencyTest &lt; Test::Unit::TestCase
  def test_counter_cache_concurrency_test
    t = Topic.new

    posts_count_old = t.posts_count

    t.posts &lt;&lt; Post.create

    

    p = t.posts.first
    p.destroy
    p.destroy
    
    # Will be failed, because destroy will invoke decrement_counter twice
    # and the actual value will be -1
    assert_equal posts_count_old, t.posts_count
  end
end
@@@

Could be fixed by adding an invoke of the after_filter, if destroy will affect at least one record in the database.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;You have the PostController, you are loading data into a
variable to destroy it. For example two processes want to destroy
the same post. One of them are getting data from the load_post and
the second one got the same object of the post. They trying to
destroy and no exception will be thrown, and the counter in topic
will be decremented twice.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
before_filter :load_post

def destroy
  @post.destroy
end

def load_post
  @post = Post.find_by_id(params[:id])
end
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Topic
  has_one :posts, :dependent =&amp;gt; :destroy
end

class Post
  belongs_to :topic, :counter_cache =&amp;gt; true
end

class CounterCacheConcurrencyTest &amp;lt; Test::Unit::TestCase
  def test_counter_cache_concurrency_test
    t = Topic.new

    posts_count_old = t.posts_count

    t.posts &amp;lt;&amp;lt; Post.create



    p = t.posts.first
    p.destroy
    p.destroy

    # Will be failed, because destroy will invoke decrement_counter twice
    # and the actual value will be -1
    assert_equal posts_count_old, t.posts_count
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Could be fixed by adding an invoke of the after_filter, if
destroy will affect at least one record in the database.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You have the PostController, you are loading data into a variable to destroy it. For example two processes want to destroy the same post. One of them are getting data from the load_post and the second one got the same object of the post. They trying to destroy and no exception will be thrown, and the counter in topic will be decremented twice.

@@@ ruby
before_filter :load_post

def destroy
  @post.destroy
end

def load_post
  @post = Post.find_by_id(params[:id])
end
@@@

@@@ ruby
class Topic
  has_one :posts, :dependent =&gt; :destroy
end

class Post
  belongs_to :topic, :counter_cache =&gt; true
end

class CounterCacheConcurrencyTest &lt; Test::Unit::TestCase
  def test_counter_cache_concurrency_test
    t = Topic.new

    posts_count_old = t.posts_count

    t.posts &lt;&lt; Post.create

    

    p = t.posts.first
    p.destroy
    p.destroy
    
    # Will be failed, because destroy will invoke decrement_counter twice
    # and the actual value will be -1
    assert_equal posts_count_old, t.posts_count
  end
end
@@@

Could be fixed by adding an invoke of the after_filter, if destroy will affect at least one record in the database.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You have the PostController, you are loading data into a
variable to destroy it. For example two processes want to destroy
the same post. One of them are getting data from the load_post and
the second one got the same object of the post. They trying to
destroy and no exception will be thrown, and the counter in topic
will be decremented twice.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
before_filter :load_post

def destroy
  @post.destroy
end

def load_post
  @post = Post.find_by_id(params[:id])
end
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Topic
  has_one :posts, :dependent =&amp;gt; :destroy
end

class Post
  belongs_to :topic, :counter_cache =&amp;gt; true
end

class CounterCacheConcurrencyTest &amp;lt; Test::Unit::TestCase
  def test_counter_cache_concurrency_test
    t = Topic.new

    posts_count_old = t.posts_count

    t.posts &amp;lt;&amp;lt; Post.create



    p = t.posts.first
    p.destroy
    p.destroy

    # Will be failed, because destroy will invoke decrement_counter twice
    # and the actual value will be -1
    assert_equal posts_count_old, t.posts_count
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Could be fixed by adding an invoke of the after_filter, if
destroy will affect at least one record in the database.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T13:26:03+01:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>affected before concurrency counter_cache destroy minus negative rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2008-09-29T13:26:04+01:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">1</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You can also read about this bug on the ruby forum: http://www.ruby-forum.com/topic/156588

Thanks,
Dmitry from Estonia</body>
      <body-html>&lt;div&gt;&lt;p&gt;You can also read about this bug on the ruby forum: &lt;a href=&quot;http://www.ruby-forum.com/topic/156588&quot;&gt;http://www.ruby-forum.com/topic/...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks, Dmitry from Estonia&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T13:28:39+01:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>affected before concurrency counter_cache destroy minus negative rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2008-09-29T13:28:40+01:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">2</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached patch. No tests yet.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached patch. No tests yet.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T22:45:50+01:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>affected before concurrency counter_cache destroy minus negative rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2008-09-29T22:45:51+01:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">3</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fixed some stuff and written a test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed some stuff and written a test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T23:13:55+01:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>affected before concurrency counter_cache destroy minus negative rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2008-09-29T23:13:58+01:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">4</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-19T11:22:19+00:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: affected before concurrency counter_cache destroy minus negative rows synchronization
:assigned_user: 14890
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord affected before concurrency counter_cache destroy minus negative patch rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2008-12-19T11:22:21+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">5</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The patch doesn't really solve the actual issue as @affected_rows_destroy is just an instance variable of the AR object. Best way is to use AR provided locking mechanism.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch doesn't really solve the actual issue as
@affected_rows_destroy is just an instance variable of the AR
object. Best way is to use AR provided locking mechanism.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-06T19:32:57+00:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 83
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord affected before concurrency counter_cache destroy minus negative patch rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2009-03-06T19:33:00+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Pratik

Can you demonstrate how this could be done through locking mechanism?

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pratik&lt;/p&gt;
&lt;p&gt;Can you demonstrate how this could be done through locking
mechanism?&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-11T18:05:24+00:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord affected before concurrency counter_cache destroy minus negative patch rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2009-03-11T18:28:11+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">7</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>http://guides.rails.info/active_record_querying.html#lockingrecordsforupdate</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://guides.rails.info/active_record_querying.html#lockingrecordsforupdate&quot;&gt;
http://guides.rails.info/active_...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-11T18:31:04+00:00</created-at>
      <creator-id type="integer">16383</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1134</number>
      <permalink>counter_cache-destroy-concurrency-issues</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord affected before concurrency counter_cache destroy minus negative patch rows synchronization</tag>
      <title>counter_cache destroy concurrency issues</title>
      <updated-at type="datetime">2009-03-11T19:02:11+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">8</version>
      <user-name>Pratik</user-name>
      <creator-name>Dmitry Polushkin</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1134</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c128641569791e20c1fa42cbd9b625629f97d2ba</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-29T23:13:55+01:00</created-at>
      <filename>destroy_counter_cache_concurrency.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">49467</id>
      <size type="integer">2773</size>
      <uploader-id type="integer">16383</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/49467/destroy_counter_cache_concurrency.diff</url>
    </attachment>
  </attachments>
</ticket>
