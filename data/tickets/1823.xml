<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-29T21:49:05+00:00</created-at>
  <creator-id type="integer">13817</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1823</number>
  <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
  <priority type="integer">1112</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bug patch session</tag>
  <title>Response and request objects don't use the same session</title>
  <updated-at type="datetime">2009-03-16T19:24:19+00:00</updated-at>
  <user-id type="integer">37717</user-id>
  <version type="integer">17</version>
  <user-name>Josh Pencheon</user-name>
  <creator-name>Scott Taylor</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When a controller calls reset_session, the request, response, and controller's session objects should all be cleared.  This is a current bug in rails HEAD @ (8761663a).  It causes the following spec to fail:

http://gist.github.com/54773

Here's a test driven patch:

http://github.com/smtlaissezfaire/rails/commit/f71472deeef77d592ca6cb1bd52cdb481bf3d993

I've also attached a diff.</original-body>
  <latest-body>When a controller calls reset_session, the request, response, and controller's session objects should all be cleared.  This is a current bug in rails HEAD @ (8761663a).  It causes the following spec to fail:

http://gist.github.com/54773

Here's a test driven patch:

http://github.com/smtlaissezfaire/rails/commit/f71472deeef77d592ca6cb1bd52cdb481bf3d993

I've also attached a diff.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When a controller calls reset_session, the request, response,
and controller's session objects should all be cleared. This is a
current bug in rails HEAD @ (8761663a). It causes the following
spec to fail:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gist.github.com/54773&quot;&gt;http://gist.github.com/54773&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's a test driven patch:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/smtlaissezfaire/rails/commit/f71472deeef77d592ca6cb1bd52cdb481bf3d993&quot;&gt;
http://github.com/smtlaissezfair...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've also attached a diff.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When a controller calls reset_session, the request, response, and controller's session objects should all be cleared.  This is a current bug in rails HEAD @ (8761663a).  It causes the following spec to fail:

http://gist.github.com/54773

Here's a test driven patch:

http://github.com/smtlaissezfaire/rails/commit/f71472deeef77d592ca6cb1bd52cdb481bf3d993

I've also attached a diff.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When a controller calls reset_session, the request, response,
and controller's session objects should all be cleared. This is a
current bug in rails HEAD @ (8761663a). It causes the following
spec to fail:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gist.github.com/54773&quot;&gt;http://gist.github.com/54773&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's a test driven patch:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/smtlaissezfaire/rails/commit/f71472deeef77d592ca6cb1bd52cdb481bf3d993&quot;&gt;
http://github.com/smtlaissezfair...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've also attached a diff.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T21:49:05+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[Bug][Patch] response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-01-29T21:49:07+00:00</updated-at>
      <user-id type="integer">13817</user-id>
      <version type="integer">1</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 Works for me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 Works for me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T22:30:51+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[Bug][Patch] response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-01-29T22:30:56+00:00</updated-at>
      <user-id type="integer">1240</user-id>
      <version type="integer">2</version>
      <user-name>Jonathan George</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This should be for the 2.3 milestone.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This should be for the 2.3 milestone.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T22:58:55+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[Bug][Patch] response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-01-29T22:58:57+00:00</updated-at>
      <user-id type="integer">13817</user-id>
      <version type="integer">3</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T23:30:52+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:title: &quot;[Bug][Patch] response and request objects don't use the same session&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug patch session</tag>
      <title>[Bug] response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-01-29T23:30:57+00:00</updated-at>
      <user-id type="integer">13817</user-id>
      <version type="integer">4</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T23:36:12+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[Bug] response and request objects don't use the same session&quot;
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-01-29T23:36:16+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [2dedb5b03ab88a1c31068f71c8d4cad7c5a5d9ae]) Controller, response, and request should all refer to same session, even after a call to session_reset [#1823 state:resolved]
Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/2dedb5b03ab88a1c31068f71c8d4cad7c5a5d9ae</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [2dedb5b03ab88a1c31068f71c8d4cad7c5a5d9ae]) Controller,
response, and request should all refer to same session, even after
a call to session_reset [&lt;a href=&quot;/projects/8994/tickets/1823&quot; title=&quot;Ticket #1823&quot;&gt;#1823&lt;/a&gt; state:resolved] Signed-off-by:
Joshua Peek &lt;a href=&quot;mailto:josh@joshpeek.com&quot;&gt;josh@joshpeek.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/2dedb5b03ab88a1c31068f71c8d4cad7c5a5d9ae&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-30T01:34:42+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-01-30T01:34:44+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks Josh.  

This is truly a new era in rails.  I've never had a patch applied so quickly.

Thanks again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks Josh.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;This is truly a new era in rails. I've never had a patch applied
so quickly.&lt;/p&gt;
&lt;p&gt;Thanks again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-30T02:13:40+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-01-30T02:13:43+00:00</updated-at>
      <user-id type="integer">10212</user-id>
      <version type="integer">7</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just curious, but does this patch happen to fix a bug I noticed last night on the 2.3 tag when using Mongrel where I'd use the cookie store, change the session, and it wouldn't get sent back to the client?

Using Passenger and Thin I didn't have this problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just curious, but does this patch happen to fix a bug I noticed
last night on the 2.3 tag when using Mongrel where I'd use the
cookie store, change the session, and it wouldn't get sent back to
the client?&lt;/p&gt;
&lt;p&gt;Using Passenger and Thin I didn't have this problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-11T04:34:12+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-11T04:34:16+00:00</updated-at>
      <user-id type="integer">23021</user-id>
      <version type="integer">8</version>
      <user-name>Nolan Eakins</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>No.  I have been experiencing exactly the same issue, and had thought that this would solve it (it didn't, though).

As far as I can tell, mongrel calls the old rails deprecated cgi code, where thin uses the new rack adapter.  The session bug doesn't occur when using any server with the rack adapter.

I'm not sure why there isn't a big fat warning (Kernel#warn) when the old cgi module is clearly deprecated - it says so right there in the code.

I think this is a pretty serious regression for 2.3.  

I'll run rdebug on mongrel_rails one more time to try to isolate it.  Feel free to file a more proper bug report.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No. I have been experiencing exactly the same issue, and had
thought that this would solve it (it didn't, though).&lt;/p&gt;
&lt;p&gt;As far as I can tell, mongrel calls the old rails deprecated cgi
code, where thin uses the new rack adapter. The session bug doesn't
occur when using any server with the rack adapter.&lt;/p&gt;
&lt;p&gt;I'm not sure why there isn't a big fat warning (Kernel#warn)
when the old cgi module is clearly deprecated - it says so right
there in the code.&lt;/p&gt;
&lt;p&gt;I think this is a pretty serious regression for 2.3.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I'll run rdebug on mongrel_rails one more time to try to isolate
it. Feel free to file a more proper bug report.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-11T04:42:44+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-11T04:42:47+00:00</updated-at>
      <user-id type="integer">13817</user-id>
      <version type="integer">9</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just to be clear, the bug is that the response session and the request session *don't* stay the same when using the cgi module.  Here's a pastie of the debug session:

http://gist.github.com/61838

Notice that the same object is used for the session before calling reset_session, but afterwards the object is different.

I'm working on a patch for this right now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just to be clear, the bug is that the response session and the
request session &lt;em&gt;don't&lt;/em&gt; stay the same when using the cgi
module. Here's a pastie of the debug session:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gist.github.com/61838&quot;&gt;http://gist.github.com/61838&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Notice that the same object is used for the session before
calling reset_session, but afterwards the object is different.&lt;/p&gt;
&lt;p&gt;I'm working on a patch for this right now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-11T06:52:26+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-11T06:52:31+00:00</updated-at>
      <user-id type="integer">13817</user-id>
      <version type="integer">10</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Scott, I filed http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/1957-sessions-break-in-23-with-mongrel</body>
      <body-html>&lt;div&gt;&lt;p&gt;Scott, I filed &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/1957-sessions-break-in-23-with-mongrel&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-13T01:25:31+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-13T01:25:35+00:00</updated-at>
      <user-id type="integer">23021</user-id>
      <version type="integer">11</version>
      <user-name>Nolan Eakins</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Nolan,

Great.  Thanks.  usually you can just refer to other tickets by ticket number:  #1957

I've got a patch in the works - the test suite is fully passing, but I know a few integration tests are missing as it doesn't quite seem to work in my project yet.  Hopefully I can pull something together tonight.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Nolan,&lt;/p&gt;
&lt;p&gt;Great. Thanks. usually you can just refer to other tickets by
ticket number: &lt;a href=&quot;/projects/8994/tickets/1957&quot; title=&quot;Ticket #1957&quot;&gt;#1957&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've got a patch in the works - the test suite is fully passing,
but I know a few integration tests are missing as it doesn't quite
seem to work in my project yet. Hopefully I can pull something
together tonight.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-13T01:47:53+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-13T01:47:54+00:00</updated-at>
      <user-id type="integer">13817</user-id>
      <version type="integer">12</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'd be willing to apply your patch when you think it's ready to make sure it works. Seems like we're the only two who've run into this problem and that chose to be vocal about it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'd be willing to apply your patch when you think it's ready to
make sure it works. Seems like we're the only two who've run into
this problem and that chose to be vocal about it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-13T02:03:23+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-13T02:03:25+00:00</updated-at>
      <user-id type="integer">23021</user-id>
      <version type="integer">13</version>
      <user-name>Nolan Eakins</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm having some problems with the session as well, but the other way round - it's working fine with mongrel (script/server) but doesn't work on Passenger.

Calling reset_session in the controller doesn't seem to have any effect - I'm using the Authlogic gem, and am able to log in, but can't log out again!

I'm afraid I'm going away tomorrow, so won't be around to follow this up for a few days...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having some problems with the session as well, but the other
way round - it's working fine with mongrel (script/server) but
doesn't work on Passenger.&lt;/p&gt;
&lt;p&gt;Calling reset_session in the controller doesn't seem to have any
effect - I'm using the Authlogic gem, and am able to log in, but
can't log out again!&lt;/p&gt;
&lt;p&gt;I'm afraid I'm going away tomorrow, so won't be around to follow
this up for a few days...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-14T21:30:18+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-14T21:30:22+00:00</updated-at>
      <user-id type="integer">37717</user-id>
      <version type="integer">14</version>
      <user-name>Josh Pencheon</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Josh Pencheon:

Have you tried daemonizing mongrel?  Does that affect the session state?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Josh Pencheon:&lt;/p&gt;
&lt;p&gt;Have you tried daemonizing mongrel? Does that affect the session
state?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-16T01:25:34+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-16T01:25:37+00:00</updated-at>
      <user-id type="integer">10212</user-id>
      <version type="integer">15</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm having the same problem as Josh Pencheon.
What I'm trying to achieve is to issue two cookies upon login: the regular session cookie and an additional cookie that gets picked up by Varnished to avoid caching for authenticated users.

As soon as I try setting two cookies to the user, only one of the cookies get sent in the header. The other one is sent in the response body and doesn't get picked up by the browser. That is, there's a &quot;Set-Cookie...&quot; in the actual contents, not in the header as it should be.

Tried running the same app thru Mongrel (both daemonized and not), and it works like a charm.

Kind of reminds me of the PHP days, when  PHP would spit out a warning if one tries to send headers after the server has started sending the actual payload.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having the same problem as Josh Pencheon. What I'm trying to
achieve is to issue two cookies upon login: the regular session
cookie and an additional cookie that gets picked up by Varnished to
avoid caching for authenticated users.&lt;/p&gt;
&lt;p&gt;As soon as I try setting two cookies to the user, only one of
the cookies get sent in the header. The other one is sent in the
response body and doesn't get picked up by the browser. That is,
there's a &quot;Set-Cookie...&quot; in the actual contents, not in the header
as it should be.&lt;/p&gt;
&lt;p&gt;Tried running the same app thru Mongrel (both daemonized and
not), and it works like a charm.&lt;/p&gt;
&lt;p&gt;Kind of reminds me of the PHP days, when PHP would spit out a
warning if one tries to send headers after the server has started
sending the actual payload.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-25T09:57:38+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-02-25T09:57:43+00:00</updated-at>
      <user-id type="integer">707</user-id>
      <version type="integer">16</version>
      <user-name>Marius Mathiesen</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just to confirm, this seems to now be fixed with Rails 2.3.2 and Passenger 2.1.2. Thanks everyone. :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just to confirm, this seems to now be fixed with Rails 2.3.2 and
Passenger 2.1.2. Thanks everyone. :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-16T19:24:15+00:00</created-at>
      <creator-id type="integer">13817</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1823</number>
      <permalink>bugpatch-response-and-request-objects-dont-use-the-same-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug patch session</tag>
      <title>Response and request objects don't use the same session</title>
      <updated-at type="datetime">2009-03-16T19:24:19+00:00</updated-at>
      <user-id type="integer">37717</user-id>
      <version type="integer">17</version>
      <user-name>Josh Pencheon</user-name>
      <creator-name>Scott Taylor</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1823</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2e9b8aa8b9627755f38e16b9665710caf8e4b7ac</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-29T21:49:05+00:00</created-at>
      <filename>reset_session.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">83071</id>
      <size type="integer">2878</size>
      <uploader-id type="integer">13817</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/83071/reset_session.diff</url>
    </attachment>
  </attachments>
</ticket>
