<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-21T01:45:48+01:00</created-at>
  <creator-id type="integer">53896</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3675</number>
  <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>form_for polymorphic_url</tag>
  <title>form_for doesn't work with new singleton nested resource</title>
  <updated-at type="datetime">2010-07-21T01:45:48+01:00</updated-at>
  <user-id type="integer">83</user-id>
  <version type="integer">9</version>
  <user-name>DHH</user-name>
  <creator-name>Jake Paul</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
  <priority-name nil="true"></priority-name>
  <original-body>Using a singleton nested resource, such as:

@@@ ruby
map.resources :users do |users|
  users.resource :position
end
@@@

form_for doesn't work when the nested resource is being added.

For example, in the controller:

@@@ ruby
def new
  @user = User.find(params[:user_id])
  @position = @user.build_position
end
@@@

and in the view:

@@@ ruby
form_for [:user, @member] ...
@@@

will throw an exception: undefined method `user_positions_path'

The edit action is identical except the nested resource exists, so in the controller: @position = @user.position instead of @user.build_position. Using form_for [:user, @member] in the edit view creates a form with the correct singular route and put method. It fails to work only when the nested resource is a new record.

I believe the problem is in the polymorphic_url helper, used by apply_form_for_options! in form_for. The helper determines inflection based on new_record? for some reason. If the record is new the inflection is plural. This obviously fails for new singleton nested resources. Here is the pertinent section of polymorphic_url: 

@@@ ruby
inflection =
  case
  when options[:action].to_s == &quot;new&quot;
    args.pop
    :singular
  when record.respond_to?(:new_record?) &amp;&amp; record.new_record?
    args.pop
    :plural
  else
    :singular
  end
@@@

It's possible to work around this using a different form_for syntax to explicitly set the URL, but this seems like a bug because the behavior is inconsistent between the new and edit actions.</original-body>
  <latest-body>Using a singleton nested resource, such as:

@@@ ruby
map.resources :users do |users|
  users.resource :position
end
@@@

form_for doesn't work when the nested resource is being added.

For example, in the controller:

@@@ ruby
def new
  @user = User.find(params[:user_id])
  @position = @user.build_position
end
@@@

and in the view:

@@@ ruby
form_for [:user, @member] ...
@@@

will throw an exception: undefined method `user_positions_path'

The edit action is identical except the nested resource exists, so in the controller: @position = @user.position instead of @user.build_position. Using form_for [:user, @member] in the edit view creates a form with the correct singular route and put method. It fails to work only when the nested resource is a new record.

I believe the problem is in the polymorphic_url helper, used by apply_form_for_options! in form_for. The helper determines inflection based on new_record? for some reason. If the record is new the inflection is plural. This obviously fails for new singleton nested resources. Here is the pertinent section of polymorphic_url: 

@@@ ruby
inflection =
  case
  when options[:action].to_s == &quot;new&quot;
    args.pop
    :singular
  when record.respond_to?(:new_record?) &amp;&amp; record.new_record?
    args.pop
    :plural
  else
    :singular
  end
@@@

It's possible to work around this using a different form_for syntax to explicitly set the URL, but this seems like a bug because the behavior is inconsistent between the new and edit actions.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using a singleton nested resource, such as:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;map.resources :users do |users|
  users.resource :position
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;form_for doesn't work when the nested resource is being
added.&lt;/p&gt;
&lt;p&gt;For example, in the controller:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def new
  @user = User.find(params[:user_id])
  @position = @user.build_position
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and in the view:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;form_for [:user, @member] ...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will throw an exception: undefined method
&lt;code&gt;user_positions_path'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The edit action is identical except the nested resource exists,
so in the controller: @position = @user.position instead of
@user.build_position. Using form_for [:user, @member] in the edit
view creates a form with the correct singular route and put method.
It fails to work only when the nested resource is a new record.&lt;/p&gt;
&lt;p&gt;I believe the problem is in the polymorphic_url helper, used by
apply_form_for_options! in form_for. The helper determines
inflection based on new_record? for some reason. If the record is
new the inflection is plural. This obviously fails for new
singleton nested resources. Here is the pertinent section of
polymorphic_url:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;inflection =
  case
  when options[:action].to_s == &quot;new&quot;
    args.pop
    :singular
  when record.respond_to?(:new_record?) &amp;amp;&amp;amp; record.new_record?
    args.pop
    :plural
  else
    :singular
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It's possible to work around this using a different form_for
syntax to explicitly set the URL, but this seems like a bug because
the behavior is inconsistent between the new and edit actions.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using a singleton nested resource, such as:

@@@ ruby
map.resources :users do |users|
  users.resource :position
end
@@@

form_for doesn't work when the nested resource is being added.

For example, in the controller:

@@@ ruby
def new
  @user = User.find(params[:user_id])
  @position = @user.build_position
end
@@@

and in the view:

@@@ ruby
form_for [:user, @member] ...
@@@

will throw an exception: undefined method `user_positions_path'

The edit action is identical except the nested resource exists, so in the controller: @position = @user.position instead of @user.build_position. Using form_for [:user, @member] in the edit view creates a form with the correct singular route and put method. It fails to work only when the nested resource is a new record.

I believe the problem is in the polymorphic_url helper, used by apply_form_for_options! in form_for. The helper determines inflection based on new_record? for some reason. If the record is new the inflection is plural. This obviously fails for new singleton nested resources. Here is the pertinent section of polymorphic_url: 

@@@ ruby
inflection =
  case
  when options[:action].to_s == &quot;new&quot;
    args.pop
    :singular
  when record.respond_to?(:new_record?) &amp;&amp; record.new_record?
    args.pop
    :plural
  else
    :singular
  end
@@@

It's possible to work around this using a different form_for syntax to explicitly set the URL, but this seems like a bug because the behavior is inconsistent between the new and edit actions.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using a singleton nested resource, such as:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;map.resources :users do |users|
  users.resource :position
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;form_for doesn't work when the nested resource is being
added.&lt;/p&gt;
&lt;p&gt;For example, in the controller:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def new
  @user = User.find(params[:user_id])
  @position = @user.build_position
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and in the view:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;form_for [:user, @member] ...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will throw an exception: undefined method
&lt;code&gt;user_positions_path'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The edit action is identical except the nested resource exists,
so in the controller: @position = @user.position instead of
@user.build_position. Using form_for [:user, @member] in the edit
view creates a form with the correct singular route and put method.
It fails to work only when the nested resource is a new record.&lt;/p&gt;
&lt;p&gt;I believe the problem is in the polymorphic_url helper, used by
apply_form_for_options! in form_for. The helper determines
inflection based on new_record? for some reason. If the record is
new the inflection is plural. This obviously fails for new
singleton nested resources. Here is the pertinent section of
polymorphic_url:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;inflection =
  case
  when options[:action].to_s == &quot;new&quot;
    args.pop
    :singular
  when record.respond_to?(:new_record?) &amp;amp;&amp;amp; record.new_record?
    args.pop
    :plural
  else
    :singular
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It's possible to work around this using a different form_for
syntax to explicitly set the URL, but this seems like a bug because
the behavior is inconsistent between the new and edit actions.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-09T19:35:58+00:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-01-09T19:36:00+00:00</updated-at>
      <user-id type="integer">53896</user-id>
      <version type="integer">1</version>
      <user-name>Jake Paul</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oops, it should say form_for [:user, @position] instead of form_for [:user, @member]. My mistake.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, it should say form_for [:user, @position] instead of
form_for [:user, @member]. My mistake.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-09T19:37:08+00:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-01-09T19:37:11+00:00</updated-at>
      <user-id type="integer">53896</user-id>
      <version type="integer">2</version>
      <user-name>Jake Paul</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've got a failing test for this in rails3 beta 3.  Working on a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've got a failing test for this in rails3 beta 3. Working on a
patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-16T20:50:00+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-05-16T20:50:02+01:00</updated-at>
      <user-id type="integer">40367</user-id>
      <version type="integer">3</version>
      <user-name>Ben Orenstein</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-19T10:19:02+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-05-19T10:19:04+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-19T11:50:12+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-05-19T11:52:11+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">5</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-21T00:45:19+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-05-21T00:45:23+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">6</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Isn't this another instance of #267?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Isn't this another instance of &lt;a href=
&quot;/projects/8994/tickets/267&quot; title=&quot;Ticket #267&quot;&gt;#267&lt;/a&gt;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-07T10:01:24+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-06-07T10:01:28+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">7</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Andrew Looks like it is, probably.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Andrew Looks like it is, probably.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-07T14:11:08+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-06-07T14:11:11+01:00</updated-at>
      <user-id type="integer">53896</user-id>
      <version type="integer">8</version>
      <user-name>Jake Paul</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T20:38:16+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-06-08T20:38:25+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">9</version>
      <user-name>DHH</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>it commence &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-emporio-armani-watches.html&quot;&gt;Replica Emporio Armani Watches sale&lt;/a&gt;&lt;/b&gt; your side with of &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;breitling watch sale&lt;/a&gt;&lt;/b&gt; teeeth whietr blame enact &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Rolex watch sale&lt;/a&gt;&lt;/b&gt; foound on whole-length drug &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/116528-mro-replica-558.html&quot;&gt;116528-MRO replica&lt;/a&gt;&lt;/b&gt; again cosmetics stores. flush &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;quality replica watches&lt;/a&gt;&lt;/b&gt; toothpastes since seat on &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;cheap replica watches&lt;/a&gt;&lt;/b&gt; the whitennig effecs of &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; a designful pseudonym as &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;chanel replica Watch&lt;/a&gt;&lt;/b&gt; a part of enhancing &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;high quality replica watches&lt;/a&gt;&lt;/b&gt; threir consumer sales. But &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/cabaret-replica.html&quot;&gt;Cabaret replica&lt;/a&gt;&lt;/b&gt; straight cache entire these prodducts and procedures around, you</body>
      <body-html>&lt;div&gt;&lt;p&gt;it commence &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-emporio-armani-watches.html&quot;&gt;
Replica Emporio Armani Watches sale&lt;/a&gt;&lt;/b&gt; your side with of
&lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;breitling watch
sale&lt;/a&gt;&lt;/b&gt; teeeth whietr blame enact &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Rolex watch sale&lt;/a&gt;&lt;/b&gt; foound on
whole-length drug &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/116528-mro-replica-558.html&quot;&gt;
116528-MRO replica&lt;/a&gt;&lt;/b&gt; again cosmetics stores. flush
&lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;quality replica
watches&lt;/a&gt;&lt;/b&gt; toothpastes since seat on &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;cheap replica watches&lt;/a&gt;&lt;/b&gt; the
whitennig effecs of &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; a
designful pseudonym as &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;chanel replica Watch&lt;/a&gt;&lt;/b&gt; a
part of enhancing &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;high
quality replica watches&lt;/a&gt;&lt;/b&gt; threir consumer sales. But
&lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/cabaret-replica.html&quot;&gt;Cabaret
replica&lt;/a&gt;&lt;/b&gt; straight cache entire these prodducts and
procedures around, you&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T09:56:05+01:00</created-at>
      <creator-id type="integer">53896</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3675</number>
      <permalink>form_for-doesnt-work-with-new-singleton-nested-resource</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>form_for polymorphic_url</tag>
      <title>form_for doesn't work with new singleton nested resource</title>
      <updated-at type="datetime">2010-07-21T01:45:48+01:00</updated-at>
      <user-id type="integer">107790</user-id>
      <version type="integer">10</version>
      <user-name>a4490302sc</user-name>
      <creator-name>Jake Paul</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3675</url>
      <priority-name>High</priority-name>
    </version>
  </versions>
</ticket>
