<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-04-03T17:48:09+01:00</created-at>
  <creator-id type="integer">12926</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4319</number>
  <permalink>mysql-index-name-is-too-long</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>index migrations mysql</tag>
  <title>MySQL index name is too long</title>
  <updated-at type="datetime">2010-04-11T07:19:15+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">4</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>J. Pablo Fernandez</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4319</url>
  <priority-name>Low</priority-name>
  <original-body>If your table names and your field names are long enough, you can get Rails to generate invalid MySQL code by creating an index name that is too long. This can happen quite easily when you create an index in more than one field.

For example:

Mysql::Error: Identifier name
'index_courses_target_audiences_on_course_id_and_target_audience_id' is too
long: CREATE INDEX
`index_courses_target_audiences_on_course_id_and_target_audience_id` ON
`courses_target_audiences` (`course_id`, `target_audience_id`)

I know it can be easily workaround with the :name argument, but it could also be easily made work out of the box by not going over the maximum length.

One concern would be that then there could be a conflict with two keys with the same name. The last 10 characters could be reserved to put a random number or a hash of what would be the complete name to avoid conflicts.

Thanks.</original-body>
  <latest-body>If your table names and your field names are long enough, you can get Rails to generate invalid MySQL code by creating an index name that is too long. This can happen quite easily when you create an index in more than one field.

For example:

Mysql::Error: Identifier name
'index_courses_target_audiences_on_course_id_and_target_audience_id' is too
long: CREATE INDEX
`index_courses_target_audiences_on_course_id_and_target_audience_id` ON
`courses_target_audiences` (`course_id`, `target_audience_id`)

I know it can be easily workaround with the :name argument, but it could also be easily made work out of the box by not going over the maximum length.

One concern would be that then there could be a conflict with two keys with the same name. The last 10 characters could be reserved to put a random number or a hash of what would be the complete name to avoid conflicts.

Thanks.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If your table names and your field names are long enough, you
can get Rails to generate invalid MySQL code by creating an index
name that is too long. This can happen quite easily when you create
an index in more than one field.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;Mysql::Error: Identifier name&lt;br&gt;
'index_courses_target_audiences_on_course_id_and_target_audience_id'
is too long: CREATE INDEX&lt;br&gt;
&lt;code&gt;index_courses_target_audiences_on_course_id_and_target_audience_id&lt;/code&gt;
ON &lt;code&gt;courses_target_audiences&lt;/code&gt; (&lt;code&gt;course_id&lt;/code&gt;,
&lt;code&gt;target_audience_id&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;I know it can be easily workaround with the :name argument, but
it could also be easily made work out of the box by not going over
the maximum length.&lt;/p&gt;
&lt;p&gt;One concern would be that then there could be a conflict with
two keys with the same name. The last 10 characters could be
reserved to put a random number or a hash of what would be the
complete name to avoid conflicts.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If your table names and your field names are long enough, you can get Rails to generate invalid MySQL code by creating an index name that is too long. This can happen quite easily when you create an index in more than one field.

For example:

Mysql::Error: Identifier name
'index_courses_target_audiences_on_course_id_and_target_audience_id' is too
long: CREATE INDEX
`index_courses_target_audiences_on_course_id_and_target_audience_id` ON
`courses_target_audiences` (`course_id`, `target_audience_id`)

I know it can be easily workaround with the :name argument, but it could also be easily made work out of the box by not going over the maximum length.

One concern would be that then there could be a conflict with two keys with the same name. The last 10 characters could be reserved to put a random number or a hash of what would be the complete name to avoid conflicts.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If your table names and your field names are long enough, you
can get Rails to generate invalid MySQL code by creating an index
name that is too long. This can happen quite easily when you create
an index in more than one field.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;Mysql::Error: Identifier name&lt;br&gt;
'index_courses_target_audiences_on_course_id_and_target_audience_id'
is too long: CREATE INDEX&lt;br&gt;
&lt;code&gt;index_courses_target_audiences_on_course_id_and_target_audience_id&lt;/code&gt;
ON &lt;code&gt;courses_target_audiences&lt;/code&gt; (&lt;code&gt;course_id&lt;/code&gt;,
&lt;code&gt;target_audience_id&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;I know it can be easily workaround with the :name argument, but
it could also be easily made work out of the box by not going over
the maximum length.&lt;/p&gt;
&lt;p&gt;One concern would be that then there could be a conflict with
two keys with the same name. The last 10 characters could be
reserved to put a random number or a hash of what would be the
complete name to avoid conflicts.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-03T17:48:09+01:00</created-at>
      <creator-id type="integer">12926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4319</number>
      <permalink>mysql-index-name-is-too-long</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>index migrations mysql</tag>
      <title>MySQL index name is too long</title>
      <updated-at type="datetime">2010-04-03T17:48:10+01:00</updated-at>
      <user-id type="integer">12926</user-id>
      <version type="integer">1</version>
      <user-name>J. Pablo Fernandez</user-name>
      <creator-name>J. Pablo Fernandez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4319</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>duplicate of #3508 which is duplicate to #1852 which is ...waiting ;-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;duplicate of &lt;a href=&quot;/projects/8994/tickets/3508&quot; title=
&quot;Ticket #3508&quot;&gt;#3508&lt;/a&gt; which is duplicate to &lt;a href=
&quot;/projects/8994/tickets/1852&quot; title=&quot;Ticket #1852&quot;&gt;#1852&lt;/a&gt; which
is ...waiting ;-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-11T05:12:29+01:00</created-at>
      <creator-id type="integer">12926</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4319</number>
      <permalink>mysql-index-name-is-too-long</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>index migrations mysql</tag>
      <title>MySQL index name is too long</title>
      <updated-at type="datetime">2010-04-11T05:12:33+01:00</updated-at>
      <user-id type="integer">22164</user-id>
      <version type="integer">2</version>
      <user-name>Roland Moriz</user-name>
      <creator-name>J. Pablo Fernandez</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4319</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just a duplicate of #3508 only. sorry :/</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just a duplicate of &lt;a href=&quot;/projects/8994/tickets/3508&quot; title=
&quot;Ticket #3508&quot;&gt;#3508&lt;/a&gt; only. sorry :/&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-11T05:15:57+01:00</created-at>
      <creator-id type="integer">12926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4319</number>
      <permalink>mysql-index-name-is-too-long</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>index migrations mysql</tag>
      <title>MySQL index name is too long</title>
      <updated-at type="datetime">2010-04-11T05:16:00+01:00</updated-at>
      <user-id type="integer">22164</user-id>
      <version type="integer">3</version>
      <user-name>Roland Moriz</user-name>
      <creator-name>J. Pablo Fernandez</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4319</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicate of #3508.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicate of &lt;a href=&quot;/projects/8994/tickets/3508&quot; title=
&quot;Ticket #3508&quot;&gt;#3508&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-11T07:19:14+01:00</created-at>
      <creator-id type="integer">12926</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4319</number>
      <permalink>mysql-index-name-is-too-long</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>index migrations mysql</tag>
      <title>MySQL index name is too long</title>
      <updated-at type="datetime">2010-04-11T07:19:15+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>J. Pablo Fernandez</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4319</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
