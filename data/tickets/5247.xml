<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">12714</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-10-19T17:52:54+01:00</created-at>
  <creator-id type="integer">108963</creator-id>
  <milestone-due-on type="datetime">2011-03-27T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">103410</milestone-id>
  <number type="integer">5247</number>
  <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag nil="true"></tag>
  <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
  <updated-at type="datetime">2011-04-07T00:16:11+01:00</updated-at>
  <user-id type="integer">144245</user-id>
  <version type="integer">20</version>
  <user-name>Geoffrey Hichborn</user-name>
  <creator-name>Mike Gehard</creator-name>
  <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
  <milestone-title>3.0.6</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>I am wondering why testing that a specific layout was used to render a template is dependent on you first testing that a partial is being rendered.  From the code:

      when Hash
        if expected_partial = options[:partial]
          if expected_locals = options[:locals]
            actual_locals = @locals[expected_partial.to_s.sub(/^_/,'')]
            expected_locals.each_pair do |k,v|
              assert_equal(v, actual_locals[k])
            end
          elsif expected_count = options[:count]
            actual_count = @partials[expected_partial]
            msg = build_message(message,
                    &quot;expecting ? to be rendered ? time(s) but rendered ? time(s)&quot;,
                     expected_partial, expected_count, actual_count)
            assert(actual_count == expected_count.to_i, msg)
          elsif options.key?(:layout)
            msg = build_message(message,
                    &quot;expecting layout &lt;?&gt; but action rendered &lt;?&gt;&quot;,
                    expected_layout, @layouts.keys)

            case layout = options[:layout]
            when String
              assert(@layouts.include?(expected_layout), msg)
            when Regexp
              assert(@layouts.any? {|l| l =~ layout }, msg)
            when nil
              assert(@layouts.empty?, msg)
            end
          else
            msg = build_message(message,
                    &quot;expecting partial &lt;?&gt; but action rendered &lt;?&gt;&quot;,
                    options[:partial], @partials.keys)
            assert(@partials.include?(expected_partial), msg)
          end
        else
          assert @partials.empty?,
            &quot;Expected no partials to be rendered&quot;
        end
      end

Notice that the test for the &quot;layout&quot; param (elsif options.key?(:layout)) is nested within the check to see if you are testing for partials (if expected_partial = options[:partial]).

If I assume that this is correct behavior, which I don't think it should be, even if I pass in :partial =&gt; &quot;something&quot; then I get an error that says &quot;undefined local variable expected_layout&quot; because no where in assert_template does that variable get assigned.

I have looked through master and have found some tests that seem to be testing this but I am not sure that they are working properly because if you don't pass in the :partial option then it ignores the three assertions that test the @layouts collection.

Patches upcoming...</original-body>
  <latest-body>I am wondering why testing that a specific layout was used to render a template is dependent on you first testing that a partial is being rendered.  From the code:

      when Hash
        if expected_partial = options[:partial]
          if expected_locals = options[:locals]
            actual_locals = @locals[expected_partial.to_s.sub(/^_/,'')]
            expected_locals.each_pair do |k,v|
              assert_equal(v, actual_locals[k])
            end
          elsif expected_count = options[:count]
            actual_count = @partials[expected_partial]
            msg = build_message(message,
                    &quot;expecting ? to be rendered ? time(s) but rendered ? time(s)&quot;,
                     expected_partial, expected_count, actual_count)
            assert(actual_count == expected_count.to_i, msg)
          elsif options.key?(:layout)
            msg = build_message(message,
                    &quot;expecting layout &lt;?&gt; but action rendered &lt;?&gt;&quot;,
                    expected_layout, @layouts.keys)

            case layout = options[:layout]
            when String
              assert(@layouts.include?(expected_layout), msg)
            when Regexp
              assert(@layouts.any? {|l| l =~ layout }, msg)
            when nil
              assert(@layouts.empty?, msg)
            end
          else
            msg = build_message(message,
                    &quot;expecting partial &lt;?&gt; but action rendered &lt;?&gt;&quot;,
                    options[:partial], @partials.keys)
            assert(@partials.include?(expected_partial), msg)
          end
        else
          assert @partials.empty?,
            &quot;Expected no partials to be rendered&quot;
        end
      end

Notice that the test for the &quot;layout&quot; param (elsif options.key?(:layout)) is nested within the check to see if you are testing for partials (if expected_partial = options[:partial]).

If I assume that this is correct behavior, which I don't think it should be, even if I pass in :partial =&gt; &quot;something&quot; then I get an error that says &quot;undefined local variable expected_layout&quot; because no where in assert_template does that variable get assigned.

I have looked through master and have found some tests that seem to be testing this but I am not sure that they are working properly because if you don't pass in the :partial option then it ignores the three assertions that test the @layouts collection.

Patches upcoming...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I am wondering why testing that a specific layout was used to
render a template is dependent on you first testing that a partial
is being rendered. From the code:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  when Hash
    if expected_partial = options[:partial]
      if expected_locals = options[:locals]
        actual_locals = @locals[expected_partial.to_s.sub(/^_/,'')]
        expected_locals.each_pair do |k,v|
          assert_equal(v, actual_locals[k])
        end
      elsif expected_count = options[:count]
        actual_count = @partials[expected_partial]
        msg = build_message(message,
                &quot;expecting ? to be rendered ? time(s) but rendered ? time(s)&quot;,
                 expected_partial, expected_count, actual_count)
        assert(actual_count == expected_count.to_i, msg)
      elsif options.key?(:layout)
        msg = build_message(message,
                &quot;expecting layout &amp;lt;?&amp;gt; but action rendered &amp;lt;?&amp;gt;&quot;,
                expected_layout, @layouts.keys)

        case layout = options[:layout]
        when String
          assert(@layouts.include?(expected_layout), msg)
        when Regexp
          assert(@layouts.any? {|l| l =~ layout }, msg)
        when nil
          assert(@layouts.empty?, msg)
        end
      else
        msg = build_message(message,
                &quot;expecting partial &amp;lt;?&amp;gt; but action rendered &amp;lt;?&amp;gt;&quot;,
                options[:partial], @partials.keys)
        assert(@partials.include?(expected_partial), msg)
      end
    else
      assert @partials.empty?,
        &quot;Expected no partials to be rendered&quot;
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that the test for the &quot;layout&quot; param (elsif
options.key?(:layout)) is nested within the check to see if you are
testing for partials (if expected_partial = options[:partial]).&lt;/p&gt;
&lt;p&gt;If I assume that this is correct behavior, which I don't think
it should be, even if I pass in :partial =&amp;gt; &quot;something&quot; then I
get an error that says &quot;undefined local variable expected_layout&quot;
because no where in assert_template does that variable get
assigned.&lt;/p&gt;
&lt;p&gt;I have looked through master and have found some tests that seem
to be testing this but I am not sure that they are working properly
because if you don't pass in the :partial option then it ignores
the three assertions that test the @layouts collection.&lt;/p&gt;
&lt;p&gt;Patches upcoming...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am wondering why testing that a specific layout was used to render a template is dependent on you first testing that a partial is being rendered.  From the code:

      when Hash
        if expected_partial = options[:partial]
          if expected_locals = options[:locals]
            actual_locals = @locals[expected_partial.to_s.sub(/^_/,'')]
            expected_locals.each_pair do |k,v|
              assert_equal(v, actual_locals[k])
            end
          elsif expected_count = options[:count]
            actual_count = @partials[expected_partial]
            msg = build_message(message,
                    &quot;expecting ? to be rendered ? time(s) but rendered ? time(s)&quot;,
                     expected_partial, expected_count, actual_count)
            assert(actual_count == expected_count.to_i, msg)
          elsif options.key?(:layout)
            msg = build_message(message,
                    &quot;expecting layout &lt;?&gt; but action rendered &lt;?&gt;&quot;,
                    expected_layout, @layouts.keys)

            case layout = options[:layout]
            when String
              assert(@layouts.include?(expected_layout), msg)
            when Regexp
              assert(@layouts.any? {|l| l =~ layout }, msg)
            when nil
              assert(@layouts.empty?, msg)
            end
          else
            msg = build_message(message,
                    &quot;expecting partial &lt;?&gt; but action rendered &lt;?&gt;&quot;,
                    options[:partial], @partials.keys)
            assert(@partials.include?(expected_partial), msg)
          end
        else
          assert @partials.empty?,
            &quot;Expected no partials to be rendered&quot;
        end
      end

Notice that the test for the &quot;layout&quot; param (elsif options.key?(:layout)) is nested within the check to see if you are testing for partials (if expected_partial = options[:partial]).

If I assume that this is correct behavior, which I don't think it should be, even if I pass in :partial =&gt; &quot;something&quot; then I get an error that says &quot;undefined local variable expected_layout&quot; because no where in assert_template does that variable get assigned.

I have looked through master and have found some tests that seem to be testing this but I am not sure that they are working properly because if you don't pass in the :partial option then it ignores the three assertions that test the @layouts collection.

Patches upcoming...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am wondering why testing that a specific layout was used to
render a template is dependent on you first testing that a partial
is being rendered. From the code:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  when Hash
    if expected_partial = options[:partial]
      if expected_locals = options[:locals]
        actual_locals = @locals[expected_partial.to_s.sub(/^_/,'')]
        expected_locals.each_pair do |k,v|
          assert_equal(v, actual_locals[k])
        end
      elsif expected_count = options[:count]
        actual_count = @partials[expected_partial]
        msg = build_message(message,
                &quot;expecting ? to be rendered ? time(s) but rendered ? time(s)&quot;,
                 expected_partial, expected_count, actual_count)
        assert(actual_count == expected_count.to_i, msg)
      elsif options.key?(:layout)
        msg = build_message(message,
                &quot;expecting layout &amp;lt;?&amp;gt; but action rendered &amp;lt;?&amp;gt;&quot;,
                expected_layout, @layouts.keys)

        case layout = options[:layout]
        when String
          assert(@layouts.include?(expected_layout), msg)
        when Regexp
          assert(@layouts.any? {|l| l =~ layout }, msg)
        when nil
          assert(@layouts.empty?, msg)
        end
      else
        msg = build_message(message,
                &quot;expecting partial &amp;lt;?&amp;gt; but action rendered &amp;lt;?&amp;gt;&quot;,
                options[:partial], @partials.keys)
        assert(@partials.include?(expected_partial), msg)
      end
    else
      assert @partials.empty?,
        &quot;Expected no partials to be rendered&quot;
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that the test for the &quot;layout&quot; param (elsif
options.key?(:layout)) is nested within the check to see if you are
testing for partials (if expected_partial = options[:partial]).&lt;/p&gt;
&lt;p&gt;If I assume that this is correct behavior, which I don't think
it should be, even if I pass in :partial =&amp;gt; &quot;something&quot; then I
get an error that says &quot;undefined local variable expected_layout&quot;
because no where in assert_template does that variable get
assigned.&lt;/p&gt;
&lt;p&gt;I have looked through master and have found some tests that seem
to be testing this but I am not sure that they are working properly
because if you don't pass in the :partial option then it ignores
the three assertions that test the @layouts collection.&lt;/p&gt;
&lt;p&gt;Patches upcoming...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-30T05:53:11+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-07-30T05:53:12+01:00</updated-at>
      <user-id type="integer">108963</user-id>
      <version type="integer">1</version>
      <user-name>Mike Gehard</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have confirmed that assert_template does not work as you would expect and as the tests show in /actionpack/test/controller/layout_test.rb.

Example:
class HasOwnLayoutController &lt; LayoutTest
#  layout 'item'
  layout 'item123'
end

def test_layout_set_when_set_in_controller
    @controller = HasOwnLayoutController.new
    get :hello
    assert_template :layout =&gt; &quot;layouts/item&quot;
  end

This test still passes with the changed layout.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have confirmed that assert_template does not work as you would
expect and as the tests show in
/actionpack/test/controller/layout_test.rb.&lt;/p&gt;
&lt;p&gt;Example:&lt;br&gt;
class HasOwnLayoutController &amp;lt; LayoutTest&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;layout 'item'&lt;/h1&gt;
&lt;p&gt;layout 'item123' end&lt;/p&gt;
&lt;p&gt;def test_layout_set_when_set_in_controller&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@controller = HasOwnLayoutController.new
get :hello
assert_template :layout =&amp;gt; &quot;layouts/item&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;This test still passes with the changed layout.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-30T15:40:14+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-07-30T15:40:15+01:00</updated-at>
      <user-id type="integer">108963</user-id>
      <version type="integer">2</version>
      <user-name>Mike Gehard</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is the patch that makes checking for layouts independent of checking for partials.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is the patch that makes checking for layouts independent of
checking for partials.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-02T16:01:23+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-02T16:01:27+01:00</updated-at>
      <user-id type="integer">108963</user-id>
      <version type="integer">3</version>
      <user-name>Mike Gehard</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T15:35:52+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch rails3</tag>
      <title>assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-10T15:35:53+01:00</updated-at>
      <user-id type="integer">108963</user-id>
      <version type="integer">4</version>
      <user-name>Mike Gehard</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I confirm that I have this problem too. 

Introduced here : http://github.com/rails/rails/commit/947f86c699b33bd44703b3554db58e4cfca37c86</body>
      <body-html>&lt;div&gt;&lt;p&gt;I confirm that I have this problem too.&lt;/p&gt;
&lt;p&gt;Introduced here : &lt;a href=
&quot;http://github.com/rails/rails/commit/947f86c699b33bd44703b3554db58e4cfca37c86&quot;&gt;
http://github.com/rails/rails/commit/947f86c699b33bd44703b3554db58e...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-15T20:31:51+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:title: assert_template wrong behavior for testing layout used to render template?
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-15T20:31:53+01:00</updated-at>
      <user-id type="integer">22204</user-id>
      <version type="integer">5</version>
      <user-name>Jean</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Today I find the one of online shop very good sell all kinds of shoes brand, such as the recreational &lt;a href=&quot;http://www.vibramshoesmall.com&quot;&gt; Vibram five finger shoes&lt;/a&gt; &#12289; help we unable to walk pose of &lt;a href=&quot;http://www.comfortoes.com&quot;&gt;cheap MBT shoes &lt;/a&gt; &#12289; sports series of &lt;a href=&quot;http://www.urliking.com&quot;&gt;Adidas shoes&lt;/a&gt; and &lt;a href=&quot;http://www.sneakerace.com&quot;&gt;Jordan shoes&lt;/a&gt;. And they also sell of the international brand - &lt;a href=&quot;http://www.gainbling.com&quot;&gt; Tiffany and co &lt;/a&gt; jewelry, lots of product I don't finish all say, you can also go to see!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today I find the one of online shop very good sell all kinds of
shoes brand, such as the recreational &lt;a href=
&quot;http://www.vibramshoesmall.com&quot;&gt;Vibram five finger shoes&lt;/a&gt;
&amp;#12289; help we unable to walk pose of &lt;a href=
&quot;http://www.comfortoes.com&quot;&gt;cheap MBT shoes&lt;/a&gt; &amp;#12289; sports
series of &lt;a href=&quot;http://www.urliking.com&quot;&gt;Adidas shoes&lt;/a&gt; and
&lt;a href=&quot;http://www.sneakerace.com&quot;&gt;Jordan shoes&lt;/a&gt;. And they also
sell of the international brand - &lt;a href=
&quot;http://www.gainbling.com&quot;&gt;Tiffany and co&lt;/a&gt; jewelry, lots of
product I don't finish all say, you can also go to see!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-17T08:36:13+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-17T16:22:24+01:00</updated-at>
      <user-id type="integer">111899</user-id>
      <version type="integer">6</version>
      <user-name>vivian</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Is there a problem with the patch ? 

It seems to work for me and in the meantime using the old way (@controller.response.layout) raises a deprecation warning which tells us to use template.layout instead. This would be fine except for 2 things : 
- @controller.response.template or @controller.template both return nil  (even though @controller.response.layout isn't)
- The template method itself is in the deprecated helper and I suppose will be deprecated soon enough</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is there a problem with the patch ?&lt;/p&gt;
&lt;p&gt;It seems to work for me and in the meantime using the old way
(@controller.response.layout) raises a deprecation warning which
tells us to use template.layout instead. This would be fine except
for 2 things :&lt;br&gt;
- @controller.response.template or @controller.template both return
nil (even though @controller.response.layout isn't) - The template
method itself is in the deprecated helper and I suppose will be
deprecated soon enough&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-18T13:09:00+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-18T13:09:01+01:00</updated-at>
      <user-id type="integer">22204</user-id>
      <version type="integer">7</version>
      <user-name>Jean</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This patch does not apply cleanly anymore. Would you mind to do it again, thank you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch does not apply cleanly anymore. Would you mind to do
it again, thank you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-24T12:25:43+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-24T12:25:46+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I checked out the latest rails 3-0-stable and recreated the patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I checked out the latest rails 3-0-stable and recreated the
patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-24T13:34:12+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-24T13:34:14+01:00</updated-at>
      <user-id type="integer">22204</user-id>
      <version type="integer">9</version>
      <user-name>Jean</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-24T18:19:45+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-24T18:19:47+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27625)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27625&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T04:10:33+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-08-30T04:10:33+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">11</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-15T23:01:59+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 82861
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport patch rails3</tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-10-15T23:01:59+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">12</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-16T02:42:40+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport patch rails3
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-10-16T02:42:48+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">14</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>It seems to work for me and in the meantime using the old way (@controller.response.layout) raises a &lt;a href=&quot;http://www.weddinginthebox.com/blog/organza-wedding-dress.html&quot;&gt;Organza wedding gown&lt;/a&gt; warning which tells us to use template.layout instead. This would be fine except for 2 things</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems to work for me and in the meantime using the old way
(@controller.response.layout) raises a &lt;a href=
&quot;http://www.weddinginthebox.com/blog/organza-wedding-dress.html&quot;&gt;Organza
wedding gown&lt;/a&gt; warning which tells us to use template.layout
instead. This would be fine except for 2 things&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T06:34:54+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-10-19T17:52:54+01:00</updated-at>
      <user-id type="integer">120610</user-id>
      <version type="integer">15</version>
      <user-name>koukou</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>It seems like the patch will no longer catch `:layout =&gt; false` since it does an `if expected_layout = options[:layout]` - which will never pass if :layout is false. It should use the original method of checking if the :layout key is present.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems like the patch will no longer catch &lt;code&gt;:layout =&amp;gt;
false&lt;/code&gt; since it does an &lt;code&gt;if expected_layout =
options[:layout]&lt;/code&gt; - which will never pass if :layout is
false. It should use the original method of checking if the :layout
key is present.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-21T11:39:13+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-10-21T11:39:18+01:00</updated-at>
      <user-id type="integer">100198</user-id>
      <version type="integer">16</version>
      <user-name>Dave Myron</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/34349)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/34349&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T21:04:51+00:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 88038
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2010-11-15T21:04:51+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">17</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/42275)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/42275&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T21:58:22+00:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 92071
</diffable-attributes>
      <milestone-id type="integer">101623</milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2011-02-12T21:58:22+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">18</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title>3.0.5</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/43692)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/43692&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-27T03:15:39+00:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 101623
</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2011-02-27T03:15:39+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">19</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This bug appears to be a symptom of this: http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/303aa9608bef3ebd

The bug isn't really assert_template, but the fact that using :partial and :layout together force the layout to be a partial.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This bug appears to be a symptom of this: &lt;a href=
&quot;http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/303aa9608bef3ebd&quot;&gt;
http://groups.google.com/group/rubyonrails-talk/browse_thread/threa...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The bug isn't really assert_template, but the fact that using
:partial and :layout together force the layout to be a partial.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-07T00:15:50+01:00</created-at>
      <creator-id type="integer">108963</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">103410</milestone-id>
      <number type="integer">5247</number>
      <permalink>assert_template-wrong-behavior-for-testing-layout-used-to-render-template</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_template wrong behavior for testing layout used to render template?</title>
      <updated-at type="datetime">2011-04-07T00:16:11+01:00</updated-at>
      <user-id type="integer">144245</user-id>
      <version type="integer">20</version>
      <user-name>Geoffrey Hichborn</user-name>
      <creator-name>Mike Gehard</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5247</url>
      <milestone-title>3.0.6</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>95c2c844c1ed62d7290ea8e52d0fa0ed6fb003e8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-02T16:01:23+01:00</created-at>
      <filename>fix-assert_tempate-to-actually-check-layouts.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">611424</id>
      <size type="integer">3537</size>
      <uploader-id type="integer">108963</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/611424/fix-assert_tempate-to-actually-check-layouts.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>cb5f5995bd1b2018603efc7717039f5e1f2d11bc</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-24T13:34:12+01:00</created-at>
      <filename>0001-rebase-patch-from-mike-gehard-on-rails-3-0-stable-he.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">642081</id>
      <size type="integer">3185</size>
      <uploader-id type="integer">22204</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/642081/0001-rebase-patch-from-mike-gehard-on-rails-3-0-stable-he.patch</url>
    </attachment>
  </attachments>
</ticket>
