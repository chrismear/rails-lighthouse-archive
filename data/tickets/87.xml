<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:55:22+01:00</created-at>
  <creator-id type="integer">21</creator-id>
  <milestone-due-on type="datetime">2009-03-18T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">9901</milestone-id>
  <number type="integer">87</number>
  <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2.0-stable actionpack activesupport bug const_missing controller core_ext dependencies edge patch tests</tag>
  <title>Dependencies shouldn't swallow errors from required files.</title>
  <updated-at type="datetime">2010-10-11T00:01:16+01:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">8</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Marcel Molina</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
  <milestone-title>2.1.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>What I did:
I, unknowingly, invoked alias_method in a controller incorrectly by supplying the arguments in the wrong order. 

What should have happened:
Usually this would raise an exception saying something like &quot;No such method defined `whatever_your_alias_is_called'&quot;. 

What happened:
When I ran my tests though, before I'd realized I'd invoked alias_method with the arguments in the wrong order, the exception I was greeted with was:

&quot;Expected foos_controller.rb to defined FoosController&quot;. In this case foos_controller.rb *does* in fact define FoosController, so the exception is entirely misleading.

To find out the actual exception, I added an initializer that required 'application' and then 'foos_controller' to circumvent const_missing auto loading. Then the actual proper exception was raised.


Versions effected:
This behavior is both in 2.0.2 and in edge.</original-body>
  <latest-body>What I did:
I, unknowingly, invoked alias_method in a controller incorrectly by supplying the arguments in the wrong order. 

What should have happened:
Usually this would raise an exception saying something like &quot;No such method defined `whatever_your_alias_is_called'&quot;. 

What happened:
When I ran my tests though, before I'd realized I'd invoked alias_method with the arguments in the wrong order, the exception I was greeted with was:

&quot;Expected foos_controller.rb to defined FoosController&quot;. In this case foos_controller.rb *does* in fact define FoosController, so the exception is entirely misleading.

To find out the actual exception, I added an initializer that required 'application' and then 'foos_controller' to circumvent const_missing auto loading. Then the actual proper exception was raised.


Versions effected:
This behavior is both in 2.0.2 and in edge.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
What I did:
&lt;/p&gt;&lt;p&gt;
I, unknowingly, invoked alias_method in a controller incorrectly by supplying the arguments in the wrong order.
&lt;/p&gt;&lt;p&gt;
What should have happened:
&lt;/p&gt;&lt;p&gt;
Usually this would raise an exception saying something like &quot;No such method defined `whatever_your_alias_is_called'&quot;.
&lt;/p&gt;&lt;p&gt;
What happened:
&lt;/p&gt;&lt;p&gt;
When I ran my tests though, before I'd realized I'd invoked alias_method with the arguments in the wrong order, the exception I was greeted with was:
&lt;/p&gt;&lt;p&gt;
&quot;Expected foos_controller.rb to defined FoosController&quot;. In this case foos_controller.rb &lt;strong&gt;does&lt;/strong&gt; in fact define FoosController, so the exception is entirely misleading.
&lt;/p&gt;&lt;p&gt;
To find out the actual exception, I added an initializer that required 'application' and then 'foos_controller' to circumvent const_missing auto loading. Then the actual proper exception was raised.
&lt;/p&gt;&lt;p&gt;
Versions effected:
&lt;/p&gt;&lt;p&gt;
This behavior is both in 2.0.2 and in edge.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>h1. What I did:
I, unknowingly, invoked alias_method in a controller incorrectly by supplying the arguments in the wrong order. 

h1. What should have happened:
Usually this would raise an exception saying something like &quot;No such method defined `whatever_your_alias_is_called'&quot;. 

h1. What happened:
When I ran my tests though, before I'd realized I'd invoked alias_method with the arguments in the wrong order, the exception I was greeted with was:

&quot;Expected foos_controller.rb to defined FoosController&quot;. In this case foos_controller.rb *does* in fact define FoosController, so the exception is entirely misleading.

To find out the actual exception, I added an initializer that required 'application' and then 'foos_controller' to circumvent const_missing auto loading. Then the actual proper exception was raised.

h1. Versions effected:
This behavior is both in 2.0.2 and in edge.</body>
      <body-html>&lt;div&gt;&lt;h1&gt;
What I did:
&lt;/h1&gt;
&lt;p&gt;
I, unknowingly, invoked alias_method in a controller incorrectly by supplying the arguments in the wrong order.
&lt;/p&gt;
&lt;h1&gt;
What should have happened:
&lt;/h1&gt;
&lt;p&gt;
Usually this would raise an exception saying something like &quot;No such method defined `whatever_your_alias_is_called'&quot;.
&lt;/p&gt;
&lt;h1&gt;
What happened:
&lt;/h1&gt;
&lt;p&gt;
When I ran my tests though, before I'd realized I'd invoked alias_method with the arguments in the wrong order, the exception I was greeted with was:
&lt;/p&gt;&lt;p&gt;
&quot;Expected foos_controller.rb to defined FoosController&quot;. In this case foos_controller.rb &lt;strong&gt;does&lt;/strong&gt; in fact define FoosController, so the exception is entirely misleading.
&lt;/p&gt;&lt;p&gt;
To find out the actual exception, I added an initializer that required 'application' and then 'foos_controller' to circumvent const_missing auto loading. Then the actual proper exception was raised.
&lt;/p&gt;
&lt;h1&gt;
Versions effected:
&lt;/h1&gt;
&lt;p&gt;
This behavior is both in 2.0.2 and in edge.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T21:11:26+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Incorrect alias_method call in controller causes misleading const_missing exception</title>
      <updated-at type="datetime">2008-05-01T21:11:26+01:00</updated-at>
      <user-id type="integer">21</user-id>
      <version type="integer">1</version>
      <user-name>Marcel Molina</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Plz send patches newb</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Plz send patches newb
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T22:20:41+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Incorrect alias_method call in controller causes misleading const_missing exception</title>
      <updated-at type="datetime">2008-05-01T22:20:41+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is frustrating as it masks the true error.  I get similar behaviour when I use my 'apple ruby' which doesn't have rmagick installed.

Dependencies shouldn't drop the load error on the ground, it should at the very least show what the original error was, if not raise the original exception</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This is frustrating as it masks the true error.  I get similar behaviour when I use my 'apple ruby' which doesn't have rmagick installed.
&lt;/p&gt;&lt;p&gt;
Dependencies shouldn't drop the load error on the ground, it should at the very least show what the original error was, if not raise the original exception
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T22:27:07+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:title: Incorrect alias_method call in controller causes misleading const_missing exception
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dependencies shouldn't swallow errors from required files.</title>
      <updated-at type="datetime">2008-05-01T22:27:07+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 for wishing this didn't occur.  Some work has been done on 
http://dev.rubyonrails.org/ticket/7452
for it [though nothing really satisfactory].</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1 for wishing this didn't occur.  Some work has been done on
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://dev.rubyonrails.org/ticket/7452&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
for it [though nothing really satisfactory].
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-02T02:28:52+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dependencies shouldn't swallow errors from required files.</title>
      <updated-at type="datetime">2008-05-02T02:28:52+01:00</updated-at>
      <user-id type="integer">18996</user-id>
      <version type="integer">4</version>
      <user-name>Roger</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've only found one way to reproduce this; In production mode, if an error occurs on the first require of a file, on subsequent requires the error will mask the real problem.  I've created a patch that fixes this, but there may well be other ways to make this occur.

If anyone has any other reproducible examples, I'm happy to take a look.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've only found one way to reproduce this; In production mode, if an error occurs on the first require of a file, on subsequent requires the error will mask the real problem.  I've created a patch that fixes this, but there may well be other ways to make this occur.
&lt;/p&gt;&lt;p&gt;
If anyone has any other reproducible examples, I'm happy to take a look.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-23T15:54:07+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dependencies shouldn't swallow errors from required files.</title>
      <updated-at type="datetime">2008-05-23T15:54:07+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">5</version>
      <user-name>Tom Ward</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I believe it happened to me if there was an error in a plugin loading.  Like a syntax error in one of the files.  The 'real' error message was never output.  
In one instance, it was because the plugin filename didn't use rails'ish style syntax [was name acts-as-something instead of acts_as_something].  I'll let you know if I run into it again.
-R</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I believe it happened to me if there was an error in a plugin loading.  Like a syntax error in one of the files.  The 'real' error message was never output.
&lt;/p&gt;&lt;p&gt;
In one instance, it was because the plugin filename didn't use rails'ish style syntax [was name acts-as-something instead of acts_as_something].  I'll let you know if I run into it again.
&lt;/p&gt;&lt;p&gt;
-R
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-23T18:01:36+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dependencies shouldn't swallow errors from required files.</title>
      <updated-at type="datetime">2008-05-23T18:01:36+01:00</updated-at>
      <user-id type="integer">18996</user-id>
      <version type="integer">6</version>
      <user-name>Roger</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That specific problem (the plugin-with-hyphenated-name) loading issue was fixed in #24.  I got tripped up by that too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
That specific problem (the plugin-with-hyphenated-name) loading issue was fixed in &lt;a href=&quot;/projects/8994/tickets/24&quot; title=&quot;Ticket #24&quot;&gt;#24&lt;/a&gt;.  I got tripped up by that too.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-23T18:10:36+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dependencies shouldn't swallow errors from required files.</title>
      <updated-at type="datetime">2008-05-23T18:10:36+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">7</version>
      <user-name>Tom Ward</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T00:01:14+01:00</created-at>
      <creator-id type="integer">21</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">87</number>
      <permalink>incorrect-alias_method-call-in-controller-causes-misleading-const_missing-exception</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.0-stable actionpack activesupport bug const_missing controller core_ext dependencies edge patch tests</tag>
      <title>Dependencies shouldn't swallow errors from required files.</title>
      <updated-at type="datetime">2010-10-11T00:01:16+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Marcel Molina</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/87</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>6bb1c2f27b1d26efc942dc3da46deeb28351d918</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-23T15:54:07+01:00</created-at>
      <filename>dont_mask_errors_on_require.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">24313</id>
      <size type="integer">2616</size>
      <uploader-id type="integer">14288</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/24313/dont_mask_errors_on_require.diff</url>
    </attachment>
  </attachments>
</ticket>
