<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-22T06:48:03+01:00</created-at>
  <creator-id type="integer">39878</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6726</number>
  <permalink>patch-speedup-associations-preloading-when-multiple-options-are-used-in-include-23x-branch</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>2.3.x associations_preload patch performance</tag>
  <title>[PATCH] Speedup associations preloading when multiple options are used in :include (2.3.x branch)</title>
  <updated-at type="datetime">2011-04-22T06:48:03+01:00</updated-at>
  <user-id type="integer">39878</user-id>
  <version type="integer">1</version>
  <user-name>Kirill Maximov</user-name>
  <creator-name>Kirill Maximov</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6726</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hello,

  When ActiveRecord's find() option :include =&gt; [a lot of stuff], 
  the current association preloading code may be not very efficient, 
  because it calls flatten.compact.uniq for each option for :include.
  
  This can be done only once, and this really improves performance when there are hundreds of records for which 
  associations are preloaded.

  The fix is very simple, please see the attached patch.
  
  2.3.x is still alive, I belive :)

  Thanks,
  KIR</original-body>
  <latest-body>Hello,

  When ActiveRecord's find() option :include =&gt; [a lot of stuff], 
  the current association preloading code may be not very efficient, 
  because it calls flatten.compact.uniq for each option for :include.
  
  This can be done only once, and this really improves performance when there are hundreds of records for which 
  associations are preloaded.

  The fix is very simple, please see the attached patch.
  
  2.3.x is still alive, I belive :)

  Thanks,
  KIR</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;When ActiveRecord's find() option :include =&amp;gt; [a lot of
stuff], the current association preloading code may be not very
efficient, because it calls flatten.compact.uniq for each option
for :include.&lt;/p&gt;
&lt;p&gt;This can be done only once, and this really improves performance
when there are hundreds of records for which associations are
preloaded.&lt;/p&gt;
&lt;p&gt;The fix is very simple, please see the attached patch.&lt;/p&gt;
&lt;p&gt;2.3.x is still alive, I belive :)&lt;/p&gt;
&lt;p&gt;Thanks, KIR&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello,

  When ActiveRecord's find() option :include =&gt; [a lot of stuff], 
  the current association preloading code may be not very efficient, 
  because it calls flatten.compact.uniq for each option for :include.
  
  This can be done only once, and this really improves performance when there are hundreds of records for which 
  associations are preloaded.

  The fix is very simple, please see the attached patch.
  
  2.3.x is still alive, I belive :)

  Thanks,
  KIR</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;When ActiveRecord's find() option :include =&amp;gt; [a lot of
stuff], the current association preloading code may be not very
efficient, because it calls flatten.compact.uniq for each option
for :include.&lt;/p&gt;
&lt;p&gt;This can be done only once, and this really improves performance
when there are hundreds of records for which associations are
preloaded.&lt;/p&gt;
&lt;p&gt;The fix is very simple, please see the attached patch.&lt;/p&gt;
&lt;p&gt;2.3.x is still alive, I belive :)&lt;/p&gt;
&lt;p&gt;Thanks, KIR&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-19T22:18:27+01:00</created-at>
      <creator-id type="integer">39878</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6726</number>
      <permalink>patch-speedup-associations-preloading-when-multiple-options-are-used-in-include-23x-branch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x associations_preload patch performance</tag>
      <title>[PATCH] Speedup associations preloading when multiple options are used in :include (2.3.x branch)</title>
      <updated-at type="datetime">2011-04-19T22:18:29+01:00</updated-at>
      <user-id type="integer">39878</user-id>
      <version type="integer">1</version>
      <user-name>Kirill Maximov</user-name>
      <creator-name>Kirill Maximov</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6726</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>PDF to JPG Converter is a more efficient pdf to jpg conversion software
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to image converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to tiff converter&lt;/a&gt;
which is able to convert pdf to jpg format with original output quality and fast conversion speed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;PDF to JPG Converter is a more efficient pdf to jpg conversion
software&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg
converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to
image converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to
tiff converter&lt;/a&gt;&lt;br&gt;
which is able to convert pdf to jpg format with original output
quality and fast conversion speed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-22T04:48:48+01:00</created-at>
      <creator-id type="integer">39878</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6726</number>
      <permalink>patch-speedup-associations-preloading-when-multiple-options-are-used-in-include-23x-branch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x associations_preload patch performance</tag>
      <title>[PATCH] Speedup associations preloading when multiple options are used in :include (2.3.x branch)</title>
      <updated-at type="datetime">2011-04-22T06:48:03+01:00</updated-at>
      <user-id type="integer">146598</user-id>
      <version type="integer">2</version>
      <user-name>machen</user-name>
      <creator-name>Kirill Maximov</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6726</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>3f5aac11d195f5e2cde635537c40640f88070432</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-04-19T22:18:27+01:00</created-at>
      <filename>speedup_association_preload.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">1023473</id>
      <size type="integer">2173</size>
      <uploader-id type="integer">39878</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/1023473/speedup_association_preload.diff</url>
    </attachment>
  </attachments>
</ticket>
