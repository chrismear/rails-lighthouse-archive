<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-15T22:00:18+01:00</created-at>
  <creator-id type="integer">18828</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">204</number>
  <permalink>serialized-attribute-fails-when-specified-in-sti-subclass</permalink>
  <priority type="integer">15144</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord bug patch serialized tested</tag>
  <title>serialized :attribute fails when specified in STI subclass</title>
  <updated-at type="datetime">2009-09-07T17:32:32+01:00</updated-at>
  <user-id type="integer">47360</user-id>
  <version type="integer">4</version>
  <user-name>Zack Hobson</user-name>
  <creator-name>Wes</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/204</url>
  <priority-name nil="true"></priority-name>
  <original-body>When using STI, if a subclass specifies that an attribute is to be serialized, and that attribute was not specified as serialized in the base class, serialization of the attribute fails.

This bug will only occur in production, not in development mode due to the class reloading in development mode.

class Droid &lt; ActiveRecord::Base
end

class R2D2 &lt; Droid
  serialize :secret_message
end

If the R2D2 class is loaded in production after the Droid class is loaded, then the serialization of the secret_message attribute will fail.

Patch and tests attached.</original-body>
  <latest-body>When using STI, if a subclass specifies that an attribute is to be serialized, and that attribute was not specified as serialized in the base class, serialization of the attribute fails.

This bug will only occur in production, not in development mode due to the class reloading in development mode.

class Droid &lt; ActiveRecord::Base
end

class R2D2 &lt; Droid
  serialize :secret_message
end

If the R2D2 class is loaded in production after the Droid class is loaded, then the serialization of the secret_message attribute will fail.

Patch and tests attached.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When using STI, if a subclass specifies that an attribute is to be serialized, and that attribute was not specified as serialized in the base class, serialization of the attribute fails.
&lt;/p&gt;&lt;p&gt;
This bug will only occur in production, not in development mode due to the class reloading in development mode.
&lt;/p&gt;&lt;p&gt;
class Droid &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class R2D2 &amp;lt; Droid
&lt;/p&gt;&lt;p&gt;
serialize :secret_message
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
If the R2D2 class is loaded in production after the Droid class is loaded, then the serialization of the secret_message attribute will fail.
&lt;/p&gt;&lt;p&gt;
Patch and tests attached.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using STI, if a subclass specifies that an attribute is to be serialized, and that attribute was not specified as serialized in the base class, serialization of the attribute fails.

This bug will only occur in production, not in development mode due to the class reloading in development mode.

class Droid &lt; ActiveRecord::Base
end

class R2D2 &lt; Droid
  serialize :secret_message
end

If the R2D2 class is loaded in production after the Droid class is loaded, then the serialization of the secret_message attribute will fail.

Patch and tests attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When using STI, if a subclass specifies that an attribute is to be serialized, and that attribute was not specified as serialized in the base class, serialization of the attribute fails.
&lt;/p&gt;&lt;p&gt;
This bug will only occur in production, not in development mode due to the class reloading in development mode.
&lt;/p&gt;&lt;p&gt;
class Droid &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class R2D2 &amp;lt; Droid
&lt;/p&gt;&lt;p&gt;
serialize :secret_message
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
If the R2D2 class is loaded in production after the Droid class is loaded, then the serialization of the secret_message attribute will fail.
&lt;/p&gt;&lt;p&gt;
Patch and tests attached.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-15T22:00:19+01:00</created-at>
      <creator-id type="integer">18828</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">204</number>
      <permalink>serialized-attribute-fails-when-specified-in-sti-subclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>serialized :attribute fails when specified in STI subclass</title>
      <updated-at type="datetime">2008-05-15T22:00:19+01:00</updated-at>
      <user-id type="integer">18828</user-id>
      <version type="integer">1</version>
      <user-name>Wes</user-name>
      <creator-name>Wes</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/204</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-15T22:03:07+01:00</created-at>
      <creator-id type="integer">18828</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">204</number>
      <permalink>serialized-attribute-fails-when-specified-in-sti-subclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>serialized :attribute fails when specified in STI subclass</title>
      <updated-at type="datetime">2008-05-15T22:03:07+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Wes</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/204</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-20T01:52:40+01:00</created-at>
      <creator-id type="integer">18828</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">204</number>
      <permalink>serialized-attribute-fails-when-specified-in-sti-subclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug patch serialized tested</tag>
      <title>serialized :attribute fails when specified in STI subclass</title>
      <updated-at type="datetime">2008-08-20T01:52:40+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Wes</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/204</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue is affecting me in Rails 2.3.4, and the included patch fixes it for me (it applies cleanly to tag v2.3.4 using git apply). Any chance this patch can be included in Rails?</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue is affecting me in Rails 2.3.4, and the included
patch fixes it for me (it applies cleanly to tag v2.3.4 using git
apply). Any chance this patch can be included in Rails?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-07T17:32:27+01:00</created-at>
      <creator-id type="integer">18828</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">204</number>
      <permalink>serialized-attribute-fails-when-specified-in-sti-subclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug patch serialized tested</tag>
      <title>serialized :attribute fails when specified in STI subclass</title>
      <updated-at type="datetime">2009-09-07T17:32:32+01:00</updated-at>
      <user-id type="integer">47360</user-id>
      <version type="integer">4</version>
      <user-name>Zack Hobson</user-name>
      <creator-name>Wes</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/204</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5f5629787049f5f738ba15a36c11cf7a79eeb18c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-15T22:00:19+01:00</created-at>
      <filename>0001-Patch-for-STI-subclass-serialized-bug.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">23147</id>
      <size type="integer">4038</size>
      <uploader-id type="integer">18828</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/23147/0001-Patch-for-STI-subclass-serialized-bug.patch</url>
    </attachment>
  </attachments>
</ticket>
