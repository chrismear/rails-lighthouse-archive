<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-16T17:15:19+00:00</created-at>
  <creator-id type="integer">40765</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1584</number>
  <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
  <priority type="integer">934</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord adapters i18n text_field</tag>
  <title>text_field should show and accept translated separator on BigDecimal fields </title>
  <updated-at type="datetime">2011-02-02T19:10:01+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">7</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Alessandro Zarrilli</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>In a lot of european countries you use a comma to separate decimals instead of a dot: when dealing with BigDecimal fields, text_field doesn't currently care about the number/format/separator specified in the yml localization file.
But even if text_field would care, this would solve just half of the problem: we need our Rails apps not just to output numbers with commas, but also to accept them as input. So maybe it's ActiveRecord setters job to accept and translate the localized separator?
IMHO the best thing would be to patch BigDecimal class so that:
* &quot;new&quot; and &quot;=&quot; methods would accept the localized separator
* &quot;to_s&quot; would output a string containing the localized separator
Actually I tried this and everything worked... until I tried to INSERT/UPDATE my database: MySQL adapter calls &quot;to_s&quot; on the BigDecimal object, and of course MySQL doesn't like a decimal field containing a comma! So adapters need to be patched so that they force the &quot;en&quot; localization before calling the &quot;to_s&quot; method on the BigDecimal. Another option is to add a &quot;to_s_not_localized&quot; method to BigDecimal class and let the adapters call this method instead.</original-body>
  <latest-body>In a lot of european countries you use a comma to separate decimals instead of a dot: when dealing with BigDecimal fields, text_field doesn't currently care about the number/format/separator specified in the yml localization file.
But even if text_field would care, this would solve just half of the problem: we need our Rails apps not just to output numbers with commas, but also to accept them as input. So maybe it's ActiveRecord setters job to accept and translate the localized separator?
IMHO the best thing would be to patch BigDecimal class so that:
* &quot;new&quot; and &quot;=&quot; methods would accept the localized separator
* &quot;to_s&quot; would output a string containing the localized separator
Actually I tried this and everything worked... until I tried to INSERT/UPDATE my database: MySQL adapter calls &quot;to_s&quot; on the BigDecimal object, and of course MySQL doesn't like a decimal field containing a comma! So adapters need to be patched so that they force the &quot;en&quot; localization before calling the &quot;to_s&quot; method on the BigDecimal. Another option is to add a &quot;to_s_not_localized&quot; method to BigDecimal class and let the adapters call this method instead.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In a lot of european countries you use a comma to separate
decimals instead of a dot: when dealing with BigDecimal fields,
text_field doesn't currently care about the number/format/separator
specified in the yml localization file. But even if text_field
would care, this would solve just half of the problem: we need our
Rails apps not just to output numbers with commas, but also to
accept them as input. So maybe it's ActiveRecord setters job to
accept and translate the localized separator? IMHO the best thing
would be to patch BigDecimal class so that: * &quot;new&quot; and &quot;=&quot; methods
would accept the localized separator * &quot;to_s&quot; would output a string
containing the localized separator Actually I tried this and
everything worked... until I tried to INSERT/UPDATE my database:
MySQL adapter calls &quot;to_s&quot; on the BigDecimal object, and of course
MySQL doesn't like a decimal field containing a comma! So adapters
need to be patched so that they force the &quot;en&quot; localization before
calling the &quot;to_s&quot; method on the BigDecimal. Another option is to
add a &quot;to_s_not_localized&quot; method to BigDecimal class and let the
adapters call this method instead.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In a lot of european countries you use a comma to separate decimals instead of a dot: when dealing with BigDecimal fields, text_field doesn't currently care about the number/format/separator specified in the yml localization file.

But even if text_field would care, this would solve just half of the problem: we need our Rails apps not just to output numbers with commas, but also to accept them as input. So maybe it's ActiveRecord setters job to accept and translate the localized separator?

IMHO the best thing would be to patch BigDecimal class so that:

- &quot;new&quot; and &quot;=&quot; methods would accept the localized separator
- &quot;to_s&quot; would output a string containing the localized separator

Actually I tried this and everything worked... until I tried to INSERT/UPDATE my database: MySQL adapter calls &quot;to_s&quot; on the BigDecimal object, and of course MySQL doesn't like a decimal field containing a comma! So adapters need to be patched so that they force the &quot;en&quot; localization before calling the &quot;to_s&quot; method on the BigDecimal. Another option is to add a &quot;to_s_not_localized&quot; method to BigDecimal class and let the adapters call this method instead.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In a lot of european countries you use a comma to separate
decimals instead of a dot: when dealing with BigDecimal fields,
text_field doesn't currently care about the number/format/separator
specified in the yml localization file.&lt;/p&gt;
&lt;p&gt;But even if text_field would care, this would solve just half of
the problem: we need our Rails apps not just to output numbers with
commas, but also to accept them as input. So maybe it's
ActiveRecord setters job to accept and translate the localized
separator?&lt;/p&gt;
&lt;p&gt;IMHO the best thing would be to patch BigDecimal class so
that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;new&quot; and &quot;=&quot; methods would accept the localized separator&lt;/li&gt;
&lt;li&gt;&quot;to_s&quot; would output a string containing the localized
separator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actually I tried this and everything worked... until I tried to
INSERT/UPDATE my database: MySQL adapter calls &quot;to_s&quot; on the
BigDecimal object, and of course MySQL doesn't like a decimal field
containing a comma! So adapters need to be patched so that they
force the &quot;en&quot; localization before calling the &quot;to_s&quot; method on the
BigDecimal. Another option is to add a &quot;to_s_not_localized&quot; method
to BigDecimal class and let the adapters call this method
instead.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-16T17:15:19+00:00</created-at>
      <creator-id type="integer">40765</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1584</number>
      <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord adapters i18n text_field</tag>
      <title>text_field should show and accept translated separator on BigDecimal fields </title>
      <updated-at type="datetime">2008-12-16T17:20:04+00:00</updated-at>
      <user-id type="integer">40765</user-id>
      <version type="integer">1</version>
      <user-name>Alessandro Zarrilli</user-name>
      <creator-name>Alessandro Zarrilli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Are you able to submit a patch for this showing how this fails?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Are you able to submit a patch for this showing how this
fails?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T08:47:13+01:00</created-at>
      <creator-id type="integer">40765</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1584</number>
      <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord adapters i18n text_field</tag>
      <title>text_field should show and accept translated separator on BigDecimal fields </title>
      <updated-at type="datetime">2010-04-10T08:47:15+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Alessandro Zarrilli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You could use my delocalize plugin for that (http://github.com/clemens/delocalize) &#8211;&#160;alternatively use Fernando's branch until I've pulled it in. I'm not sure something like this should go into Rails directly since it is a *very* complex topic.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You could use my delocalize plugin for that (&lt;a href=
&quot;http://github.com/clemens/delocalize&quot;&gt;http://github.com/clemens/delocalize&lt;/a&gt;)
&amp;#8211;&amp;nbsp;alternatively use Fernando's branch until I've pulled
it in. I'm not sure something like this should go into Rails
directly since it is a &lt;em&gt;very&lt;/em&gt; complex topic.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T20:22:18+01:00</created-at>
      <creator-id type="integer">40765</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1584</number>
      <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord adapters i18n text_field</tag>
      <title>text_field should show and accept translated separator on BigDecimal fields </title>
      <updated-at type="datetime">2010-04-10T20:22:21+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">3</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Alessandro Zarrilli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree with Clemens. This logic should be put in a plugin and not integrated into rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with Clemens. This logic should be put in a plugin and
not integrated into rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-11T02:05:39+01:00</created-at>
      <creator-id type="integer">40765</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1584</number>
      <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord adapters i18n text_field</tag>
      <title>text_field should show and accept translated separator on BigDecimal fields </title>
      <updated-at type="datetime">2010-04-11T02:05:42+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">4</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Alessandro Zarrilli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:37+01:00</created-at>
      <creator-id type="integer">40765</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1584</number>
      <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord adapters i18n text_field</tag>
      <title>text_field should show and accept translated separator on BigDecimal fields </title>
      <updated-at type="datetime">2010-05-04T18:48:37+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Alessandro Zarrilli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:03:52+00:00</created-at>
      <creator-id type="integer">40765</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1584</number>
      <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
      <priority type="integer">934</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord adapters i18n text_field</tag>
      <title>text_field should show and accept translated separator on BigDecimal fields </title>
      <updated-at type="datetime">2011-02-02T19:10:01+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Alessandro Zarrilli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:03:53+00:00</created-at>
      <creator-id type="integer">40765</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1584</number>
      <permalink>text_field-should-show-and-accept-translated-separator-on-bigdecimal-fields</permalink>
      <priority type="integer">934</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord adapters i18n text_field</tag>
      <title>text_field should show and accept translated separator on BigDecimal fields </title>
      <updated-at type="datetime">2011-02-02T19:09:50+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Alessandro Zarrilli</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1584</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
