From 4139fb6083ff8832dc352a0c52147aec80acf632 Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Tue, 4 May 2010 22:27:17 -0300
Subject: [PATCH 1/3] Make use of to_xml and to_json in tests

---
 activeresource/test/cases/base_test.rb |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/activeresource/test/cases/base_test.rb b/activeresource/test/cases/base_test.rb
index 2ed7e1c..e5f5569 100644
--- a/activeresource/test/cases/base_test.rb
+++ b/activeresource/test/cases/base_test.rb
@@ -1009,7 +1009,10 @@ class BaseTest < Test::Unit::TestCase
 
   def test_to_xml
     matz = Person.find(1)
-    xml = matz.encode
+    encode = matz.encode
+    xml = matz.to_xml
+
+    assert encode, xml
     assert xml.include?('<?xml version="1.0" encoding="UTF-8"?>')
     assert xml.include?('<name>Matz</name>')
     assert xml.include?('<id type="integer">1</id>')
@@ -1019,9 +1022,11 @@ class BaseTest < Test::Unit::TestCase
     Person.include_root_in_json = true
     Person.format = :json
     joe = Person.find(6)
-    json = joe.encode
+    encode = joe.encode
+    json = joe.to_json
     Person.format = :xml
 
+    assert encode, json
     assert_match %r{^\{"person":\{"person":\{}, json
     assert_match %r{"id":6}, json
     assert_match %r{"name":"Joe"}, json
-- 
1.7.1


From 8e194677d54e4ee68680ac2517c538b1d14cbb6e Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Tue, 11 May 2010 23:25:03 -0300
Subject: [PATCH 2/3] Refactor of active_model/naming.rb and allow collection and element to be writable

---
 activemodel/lib/active_model/naming.rb |   15 +++++++++++++--
 activemodel/test/cases/naming_test.rb  |   30 ++++++++++++++++++++++++++++++
 2 files changed, 43 insertions(+), 2 deletions(-)

diff --git a/activemodel/lib/active_model/naming.rb b/activemodel/lib/active_model/naming.rb
index 8cdd3d2..9c87004 100644
--- a/activemodel/lib/active_model/naming.rb
+++ b/activemodel/lib/active_model/naming.rb
@@ -11,9 +11,20 @@ module ActiveModel
       @klass = klass
       @singular = ActiveSupport::Inflector.underscore(self).tr('/', '_').freeze
       @plural = ActiveSupport::Inflector.pluralize(@singular).freeze
-      @element = ActiveSupport::Inflector.underscore(ActiveSupport::Inflector.demodulize(self)).freeze
+      @_custom_collection = false
+      self.element = ActiveSupport::Inflector.underscore(ActiveSupport::Inflector.demodulize(self)).freeze
+    end
+
+    def element=(element)
+      @element = element
       @human = ActiveSupport::Inflector.humanize(@element).freeze
-      @collection = ActiveSupport::Inflector.tableize(self).freeze
+      @collection = ActiveSupport::Inflector.tableize(self.sub(/[^:]*$/, @element)).freeze unless @_custom_collection
+      @partial_path = "#{@collection}/#{@element}".freeze
+    end
+
+    def collection=(collection)
+      @_custom_collection = true
+      @collection = collection
       @partial_path = "#{@collection}/#{@element}".freeze
     end
 
diff --git a/activemodel/test/cases/naming_test.rb b/activemodel/test/cases/naming_test.rb
index dc39b84..3918002 100644
--- a/activemodel/test/cases/naming_test.rb
+++ b/activemodel/test/cases/naming_test.rb
@@ -18,6 +18,26 @@ class NamingTest < ActiveModel::TestCase
     assert_equal 'track_back', @model_name.element
   end
 
+  def test_set_element
+    @model_name.element = 'foo'
+
+    assert_equal 'foo', @model_name.element
+    assert_equal 'Foo', @model_name.human
+    assert_equal 'post/foos', @model_name.collection
+    assert_equal 'post/foos/foo', @model_name.partial_path
+  end
+
+  def test_human
+    assert_equal 'Track back', @model_name.human
+  end
+
+  def test_set_collection
+    @model_name.collection = 'foo'
+
+    assert_equal 'foo', @model_name.collection
+    assert_equal 'foo/track_back', @model_name.partial_path
+  end
+
   def test_collection
     assert_equal 'post/track_backs', @model_name.collection
   end
@@ -25,4 +45,14 @@ class NamingTest < ActiveModel::TestCase
   def test_partial_path
     assert_equal 'post/track_backs/track_back', @model_name.partial_path
   end
+
+  def test_should_preserve_custom_collection
+    @model_name.collection = 'bar'
+    @model_name.element = 'foo'
+
+    assert_equal 'foo', @model_name.element
+    assert_equal 'Foo', @model_name.human
+    assert_equal 'bar', @model_name.collection
+    assert_equal 'bar/foo', @model_name.partial_path
+  end
 end
-- 
1.7.1


From a6c81631955c3e5bb88e8be7550eeff5e6a882cd Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Thu, 6 May 2010 12:35:08 -0300
Subject: [PATCH 3/3] Make ActiveResource serialize XML correctly when element_name is setted [#4529 state:committed]

---
 activemodel/lib/active_model/serializers/xml.rb    |    2 +-
 .../serializeration/xml_serialization_test.rb      |    4 +-
 activeresource/lib/active_resource/base.rb         |   19 ++++++++--
 activeresource/test/cases/base_test.rb             |   36 ++++++++++++++++++++
 4 files changed, 54 insertions(+), 7 deletions(-)

diff --git a/activemodel/lib/active_model/serializers/xml.rb b/activemodel/lib/active_model/serializers/xml.rb
index df7026b..934af2b 100644
--- a/activemodel/lib/active_model/serializers/xml.rb
+++ b/activemodel/lib/active_model/serializers/xml.rb
@@ -90,7 +90,7 @@ module ActiveModel
           @builder = options[:builder]
           @builder.instruct! unless options[:skip_instruct]
 
-          root = (options[:root] || @serializable.class.model_name.singular).to_s
+          root = (options[:root] || @serializable.class.model_name.element).to_s
           root = ActiveSupport::XmlMini.rename_key(root, options)
 
           args = [root]
diff --git a/activemodel/test/cases/serializeration/xml_serialization_test.rb b/activemodel/test/cases/serializeration/xml_serialization_test.rb
index 3ba826a..4e8e4ef 100644
--- a/activemodel/test/cases/serializeration/xml_serialization_test.rb
+++ b/activemodel/test/cases/serializeration/xml_serialization_test.rb
@@ -37,8 +37,8 @@ class XmlSerializationTest < ActiveModel::TestCase
 
   test "should serialize namespaced root" do
     @xml = Admin::Contact.new(@contact.attributes).to_xml
-    assert_match %r{^<admin-contact>},  @xml
-    assert_match %r{</admin-contact>$}, @xml
+    assert_match %r{^<contact>},  @xml
+    assert_match %r{</contact>$}, @xml
   end
 
   test "should serialize default root with namespace" do
diff --git a/activeresource/lib/active_resource/base.rb b/activeresource/lib/active_resource/base.rb
index ad99421..15d77df 100644
--- a/activeresource/lib/active_resource/base.rb
+++ b/activeresource/lib/active_resource/base.rb
@@ -551,11 +551,22 @@ module ActiveResource
         @headers ||= {}
       end
 
-      # Do not include any modules in the default element name. This makes it easier to seclude ARes objects
-      # in a separate namespace without having to set element_name repeatedly.
-      attr_accessor_with_default(:element_name)    { ActiveSupport::Inflector.underscore(to_s.split("::").last) } #:nodoc:
+      def element_name
+        model_name.element
+      end
+
+      def element_name=(value)
+        model_name.element = value
+      end
+
+      def collection_name
+        model_name.collection
+      end
+
+      def collection_name=(value)
+        model_name.collection = value
+      end
 
-      attr_accessor_with_default(:collection_name) { ActiveSupport::Inflector.pluralize(element_name) } #:nodoc:
       attr_accessor_with_default(:primary_key, 'id') #:nodoc:
 
       # Gets the \prefix for a resource's nested URL (e.g., <tt>prefix/collectionname/1.xml</tt>)
diff --git a/activeresource/test/cases/base_test.rb b/activeresource/test/cases/base_test.rb
index e5f5569..5df1f41 100644
--- a/activeresource/test/cases/base_test.rb
+++ b/activeresource/test/cases/base_test.rb
@@ -1018,6 +1018,23 @@ class BaseTest < Test::Unit::TestCase
     assert xml.include?('<id type="integer">1</id>')
   end
 
+  def test_to_xml_with_element_name
+    old_elem_name = Person.element_name
+    matz = Person.find(1)
+    Person.element_name = 'ruby_creator'
+    encode = matz.encode
+    xml = matz.to_xml
+
+    assert encode, xml
+    assert xml.include?('<?xml version="1.0" encoding="UTF-8"?>')
+    assert xml.include?('<ruby-creator>')
+    assert xml.include?('<name>Matz</name>')
+    assert xml.include?('<id type="integer">1</id>')
+    assert xml.include?('</ruby-creator>')
+  ensure
+    Person.element_name = old_elem_name
+  end
+
   def test_to_json
     Person.include_root_in_json = true
     Person.format = :json
@@ -1033,6 +1050,25 @@ class BaseTest < Test::Unit::TestCase
     assert_match %r{\}\}\}$}, json
   end
 
+  def test_to_json_with_element_name
+    old_elem_name = Person.element_name
+    Person.include_root_in_json = true
+    Person.format = :json
+    joe = Person.find(6)
+    Person.element_name = 'ruby_creator'
+    encode = joe.encode
+    json = joe.to_json
+    Person.format = :xml
+
+    assert encode, json
+    assert_match %r{^\{"ruby_creator":\{"person":\{}, json
+    assert_match %r{"id":6}, json
+    assert_match %r{"name":"Joe"}, json
+    assert_match %r{\}\}\}$}, json
+  ensure
+    Person.element_name = old_elem_name
+  end
+
   def test_to_param_quacks_like_active_record
     new_person = Person.new
     assert_nil new_person.to_param
-- 
1.7.1

