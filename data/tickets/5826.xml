<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-17T02:28:37+01:00</created-at>
  <creator-id type="integer">1075</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">5826</number>
  <permalink>incorrect-transformation-of-file-name-upload</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>hold</state>
  <tag>rack</tag>
  <title>Incorrect transformation of file name upload</title>
  <updated-at type="datetime">2010-10-17T11:58:37+01:00</updated-at>
  <user-id type="integer">1075</user-id>
  <version type="integer">4</version>
  <user-name>Claudio Poli</user-name>
  <creator-name>Claudio Poli</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5826</url>
  <milestone-title>2.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>In Rails 2-3-stable I have this with Rack 1.1.0:

If we upload a file with double quotes in file name, like: **01 &quot;Our&quot; Dawn Of Glory.mp3**,
we can observe the following in this file:
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L478

value will contain:

    {:head=&gt;&quot;Content-Disposition: form-data; name=\&quot;media\&quot;; filename=\&quot;01 \&quot;Our\&quot; Dawn Of Glory.mp3\&quot;\r\nContent-Type: application/octet-stream\r\n&quot;, :type=&gt;&quot;application/octet-stream&quot;, :tempfile=&gt;#&lt;File:/var/folders/M4/M4NWfTkfE7uqHvtn2VpEdk+++TI/-Tmp-/RackMultipart20101017-53020-1xgqkng-0&gt;, :name=&gt;&quot;media&quot;, :filename=&gt;&quot;01 &quot;}

Note the :filename parameter gets truncated.
So in original_path we will have an invalid filename:
    upload.original_path = value[:filename] # &quot;01 &quot;

This caused issues with plugins such paperclip.

Bad value is being returned from here, which is an override of Rack's GET method:
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L426

I cannot test a newer version of Rack on Rails 2-3-stable.

So while the problem may be fixed in recent version of Rack, since Rails 2-3-stable depends on
    gem 'rack', '~&gt; 1.1.0'
I think it's worth taking a look, even because plugins such Paperclip tries to delete a file if it encounters error during processes, and it's trying to delete &quot;/tmp/mydir/.&quot;. due to filename transformation to determine the content_type.

Also if one have custom cleaning up logic for Files and Directories this can be a potential security issue.</original-body>
  <latest-body>In Rails 2-3-stable I have this with Rack 1.1.0:

If we upload a file with double quotes in file name, like: **01 &quot;Our&quot; Dawn Of Glory.mp3**,
we can observe the following in this file:
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L478

value will contain:

    {:head=&gt;&quot;Content-Disposition: form-data; name=\&quot;media\&quot;; filename=\&quot;01 \&quot;Our\&quot; Dawn Of Glory.mp3\&quot;\r\nContent-Type: application/octet-stream\r\n&quot;, :type=&gt;&quot;application/octet-stream&quot;, :tempfile=&gt;#&lt;File:/var/folders/M4/M4NWfTkfE7uqHvtn2VpEdk+++TI/-Tmp-/RackMultipart20101017-53020-1xgqkng-0&gt;, :name=&gt;&quot;media&quot;, :filename=&gt;&quot;01 &quot;}

Note the :filename parameter gets truncated.
So in original_path we will have an invalid filename:
    upload.original_path = value[:filename] # &quot;01 &quot;

This caused issues with plugins such paperclip.

Bad value is being returned from here, which is an override of Rack's GET method:
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L426

I cannot test a newer version of Rack on Rails 2-3-stable.

So while the problem may be fixed in recent version of Rack, since Rails 2-3-stable depends on
    gem 'rack', '~&gt; 1.1.0'
I think it's worth taking a look, even because plugins such Paperclip tries to delete a file if it encounters error during processes, and it's trying to delete &quot;/tmp/mydir/.&quot;. due to filename transformation to determine the content_type.

Also if one have custom cleaning up logic for Files and Directories this can be a potential security issue.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In Rails 2-3-stable I have this with Rack 1.1.0:&lt;/p&gt;
&lt;p&gt;If we upload a file with double quotes in file name, like:
&lt;strong&gt;01 &quot;Our&quot; Dawn Of Glory.mp3&lt;/strong&gt;,&lt;br&gt;
we can observe the following in this file:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L478&quot;&gt;
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;value will contain:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{:head=&amp;gt;&quot;Content-Disposition: form-data; name=\&quot;media\&quot;; filename=\&quot;01 \&quot;Our\&quot; Dawn Of Glory.mp3\&quot;\r\nContent-Type: application/octet-stream\r\n&quot;, :type=&amp;gt;&quot;application/octet-stream&quot;, :tempfile=&amp;gt;#&amp;lt;File:/var/folders/M4/M4NWfTkfE7uqHvtn2VpEdk+++TI/-Tmp-/RackMultipart20101017-53020-1xgqkng-0&amp;gt;, :name=&amp;gt;&quot;media&quot;, :filename=&amp;gt;&quot;01 &quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note the :filename parameter gets truncated.&lt;br&gt;
So in original_path we will have an invalid filename:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;upload.original_path = value[:filename] # &quot;01 &quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This caused issues with plugins such paperclip.&lt;/p&gt;
&lt;p&gt;Bad value is being returned from here, which is an override of
Rack's GET method:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L426&quot;&gt;
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I cannot test a newer version of Rack on Rails 2-3-stable.&lt;/p&gt;
&lt;p&gt;So while the problem may be fixed in recent version of Rack,
since Rails 2-3-stable depends on&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;gem 'rack', '~&amp;gt; 1.1.0'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think it's worth taking a look, even because plugins such
Paperclip tries to delete a file if it encounters error during
processes, and it's trying to delete &quot;/tmp/mydir/.&quot;. due to
filename transformation to determine the content_type.&lt;/p&gt;
&lt;p&gt;Also if one have custom cleaning up logic for Files and
Directories this can be a potential security issue.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In Rails 2-3-stable I have this with Rack 1.1.0:

If we upload a file with double quotes in file name, like: **01 &quot;Our&quot; Dawn Of Glory.mp3**,
we can observe the following in this file:
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L478

value will contain:

    {:head=&gt;&quot;Content-Disposition: form-data; name=\&quot;media\&quot;; filename=\&quot;01 \&quot;Our\&quot; Dawn Of Glory.mp3\&quot;\r\nContent-Type: application/octet-stream\r\n&quot;, :type=&gt;&quot;application/octet-stream&quot;, :tempfile=&gt;#&lt;File:/var/folders/M4/M4NWfTkfE7uqHvtn2VpEdk+++TI/-Tmp-/RackMultipart20101017-53020-1xgqkng-0&gt;, :name=&gt;&quot;media&quot;, :filename=&gt;&quot;01 &quot;}

Note the :filename parameter gets truncated.
So in original_path we will have an invalid filename:
    upload.original_path = value[:filename] # &quot;01 &quot;

This caused issues with plugins such paperclip.

Bad value is being returned from here, which is an override of Rack's GET method:
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L426

I cannot test a newer version of Rack on Rails 2-3-stable.

So while the problem may be fixed in recent version of Rack, since Rails 2-3-stable depends on
    gem 'rack', '~&gt; 1.1.0'
I think it's worth taking a look, even because plugins such Paperclip tries to delete a file if it encounters error during processes, and it's trying to delete &quot;/tmp/mydir/.&quot;. due to filename transformation to determine the content_type.

Also if one have custom cleaning up logic for Files and Directories this can be a potential security issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In Rails 2-3-stable I have this with Rack 1.1.0:&lt;/p&gt;
&lt;p&gt;If we upload a file with double quotes in file name, like:
&lt;strong&gt;01 &quot;Our&quot; Dawn Of Glory.mp3&lt;/strong&gt;,&lt;br&gt;
we can observe the following in this file:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L478&quot;&gt;
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;value will contain:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{:head=&amp;gt;&quot;Content-Disposition: form-data; name=\&quot;media\&quot;; filename=\&quot;01 \&quot;Our\&quot; Dawn Of Glory.mp3\&quot;\r\nContent-Type: application/octet-stream\r\n&quot;, :type=&amp;gt;&quot;application/octet-stream&quot;, :tempfile=&amp;gt;#&amp;lt;File:/var/folders/M4/M4NWfTkfE7uqHvtn2VpEdk+++TI/-Tmp-/RackMultipart20101017-53020-1xgqkng-0&amp;gt;, :name=&amp;gt;&quot;media&quot;, :filename=&amp;gt;&quot;01 &quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note the :filename parameter gets truncated.&lt;br&gt;
So in original_path we will have an invalid filename:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;upload.original_path = value[:filename] # &quot;01 &quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This caused issues with plugins such paperclip.&lt;/p&gt;
&lt;p&gt;Bad value is being returned from here, which is an override of
Rack's GET method:&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request.rb#L426&quot;&gt;
http://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I cannot test a newer version of Rack on Rails 2-3-stable.&lt;/p&gt;
&lt;p&gt;So while the problem may be fixed in recent version of Rack,
since Rails 2-3-stable depends on&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;gem 'rack', '~&amp;gt; 1.1.0'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think it's worth taking a look, even because plugins such
Paperclip tries to delete a file if it encounters error during
processes, and it's trying to delete &quot;/tmp/mydir/.&quot;. due to
filename transformation to determine the content_type.&lt;/p&gt;
&lt;p&gt;Also if one have custom cleaning up logic for Files and
Directories this can be a potential security issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-17T02:28:37+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5826</number>
      <permalink>incorrect-transformation-of-file-name-upload</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Incorrect transformation of file name upload</title>
      <updated-at type="datetime">2010-10-17T02:42:49+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">1</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5826</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just tried Rack 1.2.1 on Rails 2-3-stable and I can confirm that this bug is **not** present.

It is definitely a Rack problem, now the issue is that 2-3-stable still depends on an old version of Rack.

A solution would then be ask the Rack developer to release a 1.1.1 from 1.1.0 with this fix backported.
That way we won't run into issues that Rack 1.2.1 might give but fix this bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just tried Rack 1.2.1 on Rails 2-3-stable and I can confirm
that this bug is &lt;strong&gt;not&lt;/strong&gt; present.&lt;/p&gt;
&lt;p&gt;It is definitely a Rack problem, now the issue is that
2-3-stable still depends on an old version of Rack.&lt;/p&gt;
&lt;p&gt;A solution would then be ask the Rack developer to release a
1.1.1 from 1.1.0 with this fix backported.&lt;br&gt;
That way we won't run into issues that Rack 1.2.1 might give but
fix this bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-17T02:48:50+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5826</number>
      <permalink>incorrect-transformation-of-file-name-upload</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rack</tag>
      <title>Incorrect transformation of file name upload</title>
      <updated-at type="datetime">2010-10-17T02:48:52+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">2</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5826</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure why we can't move to rack 1.2.1 on 2.3x. But this ticket can be put to hold until there is clarity on the rack version 1.1.x. Perhaps moving to 3.x might be a good idea?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure why we can't move to rack 1.2.1 on 2.3x. But this
ticket can be put to hold until there is clarity on the rack
version 1.1.x. Perhaps moving to 3.x might be a good idea?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-17T05:42:35+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">5826</number>
      <permalink>incorrect-transformation-of-file-name-upload</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>rack</tag>
      <title>Incorrect transformation of file name upload</title>
      <updated-at type="datetime">2010-10-17T05:42:38+01:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">3</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5826</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There are some outstanding bugs in Rails 3 that prevents me from upgrading right now.

I opened a ticket to raggi if someone wants to chime in: http://github.com/rack/rack/issues#issue/71</body>
      <body-html>&lt;div&gt;&lt;p&gt;There are some outstanding bugs in Rails 3 that prevents me from
upgrading right now.&lt;/p&gt;
&lt;p&gt;I opened a ticket to raggi if someone wants to chime in:
&lt;a href=&quot;http://github.com/rack/rack/issues#issue/71&quot;&gt;http://github.com/rack/rack/issues#issue/71&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-17T11:58:33+01:00</created-at>
      <creator-id type="integer">1075</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">5826</number>
      <permalink>incorrect-transformation-of-file-name-upload</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>rack</tag>
      <title>Incorrect transformation of file name upload</title>
      <updated-at type="datetime">2010-10-17T11:58:37+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">4</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Claudio Poli</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5826</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
