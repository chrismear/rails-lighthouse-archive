<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-23T22:19:00+01:00</created-at>
  <creator-id type="integer">19704</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1099</number>
  <permalink>patch-to-support-postgresql-functional-indexes</permalink>
  <priority type="integer">1064</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord enhancement migrations patch postgresql verified</tag>
  <title>Patch to support PostgreSQL functional indexes.</title>
  <updated-at type="datetime">2009-02-02T22:47:42+00:00</updated-at>
  <user-id type="integer">141</user-id>
  <version type="integer">16</version>
  <user-name>Michael Koziarski</user-name>
  <creator-name>Philip Hallstrom</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Attached is a patch (with tests) to add functional index support to postgresql.  It is based on the work here:

http://devblog.famundo.com/articles/2007/01/29/adding-support-for-functional-indexes-in-rails

It lets you do this in a migration:

add_index :some_table, :some_column, 
          :functional =&gt; &quot;LOWER(some_column)&quot;

If the database adapter supports functional indexes (postgresql only with this patch) it will generate a functional index.  Otherwise it will ignore that option and generate a default index.

The SchemaDumper has also been modified to generate functional indexes on output if appropriate.</original-body>
  <latest-body>Attached is a patch (with tests) to add functional index support to postgresql.  It is based on the work here:

http://devblog.famundo.com/articles/2007/01/29/adding-support-for-functional-indexes-in-rails

It lets you do this in a migration:

add_index :some_table, :some_column, 
          :functional =&gt; &quot;LOWER(some_column)&quot;

If the database adapter supports functional indexes (postgresql only with this patch) it will generate a functional index.  Otherwise it will ignore that option and generate a default index.

The SchemaDumper has also been modified to generate functional indexes on output if appropriate.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Attached is a patch (with tests) to add functional index support
to postgresql. It is based on the work here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://devblog.famundo.com/articles/2007/01/29/adding-support-for-functional-indexes-in-rails&quot;&gt;
http://devblog.famundo.com/artic...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It lets you do this in a migration:&lt;/p&gt;
&lt;p&gt;add_index :some_table, :some_column,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      :functional =&amp;gt; &quot;LOWER(some_column)&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If the database adapter supports functional indexes (postgresql
only with this patch) it will generate a functional index.
Otherwise it will ignore that option and generate a default
index.&lt;/p&gt;
&lt;p&gt;The SchemaDumper has also been modified to generate functional
indexes on output if appropriate.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is a patch (with tests) to add functional index support to postgresql.  It is based on the work here:

http://devblog.famundo.com/articles/2007/01/29/adding-support-for-functional-indexes-in-rails

It lets you do this in a migration:

add_index :some_table, :some_column, 
:functional =&gt; &quot;LOWER(some_column)&quot;

If the database adapter supports functional indexes (postgresql only with this patch) it will generate a functional index.  Otherwise it will ignore that option and generate a default index.

The SchemaDumper has also been modified to generate functional indexes on output if appropriate.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a patch (with tests) to add functional index support
to postgresql. It is based on the work here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://devblog.famundo.com/articles/2007/01/29/adding-support-for-functional-indexes-in-rails&quot;&gt;
http://devblog.famundo.com/artic...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It lets you do this in a migration:&lt;/p&gt;
&lt;p&gt;add_index :some_table, :some_column, :functional =&amp;gt;
&quot;LOWER(some_column)&quot;&lt;/p&gt;
&lt;p&gt;If the database adapter supports functional indexes (postgresql
only with this patch) it will generate a functional index.
Otherwise it will ignore that option and generate a default
index.&lt;/p&gt;
&lt;p&gt;The SchemaDumper has also been modified to generate functional
indexes on output if appropriate.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-23T22:19:01+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-23T22:19:53+01:00</updated-at>
      <user-id type="integer">19704</user-id>
      <version type="integer">1</version>
      <user-name>Philip Hallstrom</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Nice. But I think you should explicitly document that PostgreSQL supports functional indexes while MySQL doesn't, so that people don't have to Google that information themselves.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Nice. But I think you should explicitly document that PostgreSQL
supports functional indexes while MySQL doesn't, so that people
don't have to Google that information themselves.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T10:37:56+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-24T10:37:57+01:00</updated-at>
      <user-id type="integer">10679</user-id>
      <version type="integer">2</version>
      <user-name>Hongli Lai</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I like this, or something like it, for post 2.2.

You've changed the schema info query for postgresql though, why is that?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I like this, or something like it, for post 2.2.&lt;/p&gt;
&lt;p&gt;You've changed the schema info query for postgresql though, why
is that?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T12:25:17+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-24T12:25:19+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Michael, looks like the query is changed so it would return the definition of the function so it would be included in the schema dump, not sure why the select conditions was changed though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Michael, looks like the query is changed so it would return the
definition of the function so it would be included in the schema
dump, not sure why the select conditions was changed though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T15:33:50+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-24T15:33:54+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">4</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I will admit to not being a postgresql expert and understanding all the changes in that query.  I asked on the PG mailing list for what I wanted (the SQL to return both simple and functional indexes -- specifically the function itself) and what query I currently had.  

Here's the post here:

http://archives.postgresql.org/pgsql-general/2008-09/msg00884.php

Was hoping there would be some other postgres folks here that could confirm that :)

In the tests I setup the query does do what it should as far as I can tell...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I will admit to not being a postgresql expert and understanding
all the changes in that query. I asked on the PG mailing list for
what I wanted (the SQL to return both simple and functional indexes
-- specifically the function itself) and what query I currently
had.&lt;/p&gt;
&lt;p&gt;Here's the post here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://archives.postgresql.org/pgsql-general/2008-09/msg00884.php&quot;&gt;
http://archives.postgresql.org/p...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Was hoping there would be some other postgres folks here that
could confirm that :)&lt;/p&gt;
&lt;p&gt;In the tests I setup the query does do what it should as far as
I can tell...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T16:06:55+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-24T16:06:58+01:00</updated-at>
      <user-id type="integer">19704</user-id>
      <version type="integer">5</version>
      <user-name>Philip Hallstrom</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

This would make my life so much easier!

I'd suggest using :expression or :function rather than :functional in #create_index.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;This would make my life so much easier!&lt;/p&gt;
&lt;p&gt;I'd suggest using :expression or :function rather than
:functional in #create_index.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-27T09:31:49+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-27T09:31:51+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">6</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 have had a couple of cases where this would have been useful, end up dropping into SQL in the migration to handle it.

Code looks good and all tests pass on edge against PG 8.3.4</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 have had a couple of cases where this would have been useful,
end up dropping into SQL in the migration to handle it.&lt;/p&gt;
&lt;p&gt;Code looks good and all tests pass on edge against PG 8.3.4&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T13:27:26+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-29T13:27:31+01:00</updated-at>
      <user-id type="integer">15159</user-id>
      <version type="integer">7</version>
      <user-name>Mikel Lindsaar</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I checked that the pg_get_indexdef() function needed by this patch is available in older PostgreSQL versions -- there's no note in the usually-thorough PG docs to indicate otherwise, so I imagine it's safe for at least all 8.x releases.

@mikel: I have no problem with dropping into SQL for this, but the reason *I'd* really like to see this patch integrated is that it will cause functional indexes to get copied to the test database too, 'cos I want to write a full-text-search plugin that reflects on functional indexes.

It's a general problem that only a subset of a DB schema is automatically cloned to the test database.  Setting dump_format to :sql sucks because it breaks fixture loading horribly once you have any foreign key constraints in your DB.)

For that reason I'd be inclined to submit a patch that also dumps view definitions to schema.rb... but...

Perhaps an alternative for us PostgreSQL users would be to make :sql dumps and fixtures play nicely together, e.g. by providing database adaptor methods to disable and enable constraints.  Just a thought.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I checked that the pg_get_indexdef() function needed by this
patch is available in older PostgreSQL versions -- there's no note
in the usually-thorough PG docs to indicate otherwise, so I imagine
it's safe for at least all 8.x releases.&lt;/p&gt;
&lt;p&gt;@mikel: I have no problem with dropping into SQL for this, but
the reason &lt;em&gt;I'd&lt;/em&gt; really like to see this patch integrated is
that it will cause functional indexes to get copied to the test
database too, 'cos I want to write a full-text-search plugin that
reflects on functional indexes.&lt;/p&gt;
&lt;p&gt;It's a general problem that only a subset of a DB schema is
automatically cloned to the test database. Setting dump_format to
:sql sucks because it breaks fixture loading horribly once you have
any foreign key constraints in your DB.)&lt;/p&gt;
&lt;p&gt;For that reason I'd be inclined to submit a patch that also
dumps view definitions to schema.rb... but...&lt;/p&gt;
&lt;p&gt;Perhaps an alternative for us PostgreSQL users would be to make
:sql dumps and fixtures play nicely together, e.g. by providing
database adaptor methods to disable and enable constraints. Just a
thought.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T13:53:07+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-29T13:53:11+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">8</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Steve: I haven't tried it, but doesn't rake db:test:clone_structure work on the functional indicies?

I use that all the time on my app because I use views and triggers on some legacy code.

Mikel</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Steve: I haven't tried it, but doesn't rake
db:test:clone_structure work on the functional indicies?&lt;/p&gt;
&lt;p&gt;I use that all the time on my app because I use views and
triggers on some legacy code.&lt;/p&gt;
&lt;p&gt;Mikel&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T13:59:18+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-29T13:59:24+01:00</updated-at>
      <user-id type="integer">15159</user-id>
      <version type="integer">9</version>
      <user-name>Mikel Lindsaar</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Mikel - that works like the :sql dump format, and does indeed clone the functional indexes, not just the views and triggers.

Of course the problem is then that the foreign keys will prevent fixtures from loading properly in the test database.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Mikel - that works like the :sql dump format, and does indeed
clone the functional indexes, not just the views and triggers.&lt;/p&gt;
&lt;p&gt;Of course the problem is then that the foreign keys will prevent
fixtures from loading properly in the test database.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T15:53:24+01:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2008-09-29T15:53:26+01:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">10</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-05T17:46:48+00:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord enhancement migrations patch postgresql
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql verified</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2009-01-05T17:46:50+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">11</version>
      <user-name>Pratik</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Not sure why this was marked 2.3

@Steve: Doesn't the new fixtures code disable the constraints while loading fixtures?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure why this was marked 2.3&lt;/p&gt;
&lt;p&gt;@Steve: Doesn't the new fixtures code disable the constraints
while loading fixtures?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T02:08:20+00:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 24544
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql verified</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2009-02-01T02:08:24+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">12</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Koz - yes, that was an uninformed/confused comment on my part.  I have since had the happy experience of :sql dumps Just Working for me.

And in this case, then using :sql dumps is likely a better option than adding support for functional indexes.  At a certain point, you reasonably have to expect to drop into SQL in your migrations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Koz - yes, that was an uninformed/confused comment on my part.
I have since had the happy experience of :sql dumps Just Working
for me.&lt;/p&gt;
&lt;p&gt;And in this case, then using :sql dumps is likely a better
option than adding support for functional indexes. At a certain
point, you reasonably have to expect to drop into SQL in your
migrations.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T08:41:21+00:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord enhancement migrations patch postgresql verified</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2009-02-01T08:41:26+00:00</updated-at>
      <user-id type="integer">19078</user-id>
      <version type="integer">13</version>
      <user-name>Steve Purcell</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>OK, let's resolve this one then.  As you can already create them in migrations and use :sql for testing support</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, let's resolve this one then. As you can already create them
in migrations and use :sql for testing support&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-01T21:46:52+00:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord enhancement migrations patch postgresql verified</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2009-02-01T21:46:54+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">14</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't want to argue too much, but I'm not sure I understand why this wouldn't be a useful addition?  Following Steve's logic above, couldn't one say that we don't need any Rails/migration magic because all of it can be done in SQL?

I realize that right now this only supports creating functional indexes in PostgreSQL, but it paves the way for someone to add Oracle/Sybase/etc functionality more easily later on.  

Functional indexes can be pretty handy, particularly when doing things like &quot;show me all the foobar's starting with the letter 'A'&quot;.

Anyway, my last 2 cents on the issue :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't want to argue too much, but I'm not sure I understand
why this wouldn't be a useful addition? Following Steve's logic
above, couldn't one say that we don't need any Rails/migration
magic because all of it can be done in SQL?&lt;/p&gt;
&lt;p&gt;I realize that right now this only supports creating functional
indexes in PostgreSQL, but it paves the way for someone to add
Oracle/Sybase/etc functionality more easily later on.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Functional indexes can be pretty handy, particularly when doing
things like &quot;show me all the foobar's starting with the letter
'A'&quot;.&lt;/p&gt;
&lt;p&gt;Anyway, my last 2 cents on the issue :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-02T22:41:35+00:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord enhancement migrations patch postgresql verified</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2009-02-02T22:41:38+00:00</updated-at>
      <user-id type="integer">19704</user-id>
      <version type="integer">15</version>
      <user-name>Philip Hallstrom</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I just think it's not quite worth it if it'll only be supported in one
database that we ship out of the box.  However if a plugin along those
lines gets popular with other DBs. Then we can revisit the decision</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just think it's not quite worth it if it'll only be supported
in one database that we ship out of the box. However if a plugin
along those lines gets popular with other DBs. Then we can revisit
the decision&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-02T22:47:40+00:00</created-at>
      <creator-id type="integer">19704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1099</number>
      <permalink>patch-to-support-postgresql-functional-indexes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord enhancement migrations patch postgresql verified</tag>
      <title>Patch to support PostgreSQL functional indexes.</title>
      <updated-at type="datetime">2009-02-02T22:47:42+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">16</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Philip Hallstrom</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1099</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1a37e76b735e1a9a3e4853e664d7b985cc019f28</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-23T22:19:01+01:00</created-at>
      <filename>postgresql_functional_indexes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">48139</id>
      <size type="integer">9833</size>
      <uploader-id type="integer">19704</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/48139/postgresql_functional_indexes.diff</url>
    </attachment>
  </attachments>
</ticket>
