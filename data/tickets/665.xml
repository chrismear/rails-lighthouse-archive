<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-21T01:05:48+01:00</created-at>
  <creator-id type="integer">18096</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">665</number>
  <permalink>datehelper-patch</permalink>
  <priority type="integer">140</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>actionpack patch refactoring</tag>
  <title>DateHelper patch</title>
  <updated-at type="datetime">2008-07-21T22:47:20+01:00</updated-at>
  <user-id type="integer">18096</user-id>
  <version type="integer">5</version>
  <user-name>Clemens Kofler</user-name>
  <creator-name>Clemens Kofler</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/665</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The patches in the attached diff introduce the following refactorings/enhancements:

# Removed unnecessary method DateHelper#leading_zero_on_single_digits and replaced it with sprintf(&quot;%02d&quot;, number).
# DRYed up DateHelper methods select_second, select_minute, select_hour,
select_day and select_year by moving creation of &lt;option&gt; tags into
build_options method. Not used by select_month because it would
unnecessarily bloat the build_options method.
# Introduced option :date_separator for DateHelper methods select_date and select_datetime. DRYed up code a little in select_date. Added tests and documentation. (as partially proposed in &quot;this ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb)

Reasons:
[1] Since leading_zero_on_single_digits was an internally used method anyway, I thought we might be more concise as well and use the more programmatic sprintf. Might give a little speed boost, too, because it doesn't have to interpolate the string.

[2] This removes a lot of duplication from all affected methods at no obvious cost. The only thing one might consider to be negative is that the new method can't be used with select_month for obvious reasons which might lead to some confusion as to why this method is handled differently. Then again, most users don't care too much about the internal implementation.

[3] See the &quot;linked ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb.

Tests:

[1] I had to modify the tests because they also used the removed method internally. Shouldn't make any difference, though.

[2] All existing tests pass.

[3] All existing tests pass. Also added two new ones to make sure that all separators work as expected.</original-body>
  <latest-body>The patches in the attached diff introduce the following refactorings/enhancements:

# Removed unnecessary method DateHelper#leading_zero_on_single_digits and replaced it with sprintf(&quot;%02d&quot;, number).
# DRYed up DateHelper methods select_second, select_minute, select_hour,
select_day and select_year by moving creation of &lt;option&gt; tags into
build_options method. Not used by select_month because it would
unnecessarily bloat the build_options method.
# Introduced option :date_separator for DateHelper methods select_date and select_datetime. DRYed up code a little in select_date. Added tests and documentation. (as partially proposed in &quot;this ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb)

Reasons:
[1] Since leading_zero_on_single_digits was an internally used method anyway, I thought we might be more concise as well and use the more programmatic sprintf. Might give a little speed boost, too, because it doesn't have to interpolate the string.

[2] This removes a lot of duplication from all affected methods at no obvious cost. The only thing one might consider to be negative is that the new method can't be used with select_month for obvious reasons which might lead to some confusion as to why this method is handled differently. Then again, most users don't care too much about the internal implementation.

[3] See the &quot;linked ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb.

Tests:

[1] I had to modify the tests because they also used the removed method internally. Shouldn't make any difference, though.

[2] All existing tests pass.

[3] All existing tests pass. Also added two new ones to make sure that all separators work as expected.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
The patches in the attached diff introduce the following refactorings/enhancements:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
Removed unnecessary method DateHelper#leading_zero_on_single_digits and replaced it with sprintf(&quot;%02d&quot;, number).
&lt;/li&gt;&lt;li&gt;
DRYed up DateHelper methods select_second, select_minute, select_hour,
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
select_day and select_year by moving creation of  tags into
&lt;/p&gt;&lt;p&gt;
build_options method. Not used by select_month because it would
&lt;/p&gt;&lt;p&gt;
unnecessarily bloat the build_options method.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
Introduced option :date_separator for DateHelper methods select_date and select_datetime. DRYed up code a little in select_date. Added tests and documentation. (as partially proposed in &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb)&quot;&gt;this ticket&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
Reasons:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; Since leading_zero_on_single_digits was an internally used method anyway, I thought we might be more concise as well and use the more programmatic sprintf. Might give a little speed boost, too, because it doesn't have to interpolate the string.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt; This removes a lot of duplication from all affected methods at no obvious cost. The only thing one might consider to be negative is that the new method can't be used with select_month for obvious reasons which might lead to some confusion as to why this method is handled differently. Then again, most users don't care too much about the internal implementation.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;/projects/8994/changesets/3&quot; title=&quot;Changeset #3&quot;&gt;[3]&lt;/a&gt; See the &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb&quot;&gt;linked ticket&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tests:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; I had to modify the tests because they also used the removed method internally. Shouldn't make any difference, though.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt; All existing tests pass.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;/projects/8994/changesets/3&quot; title=&quot;Changeset #3&quot;&gt;[3]&lt;/a&gt; All existing tests pass. Also added two new ones to make sure that all separators work as expected.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As mentioned in &quot;this discussion&quot;:http://groups.google.com/group/rubyonrails-core/browse_thread/thread/0b36a5b259560caf I've started consolidating and refactoring the helpers.

The patches in the attached diff introduce the following refactorings/enhancements:

# Removed unnecessary method DateHelper#leading_zero_on_single_digits and replaced it with sprintf(&quot;%02d&quot;, number).
# DRYed up DateHelper methods select_second, select_minute, select_hour, select_day and select_year by moving creation of &lt;option&gt; tags into build_options method. Not used by select_month because it would unnecessarily bloat the build_options method.
# Introduced option :date_separator for DateHelper methods select_date and select_datetime. DRYed up code a little in select_date. Added tests and documentation. (as partially proposed in &quot;this ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb)

h3. Reasons

1: Since leading_zero_on_single_digits was an internally used method anyway, I thought we might be more concise as well and use the more programmatic sprintf. Might give a little speed boost, too, because it doesn't have to interpolate the string.

2: This removes a lot of duplication from all affected methods at no obvious cost. The only thing one might consider to be negative is that the new method can't be used with select_month for obvious reasons which might lead to some confusion as to why this method is handled differently. Then again, most users don't care too much about the internal implementation.

3: See the &quot;linked ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb.

h3. Documentation

I've added documentation for all changes that affect the public API.

h3. Tests

1: I had to modify the tests because they also used the removed method internally. Shouldn't make any difference, though.

2: All existing tests pass.

3: All existing tests pass. Also added two new ones to make sure that all separators work as expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
As mentioned in &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/0b36a5b259560caf&quot;&gt;this discussion&lt;/a&gt; I've started consolidating and refactoring the helpers.
&lt;/p&gt;&lt;p&gt;
The patches in the attached diff introduce the following refactorings/enhancements:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
Removed unnecessary method DateHelper#leading_zero_on_single_digits and replaced it with sprintf(&quot;%02d&quot;, number).
&lt;/li&gt;&lt;li&gt;
DRYed up DateHelper methods select_second, select_minute, select_hour, select_day and select_year by moving creation of  tags into build_options method. Not used by select_month because it would unnecessarily bloat the build_options method.
&lt;/li&gt;&lt;li&gt;
Introduced option :date_separator for DateHelper methods select_date and select_datetime. DRYed up code a little in select_date. Added tests and documentation. (as partially proposed in &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb)&quot;&gt;this ticket&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;h3&gt;
Reasons
&lt;/h3&gt;
&lt;p&gt;
1: Since leading_zero_on_single_digits was an internally used method anyway, I thought we might be more concise as well and use the more programmatic sprintf. Might give a little speed boost, too, because it doesn't have to interpolate the string.
&lt;/p&gt;&lt;p&gt;
2: This removes a lot of duplication from all affected methods at no obvious cost. The only thing one might consider to be negative is that the new method can't be used with select_month for obvious reasons which might lead to some confusion as to why this method is handled differently. Then again, most users don't care too much about the internal implementation.
&lt;/p&gt;&lt;p&gt;
3: See the &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/606-inconsistent-functionality-in-date_helper-rb&quot;&gt;linked ticket&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;
Documentation
&lt;/h3&gt;
&lt;p&gt;
I've added documentation for all changes that affect the public API.
&lt;/p&gt;
&lt;h3&gt;
Tests
&lt;/h3&gt;
&lt;p&gt;
1: I had to modify the tests because they also used the removed method internally. Shouldn't make any difference, though.
&lt;/p&gt;&lt;p&gt;
2: All existing tests pass.
&lt;/p&gt;&lt;p&gt;
3: All existing tests pass. Also added two new ones to make sure that all separators work as expected.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-21T01:32:17+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">665</number>
      <permalink>datehelper-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack doc enhancement helper patch refactoring tests</tag>
      <title>DateHelper patch</title>
      <updated-at type="datetime">2008-07-21T01:32:17+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">1</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/665</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Nice writeup. Will this close #606 too?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Nice writeup. Will this close &lt;a href=&quot;/projects/8994/tickets/606&quot; title=&quot;Ticket #606&quot;&gt;#606&lt;/a&gt; too?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-21T18:23:33+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: actionpack doc enhancement helper patch refactoring tests
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">665</number>
      <permalink>datehelper-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionpack patch refactoring</tag>
      <title>DateHelper patch</title>
      <updated-at type="datetime">2008-07-21T18:23:33+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/665</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think we are going start namespacing the private methods in helpers. So &quot;build_options&quot; becomes &quot;_date_build_options&quot;.

However, I'd really like to start looking into some more presenter patterns for this stuff. Something like this.

@@@
DateSelector.new(date, options).select_day
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I think we are going start namespacing the private methods in helpers. So &quot;build_options&quot; becomes &quot;_date_build_options&quot;.
&lt;/p&gt;&lt;p&gt;
However, I'd really like to start looking into some more presenter patterns for this stuff. Something like this.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;DateSelector.new(date, options).select_day&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-21T18:55:23+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">665</number>
      <permalink>datehelper-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionpack patch refactoring</tag>
      <title>DateHelper patch</title>
      <updated-at type="datetime">2008-07-21T18:55:23+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/665</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [ff9f6fcc75526d9fd89be834982dec8624c909c5]) Refactor DateHelper and improve test coverage [#665 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/ff9f6fcc75526d9fd89be834982dec8624c909c5</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [ff9f6fcc75526d9fd89be834982dec8624c909c5]) Refactor DateHelper and improve test coverage [#665 state:resolved]
&lt;/p&gt;&lt;p&gt;
Signed-off-by: Joshua Peek 
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/ff9f6fcc75526d9fd89be834982dec8624c909c5&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-21T19:06:53+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">665</number>
      <permalink>datehelper-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actionpack patch refactoring</tag>
      <title>DateHelper patch</title>
      <updated-at type="datetime">2008-07-21T19:06:53+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/665</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Josh: 
This doesn't close #606 just yet because the object-related methods still don't support the separators.

I like the approach with the Presenter pattern. It seems that the InstanceTag approach that's currently used by the object-related methods is a similar approach but IMO it tries to do too many jobs at once. It'd be great to have all date helper related functionality in one Presenter class and then have all helper methods, both &quot;standard&quot; and object-related ones, access the same functionality. I'll look into that and keep you posted.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Josh:
&lt;/p&gt;&lt;p&gt;
This doesn't close &lt;a href=&quot;/projects/8994/tickets/606&quot; title=&quot;Ticket #606&quot;&gt;#606&lt;/a&gt; just yet because the object-related methods still don't support the separators.
&lt;/p&gt;&lt;p&gt;
I like the approach with the Presenter pattern. It seems that the InstanceTag approach that's currently used by the object-related methods is a similar approach but IMO it tries to do too many jobs at once. It'd be great to have all date helper related functionality in one Presenter class and then have all helper methods, both &quot;standard&quot; and object-related ones, access the same functionality. I'll look into that and keep you posted.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-21T22:47:20+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">665</number>
      <permalink>datehelper-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actionpack patch refactoring</tag>
      <title>DateHelper patch</title>
      <updated-at type="datetime">2008-07-21T22:47:20+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">5</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/665</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>3e3f5c3971f271edae42dad653565b6b7465a107</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-21T01:06:12+01:00</created-at>
      <filename>01_date_helper_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">33789</id>
      <size type="integer">40352</size>
      <uploader-id type="integer">18096</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/33789/01_date_helper_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
