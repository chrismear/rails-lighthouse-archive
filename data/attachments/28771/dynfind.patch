diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index 1c16d5d..ec26690 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -1690,7 +1690,12 @@ module ActiveRecord #:nodoc:
 
         def construct_attributes_from_arguments(attribute_names, arguments)
           attributes = {}
-          attribute_names.each_with_index { |name, idx| attributes[name] = arguments[idx] }
+          attribute_names.each_with_index do |name, idx|
+            if (!column_methods_hash.include?(name.to_sym) && reflection = reflections[name.to_sym])
+              name = reflection.primary_key_name if reflection.respond_to?(:primary_key_name)
+            end
+            attributes[name] = arguments[idx]
+          end
           attributes
         end
 
@@ -1711,7 +1716,16 @@ module ActiveRecord #:nodoc:
 
         def all_attributes_exists?(attribute_names)
           attribute_names = expand_attribute_names_for_aggregates(attribute_names)
-          attribute_names.all? { |name| column_methods_hash.include?(name.to_sym) }
+          attribute_names.all? do |name| 
+            column_methods_hash.include?(name.to_sym) || is_belongs_to_or_has_one?(name)
+          end
+        end
+
+        def is_belongs_to_or_has_one?(attr_name)
+          reflection = reflections[attr_name.to_sym]
+          if reflection && (reflection.macro == :belongs_to || reflection.macro == :has_one)
+            column_methods_hash.include?(reflection.primary_key_name.to_sym)
+          end
         end
 
         def attribute_condition(argument)
diff --git a/activerecord/test/cases/finder_test.rb b/activerecord/test/cases/finder_test.rb
index 80936d5..85564cf 100644
--- a/activerecord/test/cases/finder_test.rb
+++ b/activerecord/test/cases/finder_test.rb
@@ -440,6 +440,10 @@ class FinderTest < ActiveRecord::TestCase
     assert_equal accounts(:rails_core_account), Account.find_by_credit_limit(50, :conditions => ['firm_id = ?', 6])
   end
 
+  def test_find_by_one_attribute_that_is_a_belongs_to
+    assert_equal [Comment.find(1), Comment.find(2)], Comment.find_all_by_post(Post.first)
+  end
+
   def test_find_by_one_attribute_that_is_an_aggregate
     address = customers(:david).address
     assert_kind_of Address, address
