<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-22T15:12:53+01:00</created-at>
  <creator-id type="integer">121073</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5854</number>
  <permalink>has_one-through-on-new-record-doesnt-query-for-associated-object</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;has_one_through new_record patch&quot;</tag>
  <title>has_one :through on new record doesn't query for associated object</title>
  <updated-at type="datetime">2011-01-23T21:41:15+00:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">5</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>Alexey Ilyichev</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5854</url>
  <priority-name>Low</priority-name>
  <original-body>Given:
@@@ ruby
class User &lt; AR
  has_one :user_info
  has_many :bank_infos
end
class UserInfo &lt; AR
  belongs_to :user
end
class BankInfo &lt; AR
  belongs_to :user
  has_one :user_info, :through =&gt; :user
end
@@@

I do:
@@@ ruby
bank_info = user.bank_infos.build
bank_info.user_info
@@@

where user has associated user_info. And I expect bank_info.user_info to equal user.user_info, however it is nil.

Attaching patch...
Any feedback would be appreciated.</original-body>
  <latest-body>Given:
@@@ ruby
class User &lt; AR
  has_one :user_info
  has_many :bank_infos
end
class UserInfo &lt; AR
  belongs_to :user
end
class BankInfo &lt; AR
  belongs_to :user
  has_one :user_info, :through =&gt; :user
end
@@@

I do:
@@@ ruby
bank_info = user.bank_infos.build
bank_info.user_info
@@@

where user has associated user_info. And I expect bank_info.user_info to equal user.user_info, however it is nil.

Attaching patch...
Any feedback would be appreciated.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; AR
  has_one :user_info
  has_many :bank_infos
end
class UserInfo &amp;lt; AR
  belongs_to :user
end
class BankInfo &amp;lt; AR
  belongs_to :user
  has_one :user_info, :through =&amp;gt; :user
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I do:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;bank_info = user.bank_infos.build
bank_info.user_info&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;where user has associated user_info. And I expect
bank_info.user_info to equal user.user_info, however it is nil.&lt;/p&gt;
&lt;p&gt;Attaching patch...&lt;br&gt;
Any feedback would be appreciated.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given:
@@@ ruby
class User &lt; AR
  has_one :user_info
  has_many :bank_infos
end
class UserInfo &lt; AR
  belongs_to :user
end
class BankInfo &lt; AR
  belongs_to :user
  has_one :user_info, :through =&gt; :user
end
@@@

I do:
@@@ ruby
bank_info = user.bank_infos.build
bank_info.user_info
@@@

where user has associated user_info. And I expect bank_info.user_info to equal user.user_info, however it is nil.

Attaching patch...
Any feedback would be appreciated.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; AR
  has_one :user_info
  has_many :bank_infos
end
class UserInfo &amp;lt; AR
  belongs_to :user
end
class BankInfo &amp;lt; AR
  belongs_to :user
  has_one :user_info, :through =&amp;gt; :user
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I do:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;bank_info = user.bank_infos.build
bank_info.user_info&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;where user has associated user_info. And I expect
bank_info.user_info to equal user.user_info, however it is nil.&lt;/p&gt;
&lt;p&gt;Attaching patch...&lt;br&gt;
Any feedback would be appreciated.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-22T15:12:53+01:00</created-at>
      <creator-id type="integer">121073</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5854</number>
      <permalink>has_one-through-on-new-record-doesnt-query-for-associated-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;has_one_through new_record patch&quot;</tag>
      <title>has_one :through on new record doesn't query for associated object</title>
      <updated-at type="datetime">2010-10-22T16:38:25+01:00</updated-at>
      <user-id type="integer">121073</user-id>
      <version type="integer">1</version>
      <user-name>Alexey Ilyichev</user-name>
      <creator-name>Alexey Ilyichev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5854</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry for weird formatting. Code from previous post
@@@ ruby
class User &lt; AR
  has_one :user_info
  has_many :bank_infos
end

class UserInfo &lt; AR
  belongs_to :user
end

class BankInfo &lt; AR
  belongs_to :user
  has_one :user_info, :through =&gt; :user
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for weird formatting. Code from previous post&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; AR
  has_one :user_info
  has_many :bank_infos
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
class UserInfo &amp;lt; AR
  belongs_to :user
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
class BankInfo &amp;lt; AR
  belongs_to :user
  has_one :user_info, :through =&amp;gt; :user
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-22T16:24:25+01:00</created-at>
      <creator-id type="integer">121073</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5854</number>
      <permalink>has_one-through-on-new-record-doesnt-query-for-associated-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;has_one_through new_record patch&quot;</tag>
      <title>has_one :through on new record doesn't query for associated object</title>
      <updated-at type="datetime">2010-10-22T16:24:29+01:00</updated-at>
      <user-id type="integer">121073</user-id>
      <version type="integer">2</version>
      <user-name>Alexey Ilyichev</user-name>
      <creator-name>Alexey Ilyichev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5854</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi there,

Thanks for the bug report. To do this you can use the `:inverse_of` option on your `User.has_many :bank_infos`.

Jon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;Thanks for the bug report. To do this you can use the
&lt;code&gt;:inverse_of&lt;/code&gt; option on your &lt;code&gt;User.has_many
:bank_infos&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Jon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-21T19:57:45+00:00</created-at>
      <creator-id type="integer">121073</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5854</number>
      <permalink>has_one-through-on-new-record-doesnt-query-for-associated-object</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;has_one_through new_record patch&quot;</tag>
      <title>has_one :through on new record doesn't query for associated object</title>
      <updated-at type="datetime">2010-12-21T19:57:56+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">3</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Alexey Ilyichev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5854</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi, Jon.

Thanks for the reply. Inverse_of does not solve anything in this case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi, Jon.&lt;/p&gt;
&lt;p&gt;Thanks for the reply. Inverse_of does not solve anything in this
case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-19T14:13:46+00:00</created-at>
      <creator-id type="integer">121073</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5854</number>
      <permalink>has_one-through-on-new-record-doesnt-query-for-associated-object</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;has_one_through new_record patch&quot;</tag>
      <title>has_one :through on new record doesn't query for associated object</title>
      <updated-at type="datetime">2011-01-19T14:13:58+00:00</updated-at>
      <user-id type="integer">121073</user-id>
      <version type="integer">4</version>
      <user-name>Alexey Ilyichev</user-name>
      <creator-name>Alexey Ilyichev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5854</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi,

You're right, inverse_of is irrelevant here. However I have just tried the test case you provided against latest master and it passes.

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;You're right, inverse_of is irrelevant here. However I have just
tried the test case you provided against latest master and it
passes.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-23T21:41:06+00:00</created-at>
      <creator-id type="integer">121073</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5854</number>
      <permalink>has_one-through-on-new-record-doesnt-query-for-associated-object</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;has_one_through new_record patch&quot;</tag>
      <title>has_one :through on new record doesn't query for associated object</title>
      <updated-at type="datetime">2011-01-23T21:41:15+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">5</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Alexey Ilyichev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5854</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5fe078ba9b00622f73d41ffdb2dadb3b882f7219</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-22T15:12:53+01:00</created-at>
      <filename>has_one_through_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">733302</id>
      <size type="integer">1945</size>
      <uploader-id type="integer">121073</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/733302/has_one_through_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
