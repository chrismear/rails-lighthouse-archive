From e13b1aaba7d9d33f32a26edab170b5b4ab7548ac Mon Sep 17 00:00:00 2001
From: Michael Siebert <siebertm85@googlemail.com>
Date: Thu, 25 Jun 2009 00:59:58 +0200
Subject: [PATCH] Fix deprecating =-methods by using send

---
 .../active_support/deprecation/method_wrappers.rb  |   18 +++++++++---------
 activesupport/test/deprecation_test.rb             |    4 ++++
 2 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/activesupport/lib/active_support/deprecation/method_wrappers.rb b/activesupport/lib/active_support/deprecation/method_wrappers.rb
index b9eb539..deb29a8 100644
--- a/activesupport/lib/active_support/deprecation/method_wrappers.rb
+++ b/activesupport/lib/active_support/deprecation/method_wrappers.rb
@@ -11,15 +11,15 @@ module ActiveSupport
       method_names.each do |method_name|
         target_module.alias_method_chain(method_name, :deprecation) do |target, punctuation|
           target_module.module_eval(<<-end_eval, __FILE__, __LINE__ + 1)
-            def #{target}_with_deprecation#{punctuation}(*args, &block)   # def generate_secret_with_deprecation(*args, &block)
-              ::ActiveSupport::Deprecation.warn(                          #   ::ActiveSupport::Deprecation.warn(
-                ::ActiveSupport::Deprecation.deprecated_method_warning(   #     ::ActiveSupport::Deprecation.deprecated_method_warning(
-                  :#{method_name},                                        #       :generate_secret,
-                  #{options[method_name].inspect}),                       #       "You should use ActiveSupport::SecureRandom.hex(64)"),
-                caller                                                    #     caller
-              )                                                           #   )
-              #{target}_without_deprecation#{punctuation}(*args, &block)  #   generate_secret_without_deprecation(*args, &block)
-            end                                                           # end
+            def #{target}_with_deprecation#{punctuation}(*args, &block)          # def generate_secret_with_deprecation(*args, &block)
+              ::ActiveSupport::Deprecation.warn(                                 #   ::ActiveSupport::Deprecation.warn(
+                ::ActiveSupport::Deprecation.deprecated_method_warning(          #     ::ActiveSupport::Deprecation.deprecated_method_warning(
+                  :#{method_name},                                               #       :generate_secret,
+                  #{options[method_name].inspect}),                              #       "You should use ActiveSupport::SecureRandom.hex(64)"),
+                caller                                                           #     caller
+              )                                                                  #   )
+              send(:#{target}_without_deprecation#{punctuation}, *args, &block)  #   send(:generate_secret_without_deprecation, *args, &block)
+            end                                                                  # end
           end_eval
         end
       end
diff --git a/activesupport/test/deprecation_test.rb b/activesupport/test/deprecation_test.rb
index 73a1f99..a3ae39d 100644
--- a/activesupport/test/deprecation_test.rb
+++ b/activesupport/test/deprecation_test.rb
@@ -25,6 +25,9 @@ class Deprecatee
   def e; end
   deprecate :a, :b, :c => :e, :d => "you now need to do something extra for this one"
 
+  def f=(v); end
+  deprecate :f=
+
   module B
     C = 1
   end
@@ -133,6 +136,7 @@ class DeprecationTest < ActiveSupport::TestCase
   def test_deprecation_without_explanation
     assert_deprecated { @dtc.a }
     assert_deprecated { @dtc.b }
+    assert_deprecated { @dtc.f = :foo }
   end
 
   def test_deprecation_with_alternate_method
-- 
1.6.0.4

