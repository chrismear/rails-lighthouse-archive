<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-15T16:35:31+00:00</created-at>
  <creator-id type="integer">29560</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3698</number>
  <permalink>tests-and-model-not-based-on-activerecord</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;rails 3.0 activemodel activerecord tests&quot;</tag>
  <title>Tests and model not based on activerecord</title>
  <updated-at type="datetime">2010-06-15T14:02:00+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Matija Folnovic</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3698</url>
  <priority-name>Low</priority-name>
  <original-body>Hello!

I have unit test for controller Players, and in it, I have:
@@@ ruby
test &quot;encrypting password&quot; do
assert true
end
@@@

I also have a model map which isn't based on activerecord ( tableless ), and when I run tests, I get these errors for each test:
@@@
  1) Error:
test_encrypting_password(PlayerTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such table: maps: DELETE FROM &quot;maps&quot; WHERE 1=1
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:206:in `rescue in log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:196:in `log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in `block in execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:390:in `catch_schema_changes'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in `execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:226:in `update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:154:in `update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:231:in `delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:160:in `delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:54:in `delete'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/query_cache.rb:25:in `delete_with_query_dirty'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:549:in `delete_existing_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `block (4 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `each'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `block (3 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:136:in `transaction'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:510:in `block (2 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:107:in `disable_referential_integrity'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:501:in `block in create_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/benchmarkable.rb:55:in `silence'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:500:in `create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:961:in `load_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:926:in `setup_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/callbacks.rb:428:in `_run_setup_callbacks'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/testing/setup_and_teardown.rb:31:in `run'
@@@

It seems after test, it's trying to delete everything from each model table, but seems it isn't checking if it's based on activerecord...

Tnx in advance!</original-body>
  <latest-body>Hello!

I have unit test for controller Players, and in it, I have:
@@@ ruby
test &quot;encrypting password&quot; do
assert true
end
@@@

I also have a model map which isn't based on activerecord ( tableless ), and when I run tests, I get these errors for each test:
@@@
  1) Error:
test_encrypting_password(PlayerTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such table: maps: DELETE FROM &quot;maps&quot; WHERE 1=1
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:206:in `rescue in log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:196:in `log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in `block in execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:390:in `catch_schema_changes'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in `execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:226:in `update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:154:in `update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:231:in `delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:160:in `delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:54:in `delete'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/query_cache.rb:25:in `delete_with_query_dirty'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:549:in `delete_existing_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `block (4 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `each'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `block (3 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:136:in `transaction'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:510:in `block (2 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:107:in `disable_referential_integrity'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:501:in `block in create_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/benchmarkable.rb:55:in `silence'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:500:in `create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:961:in `load_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:926:in `setup_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/callbacks.rb:428:in `_run_setup_callbacks'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/testing/setup_and_teardown.rb:31:in `run'
@@@

It seems after test, it's trying to delete everything from each model table, but seems it isn't checking if it's based on activerecord...

Tnx in advance!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;I have unit test for controller Players, and in it, I
have:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;test &quot;encrypting password&quot; do
assert true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I also have a model map which isn't based on activerecord (
tableless ), and when I run tests, I get these errors for each
test:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  1) Error:
test_encrypting_password(PlayerTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such table: maps: DELETE FROM &quot;maps&quot; WHERE 1=1
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:206:in &lt;/code&gt;rescue in log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:196:inlog'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in &lt;code&gt;block in execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:390:in&lt;/code&gt;catch_schema_changes'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in &lt;code&gt;execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:226:in&lt;/code&gt;update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:154:in &lt;code&gt;update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:231:in&lt;/code&gt;delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:160:in &lt;code&gt;delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:54:in&lt;/code&gt;delete'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/query_cache.rb:25:in &lt;code&gt;delete_with_query_dirty'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:549:in&lt;/code&gt;delete_existing_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in &lt;code&gt;block (4 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in&lt;/code&gt;each'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in &lt;code&gt;block (3 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:136:in&lt;/code&gt;transaction'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:510:in &lt;code&gt;block (2 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:107:in&lt;/code&gt;disable_referential_integrity'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:501:in &lt;code&gt;block in create_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/benchmarkable.rb:55:in&lt;/code&gt;silence'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:500:in &lt;code&gt;create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:961:in&lt;/code&gt;load_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:926:in &lt;code&gt;setup_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/callbacks.rb:428:in&lt;/code&gt;_run_setup_callbacks'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/testing/setup_and_teardown.rb:31:in &lt;code&gt;run'&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;&lt;/code&gt;

&lt;br&gt;
It seems after test, it's trying to delete everything from each model table, but seems it isn't checking if it's based on activerecord...

&lt;br&gt;
Tnx in advance!
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello!

I have unit test for controller Players, and in it, I have:
@@@ ruby
test &quot;encrypting password&quot; do
assert true
end
@@@

I also have a model map which isn't based on activerecord ( tableless ), and when I run tests, I get these errors for each test:
@@@
  1) Error:
test_encrypting_password(PlayerTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such table: maps: DELETE FROM &quot;maps&quot; WHERE 1=1
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:206:in `rescue in log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:196:in `log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in `block in execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:390:in `catch_schema_changes'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in `execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:226:in `update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:154:in `update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:231:in `delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:160:in `delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:54:in `delete'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/query_cache.rb:25:in `delete_with_query_dirty'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:549:in `delete_existing_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `block (4 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `each'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in `block (3 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:136:in `transaction'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:510:in `block (2 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:107:in `disable_referential_integrity'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:501:in `block in create_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/benchmarkable.rb:55:in `silence'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:500:in `create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:961:in `load_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:926:in `setup_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/callbacks.rb:428:in `_run_setup_callbacks'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/testing/setup_and_teardown.rb:31:in `run'
@@@

It seems after test, it's trying to delete everything from each model table, but seems it isn't checking if it's based on activerecord...

Tnx in advance!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;I have unit test for controller Players, and in it, I
have:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;test &quot;encrypting password&quot; do
assert true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I also have a model map which isn't based on activerecord (
tableless ), and when I run tests, I get these errors for each
test:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  1) Error:
test_encrypting_password(PlayerTest):
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such table: maps: DELETE FROM &quot;maps&quot; WHERE 1=1
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:206:in &lt;/code&gt;rescue in log'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:196:inlog'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in &lt;code&gt;block in execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:390:in&lt;/code&gt;catch_schema_changes'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:150:in &lt;code&gt;execute'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:226:in&lt;/code&gt;update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:154:in &lt;code&gt;update_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:231:in&lt;/code&gt;delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/sqlite_adapter.rb:160:in &lt;code&gt;delete_sql'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:54:in&lt;/code&gt;delete'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/query_cache.rb:25:in &lt;code&gt;delete_with_query_dirty'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:549:in&lt;/code&gt;delete_existing_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in &lt;code&gt;block (4 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in&lt;/code&gt;each'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:511:in &lt;code&gt;block (3 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract/database_statements.rb:136:in&lt;/code&gt;transaction'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:510:in &lt;code&gt;block (2 levels) in create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/connection_adapters/abstract_adapter.rb:107:in&lt;/code&gt;disable_referential_integrity'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:501:in &lt;code&gt;block in create_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/benchmarkable.rb:55:in&lt;/code&gt;silence'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:500:in &lt;code&gt;create_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:961:in&lt;/code&gt;load_fixtures'
/var/lib/gems/1.9.1/gems/activerecord-3.0.pre/lib/active_record/fixtures.rb:926:in &lt;code&gt;setup_fixtures'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/callbacks.rb:428:in&lt;/code&gt;_run_setup_callbacks'
/var/lib/gems/1.9.1/gems/activesupport-3.0.pre/lib/active_support/testing/setup_and_teardown.rb:31:in &lt;code&gt;run'&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;&lt;/code&gt;

&lt;br&gt;
It seems after test, it's trying to delete everything from each model table, but seems it isn't checking if it's based on activerecord...

&lt;br&gt;
Tnx in advance!
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-15T16:35:31+00:00</created-at>
      <creator-id type="integer">29560</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3698</number>
      <permalink>tests-and-model-not-based-on-activerecord</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rails 3.0 activemodel activerecord tests&quot;</tag>
      <title>Tests and model not based on activerecord</title>
      <updated-at type="datetime">2010-01-15T16:36:43+00:00</updated-at>
      <user-id type="integer">29560</user-id>
      <version type="integer">1</version>
      <user-name>Matija Folnovic</user-name>
      <creator-name>Matija Folnovic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3698</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I suspect you are getting this because in test_helper.rb you have the fixtures setting:

fixtures :all

Comment that out and specify individual fixtures for your AR models and your error should go away.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I suspect you are getting this because in test_helper.rb you
have the fixtures setting:&lt;/p&gt;
&lt;p&gt;fixtures :all&lt;/p&gt;
&lt;p&gt;Comment that out and specify individual fixtures for your AR
models and your error should go away.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-12T22:07:30+01:00</created-at>
      <creator-id type="integer">29560</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3698</number>
      <permalink>tests-and-model-not-based-on-activerecord</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rails 3.0 activemodel activerecord tests&quot;</tag>
      <title>Tests and model not based on activerecord</title>
      <updated-at type="datetime">2010-04-12T22:07:32+01:00</updated-at>
      <user-id type="integer">84622</user-id>
      <version type="integer">2</version>
      <user-name>Mark Foster</user-name>
      <creator-name>Matija Folnovic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3698</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm closing this ticket as Mark's advice seems spot on. If the issue still exists, feel free to make a comment asking for ticket to be re-opened and I'll do it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm closing this ticket as Mark's advice seems spot on. If the
issue still exists, feel free to make a comment asking for ticket
to be re-opened and I'll do it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-15T14:01:54+01:00</created-at>
      <creator-id type="integer">29560</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3698</number>
      <permalink>tests-and-model-not-based-on-activerecord</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;rails 3.0 activemodel activerecord tests&quot;</tag>
      <title>Tests and model not based on activerecord</title>
      <updated-at type="datetime">2010-06-15T14:02:00+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Matija Folnovic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3698</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
