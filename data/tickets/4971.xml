<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-22T08:32:34+00:00</created-at>
  <creator-id type="integer">99157</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">4971</number>
  <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>nested includes in AR causes duplicates in to_json / to_xml</title>
  <updated-at type="datetime">2011-03-26T02:37:48+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">21</version>
  <user-name>bingbing</user-name>
  <creator-name>David</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>In Rails edge using #to_xml or #to_json on an ActiveRecord::Relation with includes causes duplicate entries.

The model is: Projects has_many Tasks habtm Users

Example:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100625013546) do 
  create_table &quot;projects&quot;, :force =&gt; true do |t| 
    t.string   &quot;name&quot; 
    t.datetime &quot;created_at&quot; 
    t.datetime &quot;updated_at&quot; 
  end 
  create_table &quot;tasks&quot;, :force =&gt; true do |t| 
    t.string  &quot;name&quot; 
    t.integer &quot;project_id&quot; 
  end 
  create_table &quot;tasks_users&quot;, :id =&gt; false, :force =&gt; true do |t| 
    t.integer &quot;task_id&quot;, :null =&gt; false 
    t.integer &quot;user_id&quot;, :null =&gt; false 
  end 
  create_table &quot;users&quot;, :force =&gt; true do |t| 
    t.string &quot;name&quot; 
  end 
end 

class Project &lt; ActiveRecord::Base 
  has_many :tasks 
end 
class Task &lt; ActiveRecord::Base 
  belongs_to :project 
  has_and_belongs_to_many :users 
end 
class User &lt; ActiveRecord::Base 
  has_and_belongs_to_many :tasks 
end
@@@

seeds.rb
@@@ 
task1 = Task.create!(:name =&gt; 'task1') 
task2 = Task.create!(:name =&gt; 'task2') 
task3 = Task.create!(:name =&gt; 'task3') 
pr1 = Project.create!(:name =&gt; 'pr1') 
pr2 = Project.create!(:name =&gt; 'pr2') 
task2.project_id = pr2.id 
task2.save! 
task2.users.create(:name =&gt; 'Peter') 
task2.users.create(:name =&gt; 'David') 
task2.users.create(:name =&gt; 'Bernd')
@@@


Code that causes duplicates:
@@@
puts Project.includes(:tasks =&gt; :users).where('tasks.id is not null')
.to_xml(:include =&gt; {:tasks =&gt; {:include =&gt; :users}}) 
@@@

This will return 3 times the same task (task2) in the xml output:

@@@
&lt;project&gt;
  &lt;name&gt;Pr2&lt;/name&gt;
    &lt;tasks&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
    &lt;/tasks&gt;
  &lt;/project&gt;

@@@

This code works fine:
@@@
puts Project.includes(:tasks).where('tasks.id is not null')
.to_xml(:include =&gt; {:tasks =&gt; {:include =&gt; :users}}) 
@@@

This issue has been discussed on the core group:
http://groups.google.de/group/rubyonrails-core/browse_thread/thread/5c6d8075544e1ceb?hl=de</original-body>
  <latest-body>In Rails edge using #to_xml or #to_json on an ActiveRecord::Relation with includes causes duplicate entries.

The model is: Projects has_many Tasks habtm Users

Example:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100625013546) do 
  create_table &quot;projects&quot;, :force =&gt; true do |t| 
    t.string   &quot;name&quot; 
    t.datetime &quot;created_at&quot; 
    t.datetime &quot;updated_at&quot; 
  end 
  create_table &quot;tasks&quot;, :force =&gt; true do |t| 
    t.string  &quot;name&quot; 
    t.integer &quot;project_id&quot; 
  end 
  create_table &quot;tasks_users&quot;, :id =&gt; false, :force =&gt; true do |t| 
    t.integer &quot;task_id&quot;, :null =&gt; false 
    t.integer &quot;user_id&quot;, :null =&gt; false 
  end 
  create_table &quot;users&quot;, :force =&gt; true do |t| 
    t.string &quot;name&quot; 
  end 
end 

class Project &lt; ActiveRecord::Base 
  has_many :tasks 
end 
class Task &lt; ActiveRecord::Base 
  belongs_to :project 
  has_and_belongs_to_many :users 
end 
class User &lt; ActiveRecord::Base 
  has_and_belongs_to_many :tasks 
end
@@@

seeds.rb
@@@ 
task1 = Task.create!(:name =&gt; 'task1') 
task2 = Task.create!(:name =&gt; 'task2') 
task3 = Task.create!(:name =&gt; 'task3') 
pr1 = Project.create!(:name =&gt; 'pr1') 
pr2 = Project.create!(:name =&gt; 'pr2') 
task2.project_id = pr2.id 
task2.save! 
task2.users.create(:name =&gt; 'Peter') 
task2.users.create(:name =&gt; 'David') 
task2.users.create(:name =&gt; 'Bernd')
@@@


Code that causes duplicates:
@@@
puts Project.includes(:tasks =&gt; :users).where('tasks.id is not null')
.to_xml(:include =&gt; {:tasks =&gt; {:include =&gt; :users}}) 
@@@

This will return 3 times the same task (task2) in the xml output:

@@@
&lt;project&gt;
  &lt;name&gt;Pr2&lt;/name&gt;
    &lt;tasks&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
    &lt;/tasks&gt;
  &lt;/project&gt;

@@@

This code works fine:
@@@
puts Project.includes(:tasks).where('tasks.id is not null')
.to_xml(:include =&gt; {:tasks =&gt; {:include =&gt; :users}}) 
@@@

This issue has been discussed on the core group:
http://groups.google.de/group/rubyonrails-core/browse_thread/thread/5c6d8075544e1ceb?hl=de</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In Rails edge using #to_xml or #to_json on an
ActiveRecord::Relation with includes causes duplicate entries.&lt;/p&gt;
&lt;p&gt;The model is: Projects has_many Tasks habtm Users&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100625013546) do 
  create_table &quot;projects&quot;, :force =&amp;gt; true do |t| 
    t.string   &quot;name&quot; 
    t.datetime &quot;created_at&quot; 
    t.datetime &quot;updated_at&quot; 
  end 
  create_table &quot;tasks&quot;, :force =&amp;gt; true do |t| 
    t.string  &quot;name&quot; 
    t.integer &quot;project_id&quot; 
  end 
  create_table &quot;tasks_users&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t| 
    t.integer &quot;task_id&quot;, :null =&amp;gt; false 
    t.integer &quot;user_id&quot;, :null =&amp;gt; false 
  end 
  create_table &quot;users&quot;, :force =&amp;gt; true do |t| 
    t.string &quot;name&quot; 
  end 
end 

class Project &amp;lt; ActiveRecord::Base 
  has_many :tasks 
end 
class Task &amp;lt; ActiveRecord::Base 
  belongs_to :project 
  has_and_belongs_to_many :users 
end 
class User &amp;lt; ActiveRecord::Base 
  has_and_belongs_to_many :tasks 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;seeds.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;task1 = Task.create!(:name =&amp;gt; 'task1') 
task2 = Task.create!(:name =&amp;gt; 'task2') 
task3 = Task.create!(:name =&amp;gt; 'task3') 
pr1 = Project.create!(:name =&amp;gt; 'pr1') 
pr2 = Project.create!(:name =&amp;gt; 'pr2') 
task2.project_id = pr2.id 
task2.save! 
task2.users.create(:name =&amp;gt; 'Peter') 
task2.users.create(:name =&amp;gt; 'David') 
task2.users.create(:name =&amp;gt; 'Bernd')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Code that causes duplicates:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;puts Project.includes(:tasks =&amp;gt; :users).where('tasks.id is not null')
.to_xml(:include =&amp;gt; {:tasks =&amp;gt; {:include =&amp;gt; :users}})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will return 3 times the same task (task2) in the xml
output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;project&amp;gt;
  &amp;lt;name&amp;gt;Pr2&amp;lt;/name&amp;gt;
    &amp;lt;tasks&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
          &amp;lt;users&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Peter&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;David&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Bernd&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
          &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
          &amp;lt;users&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Peter&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;David&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Bernd&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
          &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
          &amp;lt;users&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Peter&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;David&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Bernd&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
          &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
    &amp;lt;/tasks&amp;gt;
  &amp;lt;/project&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This code works fine:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;puts Project.includes(:tasks).where('tasks.id is not null')
.to_xml(:include =&amp;gt; {:tasks =&amp;gt; {:include =&amp;gt; :users}})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This issue has been discussed on the core group:&lt;br&gt;
&lt;a href=
&quot;http://groups.google.de/group/rubyonrails-core/browse_thread/thread/5c6d8075544e1ceb?hl=de&quot;&gt;
http://groups.google.de/group/rubyonrails-core/browse_thread/thread...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In Rails edge using #to_xml or #to_json on an ActiveRecord::Relation with includes causes duplicate entries.

The model is: Projects has_many Tasks habtm Users

Example:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100625013546) do 
  create_table &quot;projects&quot;, :force =&gt; true do |t| 
    t.string   &quot;name&quot; 
    t.datetime &quot;created_at&quot; 
    t.datetime &quot;updated_at&quot; 
  end 
  create_table &quot;tasks&quot;, :force =&gt; true do |t| 
    t.string  &quot;name&quot; 
    t.integer &quot;project_id&quot; 
  end 
  create_table &quot;tasks_users&quot;, :id =&gt; false, :force =&gt; true do |t| 
    t.integer &quot;task_id&quot;, :null =&gt; false 
    t.integer &quot;user_id&quot;, :null =&gt; false 
  end 
  create_table &quot;users&quot;, :force =&gt; true do |t| 
    t.string &quot;name&quot; 
  end 
end 

class Project &lt; ActiveRecord::Base 
  has_many :tasks 
end 
class Task &lt; ActiveRecord::Base 
  belongs_to :project 
  has_and_belongs_to_many :users 
end 
class User &lt; ActiveRecord::Base 
  has_and_belongs_to_many :tasks 
end
@@@

seeds.rb
@@@ 
task1 = Task.create!(:name =&gt; 'task1') 
task2 = Task.create!(:name =&gt; 'task2') 
task3 = Task.create!(:name =&gt; 'task3') 
pr1 = Project.create!(:name =&gt; 'pr1') 
pr2 = Project.create!(:name =&gt; 'pr2') 
task2.project_id = pr2.id 
task2.save! 
task2.users.create(:name =&gt; 'Peter') 
task2.users.create(:name =&gt; 'David') 
task2.users.create(:name =&gt; 'Bernd')
@@@


Code that causes duplicates:
@@@
puts Project.includes(:tasks =&gt; :users).where('tasks.id is not null')
.to_xml(:include =&gt; {:tasks =&gt; {:include =&gt; :users}}) 
@@@

This will return 3 times the same task (task2) in the xml output:

@@@
&lt;project&gt;
  &lt;name&gt;Pr2&lt;/name&gt;
    &lt;tasks&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
          &lt;users&gt;
            &lt;user&gt;  &lt;name&gt;Peter&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;David&lt;/name&gt; &lt;/user&gt;
            &lt;user&gt;  &lt;name&gt;Bernd&lt;/name&gt; &lt;/user&gt;
          &lt;/users&gt;
      &lt;/task&gt;
    &lt;/tasks&gt;
  &lt;/project&gt;

@@@

This code works fine:
@@@
puts Project.includes(:tasks).where('tasks.id is not null')
.to_xml(:include =&gt; {:tasks =&gt; {:include =&gt; :users}}) 
@@@

This issue has been discussed on the core group:
http://groups.google.de/group/rubyonrails-core/browse_thread/thread/5c6d8075544e1ceb?hl=de</body>
      <body-html>&lt;div&gt;&lt;p&gt;In Rails edge using #to_xml or #to_json on an
ActiveRecord::Relation with includes causes duplicate entries.&lt;/p&gt;
&lt;p&gt;The model is: Projects has_many Tasks habtm Users&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100625013546) do 
  create_table &quot;projects&quot;, :force =&amp;gt; true do |t| 
    t.string   &quot;name&quot; 
    t.datetime &quot;created_at&quot; 
    t.datetime &quot;updated_at&quot; 
  end 
  create_table &quot;tasks&quot;, :force =&amp;gt; true do |t| 
    t.string  &quot;name&quot; 
    t.integer &quot;project_id&quot; 
  end 
  create_table &quot;tasks_users&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t| 
    t.integer &quot;task_id&quot;, :null =&amp;gt; false 
    t.integer &quot;user_id&quot;, :null =&amp;gt; false 
  end 
  create_table &quot;users&quot;, :force =&amp;gt; true do |t| 
    t.string &quot;name&quot; 
  end 
end 

class Project &amp;lt; ActiveRecord::Base 
  has_many :tasks 
end 
class Task &amp;lt; ActiveRecord::Base 
  belongs_to :project 
  has_and_belongs_to_many :users 
end 
class User &amp;lt; ActiveRecord::Base 
  has_and_belongs_to_many :tasks 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;seeds.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;task1 = Task.create!(:name =&amp;gt; 'task1') 
task2 = Task.create!(:name =&amp;gt; 'task2') 
task3 = Task.create!(:name =&amp;gt; 'task3') 
pr1 = Project.create!(:name =&amp;gt; 'pr1') 
pr2 = Project.create!(:name =&amp;gt; 'pr2') 
task2.project_id = pr2.id 
task2.save! 
task2.users.create(:name =&amp;gt; 'Peter') 
task2.users.create(:name =&amp;gt; 'David') 
task2.users.create(:name =&amp;gt; 'Bernd')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Code that causes duplicates:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;puts Project.includes(:tasks =&amp;gt; :users).where('tasks.id is not null')
.to_xml(:include =&amp;gt; {:tasks =&amp;gt; {:include =&amp;gt; :users}})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will return 3 times the same task (task2) in the xml
output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;project&amp;gt;
  &amp;lt;name&amp;gt;Pr2&amp;lt;/name&amp;gt;
    &amp;lt;tasks&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
          &amp;lt;users&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Peter&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;David&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Bernd&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
          &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
          &amp;lt;users&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Peter&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;David&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Bernd&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
          &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
          &amp;lt;users&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Peter&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;David&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
            &amp;lt;user&amp;gt;  &amp;lt;name&amp;gt;Bernd&amp;lt;/name&amp;gt; &amp;lt;/user&amp;gt;
          &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
    &amp;lt;/tasks&amp;gt;
  &amp;lt;/project&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This code works fine:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;puts Project.includes(:tasks).where('tasks.id is not null')
.to_xml(:include =&amp;gt; {:tasks =&amp;gt; {:include =&amp;gt; :users}})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This issue has been discussed on the core group:&lt;br&gt;
&lt;a href=
&quot;http://groups.google.de/group/rubyonrails-core/browse_thread/thread/5c6d8075544e1ceb?hl=de&quot;&gt;
http://groups.google.de/group/rubyonrails-core/browse_thread/thread...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T17:15:09+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-06-25T17:53:36+01:00</updated-at>
      <user-id type="integer">99157</user-id>
      <version type="integer">1</version>
      <user-name>David</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T18:04:38+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-06-25T18:04:45+01:00</updated-at>
      <user-id type="integer">99157</user-id>
      <version type="integer">2</version>
      <user-name>David</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T19:31:32+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-06-25T19:31:43+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>David can you provide a failing test case following http://rails.lighthouseapp.com/projects/8994/sending-patches</body>
      <body-html>&lt;div&gt;&lt;p&gt;David can you provide a failing test case following &lt;a href=
&quot;http://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;http://rails.lighthouseapp.com/projects/8994/sending-patches&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T22:10:53+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-06-25T22:11:02+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a test case. Will upload it soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a test case. Will upload it soon.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T22:13:29+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-06-25T22:13:37+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok nice!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok nice!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T22:14:17+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-06-25T22:14:26+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I spent some time and it seems issue is not with to_xml. Check this out

@@@ ruby
    # case 1
    projects = Project.where('tasks.id is not null').includes(:tasks)
    p = projects.first
    count1 =  p.tasks.size
    puts &quot;count1 is #{count1}&quot;  #=&gt; 1

    # case 2
    projects = Project.where('tasks.id is not null').includes(:tasks =&gt; :users)
    p = projects.first
    count2 =  p.tasks.size
    puts &quot;count2 is #{count2}&quot;  #=&gt; 3
@@@

Notice that the count result is 3 in case2. In case2 p has three tasks and all the three tasks are the same task but it is repeated three times.

h3. Rails allows eager loading to preload some data. In this case the count is changing just because I am doing eager loading. And that sounds like a bug to me.




sql generated in case 1 is 

@@@ ruby
 Project Load (35.0ms)  SELECT DISTINCT &quot;projects&quot;.id FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; WHERE (tasks.id is not null) LIMIT 1
  Project Load (0.3ms)  SELECT &quot;projects&quot;.&quot;id&quot; AS t0_r0, &quot;projects&quot;.&quot;name&quot; AS t0_r1, &quot;projects&quot;.&quot;created_at&quot; AS t0_r2, &quot;projects&quot;.&quot;updated_at&quot; AS t0_r3, &quot;tasks&quot;.&quot;id&quot; AS t1_r0, &quot;tasks&quot;.&quot;name&quot; AS t1_r1, &quot;tasks&quot;.&quot;project_id&quot; AS t1_r2 FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; WHERE (tasks.id is not null) AND (&quot;projects&quot;.&quot;id&quot; IN (4))
@@@

sql geenerated in case 2 is

@@@ ruby
Project Load (0.2ms)  SELECT DISTINCT &quot;projects&quot;.id FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;tasks_users&quot; ON &quot;tasks_users&quot;.&quot;task_id&quot; = &quot;tasks&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;users&quot; ON &quot;users&quot;.&quot;id&quot; = &quot;tasks_users&quot;.&quot;user_id&quot; WHERE (tasks.id is not null) LIMIT 1
  Project Load (0.3ms)  SELECT &quot;projects&quot;.&quot;id&quot; AS t0_r0, &quot;projects&quot;.&quot;name&quot; AS t0_r1, &quot;projects&quot;.&quot;created_at&quot; AS t0_r2, &quot;projects&quot;.&quot;updated_at&quot; AS t0_r3, &quot;tasks&quot;.&quot;id&quot; AS t1_r0, &quot;tasks&quot;.&quot;name&quot; AS t1_r1, &quot;tasks&quot;.&quot;project_id&quot; AS t1_r2, &quot;users&quot;.&quot;id&quot; AS t2_r0, &quot;users&quot;.&quot;name&quot; AS t2_r1 FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;tasks_users&quot; ON &quot;tasks_users&quot;.&quot;task_id&quot; = &quot;tasks&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;users&quot; ON &quot;users&quot;.&quot;id&quot; = &quot;tasks_users&quot;.&quot;user_id&quot; WHERE (tasks.id is not null) AND (&quot;projects&quot;.&quot;id&quot; IN (4))
@@@


If someone wants to recreate this case then the full dump is 

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100625013546) do

  create_table &quot;projects&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;tasks&quot;, :force =&gt; true do |t|
    t.string  &quot;name&quot;
    t.integer &quot;project_id&quot;
  end

  create_table &quot;tasks_users&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.integer &quot;task_id&quot;, :null =&gt; false
    t.integer &quot;user_id&quot;, :null =&gt; false
  end

  create_table &quot;users&quot;, :force =&gt; true do |t|
    t.string &quot;name&quot;
  end

end
class Project &lt; ActiveRecord::Base
  has_many :tasks

  def self.setup
    Project.delete_all
    Task.delete_all
    User.delete_all
    task1 = Task.create!(:name =&gt; 'task1')
    task2 = Task.create!(:name =&gt; 'task2')
    task3 = Task.create!(:name =&gt; 'task3')
    pr1 = Project.create!(:name =&gt; 'pr1')
    pr2 = Project.create!(:name =&gt; 'pr2')
    task2.project_id = pr2.id
    task2.save!
    task2.users.create(:name =&gt; 'Peter')
    task2.users.create(:name =&gt; 'David')
    task2.users.create(:name =&gt; 'Bernd')
  end

  def self.lab
    self.setup
    projects = Project.where('tasks.id is not null').includes(:tasks)
    p = projects.first
    count1 =  p.tasks.size
    puts &quot;count1 is #{count1}&quot;

    projects = Project.where('tasks.id is not null').includes(:tasks =&gt; :users)
    p = projects.first
    count2 =  p.tasks.size
    puts &quot;count2 is #{count2}&quot;
  end
end

class Task &lt; ActiveRecord::Base
  belongs_to :project
  has_and_belongs_to_many :users
end
class User &lt; ActiveRecord::Base
  has_and_belongs_to_many :tasks
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I spent some time and it seems issue is not with to_xml. Check
this out&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    # case 1
    projects = Project.where('tasks.id is not null').includes(:tasks)
    p = projects.first
    count1 =  p.tasks.size
    puts &quot;count1 is #{count1}&quot;  #=&amp;gt; 1

    # case 2
    projects = Project.where('tasks.id is not null').includes(:tasks =&amp;gt; :users)
    p = projects.first
    count2 =  p.tasks.size
    puts &quot;count2 is #{count2}&quot;  #=&amp;gt; 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that the count result is 3 in case2. In case2 p has three
tasks and all the three tasks are the same task but it is repeated
three times.&lt;/p&gt;
&lt;h3&gt;Rails allows eager loading to preload some data. In this case
the count is changing just because I am doing eager loading. And
that sounds like a bug to me.&lt;/h3&gt;
&lt;p&gt;sql generated in case 1 is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; Project Load (35.0ms)  SELECT DISTINCT &quot;projects&quot;.id FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; WHERE (tasks.id is not null) LIMIT 1
  Project Load (0.3ms)  SELECT &quot;projects&quot;.&quot;id&quot; AS t0_r0, &quot;projects&quot;.&quot;name&quot; AS t0_r1, &quot;projects&quot;.&quot;created_at&quot; AS t0_r2, &quot;projects&quot;.&quot;updated_at&quot; AS t0_r3, &quot;tasks&quot;.&quot;id&quot; AS t1_r0, &quot;tasks&quot;.&quot;name&quot; AS t1_r1, &quot;tasks&quot;.&quot;project_id&quot; AS t1_r2 FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; WHERE (tasks.id is not null) AND (&quot;projects&quot;.&quot;id&quot; IN (4))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;sql geenerated in case 2 is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Project Load (0.2ms)  SELECT DISTINCT &quot;projects&quot;.id FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;tasks_users&quot; ON &quot;tasks_users&quot;.&quot;task_id&quot; = &quot;tasks&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;users&quot; ON &quot;users&quot;.&quot;id&quot; = &quot;tasks_users&quot;.&quot;user_id&quot; WHERE (tasks.id is not null) LIMIT 1
  Project Load (0.3ms)  SELECT &quot;projects&quot;.&quot;id&quot; AS t0_r0, &quot;projects&quot;.&quot;name&quot; AS t0_r1, &quot;projects&quot;.&quot;created_at&quot; AS t0_r2, &quot;projects&quot;.&quot;updated_at&quot; AS t0_r3, &quot;tasks&quot;.&quot;id&quot; AS t1_r0, &quot;tasks&quot;.&quot;name&quot; AS t1_r1, &quot;tasks&quot;.&quot;project_id&quot; AS t1_r2, &quot;users&quot;.&quot;id&quot; AS t2_r0, &quot;users&quot;.&quot;name&quot; AS t2_r1 FROM &quot;projects&quot; LEFT OUTER JOIN &quot;tasks&quot; ON &quot;tasks&quot;.&quot;project_id&quot; = &quot;projects&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;tasks_users&quot; ON &quot;tasks_users&quot;.&quot;task_id&quot; = &quot;tasks&quot;.&quot;id&quot; LEFT OUTER JOIN &quot;users&quot; ON &quot;users&quot;.&quot;id&quot; = &quot;tasks_users&quot;.&quot;user_id&quot; WHERE (tasks.id is not null) AND (&quot;projects&quot;.&quot;id&quot; IN (4))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If someone wants to recreate this case then the full dump is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100625013546) do

  create_table &quot;projects&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;tasks&quot;, :force =&amp;gt; true do |t|
    t.string  &quot;name&quot;
    t.integer &quot;project_id&quot;
  end

  create_table &quot;tasks_users&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
    t.integer &quot;task_id&quot;, :null =&amp;gt; false
    t.integer &quot;user_id&quot;, :null =&amp;gt; false
  end

  create_table &quot;users&quot;, :force =&amp;gt; true do |t|
    t.string &quot;name&quot;
  end

end
class Project &amp;lt; ActiveRecord::Base
  has_many :tasks

  def self.setup
    Project.delete_all
    Task.delete_all
    User.delete_all
    task1 = Task.create!(:name =&amp;gt; 'task1')
    task2 = Task.create!(:name =&amp;gt; 'task2')
    task3 = Task.create!(:name =&amp;gt; 'task3')
    pr1 = Project.create!(:name =&amp;gt; 'pr1')
    pr2 = Project.create!(:name =&amp;gt; 'pr2')
    task2.project_id = pr2.id
    task2.save!
    task2.users.create(:name =&amp;gt; 'Peter')
    task2.users.create(:name =&amp;gt; 'David')
    task2.users.create(:name =&amp;gt; 'Bernd')
  end

  def self.lab
    self.setup
    projects = Project.where('tasks.id is not null').includes(:tasks)
    p = projects.first
    count1 =  p.tasks.size
    puts &quot;count1 is #{count1}&quot;

    projects = Project.where('tasks.id is not null').includes(:tasks =&amp;gt; :users)
    p = projects.first
    count2 =  p.tasks.size
    puts &quot;count2 is #{count2}&quot;
  end
end

class Task &amp;lt; ActiveRecord::Base
  belongs_to :project
  has_and_belongs_to_many :users
end
class User &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :tasks
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-01T18:13:57+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-01T18:14:02+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hey Neeraj, thanks for the rock-solid investigation and I completely agree with the conclusion. The issue is, instead of having, one project, three tasks and three users as result, we should have one project, only one task and three users.

Not sure how hard would be to fix that but, since Rails is already nesting the users properly inside tasks, it seems to be mainly an issue of guaranteeing the uniqueness of the task object (for example, we could check the primary key uniqueness before adding each task to the tasks array).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Neeraj, thanks for the rock-solid investigation and I
completely agree with the conclusion. The issue is, instead of
having, one project, three tasks and three users as result, we
should have one project, only one task and three users.&lt;/p&gt;
&lt;p&gt;Not sure how hard would be to fix that but, since Rails is
already nesting the users properly inside tasks, it seems to be
mainly an issue of guaranteeing the uniqueness of the task object
(for example, we could check the primary key uniqueness before
adding each task to the tasks array).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-02T11:20:42+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-02T11:20:46+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While working on some other ticket I came across :uniq =&gt; true option and that seems to solve this problem.

In the comment that above posted if I change from

@@@ ruby
class Project &lt; ActiveRecord::Base
  has_many :tasks
end
@@@

to 


@@@ ruby
class Project &lt; ActiveRecord::Base
  has_many :tasks, :uniq =&gt; true
end
@@@

then I get only one record where previously I used to get 3 records.

@ David can you try :uniq =&gt; true and see if you are getting to_xml output in the desired format?</body>
      <body-html>&lt;div&gt;&lt;p&gt;While working on some other ticket I came across :uniq =&amp;gt;
true option and that seems to solve this problem.&lt;/p&gt;
&lt;p&gt;In the comment that above posted if I change from&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Project &amp;lt; ActiveRecord::Base
  has_many :tasks
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Project &amp;lt; ActiveRecord::Base
  has_many :tasks, :uniq =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;then I get only one record where previously I used to get 3
records.&lt;/p&gt;
&lt;p&gt;@ David can you try :uniq =&amp;gt; true and see if you are getting
to_xml output in the desired format?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-14T22:57:55+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-14T22:57:59+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">9</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hey Neeraj, I still get 3 records in the to_xml / to_json output. The count for count2 = p.tasks.size is 1 though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Neeraj, I still get 3 records in the to_xml / to_json
output. The count for count2 = p.tasks.size is 1 though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-16T14:17:52+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-16T14:17:53+01:00</updated-at>
      <user-id type="integer">99157</user-id>
      <version type="integer">10</version>
      <user-name>David</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@David can  you try this

~/activerecord/lib/active_record/associations.rb

Change the following method from

@@@ ruby
def remove_duplicate_results!(base, records, associations)
   case associations
     when Symbol, String
       reflection = base.reflections[associations]
       if reflection &amp;&amp; reflection.collection?
         records.each { |record| record.send(reflection.name).target.uniq! }
       end
     when Array
       associations.each do |association|
         remove_duplicate_results!(base, records, association)
       end
     when Hash
       associations.keys.each do |name|
         reflection = base.reflections[name]

         parent_records = []
         records.each do |record|
           descendant = record.send(reflection.name)
           if descendant
             if reflection.collection?
               parent_records.concat descendant.target.uniq
             else
               parent_records &lt;&lt; descendant
             end
           end
         end

         remove_duplicate_results!(reflection.klass, parent_records, associations[name]) unless parent_records.empty?
       end
   end
 end
@@@


To

@@@ ruby
 def remove_duplicate_results!(base, records, associations)
    case associations
      when Symbol, String
        reflection = base.reflections[associations]
        if reflection &amp;&amp; reflection.collection?
          records.each { |record| record.send(reflection.name).target.uniq! }
        end
      when Array
        associations.each do |association|
          remove_duplicate_results!(base, records, association)
        end
      when Hash
        associations.keys.each do |name|
          reflection = base.reflections[name]

          if records.any? &amp;&amp; reflection.options &amp;&amp; reflection.options[:uniq]
            records.each { |record| record.send(reflection.name).target.uniq! }
          end

          parent_records = []
          records.each do |record|
            descendant = record.send(reflection.name)
            if descendant
              if reflection.collection?
                parent_records.concat descendant.target.uniq
              else
                parent_records &lt;&lt; descendant
              end
            end
          end

          remove_duplicate_results!(reflection.klass, parent_records, associations[name]) unless parent_records.empty?
        end
    end
  end
@@@

Before that fix I was getting

@@@ ruby
&lt;projects type=&quot;array&quot;&gt;
  &lt;project&gt;
    &lt;name&gt;pr2&lt;/name&gt;
    &lt;created-at type=&quot;datetime&quot;&gt;2010-07-26T16:22:50Z&lt;/created-at&gt;
    &lt;updated-at type=&quot;datetime&quot;&gt;2010-07-26T16:22:50Z&lt;/updated-at&gt;
    &lt;id type=&quot;integer&quot;&gt;104&lt;/id&gt;
    &lt;tasks type=&quot;array&quot;&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
        &lt;project-id type=&quot;integer&quot;&gt;104&lt;/project-id&gt;
        &lt;id type=&quot;integer&quot;&gt;105&lt;/id&gt;
        &lt;users type=&quot;array&quot;&gt;
          &lt;user&gt;
            &lt;name&gt;John1&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;298&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John2&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;299&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John3&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;300&lt;/id&gt;
          &lt;/user&gt;
        &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
        &lt;project-id type=&quot;integer&quot;&gt;104&lt;/project-id&gt;
        &lt;id type=&quot;integer&quot;&gt;105&lt;/id&gt;
        &lt;users type=&quot;array&quot;&gt;
          &lt;user&gt;
            &lt;name&gt;John1&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;298&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John2&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;299&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John3&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;300&lt;/id&gt;
          &lt;/user&gt;
        &lt;/users&gt;
      &lt;/task&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
        &lt;project-id type=&quot;integer&quot;&gt;104&lt;/project-id&gt;
        &lt;id type=&quot;integer&quot;&gt;105&lt;/id&gt;
        &lt;users type=&quot;array&quot;&gt;
          &lt;user&gt;
            &lt;name&gt;John1&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;298&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John2&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;299&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John3&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;300&lt;/id&gt;
          &lt;/user&gt;
        &lt;/users&gt;
      &lt;/task&gt;
    &lt;/tasks&gt;
  &lt;/project&gt;
&lt;/projects&gt;
@@@

Now I am getting 

@@@ ruby
&lt;projects type=&quot;array&quot;&gt;
  &lt;project&gt;
    &lt;name&gt;pr2&lt;/name&gt;
    &lt;created-at type=&quot;datetime&quot;&gt;2010-07-26T16:23:31Z&lt;/created-at&gt;
    &lt;updated-at type=&quot;datetime&quot;&gt;2010-07-26T16:23:31Z&lt;/updated-at&gt;
    &lt;id type=&quot;integer&quot;&gt;105&lt;/id&gt;
    &lt;tasks type=&quot;array&quot;&gt;
      &lt;task&gt;
        &lt;name&gt;task2&lt;/name&gt;
        &lt;project-id type=&quot;integer&quot;&gt;105&lt;/project-id&gt;
        &lt;id type=&quot;integer&quot;&gt;106&lt;/id&gt;
        &lt;users type=&quot;array&quot;&gt;
          &lt;user&gt;
            &lt;name&gt;John1&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;301&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John2&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;302&lt;/id&gt;
          &lt;/user&gt;
          &lt;user&gt;
            &lt;name&gt;John3&lt;/name&gt;
            &lt;id type=&quot;integer&quot;&gt;303&lt;/id&gt;
          &lt;/user&gt;
        &lt;/users&gt;
      &lt;/task&gt;
    &lt;/tasks&gt;
  &lt;/project&gt;
&lt;/projects&gt;
@@@

Can you verify if the proposed solution works for you or not.

All the active_record tests are passing after this fix. If it works for you then I will write a test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@David can you try this&lt;/p&gt;
&lt;p&gt;~/activerecord/lib/active_record/associations.rb&lt;/p&gt;
&lt;p&gt;Change the following method from&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;def remove_duplicate_results!(base, records, associations)
   case associations
     when Symbol, String
       reflection = base.reflections[associations]
       if reflection &amp;amp;&amp;amp; reflection.collection?
         records.each { |record| record.send(reflection.name).target.uniq! }
       end
     when Array
       associations.each do |association|
         remove_duplicate_results!(base, records, association)
       end
     when Hash
       associations.keys.each do |name|
         reflection = base.reflections[name]

         parent_records = []
         records.each do |record|
           descendant = record.send(reflection.name)
           if descendant
             if reflection.collection?
               parent_records.concat descendant.target.uniq
             else
               parent_records &amp;lt;&amp;lt; descendant
             end
           end
         end

         remove_duplicate_results!(reflection.klass, parent_records, associations[name]) unless parent_records.empty?
       end
   end
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; def remove_duplicate_results!(base, records, associations)
    case associations
      when Symbol, String
        reflection = base.reflections[associations]
        if reflection &amp;amp;&amp;amp; reflection.collection?
          records.each { |record| record.send(reflection.name).target.uniq! }
        end
      when Array
        associations.each do |association|
          remove_duplicate_results!(base, records, association)
        end
      when Hash
        associations.keys.each do |name|
          reflection = base.reflections[name]

          if records.any? &amp;amp;&amp;amp; reflection.options &amp;amp;&amp;amp; reflection.options[:uniq]
            records.each { |record| record.send(reflection.name).target.uniq! }
          end

          parent_records = []
          records.each do |record|
            descendant = record.send(reflection.name)
            if descendant
              if reflection.collection?
                parent_records.concat descendant.target.uniq
              else
                parent_records &amp;lt;&amp;lt; descendant
              end
            end
          end

          remove_duplicate_results!(reflection.klass, parent_records, associations[name]) unless parent_records.empty?
        end
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Before that fix I was getting&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;lt;projects type=&quot;array&quot;&amp;gt;
  &amp;lt;project&amp;gt;
    &amp;lt;name&amp;gt;pr2&amp;lt;/name&amp;gt;
    &amp;lt;created-at type=&quot;datetime&quot;&amp;gt;2010-07-26T16:22:50Z&amp;lt;/created-at&amp;gt;
    &amp;lt;updated-at type=&quot;datetime&quot;&amp;gt;2010-07-26T16:22:50Z&amp;lt;/updated-at&amp;gt;
    &amp;lt;id type=&quot;integer&quot;&amp;gt;104&amp;lt;/id&amp;gt;
    &amp;lt;tasks type=&quot;array&quot;&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
        &amp;lt;project-id type=&quot;integer&quot;&amp;gt;104&amp;lt;/project-id&amp;gt;
        &amp;lt;id type=&quot;integer&quot;&amp;gt;105&amp;lt;/id&amp;gt;
        &amp;lt;users type=&quot;array&quot;&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John1&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;298&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John2&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;299&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John3&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;300&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
        &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
        &amp;lt;project-id type=&quot;integer&quot;&amp;gt;104&amp;lt;/project-id&amp;gt;
        &amp;lt;id type=&quot;integer&quot;&amp;gt;105&amp;lt;/id&amp;gt;
        &amp;lt;users type=&quot;array&quot;&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John1&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;298&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John2&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;299&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John3&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;300&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
        &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
        &amp;lt;project-id type=&quot;integer&quot;&amp;gt;104&amp;lt;/project-id&amp;gt;
        &amp;lt;id type=&quot;integer&quot;&amp;gt;105&amp;lt;/id&amp;gt;
        &amp;lt;users type=&quot;array&quot;&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John1&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;298&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John2&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;299&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John3&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;300&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
        &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
    &amp;lt;/tasks&amp;gt;
  &amp;lt;/project&amp;gt;
&amp;lt;/projects&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now I am getting&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;lt;projects type=&quot;array&quot;&amp;gt;
  &amp;lt;project&amp;gt;
    &amp;lt;name&amp;gt;pr2&amp;lt;/name&amp;gt;
    &amp;lt;created-at type=&quot;datetime&quot;&amp;gt;2010-07-26T16:23:31Z&amp;lt;/created-at&amp;gt;
    &amp;lt;updated-at type=&quot;datetime&quot;&amp;gt;2010-07-26T16:23:31Z&amp;lt;/updated-at&amp;gt;
    &amp;lt;id type=&quot;integer&quot;&amp;gt;105&amp;lt;/id&amp;gt;
    &amp;lt;tasks type=&quot;array&quot;&amp;gt;
      &amp;lt;task&amp;gt;
        &amp;lt;name&amp;gt;task2&amp;lt;/name&amp;gt;
        &amp;lt;project-id type=&quot;integer&quot;&amp;gt;105&amp;lt;/project-id&amp;gt;
        &amp;lt;id type=&quot;integer&quot;&amp;gt;106&amp;lt;/id&amp;gt;
        &amp;lt;users type=&quot;array&quot;&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John1&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;301&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John2&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;302&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
          &amp;lt;user&amp;gt;
            &amp;lt;name&amp;gt;John3&amp;lt;/name&amp;gt;
            &amp;lt;id type=&quot;integer&quot;&amp;gt;303&amp;lt;/id&amp;gt;
          &amp;lt;/user&amp;gt;
        &amp;lt;/users&amp;gt;
      &amp;lt;/task&amp;gt;
    &amp;lt;/tasks&amp;gt;
  &amp;lt;/project&amp;gt;
&amp;lt;/projects&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Can you verify if the proposed solution works for you or
not.&lt;/p&gt;
&lt;p&gt;All the active_record tests are passing after this fix. If it
works for you then I will write a test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-26T17:26:48+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-26T17:26:50+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes it works now! With :uniq =&gt; true and your changes i'm getting the desired results, thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes it works now! With :uniq =&amp;gt; true and your changes i'm
getting the desired results, thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-26T18:27:30+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-26T18:27:32+01:00</updated-at>
      <user-id type="integer">99157</user-id>
      <version type="integer">12</version>
      <user-name>David</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is code fix with tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is code fix with tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-26T20:15:10+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-26T20:15:13+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">13</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The most cool online shoes shop where you can find the most fashion designers shoes, include
&lt;a href='http://www.fashionshoesmart.com'&gt;Manolo Blahnik Shoes&lt;/a&gt;, &lt;a href='http://www.fashionshoesmart.com'&gt;Jimmy Choo Shoes&lt;/a&gt;, Christian Louboutin shoes and more. 
we offer high quality highheels at low price.

Simple ways to love your wardrobe.
An online shop specializing in &lt;a href='http://www.hervelegerbrand.com'&gt;Herve Leger&lt;/a&gt;, Herve Leger Dress, Herve Leger Skirt, 
Herve Leger Sale, Herve Leger Dresses.All new style in our store.

Shop the latest styles &lt;a href='http://www.juicyshoponline.com'&gt;Juicy Couture&lt;/a&gt; handbags, juicy couture tracksuit.
Juicy couture sale, juicy couture outlet,100% quality guarantee.

FashionStyleOnsale offer high quality Moncler Jackets at low price. 
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler Coats at FashionStyleOnsale
&lt;a href='http://www.fashionstyleonsale.com'&gt;moncler&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;The most cool online shoes shop where you can find the most
fashion designers shoes, include&lt;br&gt;
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Manolo Blahnik Shoes&lt;/a&gt;,
&lt;a href=&quot;http://www.fashionshoesmart.com&quot;&gt;Jimmy Choo Shoes&lt;/a&gt;,
Christian Louboutin shoes and more.&lt;br&gt;
we offer high quality highheels at low price.&lt;/p&gt;
&lt;p&gt;Simple ways to love your wardrobe.&lt;br&gt;
An online shop specializing in &lt;a href=
&quot;http://www.hervelegerbrand.com&quot;&gt;Herve Leger&lt;/a&gt;, Herve Leger
Dress, Herve Leger Skirt,&lt;br&gt;
Herve Leger Sale, Herve Leger Dresses.All new style in our
store.&lt;/p&gt;
&lt;p&gt;Shop the latest styles &lt;a href=
&quot;http://www.juicyshoponline.com&quot;&gt;Juicy Couture&lt;/a&gt; handbags, juicy
couture tracksuit.&lt;br&gt;
Juicy couture sale, juicy couture outlet,100% quality
guarantee.&lt;/p&gt;
&lt;p&gt;FashionStyleOnsale offer high quality Moncler Jackets at low
price.&lt;br&gt;
Moncler Jackets on sale, shop more discount Moncler Vest, Moncler
Coats at FashionStyleOnsale&lt;br&gt;
&lt;a href=&quot;http://www.fashionstyleonsale.com&quot;&gt;moncler&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T15:13:30+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-07-27T15:22:29+01:00</updated-at>
      <user-id type="integer">109040</user-id>
      <version type="integer">14</version>
      <user-name>matin</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [009aa8825b6932b006f005ac351b82ad8100d7f1]) Eager loading an association should not change the count of children

[#4971 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/009aa8825b6932b006f005ac351b82ad8100d7f1</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/009aa8825b6932b006f005ac351b82ad8100d7f1&quot;
title=
&quot;Changeset [009aa8825b6932b006f005ac351b82ad8100d7f1]&quot;&gt;[009aa8825b6932b006f005ac351b82ad8100d7f1]&lt;/a&gt;)
Eager loading an association should not change the count of
children&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4971&quot; title=
&quot;Ticket #4971&quot;&gt;#4971&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/009aa8825b6932b006f005ac351b82ad8100d7f1&quot;&gt;
http://github.com/rails/rails/commit/009aa8825b6932b006f005ac351b82...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-02T16:20:41+01:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord rails3&quot; activerelation to_json to_xml</tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-08-02T16:20:43+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">15</version>
      <user-name>Repository</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T08:52:28+00:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord rails3\&quot; activerelation to_json to_xml&quot;
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-11-08T08:52:30+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">17</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T03:20:45+00:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2010-12-28T03:36:20+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">18</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T06:32:23+00:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2011-02-22T08:32:34+00:00</updated-at>
      <user-id type="integer">137256</user-id>
      <version type="integer">19</version>
      <user-name>gfsd</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:39:57+00:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2011-02-19T09:28:19+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">20</version>
      <user-name>mklo</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:11:58+00:00</created-at>
      <creator-id type="integer">99157</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4971</number>
      <permalink>nested-includes-in-ar-causes-duplicates-in-to_json-to_xml</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>nested includes in AR causes duplicates in to_json / to_xml</title>
      <updated-at type="datetime">2011-03-26T02:37:48+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">21</version>
      <user-name>bingbing</user-name>
      <creator-name>David</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4971</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2e2fb1bc74641c56d853604c98483e32862f3664</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-26T20:15:10+01:00</created-at>
      <filename>4971_fix_for_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">602983</id>
      <size type="integer">4420</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/602983/4971_fix_for_edge.diff</url>
    </attachment>
  </attachments>
</ticket>
