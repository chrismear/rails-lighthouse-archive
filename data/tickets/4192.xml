<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-03-16T17:09:28+00:00</created-at>
  <creator-id type="integer">90950</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4192</number>
  <permalink>table_name_prefix-breaks-rake-dbschemaload</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>dbschemaload table_name_prefix</tag>
  <title>table_name_prefix breaks rake db:schema:load</title>
  <updated-at type="datetime">2011-02-02T18:35:16+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jesse Andersen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4192</url>
  <priority-name nil="true"></priority-name>
  <original-body>Setting a table name prefix in my environment.rb file breaks db:schema:load, example:
@@@
    config.active_record.table_name_prefix = &quot;translator_&quot;
@@@

After I run db:schema:load, my tables load fine, but my translator_schema_migrations table contains only 1 row, and the row's version column is set to &quot;0&quot;. I added some print statements to the assume_migrated_upto_version(version) method to see what the problem was:

@@@
def assume_migrated_upto_version(version)
        puts &quot;Version Before: #{version}&quot;
        version = version.to_i
        puts &quot;Version after: #{version}&quot;

@@@

And here is the output from rake db:schema:load --trace
@@@
-- assume_migrated_upto_version(20100315153347)
Version Before: translator_20100315153347
Version after: 0
@@@

As you can see, db:schema:load is prepending my table prefix to the version number, and the version.to_i code can't handle that.</original-body>
  <latest-body>Setting a table name prefix in my environment.rb file breaks db:schema:load, example:
@@@
    config.active_record.table_name_prefix = &quot;translator_&quot;
@@@

After I run db:schema:load, my tables load fine, but my translator_schema_migrations table contains only 1 row, and the row's version column is set to &quot;0&quot;. I added some print statements to the assume_migrated_upto_version(version) method to see what the problem was:

@@@
def assume_migrated_upto_version(version)
        puts &quot;Version Before: #{version}&quot;
        version = version.to_i
        puts &quot;Version after: #{version}&quot;

@@@

And here is the output from rake db:schema:load --trace
@@@
-- assume_migrated_upto_version(20100315153347)
Version Before: translator_20100315153347
Version after: 0
@@@

As you can see, db:schema:load is prepending my table prefix to the version number, and the version.to_i code can't handle that.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Setting a table name prefix in my environment.rb file breaks
db:schema:load, example:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    config.active_record.table_name_prefix = &quot;translator_&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After I run db:schema:load, my tables load fine, but my
translator_schema_migrations table contains only 1 row, and the
row's version column is set to &quot;0&quot;. I added some print statements
to the assume_migrated_upto_version(version) method to see what the
problem was:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def assume_migrated_upto_version(version)
        puts &quot;Version Before: #{version}&quot;
        version = version.to_i
        puts &quot;Version after: #{version}&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And here is the output from rake db:schema:load --trace&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;-- assume_migrated_upto_version(20100315153347)
Version Before: translator_20100315153347
Version after: 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see, db:schema:load is prepending my table prefix to
the version number, and the version.to_i code can't handle
that.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Setting a table name prefix in my environment.rb file breaks db:schema:load, example:
@@@
    config.active_record.table_name_prefix = &quot;translator_&quot;
@@@

After I run db:schema:load, my tables load fine, but my translator_schema_migrations table contains only 1 row, and the row's version column is set to &quot;0&quot;. I added some print statements to the assume_migrated_upto_version(version) method to see what the problem was:

@@@
def assume_migrated_upto_version(version)
        puts &quot;Version Before: #{version}&quot;
        version = version.to_i
        puts &quot;Version after: #{version}&quot;

@@@

And here is the output from rake db:schema:load --trace
@@@
-- assume_migrated_upto_version(20100315153347)
Version Before: translator_20100315153347
Version after: 0
@@@

As you can see, db:schema:load is prepending my table prefix to the version number, and the version.to_i code can't handle that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Setting a table name prefix in my environment.rb file breaks
db:schema:load, example:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    config.active_record.table_name_prefix = &quot;translator_&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After I run db:schema:load, my tables load fine, but my
translator_schema_migrations table contains only 1 row, and the
row's version column is set to &quot;0&quot;. I added some print statements
to the assume_migrated_upto_version(version) method to see what the
problem was:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def assume_migrated_upto_version(version)
        puts &quot;Version Before: #{version}&quot;
        version = version.to_i
        puts &quot;Version after: #{version}&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And here is the output from rake db:schema:load --trace&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;-- assume_migrated_upto_version(20100315153347)
Version Before: translator_20100315153347
Version after: 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see, db:schema:load is prepending my table prefix to
the version number, and the version.to_i code can't handle
that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-16T17:09:28+00:00</created-at>
      <creator-id type="integer">90950</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4192</number>
      <permalink>table_name_prefix-breaks-rake-dbschemaload</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>db:schema:load table_name_prefix</tag>
      <title>table_name_prefix breaks rake db:schema:load</title>
      <updated-at type="datetime">2010-03-16T17:11:54+00:00</updated-at>
      <user-id type="integer">90950</user-id>
      <version type="integer">1</version>
      <user-name>Jesse Andersen</user-name>
      <creator-name>Jesse Andersen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4192</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:54:20+00:00</created-at>
      <creator-id type="integer">90950</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: db:schema:load table_name_prefix
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4192</number>
      <permalink>table_name_prefix-breaks-rake-dbschemaload</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>dbschemaload table_name_prefix</tag>
      <title>table_name_prefix breaks rake db:schema:load</title>
      <updated-at type="datetime">2011-02-02T18:35:10+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jesse Andersen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4192</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:54:22+00:00</created-at>
      <creator-id type="integer">90950</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4192</number>
      <permalink>table_name_prefix-breaks-rake-dbschemaload</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>dbschemaload table_name_prefix</tag>
      <title>table_name_prefix breaks rake db:schema:load</title>
      <updated-at type="datetime">2011-02-02T18:35:16+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jesse Andersen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4192</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
