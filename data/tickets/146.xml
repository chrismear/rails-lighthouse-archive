<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-08T18:21:14+01:00</created-at>
  <creator-id type="integer">19723</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">146</number>
  <permalink>bug-rails-info-propertonsidering-all-requests-localies-page-not-c</permalink>
  <priority type="integer">11879</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bug controller</tag>
  <title>[Bug] /rails/info/propertonsidering all requests localies page not c</title>
  <updated-at type="datetime">2008-07-17T01:13:12+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Matthew Mucklo</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/146</url>
  <priority-name nil="true"></priority-name>
  <original-body>Rails team,

Thank you for your product and your time.  If I may I'd like to submit a bug I came across with Rails 2.0.2 over the last day or so working with it.

This bug is presently described (as of this writing on 5/8/2008) at &quot;http://justbarebones.blogspot.com/2007_08_12_archive.html&quot;:http://justbarebones.blogspot.com/2007_08_12_archive.html

It's still present as of Rails 2.0.2

The environment is a remote rails install, being accessed from another computer.

An example could be setting up Rails on a *nix box (such as an  HPUX based machine) and accessing it from a Windows-based machine.

The problem seems to occur when accessing the properties URL linked to from the default front page:

  http://&lt;your server&gt;:3000/rails/info/properties

The following message is received:

  &quot;For security purposes, this information is only available to local requests.&quot;

That is correct behaviour for a production machine, however when server is in development mode and the following environment variable is set in development.rb:

  config.action_controller.consider_all_requests_local = true

The rails/info/properties page probably should respond and act as if the request is coming from a local machine.  As of Rails 2.0.2 it presently does not.

Now if this is by design, even in the development mode, one might want to reconsider, because of the case where someone sets up a development server on a remote machine that there is no graphical console access to.  It would be good to enforce consider_all_requests_local across all pages in that case.

The bug seems to be a minor oversight in the file:

  builtin/rails_info/rails/info_controller.rb:

Which says (on line 3):

  if local_request?

 (which only checks for 127.0.0.1 origination)

To enforce consider_all_requests_local, it should say (on line 3):

  if consider_all_requests_local || local_request?

that would mirror actionpack-2.0.2/lib/action_controller/rescue.rb, Line 122 (incidentally, it seems to be the same file where the method local_request? is defined).

--Matt</original-body>
  <latest-body>Rails team,

Thank you for your product and your time.  If I may I'd like to submit a bug I came across with Rails 2.0.2 over the last day or so working with it.

This bug is presently described (as of this writing on 5/8/2008) at &quot;http://justbarebones.blogspot.com/2007_08_12_archive.html&quot;:http://justbarebones.blogspot.com/2007_08_12_archive.html

It's still present as of Rails 2.0.2

The environment is a remote rails install, being accessed from another computer.

An example could be setting up Rails on a *nix box (such as an  HPUX based machine) and accessing it from a Windows-based machine.

The problem seems to occur when accessing the properties URL linked to from the default front page:

  http://&lt;your server&gt;:3000/rails/info/properties

The following message is received:

  &quot;For security purposes, this information is only available to local requests.&quot;

That is correct behaviour for a production machine, however when server is in development mode and the following environment variable is set in development.rb:

  config.action_controller.consider_all_requests_local = true

The rails/info/properties page probably should respond and act as if the request is coming from a local machine.  As of Rails 2.0.2 it presently does not.

Now if this is by design, even in the development mode, one might want to reconsider, because of the case where someone sets up a development server on a remote machine that there is no graphical console access to.  It would be good to enforce consider_all_requests_local across all pages in that case.

The bug seems to be a minor oversight in the file:

  builtin/rails_info/rails/info_controller.rb:

Which says (on line 3):

  if local_request?

 (which only checks for 127.0.0.1 origination)

To enforce consider_all_requests_local, it should say (on line 3):

  if consider_all_requests_local || local_request?

that would mirror actionpack-2.0.2/lib/action_controller/rescue.rb, Line 122 (incidentally, it seems to be the same file where the method local_request? is defined).

--Matt</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Rails team,
&lt;/p&gt;&lt;p&gt;
Thank you for your product and your time.  If I may I'd like to submit a bug I came across with Rails 2.0.2 over the last day or so working with it.
&lt;/p&gt;&lt;p&gt;
This bug is presently described (as of this writing on 5/8/2008) at &lt;a href=&quot;http://justbarebones.blogspot.com/2007_08_12_archive.html&quot;&gt;http://justbarebones.blogspot.com/2007_08_12_archive.html&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
It's still present as of Rails 2.0.2
&lt;/p&gt;&lt;p&gt;
The environment is a remote rails install, being accessed from another computer.
&lt;/p&gt;&lt;p&gt;
An example could be setting up Rails on a *nix box (such as an  HPUX based machine) and accessing it from a Windows-based machine.
&lt;/p&gt;&lt;p&gt;
The problem seems to occur when accessing the properties URL linked to from the default front page:
&lt;/p&gt;&lt;p&gt;
http://:3000/rails/info/properties
&lt;/p&gt;&lt;p&gt;
The following message is received:
&lt;/p&gt;&lt;p&gt;
&quot;For security purposes, this information is only available to local requests.&quot;
&lt;/p&gt;&lt;p&gt;
That is correct behaviour for a production machine, however when server is in development mode and the following environment variable is set in development.rb:
&lt;/p&gt;&lt;p&gt;
config.action_controller.consider_all_requests_local = true
&lt;/p&gt;&lt;p&gt;
The rails/info/properties page probably should respond and act as if the request is coming from a local machine.  As of Rails 2.0.2 it presently does not.
&lt;/p&gt;&lt;p&gt;
Now if this is by design, even in the development mode, one might want to reconsider, because of the case where someone sets up a development server on a remote machine that there is no graphical console access to.  It would be good to enforce consider_all_requests_local across all pages in that case.
&lt;/p&gt;&lt;p&gt;
The bug seems to be a minor oversight in the file:
&lt;/p&gt;&lt;p&gt;
builtin/rails_info/rails/info_controller.rb:
&lt;/p&gt;&lt;p&gt;
Which says (on line 3):
&lt;/p&gt;&lt;p&gt;
if local_request?
&lt;/p&gt;&lt;p&gt;
(which only checks for 127.0.0.1 origination)
&lt;/p&gt;&lt;p&gt;
To enforce consider_all_requests_local, it should say (on line 3):
&lt;/p&gt;&lt;p&gt;
if consider_all_requests_local || local_request?
&lt;/p&gt;&lt;p&gt;
that would mirror actionpack-2.0.2/lib/action_controller/rescue.rb, Line 122 (incidentally, it seems to be the same file where the method local_request? is defined).
&lt;/p&gt;&lt;p&gt;
--Matt
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails team,

Thank you for your product and your time.  If I may I'd like to submit a bug I came across with Rails 2.0.2 over the last day or so working with it.

This bug is presently described (as of this writing on 5/8/2008) at &quot;http://justbarebones.blogspot.com/2007_08_12_archive.html&quot;:http://justbarebones.blogspot.com/2007_08_12_archive.html

It's still present as of Rails 2.0.2

The environment is a remote rails install, being accessed from another computer.

An example could be setting up Rails on a *nix box (such as an  HPUX based machine) and accessing it from a Windows-based machine.

The problem seems to occur when accessing the properties URL linked to from the default front page:

  http://&lt;your server&gt;:3000/rails/info/properties

The following message is received:

  &quot;For security purposes, this information is only available to local requests.&quot;

That is correct behaviour for a production machine, however when server is in development mode and the following environment variable is set in development.rb:

  config.action_controller.consider_all_requests_local = true

The rails/info/properties page probably should respond and act as if the request is coming from a local machine.  As of Rails 2.0.2 it presently does not.

Now if this is by design, even in the development mode, one might want to reconsider, because of the case where someone sets up a development server on a remote machine that there is no graphical console access to.  It would be good to enforce consider_all_requests_local across all pages in that case.

The bug seems to be a minor oversight in the file:

  builtin/rails_info/rails/info_controller.rb:

Which says (on line 3):

  if local_request?

 (which only checks for 127.0.0.1 origination)

To enforce consider_all_requests_local, it should say (on line 3):

  if consider_all_requests_local || local_request?

that would mirror actionpack-2.0.2/lib/action_controller/rescue.rb, Line 122 (incidentally, it seems to be the same file where the method local_request? is defined).

--Matt</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Rails team,
&lt;/p&gt;&lt;p&gt;
Thank you for your product and your time.  If I may I'd like to submit a bug I came across with Rails 2.0.2 over the last day or so working with it.
&lt;/p&gt;&lt;p&gt;
This bug is presently described (as of this writing on 5/8/2008) at &lt;a href=&quot;http://justbarebones.blogspot.com/2007_08_12_archive.html&quot;&gt;http://justbarebones.blogspot.com/2007_08_12_archive.html&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
It's still present as of Rails 2.0.2
&lt;/p&gt;&lt;p&gt;
The environment is a remote rails install, being accessed from another computer.
&lt;/p&gt;&lt;p&gt;
An example could be setting up Rails on a *nix box (such as an  HPUX based machine) and accessing it from a Windows-based machine.
&lt;/p&gt;&lt;p&gt;
The problem seems to occur when accessing the properties URL linked to from the default front page:
&lt;/p&gt;&lt;p&gt;
http://:3000/rails/info/properties
&lt;/p&gt;&lt;p&gt;
The following message is received:
&lt;/p&gt;&lt;p&gt;
&quot;For security purposes, this information is only available to local requests.&quot;
&lt;/p&gt;&lt;p&gt;
That is correct behaviour for a production machine, however when server is in development mode and the following environment variable is set in development.rb:
&lt;/p&gt;&lt;p&gt;
config.action_controller.consider_all_requests_local = true
&lt;/p&gt;&lt;p&gt;
The rails/info/properties page probably should respond and act as if the request is coming from a local machine.  As of Rails 2.0.2 it presently does not.
&lt;/p&gt;&lt;p&gt;
Now if this is by design, even in the development mode, one might want to reconsider, because of the case where someone sets up a development server on a remote machine that there is no graphical console access to.  It would be good to enforce consider_all_requests_local across all pages in that case.
&lt;/p&gt;&lt;p&gt;
The bug seems to be a minor oversight in the file:
&lt;/p&gt;&lt;p&gt;
builtin/rails_info/rails/info_controller.rb:
&lt;/p&gt;&lt;p&gt;
Which says (on line 3):
&lt;/p&gt;&lt;p&gt;
if local_request?
&lt;/p&gt;&lt;p&gt;
(which only checks for 127.0.0.1 origination)
&lt;/p&gt;&lt;p&gt;
To enforce consider_all_requests_local, it should say (on line 3):
&lt;/p&gt;&lt;p&gt;
if consider_all_requests_local || local_request?
&lt;/p&gt;&lt;p&gt;
that would mirror actionpack-2.0.2/lib/action_controller/rescue.rb, Line 122 (incidentally, it seems to be the same file where the method local_request? is defined).
&lt;/p&gt;&lt;p&gt;
--Matt
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-08T18:21:14+01:00</created-at>
      <creator-id type="integer">19723</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">146</number>
      <permalink>bug-rails-info-propertonsidering-all-requests-localies-page-not-c</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[Bug] /rails/info/propertonsidering all requests localies page not c</title>
      <updated-at type="datetime">2008-05-08T18:21:14+01:00</updated-at>
      <user-id type="integer">19723</user-id>
      <version type="integer">1</version>
      <user-name>Matthew Mucklo</user-name>
      <creator-name>Matthew Mucklo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/146</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Appears to be fixed!

@@@
class Rails::InfoController &lt; ActionController::Base
  def properties
    if consider_all_requests_local || local_request?
      render :inline =&gt; Rails::Info.to_html
    else
      render :text =&gt; '&lt;p&gt;For security purposes, this information is only available to local requests.&lt;/p&gt;', :status =&gt; 500
    end
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Appears to be fixed!
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;class Rails::InfoController &amp;lt; ActionController::Base
  def properties
    if consider_all_requests_local || local_request?
      render :inline =&amp;gt; Rails::Info.to_html
    else
      render :text =&amp;gt; '&amp;lt;p&amp;gt;For security purposes, this information is only available to local requests.&amp;lt;/p&amp;gt;', :status =&amp;gt; 500
    end
  end
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-17T01:13:12+01:00</created-at>
      <creator-id type="integer">19723</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">146</number>
      <permalink>bug-rails-info-propertonsidering-all-requests-localies-page-not-c</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug controller</tag>
      <title>[Bug] /rails/info/propertonsidering all requests localies page not c</title>
      <updated-at type="datetime">2008-07-17T01:13:12+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Matthew Mucklo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/146</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
