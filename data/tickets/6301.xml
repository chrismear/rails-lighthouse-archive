<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-01-18T08:52:31+00:00</created-at>
  <creator-id type="integer">8303</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6301</number>
  <permalink>no-uninitialized-constant-thrown-when-referencing-ar-class</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;arel rails3&quot; constant</tag>
  <title>No 'uninitialized constant' thrown when referencing AR class</title>
  <updated-at type="datetime">2011-02-17T08:51:41+00:00</updated-at>
  <user-id type="integer">51351</user-id>
  <version type="integer">3</version>
  <user-name>Erik van Eykelen</user-name>
  <creator-name>Erik van Eykelen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6301</url>
  <priority-name nil="true"></priority-name>
  <original-body>'uninitialized constant' is not thrown for the following use case:

@@@ ruby
class Post &lt; ActiveRecord::Base
  TEST_FOO = 123
  validates_presence_of :title, :message =&gt; TEST_FOO_WRONG # &lt;- uninitialized constant!
  belongs_to :user
end

class User &lt; ActiveRecord::Base
  has_many :posts
end

class PostsController &lt; ApplicationController
  def index
    @post = User.first.posts.first # &lt;- No uninitialized constant thrown!
    # @post = Post.first # &lt;- Throws uninitialized constant
    render :text =&gt; @post.valid?
  end
end
@@@

Tested under Ruby 1.8.7, 1.9.2 and Rails 3.0.3</original-body>
  <latest-body>'uninitialized constant' is not thrown for the following use case:

@@@ ruby
class Post &lt; ActiveRecord::Base
  TEST_FOO = 123
  validates_presence_of :title, :message =&gt; TEST_FOO_WRONG # &lt;- uninitialized constant!
  belongs_to :user
end

class User &lt; ActiveRecord::Base
  has_many :posts
end

class PostsController &lt; ApplicationController
  def index
    @post = User.first.posts.first # &lt;- No uninitialized constant thrown!
    # @post = Post.first # &lt;- Throws uninitialized constant
    render :text =&gt; @post.valid?
  end
end
@@@

Tested under Ruby 1.8.7, 1.9.2 and Rails 3.0.3</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;'uninitialized constant' is not thrown for the following use
case:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Post &amp;lt; ActiveRecord::Base
  TEST_FOO = 123
  validates_presence_of :title, :message =&amp;gt; TEST_FOO_WRONG # &amp;lt;- uninitialized constant!
  belongs_to :user
end

class User &amp;lt; ActiveRecord::Base
  has_many :posts
end

class PostsController &amp;lt; ApplicationController
  def index
    @post = User.first.posts.first # &amp;lt;- No uninitialized constant thrown!
    # @post = Post.first # &amp;lt;- Throws uninitialized constant
    render :text =&amp;gt; @post.valid?
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Tested under Ruby 1.8.7, 1.9.2 and Rails 3.0.3&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>'uninitialized constant' is not thrown for the following use case:

@@@ ruby
class Post &lt; ActiveRecord::Base
  TEST_FOO = 123
  validates_presence_of :title, :message =&gt; TEST_FOO_WRONG # &lt;- uninitialized constant!
  belongs_to :user
end

class User &lt; ActiveRecord::Base
  has_many :posts
end

class PostsController &lt; ApplicationController
  def index
    @post = User.first.posts.first # &lt;- No uninitialized constant thrown!
    # @post = Post.first # &lt;- Throws uninitialized constant
    render :text =&gt; @post.valid?
  end
end
@@@

Tested under Ruby 1.8.7, 1.9.2 and Rails 3.0.3</body>
      <body-html>&lt;div&gt;&lt;p&gt;'uninitialized constant' is not thrown for the following use
case:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Post &amp;lt; ActiveRecord::Base
  TEST_FOO = 123
  validates_presence_of :title, :message =&amp;gt; TEST_FOO_WRONG # &amp;lt;- uninitialized constant!
  belongs_to :user
end

class User &amp;lt; ActiveRecord::Base
  has_many :posts
end

class PostsController &amp;lt; ApplicationController
  def index
    @post = User.first.posts.first # &amp;lt;- No uninitialized constant thrown!
    # @post = Post.first # &amp;lt;- Throws uninitialized constant
    render :text =&amp;gt; @post.valid?
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Tested under Ruby 1.8.7, 1.9.2 and Rails 3.0.3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-17T18:41:04+00:00</created-at>
      <creator-id type="integer">8303</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6301</number>
      <permalink>no-uninitialized-constant-thrown-when-referencing-ar-class</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel rails3&quot; constant</tag>
      <title>No 'uninitialized constant' thrown when referencing AR class</title>
      <updated-at type="datetime">2011-01-17T18:45:10+00:00</updated-at>
      <user-id type="integer">8303</user-id>
      <version type="integer">1</version>
      <user-name>Erik van Eykelen</user-name>
      <creator-name>Erik van Eykelen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6301</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Party dresses are a whole genre of &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses, &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list is virtually inexhaustible!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Party dresses are a whole genre of &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck
wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could
possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening
Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses,
&lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail
Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list
is virtually inexhaustible!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-18T08:28:42+00:00</created-at>
      <creator-id type="integer">8303</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6301</number>
      <permalink>no-uninitialized-constant-thrown-when-referencing-ar-class</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel rails3&quot; constant</tag>
      <title>No 'uninitialized constant' thrown when referencing AR class</title>
      <updated-at type="datetime">2011-01-18T08:52:31+00:00</updated-at>
      <user-id type="integer">133048</user-id>
      <version type="integer">2</version>
      <user-name>mary01</user-name>
      <creator-name>Erik van Eykelen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6301</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've tested this again under 1.9.2 and 3.0.4 and I cannot reproduce this issue anymore.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've tested this again under 1.9.2 and 3.0.4 and I cannot
reproduce this issue anymore.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T08:51:37+00:00</created-at>
      <creator-id type="integer">8303</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6301</number>
      <permalink>no-uninitialized-constant-thrown-when-referencing-ar-class</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;arel rails3&quot; constant</tag>
      <title>No 'uninitialized constant' thrown when referencing AR class</title>
      <updated-at type="datetime">2011-02-17T08:51:41+00:00</updated-at>
      <user-id type="integer">51351</user-id>
      <version type="integer">3</version>
      <user-name>Erik van Eykelen</user-name>
      <creator-name>Erik van Eykelen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6301</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
