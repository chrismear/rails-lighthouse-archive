From dbeb80c03da9954d4b79cc71662630670cd54260 Mon Sep 17 00:00:00 2001
From: Benjamin Quorning <beq@crd.dk>
Date: Fri, 9 Jul 2010 15:58:58 +0200
Subject: [PATCH] Fixed many references to the old config/environment.rb and Rails::Initializer [#5104 state:resolved]

---
 actionmailer/lib/action_mailer/base.rb             |    2 +-
 .../lib/action_controller/metal/mime_responds.rb   |    2 +-
 .../middleware/session/cookie_store.rb             |    2 +-
 .../lib/action_view/helpers/sanitize_helper.rb     |   28 ++++++++++----------
 .../connection_adapters/mysql_adapter.rb           |    2 +-
 activerecord/lib/active_record/migration.rb        |    2 +-
 activerecord/lib/active_record/observer.rb         |    2 +-
 activerecord/lib/active_record/session_store.rb    |    2 +-
 .../lib/active_support/values/time_zone.rb         |    6 ++--
 railties/lib/rails/generators/actions.rb           |    4 +-
 10 files changed, 26 insertions(+), 26 deletions(-)

diff --git a/actionmailer/lib/action_mailer/base.rb b/actionmailer/lib/action_mailer/base.rb
index ed4bea0..7f2ed5b 100644
--- a/actionmailer/lib/action_mailer/base.rb
+++ b/actionmailer/lib/action_mailer/base.rb
@@ -129,7 +129,7 @@ module ActionMailer #:nodoc:
   #
   #   ActionMailer::Base.default_url_options[:host] = "example.com"
   #
-  # This can also be set as a configuration option in <tt>config/environment.rb</tt>:
+  # This can also be set as a configuration option in <tt>config/application.rb</tt>:
   #
   #   config.action_mailer.default_url_options = { :host => "example.com" }
   #
diff --git a/actionpack/lib/action_controller/metal/mime_responds.rb b/actionpack/lib/action_controller/metal/mime_responds.rb
index 4f384d1..c12e579 100644
--- a/actionpack/lib/action_controller/metal/mime_responds.rb
+++ b/actionpack/lib/action_controller/metal/mime_responds.rb
@@ -145,7 +145,7 @@ module ActionController #:nodoc:
     # and accept Rails' defaults, life will be much easier.
     #
     # If you need to use a MIME type which isn't supported by default, you can register your own handlers in
-    # environment.rb as follows.
+    # config/initializers/mime_types.rb as follows.
     #
     #   Mime::Type.register "image/jpg", :jpg
     #
diff --git a/actionpack/lib/action_dispatch/middleware/session/cookie_store.rb b/actionpack/lib/action_dispatch/middleware/session/cookie_store.rb
index dce47c6..ca14944 100644
--- a/actionpack/lib/action_dispatch/middleware/session/cookie_store.rb
+++ b/actionpack/lib/action_dispatch/middleware/session/cookie_store.rb
@@ -35,7 +35,7 @@ module ActionDispatch
     #   such as 'MD5', 'RIPEMD160', 'SHA256', etc.
     #
     # To generate a secret key for an existing application, run
-    # "rake secret" and set the key in config/environment.rb.
+    # "rake secret" and set the key in config/initializers/secret_token.rb.
     #
     # Note that changing digest or secret invalidates all existing sessions!
     class CookieStore < AbstractStore
diff --git a/actionpack/lib/action_view/helpers/sanitize_helper.rb b/actionpack/lib/action_view/helpers/sanitize_helper.rb
index b47818a..63f6154 100644
--- a/actionpack/lib/action_view/helpers/sanitize_helper.rb
+++ b/actionpack/lib/action_view/helpers/sanitize_helper.rb
@@ -32,13 +32,13 @@ module ActionView
       #
       # Add table tags to the default allowed tags
       #
-      #   Rails::Initializer.run do |config|
+      #   class Application < Rails::Application
       #     config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td'
       #   end
       #
       # Remove tags to the default allowed tags
       #
-      #   Rails::Initializer.run do |config|
+      #   class Application < Rails::Application
       #     config.after_initialize do
       #       ActionView::Base.sanitized_allowed_tags.delete 'div'
       #     end
@@ -46,7 +46,7 @@ module ActionView
       #
       # Change allowed default attributes
       #
-      #   Rails::Initializer.run do |config|
+      #   class Application < Rails::Application
       #     config.action_view.sanitized_allowed_attributes = 'id', 'class', 'style'
       #   end
       #
@@ -143,7 +143,7 @@ module ActionView
         # Gets the HTML::FullSanitizer instance used by +strip_tags+.  Replace with
         # any object that responds to +sanitize+.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.full_sanitizer = MySpecialSanitizer.new
         #   end
         #
@@ -154,7 +154,7 @@ module ActionView
         # Gets the HTML::LinkSanitizer instance used by +strip_links+.  Replace with
         # any object that responds to +sanitize+.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.link_sanitizer = MySpecialSanitizer.new
         #   end
         #
@@ -165,7 +165,7 @@ module ActionView
         # Gets the HTML::WhiteListSanitizer instance used by sanitize and +sanitize_css+.
         # Replace with any object that responds to +sanitize+.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.white_list_sanitizer = MySpecialSanitizer.new
         #   end
         #
@@ -175,7 +175,7 @@ module ActionView
 
         # Adds valid HTML attributes that the +sanitize+ helper checks for URIs.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_uri_attributes = 'lowsrc', 'target'
         #   end
         #
@@ -185,7 +185,7 @@ module ActionView
 
         # Adds to the Set of 'bad' tags for the +sanitize+ helper.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_bad_tags = 'embed', 'object'
         #   end
         #
@@ -195,7 +195,7 @@ module ActionView
 
         # Adds to the Set of allowed tags for the +sanitize+ helper.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td'
         #   end
         #
@@ -205,7 +205,7 @@ module ActionView
 
         # Adds to the Set of allowed HTML attributes for the +sanitize+ helper.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_allowed_attributes = 'onclick', 'longdesc'
         #   end
         #
@@ -215,7 +215,7 @@ module ActionView
 
         # Adds to the Set of allowed CSS properties for the #sanitize and +sanitize_css+ helpers.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_allowed_css_properties = 'expression'
         #   end
         #
@@ -225,7 +225,7 @@ module ActionView
 
         # Adds to the Set of allowed CSS keywords for the +sanitize+ and +sanitize_css+ helpers.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_allowed_css_keywords = 'expression'
         #   end
         #
@@ -235,7 +235,7 @@ module ActionView
 
         # Adds to the Set of allowed shorthand CSS properties for the +sanitize+ and +sanitize_css+ helpers.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_shorthand_css_properties = 'expression'
         #   end
         #
@@ -245,7 +245,7 @@ module ActionView
 
         # Adds to the Set of allowed protocols for the +sanitize+ helper.
         #
-        #   Rails::Initializer.run do |config|
+        #   class Application < Rails::Application
         #     config.action_view.sanitized_allowed_protocols = 'ssh', 'feed'
         #   end
         #
diff --git a/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb b/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb
index aa3626a..b403443 100644
--- a/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb
+++ b/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb
@@ -125,7 +125,7 @@ module ActiveRecord
       # By default, the MysqlAdapter will consider all columns of type <tt>tinyint(1)</tt>
       # as boolean. If you wish to disable this emulation (which was the default
       # behavior in versions 0.13.1 and earlier) you can add the following line
-      # to your environment.rb file:
+      # to your application.rb file:
       #
       #   ActiveRecord::ConnectionAdapters::MysqlAdapter.emulate_booleans = false
       cattr_accessor :emulate_booleans
diff --git a/activerecord/lib/active_record/migration.rb b/activerecord/lib/active_record/migration.rb
index 4c5e1ae..5e272f0 100644
--- a/activerecord/lib/active_record/migration.rb
+++ b/activerecord/lib/active_record/migration.rb
@@ -284,7 +284,7 @@ module ActiveRecord
   #
   #    config.active_record.timestamped_migrations = false
   #
-  # In environment.rb.
+  # In application.rb.
   #
   class Migration
     @@verbose = true
diff --git a/activerecord/lib/active_record/observer.rb b/activerecord/lib/active_record/observer.rb
index d2ed643..ce002f5 100644
--- a/activerecord/lib/active_record/observer.rb
+++ b/activerecord/lib/active_record/observer.rb
@@ -68,7 +68,7 @@ module ActiveRecord
   # == Configuration
   #
   # In order to activate an observer, list it in the <tt>config.active_record.observers</tt> configuration setting in your
-  # <tt>config/environment.rb</tt> file.
+  # <tt>config/application.rb</tt> file.
   #
   #   config.active_record.observers = :comment_observer, :signup_observer
   #
diff --git a/activerecord/lib/active_record/session_store.rb b/activerecord/lib/active_record/session_store.rb
index b88d550..df2f429 100644
--- a/activerecord/lib/active_record/session_store.rb
+++ b/activerecord/lib/active_record/session_store.rb
@@ -16,7 +16,7 @@ module ActiveRecord
   # ActionController::SessionOverflowError will be raised.
   #
   # You may configure the table name, primary key, and data column.
-  # For example, at the end of <tt>config/environment.rb</tt>:
+  # For example, at the end of <tt>config/application.rb</tt>:
   #
   #   ActiveRecord::SessionStore::Session.table_name = 'legacy_session_table'
   #   ActiveRecord::SessionStore::Session.primary_key = 'session_id'
diff --git a/activesupport/lib/active_support/values/time_zone.rb b/activesupport/lib/active_support/values/time_zone.rb
index 49dd8a1..abd585b 100644
--- a/activesupport/lib/active_support/values/time_zone.rb
+++ b/activesupport/lib/active_support/values/time_zone.rb
@@ -8,10 +8,10 @@ require 'active_support/core_ext/object/try'
 # * Lazily load TZInfo::Timezone instances only when they're needed.
 # * Create ActiveSupport::TimeWithZone instances via TimeZone's +local+, +parse+, +at+ and +now+ methods.
 #
-# If you set <tt>config.time_zone</tt> in the Rails Initializer, you can access this TimeZone object via <tt>Time.zone</tt>:
+# If you set <tt>config.time_zone</tt> in the Rails Application, you can access this TimeZone object via <tt>Time.zone</tt>:
 #
-#   # environment.rb:
-#   Rails::Initializer.run do |config|
+#   # application.rb:
+#   class Application < Rails::Application
 #     config.time_zone = "Eastern Time (US & Canada)"
 #   end
 #
diff --git a/railties/lib/rails/generators/actions.rb b/railties/lib/rails/generators/actions.rb
index a27d38e..2280cc1 100644
--- a/railties/lib/rails/generators/actions.rb
+++ b/railties/lib/rails/generators/actions.rb
@@ -40,7 +40,7 @@ module Rails
         end
       end
 
-      # Adds an entry into config/environment.rb for the supplied gem. If env
+      # Adds an entry into Gemfile for the supplied gem. If env
       # is specified, add the gem to the given environment.
       #
       # ==== Example
@@ -100,7 +100,7 @@ module Rails
         end
       end
 
-      # Adds a line inside the Initializer block for config/environment.rb.
+      # Adds a line inside the Application class for config/application.rb.
       #
       # If options :env is specified, the line is appended to the corresponding
       # file in config/environments.
-- 
1.7.1.1

