<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-19T09:28:19+00:00</created-at>
  <creator-id type="integer">70430</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">4361</number>
  <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>has_many_through_association patch tests unit</tag>
  <title>has_many through self join does not include table alias, so fails</title>
  <updated-at type="datetime">2011-02-19T09:28:19+00:00</updated-at>
  <user-id type="integer">70430</user-id>
  <version type="integer">31</version>
  <user-name>Joe Hannon</user-name>
  <creator-name>Joe Hannon</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Using Rails 2.3.5

I have a has_many :through association where there is only one table.  So the owner model, the through model, and the target model are all the same.  I've used STI (single table inheritance), but I don't think it's relevant as I'm pretty sure I could replicate the problem without STI as well.

The SQL query generated by a call to the through-association (Person.find(7).babydaddies) generates a SQL query which includes a self-join of the table to itself.  The generated query does not alias the tables, and so the self-join query fails.  Simply using table aliases in the SQL fixes the problem. 

Erroneous SQL, expected SQL, Schema, and model pasted below.

This query is broken:

@@@ sql
SELECT DISTINCT `people`.* FROM `people`  INNER JOIN `people` ON `people`.id = `people`.father_id    WHERE ((`people`.mother_id = 7))
@@@

it should be something like:

@@@ sql
SELECT DISTINCT `dads`.* FROM `people` AS `kids`  INNER JOIN `people` AS `dads` ON `dads`.id = `kids`.father_id    WHERE ((`kids`.mother_id = 7))
@@@


db/schema.rb:

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100410040453) do

  create_table &quot;people&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;sex&quot;
    t.integer  &quot;father_id&quot;
    t.integer  &quot;mother_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
@@@

app/models/person.rb:

@@@ ruby
class Person &lt; ActiveRecord::Base
  self.inheritance_column = &quot;sex&quot;
  
  belongs_to :father, :class_name =&gt; &quot;Person&quot;
  belongs_to :mother, :class_name =&gt; &quot;Person&quot;
end

class Male &lt; Person
  has_many :children, :class_name =&gt; &quot;Person&quot;, :foreign_key =&gt; :father_id
  has_many :babymommas, :through =&gt; :children, :source =&gt; :mother, :uniq =&gt; true
end

class Female &lt; Person
  has_many :children, :class_name =&gt; &quot;Person&quot;, :foreign_key =&gt; :mother_id
  has_many :babydaddies, :through =&gt; :children, :source =&gt; :father, :uniq =&gt; true
end
@@@</original-body>
  <latest-body>Using Rails 2.3.5

I have a has_many :through association where there is only one table.  So the owner model, the through model, and the target model are all the same.  I've used STI (single table inheritance), but I don't think it's relevant as I'm pretty sure I could replicate the problem without STI as well.

The SQL query generated by a call to the through-association (Person.find(7).babydaddies) generates a SQL query which includes a self-join of the table to itself.  The generated query does not alias the tables, and so the self-join query fails.  Simply using table aliases in the SQL fixes the problem. 

Erroneous SQL, expected SQL, Schema, and model pasted below.

This query is broken:

@@@ sql
SELECT DISTINCT `people`.* FROM `people`  INNER JOIN `people` ON `people`.id = `people`.father_id    WHERE ((`people`.mother_id = 7))
@@@

it should be something like:

@@@ sql
SELECT DISTINCT `dads`.* FROM `people` AS `kids`  INNER JOIN `people` AS `dads` ON `dads`.id = `kids`.father_id    WHERE ((`kids`.mother_id = 7))
@@@


db/schema.rb:

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100410040453) do

  create_table &quot;people&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;sex&quot;
    t.integer  &quot;father_id&quot;
    t.integer  &quot;mother_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
@@@

app/models/person.rb:

@@@ ruby
class Person &lt; ActiveRecord::Base
  self.inheritance_column = &quot;sex&quot;
  
  belongs_to :father, :class_name =&gt; &quot;Person&quot;
  belongs_to :mother, :class_name =&gt; &quot;Person&quot;
end

class Male &lt; Person
  has_many :children, :class_name =&gt; &quot;Person&quot;, :foreign_key =&gt; :father_id
  has_many :babymommas, :through =&gt; :children, :source =&gt; :mother, :uniq =&gt; true
end

class Female &lt; Person
  has_many :children, :class_name =&gt; &quot;Person&quot;, :foreign_key =&gt; :mother_id
  has_many :babydaddies, :through =&gt; :children, :source =&gt; :father, :uniq =&gt; true
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using Rails 2.3.5&lt;/p&gt;
&lt;p&gt;I have a has_many :through association where there is only one
table. So the owner model, the through model, and the target model
are all the same. I've used STI (single table inheritance), but I
don't think it's relevant as I'm pretty sure I could replicate the
problem without STI as well.&lt;/p&gt;
&lt;p&gt;The SQL query generated by a call to the through-association
(Person.find(7).babydaddies) generates a SQL query which includes a
self-join of the table to itself. The generated query does not
alias the tables, and so the self-join query fails. Simply using
table aliases in the SQL fixes the problem.&lt;/p&gt;
&lt;p&gt;Erroneous SQL, expected SQL, Schema, and model pasted below.&lt;/p&gt;
&lt;p&gt;This query is broken:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT `people`.* FROM `people`  INNER JOIN `people` ON `people`.id = `people`.father_id    WHERE ((`people`.mother_id = 7))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;it should be something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT `dads`.* FROM `people` AS `kids`  INNER JOIN `people` AS `dads` ON `dads`.id = `kids`.father_id    WHERE ((`kids`.mother_id = 7))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;db/schema.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100410040453) do

  create_table &quot;people&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;sex&quot;
    t.integer  &quot;father_id&quot;
    t.integer  &quot;mother_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;app/models/person.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base
  self.inheritance_column = &quot;sex&quot;
  
  belongs_to :father, :class_name =&amp;gt; &quot;Person&quot;
  belongs_to :mother, :class_name =&amp;gt; &quot;Person&quot;
end

class Male &amp;lt; Person
  has_many :children, :class_name =&amp;gt; &quot;Person&quot;, :foreign_key =&amp;gt; :father_id
  has_many :babymommas, :through =&amp;gt; :children, :source =&amp;gt; :mother, :uniq =&amp;gt; true
end

class Female &amp;lt; Person
  has_many :children, :class_name =&amp;gt; &quot;Person&quot;, :foreign_key =&amp;gt; :mother_id
  has_many :babydaddies, :through =&amp;gt; :children, :source =&amp;gt; :father, :uniq =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using Rails 2.3.5

I have a has_many :through association where there is only one table.  So the owner model, the through model, and the target model are all the same.  I've used STI (single table inheritance), but I don't think it's relevant as I'm pretty sure I could replicate the problem without STI as well.

The SQL query generated by a call to the through-association (Person.find(7).babydaddies) generates a SQL query which includes a self-join of the table to itself.  The generated query does not alias the tables, and so the self-join query fails.  Simply using table aliases in the SQL fixes the problem. 

Erroneous SQL, expected SQL, Schema, and model pasted below.

This query is broken:

@@@ sql
SELECT DISTINCT `people`.* FROM `people`  INNER JOIN `people` ON `people`.id = `people`.father_id    WHERE ((`people`.mother_id = 7))
@@@

it should be something like:

@@@ sql
SELECT DISTINCT `dads`.* FROM `people` AS `kids`  INNER JOIN `people` AS `dads` ON `dads`.id = `kids`.father_id    WHERE ((`kids`.mother_id = 7))
@@@


db/schema.rb:

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100410040453) do

  create_table &quot;people&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;sex&quot;
    t.integer  &quot;father_id&quot;
    t.integer  &quot;mother_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
@@@

app/models/person.rb:

@@@ ruby
class Person &lt; ActiveRecord::Base
  self.inheritance_column = &quot;sex&quot;
  
  belongs_to :father, :class_name =&gt; &quot;Person&quot;
  belongs_to :mother, :class_name =&gt; &quot;Person&quot;
end

class Male &lt; Person
  has_many :children, :class_name =&gt; &quot;Person&quot;, :foreign_key =&gt; :father_id
  has_many :babymommas, :through =&gt; :children, :source =&gt; :mother, :uniq =&gt; true
end

class Female &lt; Person
  has_many :children, :class_name =&gt; &quot;Person&quot;, :foreign_key =&gt; :mother_id
  has_many :babydaddies, :through =&gt; :children, :source =&gt; :father, :uniq =&gt; true
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using Rails 2.3.5&lt;/p&gt;
&lt;p&gt;I have a has_many :through association where there is only one
table. So the owner model, the through model, and the target model
are all the same. I've used STI (single table inheritance), but I
don't think it's relevant as I'm pretty sure I could replicate the
problem without STI as well.&lt;/p&gt;
&lt;p&gt;The SQL query generated by a call to the through-association
(Person.find(7).babydaddies) generates a SQL query which includes a
self-join of the table to itself. The generated query does not
alias the tables, and so the self-join query fails. Simply using
table aliases in the SQL fixes the problem.&lt;/p&gt;
&lt;p&gt;Erroneous SQL, expected SQL, Schema, and model pasted below.&lt;/p&gt;
&lt;p&gt;This query is broken:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT `people`.* FROM `people`  INNER JOIN `people` ON `people`.id = `people`.father_id    WHERE ((`people`.mother_id = 7))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;it should be something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT DISTINCT `dads`.* FROM `people` AS `kids`  INNER JOIN `people` AS `dads` ON `dads`.id = `kids`.father_id    WHERE ((`kids`.mother_id = 7))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;db/schema.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100410040453) do

  create_table &quot;people&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;sex&quot;
    t.integer  &quot;father_id&quot;
    t.integer  &quot;mother_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;app/models/person.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base
  self.inheritance_column = &quot;sex&quot;
  
  belongs_to :father, :class_name =&amp;gt; &quot;Person&quot;
  belongs_to :mother, :class_name =&amp;gt; &quot;Person&quot;
end

class Male &amp;lt; Person
  has_many :children, :class_name =&amp;gt; &quot;Person&quot;, :foreign_key =&amp;gt; :father_id
  has_many :babymommas, :through =&amp;gt; :children, :source =&amp;gt; :mother, :uniq =&amp;gt; true
end

class Female &amp;lt; Person
  has_many :children, :class_name =&amp;gt; &quot;Person&quot;, :foreign_key =&amp;gt; :mother_id
  has_many :babydaddies, :through =&amp;gt; :children, :source =&amp;gt; :father, :uniq =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T07:47:55+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-04-10T08:34:14+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">1</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think I found the offending line.  activerecord-2.3.5/lib/active_record/associations/has_many_through_association.rb, line 172, in HasManyThroughAssociation#construct_joins:

          &quot;INNER JOIN %s ON %s.%s = %s.%s %s #{@reflection.options[:joins]} #{custom_joins}&quot; % [


This hardcoded bit of SQL doesn't contain any table alias abilities.  Any suggestions how to fix?  I'm going to hard code an alias for now, just to get my app working:

          &quot;INNER JOIN %s as temporary_table_alias ON %s.%s = %s.%s %s #{@reflection.options[:joins]} #{custom_joins}&quot; % [</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think I found the offending line.
activerecord-2.3.5/lib/active_record/associations/has_many_through_association.rb,
line 172, in HasManyThroughAssociation#construct_joins:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      &quot;INNER JOIN %s ON %s.%s = %s.%s %s #{@reflection.options[:joins]} #{custom_joins}&quot; % [&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This hardcoded bit of SQL doesn't contain any table alias
abilities. Any suggestions how to fix? I'm going to hard code an
alias for now, just to get my app working:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      &quot;INNER JOIN %s as temporary_table_alias ON %s.%s = %s.%s %s #{@reflection.options[:joins]} #{custom_joins}&quot; % [&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T08:34:02+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-04-10T08:34:03+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">2</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My naive hardcoded sql didn't work.  :-(</body>
      <body-html>&lt;div&gt;&lt;p&gt;My naive hardcoded sql didn't work. :-(&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T08:34:53+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-04-10T08:34:56+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">3</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's a simpler schema with no STI:

db/schema.rb:

ActiveRecord::Schema.define(:version =&gt; 20100426070714) do

  create_table &quot;employees&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;boss_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end

test/fixtures/employees.yml:

alice:
  name: CEO alice

bob:
  name: CTO bob
  boss_id: &lt;%= Fixtures.identify(:alice) %&gt;

charlie:
  name: junior exec charlie
  boss_id: &lt;%= Fixtures.identify(:bob) %&gt;


satellite.rb:

class Employee &lt; ActiveRecord::Base
  belongs_to :boss, :class_name =&gt; &quot;Employee&quot;
  has_many :reports, :class_name =&gt; &quot;Employee&quot;, :foreign_key =&gt; &quot;boss_id&quot;
  has_many :reports_of_reports, :through =&gt; :reports, :source =&gt; :boss
end

and test/unit/employee_test.rb:

require 'test_helper'

class EmployeeTest &lt; ActiveSupport::TestCase
  def test_reports
    alice = Employee.find(:first,:conditions =&gt; &quot;name = 'CEO alice'&quot;)
    expecting = [&quot;CTO bob&quot;]
    assert alice.reports.map {|e| e.name} == expecting, 
    &quot;alice's reports are #{alice.reports.map {|e| e.name}}, expected #{expecting}&quot;
  end
  
  def test_reports_of_reports
    alice = Employee.find(:first,:conditions =&gt; &quot;name = 'CEO alice'&quot;)
    expecting = [&quot;junior exec charlie&quot;]
    assert alice.reports_of_reports.map {|e| e.name} == [&quot;junior exec charlie&quot;],
    &quot;alice's reports' reports are #{alice.reports_of_reports.map {|e| e.name}}, expected #{expecting}&quot;
  end
end


test_reports passes, but test_reports_of_reports errors with:

  1) Error:
test_reports_of_reports(EmployeeTest):
ActiveRecord::StatementInvalid: Mysql::Error: Not unique table/alias: 'employees': SELECT `employees`.* FROM `employees`  INNER JOIN `employees` ON `employees`.id = `employees`.boss_id    WHERE ((`employees`.boss_id = 663665735))</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a simpler schema with no STI:&lt;/p&gt;
&lt;p&gt;db/schema.rb:&lt;/p&gt;
&lt;p&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100426070714)
do&lt;/p&gt;
&lt;p&gt;create_table &quot;employees&quot;, :force =&amp;gt; true do |t|&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;t.string   &quot;name&quot;
t.integer  &quot;boss_id&quot;
t.datetime &quot;created_at&quot;
t.datetime &quot;updated_at&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;test/fixtures/employees.yml:&lt;/p&gt;
&lt;p&gt;alice:&lt;br&gt;
name: CEO alice&lt;/p&gt;
&lt;p&gt;bob:&lt;br&gt;
name: CTO bob boss_id: &amp;lt;%= Fixtures.identify(:alice) %&amp;gt;&lt;/p&gt;
&lt;p&gt;charlie:&lt;br&gt;
name: junior exec charlie boss_id: &amp;lt;%= Fixtures.identify(:bob)
%&amp;gt;&lt;/p&gt;
&lt;p&gt;satellite.rb:&lt;/p&gt;
&lt;p&gt;class Employee &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :boss, :class_name =&amp;gt; &quot;Employee&quot; has_many :reports,
:class_name =&amp;gt; &quot;Employee&quot;, :foreign_key =&amp;gt; &quot;boss_id&quot; has_many
:reports_of_reports, :through =&amp;gt; :reports, :source =&amp;gt; :boss
end&lt;/p&gt;
&lt;p&gt;and test/unit/employee_test.rb:&lt;/p&gt;
&lt;p&gt;require 'test_helper'&lt;/p&gt;
&lt;p&gt;class EmployeeTest &amp;lt; ActiveSupport::TestCase&lt;br&gt;
def test_reports&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;alice = Employee.find(:first,:conditions =&amp;gt; &quot;name = 'CEO alice'&quot;)
expecting = [&quot;CTO bob&quot;]
assert alice.reports.map {|e| e.name} == expecting, 
&quot;alice's reports are #{alice.reports.map {|e| e.name}}, expected #{expecting}&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def test_reports_of_reports&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;alice = Employee.find(:first,:conditions =&amp;gt; &quot;name = 'CEO alice'&quot;)
expecting = [&quot;junior exec charlie&quot;]
assert alice.reports_of_reports.map {|e| e.name} == [&quot;junior exec charlie&quot;],
&quot;alice's reports' reports are #{alice.reports_of_reports.map {|e| e.name}}, expected #{expecting}&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;test_reports passes, but test_reports_of_reports errors
with:&lt;/p&gt;
&lt;p&gt;1) Error: test_reports_of_reports(EmployeeTest):&lt;br&gt;
ActiveRecord::StatementInvalid: Mysql::Error: Not unique
table/alias: 'employees': SELECT &lt;code&gt;employees&lt;/code&gt;.* FROM
&lt;code&gt;employees&lt;/code&gt; INNER JOIN &lt;code&gt;employees&lt;/code&gt; ON
&lt;code&gt;employees&lt;/code&gt;.id = &lt;code&gt;employees&lt;/code&gt;.boss_id WHERE
((&lt;code&gt;employees&lt;/code&gt;.boss_id = 663665735))&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-26T16:50:10+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-04-26T16:50:12+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">4</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Let's try that again with formatting

Here's a simpler schema with no STI:
db/schema.rb:

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100426070714) do

  create_table &quot;employees&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;boss_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
@@@

test/fixtures/employees.yml:
@@@ yaml
alice:
  name: CEO alice

bob:
  name: CTO bob
  boss_id: &lt;%= Fixtures.identify(:alice) %&gt;

charlie:
  name: junior exec charlie
  boss_id: &lt;%= Fixtures.identify(:bob) %&gt;
@@@

satellite.rb:
@@@ ruby
class Employee &lt; ActiveRecord::Base
  belongs_to :boss, :class_name =&gt; &quot;Employee&quot;
  has_many :reports, :class_name =&gt; &quot;Employee&quot;, :foreign_key =&gt; &quot;boss_id&quot;
  has_many :reports_of_reports, :through =&gt; :reports, :source =&gt; :boss
end
@@@

and test/unit/employee_test.rb:

@@@ ruby
require 'test_helper'

class EmployeeTest &lt; ActiveSupport::TestCase
  def test_reports
    alice = Employee.find(:first,:conditions =&gt; &quot;name = 'CEO alice'&quot;)
    expecting = [&quot;CTO bob&quot;]
    assert alice.reports.map {|e| e.name} == expecting, 
    &quot;alice's reports are #{alice.reports.map {|e| e.name}}, expected #{expecting}&quot;
  end
  
  def test_reports_of_reports
    alice = Employee.find(:first,:conditions =&gt; &quot;name = 'CEO alice'&quot;)
    expecting = [&quot;junior exec charlie&quot;]
    assert alice.reports_of_reports.map {|e| e.name} == [&quot;junior exec charlie&quot;],
    &quot;alice's reports' reports are #{alice.reports_of_reports.map {|e| e.name}}, expected #{expecting}&quot;
  end
end

@@@

test_reports passes, but test_reports_of_reports errors with:
 1) Error: test_reports_of_reports(EmployeeTest):
 ActiveRecord::StatementInvalid: Mysql::Error: Not unique table/alias: 'employees': SELECT employees.* FROM employees INNER JOIN employees ON employees.id = employees.boss_id WHERE ((employees.boss_id = 663665735))</body>
      <body-html>&lt;div&gt;&lt;p&gt;Let's try that again with formatting&lt;/p&gt;
&lt;p&gt;Here's a simpler schema with no STI:&lt;br&gt;
db/schema.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100426070714) do

  create_table &quot;employees&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;boss_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;test/fixtures/employees.yml:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;yaml&quot;&gt;alice:
  name: CEO alice&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
bob:
  name: CTO bob
  boss_id: &amp;lt;%= Fixtures.identify(:alice) %&amp;gt;&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
charlie:
  name: junior exec charlie
  boss_id: &amp;lt;%= Fixtures.identify(:bob) %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;satellite.rb:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Employee &amp;lt; ActiveRecord::Base
  belongs_to :boss, :class_name =&amp;gt; &quot;Employee&quot;
  has_many :reports, :class_name =&amp;gt; &quot;Employee&quot;, :foreign_key =&amp;gt; &quot;boss_id&quot;
  has_many :reports_of_reports, :through =&amp;gt; :reports, :source =&amp;gt; :boss
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and test/unit/employee_test.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'test_helper'

class EmployeeTest &amp;lt; ActiveSupport::TestCase
  def test_reports
    alice = Employee.find(:first,:conditions =&amp;gt; &quot;name = 'CEO alice'&quot;)
    expecting = [&quot;CTO bob&quot;]
    assert alice.reports.map {|e| e.name} == expecting, 
    &quot;alice's reports are #{alice.reports.map {|e| e.name}}, expected #{expecting}&quot;
  end
  
  def test_reports_of_reports
    alice = Employee.find(:first,:conditions =&amp;gt; &quot;name = 'CEO alice'&quot;)
    expecting = [&quot;junior exec charlie&quot;]
    assert alice.reports_of_reports.map {|e| e.name} == [&quot;junior exec charlie&quot;],
    &quot;alice's reports' reports are #{alice.reports_of_reports.map {|e| e.name}}, expected #{expecting}&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;test_reports passes, but test_reports_of_reports errors
with:&lt;br&gt;
1) Error: test_reports_of_reports(EmployeeTest):
ActiveRecord::StatementInvalid: Mysql::Error: Not unique
table/alias: 'employees': SELECT employees.* FROM employees INNER
JOIN employees ON employees.id = employees.boss_id WHERE
((employees.boss_id = 663665735))&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-26T16:55:00+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-04-26T16:55:01+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">5</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've attached a patch which adds a unit test to rails/activerecord/test/cases/associations/has_many_through_associations_test.rb:

@@@ ruby
  def test_has_many_association_through_a_has_many_association_to_self
    sarah = Person.create!(:first_name =&gt; 'Sarah', :primary_contact_id =&gt; people(:susan).id, :gender =&gt; 'F', :number1_fan_id =&gt; 1)
    john = Person.create!(:first_name =&gt; 'John', :primary_contact_id =&gt; sarah.id, :gender =&gt; 'M', :number1_fan_id =&gt; 1)
    assert_equal sarah.agents, [people(:john)]
    assert_equal people(:susan).agents_of_agents, [people(:john)]
  end
@@@

and rails/activerecord/test/models/person.rb:

@@@ ruby
  has_many :agents_of_agents, :through =&gt; :agents, :source =&gt; :primary_contact
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've attached a patch which adds a unit test to
rails/activerecord/test/cases/associations/has_many_through_associations_test.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  def test_has_many_association_through_a_has_many_association_to_self
    sarah = Person.create!(:first_name =&amp;gt; 'Sarah', :primary_contact_id =&amp;gt; people(:susan).id, :gender =&amp;gt; 'F', :number1_fan_id =&amp;gt; 1)
    john = Person.create!(:first_name =&amp;gt; 'John', :primary_contact_id =&amp;gt; sarah.id, :gender =&amp;gt; 'M', :number1_fan_id =&amp;gt; 1)
    assert_equal sarah.agents, [people(:john)]
    assert_equal people(:susan).agents_of_agents, [people(:john)]
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and rails/activerecord/test/models/person.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  has_many :agents_of_agents, :through =&amp;gt; :agents, :source =&amp;gt; :primary_contact&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-02T20:27:33+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-02T20:27:40+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">6</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>here's that patch for the unit test</body>
      <body-html>&lt;div&gt;&lt;p&gt;here's that patch for the unit test&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-03T00:27:55+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-03T00:27:59+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">7</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This but is present in rails 2.3.5 as well as edge (3.0.0beta3)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This but is present in rails 2.3.5 as well as edge
(3.0.0beta3)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-03T18:00:20+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-03T18:00:23+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">8</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Rather, this *bug* is present in rails 2.3.5 as well as edge (3.0.0beta3)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rather, this &lt;em&gt;bug&lt;/em&gt; is present in rails 2.3.5 as well as
edge (3.0.0beta3)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-03T18:00:37+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-03T18:00:39+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">9</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Give this patch a shot -- let me know if it does the trick.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Give this patch a shot -- let me know if it does the trick.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T01:50:30+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-04T01:50:39+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">10</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T03:30:13+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch unit
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-04T03:30:15+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">11</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Ernie's patch fixes the issue.  Has many through self joins are now working in the unit test, as well as my example schemata above.  Ernie's patch also fixes a couple mistakes in my unit test, which now passes with Ernie's patch.

I'm extremely grateful to Ernie for his patch; this bug was blocking me, and I wasn't making much headway trying to fix it myself.  Thanks, Ernie!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ernie's patch fixes the issue. Has many through self joins are
now working in the unit test, as well as my example schemata above.
Ernie's patch also fixes a couple mistakes in my unit test, which
now passes with Ernie's patch.&lt;/p&gt;
&lt;p&gt;I'm extremely grateful to Ernie for his patch; this bug was
blocking me, and I wasn't making much headway trying to fix it
myself. Thanks, Ernie!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T16:59:05+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-04T16:59:07+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">12</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1 is what I'm trying to say</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 is what I'm trying to say&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T17:05:40+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-05-04T17:05:42+01:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">13</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1 for fixing this ASAP.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for fixing this ASAP.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T22:22:47+01:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-06-23T22:22:51+01:00</updated-at>
      <user-id type="integer">71852</user-id>
      <version type="integer">14</version>
      <user-name>felipekk</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This patch has been around for too long and needs accepting. Applies fine to master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch has been around for too long and needs accepting.
Applies fine to master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-11T23:49:52+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-11T23:50:01+00:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">15</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-12T19:47:10+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-12T19:47:24+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">16</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I've been making lots of changes to the associations in master so I ported this patch to master.

The patch doesn't apply cleanly to 3-0-stable, so I tried porting it, but the tests fail.  If someone makes sure this applies cleanly and the tests pass on 3-0-stable, I'll apply there.

I'm marking this resolved for 3.1.  If someone ports the patch, please create a new ticket for 3.0.4 and assign to me.  Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've been making lots of changes to the associations in master
so I ported this patch to master.&lt;/p&gt;
&lt;p&gt;The patch doesn't apply cleanly to 3-0-stable, so I tried
porting it, but the tests fail. If someone makes sure this applies
cleanly and the tests pass on 3-0-stable, I'll apply there.&lt;/p&gt;
&lt;p&gt;I'm marking this resolved for 3.1. If someone ports the patch,
please create a new ticket for 3.0.4 and assign to me. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-15T00:33:50+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
:milestone: 92071
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T00:34:03+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">17</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [00c893d3b86be3a141c21ed065e085adbb26062a]) add test which fails for has_many through self join [#4361 state:open]
https://github.com/rails/rails/commit/00c893d3b86be3a141c21ed065e085adbb26062a</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/00c893d3b86be3a141c21ed065e085adbb26062a&quot;
title=
&quot;Changeset [00c893d3b86be3a141c21ed065e085adbb26062a]&quot;&gt;[00c893d3b86be3a141c21ed065e085adbb26062a]&lt;/a&gt;)
add test which fails for has_many through self join [&lt;a href=
&quot;/projects/8994/tickets/4361&quot; title=&quot;Ticket #4361&quot;&gt;#4361&lt;/a&gt;
state:open] &lt;a href=
&quot;https://github.com/rails/rails/commit/00c893d3b86be3a141c21ed065e085adbb26062a&quot;&gt;
https://github.com/rails/rails/commit/00c893d3b86be3a141c21ed065e08...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T00:34:32+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T00:34:45+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">18</version>
      <user-name>Repository</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Aaron, my original unit test had a mistake in it, so it will fail. Ernie's patch includes the table aliasing fix, but also includes a fix for my unit test. Did you also include ernie's patch?

I found the patch to apply cleanly a few days ago to both 3.0.3 and HEAD. I guess I will look again to make sure.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Aaron, my original unit test had a mistake in it, so it will
fail. Ernie's patch includes the table aliasing fix, but also
includes a fix for my unit test. Did you also include ernie's
patch?&lt;/p&gt;
&lt;p&gt;I found the patch to apply cleanly a few days ago to both 3.0.3
and HEAD. I guess I will look again to make sure.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T00:58:45+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T00:59:01+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">19</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Joe Yes I applied both patches.  Make sure it works against 3-0-stable please.  Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Joe Yes I applied both patches. Make sure it works against
3-0-stable please. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T01:01:18+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T01:01:30+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">20</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Aaron Oh yes, I see your commit now, including Ernie's patch.

Anyway, I'm not sure what you mean about it not applying cleanly. I've tried it on 3-0-stable and the patch applies cleanly, and the unit test passes for me. Am I looking at the wrong version? Commit 9254750223f1ff65a3dd70f3e0eefbf0f40f02c6?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Aaron Oh yes, I see your commit now, including Ernie's
patch.&lt;/p&gt;
&lt;p&gt;Anyway, I'm not sure what you mean about it not applying
cleanly. I've tried it on 3-0-stable and the patch applies cleanly,
and the unit test passes for me. Am I looking at the wrong version?
Commit 9254750223f1ff65a3dd70f3e0eefbf0f40f02c6?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T06:16:18+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T06:16:31+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">21</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Joe Here is a video of what happens when I try to apply Ernie's patch:

  http://www.youtube.com/watch?v=aVegs3Uc5U0

I think I'm applying the right thing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Joe Here is a video of what happens when I try to apply Ernie's
patch:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://www.youtube.com/watch?v=aVegs3Uc5U0&quot;&gt;http://www.youtube.com/watch?v=aVegs3Uc5U0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I think I'm applying the right thing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T06:51:22+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T06:51:35+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">22</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Aaron Yeah, it looks like you're applying the right patch. Am *I* applying the patch to the right codebase?

Here's what I'm doing (sorry, no music):

git clone https://github.com/rails/rails.git rails_30stable
cd rails_30stable
git checkout origin/3-0-stable -b 3-0-stable  #Switched to a new branch '3-0-stable'
patch -p1 &lt; ../../../hmt_self_join_alias.diff


patching file activerecord/test/cases/associations/has_many_through_associations_test.rb
Hunk #1 succeeded at 456 with fuzz 2 (offset 73 lines).
patching file activerecord/test/models/person.rb
Hunk #1 succeeded at 12 (offset 2 lines).
patching file activerecord/lib/active_record/associations/through_association_scope.rb
Hunk #1 succeeded at 16 (offset 1 line).
Hunk #2 succeeded at 62 (offset 1 line).
Hunk #3 succeeded at 77 (offset 1 line).
patching file activerecord/test/cases/associations/has_many_through_associations_test.rb
Hunk #1 succeeded at 460 (offset 73 lines).
patching file activerecord/test/models/person.rb
Hunk #1 succeeded at 12 (offset 2 lines).


Maybe I'm not using git correctly to get the 3-0-stable branch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Aaron Yeah, it looks like you're applying the right patch. Am
&lt;em&gt;I&lt;/em&gt; applying the patch to the right codebase?&lt;/p&gt;
&lt;p&gt;Here's what I'm doing (sorry, no music):&lt;/p&gt;
&lt;p&gt;git clone &lt;a href=
&quot;https://github.com/rails/rails.git&quot;&gt;https://github.com/rails/rails.git&lt;/a&gt;
rails_30stable&lt;br&gt;
cd rails_30stable&lt;br&gt;
git checkout origin/3-0-stable -b 3-0-stable #Switched to a new
branch '3-0-stable'&lt;br&gt;
patch -p1 &amp;lt; ../../../hmt_self_join_alias.diff&lt;/p&gt;
&lt;p&gt;patching file
activerecord/test/cases/associations/has_many_through_associations_test.rb&lt;br&gt;
Hunk &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt;
succeeded at 456 with fuzz 2 (offset 73 lines).&lt;br&gt;
patching file activerecord/test/models/person.rb&lt;br&gt;
Hunk &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt;
succeeded at 12 (offset 2 lines).&lt;br&gt;
patching file
activerecord/lib/active_record/associations/through_association_scope.rb&lt;br&gt;
Hunk &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt;
succeeded at 16 (offset 1 line).&lt;br&gt;
Hunk &lt;a href=&quot;/projects/8994/tickets/2&quot; title=&quot;Ticket #2&quot;&gt;#2&lt;/a&gt;
succeeded at 62 (offset 1 line).&lt;br&gt;
Hunk &lt;a href=&quot;/projects/8994/tickets/3&quot; title=&quot;Ticket #3&quot;&gt;#3&lt;/a&gt;
succeeded at 77 (offset 1 line).&lt;br&gt;
patching file
activerecord/test/cases/associations/has_many_through_associations_test.rb&lt;br&gt;
Hunk &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt;
succeeded at 460 (offset 73 lines).&lt;br&gt;
patching file activerecord/test/models/person.rb&lt;br&gt;
Hunk &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt;
succeeded at 12 (offset 2 lines).&lt;/p&gt;
&lt;p&gt;Maybe I'm not using git correctly to get the 3-0-stable
branch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T07:35:03+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T07:35:15+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">23</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm not too sure of my git usage, so I tried directly downloading from github. Still works fine for me. See screengrab:

http://twitpic.com/3g2uf2</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not too sure of my git usage, so I tried directly
downloading from github. Still works fine for me. See
screengrab:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://twitpic.com/3g2uf2&quot;&gt;http://twitpic.com/3g2uf2&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T07:41:45+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T07:41:59+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">24</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>O HAI LIGHTHOUSE!

Do I need to update this patch, then? I honestly don't remember even creating it, and after reading the patch I put together have deduced that I did it in some sort of haze induced by reading Rails association code.

Aaron, your comment &quot;I've been making lots of changes to the associations in master so I ported this patch to master&quot; evokes a simultaneous sense of pity and awe. /salute, good sir.</body>
      <body-html>&lt;div&gt;&lt;p&gt;O HAI LIGHTHOUSE!&lt;/p&gt;
&lt;p&gt;Do I need to update this patch, then? I honestly don't remember
even creating it, and after reading the patch I put together have
deduced that I did it in some sort of haze induced by reading Rails
association code.&lt;/p&gt;
&lt;p&gt;Aaron, your comment &quot;I've been making lots of changes to the
associations in master so I ported this patch to master&quot; evokes a
simultaneous sense of pity and awe. /salute, good sir.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T14:19:59+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T14:20:11+00:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">25</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Joe Yes, I can use `patch`, but then the commit history will have my name.  I'd prefer to keep the credit where credit is due.  I'd like to use `git am` to apply the patch so that everyone gets proper credit.  Can you make this patch work with `git am`?  You should be able to just use the patch command like you're doing, but also [follow the contributor guidelines](https://rails.lighthouseapp.com/projects/8994/sending-patches) once you've made sure everything works locally.

@Ernie Together, we can clean this code up so that people don't feel like scooping their eyes out with a spoon while reading it!

On master, I'm trying to get the association code to generate SQL AST nodes rather than build strings.  This should give us speed increases as there will be fewer calls to the AR connection.  The other benefit is that we might be able to clean this code up more easily.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Joe Yes, I can use &lt;code&gt;patch&lt;/code&gt;, but then the commit
history will have my name. I'd prefer to keep the credit where
credit is due. I'd like to use &lt;code&gt;git am&lt;/code&gt; to apply the
patch so that everyone gets proper credit. Can you make this patch
work with &lt;code&gt;git am&lt;/code&gt;? You should be able to just use the
patch command like you're doing, but also &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;follow
the contributor guidelines&lt;/a&gt; once you've made sure everything
works locally.&lt;/p&gt;
&lt;p&gt;@Ernie Together, we can clean this code up so that people don't
feel like scooping their eyes out with a spoon while reading
it!&lt;/p&gt;
&lt;p&gt;On master, I'm trying to get the association code to generate
SQL AST nodes rather than build strings. This should give us speed
increases as there will be fewer calls to the AR connection. The
other benefit is that we might be able to clean this code up more
easily.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T16:45:25+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T16:45:38+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">26</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Aaron That'd be a huge win. The association code feels like one of the last bastions of String-y filth in ActiveRecord. It must be exterminated.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Aaron That'd be a huge win. The association code feels like one
of the last bastions of String-y filth in ActiveRecord. It must be
exterminated.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T16:49:23+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-15T16:49:35+00:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">27</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Ok Aaron. I think I've fixed the patch to work on 3-0-stable. The merge conflict was trivial (the patch file was expecting the method above HasManyThroughAssociationsTest#test_has_many_association_through_a_has_many_association_to_self to be the last method in the class, which is no longer the case), but it took me some screwing around to figure out how to make git do what I wanted, so please sanity check the new commit file. But I've applied it cleanly to a new checkout using git-am, and I think it looks correct, preserves commit attributions, etc.

See attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok Aaron. I think I've fixed the patch to work on 3-0-stable.
The merge conflict was trivial (the patch file was expecting the
method above
HasManyThroughAssociationsTest#test_has_many_association_through_a_has_many_association_to_self
to be the last method in the class, which is no longer the case),
but it took me some screwing around to figure out how to make git
do what I wanted, so please sanity check the new commit file. But
I've applied it cleanly to a new checkout using git-am, and I think
it looks correct, preserves commit attributions, etc.&lt;/p&gt;
&lt;p&gt;See attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-18T01:48:30+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-18T01:48:44+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">28</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Attachment hmt_self_join_alias_30stable_safe.diff</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attachment hmt_self_join_alias_30stable_safe.diff&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-18T01:50:37+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-18T01:50:56+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">29</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>PS is it weird that patch can apply the diff cleanly, but git-am cannot?</body>
      <body-html>&lt;div&gt;&lt;p&gt;PS is it weird that patch can apply the diff cleanly, but git-am
cannot?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-18T02:00:18+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-18T02:00:33+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">30</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I redid the new patch so that it puts the new method at the top of the conflict, instead of below it, so that it matches the commit you made to master. Probably git would be smart enough to merge it in even if the new method were in a different place, but just in case...

So disregard hmt_self_join_alias_30stable_safe.diff and use hmt_self_join_alias_30stable_safe2.diff instead.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I redid the new patch so that it puts the new method at the top
of the conflict, instead of below it, so that it matches the commit
you made to master. Probably git would be smart enough to merge it
in even if the new method were in a different place, but just in
case...&lt;/p&gt;
&lt;p&gt;So disregard hmt_self_join_alias_30stable_safe.diff and use
hmt_self_join_alias_30stable_safe2.diff instead.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-18T05:22:55+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2010-12-18T05:23:11+00:00</updated-at>
      <user-id type="integer">70430</user-id>
      <version type="integer">31</version>
      <user-name>Joe Hannon</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>thank you very much......&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/&quot;&gt;&#1605;&#1606;&#1578;&#1583;&#1610;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&#1605;&#1603;&#1610;&#1575;&#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1575;&#1586;&#1610;&#1575;&#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1601;&#1587;&#1575;&#1578;&#1610;&#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&#1585;&#1587;&#1575;&#1574;&#1604; 
- &#1605;&#1587;&#1580;&#1575;&#1578; - &#1608;&#1587;&#1575;&#1574;&#1591;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&#1578;&#1608;&#1576;&#1610;&#1603;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&#1608;&#1592;&#1575;&#1574;&#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&#1576;&#1585;&#1608;&#1603;&#1587;&#1610;&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt; &lt;a href=&quot;http://forum.line-sport.tv/&quot;&gt;&#1604;&#1575;&#1610;&#1606; &#1587;&#1576;&#1608;&#1585;&#1578;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;thank you very much......&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/&quot;&gt;&amp;#1605;&amp;#1606;&amp;#1578;&amp;#1583;&amp;#1610;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&amp;#1605;&amp;#1603;&amp;#1610;&amp;#1575;&amp;#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1575;&amp;#1586;&amp;#1610;&amp;#1575;&amp;#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1601;&amp;#1587;&amp;#1575;&amp;#1578;&amp;#1610;&amp;#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&amp;#1585;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1604;&lt;br&gt;
- &amp;#1605;&amp;#1587;&amp;#1580;&amp;#1575;&amp;#1578; -
&amp;#1608;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1591;&lt;/a&gt;&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&amp;#1578;&amp;#1608;&amp;#1576;&amp;#1610;&amp;#1603;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&amp;#1608;&amp;#1592;&amp;#1575;&amp;#1574;&amp;#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt;
&lt;a href=
&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&amp;#1576;&amp;#1585;&amp;#1608;&amp;#1603;&amp;#1587;&amp;#1610;&lt;/a&gt;
&lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt; &lt;a href=
&quot;http://forum.line-sport.tv/&quot;&gt;&amp;#1604;&amp;#1575;&amp;#1610;&amp;#1606;
&amp;#1587;&amp;#1576;&amp;#1608;&amp;#1585;&amp;#1578;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-08T11:23:55+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2011-02-08T12:16:08+00:00</updated-at>
      <user-id type="integer">136126</user-id>
      <version type="integer">32</version>
      <user-name>alasiri1</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;you may use completely new Pandora summer &lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;pandora ireland&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;time time collection containing been brought out very simply of late. If you ever valuation magical platinum pandora necklaces, you ought to have a look at your&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/pandora-bracelets-c-3.html&quot;&gt;&lt;em&gt;Pandoras Bracelets&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt; Pandora Fruit juice Silver particular necklaces containing bought magnificent designs created outside of silver.&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/pandora-charms-c-9.html&quot;&gt;&lt;em&gt;Pandora&#160;Charms&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;Why have Pandora earrings Expensive jewelry develop into fury a short while ago.&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora jewellery ireland&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;pandora earrings should be area of every last gear&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora NZ&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;you
may use completely new Pandora summer &lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;pandora
ireland&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;time time collection containing been
brought out very simply of late. If you ever valuation magical
platinum pandora necklaces, you ought to have a look at
your&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/pandora-bracelets-c-3.html&quot;&gt;&lt;em&gt;Pandoras
Bracelets&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt; Pandora Fruit juice Silver particular
necklaces containing bought magnificent designs created outside of
silver.&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/pandora-charms-c-9.html&quot;&gt;&lt;em&gt;Pandora&amp;nbsp;Charms&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;Why
have Pandora earrings Expensive jewelry develop into fury a short
while ago.&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora jewellery
ireland&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;pandora earrings should be area of every
last gear&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora
NZ&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T05:40:52+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2011-02-14T07:28:35+00:00</updated-at>
      <user-id type="integer">136876</user-id>
      <version type="integer">33</version>
      <user-name>pandora jewellry</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T07:36:45+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2011-02-17T07:38:09+00:00</updated-at>
      <user-id type="integer">137451</user-id>
      <version type="integer">34</version>
      <user-name>fghgghjg</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T07:54:06+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2011-02-17T08:07:20+00:00</updated-at>
      <user-id type="integer">137453</user-id>
      <version type="integer">35</version>
      <user-name>gfhg</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-19T01:41:13+00:00</created-at>
      <creator-id type="integer">70430</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">4361</number>
      <permalink>has_many-through-self-join-does-not-include-table-alias-so-fails</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through_association patch tests unit</tag>
      <title>has_many through self join does not include table alias, so fails</title>
      <updated-at type="datetime">2011-02-19T09:28:19+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">36</version>
      <user-name>mklo</user-name>
      <creator-name>Joe Hannon</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4361</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>cc01a6459a02e4fb6f3a7c67d79f8acb66cc86ab</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-03T00:27:55+01:00</created-at>
      <filename>has_many_through_self.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">506868</id>
      <size type="integer">2117</size>
      <uploader-id type="integer">70430</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/506868/has_many_through_self.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d62a14b6686b43d0e34e884961515d30672e6357</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-04T01:50:30+01:00</created-at>
      <filename>hmt_self_join_alias.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">508386</id>
      <size type="integer">6768</size>
      <uploader-id type="integer">24325</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/508386/hmt_self_join_alias.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>aae822a51b067a91f5ca8b4f100ee8ec7c16d762</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-18T05:22:56+00:00</created-at>
      <filename>hmt_self_join_alias_30stable_safe2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">825973</id>
      <size type="integer">6858</size>
      <uploader-id type="integer">70430</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/825973/hmt_self_join_alias_30stable_safe2.diff</url>
    </attachment>
  </attachments>
</ticket>
