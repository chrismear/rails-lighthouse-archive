From eda8f8958933382318849de7e3ada0aa28aa66ff Mon Sep 17 00:00:00 2001
From: Alex Le <alexnhatle@yahoo.com>
Date: Fri, 30 Jul 2010 15:47:26 -0500
Subject: [PATCH] ActiveModel::Errors json serialization to work as Rail 3b4

---
 activemodel/lib/active_model/errors.rb             |    4 ++--
 .../serializeration/json_serialization_test.rb     |   16 +++++++++++++++-
 activemodel/test/cases/validations_test.rb         |    8 +++++---
 3 files changed, 22 insertions(+), 6 deletions(-)

diff --git a/activemodel/lib/active_model/errors.rb b/activemodel/lib/active_model/errors.rb
index bf93126..f39678d 100644
--- a/activemodel/lib/active_model/errors.rb
+++ b/activemodel/lib/active_model/errors.rb
@@ -169,9 +169,9 @@ module ActiveModel
       to_a.to_xml options.reverse_merge(:root => "errors", :skip_types => true)
     end
 
-    # Returns an array as JSON representation for this object.
+    # Returns an ActiveSupport::OrderedHash that can be used as the JSON representation for this object.
     def as_json(options=nil)
-      to_a
+      self 
     end
 
     # Adds +message+ to the error messages on +attribute+, which will be returned on a call to
diff --git a/activemodel/test/cases/serializeration/json_serialization_test.rb b/activemodel/test/cases/serializeration/json_serialization_test.rb
index 04b50e5..1ac991a 100644
--- a/activemodel/test/cases/serializeration/json_serialization_test.rb
+++ b/activemodel/test/cases/serializeration/json_serialization_test.rb
@@ -89,7 +89,7 @@ class JsonSerializationTest < ActiveModel::TestCase
     assert_match %r{"preferences":\{"shows":"anime"\}}, json
   end
 
-  test "methds are called on object" do
+  test "methods are called on object" do
     # Define methods on fixture.
     def @contact.label; "Has cheezburger"; end
     def @contact.favorite_quote; "Constraints are liberating"; end
@@ -102,4 +102,18 @@ class JsonSerializationTest < ActiveModel::TestCase
     assert_match %r{"label":"Has cheezburger"}, methods_json
     assert_match %r{"favorite_quote":"Constraints are liberating"}, methods_json
   end
+
+  test "should return OrderedHash for errors" do
+    car = Automobile.new
+    
+    # run the validation
+    car.valid? 
+    
+    hash = ActiveSupport::OrderedHash.new
+    hash[:make]  = "can't be blank"
+    hash[:model] = "is too short (minimum is 2 characters)"
+    assert_equal hash.to_json, car.errors.to_json
+  end
+  
+  
 end
diff --git a/activemodel/test/cases/validations_test.rb b/activemodel/test/cases/validations_test.rb
index e94d8ce..8d6bdeb 100644
--- a/activemodel/test/cases/validations_test.rb
+++ b/activemodel/test/cases/validations_test.rb
@@ -170,9 +170,11 @@ class ValidationsTest < ActiveModel::TestCase
     assert_match %r{<errors>}, xml
     assert_match %r{<error>Title can't be blank</error>}, xml
     assert_match %r{<error>Content can't be blank</error>}, xml
-
-    json = t.errors.to_json
-    assert_equal t.errors.to_a.to_json, json
+    
+    hash = ActiveSupport::OrderedHash.new
+    hash[:title] = "can't be blank"
+    hash[:content] = "can't be blank"
+    assert_equal t.errors.to_json, hash.to_json
   end
 
   def test_validation_order
-- 
1.7.0.6

