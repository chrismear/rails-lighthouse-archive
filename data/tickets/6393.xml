<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-09T06:10:35+00:00</created-at>
  <creator-id type="integer">19633</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6393</number>
  <permalink>action_dispatchhttprequestrb-missing-a-require</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>action_dispatch/http/request.rb missing a require</title>
  <updated-at type="datetime">2011-03-05T19:31:16+00:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">3</version>
  <user-name>Andrew White</user-name>
  <creator-name>Daniel Azuma</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6393</url>
  <priority-name>Low</priority-name>
  <original-body>@@@
% irb
&gt; require 'action_dispatch'
 =&gt; true 
&gt; ActionPack::VERSION::STRING
 =&gt; &quot;3.0.4&quot; 
&gt; ActionDispatch::Request
NoMethodError: undefined method `deprecate' for ActionDispatch::Request:Class
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:146:in `&lt;class:Request&gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:11:in `&lt;module:ActionDispatch&gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:10:in `&lt;top (required)&gt;'
        from (irb):3
&gt; 
@@@

The problem seems to be a missing

@@@
require 'active_support/core_ext/module/deprecation'
@@@

in action_dispatch/http/request.rb

This only really shows up if you load parts of the framework in an unusual order (e.g. the example code above). Most people won't run into it because the relevant ActiveSupport stuff will usually be loaded by other parts of the framework before ActionDispatch::Request gets referenced. However, I ran into it because I have some framework-extending code that loads ActionDispatch::Request in isolation, so I'm reporting this.

This first appeared in 3.0.4</original-body>
  <latest-body>@@@
% irb
&gt; require 'action_dispatch'
 =&gt; true 
&gt; ActionPack::VERSION::STRING
 =&gt; &quot;3.0.4&quot; 
&gt; ActionDispatch::Request
NoMethodError: undefined method `deprecate' for ActionDispatch::Request:Class
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:146:in `&lt;class:Request&gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:11:in `&lt;module:ActionDispatch&gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:10:in `&lt;top (required)&gt;'
        from (irb):3
&gt; 
@@@

The problem seems to be a missing

@@@
require 'active_support/core_ext/module/deprecation'
@@@

in action_dispatch/http/request.rb

This only really shows up if you load parts of the framework in an unusual order (e.g. the example code above). Most people won't run into it because the relevant ActiveSupport stuff will usually be loaded by other parts of the framework before ActionDispatch::Request gets referenced. However, I ran into it because I have some framework-extending code that loads ActionDispatch::Request in isolation, so I'm reporting this.

This first appeared in 3.0.4</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;% irb
&amp;gt; require 'action_dispatch'
 =&amp;gt; true 
&amp;gt; ActionPack::VERSION::STRING
 =&amp;gt; &quot;3.0.4&quot; 
&amp;gt; ActionDispatch::Request
NoMethodError: undefined method `deprecate' for ActionDispatch::Request:Class
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:146:in `&amp;lt;class:Request&amp;gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:11:in `&amp;lt;module:ActionDispatch&amp;gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:10:in `&amp;lt;top (required)&amp;gt;'
        from (irb):3
&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem seems to be a missing&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require 'active_support/core_ext/module/deprecation'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;in action_dispatch/http/request.rb&lt;/p&gt;
&lt;p&gt;This only really shows up if you load parts of the framework in
an unusual order (e.g. the example code above). Most people won't
run into it because the relevant ActiveSupport stuff will usually
be loaded by other parts of the framework before
ActionDispatch::Request gets referenced. However, I ran into it
because I have some framework-extending code that loads
ActionDispatch::Request in isolation, so I'm reporting this.&lt;/p&gt;
&lt;p&gt;This first appeared in 3.0.4&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
% irb
&gt; require 'action_dispatch'
 =&gt; true 
&gt; ActionPack::VERSION::STRING
 =&gt; &quot;3.0.4&quot; 
&gt; ActionDispatch::Request
NoMethodError: undefined method `deprecate' for ActionDispatch::Request:Class
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:146:in `&lt;class:Request&gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:11:in `&lt;module:ActionDispatch&gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:10:in `&lt;top (required)&gt;'
        from (irb):3
&gt; 
@@@

The problem seems to be a missing

@@@
require 'active_support/core_ext/module/deprecation'
@@@

in action_dispatch/http/request.rb

This only really shows up if you load parts of the framework in an unusual order (e.g. the example code above). Most people won't run into it because the relevant ActiveSupport stuff will usually be loaded by other parts of the framework before ActionDispatch::Request gets referenced. However, I ran into it because I have some framework-extending code that loads ActionDispatch::Request in isolation, so I'm reporting this.

This first appeared in 3.0.4</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;% irb
&amp;gt; require 'action_dispatch'
 =&amp;gt; true 
&amp;gt; ActionPack::VERSION::STRING
 =&amp;gt; &quot;3.0.4&quot; 
&amp;gt; ActionDispatch::Request
NoMethodError: undefined method `deprecate' for ActionDispatch::Request:Class
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:146:in `&amp;lt;class:Request&amp;gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:11:in `&amp;lt;module:ActionDispatch&amp;gt;'
        from .../actionpack-3.0.4/lib/action_dispatch/http/request.rb:10:in `&amp;lt;top (required)&amp;gt;'
        from (irb):3
&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem seems to be a missing&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require 'active_support/core_ext/module/deprecation'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;in action_dispatch/http/request.rb&lt;/p&gt;
&lt;p&gt;This only really shows up if you load parts of the framework in
an unusual order (e.g. the example code above). Most people won't
run into it because the relevant ActiveSupport stuff will usually
be loaded by other parts of the framework before
ActionDispatch::Request gets referenced. However, I ran into it
because I have some framework-extending code that loads
ActionDispatch::Request in isolation, so I'm reporting this.&lt;/p&gt;
&lt;p&gt;This first appeared in 3.0.4&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T06:10:35+00:00</created-at>
      <creator-id type="integer">19633</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6393</number>
      <permalink>action_dispatchhttprequestrb-missing-a-require</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>action_dispatch/http/request.rb missing a require</title>
      <updated-at type="datetime">2011-02-09T06:10:37+00:00</updated-at>
      <user-id type="integer">19633</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Azuma</user-name>
      <creator-name>Daniel Azuma</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6393</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 I've seen this too with the 3.0.4 release too. A quick fix is to add the mentioned &quot;require 'active_support/core_ext/module/deprecation'&quot; before you require action_****.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 I've seen this too with the 3.0.4 release too. A quick fix is
to add the mentioned &quot;require
'active_support/core_ext/module/deprecation'&quot; before you require
action_****.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-11T22:52:44+00:00</created-at>
      <creator-id type="integer">19633</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6393</number>
      <permalink>action_dispatchhttprequestrb-missing-a-require</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>action_dispatch/http/request.rb missing a require</title>
      <updated-at type="datetime">2011-02-11T22:52:48+00:00</updated-at>
      <user-id type="integer">50020</user-id>
      <version type="integer">2</version>
      <user-name>tonycoco</user-name>
      <creator-name>Daniel Azuma</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6393</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fixed in commit:
https://github.com/rails/rails/commit/401ee98dacc5bac23d8b934765cc64a56bfb5661</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed in commit:&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/401ee98dacc5bac23d8b934765cc64a56bfb5661&quot;&gt;
https://github.com/rails/rails/commit/401ee98dacc5bac23d8b934765cc6...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-05T19:31:06+00:00</created-at>
      <creator-id type="integer">19633</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6393</number>
      <permalink>action_dispatchhttprequestrb-missing-a-require</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>action_dispatch/http/request.rb missing a require</title>
      <updated-at type="datetime">2011-03-05T19:31:16+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Daniel Azuma</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6393</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
