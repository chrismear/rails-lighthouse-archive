<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-15T13:19:12+00:00</created-at>
  <creator-id type="integer">86621</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3964</number>
  <permalink>destroy-for-association-collection-does-not-delete-object-from-parent-array</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>association_collection destroy</tag>
  <title>Destroy for association collection does not delete object from parent array</title>
  <updated-at type="datetime">2010-02-15T14:31:08+00:00</updated-at>
  <user-id type="integer">25293</user-id>
  <version type="integer">2</version>
  <user-name>Prem Sichanugrist (sikachu)</user-name>
  <creator-name>Staszek</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3964</url>
  <priority-name nil="true"></priority-name>
  <original-body>We have normal one_to_many association

@@@ ruby
  class User &lt; ActiveRecord::Base
    has_many :movies
  end
  
  class Movie &lt; ActiveRecord::Base
    belongs_to :user
  end
@@@

Let's create user and some movies
@@@ ruby
user = User.create(:name =&gt; &quot;user&quot;)
=&gt; #&lt;User id: 1, name: &quot;user&quot;, movies_count: nil&gt;
user.movies &lt;&lt; [Movie.new(:name =&gt; &quot;Titanic&quot;), Movie.new(:name =&gt; &quot;Matrix&quot;)]
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
titanic = @user.movies[0]
=&gt; #&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;
@@@

Everything is ok now:
@@@ ruby
user.movies
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
@@@

After destroy
@@@ ruby
user.movies.destroy(titanic)
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
user.movies
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
@@@
It is not ok. Array contains destroyed movie. You need to reload object(make new database query)
@@@ ruby
user.reload.movies
=&gt; [#&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
***</original-body>
  <latest-body>We have normal one_to_many association

@@@ ruby
  class User &lt; ActiveRecord::Base
    has_many :movies
  end
  
  class Movie &lt; ActiveRecord::Base
    belongs_to :user
  end
@@@

Let's create user and some movies
@@@ ruby
user = User.create(:name =&gt; &quot;user&quot;)
=&gt; #&lt;User id: 1, name: &quot;user&quot;, movies_count: nil&gt;
user.movies &lt;&lt; [Movie.new(:name =&gt; &quot;Titanic&quot;), Movie.new(:name =&gt; &quot;Matrix&quot;)]
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
titanic = @user.movies[0]
=&gt; #&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;
@@@

Everything is ok now:
@@@ ruby
user.movies
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
@@@

After destroy
@@@ ruby
user.movies.destroy(titanic)
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
user.movies
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
@@@
It is not ok. Array contains destroyed movie. You need to reload object(make new database query)
@@@ ruby
user.reload.movies
=&gt; [#&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
***</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;We have normal one_to_many association&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class User &amp;lt; ActiveRecord::Base
    has_many :movies
  end
  
  class Movie &amp;lt; ActiveRecord::Base
    belongs_to :user
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's create user and some movies&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user = User.create(:name =&amp;gt; &quot;user&quot;)
=&amp;gt; #&amp;lt;User id: 1, name: &quot;user&quot;, movies_count: nil&amp;gt;
user.movies &amp;lt;&amp;lt; [Movie.new(:name =&amp;gt; &quot;Titanic&quot;), Movie.new(:name =&amp;gt; &quot;Matrix&quot;)]
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]
titanic = @user.movies[0]
=&amp;gt; #&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everything is ok now:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user.movies
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After destroy&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user.movies.destroy(titanic)
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]
user.movies
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
It is not ok. Array contains destroyed movie. You need to reload
object(make new database query)&lt;br&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user.reload.movies
=&amp;gt; [#&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]
***&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We have normal one_to_many association

@@@ ruby
  class User &lt; ActiveRecord::Base
    has_many :movies
  end
  
  class Movie &lt; ActiveRecord::Base
    belongs_to :user
  end
@@@

Let's create user and some movies
@@@ ruby
user = User.create(:name =&gt; &quot;user&quot;)
=&gt; #&lt;User id: 1, name: &quot;user&quot;, movies_count: nil&gt;
user.movies &lt;&lt; [Movie.new(:name =&gt; &quot;Titanic&quot;), Movie.new(:name =&gt; &quot;Matrix&quot;)]
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
titanic = @user.movies[0]
=&gt; #&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;
@@@

Everything is ok now:
@@@ ruby
user.movies
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
@@@

After destroy
@@@ ruby
user.movies.destroy(titanic)
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
user.movies
=&gt; [#&lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;, #&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
@@@
It is not ok. Array contains destroyed movie. You need to reload object(make new database query)
@@@ ruby
user.reload.movies
=&gt; [#&lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&gt;]
***</body>
      <body-html>&lt;div&gt;&lt;p&gt;We have normal one_to_many association&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class User &amp;lt; ActiveRecord::Base
    has_many :movies
  end
  
  class Movie &amp;lt; ActiveRecord::Base
    belongs_to :user
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's create user and some movies&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user = User.create(:name =&amp;gt; &quot;user&quot;)
=&amp;gt; #&amp;lt;User id: 1, name: &quot;user&quot;, movies_count: nil&amp;gt;
user.movies &amp;lt;&amp;lt; [Movie.new(:name =&amp;gt; &quot;Titanic&quot;), Movie.new(:name =&amp;gt; &quot;Matrix&quot;)]
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]
titanic = @user.movies[0]
=&amp;gt; #&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everything is ok now:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user.movies
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After destroy&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user.movies.destroy(titanic)
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]
user.movies
=&amp;gt; [#&amp;lt;Movie id: 1, name: &quot;Titanic&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;, #&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
It is not ok. Array contains destroyed movie. You need to reload
object(make new database query)&lt;br&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user.reload.movies
=&amp;gt; [#&amp;lt;Movie id: 2, name: &quot;Matrix&quot;, subject_type: &quot;User&quot;, subject_id: 1&amp;gt;]
***&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T13:19:12+00:00</created-at>
      <creator-id type="integer">86621</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3964</number>
      <permalink>destroy-for-association-collection-does-not-delete-object-from-parent-array</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>association_collection destroy</tag>
      <title>Destroy for association collection does not delete object from parent array</title>
      <updated-at type="datetime">2010-02-15T13:19:14+00:00</updated-at>
      <user-id type="integer">86621</user-id>
      <version type="integer">1</version>
      <user-name>Staszek</user-name>
      <creator-name>Staszek</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is the duplicate of ticket #3288</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is the duplicate of ticket &lt;a href=
&quot;/projects/8994/tickets/3288&quot; title=&quot;Ticket #3288&quot;&gt;#3288&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-02-15T14:31:06+00:00</created-at>
      <creator-id type="integer">86621</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3964</number>
      <permalink>destroy-for-association-collection-does-not-delete-object-from-parent-array</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>association_collection destroy</tag>
      <title>Destroy for association collection does not delete object from parent array</title>
      <updated-at type="datetime">2010-02-15T14:31:08+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">2</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Staszek</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3964</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
