<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-23T15:56:07+00:00</created-at>
  <creator-id type="integer">126175</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6046</number>
  <permalink>improper-quoting-of-composite-primary-key-in-postgresql_adapterrb-quote_column_name</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Improper quoting of composite primary key in postgresql_adapter.rb (quote_column_name)</title>
  <updated-at type="datetime">2010-11-29T17:52:28+00:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">4</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>crazycrv</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6046</url>
  <priority-name>Low</priority-name>
  <original-body>This is regarding a small issue in postgresql adapter for rails. The issue is observed with postgresql 9.0 database with rails 2.3.8 and pg adapter 0.9.0 x86-mswin32. 

For example one rails app has roles and users models associated with each other through a bridge table roles_users.

In roles_user.rb the composite primary key is specified as &quot;set_primary_keys :user_id, :role_id&quot; using composite_primary_keys (2.3.2) gem

Calling 
    user.roles.push(Role.find(:first, :conditions =&gt; {:name =&gt; 'user'})) 
gives following error - 

    ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;user_id,role_id&quot; does not exist
    LINE 1: ..., &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,r...
                                                             ^
    : INSERT INTO &quot;roles_users&quot; (&quot;updated_at&quot;, &quot;created_at&quot;, &quot;user_id&quot;, &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,role_id&quot;
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract_adapter.rb:221:in `log'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:524:in `execute'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:1006:in `select_raw'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:993:in `select'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `insert'
        from d:/ruby/lib/ruby/gems/1.8/gems/composite_primary_keys-2.3.2/lib

This is due to following method of postgrsql_adapter.rb 
    def quote_column_name(name) #:nodoc:
      PGconn.quote_ident(name.to_s)
    end

On executing the roles.push query, this method is being passed following input by insert method in the same file 
Input: [:user_id, :role_id]

The method calls quote_indent and generates following output which causes PG Error mentioned above. 
Output:  &quot;\&quot;user_id,role_id\&quot;&quot;

To solve this, I have changed the method as given below and it worked fine.

    def quote_column_name(name) #:nodoc:
      if name.is_a?(Array)
        name.collect { |n| PGconn.quote_ident(n.to_s) }.join(',')          
      else
        PGconn.quote_ident(name.to_s)
      end        
    end

With this new code the output generated for the same input is &quot;\&quot;user_id\&quot;,\&quot;role_id\&quot;&quot;

Will soon submit the patch for review.</original-body>
  <latest-body>This is regarding a small issue in postgresql adapter for rails. The issue is observed with postgresql 9.0 database with rails 2.3.8 and pg adapter 0.9.0 x86-mswin32. 

For example one rails app has roles and users models associated with each other through a bridge table roles_users.

In roles_user.rb the composite primary key is specified as &quot;set_primary_keys :user_id, :role_id&quot; using composite_primary_keys (2.3.2) gem

Calling 
    user.roles.push(Role.find(:first, :conditions =&gt; {:name =&gt; 'user'})) 
gives following error - 

    ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;user_id,role_id&quot; does not exist
    LINE 1: ..., &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,r...
                                                             ^
    : INSERT INTO &quot;roles_users&quot; (&quot;updated_at&quot;, &quot;created_at&quot;, &quot;user_id&quot;, &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,role_id&quot;
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract_adapter.rb:221:in `log'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:524:in `execute'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:1006:in `select_raw'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:993:in `select'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `insert'
        from d:/ruby/lib/ruby/gems/1.8/gems/composite_primary_keys-2.3.2/lib

This is due to following method of postgrsql_adapter.rb 
    def quote_column_name(name) #:nodoc:
      PGconn.quote_ident(name.to_s)
    end

On executing the roles.push query, this method is being passed following input by insert method in the same file 
Input: [:user_id, :role_id]

The method calls quote_indent and generates following output which causes PG Error mentioned above. 
Output:  &quot;\&quot;user_id,role_id\&quot;&quot;

To solve this, I have changed the method as given below and it worked fine.

    def quote_column_name(name) #:nodoc:
      if name.is_a?(Array)
        name.collect { |n| PGconn.quote_ident(n.to_s) }.join(',')          
      else
        PGconn.quote_ident(name.to_s)
      end        
    end

With this new code the output generated for the same input is &quot;\&quot;user_id\&quot;,\&quot;role_id\&quot;&quot;

Will soon submit the patch for review.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is regarding a small issue in postgresql adapter for rails.
The issue is observed with postgresql 9.0 database with rails 2.3.8
and pg adapter 0.9.0 x86-mswin32.&lt;/p&gt;
&lt;p&gt;For example one rails app has roles and users models associated
with each other through a bridge table roles_users.&lt;/p&gt;
&lt;p&gt;In roles_user.rb the composite primary key is specified as
&quot;set_primary_keys :user_id, :role_id&quot; using composite_primary_keys
(2.3.2) gem&lt;/p&gt;
&lt;p&gt;Calling&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;user.roles.push(Role.find(:first, :conditions =&amp;gt; {:name =&amp;gt; 'user'}))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;gives following error -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;user_id,role_id&quot; does not exist
LINE 1: ..., &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,r...
                                                         ^
: INSERT INTO &quot;roles_users&quot; (&quot;updated_at&quot;, &quot;created_at&quot;, &quot;user_id&quot;, &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,role_id&quot;
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract_adapter.rb:221:in `log'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:524:in `execute'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:1006:in `select_raw'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:993:in `select'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `insert'
    from d:/ruby/lib/ruby/gems/1.8/gems/composite_primary_keys-2.3.2/lib&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is due to following method of postgrsql_adapter.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def quote_column_name(name) #:nodoc:
  PGconn.quote_ident(name.to_s)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On executing the roles.push query, this method is being passed
following input by insert method in the same file&lt;br&gt;
Input: [:user_id, :role_id]&lt;/p&gt;
&lt;p&gt;The method calls quote_indent and generates following output
which causes PG Error mentioned above.&lt;br&gt;
Output: &quot;&quot;user_id,role_id&quot;&quot;&lt;/p&gt;
&lt;p&gt;To solve this, I have changed the method as given below and it
worked fine.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def quote_column_name(name) #:nodoc:
  if name.is_a?(Array)
    name.collect { |n| PGconn.quote_ident(n.to_s) }.join(',')          
  else
    PGconn.quote_ident(name.to_s)
  end        
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With this new code the output generated for the same input is
&quot;&quot;user_id&quot;,&quot;role_id&quot;&quot;&lt;/p&gt;
&lt;p&gt;Will soon submit the patch for review.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is regarding a small issue in postgresql adapter for rails. The issue is observed with postgresql 9.0 database with rails 2.3.8 and pg adapter 0.9.0 x86-mswin32. 

For example one rails app has roles and users models associated with each other through a bridge table roles_users.

In roles_user.rb the composite primary key is specified as &quot;set_primary_keys :user_id, :role_id&quot; using composite_primary_keys (2.3.2) gem

Calling 
    user.roles.push(Role.find(:first, :conditions =&gt; {:name =&gt; 'user'})) 
gives following error - 

    ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;user_id,role_id&quot; does not exist
    LINE 1: ..., &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,r...
                                                             ^
    : INSERT INTO &quot;roles_users&quot; (&quot;updated_at&quot;, &quot;created_at&quot;, &quot;user_id&quot;, &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,role_id&quot;
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract_adapter.rb:221:in `log'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:524:in `execute'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:1006:in `select_raw'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:993:in `select'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
        from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `insert'
        from d:/ruby/lib/ruby/gems/1.8/gems/composite_primary_keys-2.3.2/lib

This is due to following method of postgrsql_adapter.rb 
    def quote_column_name(name) #:nodoc:
      PGconn.quote_ident(name.to_s)
    end

On executing the roles.push query, this method is being passed following input by insert method in the same file 
Input: [:user_id, :role_id]

The method calls quote_indent and generates following output which causes PG Error mentioned above. 
Output:  &quot;\&quot;user_id,role_id\&quot;&quot;

To solve this, I have changed the method as given below and it worked fine.

    def quote_column_name(name) #:nodoc:
      if name.is_a?(Array)
        name.collect { |n| PGconn.quote_ident(n.to_s) }.join(',')          
      else
        PGconn.quote_ident(name.to_s)
      end        
    end

With this new code the output generated for the same input is &quot;\&quot;user_id\&quot;,\&quot;role_id\&quot;&quot;

Will soon submit the patch for review.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is regarding a small issue in postgresql adapter for rails.
The issue is observed with postgresql 9.0 database with rails 2.3.8
and pg adapter 0.9.0 x86-mswin32.&lt;/p&gt;
&lt;p&gt;For example one rails app has roles and users models associated
with each other through a bridge table roles_users.&lt;/p&gt;
&lt;p&gt;In roles_user.rb the composite primary key is specified as
&quot;set_primary_keys :user_id, :role_id&quot; using composite_primary_keys
(2.3.2) gem&lt;/p&gt;
&lt;p&gt;Calling&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;user.roles.push(Role.find(:first, :conditions =&amp;gt; {:name =&amp;gt; 'user'}))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;gives following error -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;user_id,role_id&quot; does not exist
LINE 1: ..., &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,r...
                                                         ^
: INSERT INTO &quot;roles_users&quot; (&quot;updated_at&quot;, &quot;created_at&quot;, &quot;user_id&quot;, &quot;role_id&quot;) VALUES (NULL, NULL, 20, 1) RETURNING &quot;user_id,role_id&quot;
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract_adapter.rb:221:in `log'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:524:in `execute'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:1006:in `select_raw'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:993:in `select'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
    from d:/ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.8/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `insert'
    from d:/ruby/lib/ruby/gems/1.8/gems/composite_primary_keys-2.3.2/lib&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is due to following method of postgrsql_adapter.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def quote_column_name(name) #:nodoc:
  PGconn.quote_ident(name.to_s)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On executing the roles.push query, this method is being passed
following input by insert method in the same file&lt;br&gt;
Input: [:user_id, :role_id]&lt;/p&gt;
&lt;p&gt;The method calls quote_indent and generates following output
which causes PG Error mentioned above.&lt;br&gt;
Output: &quot;&quot;user_id,role_id&quot;&quot;&lt;/p&gt;
&lt;p&gt;To solve this, I have changed the method as given below and it
worked fine.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def quote_column_name(name) #:nodoc:
  if name.is_a?(Array)
    name.collect { |n| PGconn.quote_ident(n.to_s) }.join(',')          
  else
    PGconn.quote_ident(name.to_s)
  end        
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With this new code the output generated for the same input is
&quot;&quot;user_id&quot;,&quot;role_id&quot;&quot;&lt;/p&gt;
&lt;p&gt;Will soon submit the patch for review.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-23T15:56:07+00:00</created-at>
      <creator-id type="integer">126175</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6046</number>
      <permalink>improper-quoting-of-composite-primary-key-in-postgresql_adapterrb-quote_column_name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improper quoting of composite primary key in postgresql_adapter.rb (quote_column_name)</title>
      <updated-at type="datetime">2010-11-23T15:56:12+00:00</updated-at>
      <user-id type="integer">126175</user-id>
      <version type="integer">1</version>
      <user-name>crazycrv</user-name>
      <creator-name>crazycrv</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6046</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fix for the &quot;Improper quoting of composite primary key in postgresql_adapter.rb (quote_column_name method)&quot;

See the patch file attached with this ticket.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fix for the &quot;Improper quoting of composite primary key in
postgresql_adapter.rb (quote_column_name method)&quot;&lt;/p&gt;
&lt;p&gt;See the patch file attached with this ticket.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-23T16:48:31+00:00</created-at>
      <creator-id type="integer">126175</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6046</number>
      <permalink>improper-quoting-of-composite-primary-key-in-postgresql_adapterrb-quote_column_name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improper quoting of composite primary key in postgresql_adapter.rb (quote_column_name)</title>
      <updated-at type="datetime">2010-11-23T16:48:42+00:00</updated-at>
      <user-id type="integer">126175</user-id>
      <version type="integer">2</version>
      <user-name>crazycrv</user-name>
      <creator-name>crazycrv</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6046</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>tagged:patch</body>
      <body-html>&lt;div&gt;&lt;p&gt;tagged:patch&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-24T06:18:07+00:00</created-at>
      <creator-id type="integer">126175</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6046</number>
      <permalink>improper-quoting-of-composite-primary-key-in-postgresql_adapterrb-quote_column_name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improper quoting of composite primary key in postgresql_adapter.rb (quote_column_name)</title>
      <updated-at type="datetime">2010-11-24T06:18:09+00:00</updated-at>
      <user-id type="integer">126175</user-id>
      <version type="integer">3</version>
      <user-name>crazycrv</user-name>
      <creator-name>crazycrv</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6046</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This seems like a bug in the `composite_primary_keys` gem.  An Array should not be passed to `quote_column_name` in the first place.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This seems like a bug in the &lt;code&gt;composite_primary_keys&lt;/code&gt;
gem. An Array should not be passed to
&lt;code&gt;quote_column_name&lt;/code&gt; in the first place.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-29T17:52:17+00:00</created-at>
      <creator-id type="integer">126175</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6046</number>
      <permalink>improper-quoting-of-composite-primary-key-in-postgresql_adapterrb-quote_column_name</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Improper quoting of composite primary key in postgresql_adapter.rb (quote_column_name)</title>
      <updated-at type="datetime">2010-11-29T17:52:28+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">4</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>crazycrv</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6046</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>80daa85bb2d2387d18794f57b2326a7f3d6e0a1c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-23T16:48:31+00:00</created-at>
      <filename>fix-pgadapter-column-quoting.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">785658</id>
      <size type="integer">1207</size>
      <uploader-id type="integer">126175</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/785658/fix-pgadapter-column-quoting.diff</url>
    </attachment>
  </attachments>
</ticket>
