From 90f1d68ae8a62980613b9fc2e17d6da5809957fa Mon Sep 17 00:00:00 2001
From: Joel Chippindale <joel.chippindale@econsultancy.com>
Date: Mon, 7 Feb 2011 12:55:42 +0000
Subject: [PATCH] [PATCH] Fix Mime::Type#parse for single media range with accepts params [#5833 state:resolved]

---
 actionpack/lib/action_dispatch/http/mime_type.rb |    2 +-
 actionpack/test/dispatch/mime_type_test.rb       |    7 +++++++
 2 files changed, 8 insertions(+), 1 deletions(-)

diff --git a/actionpack/lib/action_dispatch/http/mime_type.rb b/actionpack/lib/action_dispatch/http/mime_type.rb
index 5b87a80..06dd523 100644
--- a/actionpack/lib/action_dispatch/http/mime_type.rb
+++ b/actionpack/lib/action_dispatch/http/mime_type.rb
@@ -111,7 +111,7 @@ module Mime
           if accept_header =~ TRAILING_STAR_REGEXP
             parse_data_with_trailing_star($1)
           else
-            [Mime::Type.lookup(accept_header)]
+            [Mime::Type.lookup(accept_header.split(';').first)]
           end
         else
           # keep track of creation order to keep the subsequent sort stable
diff --git a/actionpack/test/dispatch/mime_type_test.rb b/actionpack/test/dispatch/mime_type_test.rb
index 9782f32..a824f1c 100644
--- a/actionpack/test/dispatch/mime_type_test.rb
+++ b/actionpack/test/dispatch/mime_type_test.rb
@@ -69,6 +69,13 @@ class MimeTypeTest < ActiveSupport::TestCase
     assert_equal expect, Mime::Type.parse(accept)
   end
 
+  # Accept header (which is valid even if it is pointless) send with user HTTP_USER_AGENT: searchdnabot/Nutch-1.0
+  test "parse single with q" do
+    accept = "*/*;q=0.1"
+    expect = [Mime::ALL]
+    assert_equal expect, Mime::Type.parse(accept)
+  end
+
   # Accept header send with user HTTP_USER_AGENT: Sunrise/0.42j (Windows XP)
   test "parse broken acceptlines" do
     accept = "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/*,,*/*;q=0.5"
-- 
1.7.3

