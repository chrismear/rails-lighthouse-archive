From cd149565f03127bddf5f14dac731af998a815877 Mon Sep 17 00:00:00 2001
From: Graeme Mathieson <mathie@woss.name>
Date: Wed, 20 May 2009 06:54:13 +0100
Subject: [PATCH] Only spit out the property for a particular framework component if it has been loaded in the environment.

---
 railties/builtin/rails_info/rails/info.rb |    6 ++-
 railties/test/rails_info_test.rb          |   59 +++++++++++++++++++++++++----
 2 files changed, 55 insertions(+), 10 deletions(-)

diff --git a/railties/builtin/rails_info/rails/info.rb b/railties/builtin/rails_info/rails/info.rb
index a20d9bf..8c858d2 100644
--- a/railties/builtin/rails_info/rails/info.rb
+++ b/railties/builtin/rails_info/rails/info.rb
@@ -25,8 +25,10 @@ module Rails
       end
 
       def framework_version(framework)
-        require "#{framework}/version"
-        "#{framework.classify}::VERSION::STRING".constantize
+        if Object.const_defined?(framework.classify)
+          require "#{framework}/version"
+          "#{framework.classify}::VERSION::STRING".constantize
+        end
       end
 
       def edge_rails_revision(info = git_info)
diff --git a/railties/test/rails_info_test.rb b/railties/test/rails_info_test.rb
index 9befd44..29e8ac6 100644
--- a/railties/test/rails_info_test.rb
+++ b/railties/test/rails_info_test.rb
@@ -5,6 +5,22 @@ $:.unshift File.dirname(__FILE__) + "/../../activesupport/lib"
 require 'test/unit'
 require 'active_support'
 
+module RailsInfoPropertiesHelper
+  def properties
+    Rails::Info.properties
+  end
+
+  def property_defined?(property_name)
+    properties.names.include? property_name
+  end
+
+  def assert_property(property_name, value)
+    raise "Property #{property_name.inspect} not defined" unless
+      property_defined? property_name
+    assert_equal value, properties.value_for(property_name)
+  end
+end
+
 unless defined?(Rails) && defined?(Rails::Info)
   module Rails
     class Info; end
@@ -83,17 +99,44 @@ EOS
       end
     end
 
-    def properties
-      Rails::Info.properties
+    include RailsInfoPropertiesHelper
+end
+
+class RailsInfoWithAllFrameworksLoadedTest < Test::Unit::TestCase
+  include RailsInfoPropertiesHelper
+
+  def setup
+    Rails::Info.frameworks.each do |framework|
+      require framework
     end
 
-    def property_defined?(property_name)
-      properties.names.include? property_name
+    Rails.send :remove_const, :Info
+    silence_warnings { load 'rails/info.rb' }
+  end
+
+  def after
+    Rails::Info.frameworks.each do |framework|
+      Object.send :remove_const, framework.classify
     end
+  end
 
-    def assert_property(property_name, value)
-      raise "Property #{property_name.inspect} not defined" unless
-        property_defined? property_name
-      assert_equal value, properties.value_for(property_name)
+  def test_framework_properties_exist
+    Rails::Info.frameworks.each do |framework|
+      assert_property "#{framework.titlecase} version", framework.classify.constantize::VERSION::STRING
     end
+  end
 end
+
+class RailsInfoWithoutActiveRecordLoadedTest < Test::Unit::TestCase
+  include RailsInfoPropertiesHelper
+
+  def setup
+    Object.send :remove_const, :ActiveRecord
+    Rails.send :remove_const, :Info
+    silence_warnings { load 'rails/info.rb' }
+  end
+
+  def test_frameworks_do_not_include_active_record
+    assert !property_defined?('Active Record version')
+  end
+end
\ No newline at end of file
-- 
1.6.2.1

