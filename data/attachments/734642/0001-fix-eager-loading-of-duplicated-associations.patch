From 34046a0a0a9cffb6e346fbc5dc389e556112fd92 Mon Sep 17 00:00:00 2001
From: Anatoliy Lysenko <a.o.lysenko@gmail.com>
Date: Sat, 23 Oct 2010 23:07:59 +0300
Subject: [PATCH] Fix eager loading of duplicated associations.

---
 activerecord/lib/active_record/associations.rb |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index 59d328f..ef642bd 100644
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1923,18 +1923,20 @@ module ActiveRecord
                 when Symbol, String
                   reflection = parent.reflections[associations.to_s.intern] or
                   raise ConfigurationError, "Association named '#{ associations }' was not found; perhaps you misspelled it?"
+                  existed_join = join_associations.detect{ |j| j.parent == parent && j.reflection == reflection}
+                  return existed_join unless existed_join.nil?
                   @reflections << reflection
                   join_association = build_join_association(reflection, parent)
                   join_association.join_type = join_type
                   @join_parts << join_association
+                  return join_association
                 when Array
                   associations.each do |association|
                     build(association, parent, join_type)
                   end
                 when Hash
                   associations.keys.sort{|a,b|a.to_s<=>b.to_s}.each do |name|
-                    build(name, parent, join_type)
-                    build(associations[name], nil, join_type)
+                    build(associations[name],  build(name, parent, join_type), join_type)
                   end
                 else
                   raise ConfigurationError, associations.inspect
@@ -2013,7 +2015,7 @@ module ActiveRecord
             end
 
           # A JoinPart represents a part of a JoinDependency. It is an abstract class, inherited
-          # by JoinBase and JoinAssociation. A JoinBase represents the Active Record which 
+          # by JoinBase and JoinAssociation. A JoinBase represents the Active Record which
           # everything else is being joined onto. A JoinAssociation represents an association which
           # is joining to the base. A JoinAssociation may result in more than one actual join
           # operations (for example a has_and_belongs_to_many JoinAssociation would result in
@@ -2114,7 +2116,7 @@ module ActiveRecord
             attr_reader :reflection
 
             # The JoinDependency object which this JoinAssociation exists within. This is mainly
-            # relevant for generating aliases which do not conflict with other joins which are 
+            # relevant for generating aliases which do not conflict with other joins which are
             # part of the query.
             attr_reader :join_dependency
 
-- 
1.7.0.4

