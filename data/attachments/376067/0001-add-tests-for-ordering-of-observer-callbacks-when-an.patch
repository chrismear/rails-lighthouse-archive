From 8ad0a8546454ce2e74f5b5015945996fd777bc36 Mon Sep 17 00:00:00 2001
From: Geoff Garside <geoff@geoffgarside.co.uk>
Date: Wed, 13 Jan 2010 17:17:59 +0000
Subject: [PATCH] Add tests for ordering of observer callbacks when an association has :touch enabled.

Given the following

A.has_many :bs
B.belongs_to :a, :touch => true

with an A observer the A observers after_create callback is not called before after_update which is triggered by the touching of A by B.
---
 .../touch_association_callbacks_observers_test.rb  |   65 ++++++++++++++++++++
 activerecord/test/schema/schema.rb                 |    9 +++
 2 files changed, 74 insertions(+), 0 deletions(-)
 create mode 100644 activerecord/test/cases/touch_association_callbacks_observers_test.rb

diff --git a/activerecord/test/cases/touch_association_callbacks_observers_test.rb b/activerecord/test/cases/touch_association_callbacks_observers_test.rb
new file mode 100644
index 0000000..f2cccf3
--- /dev/null
+++ b/activerecord/test/cases/touch_association_callbacks_observers_test.rb
@@ -0,0 +1,65 @@
+require "cases/helper"
+
+class Bunny < ActiveRecord::Base
+  attr_accessor :called
+
+  has_many :carrots
+
+  accepts_nested_attributes_for :carrots
+end
+
+class Carrot < ActiveRecord::Base
+  belongs_to :bunny, :touch => true
+end
+
+class BunnyObserver < ActiveRecord::Observer
+  attr_accessor :called
+
+  def after_save(bunny)
+    called << current_method_name if called
+  end
+  def after_create(bunny)
+    called << current_method_name if called
+  end
+  def after_update(bunny)
+    called << current_method_name if called
+  end
+
+  private
+    def current_method_name
+      return __callee__ if respond_to?(:__callee__)   # Ruby 1.9
+      caller[0] =~ /`([^']*)'/ and $1.to_sym          # Ruby 1.8
+    end
+end
+
+class BunnyObserversTest < ActiveRecord::TestCase
+  def test_observer_callbacks_called_on_create_with_touched_association
+    called = []
+
+    BunnyObserver.instance.called = called
+
+    bunny = Bunny.new
+    bunny.called = called
+    bunny.carrots_attributes = {"0" => {:rating => 0.8}}
+
+    bunny.save!
+
+    # assert_equal :after_create, called[0], "After create callback not fired first"
+    assert_equal [:after_create, :after_save], called, "After callbacks for create not fired in expected order"
+  end
+
+  def test_observer_callbacks_called_on_update_with_touched_association
+    called = []
+
+    bunny = Bunny.new
+    bunny.save!
+
+    BunnyObserver.instance.called = called
+    bunny.called = called
+
+    bunny.carrots.create(:rating => 0.7)
+
+    # assert_equal :after_update, called[0], "After update callback not fired first"
+    assert_equal [:after_update, :after_save], called, "After callbacks for update not fired in expected order"
+  end
+end
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index c8e652a..6db26b3 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -70,6 +70,15 @@ ActiveRecord::Schema.define do
     t.boolean :value
   end
 
+  create_table :bunnies, :force => true do |t|
+    t.datetime :updated_at
+  end
+
+  create_table :carrots, :force => true do |t|
+    t.integer :bunny_id
+    t.float :rating
+  end
+
   create_table "CamelCase", :force => true do |t|
     t.string :name
   end
-- 
1.6.4.2

