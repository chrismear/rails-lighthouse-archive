<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15783</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-01T10:10:13+00:00</created-at>
  <creator-id type="integer">5638</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1501</number>
  <permalink>datetime-timezone-support</permalink>
  <priority type="integer">864</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.1 2.2 datetime timezone</tag>
  <title>DateTime timezone support</title>
  <updated-at type="datetime">2008-12-09T00:03:49+00:00</updated-at>
  <user-id type="integer">15783</user-id>
  <version type="integer">5</version>
  <user-name>Geoff Buesing</user-name>
  <creator-name>Andre Foeken</creator-name>
  <assigned-user-name>Geoff Buesing</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1501</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This might be a feature but it still seems strange to me. Time nicely uses the TimeZone but DateTime seems to fail to get the correct TimeZone.

@@@ ruby
&gt;&gt; Time.now - 2.month
=&gt; Wed Oct 01 10:46:12 +0200 2008
&gt;&gt; DateTime.now - 2.month
=&gt; Wed, 01 Oct 2008 10:46:15 +0100
@@@

If you ask for the zone of a DateTime we get &quot;+0100&quot; but for Time this the same method results in &quot;CET&quot;. CET is correct. +0100 doesn't (and should not!) use daylight savings.

Tested in both 2.1.2 and 2.2.2, both fail.</original-body>
  <latest-body>This might be a feature but it still seems strange to me. Time nicely uses the TimeZone but DateTime seems to fail to get the correct TimeZone.

@@@ ruby
&gt;&gt; Time.now - 2.month
=&gt; Wed Oct 01 10:46:12 +0200 2008
&gt;&gt; DateTime.now - 2.month
=&gt; Wed, 01 Oct 2008 10:46:15 +0100
@@@

If you ask for the zone of a DateTime we get &quot;+0100&quot; but for Time this the same method results in &quot;CET&quot;. CET is correct. +0100 doesn't (and should not!) use daylight savings.

Tested in both 2.1.2 and 2.2.2, both fail.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This might be a feature but it still seems strange to me. Time
nicely uses the TimeZone but DateTime seems to fail to get the
correct TimeZone.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
&amp;gt;&amp;gt; Time.now - 2.month
=&amp;gt; Wed Oct 01 10:46:12 +0200 2008
&amp;gt;&amp;gt; DateTime.now - 2.month
=&amp;gt; Wed, 01 Oct 2008 10:46:15 +0100
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you ask for the zone of a DateTime we get &quot;+0100&quot; but for
Time this the same method results in &quot;CET&quot;. CET is correct. +0100
doesn't (and should not!) use daylight savings.&lt;/p&gt;
&lt;p&gt;Tested in both 2.1.2 and 2.2.2, both fail.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This might be a feature but it still seems strange to me. Time nicely uses the TimeZone but DateTime seems to fail to get the correct TimeZone.

@@@ ruby
&gt;&gt; Time.now - 2.month
=&gt; Wed Oct 01 10:46:12 +0200 2008
&gt;&gt; DateTime.now - 2.month
=&gt; Wed, 01 Oct 2008 10:46:15 +0100
@@@

If you ask for the zone of a DateTime we get &quot;+0100&quot; but for Time this the same method results in &quot;CET&quot;. CET is correct. +0100 doesn't (and should not!) use daylight savings.

Tested in both 2.1.2 and 2.2.2, both fail.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This might be a feature but it still seems strange to me. Time
nicely uses the TimeZone but DateTime seems to fail to get the
correct TimeZone.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
&amp;gt;&amp;gt; Time.now - 2.month
=&amp;gt; Wed Oct 01 10:46:12 +0200 2008
&amp;gt;&amp;gt; DateTime.now - 2.month
=&amp;gt; Wed, 01 Oct 2008 10:46:15 +0100
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you ask for the zone of a DateTime we get &quot;+0100&quot; but for
Time this the same method results in &quot;CET&quot;. CET is correct. +0100
doesn't (and should not!) use daylight savings.&lt;/p&gt;
&lt;p&gt;Tested in both 2.1.2 and 2.2.2, both fail.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-01T10:10:13+00:00</created-at>
      <creator-id type="integer">5638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1501</number>
      <permalink>datetime-timezone-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 2.2 datetime timezone</tag>
      <title>DateTime timezone support</title>
      <updated-at type="datetime">2008-12-01T10:10:16+00:00</updated-at>
      <user-id type="integer">5638</user-id>
      <version type="integer">1</version>
      <user-name>Andre Foeken</user-name>
      <creator-name>Andre Foeken</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1501</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Not sure what you're identifying as an issue -- is it that DateTime instances don't recognize Daylight Savings Time, or is it that the zone returns a numeric offset instead of an abbreviation (e.g., &quot;CET&quot;)? 

Both of these issues are limitations of the Ruby DateTime class.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure what you're identifying as an issue -- is it that
DateTime instances don't recognize Daylight Savings Time, or is it
that the zone returns a numeric offset instead of an abbreviation
(e.g., &quot;CET&quot;)?&lt;/p&gt;
&lt;p&gt;Both of these issues are limitations of the Ruby DateTime
class.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-01T14:24:14+00:00</created-at>
      <creator-id type="integer">5638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1501</number>
      <permalink>datetime-timezone-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 2.2 datetime timezone</tag>
      <title>DateTime timezone support</title>
      <updated-at type="datetime">2008-12-01T14:24:20+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Andre Foeken</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1501</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-08T04:58:33+00:00</created-at>
      <creator-id type="integer">5638</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1501</number>
      <permalink>datetime-timezone-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 2.2 datetime timezone</tag>
      <title>DateTime timezone support</title>
      <updated-at type="datetime">2008-12-08T04:58:35+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Andre Foeken</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1501</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think the issue is that is feels unnatural that both classes behave so differently. I'd expect the same api to work for whatever form of Date/DateTime/Time class I use.

I understand this may be a limitation of the Ruby classes that is difficult to change without breaking a lot of other stuff, but perhaps it might be worth it to achieve an even more uniform way of working with timezones.

With regards to the &quot;CET&quot; / &quot;+0100&quot; line I mentioned. It was a possible indicator of the problem why the DateTime class responded differently. The generic &quot;+0100&quot; should not use Daylight Savings, but the more specific &quot;CET&quot; should. Having DateTime not differentiate between them was, in my eyes, just a possible hint to a solution.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think the issue is that is feels unnatural that both classes
behave so differently. I'd expect the same api to work for whatever
form of Date/DateTime/Time class I use.&lt;/p&gt;
&lt;p&gt;I understand this may be a limitation of the Ruby classes that
is difficult to change without breaking a lot of other stuff, but
perhaps it might be worth it to achieve an even more uniform way of
working with timezones.&lt;/p&gt;
&lt;p&gt;With regards to the &quot;CET&quot; / &quot;+0100&quot; line I mentioned. It was a
possible indicator of the problem why the DateTime class responded
differently. The generic &quot;+0100&quot; should not use Daylight Savings,
but the more specific &quot;CET&quot; should. Having DateTime not
differentiate between them was, in my eyes, just a possible hint to
a solution.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-08T06:23:23+00:00</created-at>
      <creator-id type="integer">5638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1501</number>
      <permalink>datetime-timezone-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 2.2 datetime timezone</tag>
      <title>DateTime timezone support</title>
      <updated-at type="datetime">2008-12-08T06:23:28+00:00</updated-at>
      <user-id type="integer">5638</user-id>
      <version type="integer">4</version>
      <user-name>Andre Foeken</user-name>
      <creator-name>Andre Foeken</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1501</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given that we already have ActiveSupport::TimeWithZone and the core Ruby Time class for dst-aware time needs, I don't think it would be worth the effort, and breakage of existing functionality, to try and graft dst-awareness onto DateTime instances.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given that we already have ActiveSupport::TimeWithZone and the
core Ruby Time class for dst-aware time needs, I don't think it
would be worth the effort, and breakage of existing functionality,
to try and graft dst-awareness onto DateTime instances.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-09T00:03:44+00:00</created-at>
      <creator-id type="integer">5638</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1501</number>
      <permalink>datetime-timezone-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.1 2.2 datetime timezone</tag>
      <title>DateTime timezone support</title>
      <updated-at type="datetime">2008-12-09T00:03:49+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">5</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Andre Foeken</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1501</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
