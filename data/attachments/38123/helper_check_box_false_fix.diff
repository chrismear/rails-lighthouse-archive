Author: Senthil Nayagam <senthil@railsfactory.org>  2008-08-09 12:53:17
Committer: root <senthil@railsfactory.org>  2008-08-09 12:53:17
Parent: a8057669ff6ba11e228fc73eef7390b826d0de25 (Fixed memoize with punctuation and freezing memoized methods with arguments)
Branches: master, remotes/origin/master
Follows: v2.1.0
Precedes: 

    fixes issue with checkboxes with false value, have written test cases

-------------- actionpack/lib/action_view/helpers/form_helper.rb --------------
index 7bb82ba..445a6af 100644
@@ -605,7 +605,7 @@ module ActionView
         end
         options["checked"] = "checked" if checked
         add_default_name_and_id(options)
-        tag("input", options) << tag("input", "name" => options["name"], "type" => "hidden", "value" => options['disabled'] && checked ? checked_value : unchecked_value)
+        tag("input", options) << tag("input", "name" => options["name"], "type" => "hidden", "value" => options['disabled'] && checked ? checked_value.to_s : unchecked_value.to_s)
       end
 
       def to_boolean_select_tag(options = {})

------------ actionpack/lib/action_view/helpers/form_tag_helper.rb ------------
index e8ca02d..51d50e1 100644
@@ -281,7 +281,7 @@ module ActionView
       #   check_box_tag 'eula', 'accepted', false, :disabled => true
       #   # => <input disabled="disabled" id="eula" name="eula" type="checkbox" value="accepted" />
       def check_box_tag(name, value = "1", checked = false, options = {})
-        html_options = { "type" => "checkbox", "name" => name, "id" => name, "value" => value }.update(options.stringify_keys)
+        html_options = { "type" => "checkbox", "name" => name, "id" => name, "value" => value.to_s }.update(options.stringify_keys)
         html_options["checked"] = "checked" if checked
         tag :input, html_options
       end

----------------- actionpack/test/template/form_helper_test.rb -----------------
index 52e8bf3..dcedfee 100644
@@ -209,6 +209,19 @@ class FormHelperTest < ActionView::TestCase
     )
   end
 
+  def test_checkbox_false_as_value_fails
+    @post.secret = true
+        assert_dom_equal(
+      '<input checked="checked" id="post_secret" name="post[secret]" type="checkbox" value="true" /><input name="post[secret]" type="hidden" value="false" />',
+      check_box("post", "secret",{},true,false)
+    )    
+    @post.secret = false
+        assert_dom_equal(
+      '<input id="post_secret" name="post[secret]" type="checkbox" value="true" /><input name="post[secret]" type="hidden" value="false" />',
+      check_box("post", "secret",{},true,false)
+    )    
+  end
+
   def test_radio_button
     assert_dom_equal('<input checked="checked" id="post_title_hello_world" name="post[title]" type="radio" value="Hello World" />',
       radio_button("post", "title", "Hello World")

--------------- actionpack/test/template/form_tag_helper_test.rb ---------------
index 9b41ff8..05ee0d1 100644
@@ -18,6 +18,15 @@ class FormTagHelperTest < ActionView::TestCase
     assert_dom_equal expected, actual
   end
 
+  def test_check_box_true_false
+    actual = check_box_tag "admin",true
+    expected = %(<input id="admin" name="admin" type="checkbox" value="true" />)
+    assert_dom_equal expected, actual
+    actual = check_box_tag "admin",false
+    expected = %(<input id="admin" name="admin" type="checkbox" value="false" />)
+    assert_dom_equal expected, actual
+  end
+
   def test_form_tag
     actual = form_tag
     expected = %(<form action="http://www.example.com" method="post">)

