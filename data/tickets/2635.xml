<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-05-11T22:08:17+01:00</created-at>
  <creator-id type="integer">56676</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2635</number>
  <permalink>behavior-of-child_ids-setter-in-has_many-through-uniq-associations</permalink>
  <priority type="integer">1765</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>active_record has_many_through uniq</tag>
  <title>Behavior of child_ids= setter in has_many :through :uniq associations</title>
  <updated-at type="datetime">2010-10-09T04:15:21+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">4</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Kunal Shah</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2635</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Problem is mocked out here:
http://pastie.org/474876

To me this does not seem to be the expected behavior of the setter with the uniq option set to false. If I am incorrect and this ticket is closed could the reasoning be explained?</original-body>
  <latest-body>Problem is mocked out here:
http://pastie.org/474876

To me this does not seem to be the expected behavior of the setter with the uniq option set to false. If I am incorrect and this ticket is closed could the reasoning be explained?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Problem is mocked out here: &lt;a href=&quot;http://pastie.org/474876&quot;&gt;http://pastie.org/474876&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To me this does not seem to be the expected behavior of the
setter with the uniq option set to false. If I am incorrect and
this ticket is closed could the reasoning be explained?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Problem is mocked out here:
http://pastie.org/474876

To me this does not seem to be the expected behavior of the setter with the uniq option set to false. If I am incorrect and this ticket is closed could the reasoning be explained?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Problem is mocked out here: &lt;a href=&quot;http://pastie.org/474876&quot;&gt;http://pastie.org/474876&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To me this does not seem to be the expected behavior of the
setter with the uniq option set to false. If I am incorrect and
this ticket is closed could the reasoning be explained?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T22:08:17+01:00</created-at>
      <creator-id type="integer">56676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2635</number>
      <permalink>behavior-of-child_ids-setter-in-has_many-through-uniq-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record has_many_through uniq</tag>
      <title>Behavior of child_ids= setter in has_many :through :uniq associations</title>
      <updated-at type="datetime">2009-05-11T22:08:22+01:00</updated-at>
      <user-id type="integer">56676</user-id>
      <version type="integer">1</version>
      <user-name>Kunal Shah</user-name>
      <creator-name>Kunal Shah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2635</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well I don't thing rails is doing this on purpose - it's basically doing

@@@ ruby
  foos &lt;&lt; Foo.find(ids)
@@@

and find uniques the ids (ie it's not the association code that does this the uniquing just a (perhaps unintended) consequence of using find in this way.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well I don't thing rails is doing this on purpose - it's
basically doing&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  foos &amp;lt;&amp;lt; Foo.find(ids)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and find uniques the ids (ie it's not the association code that
does this the uniquing just a (perhaps unintended) consequence of
using find in this way.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-12T14:44:21+01:00</created-at>
      <creator-id type="integer">56676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2635</number>
      <permalink>behavior-of-child_ids-setter-in-has_many-through-uniq-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record has_many_through uniq</tag>
      <title>Behavior of child_ids= setter in has_many :through :uniq associations</title>
      <updated-at type="datetime">2009-05-12T14:44:26+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Kunal Shah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2635</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:49+01:00</created-at>
      <creator-id type="integer">56676</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2635</number>
      <permalink>behavior-of-child_ids-setter-in-has_many-through-uniq-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record has_many_through uniq</tag>
      <title>Behavior of child_ids= setter in has_many :through :uniq associations</title>
      <updated-at type="datetime">2010-05-04T18:48:49+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Kunal Shah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2635</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T04:15:15+01:00</created-at>
      <creator-id type="integer">56676</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2635</number>
      <permalink>behavior-of-child_ids-setter-in-has_many-through-uniq-associations</permalink>
      <priority type="integer">1765</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>active_record has_many_through uniq</tag>
      <title>Behavior of child_ids= setter in has_many :through :uniq associations</title>
      <updated-at type="datetime">2010-10-09T04:15:21+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">4</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Kunal Shah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2635</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
