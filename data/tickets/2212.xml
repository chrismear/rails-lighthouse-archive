<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-11T13:13:54+00:00</created-at>
  <creator-id type="integer">7211</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2212</number>
  <permalink>make-polymorphic_url-more-consistent-with-routing-code</permalink>
  <priority type="integer">1391</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.3 patch polymorphic routing</tag>
  <title>Make polymorphic_url more consistent with routing code</title>
  <updated-at type="datetime">2009-03-12T17:04:16+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>CancelProfileIsBroken</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2212</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>In 2.3.1 (and before), there is a subtle difference in the handling of certain irregular plurals between RESTful routing and polymorphic_url. This shows up any time that you have inflections that do not round-trip between singular and plural. For example, out of the box Rails inflections include:

@@@
&quot;tax&quot;.pluralize =&gt; &quot;taxes&quot;
&quot;taxes&quot;.singularize =&gt; &quot;taxis&quot;
@@@

In this situation, some things will fail to work as expected. With the routes entry:

@@@
map.resources :taxes
@@@

A simple call to redirect_to @tax with a Tax object will fail, because (ultimately) routing uses the singularized pluralized name and polymorphic_url uses the singular name.

Attached patch corrects this situation so that polymorphic_url will work correctly on these names - in this particular case, it would redirect to (the correct) taxis_url instead of (the incorrect) tax_url.

Applying this patch is a prerequisite to getting a good fix for #2046/</original-body>
  <latest-body>In 2.3.1 (and before), there is a subtle difference in the handling of certain irregular plurals between RESTful routing and polymorphic_url. This shows up any time that you have inflections that do not round-trip between singular and plural. For example, out of the box Rails inflections include:

@@@
&quot;tax&quot;.pluralize =&gt; &quot;taxes&quot;
&quot;taxes&quot;.singularize =&gt; &quot;taxis&quot;
@@@

In this situation, some things will fail to work as expected. With the routes entry:

@@@
map.resources :taxes
@@@

A simple call to redirect_to @tax with a Tax object will fail, because (ultimately) routing uses the singularized pluralized name and polymorphic_url uses the singular name.

Attached patch corrects this situation so that polymorphic_url will work correctly on these names - in this particular case, it would redirect to (the correct) taxis_url instead of (the incorrect) tax_url.

Applying this patch is a prerequisite to getting a good fix for #2046/</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In 2.3.1 (and before), there is a subtle difference in the
handling of certain irregular plurals between RESTful routing and
polymorphic_url. This shows up any time that you have inflections
that do not round-trip between singular and plural. For example,
out of the box Rails inflections include:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;quot;tax&amp;quot;.pluralize =&amp;gt; &amp;quot;taxes&amp;quot;
&amp;quot;taxes&amp;quot;.singularize =&amp;gt; &amp;quot;taxis&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this situation, some things will fail to work as expected.
With the routes entry:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
map.resources :taxes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A simple call to redirect_to @tax with a Tax object will fail,
because (ultimately) routing uses the singularized pluralized name
and polymorphic_url uses the singular name.&lt;/p&gt;
&lt;p&gt;Attached patch corrects this situation so that polymorphic_url
will work correctly on these names - in this particular case, it
would redirect to (the correct) taxis_url instead of (the
incorrect) tax_url.&lt;/p&gt;
&lt;p&gt;Applying this patch is a prerequisite to getting a good fix for
&lt;a href=&quot;/projects/8994/tickets/2046&quot; title=&quot;Ticket #2046&quot;&gt;#2046&lt;/a&gt;/&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In 2.3.1 (and before), there is a subtle difference in the handling of certain irregular plurals between RESTful routing and polymorphic_url. This shows up any time that you have inflections that do not round-trip between singular and plural. For example, out of the box Rails inflections include:

@@@
&quot;tax&quot;.pluralize =&gt; &quot;taxes&quot;
&quot;taxes&quot;.singularize =&gt; &quot;taxis&quot;
@@@

In this situation, some things will fail to work as expected. With the routes entry:

@@@
map.resources :taxes
@@@

A simple call to redirect_to @tax with a Tax object will fail, because (ultimately) routing uses the singularized pluralized name and polymorphic_url uses the singular name.

Attached patch corrects this situation so that polymorphic_url will work correctly on these names - in this particular case, it would redirect to (the correct) taxis_url instead of (the incorrect) tax_url.

Applying this patch is a prerequisite to getting a good fix for #2046/</body>
      <body-html>&lt;div&gt;&lt;p&gt;In 2.3.1 (and before), there is a subtle difference in the
handling of certain irregular plurals between RESTful routing and
polymorphic_url. This shows up any time that you have inflections
that do not round-trip between singular and plural. For example,
out of the box Rails inflections include:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;quot;tax&amp;quot;.pluralize =&amp;gt; &amp;quot;taxes&amp;quot;
&amp;quot;taxes&amp;quot;.singularize =&amp;gt; &amp;quot;taxis&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this situation, some things will fail to work as expected.
With the routes entry:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
map.resources :taxes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A simple call to redirect_to @tax with a Tax object will fail,
because (ultimately) routing uses the singularized pluralized name
and polymorphic_url uses the singular name.&lt;/p&gt;
&lt;p&gt;Attached patch corrects this situation so that polymorphic_url
will work correctly on these names - in this particular case, it
would redirect to (the correct) taxis_url instead of (the
incorrect) tax_url.&lt;/p&gt;
&lt;p&gt;Applying this patch is a prerequisite to getting a good fix for
&lt;a href=&quot;/projects/8994/tickets/2046&quot; title=&quot;Ticket #2046&quot;&gt;#2046&lt;/a&gt;/&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T13:13:54+00:00</created-at>
      <creator-id type="integer">7211</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2212</number>
      <permalink>make-polymorphic_url-more-consistent-with-routing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 patch polymorphic routing</tag>
      <title>Make polymorphic_url more consistent with routing code</title>
      <updated-at type="datetime">2009-03-11T13:13:55+00:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">1</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>CancelProfileIsBroken</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2212</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [d771e7d17f4a2c175676f7c8354aa5b161b63c2e]) Handle irregular plurals in polymorphic_urls [#2212 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/d771e7d17f4a2c175676f7c8354aa5b161b63c2e</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [d771e7d17f4a2c175676f7c8354aa5b161b63c2e]) Handle
irregular plurals in polymorphic_urls [&lt;a href=&quot;/projects/8994/tickets/2212&quot; title=&quot;Ticket #2212&quot;&gt;#2212&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/d771e7d17f4a2c175676f7c8354aa5b161b63c2e&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T17:04:15+00:00</created-at>
      <creator-id type="integer">7211</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2212</number>
      <permalink>make-polymorphic_url-more-consistent-with-routing-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 patch polymorphic routing</tag>
      <title>Make polymorphic_url more consistent with routing code</title>
      <updated-at type="datetime">2009-03-12T17:04:16+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>CancelProfileIsBroken</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2212</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>861fa2e6329d7c685c1ffcfc24cefec3945f5814</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-11T13:13:54+00:00</created-at>
      <filename>polymorphic.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">98495</id>
      <size type="integer">4523</size>
      <uploader-id type="integer">7211</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/98495/polymorphic.diff</url>
    </attachment>
  </attachments>
</ticket>
