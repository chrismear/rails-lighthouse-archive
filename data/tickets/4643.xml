<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-18T17:06:09+01:00</created-at>
  <creator-id type="integer">40263</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">4643</number>
  <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>patch rails3 test</tag>
  <title>Use assert_kind_of whenever possible instead of assert</title>
  <updated-at type="datetime">2011-03-26T02:35:45+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">7</version>
  <user-name>bingbing</user-name>
  <creator-name>Neeraj Singh</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Patch will be attached through comment.</original-body>
  <latest-body>Patch will be attached through comment.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Patch will be attached through comment.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch will be attached through comment.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch will be attached through comment.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T17:06:09+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4643</number>
      <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3 test</tag>
      <title>Use assert_kind_of whenever possible instead of assert</title>
      <updated-at type="datetime">2010-05-18T17:06:10+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">1</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T17:08:53+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: rails3 test
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4643</number>
      <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_kind_of whenever possible instead of assert</title>
      <updated-at type="datetime">2010-05-18T17:08:56+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Is ok but do the same i said on #4644

$ grep -r 'assert ' * | grep is_a

and

$ grep -r 'assert ' * | grep kind_of

i get the following ...

actionpack/test/controller/new_base/bare_metal_test.rb:        assert part.is_a?(String), &quot;Each part of the body must be a String&quot;
activemodel/lib/active_model/lint.rb:        assert model.errors[:hello].is_a?(Array), &quot;errors#[] should return an Array&quot;
activemodel/lib/active_model/lint.rb:        assert model.errors.full_messages.is_a?(Array), &quot;errors#full_messages should return an Array&quot;
activerecord/test/cases/query_cache_test.rb:        assert Task.connection.select_value(&quot;SELECT count(*) AS count_all FROM tasks&quot;).is_a?(Numeric)
activerecord/test/cases/fixtures_test.rb:    assert fixture.is_a?(Fixtures)
activesupport/test/safe_buffer_test.rb:    assert @buffer.is_a?(String)
activesupport/test/core_ext/time_with_zone_test.rb:    assert result.is_a?(Float)
activesupport/test/core_ext/time_with_zone_test.rb:    assert result.is_a?(Integer)
activesupport/test/core_ext/time_with_zone_test.rb:    assert @twz.is_a?(Time)
activesupport/test/core_ext/time_with_zone_test.rb:    assert @twz.is_a?(ActiveSupport::TimeWithZone)
activesupport/test/core_ext/duration_test.rb:    assert d.is_a?(ActiveSupport::Duration)
activesupport/test/core_ext/duration_test.rb:    assert d.is_a?(Numeric)
activesupport/test/core_ext/duration_test.rb:    assert d.is_a?(Fixnum)
activesupport/test/core_ext/duration_test.rb:    assert !d.is_a?(Hash)
activesupport/test/core_ext/duration_test.rb:    assert !d.is_a?(k)
activesupport/test/core_ext/date_time_ext_test.rb:    assert DateTime.current.is_a?(DateTime)
activesupport/test/core_ext/date_time_ext_test.rb:      assert DateTime.current.is_a?(DateTime)
railties/test/application/rackup_test.rb:      assert Rails.application.is_a?(Rails::Application)
railties/test/application/rackup_test.rb:      assert ActionController::Dispatcher.new.is_a?(Rails::Application)
activerecord/test/cases/inheritance_test.rb:    assert Company.find(1).kind_of?(Firm), &quot;37signals should be a firm&quot;
activerecord/test/cases/inheritance_test.rb:    assert Firm.find(1).kind_of?(Firm), &quot;37signals should be a firm&quot;
activerecord/test/cases/inheritance_test.rb:    assert Company.find(2).kind_of?(Client), &quot;Summit should be a client&quot;
activerecord/test/cases/inheritance_test.rb:    assert Client.find(2).kind_of?(Client), &quot;Summit should be a client&quot;
activerecord/test/cases/inheritance_test.rb:    assert companies[0].kind_of?(Firm), &quot;37signals should be a firm&quot;
activerecord/test/cases/inheritance_test.rb:    assert companies[1].kind_of?(Client), &quot;Summit should be a client&quot;
activerecord/test/cases/inheritance_test.rb:    assert next_angle.kind_of?(Firm), &quot;Next Angle should be a firm&quot;
activesupport/test/core_ext/time_with_zone_test.rb:    assert @twz.kind_of?(Time)
activesupport/test/core_ext/string_ext_test.rb:        assert UNICODE_STRING.mb_chars.kind_of?(String)
activesupport/test/core_ext/string_ext_test.rb:        assert UNICODE_STRING.mb_chars.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/core_ext/string_ext_test.rb:      assert UNICODE_STRING.mb_chars.kind_of?(String)
activesupport/test/multibyte_chars_test.rb:    assert @chars.__method_for_multibyte_testing.kind_of?(@proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert @chars.__method_for_multibyte_testing!.kind_of?(@proxy_class)
activesupport/test/multibyte_chars_test.rb:        assert character.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').insert(0, '').kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').rjust(1).kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').ljust(1).kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').center(1).kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').rstrip.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').lstrip.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').strip.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').reverse.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars(' ').slice(0).kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').limit(0).kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').upcase.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').downcase.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').capitalize.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').normalize.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').decompose.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').compose.kind_of?(ActiveSupport::Multibyte.proxy_class)
activesupport/test/multibyte_chars_test.rb:    assert chars('').tidy_bytes.kind_of?(ActiveSupport::Multibyte.proxy_class)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is ok but do the same i said on &lt;a href=
&quot;/projects/8994/tickets/4644&quot; title=&quot;Ticket #4644&quot;&gt;#4644&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$ grep -r 'assert ' * | grep is_a&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;$ grep -r 'assert ' * | grep kind_of&lt;/p&gt;
&lt;p&gt;i get the following ...&lt;/p&gt;
&lt;p&gt;actionpack/test/controller/new_base/bare_metal_test.rb: assert
part.is_a?(String), &quot;Each part of the body must be a String&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.errors[:hello].is_a?(Array), &quot;errors#[] should return an
Array&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.errors.full_messages.is_a?(Array), &quot;errors#full_messages
should return an Array&quot;&lt;br&gt;
activerecord/test/cases/query_cache_test.rb: assert
Task.connection.select_value(&quot;SELECT count(*) AS count_all FROM
tasks&quot;).is_a?(Numeric)&lt;br&gt;
activerecord/test/cases/fixtures_test.rb: assert
fixture.is_a?(Fixtures)&lt;br&gt;
activesupport/test/safe_buffer_test.rb: assert
@buffer.is_a?(String)&lt;br&gt;
activesupport/test/core_ext/time_with_zone_test.rb: assert
result.is_a?(Float)&lt;br&gt;
activesupport/test/core_ext/time_with_zone_test.rb: assert
result.is_a?(Integer)&lt;br&gt;
activesupport/test/core_ext/time_with_zone_test.rb: assert
@twz.is_a?(Time)&lt;br&gt;
activesupport/test/core_ext/time_with_zone_test.rb: assert
@twz.is_a?(ActiveSupport::TimeWithZone)&lt;br&gt;
activesupport/test/core_ext/duration_test.rb: assert
d.is_a?(ActiveSupport::Duration)&lt;br&gt;
activesupport/test/core_ext/duration_test.rb: assert
d.is_a?(Numeric)&lt;br&gt;
activesupport/test/core_ext/duration_test.rb: assert
d.is_a?(Fixnum)&lt;br&gt;
activesupport/test/core_ext/duration_test.rb: assert
!d.is_a?(Hash)&lt;br&gt;
activesupport/test/core_ext/duration_test.rb: assert
!d.is_a?(k)&lt;br&gt;
activesupport/test/core_ext/date_time_ext_test.rb: assert
DateTime.current.is_a?(DateTime)&lt;br&gt;
activesupport/test/core_ext/date_time_ext_test.rb: assert
DateTime.current.is_a?(DateTime)&lt;br&gt;
railties/test/application/rackup_test.rb: assert
Rails.application.is_a?(Rails::Application)&lt;br&gt;
railties/test/application/rackup_test.rb: assert
ActionController::Dispatcher.new.is_a?(Rails::Application)&lt;br&gt;
activerecord/test/cases/inheritance_test.rb: assert
Company.find(1).kind_of?(Firm), &quot;37signals should be a firm&quot;&lt;br&gt;
activerecord/test/cases/inheritance_test.rb: assert
Firm.find(1).kind_of?(Firm), &quot;37signals should be a firm&quot;&lt;br&gt;
activerecord/test/cases/inheritance_test.rb: assert
Company.find(2).kind_of?(Client), &quot;Summit should be a client&quot;&lt;br&gt;
activerecord/test/cases/inheritance_test.rb: assert
Client.find(2).kind_of?(Client), &quot;Summit should be a client&quot;&lt;br&gt;
activerecord/test/cases/inheritance_test.rb: assert
companies[0].kind_of?(Firm), &quot;37signals should be a firm&quot;&lt;br&gt;
activerecord/test/cases/inheritance_test.rb: assert
companies[1].kind_of?(Client), &quot;Summit should be a client&quot;&lt;br&gt;
activerecord/test/cases/inheritance_test.rb: assert
next_angle.kind_of?(Firm), &quot;Next Angle should be a firm&quot;&lt;br&gt;
activesupport/test/core_ext/time_with_zone_test.rb: assert
@twz.kind_of?(Time)&lt;br&gt;
activesupport/test/core_ext/string_ext_test.rb: assert
UNICODE_STRING.mb_chars.kind_of?(String)&lt;br&gt;
activesupport/test/core_ext/string_ext_test.rb: assert
UNICODE_STRING.mb_chars.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/core_ext/string_ext_test.rb: assert
UNICODE_STRING.mb_chars.kind_of?(String)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
@chars.&lt;strong&gt;method_for_multibyte_testing.kind_of?(@proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
@chars.&lt;/strong&gt;method_for_multibyte_testing!.kind_of?(@proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
character.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').insert(0,
'').kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').rjust(1).kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').ljust(1).kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').center(1).kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').rstrip.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').lstrip.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').strip.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').reverse.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert chars('
').slice(0).kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').limit(0).kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').upcase.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').downcase.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').capitalize.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').normalize.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').decompose.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').compose.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
chars('').tidy_bytes.kind_of?(ActiveSupport::Multibyte.proxy_class)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T23:17:32+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4643</number>
      <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_kind_of whenever possible instead of assert</title>
      <updated-at type="datetime">2010-05-18T23:17:36+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>attached is revised patch.

I am spent last few days looking at rails test. So I am going through all the tests one by one trying to understand it and fixing it as I go along. I am done 50% of the files and now I need to take a break. Hence I am sending all the work done as patch.

I will take a look at other test files in second iteration.</body>
      <body-html>&lt;div&gt;&lt;p&gt;attached is revised patch.&lt;/p&gt;
&lt;p&gt;I am spent last few days looking at rails test. So I am going
through all the tests one by one trying to understand it and fixing
it as I go along. I am done 50% of the files and now I need to take
a break. Hence I am sending all the work done as patch.&lt;/p&gt;
&lt;p&gt;I will take a look at other test files in second iteration.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-19T02:29:07+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4643</number>
      <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_kind_of whenever possible instead of assert</title>
      <updated-at type="datetime">2010-05-19T02:29:13+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This ticket can be closed. I am providing patch through #4645 .</body>
      <body-html>&lt;div&gt;&lt;p&gt;This ticket can be closed. I am providing patch through &lt;a href=
&quot;/projects/8994/tickets/4645&quot; title=&quot;Ticket #4645&quot;&gt;#4645&lt;/a&gt; .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-19T02:51:04+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4643</number>
      <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_kind_of whenever possible instead of assert</title>
      <updated-at type="datetime">2010-05-19T02:51:06+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-19T03:19:08+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4643</number>
      <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_kind_of whenever possible instead of assert</title>
      <updated-at type="datetime">2010-05-19T03:19:10+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:10:35+00:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4643</number>
      <permalink>use-assert_kind_of-whenever-possible-instead-of-assert</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_kind_of whenever possible instead of assert</title>
      <updated-at type="datetime">2011-03-26T02:35:45+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">7</version>
      <user-name>bingbing</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4643</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>3e7f2e4554c18b3d324533bc6d890cba3a047a62</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-18T17:08:53+01:00</created-at>
      <filename>4643_fix_against-rails3_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">525150</id>
      <size type="integer">1896</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/525150/4643_fix_against-rails3_edge.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>437414f0204518a32039e34a3ca45fd6bad374fb</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-19T02:29:07+01:00</created-at>
      <filename>4643_fix_against_rails3_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">526057</id>
      <size type="integer">1896</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/526057/4643_fix_against_rails3_edge.diff</url>
    </attachment>
  </attachments>
</ticket>
