<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">12714</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-04-01T12:01:38+01:00</created-at>
  <creator-id type="integer">21958</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4308</number>
  <permalink>patch-restore-changed_attributes-method-in-activemodeldirty</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activemodel patch</tag>
  <title>[PATCH] Restore changed_attributes method in ActiveModel::Dirty</title>
  <updated-at type="datetime">2010-10-15T23:01:50+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">6</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Sam Pohlenz</creator-name>
  <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4308</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>It seems that [this commit](http://github.com/rails/rails/commit/8c3e46c093023f9430c9772e81d58c9ee24de229) removed the @changed_attributes@ method from ActiveModel::Dirty, which lazily loaded the @changed_attributes ivar.

This then required [another commit](http://github.com/rails/rails/commit/f1da7174cc66d70fe8e7352761873f9ff05ca8fa) to ensure that the necessary ivars are initialized. However this still has the major drawback of requiring the including class to call @super@ in its @initialize@ method (depending on the inclusion order). This should not be necessary.

This patch restores the @changed_attributes@ method. It is simpler, it uses a common pattern and removes these specific undocumented requirements on the including code.</original-body>
  <latest-body>It seems that [this commit](http://github.com/rails/rails/commit/8c3e46c093023f9430c9772e81d58c9ee24de229) removed the @changed_attributes@ method from ActiveModel::Dirty, which lazily loaded the @changed_attributes ivar.

This then required [another commit](http://github.com/rails/rails/commit/f1da7174cc66d70fe8e7352761873f9ff05ca8fa) to ensure that the necessary ivars are initialized. However this still has the major drawback of requiring the including class to call @super@ in its @initialize@ method (depending on the inclusion order). This should not be necessary.

This patch restores the @changed_attributes@ method. It is simpler, it uses a common pattern and removes these specific undocumented requirements on the including code.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It seems that &lt;a href=
&quot;http://github.com/rails/rails/commit/8c3e46c093023f9430c9772e81d58c9ee24de229&quot;&gt;
this commit&lt;/a&gt; removed the &lt;code&gt;changed_attributes&lt;/code&gt; method
from ActiveModel::Dirty, which lazily loaded the
@changed_attributes ivar.&lt;/p&gt;
&lt;p&gt;This then required &lt;a href=
&quot;http://github.com/rails/rails/commit/f1da7174cc66d70fe8e7352761873f9ff05ca8fa&quot;&gt;
another commit&lt;/a&gt; to ensure that the necessary ivars are
initialized. However this still has the major drawback of requiring
the including class to call &lt;code&gt;super&lt;/code&gt; in its
&lt;code&gt;initialize&lt;/code&gt; method (depending on the inclusion order).
This should not be necessary.&lt;/p&gt;
&lt;p&gt;This patch restores the &lt;code&gt;changed_attributes&lt;/code&gt; method.
It is simpler, it uses a common pattern and removes these specific
undocumented requirements on the including code.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It seems that [this commit](http://github.com/rails/rails/commit/8c3e46c093023f9430c9772e81d58c9ee24de229) removed the @changed_attributes@ method from ActiveModel::Dirty, which lazily loaded the @changed_attributes ivar.

This then required [another commit](http://github.com/rails/rails/commit/f1da7174cc66d70fe8e7352761873f9ff05ca8fa) to ensure that the necessary ivars are initialized. However this still has the major drawback of requiring the including class to call @super@ in its @initialize@ method (depending on the inclusion order). This should not be necessary.

This patch restores the @changed_attributes@ method. It is simpler, it uses a common pattern and removes these specific undocumented requirements on the including code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems that &lt;a href=
&quot;http://github.com/rails/rails/commit/8c3e46c093023f9430c9772e81d58c9ee24de229&quot;&gt;
this commit&lt;/a&gt; removed the &lt;code&gt;changed_attributes&lt;/code&gt; method
from ActiveModel::Dirty, which lazily loaded the
@changed_attributes ivar.&lt;/p&gt;
&lt;p&gt;This then required &lt;a href=
&quot;http://github.com/rails/rails/commit/f1da7174cc66d70fe8e7352761873f9ff05ca8fa&quot;&gt;
another commit&lt;/a&gt; to ensure that the necessary ivars are
initialized. However this still has the major drawback of requiring
the including class to call &lt;code&gt;super&lt;/code&gt; in its
&lt;code&gt;initialize&lt;/code&gt; method (depending on the inclusion order).
This should not be necessary.&lt;/p&gt;
&lt;p&gt;This patch restores the &lt;code&gt;changed_attributes&lt;/code&gt; method.
It is simpler, it uses a common pattern and removes these specific
undocumented requirements on the including code.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-01T12:01:38+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4308</number>
      <permalink>patch-restore-changed_attributes-method-in-activemodeldirty</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel patch</tag>
      <title>[PATCH] Restore changed_attributes method in ActiveModel::Dirty</title>
      <updated-at type="datetime">2010-04-01T12:01:49+01:00</updated-at>
      <user-id type="integer">21958</user-id>
      <version type="integer">1</version>
      <user-name>Sam Pohlenz</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4308</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Calling super is normal, not a drawback. Using an ivar for localized implementation is simple; lazy loading for initialization is unnecessary when initialize is at our disposal.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Calling super is normal, not a drawback. Using an ivar for
localized implementation is simple; lazy loading for initialization
is unnecessary when initialize is at our disposal.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-01T15:23:27+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4308</number>
      <permalink>patch-restore-changed_attributes-method-in-activemodeldirty</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activemodel patch</tag>
      <title>[PATCH] Restore changed_attributes method in ActiveModel::Dirty</title>
      <updated-at type="datetime">2010-04-01T15:23:30+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4308</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Adding a one-line method (and removing initialize) is simpler than requiring that the including class always call super within its initialize method. Why push this responsibility to the implementer when it is trivial to take care of it in ActiveModel?

Furthermore, with these previous commits, ActiveModel::Dirty is now the only part of AM to require that super is called within initialize, not to mention that this requirement is now undocumented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adding a one-line method (and removing initialize) is simpler
than requiring that the including class always call super within
its initialize method. Why push this responsibility to the
implementer when it is trivial to take care of it in
ActiveModel?&lt;/p&gt;
&lt;p&gt;Furthermore, with these previous commits, ActiveModel::Dirty is
now the only part of AM to require that super is called within
initialize, not to mention that this requirement is now
undocumented.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-02T00:52:05+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4308</number>
      <permalink>patch-restore-changed_attributes-method-in-activemodeldirty</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activemodel patch</tag>
      <title>[PATCH] Restore changed_attributes method in ActiveModel::Dirty</title>
      <updated-at type="datetime">2010-04-02T00:52:08+01:00</updated-at>
      <user-id type="integer">21958</user-id>
      <version type="integer">3</version>
      <user-name>Sam Pohlenz</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4308</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good point and a fine reason to lazy-initialize. Sorry for glossing over that!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good point and a fine reason to lazy-initialize. Sorry for
glossing over that!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-02T01:51:51+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- 
:state: wontfix
:milestone: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4308</number>
      <permalink>patch-restore-changed_attributes-method-in-activemodeldirty</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel patch</tag>
      <title>[PATCH] Restore changed_attributes method in ActiveModel::Dirty</title>
      <updated-at type="datetime">2010-04-02T01:51:52+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4308</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [3adaef8ae73a3061a9fe4c5e0256d80bc09b1cf4]) Restore changed_attributes method in ActiveModel::Dirty and loosen expectation on including class' initialize method.

[#4308 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/3adaef8ae73a3061a9fe4c5e0256d80bc09b1cf4</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/3adaef8ae73a3061a9fe4c5e0256d80bc09b1cf4&quot;
title=
&quot;Changeset [3adaef8ae73a3061a9fe4c5e0256d80bc09b1cf4]&quot;&gt;[3adaef8ae73a3061a9fe4c5e0256d80bc09b1cf4]&lt;/a&gt;)
Restore changed_attributes method in ActiveModel::Dirty and loosen
expectation on including class' initialize method.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4308&quot; title=
&quot;Ticket #4308&quot;&gt;#4308&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/3adaef8ae73a3061a9fe4c5e0256d80bc09b1cf4&quot;&gt;
http://github.com/rails/rails/commit/3adaef8ae73a3061a9fe4c5e0256d8...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-02T01:58:41+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4308</number>
      <permalink>patch-restore-changed_attributes-method-in-activemodeldirty</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activemodel patch</tag>
      <title>[PATCH] Restore changed_attributes method in ActiveModel::Dirty</title>
      <updated-at type="datetime">2010-04-02T01:58:43+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4308</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:50+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4308</number>
      <permalink>patch-restore-changed_attributes-method-in-activemodeldirty</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activemodel patch</tag>
      <title>[PATCH] Restore changed_attributes method in ActiveModel::Dirty</title>
      <updated-at type="datetime">2010-10-15T23:01:50+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4308</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e0d1d97af5595524e64230b8f99d5226381fb2a5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-01T12:01:38+01:00</created-at>
      <filename>restore-changed-attributes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">468116</id>
      <size type="integer">3185</size>
      <uploader-id type="integer">21958</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/468116/restore-changed-attributes.diff</url>
    </attachment>
  </attachments>
</ticket>
