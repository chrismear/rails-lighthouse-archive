<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-09T22:18:04+01:00</created-at>
  <creator-id type="integer">62141</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3179</number>
  <permalink>unexpected-behaviour-in-resource-mapping</permalink>
  <priority type="integer">140212</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.3 map resources routes routing</tag>
  <title>Unexpected behaviour in resource mapping</title>
  <updated-at type="datetime">2010-06-16T23:41:23+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">3</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>cousine</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3179</url>
  <priority-name nil="true"></priority-name>
  <original-body>When :show is excluded from map.resources, the created :destroy route points to the plural of the resource rather than the expected singular (which most url helpers use)

Example:

map.resources :posts, :except =&gt; [:show]

Generates the following routes

     posts GET    /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;new&quot;}
 edit_post GET    /posts/:id/edit(.:format) {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;update&quot;}
           *DELETE /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;destroy&quot;}*

While the expected is

     posts GET    /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;new&quot;}
 edit_post GET    /posts/:id/edit(.:format) {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;update&quot;}
           *DELETE /post/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;destroy&quot;}*</original-body>
  <latest-body>When :show is excluded from map.resources, the created :destroy route points to the plural of the resource rather than the expected singular (which most url helpers use)

Example:

map.resources :posts, :except =&gt; [:show]

Generates the following routes

     posts GET    /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;new&quot;}
 edit_post GET    /posts/:id/edit(.:format) {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;update&quot;}
           *DELETE /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;destroy&quot;}*

While the expected is

     posts GET    /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;new&quot;}
 edit_post GET    /posts/:id/edit(.:format) {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;update&quot;}
           *DELETE /post/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;destroy&quot;}*</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When :show is excluded from map.resources, the created :destroy
route points to the plural of the resource rather than the expected
singular (which most url helpers use)&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;map.resources :posts, :except =&amp;gt; [:show]&lt;/p&gt;
&lt;p&gt;Generates the following routes&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; posts GET    /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;index&quot;}
       POST   /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;create&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;new_post GET /posts/new(.:format) {:controller=&amp;gt;&quot;posts&quot;,
:action=&amp;gt;&quot;new&quot;} edit_post GET /posts/:id/edit(.:format)
{:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;edit&quot;}&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;       PUT    /posts/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;update&quot;}
       *DELETE /posts/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;destroy&quot;}*&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;While the expected is&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; posts GET    /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;index&quot;}
       POST   /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;create&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;new_post GET /posts/new(.:format) {:controller=&amp;gt;&quot;posts&quot;,
:action=&amp;gt;&quot;new&quot;} edit_post GET /posts/:id/edit(.:format)
{:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;edit&quot;}&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;       PUT    /posts/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;update&quot;}
       *DELETE /post/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;destroy&quot;}*&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When :show is excluded from map.resources, the created :destroy route points to the plural of the resource rather than the expected singular (which most url helpers use)

Example:

@@@
map.resources :posts, :except =&gt; [:show]
@@@

Generates the following routes

@@@
     posts GET    /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;new&quot;}
  edit_post GET    /posts/:id/edit(.:format) {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;update&quot;}
           **DELETE /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;destroy&quot;}**
@@@

While the expected route by UrlHelpers is

@@@
     posts GET    /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;new&quot;}
  edit_post GET    /posts/:id/edit(.:format) {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;update&quot;}
           **DELETE /post/:id(.:format)      {:controller=&gt;&quot;posts&quot;, :action=&gt;&quot;destroy&quot;}**
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;When :show is excluded from map.resources, the created :destroy
route points to the plural of the resource rather than the expected
singular (which most url helpers use)&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;map.resources :posts, :except =&amp;gt; [:show]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Generates the following routes&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     posts GET    /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;new&quot;}
  edit_post GET    /posts/:id/edit(.:format) {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;update&quot;}
           **DELETE /posts/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;destroy&quot;}**&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;While the expected route by UrlHelpers is&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     posts GET    /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;index&quot;}
           POST   /posts(.:format)          {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;create&quot;}
  new_post GET    /posts/new(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;new&quot;}
  edit_post GET    /posts/:id/edit(.:format) {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;edit&quot;}
           PUT    /posts/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;update&quot;}
           **DELETE /post/:id(.:format)      {:controller=&amp;gt;&quot;posts&quot;, :action=&amp;gt;&quot;destroy&quot;}**&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-09T22:18:04+01:00</created-at>
      <creator-id type="integer">62141</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3179</number>
      <permalink>unexpected-behaviour-in-resource-mapping</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 map resources routes routing</tag>
      <title>Unexpected behaviour in resource mapping</title>
      <updated-at type="datetime">2009-09-09T22:59:05+01:00</updated-at>
      <user-id type="integer">62141</user-id>
      <version type="integer">1</version>
      <user-name>cousine</user-name>
      <creator-name>cousine</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3179</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After playing around a little, i found that the ambiguity is not caused by resources

for example

@@@
  map.resources :posts, :except =&gt; [:show]
@@@

will correctly generate routes (in plural form) as expected

but if the following routes are drawn

@@@
  map.resources :posts, :except =&gt; [:show]
  map.post &quot;post/:id&quot;, :controller =&gt; 'posts', :action =&gt; 'show', :conditions =&gt; [:method =&gt; :get]
@@@

Polymorphic routes would try to draw a route for delete based on the named route post, thus it generates &quot;post/:id&quot; for destroy while destroy is mapped with &quot;posts/:id&quot;

So far as the overriding route is sticking to the plural convention as the Resources route, no problem occurs, but its only irritating if the overriding route is different

for example this would work fine:

@@@
  map.resources :posts, :except =&gt; [:show]
  map.post &quot;posts/:id&quot;, :controller =&gt; 'posts', :action =&gt; 'show', :conditions =&gt; [:method =&gt; :get]
@@@

but in this case:


@@@
  map.resources :posts, :except =&gt; [:show]
  map.post &quot;blog/:id&quot;, :controller =&gt; 'posts', :action =&gt; 'show', :conditions =&gt; [:method =&gt; :get]
@@@

polymorphic_routes would generate a &quot;blog/:id&quot; for the destroy action, while its correct route is &quot;posts/:id&quot;, to further show the irritation behind this, i found a solution which involves changing the resources statement to this:


@@@
  map.resources :posts, :except =&gt; [:show], :as =&gt; &quot;blog&quot;
  map.post &quot;blog/:id&quot;, :controller =&gt; 'posts', :action =&gt; 'show', :conditions =&gt; [:method =&gt; :get]
@@@

this will solve the problem, but will change the entire route group to blog instead of posts, and &quot;blog/new&quot; is not equal in meaning as &quot;posts/new&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After playing around a little, i found that the ambiguity is not
caused by resources&lt;/p&gt;
&lt;p&gt;for example&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  map.resources :posts, :except =&amp;gt; [:show]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will correctly generate routes (in plural form) as expected&lt;/p&gt;
&lt;p&gt;but if the following routes are drawn&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  map.resources :posts, :except =&amp;gt; [:show]
  map.post &quot;post/:id&quot;, :controller =&amp;gt; 'posts', :action =&amp;gt; 'show', :conditions =&amp;gt; [:method =&amp;gt; :get]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Polymorphic routes would try to draw a route for delete based on
the named route post, thus it generates &quot;post/:id&quot; for destroy
while destroy is mapped with &quot;posts/:id&quot;&lt;/p&gt;
&lt;p&gt;So far as the overriding route is sticking to the plural
convention as the Resources route, no problem occurs, but its only
irritating if the overriding route is different&lt;/p&gt;
&lt;p&gt;for example this would work fine:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  map.resources :posts, :except =&amp;gt; [:show]
  map.post &quot;posts/:id&quot;, :controller =&amp;gt; 'posts', :action =&amp;gt; 'show', :conditions =&amp;gt; [:method =&amp;gt; :get]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but in this case:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  map.resources :posts, :except =&amp;gt; [:show]
  map.post &quot;blog/:id&quot;, :controller =&amp;gt; 'posts', :action =&amp;gt; 'show', :conditions =&amp;gt; [:method =&amp;gt; :get]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;polymorphic_routes would generate a &quot;blog/:id&quot; for the destroy
action, while its correct route is &quot;posts/:id&quot;, to further show the
irritation behind this, i found a solution which involves changing
the resources statement to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  map.resources :posts, :except =&amp;gt; [:show], :as =&amp;gt; &quot;blog&quot;
  map.post &quot;blog/:id&quot;, :controller =&amp;gt; 'posts', :action =&amp;gt; 'show', :conditions =&amp;gt; [:method =&amp;gt; :get]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this will solve the problem, but will change the entire route
group to blog instead of posts, and &quot;blog/new&quot; is not equal in
meaning as &quot;posts/new&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-10T00:13:08+01:00</created-at>
      <creator-id type="integer">62141</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3179</number>
      <permalink>unexpected-behaviour-in-resource-mapping</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 map resources routes routing</tag>
      <title>Unexpected behaviour in resource mapping</title>
      <updated-at type="datetime">2009-09-10T00:13:09+01:00</updated-at>
      <user-id type="integer">62141</user-id>
      <version type="integer">2</version>
      <user-name>cousine</user-name>
      <creator-name>cousine</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3179</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>By defining `map.post` you are overriding `post_path`/`post_url`, which is why you were seeing it going to the &quot;wrong&quot; route. Closing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;By defining &lt;code&gt;map.post&lt;/code&gt; you are overriding
&lt;code&gt;post_path&lt;/code&gt;/&lt;code&gt;post_url&lt;/code&gt;, which is why you were
seeing it going to the &quot;wrong&quot; route. Closing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-16T23:41:13+01:00</created-at>
      <creator-id type="integer">62141</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3179</number>
      <permalink>unexpected-behaviour-in-resource-mapping</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3 map resources routes routing</tag>
      <title>Unexpected behaviour in resource mapping</title>
      <updated-at type="datetime">2010-06-16T23:41:23+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>cousine</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3179</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
