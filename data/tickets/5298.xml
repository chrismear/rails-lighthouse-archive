<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-04T18:14:21+01:00</created-at>
  <creator-id type="integer">103676</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5298</number>
  <permalink>railsapplication-deprecation-warning-gets-caller-wrong</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;rails 300rc&quot; rails3rc</tag>
  <title>Rails::Application deprecation warning gets caller wrong</title>
  <updated-at type="datetime">2011-02-02T18:55:10+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Samuel Kadolph</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5298</url>
  <priority-name nil="true"></priority-name>
  <original-body>In rails 3.0.0.rc, using `Rails::Application` has had a deprecation warning added opting instead for `Rails.application`. The current code that calls the warning isn't capturing the right line of code of the offender.

Calling a method on `Rails::Application` that is fulfilled with `method_missing` calls the method `instance` where the warning is located. `caller` is used for the warning and at the time has the `method_missing` call at the top of the stack which is then used to display the warning location.

    def HomeController &lt; ApplicationController
      def index
        Rails::Application
      end
    end

Current warning:
&gt; DEPRECATION WARNING: Calling a method in Rails::Application is...
&gt; (called from method_missing at .../railties-3.0.0.rc/lib/rails/application.rb:77)

The correct warning should be this:

&gt; DEPRECATION WARNING: Calling a method in Rails::Application is...
&gt; (called from index at .../app/controllers/home_controller.rb:5)

&lt;br&gt;
I don't know if it's a good solution, but I fixed it quickly by changed the `caller` argument in `railties-3.0.0.rc/lib/rails/application.rb` on line 54 to

    &quot;please call ...snip... #{Rails.application.class.name}.&quot;, caller[1..-1]</original-body>
  <latest-body>In rails 3.0.0.rc, using `Rails::Application` has had a deprecation warning added opting instead for `Rails.application`. The current code that calls the warning isn't capturing the right line of code of the offender.

Calling a method on `Rails::Application` that is fulfilled with `method_missing` calls the method `instance` where the warning is located. `caller` is used for the warning and at the time has the `method_missing` call at the top of the stack which is then used to display the warning location.

    def HomeController &lt; ApplicationController
      def index
        Rails::Application
      end
    end

Current warning:
&gt; DEPRECATION WARNING: Calling a method in Rails::Application is...
&gt; (called from method_missing at .../railties-3.0.0.rc/lib/rails/application.rb:77)

The correct warning should be this:

&gt; DEPRECATION WARNING: Calling a method in Rails::Application is...
&gt; (called from index at .../app/controllers/home_controller.rb:5)

&lt;br&gt;
I don't know if it's a good solution, but I fixed it quickly by changed the `caller` argument in `railties-3.0.0.rc/lib/rails/application.rb` on line 54 to

    &quot;please call ...snip... #{Rails.application.class.name}.&quot;, caller[1..-1]</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In rails 3.0.0.rc, using &lt;code&gt;Rails::Application&lt;/code&gt; has had
a deprecation warning added opting instead for
&lt;code&gt;Rails.application&lt;/code&gt;. The current code that calls the
warning isn't capturing the right line of code of the offender.&lt;/p&gt;
&lt;p&gt;Calling a method on &lt;code&gt;Rails::Application&lt;/code&gt; that is
fulfilled with &lt;code&gt;method_missing&lt;/code&gt; calls the method
&lt;code&gt;instance&lt;/code&gt; where the warning is located.
&lt;code&gt;caller&lt;/code&gt; is used for the warning and at the time has the
&lt;code&gt;method_missing&lt;/code&gt; call at the top of the stack which is
then used to display the warning location.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def HomeController &amp;lt; ApplicationController
  def index
    Rails::Application
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Current warning:&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DEPRECATION WARNING: Calling a method in Rails::Application
is... (called from method_missing at
.../railties-3.0.0.rc/lib/rails/application.rb:77)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The correct warning should be this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DEPRECATION WARNING: Calling a method in Rails::Application
is... (called from index at
.../app/controllers/home_controller.rb:5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;p&gt;I don't know if it's a good solution, but I fixed it quickly by
changed the &lt;code&gt;caller&lt;/code&gt; argument in
&lt;code&gt;railties-3.0.0.rc/lib/rails/application.rb&lt;/code&gt; on line 54
to&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&quot;please call ...snip... #{Rails.application.class.name}.&quot;, caller[1..-1]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In rails 3.0.0.rc, using `Rails::Application` has had a deprecation warning added opting instead for `Rails.application`. The current code that calls the warning isn't capturing the right line of code of the offender.

Calling a method on `Rails::Application` that is fulfilled with `method_missing` calls the method `instance` where the warning is located. `caller` is used for the warning and at the time has the `method_missing` call at the top of the stack which is then used to display the warning location.

    def HomeController &lt; ApplicationController
      def index
        Rails::Application
      end
    end

Current warning:
&gt; DEPRECATION WARNING: Calling a method in Rails::Application is...
&gt; (called from method_missing at .../railties-3.0.0.rc/lib/rails/application.rb:77)

The correct warning should be this:

&gt; DEPRECATION WARNING: Calling a method in Rails::Application is...
&gt; (called from index at .../app/controllers/home_controller.rb:5)

&lt;br&gt;
I don't know if it's a good solution, but I fixed it quickly by changed the `caller` argument in `railties-3.0.0.rc/lib/rails/application.rb` on line 54 to

    &quot;please call ...snip... #{Rails.application.class.name}.&quot;, caller[1..-1]</body>
      <body-html>&lt;div&gt;&lt;p&gt;In rails 3.0.0.rc, using &lt;code&gt;Rails::Application&lt;/code&gt; has had
a deprecation warning added opting instead for
&lt;code&gt;Rails.application&lt;/code&gt;. The current code that calls the
warning isn't capturing the right line of code of the offender.&lt;/p&gt;
&lt;p&gt;Calling a method on &lt;code&gt;Rails::Application&lt;/code&gt; that is
fulfilled with &lt;code&gt;method_missing&lt;/code&gt; calls the method
&lt;code&gt;instance&lt;/code&gt; where the warning is located.
&lt;code&gt;caller&lt;/code&gt; is used for the warning and at the time has the
&lt;code&gt;method_missing&lt;/code&gt; call at the top of the stack which is
then used to display the warning location.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def HomeController &amp;lt; ApplicationController
  def index
    Rails::Application
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Current warning:&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DEPRECATION WARNING: Calling a method in Rails::Application
is... (called from method_missing at
.../railties-3.0.0.rc/lib/rails/application.rb:77)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The correct warning should be this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DEPRECATION WARNING: Calling a method in Rails::Application
is... (called from index at
.../app/controllers/home_controller.rb:5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;p&gt;I don't know if it's a good solution, but I fixed it quickly by
changed the &lt;code&gt;caller&lt;/code&gt; argument in
&lt;code&gt;railties-3.0.0.rc/lib/rails/application.rb&lt;/code&gt; on line 54
to&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&quot;please call ...snip... #{Rails.application.class.name}.&quot;, caller[1..-1]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T18:14:21+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5298</number>
      <permalink>railsapplication-deprecation-warning-gets-caller-wrong</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rails 3.0.0.rc&quot; rails3rc</tag>
      <title>Rails::Application deprecation warning gets caller wrong</title>
      <updated-at type="datetime">2010-08-04T18:14:23+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">1</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5298</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:00:46+00:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;rails 3.0.0.rc\&quot; rails3rc&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5298</number>
      <permalink>railsapplication-deprecation-warning-gets-caller-wrong</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails 300rc&quot; rails3rc</tag>
      <title>Rails::Application deprecation warning gets caller wrong</title>
      <updated-at type="datetime">2011-02-02T18:55:10+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5298</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:00:48+00:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5298</number>
      <permalink>railsapplication-deprecation-warning-gets-caller-wrong</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;rails 300rc&quot; rails3rc</tag>
      <title>Rails::Application deprecation warning gets caller wrong</title>
      <updated-at type="datetime">2011-02-02T18:54:27+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5298</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
