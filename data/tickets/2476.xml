<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:17+00:00</created-at>
  <creator-id type="integer">47299</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">82855</milestone-id>
  <number type="integer">2476</number>
  <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
  <priority type="integer">1625</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>232 activerecord bug bugmash patch ruby19</tag>
  <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
  <updated-at type="datetime">2011-02-19T09:28:17+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">37</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Hector E. Gomez Morales</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
  <milestone-title>2.3.10</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>From #2188:

Hello! We've got the same problem! Only the error occurs when we fetch data from the database. We're using Mysql and Charset is UTF-8, but the Active Record returns ASCII-8BIT. Is it possible to do similar changes to the activerecord as you did to the actionpack? Seems as we're not the only ones with that problem

## Problem
Fetching data from any database (Mysql, Postgresql, Sqlite2 &amp; 3), all configured to have UTF-8 as it's character set still returns the data with ASCII-8BIT in ruby 1.9.1 and rails 2.3.2.1

This has been reported in #2188 and in the rails talk group (1).

## Possible Solution
Again like in #2188 rails is not the culprit here the only problem with rails is it inherent trust that all the data it gets is UTF-8. When the data is in another encoding the problems arise.

The real problem is that all the adapters use native C extensions as glue in which they use rb_str_new function that in ruby 1.9.1 creates a String with ASCII-8BIT encoding (2). So that is why all the data is returned with this encoding. Because the initial problems where detected in MySQL(mysql-ruby) I made the needed modification and created a fork in github (3). This fork is only 1.9.1 compatible, returns ASCII-8BIT for binary fields and UTF-8 for all other fields.

With this modified mysql-ruby gem, all activerecord test for mysql passes except test_validate_case_sensitive_uniqueness.
This is because in the implementation of this validation the data is downcase and a query using LOWER() in the unique field is executed. The downcase in ruby 1.8.1 for non-ASCII strings is done with MultiByte Given that in ruby 1.9.1 downcase still does nothing for non-ASCII encoding strings so I use Multibyte downcase method to do it.

I attach a patch so validates_uniqueness uses Multibyte downcase method on the string if we are using ruby 1.9.1.
With this patch all test pass.

Links

1. [Rails Group Post](http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/45cf95921c8fe21f/8864497725a0a4af?lnk=raot)
2. [ASCII-8BIT default in rb_str_new](http://www.archivum.info/comp.lang.ruby/2008-08/msg02515.html)
3. [mysql-ruby fork](http://github.com/hectoregm/mysql-ruby/tree/master)</original-body>
  <latest-body>From #2188:

Hello! We've got the same problem! Only the error occurs when we fetch data from the database. We're using Mysql and Charset is UTF-8, but the Active Record returns ASCII-8BIT. Is it possible to do similar changes to the activerecord as you did to the actionpack? Seems as we're not the only ones with that problem

## Problem
Fetching data from any database (Mysql, Postgresql, Sqlite2 &amp; 3), all configured to have UTF-8 as it's character set still returns the data with ASCII-8BIT in ruby 1.9.1 and rails 2.3.2.1

This has been reported in #2188 and in the rails talk group (1).

## Possible Solution
Again like in #2188 rails is not the culprit here the only problem with rails is it inherent trust that all the data it gets is UTF-8. When the data is in another encoding the problems arise.

The real problem is that all the adapters use native C extensions as glue in which they use rb_str_new function that in ruby 1.9.1 creates a String with ASCII-8BIT encoding (2). So that is why all the data is returned with this encoding. Because the initial problems where detected in MySQL(mysql-ruby) I made the needed modification and created a fork in github (3). This fork is only 1.9.1 compatible, returns ASCII-8BIT for binary fields and UTF-8 for all other fields.

With this modified mysql-ruby gem, all activerecord test for mysql passes except test_validate_case_sensitive_uniqueness.
This is because in the implementation of this validation the data is downcase and a query using LOWER() in the unique field is executed. The downcase in ruby 1.8.1 for non-ASCII strings is done with MultiByte Given that in ruby 1.9.1 downcase still does nothing for non-ASCII encoding strings so I use Multibyte downcase method to do it.

I attach a patch so validates_uniqueness uses Multibyte downcase method on the string if we are using ruby 1.9.1.
With this patch all test pass.

Links

1. [Rails Group Post](http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/45cf95921c8fe21f/8864497725a0a4af?lnk=raot)
2. [ASCII-8BIT default in rb_str_new](http://www.archivum.info/comp.lang.ruby/2008-08/msg02515.html)
3. [mysql-ruby fork](http://github.com/hectoregm/mysql-ruby/tree/master)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;From &lt;a href=&quot;/projects/8994/tickets/2188&quot; title=&quot;Ticket #2188&quot;&gt;#2188&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Hello! We've got the same problem! Only the error occurs when we
fetch data from the database. We're using Mysql and Charset is
UTF-8, but the Active Record returns ASCII-8BIT. Is it possible to
do similar changes to the activerecord as you did to the
actionpack? Seems as we're not the only ones with that problem&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;Fetching data from any database (Mysql, Postgresql, Sqlite2
&amp;amp; 3), all configured to have UTF-8 as it's character set still
returns the data with ASCII-8BIT in ruby 1.9.1 and rails
2.3.2.1&lt;/p&gt;
&lt;p&gt;This has been reported in &lt;a href=&quot;/projects/8994/tickets/2188&quot; title=&quot;Ticket #2188&quot;&gt;#2188&lt;/a&gt; and in the rails talk group (1).&lt;/p&gt;
&lt;h2&gt;Possible Solution&lt;/h2&gt;
&lt;p&gt;Again like in &lt;a href=&quot;/projects/8994/tickets/2188&quot; title=&quot;Ticket #2188&quot;&gt;#2188&lt;/a&gt; rails is not the culprit here the only
problem with rails is it inherent trust that all the data it gets
is UTF-8. When the data is in another encoding the problems
arise.&lt;/p&gt;
&lt;p&gt;The real problem is that all the adapters use native C
extensions as glue in which they use rb_str_new function that in
ruby 1.9.1 creates a String with ASCII-8BIT encoding (2). So that
is why all the data is returned with this encoding. Because the
initial problems where detected in MySQL(mysql-ruby) I made the
needed modification and created a fork in github (3). This fork is
only 1.9.1 compatible, returns ASCII-8BIT for binary fields and
UTF-8 for all other fields.&lt;/p&gt;
&lt;p&gt;With this modified mysql-ruby gem, all activerecord test for
mysql passes except test_validate_case_sensitive_uniqueness. This
is because in the implementation of this validation the data is
downcase and a query using LOWER() in the unique field is executed.
The downcase in ruby 1.8.1 for non-ASCII strings is done with
MultiByte Given that in ruby 1.9.1 downcase still does nothing for
non-ASCII encoding strings so I use Multibyte downcase method to do
it.&lt;/p&gt;
&lt;p&gt;I attach a patch so validates_uniqueness uses Multibyte downcase
method on the string if we are using ruby 1.9.1. With this patch
all test pass.&lt;/p&gt;
&lt;p&gt;Links&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/45cf95921c8fe21f/8864497725a0a4af?lnk=raot&quot;&gt;
Rails Group Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.archivum.info/comp.lang.ruby/2008-08/msg02515.html&quot;&gt;ASCII-8BIT
default in rb_str_new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/hectoregm/mysql-ruby/tree/master&quot;&gt;mysql-ruby
fork&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>From #2188:

Hello! We've got the same problem! Only the error occurs when we fetch data from the database. We're using Mysql and Charset is UTF-8, but the Active Record returns ASCII-8BIT. Is it possible to do similar changes to the activerecord as you did to the actionpack? Seems as we're not the only ones with that problem

## Problem
Fetching data from any database (Mysql, Postgresql, Sqlite2 &amp; 3), all configured to have UTF-8 as it's character set, returns the data with ASCII-8BIT in ruby 1.9.1 and rails 2.3.2.1.

This has been reported in #2188 and in the rails talk group (1).

## Possible Solution
Again like in #2188 rails is not the culprit here, the only problem with rails is it inherent trust that all the data it gets is UTF-8. When the data has another encoding is when the problems arise.

The real problem is that all the current adapters use native C extensions as glue in which they use rb_str_new function that in ruby 1.9.1 creates a String with ASCII-8BIT encoding (2). So that is why all the data is returned with this encoding.

Because the initial problems where detected in MySQL. I made the needed modifications and created a fork in github (3) for mysql-ruby . This fork is only 1.9.1 compatible, returns ASCII-8BIT for binary fields and UTF-8 for all other fields.

With this modified mysql-ruby gem, all activerecord test for mysql passes except test_validate_case_sensitive_uniqueness.
The test will fail for all adapters that are encoding aware, this is because in the implementation of this validation the value that need to be unique is converted to downcase and a query using LOWER(#{field}) in the unique field is executed. The downcase in ruby 1.8.1 for non-ASCII strings is done with MultiByte, given that in ruby 1.9.1 downcase still does nothing for non-ASCII encoding strings I use Multibyte#downcase to do the conversion.

I attach a patch so validates_uniqueness uses Multibyte#downcase on the string if we are using ruby 1.9.1.
With this patch all test pass for test_mysql in activerecord.

## TODO
* Make all the other adapters 1.9.1 compatible AND encoding aware.
* Remove hardcoded encoding use of UTF-8 and use the character set used by the DB.

Links

1. [Rails Group Post](http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/45cf95921c8fe21f/8864497725a0a4af?lnk=raot)
2. [ASCII-8BIT default in rb_str_new](http://www.archivum.info/comp.lang.ruby/2008-08/msg02515.html)
3. [mysql-ruby fork](http://github.com/hectoregm/mysql-ruby/tree/master)</body>
      <body-html>&lt;div&gt;&lt;p&gt;From &lt;a href=&quot;/projects/8994/tickets/2188&quot; title=&quot;Ticket #2188&quot;&gt;#2188&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Hello! We've got the same problem! Only the error occurs when we
fetch data from the database. We're using Mysql and Charset is
UTF-8, but the Active Record returns ASCII-8BIT. Is it possible to
do similar changes to the activerecord as you did to the
actionpack? Seems as we're not the only ones with that problem&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;Fetching data from any database (Mysql, Postgresql, Sqlite2
&amp;amp; 3), all configured to have UTF-8 as it's character set,
returns the data with ASCII-8BIT in ruby 1.9.1 and rails
2.3.2.1.&lt;/p&gt;
&lt;p&gt;This has been reported in &lt;a href=&quot;/projects/8994/tickets/2188&quot; title=&quot;Ticket #2188&quot;&gt;#2188&lt;/a&gt; and in the rails talk group (1).&lt;/p&gt;
&lt;h2&gt;Possible Solution&lt;/h2&gt;
&lt;p&gt;Again like in &lt;a href=&quot;/projects/8994/tickets/2188&quot; title=&quot;Ticket #2188&quot;&gt;#2188&lt;/a&gt; rails is not the culprit here, the only
problem with rails is it inherent trust that all the data it gets
is UTF-8. When the data has another encoding is when the problems
arise.&lt;/p&gt;
&lt;p&gt;The real problem is that all the current adapters use native C
extensions as glue in which they use rb_str_new function that in
ruby 1.9.1 creates a String with ASCII-8BIT encoding (2). So that
is why all the data is returned with this encoding.&lt;/p&gt;
&lt;p&gt;Because the initial problems where detected in MySQL. I made the
needed modifications and created a fork in github (3) for
mysql-ruby . This fork is only 1.9.1 compatible, returns ASCII-8BIT
for binary fields and UTF-8 for all other fields.&lt;/p&gt;
&lt;p&gt;With this modified mysql-ruby gem, all activerecord test for
mysql passes except test_validate_case_sensitive_uniqueness. The
test will fail for all adapters that are encoding aware, this is
because in the implementation of this validation the value that
need to be unique is converted to downcase and a query using
LOWER(#{field}) in the unique field is executed. The downcase in
ruby 1.8.1 for non-ASCII strings is done with MultiByte, given that
in ruby 1.9.1 downcase still does nothing for non-ASCII encoding
strings I use Multibyte#downcase to do the conversion.&lt;/p&gt;
&lt;p&gt;I attach a patch so validates_uniqueness uses Multibyte#downcase
on the string if we are using ruby 1.9.1. With this patch all test
pass for test_mysql in activerecord.&lt;/p&gt;
&lt;h2&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make all the other adapters 1.9.1 compatible AND encoding
aware.&lt;/li&gt;
&lt;li&gt;Remove hardcoded encoding use of UTF-8 and use the character
set used by the DB.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Links&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/45cf95921c8fe21f/8864497725a0a4af?lnk=raot&quot;&gt;
Rails Group Post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.archivum.info/comp.lang.ruby/2008-08/msg02515.html&quot;&gt;ASCII-8BIT
default in rb_str_new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/hectoregm/mysql-ruby/tree/master&quot;&gt;mysql-ruby
fork&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-10T16:36:25+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-04-11T16:56:43+01:00</updated-at>
      <user-id type="integer">47299</user-id>
      <version type="integer">1</version>
      <user-name>Hector E. Gomez Morales</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-10T16:38:46+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 activerecord bug patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-04-10T16:38:50+01:00</updated-at>
      <user-id type="integer">47299</user-id>
      <version type="integer">2</version>
      <user-name>Hector E. Gomez Morales</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Instead of

@@@ ruby
nvalue = ActiveSupport::Multibyte::Chars.new(value)
condition_params = [nvalue.downcase]
@@@

You can just do

@@@ ruby
condition_params  = [value.mb_chars.downcase]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Instead of&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
nvalue = ActiveSupport::Multibyte::Chars.new(value)
condition_params = [nvalue.downcase]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can just do&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
condition_params  = [value.mb_chars.downcase]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-11T14:13:26+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-04-11T14:13:30+01:00</updated-at>
      <user-id type="integer">8407</user-id>
      <version type="integer">3</version>
      <user-name>Manfred Stienstra</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Well the problem is that $KCODE is not set in ruby19 so the call to mb_chars doesn't proxy the string. So that why I did the explicit wrapping.

@@@ Ruby
activesupport/lib/active_support/core_ext/string/multibyte.rb
def mb_chars
  if ActiveSupport::Multibyte.proxy_class.wants?(self)
    ActiveSupport::Multibyte.proxy_class.new(self)
  else
    self
  end
end

activesupport/lib/active_support/multibyte/chars.rb
def self.wants?(string)
  $KCODE == 'UTF8' &amp;&amp; consumes?(string)
end

railties/lib/initializer.rb 
def initialize_encoding
  $KCODE='u' if RUBY_VERSION &lt; '1.9'
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well the problem is that $KCODE is not set in ruby19 so the call
to mb_chars doesn't proxy the string. So that why I did the
explicit wrapping.&lt;/p&gt;
&lt;p&gt;@@@ Ruby
activesupport/lib/active_support/core_ext/string/multibyte.rb def
mb_chars if ActiveSupport::Multibyte.proxy_class.wants?(self)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveSupport::Multibyte.proxy_class.new(self)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;else&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;self
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;activesupport/lib/active_support/multibyte/chars.rb def
self.wants?(string) $KCODE == 'UTF8' &amp;amp;&amp;amp; consumes?(string)
end&lt;/p&gt;
&lt;p&gt;railties/lib/initializer.rb def initialize_encoding $KCODE='u'
if RUBY_VERSION &amp;lt; '1.9' end&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-11T16:51:09+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-04-11T16:51:12+01:00</updated-at>
      <user-id type="integer">47299</user-id>
      <version type="integer">4</version>
      <user-name>Hector E. Gomez Morales</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry again posting the code

@@@ ruby

# activesupport/lib/active_support/core_ext/string/multibyte.rb
def mb_chars
  if ActiveSupport::Multibyte.proxy_class.wants?(self)
    ActiveSupport::Multibyte.proxy_class.new(self)
  else
    self
  end
end

# activesupport/lib/active_support/multibyte/chars.rb
def self.wants?(string)
  $KCODE == 'UTF8' &amp;&amp; consumes?(string)
end

# railties/lib/initializer.rb 
def initialize_encoding
  $KCODE='u' if RUBY_VERSION &lt; '1.9'
end

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry again posting the code&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;

# activesupport/lib/active_support/core_ext/string/multibyte.rb
def mb_chars
  if ActiveSupport::Multibyte.proxy_class.wants?(self)
    ActiveSupport::Multibyte.proxy_class.new(self)
  else
    self
  end
end

# activesupport/lib/active_support/multibyte/chars.rb
def self.wants?(string)
  $KCODE == 'UTF8' &amp;amp;&amp;amp; consumes?(string)
end

# railties/lib/initializer.rb 
def initialize_encoding
  $KCODE='u' if RUBY_VERSION &amp;lt; '1.9'
end

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-11T16:54:39+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-04-11T16:54:44+01:00</updated-at>
      <user-id type="integer">47299</user-id>
      <version type="integer">5</version>
      <user-name>Hector E. Gomez Morales</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ah, right. I'll try to think of a way to access the proxy in Ruby 1.9.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ah, right. I'll try to think of a way to access the proxy in
Ruby 1.9.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-11T21:52:05+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-04-11T21:52:07+01:00</updated-at>
      <user-id type="integer">8407</user-id>
      <version type="integer">6</version>
      <user-name>Manfred Stienstra</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>is there any patch for activerecord or sqlite and postgre-pr gem?</body>
      <body-html>&lt;div&gt;&lt;p&gt;is there any patch for activerecord or sqlite and postgre-pr
gem?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-04T23:06:12+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-05-04T23:06:15+01:00</updated-at>
      <user-id type="integer">56034</user-id>
      <version type="integer">7</version>
      <user-name>smixok (at gmail)</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry Hector, but your patch to Ruby-MySQL doesn't fully solve the problem.

@@@ if (fields[i].type == MYSQL_TYPE_BLOB) @@@

The comparison with MYSQL_TYPE_BLOB also includes TEXT (TINYTEXT, MEDIUMTEXT, LONGTEXT) fields. All content stored in these also comes back ASCII-8BIT encoded.

Link:
http://github.com/hectoregm/mysql-ruby/commit/99c7716f3d1f9d7fa253baae9f0aa7ca4991cd29#L0L1077</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry Hector, but your patch to Ruby-MySQL doesn't fully solve
the problem.&lt;/p&gt;
&lt;p&gt;@@@ if (fields[i].type == MYSQL_TYPE_BLOB) @@@&lt;/p&gt;
&lt;p&gt;The comparison with MYSQL_TYPE_BLOB also includes TEXT
(TINYTEXT, MEDIUMTEXT, LONGTEXT) fields. All content stored in
these also comes back ASCII-8BIT encoded.&lt;/p&gt;
&lt;p&gt;Link: &lt;a href=&quot;http://github.com/hectoregm/mysql-ruby/commit/99c7716f3d1f9d7fa253baae9f0aa7ca4991cd29#L0L1077&quot;&gt;
http://github.com/hectoregm/mysq...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-09T16:30:15+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-05-09T16:30:22+01:00</updated-at>
      <user-id type="integer">22608</user-id>
      <version type="integer">8</version>
      <user-name>Dimitrij Denissenko</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've fixed sqlite3-ruby gem (version 1.2.5) http://github.com/qoobaa/sqlite3-ruby/tree/master. The problem with ASCII-8BIT encoding is in Rack also, I've created a patch to fix it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've fixed sqlite3-ruby gem (version 1.2.5) &lt;a href=
&quot;http://github.com/qoobaa/sqlite3-ruby/tree/master&quot;&gt;http://github.com/qoobaa/sqlite3-ruby/tree/master&lt;/a&gt;.
The problem with ASCII-8BIT encoding is in Rack also, I've created
a patch to fix it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-13T09:05:45+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-05-13T09:05:47+01:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">9</version>
      <user-name>qoobaa</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I agree with the goal of a database driver that correctly sets the encoding of strings, however hard coding all strings to UTF-8 seems like we'd be shooting ourselves in the foot.

The problem with encoding issues is that often the wrong solution does the right thing 95% of the time. Sure most of us writing web apps these days operate in UTF-8, but when some poor sod rocks up with a UTF-16 encoded database we'd break her data.

I've never used the MySQL C API, but surely there's a way to detect the encoding of the current DB/table/column?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with the goal of a database driver that correctly sets
the encoding of strings, however hard coding all strings to UTF-8
seems like we'd be shooting ourselves in the foot.&lt;/p&gt;
&lt;p&gt;The problem with encoding issues is that often the wrong
solution does the right thing 95% of the time. Sure most of us
writing web apps these days operate in UTF-8, but when some poor
sod rocks up with a UTF-16 encoded database we'd break her
data.&lt;/p&gt;
&lt;p&gt;I've never used the MySQL C API, but surely there's a way to
detect the encoding of the current DB/table/column?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-16T12:59:00+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-06-16T12:59:06+01:00</updated-at>
      <user-id type="integer">18344</user-id>
      <version type="integer">10</version>
      <user-name>James Healy</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I second James Healy's approach. Blindly setting the encoding of all strings from the database to UTF-8 is short-sighted.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I second James Healy's approach. Blindly setting the encoding of
all strings from the database to UTF-8 is short-sighted.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-16T19:51:43+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-06-16T19:51:49+01:00</updated-at>
      <user-id type="integer">48519</user-id>
      <version type="integer">11</version>
      <user-name>Brendan Schwartz</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Agreed. I do the same thing in the SQL Server adapter.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Agreed. I do the same thing in the SQL Server adapter.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-16T19:57:49+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-06-16T19:57:56+01:00</updated-at>
      <user-id type="integer">15346</user-id>
      <version type="integer">12</version>
      <user-name>Ken Collins</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>James &amp; Brendan, patches are very welcome!</body>
      <body-html>&lt;div&gt;&lt;p&gt;James &amp;amp; Brendan, patches are very welcome!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-16T21:30:42+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-06-16T21:30:49+01:00</updated-at>
      <user-id type="integer">8407</user-id>
      <version type="integer">13</version>
      <user-name>Manfred Stienstra</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I decided to investigate further and picked MySQL as my guinea pig.

I can see two possible approaches.

1. We patch the MySQL/Ruby driver to return strings marked with an appropriate encoding. To do so it would need to track the value of the character_set_results MySQL variable which indicates the character set MySQL will return results in. I'm not sure what 'tracking' that variable would involve. Since it can be changed at any time, the driver would need to regularly check (and cache?) the value.

2. We patch the ActiveRecord MySQL Adapter. This leaves the driver encoding unaware - it more or less just passes byte arrays between AR and the MySQL server in blissful ignorance of the encoding. If the AR MySQL Adapter notices it has encoding: set in it's config, it can take the ASCII-8BIT/BINARY strings the driver hands it and force the encoding to something appropriate.

Either approach looks achievable without too much work. I'm keen to attempt on of them, but I think I'll mull over the options for a while first.

Any thoughts? Ken - it sounds like you modified the SQL Server Adapter and not the driver?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I decided to investigate further and picked MySQL as my guinea
pig.&lt;/p&gt;
&lt;p&gt;I can see two possible approaches.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We patch the MySQL/Ruby driver to return strings marked with an
appropriate encoding. To do so it would need to track the value of
the character_set_results MySQL variable which indicates the
character set MySQL will return results in. I'm not sure what
'tracking' that variable would involve. Since it can be changed at
any time, the driver would need to regularly check (and cache?) the
value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We patch the ActiveRecord MySQL Adapter. This leaves the driver
encoding unaware - it more or less just passes byte arrays between
AR and the MySQL server in blissful ignorance of the encoding. If
the AR MySQL Adapter notices it has encoding: set in it's config,
it can take the ASCII-8BIT/BINARY strings the driver hands it and
force the encoding to something appropriate.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Either approach looks achievable without too much work. I'm keen
to attempt on of them, but I think I'll mull over the options for a
while first.&lt;/p&gt;
&lt;p&gt;Any thoughts? Ken - it sounds like you modified the SQL Server
Adapter and not the driver?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-17T02:15:22+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-06-17T02:15:29+01:00</updated-at>
      <user-id type="integer">18344</user-id>
      <version type="integer">14</version>
      <user-name>James Healy</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It took my a little while to get it, but I've got a proposed patch for the MysqlAdaptor on github @ http://github.com/yob/rails/commit/986b8c99331d68087eaa0a703f4121c5c73b95ad.

I took approach (2) from my earlier comment. The Mysql driver remains encoding unaware, and all results are stored in the AR model attributes hash marked as &quot;BINARY&quot; encoding. 

Traditionally non string attributes are type cast on demand (converted to ints, dates, etc) and strings are left untouched. This patch adds a type casting process for string attributes that &quot;fixes&quot; the encoding to match what the user has specified in database.yml.

The commit message has a few extra details.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It took my a little while to get it, but I've got a proposed
patch for the MysqlAdaptor on github @ &lt;a href=
&quot;http://github.com/yob/rails/commit/986b8c99331d68087eaa0a703f4121c5c73b95ad&quot;&gt;
http://github.com/yob/rails/commit/986b8c99331d68087eaa0a703f4121c5...&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I took approach (2) from my earlier comment. The Mysql driver
remains encoding unaware, and all results are stored in the AR
model attributes hash marked as &quot;BINARY&quot; encoding.&lt;/p&gt;
&lt;p&gt;Traditionally non string attributes are type cast on demand
(converted to ints, dates, etc) and strings are left untouched.
This patch adds a type casting process for string attributes that
&quot;fixes&quot; the encoding to match what the user has specified in
database.yml.&lt;/p&gt;
&lt;p&gt;The commit message has a few extra details.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-04T16:45:00+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-07-04T16:45:06+01:00</updated-at>
      <user-id type="integer">18344</user-id>
      <version type="integer">15</version>
      <user-name>James Healy</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(the correct URL for James patch is http://github.com/yob/rails/commit/986b8c99331d68087eaa0a703f4121c5c73b95ad )</body>
      <body-html>&lt;div&gt;&lt;p&gt;(the correct URL for James patch is &lt;a href=
&quot;http://github.com/yob/rails/commit/986b8c99331d68087eaa0a703f4121c5c73b95ad&quot;&gt;
http://github.com/yob/rails/commit/986b8c99331d68087eaa0a703f4121c5...&lt;/a&gt;
)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-10T19:28:25+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-07-10T19:28:33+01:00</updated-at>
      <user-id type="integer">53368</user-id>
      <version type="integer">16</version>
      <user-name>runa</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What's the best way for me to get feedback on my patch?

I'm still in two minds about whether the encoding of strings from the database should be fixed in the DB driver or ActiveRecord, so it would be nice to get some discussion going.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What's the best way for me to get feedback on my patch?&lt;/p&gt;
&lt;p&gt;I'm still in two minds about whether the encoding of strings
from the database should be fixed in the DB driver or ActiveRecord,
so it would be nice to get some discussion going.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-19T02:21:34+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-07-19T02:21:41+01:00</updated-at>
      <user-id type="integer">18344</user-id>
      <version type="integer">17</version>
      <user-name>James Healy</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think ActiveRecord is the right place to handle encoding, though some DB drivers may also be able to help if there is a non-standard way the particular database handles encoding.  For databases that do nothing with encoding and just push raw bits, ActiveRecord should provide a configuration option for the encoding and return Strings properly encoded, perhaps even transformed to another encoding if the data is encoded differently than the user wants.

That's my 2&#162;, anyway.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think ActiveRecord is the right place to handle encoding,
though some DB drivers may also be able to help if there is a
non-standard way the particular database handles encoding. For
databases that do nothing with encoding and just push raw bits,
ActiveRecord should provide a configuration option for the encoding
and return Strings properly encoded, perhaps even transformed to
another encoding if the data is encoded differently than the user
wants.&lt;/p&gt;
&lt;p&gt;That's my 2&amp;cent;, anyway.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-04T16:21:51+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-08-04T16:21:56+01:00</updated-at>
      <user-id type="integer">64714</user-id>
      <version type="integer">18</version>
      <user-name>Michael H Buselli</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I wrote a gem to enhance ActiveRecord::Base as described above: http://github.com/cosine/active_record_encoding/tree/master

It assumes the database just pushes bits and doesn't understand its encoding, which is true in my case.

I have not thoroughly tested it, yet.  Proceed with caution if you use it.  Even so, I would love some feedback.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I wrote a gem to enhance ActiveRecord::Base as described above:
&lt;a href=
&quot;http://github.com/cosine/active_record_encoding/tree/master&quot;&gt;http://github.com/cosine/active_record_encoding/tree/master&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It assumes the database just pushes bits and doesn't understand
its encoding, which is true in my case.&lt;/p&gt;
&lt;p&gt;I have not thoroughly tested it, yet. Proceed with caution if
you use it. Even so, I would love some feedback.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T22:13:18+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-08-05T22:13:25+01:00</updated-at>
      <user-id type="integer">64714</user-id>
      <version type="integer">19</version>
      <user-name>Michael H Buselli</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; It assumes the database just pushes bits and doesn't understand its encoding

Unfortunately that's not the case. For instance, when you try to store certain UTF-8 characters in a Latin-1 database you will loose information. The database storage engine and the database protocol are generally encoding aware so we will have to deal with that.

&gt; Even so, I would love some feedback.

If you're serious in pursuing this plugin I would recommend writing a lot of tests.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;It assumes the database just pushes bits and doesn't understand
its encoding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately that's not the case. For instance, when you try to
store certain UTF-8 characters in a Latin-1 database you will loose
information. The database storage engine and the database protocol
are generally encoding aware so we will have to deal with that.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even so, I would love some feedback.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you're serious in pursuing this plugin I would recommend
writing a lot of tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-06T07:42:00+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-08-06T07:42:02+01:00</updated-at>
      <user-id type="integer">8407</user-id>
      <version type="integer">20</version>
      <user-name>Manfred Stienstra</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; The database storage engine and the database protocol are generally encoding aware so we will have to deal with that.
Yes. So the approach (1) is ideal.

I sent a patch for ruby-pg. The next release of ruby-pg will be encoding-aware.
Mysql/Ruby should be fixed as ruby-pg. And I think my article http://yugui.jp/articles/838 can help to fix database drivers.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;The database storage engine and the database protocol are
generally encoding aware so we will have to deal with that. Yes. So
the approach (1) is ideal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I sent a patch for ruby-pg. The next release of ruby-pg will be
encoding-aware.&lt;br&gt;
Mysql/Ruby should be fixed as ruby-pg. And I think my article
&lt;a href=
&quot;http://yugui.jp/articles/838&quot;&gt;http://yugui.jp/articles/838&lt;/a&gt; can
help to fix database drivers.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-07T07:20:30+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-08-07T07:20:34+01:00</updated-at>
      <user-id type="integer">20377</user-id>
      <version type="integer">21</version>
      <user-name>Yugui (Yuki Sonoda)</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi. I try to fix this issue and there is two moments:
1. First, db driver give us utf string with forced ASCII-8BIT encoding.
2. Some utf views are forced to ASCII-8BIT during the compilation.
So, we have a multi problem.
Let's look:
@@@ ruby
&gt;&gt; p = &quot;&#1087;&#1088;&#1080;&#1074;&#1077;&#1090;&quot;
=&gt; &quot;&#1087;&#1088;&#1080;&#1074;&#1077;&#1090;&quot;
&gt;&gt; t = &quot;&#1084;&#1080;&#1088;&quot;
=&gt; &quot;&#1084;&#1080;&#1088;&quot;
&gt;&gt; t.force_encoding Encoding::ASCII_8BIT
=&gt; &quot;\xD0\xBC\xD0\xB8\xD1\x80&quot;
&gt;&gt; p &lt;&lt; t
Encoding::CompatibilityError: incompatible character encodings: UTF-8 and ASCII-8BIT
        from (irb):4
        from /home/pyromaniac/.rvm/ruby-1.9.1-p243/bin/irb:12:in `&lt;main&gt;'
@@@
So, during the concatination of such strings, we have exception &quot;incompatible character encodings: UTF-8 and ASCII-8BIT&quot;

This hack works well for full utf projects
@@@ ruby
class String
  alias_method(:orig_concat, :concat)
  def concat(value)
    orig_concat value.force_encoding(Encoding::UTF_8)
  end
end
@@@
But problem still not solved. We need to patch db drivers, by the way, http://github.com/jzajpt/mysql-ruby/tree/master - patched mysql, and we need to solve problem with AV.
What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi. I try to fix this issue and there is two moments:&lt;br&gt;
1. First, db driver give us utf string with forced ASCII-8BIT
encoding.&lt;br&gt;
2. Some utf views are forced to ASCII-8BIT during the
compilation.&lt;br&gt;
So, we have a multi problem.&lt;br&gt;
Let's look:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt;&amp;gt; p = &quot;&amp;#1087;&amp;#1088;&amp;#1080;&amp;#1074;&amp;#1077;&amp;#1090;&quot;
=&amp;gt; &quot;&amp;#1087;&amp;#1088;&amp;#1080;&amp;#1074;&amp;#1077;&amp;#1090;&quot;
&amp;gt;&amp;gt; t = &quot;&amp;#1084;&amp;#1080;&amp;#1088;&quot;
=&amp;gt; &quot;&amp;#1084;&amp;#1080;&amp;#1088;&quot;
&amp;gt;&amp;gt; t.force_encoding Encoding::ASCII_8BIT
=&amp;gt; &quot;\xD0\xBC\xD0\xB8\xD1\x80&quot;
&amp;gt;&amp;gt; p &amp;lt;&amp;lt; t
Encoding::CompatibilityError: incompatible character encodings: UTF-8 and ASCII-8BIT&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&lt;code&gt;    from (irb):4
    from /home/pyromaniac/.rvm/ruby-1.9.1-p243/bin/irb:12:in `&amp;amp;lt;main&amp;amp;gt;'&amp;lt;/code&amp;gt;&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
&lt;/pre&gt;
So, during the concatination of such strings, we have exception
&quot;incompatible character encodings: UTF-8 and ASCII-8BIT&quot;
&lt;p&gt;This hack works well for full utf projects&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class String
  alias_method(:orig_concat, :concat)
  def concat(value)&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&lt;code&gt;orig_concat value.force_encoding(Encoding::UTF_8)&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
end
&lt;/pre&gt;
But problem still not solved. We need to patch db drivers, by the
way, &lt;a href=
&quot;http://github.com/jzajpt/mysql-ruby/tree/master&quot;&gt;http://github.com/jzajpt/mysql-ruby/tree/master&lt;/a&gt;
- patched mysql, and we need to solve problem with AV.&lt;br&gt;
What do you think?&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-06T19:17:10+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-09-06T19:17:17+01:00</updated-at>
      <user-id type="integer">68884</user-id>
      <version type="integer">22</version>
      <user-name>pyromaniac</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I tested ruby-mysql posted by pyromaniac and it seems to work fine.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I tested ruby-mysql posted by pyromaniac and it seems to work
fine.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-22T00:00:21+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-10-22T00:00:26+01:00</updated-at>
      <user-id type="integer">10790</user-id>
      <version type="integer">23</version>
      <user-name>Aleksander Pohl</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>You can use this little pure Ruby hack to get things working. No modifications to the mysql gem are needed, so it's pretty easy to drop into an existing app: 

[http://gnuu.org/2009/11/06/ruby19-rails-mysql-utf8/](http://gnuu.org/2009/11/06/ruby19-rails-mysql-utf8/)</body>
      <body-html>&lt;div&gt;&lt;p&gt;You can use this little pure Ruby hack to get things working. No
modifications to the mysql gem are needed, so it's pretty easy to
drop into an existing app:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gnuu.org/2009/11/06/ruby19-rails-mysql-utf8/&quot;&gt;http://gnuu.org/2009/11/06/ruby19-rails-mysql-utf8/&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-07T02:14:08+00:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2009-11-07T02:14:13+00:00</updated-at>
      <user-id type="integer">13623</user-id>
      <version type="integer">24</version>
      <user-name>Loren Segal</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>And now??? I have this exact issue with Rails 3 Beta 2, Ruby 1.9.2-head.</body>
      <body-html>&lt;div&gt;&lt;p&gt;And now??? I have this exact issue with Rails 3 Beta 2, Ruby
1.9.2-head.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-04T10:05:39+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-04-04T10:05:43+01:00</updated-at>
      <user-id type="integer">73395</user-id>
      <version type="integer">25</version>
      <user-name>Michael Hasenstein</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>For those who dont want to overwrite String::concat and use HAML for views, here is my solution (http://gist.github.com/358275):

@@@ ruby
module Haml
  class Buffer
    class UTF8String &lt; String
      def &lt;&lt; text; super text.toutf8; end
    end

    alias original_initialize initialize

    def initialize *args
      original_initialize *args
      @buffer = UTF8String.new
    end
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;For those who dont want to overwrite String::concat and use HAML
for views, here is my solution (&lt;a href=
&quot;http://gist.github.com/358275)&quot;&gt;http://gist.github.com/358275)&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;module Haml
  class Buffer
    class UTF8String &amp;lt; String
      def &amp;lt;&amp;lt; text; super text.toutf8; end
    end

    alias original_initialize initialize

    def initialize *args
      original_initialize *args
      @buffer = UTF8String.new
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-07T00:58:36+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-04-07T00:58:42+01:00</updated-at>
      <user-id type="integer">34795</user-id>
      <version type="integer">26</version>
      <user-name>Ivan Ukhov</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Any luck getting mysql encoding into the released gem?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Any luck getting mysql encoding into the released gem?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-24T21:23:52+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-04-24T21:23:56+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">27</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>As for mysql gem, I might take a shot at it ... based od Yugui's article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As for mysql gem, I might take a shot at it ... based od Yugui's
article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-02T00:09:44+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-05-02T00:09:51+01:00</updated-at>
      <user-id type="integer">52142</user-id>
      <version type="integer">28</version>
      <user-name>Cezary Baginski</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have the impression that there are too many &quot;potential&quot; mysql-ruby sources and most of them are unmaintained.


I'm still investigating, so sorry if I am missing something important.


Here is an interesting summary as to why:

http://github.com/luislavena/mysql-gem/issues/labels/documentation#issue/4


I propose:

* changing the name from 'mysql','ruby-mysql','mysql-win' into something that stands out from the rest, just to avoid confusion
* update the Gemfile and source files to require this *recommended* new libmysql wrapper.


@Hector - Thanks for the great work with the mysql-ruby fork! 

* Should I use it as a base for testing and patches? 
* Can we rename it and make it *the* official gem for Rails?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the impression that there are too many &quot;potential&quot;
mysql-ruby sources and most of them are unmaintained.&lt;/p&gt;
&lt;p&gt;I'm still investigating, so sorry if I am missing something
important.&lt;/p&gt;
&lt;p&gt;Here is an interesting summary as to why:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/luislavena/mysql-gem/issues/labels/documentation#issue/4&quot;&gt;
http://github.com/luislavena/mysql-gem/issues/labels/documentation#...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I propose:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;changing the name from 'mysql','ruby-mysql','mysql-win' into
something that stands out from the rest, just to avoid
confusion&lt;/li&gt;
&lt;li&gt;update the Gemfile and source files to require this
&lt;em&gt;recommended&lt;/em&gt; new libmysql wrapper.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@Hector - Thanks for the great work with the mysql-ruby
fork!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Should I use it as a base for testing and patches?&lt;/li&gt;
&lt;li&gt;Can we rename it and make it &lt;em&gt;the&lt;/em&gt; official gem for
Rails?&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-02T10:29:03+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-05-02T10:29:08+01:00</updated-at>
      <user-id type="integer">52142</user-id>
      <version type="integer">29</version>
      <user-name>Cezary Baginski</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20088)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20088&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-16T02:41:09+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 activerecord bug patch ruby19
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-05-16T02:41:09+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">30</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20606)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20606&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-23T17:54:43+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 50064
</diffable-attributes>
      <milestone-id type="integer">73241</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-05-23T17:54:43+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">31</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.7</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20631)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20631&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-24T09:40:51+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 73241
</diffable-attributes>
      <milestone-id type="integer">73273</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-05-24T09:40:51+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">32</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.8</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20816)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20816&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-25T23:45:38+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 73273
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-05-25T23:45:38+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">33</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27613)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27613&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T02:28:49+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 73534
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">1625</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-08-30T02:28:49+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">34</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Teaching, I understand this&lt;a href=&quot;http://www.fmheroes.com/FM_TRANSMITTER-categories-1.html&quot;&gt;question&lt;/a&gt; is not can you point me to say in detail.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Teaching, I understand this&lt;a href=
&quot;http://www.fmheroes.com/FM_TRANSMITTER-categories-1.html&quot;&gt;question&lt;/a&gt;
is not can you point me to say in detail.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-06T06:03:02+01:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">1625</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.2 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2010-09-06T07:03:35+01:00</updated-at>
      <user-id type="integer">114498</user-id>
      <version type="integer">35</version>
      <user-name>Fenny</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:32:25+00:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 activerecord bug bugmash patch ruby19
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">1625</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>232 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2011-02-02T16:54:49+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">36</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:32:27+00:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">1625</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>232 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2011-02-02T18:37:22+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">37</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T03:23:55+00:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">1625</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>232 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2011-02-14T05:42:01+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">38</version>
      <user-name>xixi</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:20:05+00:00</created-at>
      <creator-id type="integer">47299</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">2476</number>
      <permalink>ascii-8bit-encoding-of-query-results-in-rails-232-and-ruby-191</permalink>
      <priority type="integer">1625</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>232 activerecord bug bugmash patch ruby19</tag>
      <title>ASCII-8BIT encoding of query results in rails 2.3.2 and ruby 1.9.1</title>
      <updated-at type="datetime">2011-02-19T09:28:17+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">39</version>
      <user-name>mklo</user-name>
      <creator-name>Hector E. Gomez Morales</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2476</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>08b692436f95b4e5c325cbe6ab180915c23bc9cf</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-10T16:36:25+01:00</created-at>
      <filename>validate-uniqueness-ruby19.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">110275</id>
      <size type="integer">2041</size>
      <uploader-id type="integer">47299</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/110275/validate-uniqueness-ruby19.diff</url>
    </attachment>
  </attachments>
</ticket>
