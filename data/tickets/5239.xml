<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-29T13:33:30+01:00</created-at>
  <creator-id type="integer">23156</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5239</number>
  <permalink>hard-coded-ddl-statement-in-sessionstorecreate_table</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;unique constraint hardcoded ddl&quot;</tag>
  <title>Hard-Coded ddl statement in SessionStore#create_table!</title>
  <updated-at type="datetime">2011-02-02T17:06:35+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Praveen Devarao</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5239</url>
  <priority-name nil="true"></priority-name>
  <original-body>In the method SessionStore#create_table! the create table statement contains sql that specifies datatype for data column to be TEXT, which is not a supported datatype by all databases, for eg DB2. Hence will need to change the sql construction appropriately such that database specifics are added. A patch to correct the same is attached in the ticket.

Along with the above a new method unique_constraint is added to SchemaStatements to provide flexiblility to handle database specifics for UNIQUE constraint on a column. For Eg, DB2 doesnot allow null values in a unique column and requires that the column be specified not null explicitly. To handle this, one can override the method unique_constraint in the ibm_db adapter. So will be the case for any other database to handle respective specifics.

Test cases: Existing test cases test_create_table!, test_find_by_session_id, test_find_by_sess_id_compat from session_store/session_test.rb should suffice.</original-body>
  <latest-body>In the method SessionStore#create_table! the create table statement contains sql that specifies datatype for data column to be TEXT, which is not a supported datatype by all databases, for eg DB2. Hence will need to change the sql construction appropriately such that database specifics are added. A patch to correct the same is attached in the ticket.

Along with the above a new method unique_constraint is added to SchemaStatements to provide flexiblility to handle database specifics for UNIQUE constraint on a column. For Eg, DB2 doesnot allow null values in a unique column and requires that the column be specified not null explicitly. To handle this, one can override the method unique_constraint in the ibm_db adapter. So will be the case for any other database to handle respective specifics.

Test cases: Existing test cases test_create_table!, test_find_by_session_id, test_find_by_sess_id_compat from session_store/session_test.rb should suffice.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In the method SessionStore#create_table! the create table
statement contains sql that specifies datatype for data column to
be TEXT, which is not a supported datatype by all databases, for eg
DB2. Hence will need to change the sql construction appropriately
such that database specifics are added. A patch to correct the same
is attached in the ticket.&lt;/p&gt;
&lt;p&gt;Along with the above a new method unique_constraint is added to
SchemaStatements to provide flexiblility to handle database
specifics for UNIQUE constraint on a column. For Eg, DB2 doesnot
allow null values in a unique column and requires that the column
be specified not null explicitly. To handle this, one can override
the method unique_constraint in the ibm_db adapter. So will be the
case for any other database to handle respective specifics.&lt;/p&gt;
&lt;p&gt;Test cases: Existing test cases test_create_table!,
test_find_by_session_id, test_find_by_sess_id_compat from
session_store/session_test.rb should suffice.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In the method SessionStore#create_table! the create table statement contains sql that specifies datatype for data column to be TEXT, which is not a supported datatype by all databases, for eg DB2. Hence will need to change the sql construction appropriately such that database specifics are added. A patch to correct the same is attached in the ticket.

Along with the above a new method unique_constraint is added to SchemaStatements to provide flexiblility to handle database specifics for UNIQUE constraint on a column. For Eg, DB2 doesnot allow null values in a unique column and requires that the column be specified not null explicitly. To handle this, one can override the method unique_constraint in the ibm_db adapter. So will be the case for any other database to handle respective specifics.

Test cases: Existing test cases test_create_table!, test_find_by_session_id, test_find_by_sess_id_compat from session_store/session_test.rb should suffice.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In the method SessionStore#create_table! the create table
statement contains sql that specifies datatype for data column to
be TEXT, which is not a supported datatype by all databases, for eg
DB2. Hence will need to change the sql construction appropriately
such that database specifics are added. A patch to correct the same
is attached in the ticket.&lt;/p&gt;
&lt;p&gt;Along with the above a new method unique_constraint is added to
SchemaStatements to provide flexiblility to handle database
specifics for UNIQUE constraint on a column. For Eg, DB2 doesnot
allow null values in a unique column and requires that the column
be specified not null explicitly. To handle this, one can override
the method unique_constraint in the ibm_db adapter. So will be the
case for any other database to handle respective specifics.&lt;/p&gt;
&lt;p&gt;Test cases: Existing test cases test_create_table!,
test_find_by_session_id, test_find_by_sess_id_compat from
session_store/session_test.rb should suffice.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-29T13:33:30+01:00</created-at>
      <creator-id type="integer">23156</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5239</number>
      <permalink>hard-coded-ddl-statement-in-sessionstorecreate_table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;unique constraint hardcoded ddl&quot;</tag>
      <title>Hard-Coded ddl statement in SessionStore#create_table!</title>
      <updated-at type="datetime">2010-07-30T06:21:29+01:00</updated-at>
      <user-id type="integer">23156</user-id>
      <version type="integer">1</version>
      <user-name>Praveen Devarao</user-name>
      <creator-name>Praveen Devarao</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5239</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Forgot to specify. This is seen with Rails-3.0.0-rc.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Forgot to specify. This is seen with Rails-3.0.0-rc.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-29T13:36:25+01:00</created-at>
      <creator-id type="integer">23156</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5239</number>
      <permalink>hard-coded-ddl-statement-in-sessionstorecreate_table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;unique constraint hardcoded ddl&quot;</tag>
      <title>Hard-Coded ddl statement in SessionStore#create_table!</title>
      <updated-at type="datetime">2010-07-29T13:36:27+01:00</updated-at>
      <user-id type="integer">23156</user-id>
      <version type="integer">2</version>
      <user-name>Praveen Devarao</user-name>
      <creator-name>Praveen Devarao</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5239</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:34:22+00:00</created-at>
      <creator-id type="integer">23156</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5239</number>
      <permalink>hard-coded-ddl-statement-in-sessionstorecreate_table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;unique constraint hardcoded ddl&quot;</tag>
      <title>Hard-Coded ddl statement in SessionStore#create_table!</title>
      <updated-at type="datetime">2011-02-02T17:06:35+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Praveen Devarao</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5239</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:34:23+00:00</created-at>
      <creator-id type="integer">23156</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5239</number>
      <permalink>hard-coded-ddl-statement-in-sessionstorecreate_table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;unique constraint hardcoded ddl&quot;</tag>
      <title>Hard-Coded ddl statement in SessionStore#create_table!</title>
      <updated-at type="datetime">2011-02-02T17:05:35+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Praveen Devarao</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5239</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>ed3a13b7fab1fadbd8cacbaa75592a572d2f5fe7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-29T13:33:31+01:00</created-at>
      <filename>hard_coded_ddl_removal_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">607653</id>
      <size type="integer">2552</size>
      <uploader-id type="integer">23156</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/607653/hard_coded_ddl_removal_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
