<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-12T20:03:31+00:00</created-at>
  <creator-id type="integer">91344</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5964</number>
  <permalink>has_many-through-collection-bug</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>has_many_through patch &quot;rail3 has_many&quot;</tag>
  <title>has_many through append to collection should have duplicates before reload</title>
  <updated-at type="datetime">2010-12-23T23:21:38+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">9</version>
  <user-name>Repository</user-name>
  <creator-name>chris (at thredup)</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
  <priority-name>Low</priority-name>
  <original-body>There seems to be a problem with the behavior of has_many through.

When you access the collection before appending multiple identical objects, the collection is not updated.  For example the following RSpec should pass:

Models
Package has_many categories through package_categories
PackageCategory belongs to package and category
Category has_many packages through package_categories

THIS FAILS (on the last line):

    @p = Package.create
    @cat1 = Category.first
    @p.categories.map(&amp;:id).count.should be 0
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories.map(&amp;:id).count.should be 3


THIS PASSES:

    @p = Package.create
    @cat1 = Category.first
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories.map(&amp;:id).count.should be 3


THIS PASSES:

    @p = Package.create
    @cat1 = Category.find(1)
    @cat2 = Category.find(2)
    @cat3 = Category.find(3)
    @p.categories.map(&amp;:id).count.should be 0
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat2
    @p.categories &lt;&lt; @cat3
    @p.categories.map(&amp;:id).count.should be 3

It seems to be isolated to added multiple of the same object after previously accessing the collection.

Any ideas?</original-body>
  <latest-body>There seems to be a problem with the behavior of has_many through.

When you access the collection before appending multiple identical objects, the collection is not updated.  For example the following RSpec should pass:

Models
Package has_many categories through package_categories
PackageCategory belongs to package and category
Category has_many packages through package_categories

THIS FAILS (on the last line):

    @p = Package.create
    @cat1 = Category.first
    @p.categories.map(&amp;:id).count.should be 0
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories.map(&amp;:id).count.should be 3


THIS PASSES:

    @p = Package.create
    @cat1 = Category.first
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories.map(&amp;:id).count.should be 3


THIS PASSES:

    @p = Package.create
    @cat1 = Category.find(1)
    @cat2 = Category.find(2)
    @cat3 = Category.find(3)
    @p.categories.map(&amp;:id).count.should be 0
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat2
    @p.categories &lt;&lt; @cat3
    @p.categories.map(&amp;:id).count.should be 3

It seems to be isolated to added multiple of the same object after previously accessing the collection.

Any ideas?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There seems to be a problem with the behavior of has_many
through.&lt;/p&gt;
&lt;p&gt;When you access the collection before appending multiple
identical objects, the collection is not updated. For example the
following RSpec should pass:&lt;/p&gt;
&lt;p&gt;Models&lt;br&gt;
Package has_many categories through package_categories&lt;br&gt;
PackageCategory belongs to package and category&lt;br&gt;
Category has_many packages through package_categories&lt;/p&gt;
&lt;p&gt;THIS FAILS (on the last line):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@p = Package.create
@cat1 = Category.first
@p.categories.map(&amp;amp;:id).count.should be 0
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories.map(&amp;amp;:id).count.should be 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;THIS PASSES:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@p = Package.create
@cat1 = Category.first
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories.map(&amp;amp;:id).count.should be 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;THIS PASSES:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@p = Package.create
@cat1 = Category.find(1)
@cat2 = Category.find(2)
@cat3 = Category.find(3)
@p.categories.map(&amp;amp;:id).count.should be 0
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat2
@p.categories &amp;lt;&amp;lt; @cat3
@p.categories.map(&amp;amp;:id).count.should be 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It seems to be isolated to added multiple of the same object
after previously accessing the collection.&lt;/p&gt;
&lt;p&gt;Any ideas?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There seems to be a problem with the behavior of has_many through.

When you access the collection before appending multiple identical objects, the collection is not updated.  For example the following RSpec should pass:

Models
Package has_many categories through package_categories
PackageCategory belongs to package and category
Category has_many packages through package_categories

THIS FAILS (on the last line):

    @p = Package.create
    @cat1 = Category.first
    @p.categories.map(&amp;:id).count.should be 0
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories.map(&amp;:id).count.should be 3


THIS PASSES:

    @p = Package.create
    @cat1 = Category.first
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat1
    @p.categories.map(&amp;:id).count.should be 3


THIS PASSES:

    @p = Package.create
    @cat1 = Category.find(1)
    @cat2 = Category.find(2)
    @cat3 = Category.find(3)
    @p.categories.map(&amp;:id).count.should be 0
    @p.categories &lt;&lt; @cat1
    @p.categories &lt;&lt; @cat2
    @p.categories &lt;&lt; @cat3
    @p.categories.map(&amp;:id).count.should be 3

It seems to be isolated to added multiple of the same object after previously accessing the collection.

Any ideas?</body>
      <body-html>&lt;div&gt;&lt;p&gt;There seems to be a problem with the behavior of has_many
through.&lt;/p&gt;
&lt;p&gt;When you access the collection before appending multiple
identical objects, the collection is not updated. For example the
following RSpec should pass:&lt;/p&gt;
&lt;p&gt;Models&lt;br&gt;
Package has_many categories through package_categories&lt;br&gt;
PackageCategory belongs to package and category&lt;br&gt;
Category has_many packages through package_categories&lt;/p&gt;
&lt;p&gt;THIS FAILS (on the last line):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@p = Package.create
@cat1 = Category.first
@p.categories.map(&amp;amp;:id).count.should be 0
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories.map(&amp;amp;:id).count.should be 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;THIS PASSES:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@p = Package.create
@cat1 = Category.first
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories.map(&amp;amp;:id).count.should be 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;THIS PASSES:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@p = Package.create
@cat1 = Category.find(1)
@cat2 = Category.find(2)
@cat3 = Category.find(3)
@p.categories.map(&amp;amp;:id).count.should be 0
@p.categories &amp;lt;&amp;lt; @cat1
@p.categories &amp;lt;&amp;lt; @cat2
@p.categories &amp;lt;&amp;lt; @cat3
@p.categories.map(&amp;amp;:id).count.should be 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It seems to be isolated to added multiple of the same object
after previously accessing the collection.&lt;/p&gt;
&lt;p&gt;Any ideas?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-12T20:03:31+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through &quot;rail3 has_many&quot;</tag>
      <title>has_many through collection bug</title>
      <updated-at type="datetime">2010-11-12T22:01:14+00:00</updated-at>
      <user-id type="integer">91344</user-id>
      <version type="integer">1</version>
      <user-name>chris (at thredup)</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attaching has_many_through_associations_test.rb with a case I added to show this behavior.

My added case is line 67
activerecord/test/cases/associations/has_many_through_associations_test.rb</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attaching has_many_through_associations_test.rb with a case I
added to show this behavior.&lt;/p&gt;
&lt;p&gt;My added case is line 67&lt;br&gt;
activerecord/test/cases/associations/has_many_through_associations_test.rb&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-12T22:43:27+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through &quot;rail3 has_many&quot;</tag>
      <title>has_many through collection bug</title>
      <updated-at type="datetime">2010-11-12T22:43:29+00:00</updated-at>
      <user-id type="integer">91344</user-id>
      <version type="integer">2</version>
      <user-name>chris (at thredup)</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Updated test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-12T22:50:00+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through &quot;rail3 has_many&quot;</tag>
      <title>has_many through collection bug</title>
      <updated-at type="datetime">2010-11-12T22:50:01+00:00</updated-at>
      <user-id type="integer">91344</user-id>
      <version type="integer">3</version>
      <user-name>chris (at thredup)</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>My first stab at fixing this is now pushed to my fork.  

The problem is that my fix now causes problems for nested_attributes - two tests in there are now failing.  

The commit is here: https://github.com/thredup/rails/commit/df912531295e3e57314b00ef8113b9e58961f923

Any input from people that know the code base better than I would be awesome.</body>
      <body-html>&lt;div&gt;&lt;p&gt;My first stab at fixing this is now pushed to my fork.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The problem is that my fix now causes problems for
nested_attributes - two tests in there are now failing.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The commit is here: &lt;a href=
&quot;https://github.com/thredup/rails/commit/df912531295e3e57314b00ef8113b9e58961f923&quot;&gt;
https://github.com/thredup/rails/commit/df912531295e3e57314b00ef811...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Any input from people that know the code base better than I
would be awesome.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-13T00:25:57+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through &quot;rail3 has_many&quot;</tag>
      <title>has_many through collection bug</title>
      <updated-at type="datetime">2010-11-13T00:26:00+00:00</updated-at>
      <user-id type="integer">91344</user-id>
      <version type="integer">4</version>
      <user-name>chris (at thredup)</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Committed some files by mistake - fixed and re-pushed: https://github.com/thredup/rails/commit/ad0b5421e8e4893924ff70a97ddaf794d4167e47</body>
      <body-html>&lt;div&gt;&lt;p&gt;Committed some files by mistake - fixed and re-pushed: &lt;a href=
&quot;https://github.com/thredup/rails/commit/ad0b5421e8e4893924ff70a97ddaf794d4167e47&quot;&gt;
https://github.com/thredup/rails/commit/ad0b5421e8e4893924ff70a97dd...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-13T00:59:43+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through &quot;rail3 has_many&quot;</tag>
      <title>has_many through collection bug</title>
      <updated-at type="datetime">2010-11-13T00:59:44+00:00</updated-at>
      <user-id type="integer">91344</user-id>
      <version type="integer">5</version>
      <user-name>chris (at thredup)</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-13T01:00:39+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- 
:title: has_many through collection bug
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through &quot;rail3 has_many&quot;</tag>
      <title>has_many through append to collection should have duplicates before reload</title>
      <updated-at type="datetime">2010-11-13T01:00:40+00:00</updated-at>
      <user-id type="integer">91344</user-id>
      <version type="integer">6</version>
      <user-name>chris (at thredup)</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Chris,

Thanks for the bug report. I've created a patch which I'll hopefully get Aaron to merge at some point.

Cheers,
Jon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Chris,&lt;/p&gt;
&lt;p&gt;Thanks for the bug report. I've created a patch which I'll
hopefully get Aaron to merge at some point.&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br&gt;
Jon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-22T00:22:06+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:tag: has_many_through &quot;rail3 has_many&quot;
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through patch &quot;rail3 has_many&quot;</tag>
      <title>has_many through append to collection should have duplicates before reload</title>
      <updated-at type="datetime">2010-12-22T00:22:19+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">7</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-22T00:22:14+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>has_many_through patch &quot;rail3 has_many&quot;</tag>
      <title>has_many through append to collection should have duplicates before reload</title>
      <updated-at type="datetime">2010-12-22T00:22:31+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">8</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [ff7bde62c857ec94f45a5be3bc76468deb8b0b3a]) When a has_many association is not :uniq, appending the same record multiple times should append it to the @target multiple times [#5964 state:resolved]
https://github.com/rails/rails/commit/ff7bde62c857ec94f45a5be3bc76468deb8b0b3a</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/ff7bde62c857ec94f45a5be3bc76468deb8b0b3a&quot;
title=
&quot;Changeset [ff7bde62c857ec94f45a5be3bc76468deb8b0b3a]&quot;&gt;[ff7bde62c857ec94f45a5be3bc76468deb8b0b3a]&lt;/a&gt;)
When a has_many association is not :uniq, appending the same record
multiple times should append it to the @target multiple times
[&lt;a href=&quot;/projects/8994/tickets/5964&quot; title=
&quot;Ticket #5964&quot;&gt;#5964&lt;/a&gt; state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/ff7bde62c857ec94f45a5be3bc76468deb8b0b3a&quot;&gt;
https://github.com/rails/rails/commit/ff7bde62c857ec94f45a5be3bc764...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-23T23:21:20+00:00</created-at>
      <creator-id type="integer">91344</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5964</number>
      <permalink>has_many-through-collection-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>has_many_through patch &quot;rail3 has_many&quot;</tag>
      <title>has_many through append to collection should have duplicates before reload</title>
      <updated-at type="datetime">2010-12-23T23:21:38+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>chris (at thredup)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5964</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a3a55dfff5915236e98d4897b4cffdc47c6cd28b</code>
      <content-type>text/x-ruby-script</content-type>
      <created-at type="datetime">2010-11-12T22:50:00+00:00</created-at>
      <filename>has_many_through_associations_test.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">769004</id>
      <size type="integer">16387</size>
      <uploader-id type="integer">91344</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/769004/has_many_through_associations_test.rb</url>
    </attachment>
    <attachment type="Attachment">
      <code>be83b9035d6866d438093cbc2942857eff59f38b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-22T00:22:06+00:00</created-at>
      <filename>5964_association_collection_add_duplicates_to_target.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">830559</id>
      <size type="integer">3630</size>
      <uploader-id type="integer">11330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/830559/5964_association_collection_add_duplicates_to_target.diff</url>
    </attachment>
  </attachments>
</ticket>
