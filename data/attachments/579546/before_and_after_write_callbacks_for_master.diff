From 49733142e715ba9bab1f4ed0e85132417fe63658 Mon Sep 17 00:00:00 2001
From: Fabien Jakimowicz <fabien@jakimowicz.com>
Date: Tue, 29 Jun 2010 03:25:20 +0200
Subject: [PATCH] adds before/after write callbacks

---
 activerecord/lib/active_record/callbacks.rb    |   27 ++++---
 activerecord/lib/active_record/transactions.rb |    2 +-
 activerecord/test/cases/callbacks_test.rb      |  102 ++++++++++++++++++++----
 3 files changed, 104 insertions(+), 27 deletions(-)

diff --git a/activerecord/lib/active_record/callbacks.rb b/activerecord/lib/active_record/callbacks.rb
index 498836a..487256b 100644
--- a/activerecord/lib/active_record/callbacks.rb
+++ b/activerecord/lib/active_record/callbacks.rb
@@ -12,18 +12,20 @@ module ActiveRecord
   # * (1) <tt>before_validation</tt>
   # * (-) <tt>validate</tt>
   # * (2) <tt>after_validation</tt>
-  # * (3) <tt>before_save</tt>
-  # * (4) <tt>before_create</tt>
+  # * (3) <tt>before_write</tt>
+  # * (4) <tt>before_save</tt>
+  # * (5) <tt>before_create</tt>
   # * (-) <tt>create</tt>
-  # * (5) <tt>after_create</tt>
-  # * (6) <tt>after_save</tt>
-  # * (7) <tt>after_commit</tt>
+  # * (6) <tt>after_create</tt>
+  # * (7) <tt>after_save</tt>
+  # * (8) <tt>adter_write</tt>
+  # * (9) <tt>after_commit</tt>
   #
   # Also, an <tt>after_rollback</tt> callback can be configured to be triggered whenever a rollback is issued.
   # Check out <tt>ActiveRecord::Transactions</tt> for more details about <tt>after_commit</tt> and
   # <tt>after_rollback</tt>.
   #
-  # That's a total of ten callbacks, which gives you immense power to react and prepare for each state in the
+  # That's a total of twelve callbacks, which gives you immense power to react and prepare for each state in the
   # Active Record lifecycle. The sequence for calling <tt>Base#save</tt> for an existing record is similar, except that each
   # <tt>_on_create</tt> callback is replaced by the corresponding <tt>_on_update</tt> callback.
   #
@@ -229,7 +231,8 @@ module ActiveRecord
       :after_initialize, :after_find, :before_validation, :after_validation,
       :before_save, :around_save, :after_save, :before_create, :around_create,
       :after_create, :before_update, :around_update, :after_update,
-      :before_destroy, :around_destroy, :after_destroy
+      :before_destroy, :around_destroy, :after_destroy, :before_write, :around_write,
+      :after_write
     ]
 
     included do
@@ -238,7 +241,7 @@ module ActiveRecord
       define_callbacks :validation, :terminator => "result == false", :scope => [:kind, :name]
 
       define_model_callbacks :initialize, :find, :only => :after
-      define_model_callbacks :save, :create, :update, :destroy
+      define_model_callbacks :save, :create, :update, :destroy, :write
     end
 
     module ClassMethods
@@ -275,7 +278,9 @@ module ActiveRecord
     end
 
     def destroy #:nodoc:
-      _run_destroy_callbacks { super }
+      _run_write_callbacks do
+        _run_destroy_callbacks { super }
+      end
     end
 
     def deprecated_callback_method(symbol) #:nodoc:
@@ -287,7 +292,9 @@ module ActiveRecord
 
   private
     def create_or_update #:nodoc:
-      _run_save_callbacks { super }
+      _run_write_callbacks do
+        _run_save_callbacks { super }
+      end
     end
 
     def create #:nodoc:
diff --git a/activerecord/lib/active_record/transactions.rb b/activerecord/lib/active_record/transactions.rb
index 5a8e2ce..20971ec 100644
--- a/activerecord/lib/active_record/transactions.rb
+++ b/activerecord/lib/active_record/transactions.rb
@@ -83,7 +83,7 @@ module ActiveRecord
     #
     # As a consequence changes to the database are not seen outside your connection
     # until the operation is complete. For example, if you try to update the index
-    # of a search engine in +after_save+ the indexer won't see the updated record.
+    # of a search engine in +after_save+ or +after_write+ the indexer won't see the updated record.
     # The +after_commit+ callback is the only one that is triggered once the update
     # is committed. See below.
     #
diff --git a/activerecord/test/cases/callbacks_test.rb b/activerecord/test/cases/callbacks_test.rb
index dc7f82b..241e774 100644
--- a/activerecord/test/cases/callbacks_test.rb
+++ b/activerecord/test/cases/callbacks_test.rb
@@ -61,21 +61,21 @@ end
 class RecursiveCallbackDeveloper < ActiveRecord::Base
   set_table_name 'developers'
 
-  before_save :on_before_save
-  after_save :on_after_save
+  before_write :on_before_write
+  after_write :on_after_write
 
-  attr_reader :on_before_save_called, :on_after_save_called
+  attr_reader :on_before_write_called, :on_after_write_called
 
-  def on_before_save
-    @on_before_save_called ||= 0
-    @on_before_save_called += 1
-    save unless @on_before_save_called > 1
+  def on_before_write
+    @on_before_write_called ||= 0
+    @on_before_write_called += 1
+    save unless @on_before_write_called > 1
   end
 
-  def on_after_save
-    @on_after_save_called ||= 0
-    @on_after_save_called += 1
-    save unless @on_after_save_called > 1
+  def on_after_write
+    @on_after_write_called ||= 0
+    @on_after_write_called += 1
+    save unless @on_after_write_called > 1
   end
 end
 
@@ -98,6 +98,24 @@ class ImmutableDeveloper < ActiveRecord::Base
     end
 end
 
+class WriteImmutableDeveloper < ActiveRecord::Base
+  set_table_name 'developers'
+
+  validates_inclusion_of :salary, :in => 50000..200000
+
+  before_write :cancel
+
+  def cancelled?
+    @cancelled == true
+  end
+
+  private
+    def cancel
+      @cancelled = true
+      false
+    end
+end
+
 class ImmutableMethodDeveloper < ActiveRecord::Base
   set_table_name 'developers'
 
@@ -141,9 +159,10 @@ end
 class CallbackCancellationDeveloper < ActiveRecord::Base
   set_table_name 'developers'
 
-  attr_reader   :after_save_called, :after_create_called, :after_update_called, :after_destroy_called
-  attr_accessor :cancel_before_save, :cancel_before_create, :cancel_before_update, :cancel_before_destroy
+  attr_reader   :after_save_called, :after_create_called, :after_update_called, :after_destroy_called, :after_write_called
+  attr_accessor :cancel_before_save, :cancel_before_create, :cancel_before_update, :cancel_before_destroy, :cancel_before_write
 
+  before_write   {defined?(@cancel_before_write) ? !@cancel_before_write : false}
   before_save    {defined?(@cancel_before_save) ? !@cancel_before_save : false}
   before_create  { !@cancel_before_create  }
   before_update  { !@cancel_before_update  }
@@ -153,6 +172,7 @@ class CallbackCancellationDeveloper < ActiveRecord::Base
   after_update  { @after_update_called  = true }
   after_create  { @after_create_called  = true }
   after_destroy { @after_destroy_called = true }
+  after_write   { @after_write_called   = true }
 end
 
 class CallbacksTest < ActiveRecord::TestCase
@@ -252,6 +272,11 @@ class CallbacksTest < ActiveRecord::TestCase
       [ :after_validation,            :proc   ],
       [ :after_validation,            :object ],
       [ :after_validation,            :block  ],
+      [ :before_write,                :method ],
+      [ :before_write,                :string ],
+      [ :before_write,                :proc   ],
+      [ :before_write,                :object ],
+      [ :before_write,                :block  ],
       [ :before_save,                 :method ],
       [ :before_save,                 :string ],
       [ :before_save,                 :proc   ],
@@ -271,7 +296,12 @@ class CallbacksTest < ActiveRecord::TestCase
       [ :after_save,                  :string ],
       [ :after_save,                  :proc   ],
       [ :after_save,                  :object ],
-      [ :after_save,                  :block  ]
+      [ :after_save,                  :block  ],
+      [ :after_write,                 :method ],
+      [ :after_write,                 :string ],
+      [ :after_write,                 :proc   ],
+      [ :after_write,                 :object ],
+      [ :after_write,                 :block  ]
     ], david.history
   end
 
@@ -310,6 +340,11 @@ class CallbacksTest < ActiveRecord::TestCase
       [ :after_validation,            :proc   ],
       [ :after_validation,            :object ],
       [ :after_validation,            :block  ],
+      [ :before_write,                :method ],
+      [ :before_write,                :string ],
+      [ :before_write,                :proc   ],
+      [ :before_write,                :object ],
+      [ :before_write,                :block  ],
       [ :before_save,                 :method ],
       [ :before_save,                 :string ],
       [ :before_save,                 :proc   ],
@@ -329,7 +364,12 @@ class CallbacksTest < ActiveRecord::TestCase
       [ :after_save,                  :string ],
       [ :after_save,                  :proc   ],
       [ :after_save,                  :object ],
-      [ :after_save,                  :block  ]
+      [ :after_save,                  :block  ],
+      [ :after_write,                 :method ],
+      [ :after_write,                 :string ],
+      [ :after_write,                 :proc   ],
+      [ :after_write,                 :object ],
+      [ :after_write,                 :block  ]
     ], david.history
   end
 
@@ -359,6 +399,11 @@ class CallbacksTest < ActiveRecord::TestCase
       [ :after_initialize,            :proc   ],
       [ :after_initialize,            :object ],
       [ :after_initialize,            :block  ],
+      [ :before_write,                :method ],
+      [ :before_write,                :string ],
+      [ :before_write,                :proc   ],
+      [ :before_write,                :object ],
+      [ :before_write,                :block  ],
       [ :before_destroy,              :method ],
       [ :before_destroy,              :string ],
       [ :before_destroy,              :proc   ],
@@ -368,7 +413,12 @@ class CallbacksTest < ActiveRecord::TestCase
       [ :after_destroy,               :string ],
       [ :after_destroy,               :proc   ],
       [ :after_destroy,               :object ],
-      [ :after_destroy,               :block  ]
+      [ :after_destroy,               :block  ],
+      [ :after_write,                 :method ],
+      [ :after_write,                 :string ],
+      [ :after_write,                 :proc   ],
+      [ :after_write,                 :object ],
+      [ :after_write,                 :block  ]
     ], david.history
   end
 
@@ -389,6 +439,25 @@ class CallbacksTest < ActiveRecord::TestCase
     ], david.history
   end
 
+  def test_before_write_returning_false
+    david = WriteImmutableDeveloper.find(1)
+    assert david.valid?
+    assert !david.save
+    assert_raise(ActiveRecord::RecordNotSaved) { david.save! }
+
+    david = WriteImmutableDeveloper.find(1)
+    david.salary = 10_000_000
+    assert !david.valid?
+    assert !david.save
+    assert_raise(ActiveRecord::RecordInvalid) { david.save! }
+
+    someone = CallbackCancellationDeveloper.find(1)
+    someone.cancel_before_write = true
+    assert someone.valid?
+    assert !someone.save
+    assert_save_callbacks_not_called(someone)
+  end
+
   def test_before_save_returning_false
     david = ImmutableDeveloper.find(1)
     assert david.valid?
@@ -437,6 +506,7 @@ class CallbacksTest < ActiveRecord::TestCase
 
   def assert_save_callbacks_not_called(someone)
     assert !someone.after_save_called
+    assert !someone.after_write_called
     assert !someone.after_create_called
     assert !someone.after_update_called
   end
-- 
1.7.1

