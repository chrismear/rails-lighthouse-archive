<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-18T08:52:32+00:00</created-at>
  <creator-id type="integer">9922</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6233</number>
  <permalink>habtm-join-requires-an-active-connection</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;activerecord rails3&quot;</tag>
  <title>habtm join requires an active connection</title>
  <updated-at type="datetime">2011-05-01T01:00:48+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">8</version>
  <user-name>rails</user-name>
  <creator-name>Nathan Witmer</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
  <priority-name nil="true"></priority-name>
  <original-body>ActiveRecord::Associations#create_has_and_belongs_to_many_reflection, currently line 1814 of associations.rb, accesses AR::Base's connection in order to do some sanity checking on the association. Unfortunately, this assumes a connection is established and active when the data model is being defined, and causes an ActiveRecord::ConnectionNotEstablished exception when defining a data model without having connected. This prevents anyone from defining has_and_belongs_to_many relationships at load time.

I'm not sure what the best approach to fix this is. The sanity checking makes sense, but the assumption that the connection is there doesn't.</original-body>
  <latest-body>ActiveRecord::Associations#create_has_and_belongs_to_many_reflection, currently line 1814 of associations.rb, accesses AR::Base's connection in order to do some sanity checking on the association. Unfortunately, this assumes a connection is established and active when the data model is being defined, and causes an ActiveRecord::ConnectionNotEstablished exception when defining a data model without having connected. This prevents anyone from defining has_and_belongs_to_many relationships at load time.

I'm not sure what the best approach to fix this is. The sanity checking makes sense, but the assumption that the connection is there doesn't.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
ActiveRecord::Associations#create_has_and_belongs_to_many_reflection,
currently line 1814 of associations.rb, accesses AR::Base's
connection in order to do some sanity checking on the association.
Unfortunately, this assumes a connection is established and active
when the data model is being defined, and causes an
ActiveRecord::ConnectionNotEstablished exception when defining a
data model without having connected. This prevents anyone from
defining has_and_belongs_to_many relationships at load time.&lt;/p&gt;
&lt;p&gt;I'm not sure what the best approach to fix this is. The sanity
checking makes sense, but the assumption that the connection is
there doesn't.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveRecord::Associations#create_has_and_belongs_to_many_reflection, currently line 1814 of associations.rb, accesses AR::Base's connection in order to do some sanity checking on the association. Unfortunately, this assumes a connection is established and active when the data model is being defined, and causes an ActiveRecord::ConnectionNotEstablished exception when defining a data model without having connected. This prevents anyone from defining has_and_belongs_to_many relationships at load time.

I'm not sure what the best approach to fix this is. The sanity checking makes sense, but the assumption that the connection is there doesn't.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
ActiveRecord::Associations#create_has_and_belongs_to_many_reflection,
currently line 1814 of associations.rb, accesses AR::Base's
connection in order to do some sanity checking on the association.
Unfortunately, this assumes a connection is established and active
when the data model is being defined, and causes an
ActiveRecord::ConnectionNotEstablished exception when defining a
data model without having connected. This prevents anyone from
defining has_and_belongs_to_many relationships at load time.&lt;/p&gt;
&lt;p&gt;I'm not sure what the best approach to fix this is. The sanity
checking makes sense, but the assumption that the connection is
there doesn't.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-30T01:27:30+00:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2010-12-30T01:27:35+00:00</updated-at>
      <user-id type="integer">9922</user-id>
      <version type="integer">1</version>
      <user-name>Nathan Witmer</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm seeing this too - association declaration below.  Is there a recommended workaround?

@@@ ruby
        has_and_belongs_to_many :related_tags, :class_name =&gt; 'SemanticallyTaggable::Tag',
                                :association_foreign_key =&gt; 'related_tag_id', :join_table =&gt; 'related_tags',
                                :insert_sql =&gt; 'INSERT INTO related_tags (`tag_id`, `related_tag_id`) VALUES (#{id}, #{record.id}), (#{record.id}, #{id})',
                                :delete_sql =&gt; 'DELETE FROM related_tags WHERE (tag_id = #{id} AND related_tag_id = #{record.id}) OR (tag_id = #{record.id} AND related_tag_id = #{id})'

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm seeing this too - association declaration below. Is there a
recommended workaround?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;        has_and_belongs_to_many :related_tags, :class_name =&amp;gt; 'SemanticallyTaggable::Tag',
                                :association_foreign_key =&amp;gt; 'related_tag_id', :join_table =&amp;gt; 'related_tags',
                                :insert_sql =&amp;gt; 'INSERT INTO related_tags (`tag_id`, `related_tag_id`) VALUES (#{id}, #{record.id}), (#{record.id}, #{id})',
                                :delete_sql =&amp;gt; 'DELETE FROM related_tags WHERE (tag_id = #{id} AND related_tag_id = #{record.id}) OR (tag_id = #{record.id} AND related_tag_id = #{id})'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-17T10:36:40+00:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2011-01-17T10:36:43+00:00</updated-at>
      <user-id type="integer">124337</user-id>
      <version type="integer">2</version>
      <user-name>Russell Garner</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here's my (not very good) workaround:

after &quot;require &quot;rails/all&quot; in application.rb

@@@ ruby
  database_yml = File.expand_path('../database.yml', __FILE__)
  if File.exists?(database_yml)
    active_record_configuration = YAML.load_file(database_yml)[Rails.env]
    ActiveRecord::Base.establish_connection(active_record_configuration)
  else
    raise &quot;Please create #{database_yml} first to configure your database.&quot;
  end
@@@

However, the habtm in question is being defined in a gem, which makes it harder than it needs to be for people to add a reference to the gem.  Still open to much better suggestions than mine :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's my (not very good) workaround:&lt;/p&gt;
&lt;p&gt;after &quot;require &quot;rails/all&quot; in application.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  database_yml = File.expand_path('../database.yml', __FILE__)
  if File.exists?(database_yml)
    active_record_configuration = YAML.load_file(database_yml)[Rails.env]
    ActiveRecord::Base.establish_connection(active_record_configuration)
  else
    raise &quot;Please create #{database_yml} first to configure your database.&quot;
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, the habtm in question is being defined in a gem, which
makes it harder than it needs to be for people to add a reference
to the gem. Still open to much better suggestions than mine :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-17T10:58:01+00:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2011-01-17T10:58:07+00:00</updated-at>
      <user-id type="integer">124337</user-id>
      <version type="integer">3</version>
      <user-name>Russell Garner</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Party dresses are a whole genre of &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses, &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list is virtually inexhaustible!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Party dresses are a whole genre of &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck
wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could
possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening
Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses,
&lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail
Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list
is virtually inexhaustible!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-18T08:29:07+00:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2011-01-18T08:52:32+00:00</updated-at>
      <user-id type="integer">133048</user-id>
      <version type="integer">4</version>
      <user-name>mary01</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok, a quick `autoload` on the offending class also works very well in a Railtie and obviates the need for the above hackery :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, a quick &lt;code&gt;autoload&lt;/code&gt; on the offending class also
works very well in a Railtie and obviates the need for the above
hackery :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-31T17:57:11+00:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2011-01-31T17:57:19+00:00</updated-at>
      <user-id type="integer">124337</user-id>
      <version type="integer">5</version>
      <user-name>Russell Garner</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Don't know why I mentioned a Railtie there.  One is not required...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Don't know why I mentioned a Railtie there. One is not
required...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-31T18:02:04+00:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2011-01-31T18:02:08+00:00</updated-at>
      <user-id type="integer">124337</user-id>
      <version type="integer">6</version>
      <user-name>Russell Garner</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-01T01:00:10+01:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2011-05-01T01:00:20+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">7</version>
      <user-name>rails</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-05-01T01:00:10+01:00</created-at>
      <creator-id type="integer">9922</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6233</number>
      <permalink>habtm-join-requires-an-active-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>habtm join requires an active connection</title>
      <updated-at type="datetime">2011-05-01T01:00:48+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">8</version>
      <user-name>rails</user-name>
      <creator-name>Nathan Witmer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6233</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
