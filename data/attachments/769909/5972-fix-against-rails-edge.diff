From 040db28f07ae0f27e9bd40ddd4f289a7fcce81d5 Mon Sep 17 00:00:00 2001
From: Neeraj Singh <neerajdotname@gmail.com>
Date: Sun, 14 Nov 2010 21:54:24 -0500
Subject: [PATCH] if association is already loaded and if a find
 operation is performed on the already loaded association list
 with an empty hash then do not perform another sql

[#5972 state:resolved]
---
 .../associations/association_collection.rb         |    3 ++-
 .../associations/has_many_associations_test.rb     |   11 +++++++++++
 2 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations/association_collection.rb b/activerecord/lib/active_record/associations/association_collection.rb
index 71d8c2d..5b34ac9 100644
--- a/activerecord/lib/active_record/associations/association_collection.rb
+++ b/activerecord/lib/active_record/associations/association_collection.rb
@@ -75,6 +75,7 @@ module ActiveRecord
           find(:first, *args)
         else
           load_target unless loaded?
+          args = args[1..-1] if args.first.kind_of?(Hash) && args.first.empty?
           @target.first(*args)
         end
       end
@@ -544,7 +545,7 @@ module ActiveRecord
         end
 
         def fetch_first_or_last_using_find?(args)
-          args.first.kind_of?(Hash) || !(loaded? || !@owner.persisted? || @reflection.options[:finder_sql] ||
+          (args.first.kind_of?(Hash) && !args.first.empty?) || !(loaded? || !@owner.persisted? || @reflection.options[:finder_sql] ||
                                          !@target.all? { |record| record.persisted? } || args.first.kind_of?(Integer))
         end
 
diff --git a/activerecord/test/cases/associations/has_many_associations_test.rb b/activerecord/test/cases/associations/has_many_associations_test.rb
index e9c119b..1bc48c8 100644
--- a/activerecord/test/cases/associations/has_many_associations_test.rb
+++ b/activerecord/test/cases/associations/has_many_associations_test.rb
@@ -66,6 +66,17 @@ class HasManyAssociationsTest < ActiveRecord::TestCase
     assert_equal 'exotic', bulb.name
   end
 
+  def test_no_sql_should_be_fired_if_association_already_loaded
+    car = Car.create(:name => 'honda')
+    bulb = car.bulbs.create
+    bulbs = Car.first.bulbs
+    bulbs.inspect # to load all instances of bulbs
+    assert_no_queries do
+      bulbs.first()
+      bulbs.first({})
+    end
+  end
+
   def test_create_resets_cached_counters
     person = Person.create!(:first_name => 'tenderlove')
     post   = Post.first
-- 
1.7.2

