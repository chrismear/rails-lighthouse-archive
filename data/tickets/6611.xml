<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-24T03:00:22+00:00</created-at>
  <creator-id type="integer">142611</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6611</number>
  <permalink>activerecord-query-changing-when-a-dotperiod-is-in-condition-value</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>ActiveRecord query changing when a dot/period is in condition value</title>
  <updated-at type="datetime">2011-03-24T03:44:52+00:00</updated-at>
  <user-id type="integer">30291</user-id>
  <version type="integer">2</version>
  <user-name>Anuj Dutta</user-name>
  <creator-name>Corey Ward</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6611</url>
  <priority-name>Low</priority-name>
  <original-body>I have created a barebones Rails app demonstrating this bug: https://github.com/coreyward/bug-demo

I also have a Question open on StackOverflow about this: http://stackoverflow.com/questions/5199235/activerecord-query-changing-when-a-dot-period-is-in-condition-value

I don't have the skills/knowledge to know A) where this is coming from or B) how to fix it. Any help would be very much appreciated.

---

This bug occurs when you have a &quot;child&quot; model (one that `belongs_to` another model) with an `order` scope on it and you try to set a `where` condition.

So for the following models:

    class Person &lt; ActiveRecord::Base
      has_many :items
    end
    
    class Item &lt; ActiveRecord::Base
      belongs_to :person
      default_scope order(:ordinal)
    end

With the following calls:

    Person.includes(:items).where(:name =&gt; 'John')
    # or
    Person.includes(:items).find_by_name 'John'
    
The items loaded are ordered by the `ordinal` on each `Item`. 

If you introduce a period into the name, though (e.g. &quot;John.Smith&quot;), the order scope is ignored.

To see this in action...

    $ git clone git://github.com/coreyward/bug-demo.git
    $ cd bug-demo
    $ rake db:create db:migrate db:seed
    $ rails s

And then fire up [http://localhost:3000/](http://localhost:3000/) and see for yourself.</original-body>
  <latest-body>I have created a barebones Rails app demonstrating this bug: https://github.com/coreyward/bug-demo

I also have a Question open on StackOverflow about this: http://stackoverflow.com/questions/5199235/activerecord-query-changing-when-a-dot-period-is-in-condition-value

I don't have the skills/knowledge to know A) where this is coming from or B) how to fix it. Any help would be very much appreciated.

---

This bug occurs when you have a &quot;child&quot; model (one that `belongs_to` another model) with an `order` scope on it and you try to set a `where` condition.

So for the following models:

    class Person &lt; ActiveRecord::Base
      has_many :items
    end
    
    class Item &lt; ActiveRecord::Base
      belongs_to :person
      default_scope order(:ordinal)
    end

With the following calls:

    Person.includes(:items).where(:name =&gt; 'John')
    # or
    Person.includes(:items).find_by_name 'John'
    
The items loaded are ordered by the `ordinal` on each `Item`. 

If you introduce a period into the name, though (e.g. &quot;John.Smith&quot;), the order scope is ignored.

To see this in action...

    $ git clone git://github.com/coreyward/bug-demo.git
    $ cd bug-demo
    $ rake db:create db:migrate db:seed
    $ rails s

And then fire up [http://localhost:3000/](http://localhost:3000/) and see for yourself.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have created a barebones Rails app demonstrating this bug:
&lt;a href=
&quot;https://github.com/coreyward/bug-demo&quot;&gt;https://github.com/coreyward/bug-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also have a Question open on StackOverflow about this:
&lt;a href=&quot;http://stackoverflow.com/questions/5199235/activerecord-query-changing-when-a-dot-period-is-in-condition-value&quot;&gt;
http://stackoverflow.com/questions/5199235/activerecord-query-chang...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don't have the skills/knowledge to know A) where this is
coming from or B) how to fix it. Any help would be very much
appreciated.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This bug occurs when you have a &quot;child&quot; model (one that
&lt;code&gt;belongs_to&lt;/code&gt; another model) with an &lt;code&gt;order&lt;/code&gt;
scope on it and you try to set a &lt;code&gt;where&lt;/code&gt; condition.&lt;/p&gt;
&lt;p&gt;So for the following models:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Person &amp;lt; ActiveRecord::Base
  has_many :items
end

class Item &amp;lt; ActiveRecord::Base
  belongs_to :person
  default_scope order(:ordinal)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With the following calls:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Person.includes(:items).where(:name =&amp;gt; 'John')
# or
Person.includes(:items).find_by_name 'John'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The items loaded are ordered by the &lt;code&gt;ordinal&lt;/code&gt; on each
&lt;code&gt;Item&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you introduce a period into the name, though (e.g.
&quot;John.Smith&quot;), the order scope is ignored.&lt;/p&gt;
&lt;p&gt;To see this in action...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ git clone git://github.com/coreyward/bug-demo.git
$ cd bug-demo
$ rake db:create db:migrate db:seed
$ rails s&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And then fire up &lt;a href=
&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; and see for
yourself.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have created a barebones Rails app demonstrating this bug: https://github.com/coreyward/bug-demo

I also have a Question open on StackOverflow about this: http://stackoverflow.com/questions/5199235/activerecord-query-changing-when-a-dot-period-is-in-condition-value

I don't have the skills/knowledge to know A) where this is coming from or B) how to fix it. Any help would be very much appreciated.

---

This bug occurs when you have a &quot;child&quot; model (one that `belongs_to` another model) with an `order` scope on it and you try to set a `where` condition.

So for the following models:

    class Person &lt; ActiveRecord::Base
      has_many :items
    end
    
    class Item &lt; ActiveRecord::Base
      belongs_to :person
      default_scope order(:ordinal)
    end

With the following calls:

    Person.includes(:items).where(:name =&gt; 'John')
    # or
    Person.includes(:items).find_by_name 'John'
    
The items loaded are ordered by the `ordinal` on each `Item`. 

If you introduce a period into the name, though (e.g. &quot;John.Smith&quot;), the order scope is ignored.

To see this in action...

    $ git clone git://github.com/coreyward/bug-demo.git
    $ cd bug-demo
    $ rake db:create db:migrate db:seed
    $ rails s

And then fire up [http://localhost:3000/](http://localhost:3000/) and see for yourself.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have created a barebones Rails app demonstrating this bug:
&lt;a href=
&quot;https://github.com/coreyward/bug-demo&quot;&gt;https://github.com/coreyward/bug-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also have a Question open on StackOverflow about this:
&lt;a href=&quot;http://stackoverflow.com/questions/5199235/activerecord-query-changing-when-a-dot-period-is-in-condition-value&quot;&gt;
http://stackoverflow.com/questions/5199235/activerecord-query-chang...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don't have the skills/knowledge to know A) where this is
coming from or B) how to fix it. Any help would be very much
appreciated.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This bug occurs when you have a &quot;child&quot; model (one that
&lt;code&gt;belongs_to&lt;/code&gt; another model) with an &lt;code&gt;order&lt;/code&gt;
scope on it and you try to set a &lt;code&gt;where&lt;/code&gt; condition.&lt;/p&gt;
&lt;p&gt;So for the following models:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Person &amp;lt; ActiveRecord::Base
  has_many :items
end

class Item &amp;lt; ActiveRecord::Base
  belongs_to :person
  default_scope order(:ordinal)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With the following calls:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Person.includes(:items).where(:name =&amp;gt; 'John')
# or
Person.includes(:items).find_by_name 'John'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The items loaded are ordered by the &lt;code&gt;ordinal&lt;/code&gt; on each
&lt;code&gt;Item&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you introduce a period into the name, though (e.g.
&quot;John.Smith&quot;), the order scope is ignored.&lt;/p&gt;
&lt;p&gt;To see this in action...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ git clone git://github.com/coreyward/bug-demo.git
$ cd bug-demo
$ rake db:create db:migrate db:seed
$ rails s&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And then fire up &lt;a href=
&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; and see for
yourself.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T03:00:22+00:00</created-at>
      <creator-id type="integer">142611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6611</number>
      <permalink>activerecord-query-changing-when-a-dotperiod-is-in-condition-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord query changing when a dot/period is in condition value</title>
      <updated-at type="datetime">2011-03-24T03:00:25+00:00</updated-at>
      <user-id type="integer">142611</user-id>
      <version type="integer">1</version>
      <user-name>Corey Ward</user-name>
      <creator-name>Corey Ward</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6611</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks for such a detailed info and the demo application. Ran the app and can confirm that this is a bug. I am not sure what is causing it yet but I am investigating.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for such a detailed info and the demo application. Ran
the app and can confirm that this is a bug. I am not sure what is
causing it yet but I am investigating.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T03:44:43+00:00</created-at>
      <creator-id type="integer">142611</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6611</number>
      <permalink>activerecord-query-changing-when-a-dotperiod-is-in-condition-value</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord query changing when a dot/period is in condition value</title>
      <updated-at type="datetime">2011-03-24T03:44:52+00:00</updated-at>
      <user-id type="integer">30291</user-id>
      <version type="integer">2</version>
      <user-name>Anuj Dutta</user-name>
      <creator-name>Corey Ward</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6611</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
