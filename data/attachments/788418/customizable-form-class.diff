From 00b4a039b1b645bc6e221ea85280364da8bfb1f4 Mon Sep 17 00:00:00 2001
From: Andrei Bocan <zmaxor@gmail.com>
Date: Fri, 19 Nov 2010 20:25:21 +0200
Subject: [PATCH] Allow customization of form class for button_to

---
 actionpack/lib/action_view/helpers/url_helper.rb |   16 +++++++++++++---
 actionpack/test/template/url_helper_test.rb      |    4 ++++
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/url_helper.rb b/actionpack/lib/action_view/helpers/url_helper.rb
index c23315b..cfa88c9 100644
--- a/actionpack/lib/action_view/helpers/url_helper.rb
+++ b/actionpack/lib/action_view/helpers/url_helper.rb
@@ -253,8 +253,9 @@ module ActionView
       # using the +link_to+ method with the <tt>:method</tt> modifier as described in
       # the +link_to+ documentation.
       #
-      # The generated form element has a class name of <tt>button_to</tt>
-      # to allow styling of the form itself and its children. You can control
+      # By default, the generated form element has a class name of <tt>button_to</tt>
+      # to allow styling of the form itself and its children. This can be changed
+      # using the <tt>:form_class</tt> modifier within +html_options+. You can control
       # the form submission and input element behavior using +html_options+.
       # This method accepts the <tt>:method</tt> and <tt>:confirm</tt> modifiers
       # described in the +link_to+ documentation. If no <tt>:method</tt> modifier
@@ -275,6 +276,8 @@ module ActionView
       #   processed normally, otherwise no action is taken.
       # * <tt>:remote</tt> -  If set to true, will allow the Unobtrusive JavaScript drivers to control the
       #   submit behaviour. By default this behaviour is an ajax submit.
+      # * <tt>:form_class</tt> - This controls the class of the form within which the submit button will
+      #   be placed
       #
       # ==== Examples
       #   <%= button_to "New", :action => "new" %>
@@ -283,6 +286,12 @@ module ActionView
       #   #    </form>"
       #
       #
+      #   <%= button_to "New", :action => "new", :form_class => "new-thing" %>
+      #   # => "<form method="post" action="/controller/new" class="new-thing">
+      #   #      <div><input value="New" type="submit" /></div>
+      #   #    </form>"
+      #
+      #
       #   <%= button_to "Delete Image", { :action => "delete", :id => @image.id },
       #             :confirm => "Are you sure?", :method => :delete %>
       #   # => "<form method="post" action="/images/delete/1" class="button_to">
@@ -312,6 +321,7 @@ module ActionView
         end
 
         form_method = method.to_s == 'get' ? 'get' : 'post'
+        form_class = html_options.delete('form_class') || 'button_to'
 
         remote = html_options.delete('remote')
 
@@ -327,7 +337,7 @@ module ActionView
 
         html_options.merge!("type" => "submit", "value" => name)
 
-        ("<form method=\"#{form_method}\" action=\"#{ERB::Util.html_escape(url)}\" #{"data-remote=\"true\"" if remote} class=\"button_to\"><div>" +
+        ("<form method=\"#{form_method}\" action=\"#{ERB::Util.html_escape(url)}\" #{"data-remote=\"true\"" if remote} class=\"#{ERB::Util.html_escape(form_class)}\"><div>" +
           method_tag + tag("input", html_options) + request_token_tag + "</div></form>").html_safe
       end
 
diff --git a/actionpack/test/template/url_helper_test.rb b/actionpack/test/template/url_helper_test.rb
index 4a8cea3..4223231 100644
--- a/actionpack/test/template/url_helper_test.rb
+++ b/actionpack/test/template/url_helper_test.rb
@@ -50,6 +50,10 @@ class UrlHelperTest < ActiveSupport::TestCase
     assert_dom_equal "<form method=\"post\" action=\"http://www.example.com\" class=\"button_to\"><div><input type=\"submit\" value=\"Hello\" /></div></form>", button_to("Hello", "http://www.example.com")
   end
 
+  def test_button_to_with_form_class
+    assert_dom_equal "<form method=\"post\" action=\"http://www.example.com\" class=\"custom-class\"><div><input type=\"submit\" value=\"Hello\" /></div></form>", button_to("Hello", "http://www.example.com", :form_class => 'custom-class')
+  end
+
   def test_button_to_with_query
     assert_dom_equal "<form method=\"post\" action=\"http://www.example.com/q1=v1&amp;q2=v2\" class=\"button_to\"><div><input type=\"submit\" value=\"Hello\" /></div></form>", button_to("Hello", "http://www.example.com/q1=v1&q2=v2")
   end
-- 
1.7.0

