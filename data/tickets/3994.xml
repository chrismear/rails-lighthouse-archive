<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-18T21:24:24+00:00</created-at>
  <creator-id type="integer">52753</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3994</number>
  <permalink>require-active_support-doesnt-provide-cattr_accessor-method</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activesupport &quot;active_support core_ext&quot; core_ext</tag>
  <title>ActiveSupport 3 doesn't autoload core extensions</title>
  <updated-at type="datetime">2010-02-23T21:31:56+00:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">5</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Marc Love</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3994</url>
  <priority-name>Low</priority-name>
  <original-body>**Update:**
In fact it seems none of ActiveSupport's core extensions are autoloaded anymore. Is that intentional?

If so, it would seem unwise. There's a plethora of libraries out there which depend on those core extensions. I just ran into another related issue where requiring ActiveMerchant fails because it depends on the existence of HashWithIndifferentAccess.

-----

@@@ ruby
require 'rubygems'
require 'active_support'
class Person
  cattr_accessor :type
end
@@@

results in:

`NoMethodError: undefined method 'cattr_accessor' for Person:Class from (irb):4`

The old (and deprecated) loading method of &quot;require 'activesupport'&quot; works just fine though:

@@@ ruby
require 'rubygems'
require 'activesupport'
class Person
  cattr_accessor :type
end
@@@

This raises no error and works as expected.</original-body>
  <latest-body>**Update:**
In fact it seems none of ActiveSupport's core extensions are autoloaded anymore. Is that intentional?

If so, it would seem unwise. There's a plethora of libraries out there which depend on those core extensions. I just ran into another related issue where requiring ActiveMerchant fails because it depends on the existence of HashWithIndifferentAccess.

-----

@@@ ruby
require 'rubygems'
require 'active_support'
class Person
  cattr_accessor :type
end
@@@

results in:

`NoMethodError: undefined method 'cattr_accessor' for Person:Class from (irb):4`

The old (and deprecated) loading method of &quot;require 'activesupport'&quot; works just fine though:

@@@ ruby
require 'rubygems'
require 'activesupport'
class Person
  cattr_accessor :type
end
@@@

This raises no error and works as expected.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; In fact it seems none of
ActiveSupport's core extensions are autoloaded anymore. Is that
intentional?&lt;/p&gt;
&lt;p&gt;If so, it would seem unwise. There's a plethora of libraries out
there which depend on those core extensions. I just ran into
another related issue where requiring ActiveMerchant fails because
it depends on the existence of HashWithIndifferentAccess.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'rubygems'
require 'active_support'
class Person
  cattr_accessor :type
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;results in:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NoMethodError: undefined method 'cattr_accessor' for
Person:Class from (irb):4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The old (and deprecated) loading method of &quot;require
'activesupport'&quot; works just fine though:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'rubygems'
require 'activesupport'
class Person
  cattr_accessor :type
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This raises no error and works as expected.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>**Update:**
In fact it seems none of ActiveSupport's core extensions are autoloaded anymore. Is that intentional?

If so, it would seem unwise. There's a plethora of libraries out there which depend on those core extensions. I just ran into another related issue where requiring ActiveMerchant fails because it depends on the existence of HashWithIndifferentAccess.

-----

@@@ ruby
require 'rubygems'
require 'active_support'
class Person
  cattr_accessor :type
end
@@@

results in:

`NoMethodError: undefined method 'cattr_accessor' for Person:Class from (irb):4`

The old (and deprecated) loading method of &quot;require 'activesupport'&quot; works just fine though:

@@@ ruby
require 'rubygems'
require 'activesupport'
class Person
  cattr_accessor :type
end
@@@

This raises no error and works as expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; In fact it seems none of
ActiveSupport's core extensions are autoloaded anymore. Is that
intentional?&lt;/p&gt;
&lt;p&gt;If so, it would seem unwise. There's a plethora of libraries out
there which depend on those core extensions. I just ran into
another related issue where requiring ActiveMerchant fails because
it depends on the existence of HashWithIndifferentAccess.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'rubygems'
require 'active_support'
class Person
  cattr_accessor :type
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;results in:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NoMethodError: undefined method 'cattr_accessor' for
Person:Class from (irb):4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The old (and deprecated) loading method of &quot;require
'activesupport'&quot; works just fine though:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'rubygems'
require 'activesupport'
class Person
  cattr_accessor :type
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This raises no error and works as expected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-18T21:24:24+00:00</created-at>
      <creator-id type="integer">52753</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3994</number>
      <permalink>require-active_support-doesnt-provide-cattr_accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport cattr_accessor</tag>
      <title>require &quot;active_support&quot; doesn't provide cattr_accessor method</title>
      <updated-at type="datetime">2010-02-18T22:53:52+00:00</updated-at>
      <user-id type="integer">52753</user-id>
      <version type="integer">1</version>
      <user-name>Marc Love</user-name>
      <creator-name>Marc Love</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3994</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-18T22:49:54+00:00</created-at>
      <creator-id type="integer">52753</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport cattr_accessor
:title: require &quot;active_support&quot; doesn't provide cattr_accessor method
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3994</number>
      <permalink>require-active_support-doesnt-provide-cattr_accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport &quot;active_support core_ext&quot; core_ext</tag>
      <title>ActiveSupport 3 doesn't autoload core extensions</title>
      <updated-at type="datetime">2010-02-18T22:49:55+00:00</updated-at>
      <user-id type="integer">52753</user-id>
      <version type="integer">2</version>
      <user-name>Marc Love</user-name>
      <creator-name>Marc Love</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3994</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Pretty sure this is intentional. If you want everything in active_support you need to use `require 'active_support/all'

That's generally a terrible idea though. The best approach for ActiveSupport 3.0 is to pick out the exact require that you need for the feature you are using. That way you avoid the overhead of loading the entire library.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pretty sure this is intentional. If you want everything in
active_support you need to use &lt;code&gt;require
'active_support/all'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That's generally a terrible idea though. The best approach for
ActiveSupport 3.0 is to pick out the exact require that you need
for the feature you are using. That way you avoid the overhead of
loading the entire library.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-19T08:29:35+00:00</created-at>
      <creator-id type="integer">52753</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3994</number>
      <permalink>require-active_support-doesnt-provide-cattr_accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport &quot;active_support core_ext&quot; core_ext</tag>
      <title>ActiveSupport 3 doesn't autoload core extensions</title>
      <updated-at type="datetime">2010-02-19T08:29:38+00:00</updated-at>
      <user-id type="integer">37772</user-id>
      <version type="integer">3</version>
      <user-name>Jacques Crocker</user-name>
      <creator-name>Marc Love</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3994</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good to know Jacques. Thanks for the info.

It would be nice if the core team would mention this on the Rails blog. I'm sure there's going to be plenty of gem/plugin repositories out there that are going to need updating.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good to know Jacques. Thanks for the info.&lt;/p&gt;
&lt;p&gt;It would be nice if the core team would mention this on the
Rails blog. I'm sure there's going to be plenty of gem/plugin
repositories out there that are going to need updating.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-19T22:39:37+00:00</created-at>
      <creator-id type="integer">52753</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3994</number>
      <permalink>require-active_support-doesnt-provide-cattr_accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport &quot;active_support core_ext&quot; core_ext</tag>
      <title>ActiveSupport 3 doesn't autoload core extensions</title>
      <updated-at type="datetime">2010-02-19T22:39:41+00:00</updated-at>
      <user-id type="integer">52753</user-id>
      <version type="integer">4</version>
      <user-name>Marc Love</user-name>
      <creator-name>Marc Love</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3994</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yup, this is intentional as discussed in the mailing list.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yup, this is intentional as discussed in the mailing list.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-02-23T21:31:50+00:00</created-at>
      <creator-id type="integer">52753</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3994</number>
      <permalink>require-active_support-doesnt-provide-cattr_accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activesupport &quot;active_support core_ext&quot; core_ext</tag>
      <title>ActiveSupport 3 doesn't autoload core extensions</title>
      <updated-at type="datetime">2010-02-23T21:31:56+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Marc Love</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3994</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
