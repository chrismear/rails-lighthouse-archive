<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-05T15:41:00+01:00</created-at>
  <creator-id type="integer">1543</creator-id>
  <milestone-due-on type="datetime">2009-03-18T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">9901</milestone-id>
  <number type="integer">114</number>
  <permalink>namespaced-models-and-sti</permalink>
  <priority type="integer">11168</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug sti</tag>
  <title>Namespaced models and STI</title>
  <updated-at type="datetime">2008-06-01T01:15:58+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">10</version>
  <user-name>Repository</user-name>
  <creator-name>Rodrigo Kochenburger</creator-name>
  <assigned-user-name>Rick</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
  <milestone-title>2.1.1</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When using namespaced models and STI, ActiveRecord stores the demodulized name of the class. This work if all the class in the STI hierarchy are in the same namespace but will break otherwise.

Example:

@@@ ruby
class CollectionItem &lt; ActiveRecord::Base; end
class ComicCollection::Item &lt; CollectionItem; end

item = ComicCollection::Item.new
item.type # =&gt; 'Item'

item2 = CollectionItem.find(item.id) # raise an error because can't find class Item
@@@

This patch add an option that when enable (it is by default) will store the full class name.</original-body>
  <latest-body>When using namespaced models and STI, ActiveRecord stores the demodulized name of the class. This work if all the class in the STI hierarchy are in the same namespace but will break otherwise.

Example:

@@@ ruby
class CollectionItem &lt; ActiveRecord::Base; end
class ComicCollection::Item &lt; CollectionItem; end

item = ComicCollection::Item.new
item.type # =&gt; 'Item'

item2 = CollectionItem.find(item.id) # raise an error because can't find class Item
@@@

This patch add an option that when enable (it is by default) will store the full class name.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When using namespaced models and STI, ActiveRecord stores the demodulized name of the class. This work if all the class in the STI hierarchy are in the same namespace but will break otherwise.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class CollectionItem &amp;lt; ActiveRecord::Base; end
class ComicCollection::Item &amp;lt; CollectionItem; end

item = ComicCollection::Item.new
item.type # =&amp;gt; 'Item'

item2 = CollectionItem.find(item.id) # raise an error because can't find class Item&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This patch add an option that when enable (it is by default) will store the full class name.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using namespaced models and STI, ActiveRecord stores the demodulized name of the class. This work if all the class in the STI hierarchy are in the same namespace but will break otherwise.

Example:

@@@ ruby
class CollectionItem &lt; ActiveRecord::Base; end
class ComicCollection::Item &lt; CollectionItem; end

item = ComicCollection::Item.new
item.type # =&gt; 'Item'

item2 = CollectionItem.find(item.id) # raise an error because can't find class Item
@@@

This patch add an option that when enable (it is by default) will store the full class name.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When using namespaced models and STI, ActiveRecord stores the demodulized name of the class. This work if all the class in the STI hierarchy are in the same namespace but will break otherwise.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class CollectionItem &amp;lt; ActiveRecord::Base; end
class ComicCollection::Item &amp;lt; CollectionItem; end

item = ComicCollection::Item.new
item.type # =&amp;gt; 'Item'

item2 = CollectionItem.find(item.id) # raise an error because can't find class Item&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This patch add an option that when enable (it is by default) will store the full class name.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T15:41:01+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-05T15:41:01+01:00</updated-at>
      <user-id type="integer">1543</user-id>
      <version type="integer">1</version>
      <user-name>Rodrigo Kochenburger</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Why the need to add new tables for tests ? It should be possible to use existing tables.

Rest looks good.

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Why the need to add new tables for tests ? It should be possible to use existing tables.
&lt;/p&gt;&lt;p&gt;
Rest looks good.
&lt;/p&gt;&lt;p&gt;
Thanks!
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-11T22:45:16+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-11T22:45:16+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I really want this in 2.1.  Though, the default should be off to keep the existing behavior, and on for Rails 3.0 and forward.

I also agree that the new tables for tests aren't necessary.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I really want this in 2.1.  Though, the default should be off to keep the existing behavior, and on for Rails 3.0 and forward.
&lt;/p&gt;&lt;p&gt;
I also agree that the new tables for tests aren't necessary.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-13T21:51:14+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-13T21:51:14+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">3</version>
      <user-name>Rick</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also, I'm going to remove the choice since it shouldn't break for anyone.  Anyone using STI without namespaced models will be unaffected, and this bug is basically preventing anyone from using STI with namespaced models.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Also, I'm going to remove the choice since it shouldn't break for anyone.  Anyone using STI without namespaced models will be unaffected, and this bug is basically preventing anyone from using STI with namespaced models.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-13T21:55:49+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-13T21:55:49+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">4</version>
      <user-name>Rick</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-13T23:23:01+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-13T23:23:01+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">5</version>
      <user-name>Rick</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [bca8751e40a5594c4de2ca58e089b8d98e44632b]) Add ActiveRecord option to store the full class name on STI's type column, allowing one to have STI subclasses in different namespaces [#114]

Signed-off-by: rick &lt;technoweenie@gmail.com&gt;
http://github.com/rails/rails/commit/bca8751e40a5594c4de2ca58e089b8d98e44632b</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [bca8751e40a5594c4de2ca58e089b8d98e44632b]) Add ActiveRecord option to store the full class name on STI's type column, allowing one to have STI subclasses in different namespaces [#114]
&lt;/p&gt;&lt;p&gt;
Signed-off-by: rick 
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/bca8751e40a5594c4de2ca58e089b8d98e44632b&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-13T23:23:01+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-13T23:23:01+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>HasManyThroughAssociation#build_sti_condition needs to be addressed as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
HasManyThroughAssociation#build_sti_condition needs to be addressed as well.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T03:13:17+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-14T03:13:17+01:00</updated-at>
      <user-id type="integer">17814</user-id>
      <version type="integer">7</version>
      <user-name>Jonathan Viney</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That's great. Thanks Rick.

About having extra table, sorry about that. I did that to avoid breaking other things, my bad.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
That's great. Thanks Rick.
&lt;/p&gt;&lt;p&gt;
About having extra table, sorry about that. I did that to avoid breaking other things, my bad.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T01:18:41+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-14T01:18:41+01:00</updated-at>
      <user-id type="integer">1543</user-id>
      <version type="integer">8</version>
      <user-name>Rodrigo Kochenburger</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>No worries.

Just FYI there are three issues remaining:

* HasManyThroughAssociation#build_sti_condition, as Jonathan mentioned above.
* ActiveRecord::Base#type_name_with_module adds the parent name, resulting in an annoying ruby warning.
* You can't create migration-specific STI models because the migration name will be saved to the #type value too.  (see the &quot;rails core ML post&quot;:http://groups.google.com/group/rubyonrails-core/browse_thread/thread/e51fe39fb67b9d6d).</body>
      <body-html>&lt;div&gt;&lt;p&gt;
No worries.
&lt;/p&gt;&lt;p&gt;
Just FYI there are three issues remaining:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
HasManyThroughAssociation#build_sti_condition, as Jonathan mentioned above.
&lt;/li&gt;&lt;li&gt;
ActiveRecord::Base#type_name_with_module adds the parent name, resulting in an annoying ruby warning.
&lt;/li&gt;&lt;li&gt;
You can't create migration-specific STI models because the migration name will be saved to the #type value too.  (see the &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/e51fe39fb67b9d6d)&quot;&gt;rails core ML post&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T03:14:15+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-05-14T03:14:15+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">9</version>
      <user-name>Rick</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [72483c0d4c1e4ea794919974100acc2f255f6fd2]) Add ActiveRecord::Base.sti_name that checks ActiveRecord::Base#store_full_sti_class? and returns either the full or demodulized name. [rick] [#114 state:resolved]
http://github.com/rails/rails/commit/72483c0d4c1e4ea794919974100acc2f255f6fd2</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [72483c0d4c1e4ea794919974100acc2f255f6fd2]) Add ActiveRecord::Base.sti_name that checks ActiveRecord::Base#store_full_sti_class? and returns either the full or demodulized name. [rick] [#114 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/72483c0d4c1e4ea794919974100acc2f255f6fd2&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-01T01:15:58+01:00</created-at>
      <creator-id type="integer">1543</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">114</number>
      <permalink>namespaced-models-and-sti</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Namespaced models and STI</title>
      <updated-at type="datetime">2008-06-01T01:15:58+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">10</version>
      <user-name>Repository</user-name>
      <creator-name>Rodrigo Kochenburger</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/114</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f45f6d7f3e99f6da3ea2e92ad5b0025bc85a81a5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-05T15:41:01+01:00</created-at>
      <filename>0001-Add-ActiveRecord-option-to-store-the-full-class-name.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21506</id>
      <size type="integer">5644</size>
      <uploader-id type="integer">1543</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21506/0001-Add-ActiveRecord-option-to-store-the-full-class-name.patch</url>
    </attachment>
  </attachments>
</ticket>
