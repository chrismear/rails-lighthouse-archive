<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-04T16:24:40+00:00</created-at>
  <creator-id type="integer">16635</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">974</number>
  <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>30 activerecord association bug nullify polymorphic</tag>
  <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
  <updated-at type="datetime">2011-04-29T09:14:35+01:00</updated-at>
  <user-id type="integer">147397</user-id>
  <version type="integer">12</version>
  <user-name>joson</user-name>
  <creator-name>Brad Gessler</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Given the code

@@@ ruby
class Person
  has_one :thingy, :as =&gt; :thingable, :dependent =&gt; :nullify
end

class Thing
  belongs_to :thingable, :polymorphic =&gt; true
end
@@@

If I do the following

@@@ ruby
p = Person.first
p.thingy = Thing.first
p.save!  #=&gt; true
p.thingy = nil
p.save! # =&gt;
@@@

Rails will set the attributes on thingy in the database as such:

thingable_id = nil; thingable_type = Person

It is expected that :nullify would set the database column, thingable_type, to nil as well:

thingable_id = nil; thingable_type = nil

Starting at line 1451 in associations.rb on edge (http://github.com/rails/rails/tree/1156bbc06ce83e97b9202a06f9f9028d771bb1d4/activerecord/lib/active_record/associations.rb#L1451)

@@@ ruby
when :nullify
  module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&quot;
@@@

It should be something like:

@@@ ruby
when :nullify  
  if reflection.options[:as]
    module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.options[:as]}_id = NULL, #{reflection.options[:as]}_type = NULL ),  %(#{dependent_conditions})) }&quot;
  else
    module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&quot;
  end
@@@</original-body>
  <latest-body>Given the code

@@@ ruby
class Person
  has_one :thingy, :as =&gt; :thingable, :dependent =&gt; :nullify
end

class Thing
  belongs_to :thingable, :polymorphic =&gt; true
end
@@@

If I do the following

@@@ ruby
p = Person.first
p.thingy = Thing.first
p.save!  #=&gt; true
p.thingy = nil
p.save! # =&gt;
@@@

Rails will set the attributes on thingy in the database as such:

thingable_id = nil; thingable_type = Person

It is expected that :nullify would set the database column, thingable_type, to nil as well:

thingable_id = nil; thingable_type = nil

Starting at line 1451 in associations.rb on edge (http://github.com/rails/rails/tree/1156bbc06ce83e97b9202a06f9f9028d771bb1d4/activerecord/lib/active_record/associations.rb#L1451)

@@@ ruby
when :nullify
  module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&quot;
@@@

It should be something like:

@@@ ruby
when :nullify  
  if reflection.options[:as]
    module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.options[:as]}_id = NULL, #{reflection.options[:as]}_type = NULL ),  %(#{dependent_conditions})) }&quot;
  else
    module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&quot;
  end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given the code&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person
  has_one :thingy, :as =&amp;gt; :thingable, :dependent =&amp;gt; :nullify
end

class Thing
  belongs_to :thingable, :polymorphic =&amp;gt; true
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If I do the following&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
p = Person.first
p.thingy = Thing.first
p.save!  #=&amp;gt; true
p.thingy = nil
p.save! # =&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rails will set the attributes on thingy in the database as
such:&lt;/p&gt;
&lt;p&gt;thingable_id = nil; thingable_type = Person&lt;/p&gt;
&lt;p&gt;It is expected that :nullify would set the database column,
thingable_type, to nil as well:&lt;/p&gt;
&lt;p&gt;thingable_id = nil; thingable_type = nil&lt;/p&gt;
&lt;p&gt;Starting at line 1451 in associations.rb on edge (&lt;a href=&quot;http://github.com/rails/rails/tree/1156bbc06ce83e97b9202a06f9f9028d771bb1d4/activerecord/lib/active_record/associations.rb#L1451&quot;&gt;http://github.com/rails/rails/tr...&lt;/a&gt;)&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
when :nullify
  module_eval &amp;quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It should be something like:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
when :nullify
  if reflection.options[:as]
    module_eval &amp;quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.options[:as]}_id = NULL, #{reflection.options[:as]}_type = NULL ),  %(#{dependent_conditions})) }&amp;quot;
  else
    module_eval &amp;quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&amp;quot;
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given the code

@@@ ruby
class Person
  has_one :thingy, :as =&gt; :thingable, :dependent =&gt; :nullify
end

class Thing
  belongs_to :thingable, :polymorphic =&gt; true
end
@@@

If I do the following

@@@ ruby
p = Person.first
p.thingy = Thing.first
p.save!  #=&gt; true
p.thingy = nil
p.save! # =&gt;
@@@

Rails will set the attributes on thingy in the database as such:

thingable_id = nil; thingable_type = Person

It is expected that :nullify would set the database column, thingable_type, to nil as well:

thingable_id = nil; thingable_type = nil

Starting at line 1451 in associations.rb on edge (http://github.com/rails/rails/tree/1156bbc06ce83e97b9202a06f9f9028d771bb1d4/activerecord/lib/active_record/associations.rb#L1451)

@@@ ruby
when :nullify
  module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&quot;
@@@

It should be something like:

@@@ ruby
when :nullify  
  if reflection.options[:as]
    module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.options[:as]}_id = NULL, #{reflection.options[:as]}_type = NULL ),  %(#{dependent_conditions})) }&quot;
  else
    module_eval &quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&quot;
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given the code&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person
  has_one :thingy, :as =&amp;gt; :thingable, :dependent =&amp;gt; :nullify
end

class Thing
  belongs_to :thingable, :polymorphic =&amp;gt; true
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If I do the following&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
p = Person.first
p.thingy = Thing.first
p.save!  #=&amp;gt; true
p.thingy = nil
p.save! # =&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rails will set the attributes on thingy in the database as
such:&lt;/p&gt;
&lt;p&gt;thingable_id = nil; thingable_type = Person&lt;/p&gt;
&lt;p&gt;It is expected that :nullify would set the database column,
thingable_type, to nil as well:&lt;/p&gt;
&lt;p&gt;thingable_id = nil; thingable_type = nil&lt;/p&gt;
&lt;p&gt;Starting at line 1451 in associations.rb on edge (&lt;a href=&quot;http://github.com/rails/rails/tree/1156bbc06ce83e97b9202a06f9f9028d771bb1d4/activerecord/lib/active_record/associations.rb#L1451&quot;&gt;http://github.com/rails/rails/tr...&lt;/a&gt;)&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
when :nullify
  module_eval &amp;quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It should be something like:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
when :nullify
  if reflection.options[:as]
    module_eval &amp;quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.options[:as]}_id = NULL, #{reflection.options[:as]}_type = NULL ),  %(#{dependent_conditions})) }&amp;quot;
  else
    module_eval &amp;quot;before_destroy { |record| #{reflection.class_name}.update_all(%(#{reflection.primary_key_name} = NULL),  %(#{dependent_conditions})) }&amp;quot;
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-05T05:56:09+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2008-09-05T15:38:10+01:00</updated-at>
      <user-id type="integer">16635</user-id>
      <version type="integer">1</version>
      <user-name>Brad Gessler</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you please upload a patch with a test case - http://rails.lighthouseapp.com/projects/8994/sending-patches ?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you please upload a patch with a test case - &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;
?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-20T16:00:02+00:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 85
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2008-12-20T16:00:04+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is still broken in Rails 3.0.0 beta 2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is still broken in Rails 3.0.0 beta 2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T23:18:37+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 activerecord association bug nullify polymorphic
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>3.0.0.beta activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2010-04-10T23:18:40+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T23:22:39+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 3.0.0.beta activerecord association bug nullify polymorphic
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>3.0 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2010-04-10T23:22:40+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In my opinion this is the expected behavior, as :dependent =&gt; :nullify should only null the thingy when person is destroyed.
The bug itself seems to exist on destroying records also, just that the original authors example is a bit wrong.

@@@
person = Person.first
person.thingy = Thing.first
person.save
person.destroy

Thing.first.thingable_id # =&gt; nil
Thing.first.thingable_type # =&gt; Person
@@@

So it behaves like the OP described: nulls the id field but not the type field, but does so when destroying the record defining the :dependent =&gt; :nullify condition.

I have attached a patch with failing tests and a proposed fix for this issue for master (rails 3).

Tho clarify why i opted to use association.update_attribute(reflection.options[:as], nil) instead of directly setting the _id and _type column values to nil is due to the association accessor handling the in memory state of the has_one object (setting the assoc to nil) in addition to handling the database fields.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In my opinion this is the expected behavior, as :dependent =&amp;gt;
:nullify should only null the thingy when person is destroyed.&lt;br&gt;
The bug itself seems to exist on destroying records also, just that
the original authors example is a bit wrong.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;person = Person.first
person.thingy = Thing.first
person.save
person.destroy

Thing.first.thingable_id # =&amp;gt; nil
Thing.first.thingable_type # =&amp;gt; Person&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So it behaves like the OP described: nulls the id field but not
the type field, but does so when destroying the record defining the
:dependent =&amp;gt; :nullify condition.&lt;/p&gt;
&lt;p&gt;I have attached a patch with failing tests and a proposed fix
for this issue for master (rails 3).&lt;/p&gt;
&lt;p&gt;Tho clarify why i opted to use
association.update_attribute(reflection.options[:as], nil) instead
of directly setting the &lt;em&gt;id and&lt;/em&gt; type column values to nil
is due to the association accessor handling the in memory state of
the has_one object (setting the assoc to nil) in addition to
handling the database fields.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-30T14:08:06+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>3.0 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2010-04-30T14:08:14+01:00</updated-at>
      <user-id type="integer">71408</user-id>
      <version type="integer">5</version>
      <user-name>Tanel Suurhans</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also attached a patch to fix the :nullify behavior on destruction for 2-3-stable branch with tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also attached a patch to fix the :nullify behavior on
destruction for 2-3-stable branch with tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-30T14:17:02+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>3.0 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2010-04-30T14:17:06+01:00</updated-at>
      <user-id type="integer">71408</user-id>
      <version type="integer">6</version>
      <user-name>Tanel Suurhans</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Attached proposed fix for the original problem described in the ticket. Managed to solve the issue with relation_type field not set to nil.

Previous code didn't handle the foreign_type column
@@@
  @target[@reflection.primary_key_name] = nil
@@@

This handles both relevant columns, although there might be a better way to handle it
@@@
 @target.send(&quot;#{@reflection.options.fetch(:as, @reflection.primary_key_name)}=&quot;, nil)
@@@

What i didn't manage is the in-memory state of the object on the other end of the has_one association.
Seems that the reflection target and the original object are not the same, and the in-memory state stays in limbo until its explicitly reloaded. Perhaps anyone has some ideas how to handle that, as or the usage it seems a bit inconsistent with lets say a regular belongs_to relation being set to nil with both ends of the association knowing about it right away.

I will provide a patch for this issue for the 2-3-stable too if it looks okay.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached proposed fix for the original problem described in the
ticket. Managed to solve the issue with relation_type field not set
to nil.&lt;/p&gt;
&lt;p&gt;Previous code didn't handle the foreign_type column&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  @target[@reflection.primary_key_name] = nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This handles both relevant columns, although there might be a
better way to handle it&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; @target.send(&quot;#{@reflection.options.fetch(:as, @reflection.primary_key_name)}=&quot;, nil)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What i didn't manage is the in-memory state of the object on the
other end of the has_one association.&lt;br&gt;
Seems that the reflection target and the original object are not
the same, and the in-memory state stays in limbo until its
explicitly reloaded. Perhaps anyone has some ideas how to handle
that, as or the usage it seems a bit inconsistent with lets say a
regular belongs_to relation being set to nil with both ends of the
association knowing about it right away.&lt;/p&gt;
&lt;p&gt;I will provide a patch for this issue for the 2-3-stable too if
it looks okay.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-30T16:17:22+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>3.0 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2010-04-30T16:17:25+01:00</updated-at>
      <user-id type="integer">71408</user-id>
      <version type="integer">7</version>
      <user-name>Tanel Suurhans</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:34+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>3.0 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2010-05-04T18:48:34+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;nfl throwback jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;authentic nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale authentic nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;discount nfl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;cheap nfl jerseys&lt;/a&gt;
&lt;a href=&quot; http://www.wholesale-nflshop.com/&quot;&gt;wholesale nfl jerseys&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;nfl throwback
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;authentic nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;wholesale authentic nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;discount nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.wholesalenflstore.com/&quot;&gt;cheap nfl
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a&gt;wholesale nfl jerseys&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-04T06:11:07+00:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">397</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>3.0 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2011-01-04T16:24:40+00:00</updated-at>
      <user-id type="integer">131088</user-id>
      <version type="integer">9</version>
      <user-name>icooky</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-05T01:00:16+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 3.0 activerecord association bug nullify polymorphic
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>30 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2011-04-05T01:01:47+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">10</version>
      <user-name>rails</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-05T01:00:16+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>30 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2011-04-05T01:04:05+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">11</version>
      <user-name>rails</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>A &lt;a href=&quot;http://www.mvwatches.org/&quot;&gt;&lt;strong&gt;Replica Breitling&lt;/strong&gt;&lt;/a&gt; is a timepiece of high quality and functionality and you will have all the class, prestige and luxury of a wealthy, successful individual. By choosing from our selection of luxury &lt;a href=&quot;http://www.replicaswatches.biz&quot;&gt;&lt;strong&gt;Replica Watches&lt;/strong&gt;&lt;/a&gt; , you can improve your self-esteem and feel confident to enter new circles of business associates and friends. These &lt;a href=&quot;http://www.rolex-replicas.co/&quot;&gt;&lt;strong&gt;Rolex Replicas&lt;/strong&gt;&lt;/a&gt; will surely enhance your style and only you will know the watch you wear did not cost you $1,000's of dollars.&lt;br/&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;A &lt;a href=&quot;http://www.mvwatches.org/&quot;&gt;&lt;strong&gt;Replica
Breitling&lt;/strong&gt;&lt;/a&gt; is a timepiece of high quality and
functionality and you will have all the class, prestige and luxury
of a wealthy, successful individual. By choosing from our selection
of luxury &lt;a href=&quot;http://www.replicaswatches.biz&quot;&gt;&lt;strong&gt;Replica
Watches&lt;/strong&gt;&lt;/a&gt; , you can improve your self-esteem and feel
confident to enter new circles of business associates and friends.
These &lt;a href=&quot;http://www.rolex-replicas.co/&quot;&gt;&lt;strong&gt;Rolex
Replicas&lt;/strong&gt;&lt;/a&gt; will surely enhance your style and only you
will know the watch you wear did not cost you $1,000's of
dollars.&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-29T09:14:24+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">974</number>
      <permalink>attribute_type-is-not-set-to-null-if-dependent-nullify-is-specified-for-a-belongs_to-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>30 activerecord association bug nullify polymorphic</tag>
      <title>attribute_type is not set to null if :dependent =&gt; :nullify is specified for a polymorphic belongs_to association</title>
      <updated-at type="datetime">2011-04-29T09:14:35+01:00</updated-at>
      <user-id type="integer">147397</user-id>
      <version type="integer">12</version>
      <user-name>joson</user-name>
      <creator-name>Brad Gessler</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/974</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bbfd0fef1939769b268fad74c02f087ac93f682e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-30T14:08:07+01:00</created-at>
      <filename>fix_for_poly_has_one_nullify.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">505110</id>
      <size type="integer">3552</size>
      <uploader-id type="integer">71408</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/505110/fix_for_poly_has_one_nullify.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>580dc5d3e2c1458387050fcbb91084b4d6f18888</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-30T14:17:02+01:00</created-at>
      <filename>fix_for_poly_has_one_nullify_2_3_stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">505121</id>
      <size type="integer">3291</size>
      <uploader-id type="integer">71408</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/505121/fix_for_poly_has_one_nullify_2_3_stable.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>611a1aff5aa65b7a30225a544e51c2d0cff512c6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-30T16:17:22+01:00</created-at>
      <filename>fix_poly_has_one_assign_nil_3_x.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">505319</id>
      <size type="integer">3597</size>
      <uploader-id type="integer">71408</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/505319/fix_poly_has_one_assign_nil_3_x.diff</url>
    </attachment>
  </attachments>
</ticket>
