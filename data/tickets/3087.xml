<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-18T10:27:25+01:00</created-at>
  <creator-id type="integer">5026</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">3087</number>
  <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord associations patch to_json</tag>
  <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
  <updated-at type="datetime">2010-10-15T23:01:35+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">32</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>James Herdman</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Suppose you define your `#as_json` method as such:

@@@ ruby
class Something &lt; ActiveRecord::Base
  def as_json(options={})
    { :foo =&gt; &quot;bar&quot;, :baz =&gt; &quot;balloon&quot; }
  end
end
@@@

If you have an array of these objects and then encode them to JSON via `ActiveSupport::JSON.encode`, you get a collection of the object converted to JSON in which `#as_json` is ignored.

Suppose now you define a `#to_json` method (old school, yeah) as such:

@@@ ruby
class Something &lt; ActiveRecord::Base
  def to_json(options={})
    super(:methods =&gt; [:foo, :baz])
  end
end
@@@

Like before, you encode an Array of objects to JSON via `ActiveSupport::JSON.encode`. In this scenario you will get a JSON object as you have defined via `#to_json`.

It's my understanding that we're supposed to be moving to `#as_json` for Rails 3 compatibility.</original-body>
  <latest-body>Suppose you define your `#as_json` method as such:

@@@ ruby
class Something &lt; ActiveRecord::Base
  def as_json(options={})
    { :foo =&gt; &quot;bar&quot;, :baz =&gt; &quot;balloon&quot; }
  end
end
@@@

If you have an array of these objects and then encode them to JSON via `ActiveSupport::JSON.encode`, you get a collection of the object converted to JSON in which `#as_json` is ignored.

Suppose now you define a `#to_json` method (old school, yeah) as such:

@@@ ruby
class Something &lt; ActiveRecord::Base
  def to_json(options={})
    super(:methods =&gt; [:foo, :baz])
  end
end
@@@

Like before, you encode an Array of objects to JSON via `ActiveSupport::JSON.encode`. In this scenario you will get a JSON object as you have defined via `#to_json`.

It's my understanding that we're supposed to be moving to `#as_json` for Rails 3 compatibility.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Suppose you define your &lt;code&gt;#as_json&lt;/code&gt; method as
such:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Something &amp;lt; ActiveRecord::Base
  def as_json(options={})
    { :foo =&amp;gt; &amp;quot;bar&amp;quot;, :baz =&amp;gt; &amp;quot;balloon&amp;quot; }
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have an array of these objects and then encode them to
JSON via &lt;code&gt;ActiveSupport::JSON.encode&lt;/code&gt;, you get a
collection of the object converted to JSON in which
&lt;code&gt;#as_json&lt;/code&gt; is ignored.&lt;/p&gt;
&lt;p&gt;Suppose now you define a &lt;code&gt;#to_json&lt;/code&gt; method (old
school, yeah) as such:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Something &amp;lt; ActiveRecord::Base
  def to_json(options={})
    super(:methods =&amp;gt; [:foo, :baz])
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Like before, you encode an Array of objects to JSON via
&lt;code&gt;ActiveSupport::JSON.encode&lt;/code&gt;. In this scenario you will
get a JSON object as you have defined via
&lt;code&gt;#to_json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It's my understanding that we're supposed to be moving to
&lt;code&gt;#as_json&lt;/code&gt; for Rails 3 compatibility.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Suppose you define your `#as_json` method as such:

@@@ ruby
class Something &lt; ActiveRecord::Base
  def as_json(options={})
    { :foo =&gt; &quot;bar&quot;, :baz =&gt; &quot;balloon&quot; }
  end
end
@@@

If you have an array of these objects and then encode them to JSON via `ActiveSupport::JSON.encode`, you get a collection of the object converted to JSON in which `#as_json` is ignored.

Suppose now you define a `#to_json` method (old school, yeah) as such:

@@@ ruby
class Something &lt; ActiveRecord::Base
  def to_json(options={})
    super(:methods =&gt; [:foo, :baz])
  end
end
@@@

Like before, you encode an Array of objects to JSON via `ActiveSupport::JSON.encode`. In this scenario you will get a JSON object as you have defined via `#to_json`.

It's my understanding that we're supposed to be moving to `#as_json` for Rails 3 compatibility.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Suppose you define your &lt;code&gt;#as_json&lt;/code&gt; method as
such:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Something &amp;lt; ActiveRecord::Base
  def as_json(options={})
    { :foo =&amp;gt; &quot;bar&quot;, :baz =&amp;gt; &quot;balloon&quot; }
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you have an array of these objects and then encode them to
JSON via &lt;code&gt;ActiveSupport::JSON.encode&lt;/code&gt;, you get a
collection of the object converted to JSON in which
&lt;code&gt;#as_json&lt;/code&gt; is ignored.&lt;/p&gt;
&lt;p&gt;Suppose now you define a &lt;code&gt;#to_json&lt;/code&gt; method (old
school, yeah) as such:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Something &amp;lt; ActiveRecord::Base
  def to_json(options={})
    super(:methods =&amp;gt; [:foo, :baz])
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Like before, you encode an Array of objects to JSON via
&lt;code&gt;ActiveSupport::JSON.encode&lt;/code&gt;. In this scenario you will
get a JSON object as you have defined via
&lt;code&gt;#to_json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It's my understanding that we're supposed to be moving to
&lt;code&gt;#as_json&lt;/code&gt; for Rails 3 compatibility.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-21T20:43:04+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2009-08-21T20:43:08+01:00</updated-at>
      <user-id type="integer">5026</user-id>
      <version type="integer">1</version>
      <user-name>James Herdman</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Another way to describe this: `as_json` options are not passed down to each element of an array of ActiveRecord objects. In the first example, all the attributes of user are rendered, which is not what I expect.

@@@
format.json { render :json =&gt; @users.as_json(:only =&gt; [:email]) }
@@@

I need to do this hack so that only the `email` attribute is rendered.

@@@
format.json { render :json =&gt; @users.collect{ |u| u.as_json(:only =&gt; [:email]) } }
@@@

I can reproduce this with ActiveRecord and ActiveSupport 2.3.5.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another way to describe this: &lt;code&gt;as_json&lt;/code&gt; options are
not passed down to each element of an array of ActiveRecord
objects. In the first example, all the attributes of user are
rendered, which is not what I expect.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;format.json { render :json =&amp;gt; @users.as_json(:only =&amp;gt; [:email]) }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I need to do this hack so that only the &lt;code&gt;email&lt;/code&gt;
attribute is rendered.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;format.json { render :json =&amp;gt; @users.collect{ |u| u.as_json(:only =&amp;gt; [:email]) } }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I can reproduce this with ActiveRecord and ActiveSupport
2.3.5.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-04T16:45:54+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-04-04T16:45:55+01:00</updated-at>
      <user-id type="integer">17366</user-id>
      <version type="integer">2</version>
      <user-name>Jonathan Julian</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think ActiveSupport 2.3.x needs to provide an as_json implementation that calls as_json(options) on each array element. This is not limited to ActiveRecord.

@@@ 
[{&quot;k&quot; =&gt; &quot;1&quot;, &quot;x&quot; =&gt; &quot;1&quot;}, {&quot;k&quot; =&gt; &quot;2&quot;, &quot;x&quot; =&gt; &quot;2&quot;}].as_json(:only =&gt; &quot;k&quot;)
 =&gt; [{&quot;k&quot;=&gt;&quot;1&quot;, &quot;x&quot;=&gt;&quot;1&quot;}, {&quot;k&quot;=&gt;&quot;2&quot;, &quot;x&quot;=&gt;&quot;2&quot;}]
[{&quot;k&quot; =&gt; &quot;1&quot;, &quot;x&quot; =&gt; &quot;1&quot;}, {&quot;k&quot; =&gt; &quot;2&quot;, &quot;x&quot; =&gt; &quot;2&quot;}].collect { |element| element.as_json(:only =&gt; &quot;k&quot;) }
 =&gt; [{&quot;k&quot;=&gt;&quot;1&quot;}, {&quot;k&quot;=&gt;&quot;2&quot;}] 
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think ActiveSupport 2.3.x needs to provide an as_json
implementation that calls as_json(options) on each array element.
This is not limited to ActiveRecord.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[{&quot;k&quot; =&amp;gt; &quot;1&quot;, &quot;x&quot; =&amp;gt; &quot;1&quot;}, {&quot;k&quot; =&amp;gt; &quot;2&quot;, &quot;x&quot; =&amp;gt; &quot;2&quot;}].as_json(:only =&amp;gt; &quot;k&quot;)
 =&amp;gt; [{&quot;k&quot;=&amp;gt;&quot;1&quot;, &quot;x&quot;=&amp;gt;&quot;1&quot;}, {&quot;k&quot;=&amp;gt;&quot;2&quot;, &quot;x&quot;=&amp;gt;&quot;2&quot;}]
[{&quot;k&quot; =&amp;gt; &quot;1&quot;, &quot;x&quot; =&amp;gt; &quot;1&quot;}, {&quot;k&quot; =&amp;gt; &quot;2&quot;, &quot;x&quot; =&amp;gt; &quot;2&quot;}].collect { |element| element.as_json(:only =&amp;gt; &quot;k&quot;) }
 =&amp;gt; [{&quot;k&quot;=&amp;gt;&quot;1&quot;}, {&quot;k&quot;=&amp;gt;&quot;2&quot;}]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T14:45:14+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-05-18T14:45:17+01:00</updated-at>
      <user-id type="integer">17366</user-id>
      <version type="integer">3</version>
      <user-name>Jonathan Julian</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-21T00:49:40+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-05-21T00:49:44+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have the same issue (Rails3b3, Ruby 1.9.2): 

@@@ ruby
format.json { render :json =&gt; @listings.as_json(:only =&gt; [:name]) }

=&gt; [{id: 1, name: &quot;ACME&quot;, type: 3},{id: 2, name: &quot;Apple&quot;, type: 7}]
@@@

And

@@@ ruby
format.json { render :json =&gt; @listings.to_json(:only =&gt; [:name]) }

=&gt; ArgumentError: wrong number of arguments (2 for 1)
@@@

And 

@@@ ruby
format.json { render :json =&gt; @listings.collect{|u| 
  u.as_json(:only =&gt; [:name]) 
}}

=&gt; [{id: 1, name: &quot;ACME&quot;, type: 3},{id: 2, name: &quot;Apple&quot;, type: 7}]
@@@

But

@@@ ruby
format.json { render :json =&gt; @listings.collect{|u| 
  u.to_json(:only =&gt; [:name]) 
}}

=&gt; [&quot;{&quot;name&quot;:&quot;ACME&quot;},{&quot;name&quot;:&quot;Apple&quot;}&quot;]
@@@

Also, as you can see, looping over each element also inserts extra quotes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the same issue (Rails3b3, Ruby 1.9.2):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;format.json { render :json =&amp;gt; @listings.as_json(:only =&amp;gt; [:name]) }

=&amp;gt; [{id: 1, name: &quot;ACME&quot;, type: 3},{id: 2, name: &quot;Apple&quot;, type: 7}]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;format.json { render :json =&amp;gt; @listings.to_json(:only =&amp;gt; [:name]) }

=&amp;gt; ArgumentError: wrong number of arguments (2 for 1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;format.json { render :json =&amp;gt; @listings.collect{|u| 
  u.as_json(:only =&amp;gt; [:name]) 
}}

=&amp;gt; [{id: 1, name: &quot;ACME&quot;, type: 3},{id: 2, name: &quot;Apple&quot;, type: 7}]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;format.json { render :json =&amp;gt; @listings.collect{|u| 
  u.to_json(:only =&amp;gt; [:name]) 
}}

=&amp;gt; [&quot;{&quot;name&quot;:&quot;ACME&quot;},{&quot;name&quot;:&quot;Apple&quot;}&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Also, as you can see, looping over each element also inserts
extra quotes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T03:17:05+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-22T03:17:10+01:00</updated-at>
      <user-id type="integer">104141</user-id>
      <version type="integer">5</version>
      <user-name>Ola Tuvesson</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am also having the same issues with 3.0.0.beta3 with ruby 1.9.1p378.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am also having the same issues with 3.0.0.beta3 with ruby
1.9.1p378.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T03:30:04+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T03:30:11+01:00</updated-at>
      <user-id type="integer">105196</user-id>
      <version type="integer">6</version>
      <user-name>Huet Bartels</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Huet most likely you already know that rails3 does not support ruby 1.9.1. Officially rails3 is supported on ruby 1.9.2 .

Assigning it to Mr. Valim to get his input on the design strategy behind to_json and as_json and to clarify which one end users should be using.

It is my understanding that as_json is implementation detail and end users (not inside rails) should be using to_json.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Huet most likely you already know that rails3 does not support
ruby 1.9.1. Officially rails3 is supported on ruby 1.9.2 .&lt;/p&gt;
&lt;p&gt;Assigning it to Mr. Valim to get his input on the design
strategy behind to_json and as_json and to clarify which one end
users should be using.&lt;/p&gt;
&lt;p&gt;It is my understanding that as_json is implementation detail and
end users (not inside rails) should be using to_json.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T04:13:58+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T04:14:09+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>as_json should return an object to be represented in json. You should always overwrite as_json in your module, but always call to_json.

About the bug, have you tried on Rails master? There was a bug related with the json gem overwriting Rails behavior which was fixed a few days ago. That fixed, for instance, the ArgumentError a few reported above.

I'm glad to reopen if this is still an issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;as_json should return an object to be represented in json. You
should always overwrite as_json in your module, but always call
to_json.&lt;/p&gt;
&lt;p&gt;About the bug, have you tried on Rails master? There was a bug
related with the json gem overwriting Rails behavior which was
fixed a few days ago. That fixed, for instance, the ArgumentError a
few reported above.&lt;/p&gt;
&lt;p&gt;I'm glad to reopen if this is still an issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T06:14:36+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T06:14:51+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Implementing `as_json` is right. Using `to_json` is a mess because JSON libraries use it for their internal encoding API.

This is similar to the Marshal library: you implement `_dump` to return a primitive Ruby object to marshal. You're responsible for returning a marshalable *representation* of your object, not the action marshaled bytes.

Similarly for JSON: you implement `as_json` to return a JSON *representation* of your object. The actual work of building a JSON string is handled by internal methods.

This is a clearer, cleaner separation of responsibility than using a single `to_json` method for both providing JSON representations and for building JSON strings.

So yes, this is a bug :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Implementing &lt;code&gt;as_json&lt;/code&gt; is right. Using
&lt;code&gt;to_json&lt;/code&gt; is a mess because JSON libraries use it for
their internal encoding API.&lt;/p&gt;
&lt;p&gt;This is similar to the Marshal library: you implement
&lt;code&gt;_dump&lt;/code&gt; to return a primitive Ruby object to marshal.
You're responsible for returning a marshalable
&lt;em&gt;representation&lt;/em&gt; of your object, not the action marshaled
bytes.&lt;/p&gt;
&lt;p&gt;Similarly for JSON: you implement &lt;code&gt;as_json&lt;/code&gt; to return
a JSON &lt;em&gt;representation&lt;/em&gt; of your object. The actual work of
building a JSON string is handled by internal methods.&lt;/p&gt;
&lt;p&gt;This is a clearer, cleaner separation of responsibility than
using a single &lt;code&gt;to_json&lt;/code&gt; method for both providing JSON
representations and for building JSON strings.&lt;/p&gt;
&lt;p&gt;So yes, this is a bug :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T06:17:30+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T06:17:42+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Reviewing the examples above, this was fixed. Please verify on latest master!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Reviewing the examples above, this was fixed. Please verify on
latest master!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T06:19:27+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T06:19:43+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">10</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As JK assigned, if someone wants to backport the fix from master to 2-3-stable, a patch is welcome. The original commit is:

http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c</body>
      <body-html>&lt;div&gt;&lt;p&gt;As JK assigned, if someone wants to backport the fix from master
to 2-3-stable, a patch is welcome. The original commit is:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c&quot;&gt;
http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T06:23:46+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: duplicate
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T06:23:55+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">11</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Mr. Valim,

Looks like the patch you provided is not working for me in rails3. Here is the breakdown.

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100630160235) do

  create_table &quot;users&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end

class User &lt; ActiveRecord::Base
end

class UsersController &lt; ApplicationController
  def index
    User.delete_all
    User.create(:name =&gt; 'John')
    User.create(:name =&gt; 'Mary')
    @users = User.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml =&gt; @users }
      format.json  { render :json =&gt; @users.as_json(:only =&gt; :name) }
    end
  end
end

format.json  { render :json =&gt; @users.as_json(:only =&gt; :name) }
[{&quot;user&quot;:{&quot;name&quot;:&quot;John&quot;,&quot;created_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;updated_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;id&quot;:9}},{&quot;user&quot;:{&quot;name&quot;:&quot;Mary&quot;,&quot;created_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;updated_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;id&quot;:10}}]

#If I change to to_json from as_json then it is working great

format.json  { render :json =&gt; @users.to_json(:only =&gt; :name) }
[{&quot;user&quot;:{&quot;name&quot;:&quot;John&quot;}},{&quot;user&quot;:{&quot;name&quot;:&quot;Mary&quot;}}]

# once again note that I conducted this test on rails edge and it is failing
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Mr. Valim,&lt;/p&gt;
&lt;p&gt;Looks like the patch you provided is not working for me in
rails3. Here is the breakdown.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100630160235) do

  create_table &quot;users&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end

class User &amp;lt; ActiveRecord::Base
end

class UsersController &amp;lt; ApplicationController
  def index
    User.delete_all
    User.create(:name =&amp;gt; 'John')
    User.create(:name =&amp;gt; 'Mary')
    @users = User.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml =&amp;gt; @users }
      format.json  { render :json =&amp;gt; @users.as_json(:only =&amp;gt; :name) }
    end
  end
end

format.json  { render :json =&amp;gt; @users.as_json(:only =&amp;gt; :name) }
[{&quot;user&quot;:{&quot;name&quot;:&quot;John&quot;,&quot;created_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;updated_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;id&quot;:9}},{&quot;user&quot;:{&quot;name&quot;:&quot;Mary&quot;,&quot;created_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;updated_at&quot;:&quot;2010-06-30T16:07:42Z&quot;,&quot;id&quot;:10}}]

#If I change to to_json from as_json then it is working great

format.json  { render :json =&amp;gt; @users.to_json(:only =&amp;gt; :name) }
[{&quot;user&quot;:{&quot;name&quot;:&quot;John&quot;}},{&quot;user&quot;:{&quot;name&quot;:&quot;Mary&quot;}}]

# once again note that I conducted this test on rails edge and it is failing&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T17:10:58+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T17:11:07+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">12</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>my bad. to_json should be used in this case and not as_json. So rails3 is working fine. 

back to rails2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;my bad. to_json should be used in this case and not as_json. So
rails3 is working fine.&lt;/p&gt;
&lt;p&gt;back to rails2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T17:40:11+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T17:40:41+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">13</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am not able to reproduce the issue in rails 2-3-master branch. Here is what I did

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100630152421) do

  create_table &quot;users&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
class User &lt; ActiveRecord::Base
  def as_json(options={})
    { :name =&gt; self.name.downcase }
  end
end


class UsersController &lt; ApplicationController
  def index
    User.delete_all
    User.create(:name =&gt; 'JOHN')
    User.create(:name =&gt; 'MARY')
    @users = User.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml =&gt; @users }
      format.json  { render :json =&gt; @users }
    end
  end
end

# localhost:3000/user.json results in [{&quot;name&quot;:&quot;john&quot;},{&quot;name&quot;:&quot;mary&quot;}]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not able to reproduce the issue in rails 2-3-master branch.
Here is what I did&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100630152421) do

  create_table &quot;users&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
class User &amp;lt; ActiveRecord::Base
  def as_json(options={})
    { :name =&amp;gt; self.name.downcase }
  end
end


class UsersController &amp;lt; ApplicationController
  def index
    User.delete_all
    User.create(:name =&amp;gt; 'JOHN')
    User.create(:name =&amp;gt; 'MARY')
    @users = User.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml =&amp;gt; @users }
      format.json  { render :json =&amp;gt; @users }
    end
  end
end

# localhost:3000/user.json results in [{&quot;name&quot;:&quot;john&quot;},{&quot;name&quot;:&quot;mary&quot;}]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T17:43:42+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T17:44:16+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">14</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Neeraj: Try this: remove the `as_json` definition from your AR class, and change your controller to do:

    format.json  { render :json =&gt; @users.as_json(:only =&gt; [:name]) }

You'll see that the resulting JSON includes all 3 attributes of each User, instead of just `:name`, which was expected. Calling `as_json` from a controller is useful when many different controllers each need a different representation and you don't want to code just one into the model.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Neeraj: Try this: remove the &lt;code&gt;as_json&lt;/code&gt; definition
from your AR class, and change your controller to do:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;format.json  { render :json =&amp;gt; @users.as_json(:only =&amp;gt; [:name]) }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You'll see that the resulting JSON includes all 3 attributes of
each User, instead of just &lt;code&gt;:name&lt;/code&gt;, which was expected.
Calling &lt;code&gt;as_json&lt;/code&gt; from a controller is useful when many
different controllers each need a different representation and you
don't want to code just one into the model.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T17:55:24+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T18:01:15+01:00</updated-at>
      <user-id type="integer">17366</user-id>
      <version type="integer">15</version>
      <user-name>Jonathan Julian</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>May be I am still not getting as_json vs to_json thing. Based on what JK and JV said, I gather than finally to_json should be invoked on the object. as_json should be used to configure what should be the final output.

As I have show in my example above , I used as_json in the model to configure that I only want name attributes and I am invoking to_json on the final set of collection.

JK/JV help me again please :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;May be I am still not getting as_json vs to_json thing. Based on
what JK and JV said, I gather than finally to_json should be
invoked on the object. as_json should be used to configure what
should be the final output.&lt;/p&gt;
&lt;p&gt;As I have show in my example above , I used as_json in the model
to configure that I only want name attributes and I am invoking
to_json on the final set of collection.&lt;/p&gt;
&lt;p&gt;JK/JV help me again please :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T18:04:55+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T18:09:42+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">16</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>- installed latest json gem
- Successfully installed json-1.4.3
- if I use @users.to_json(:only =&gt; :name) then every thing works fine.


Whether to use to_json or as_json is little confusing. As JK and JV mentioned above, as_json is means to get to right to_json output. as_json should be used in the model to change the behavior of the model when to_json is invoke.

by invoking @users.as_json(), to_json will NEVER get invoked and that is wrong.

I am closing this issue. If  there is any question please feel free to post.

I do believe that there should be a rails guide/blog about when to use as_json and when to use to_json.</body>
      <body-html>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;installed latest json gem&lt;/li&gt;
&lt;li&gt;Successfully installed json-1.4.3&lt;/li&gt;
&lt;li&gt;if I use @users.to_json(:only =&amp;gt; :name) then every thing
works fine.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whether to use to_json or as_json is little confusing. As JK and
JV mentioned above, as_json is means to get to right to_json
output. as_json should be used in the model to change the behavior
of the model when to_json is invoke.&lt;/p&gt;
&lt;p&gt;by invoking @users.as_json(), to_json will NEVER get invoked and
that is wrong.&lt;/p&gt;
&lt;p&gt;I am closing this issue. If there is any question please feel
free to post.&lt;/p&gt;
&lt;p&gt;I do believe that there should be a rails guide/blog about when
to use as_json and when to use to_json.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T18:37:41+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T18:38:02+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">17</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Users always call `foo.to_json` or `ActiveSupport::JSON.encode(foo)`

The implementor of `Foo` writes an `as_json`</body>
      <body-html>&lt;div&gt;&lt;p&gt;Users always call &lt;code&gt;foo.to_json&lt;/code&gt; or
&lt;code&gt;ActiveSupport::JSON.encode(foo)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The implementor of &lt;code&gt;Foo&lt;/code&gt; writes an
&lt;code&gt;as_json&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T18:44:23+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T18:44:49+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">18</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ack! Don't close this!

Remember that the caller can get a hash representation by invoking as_json by hand, passing the options hash. This ticket describes the problem that the `options` are not being passed to each element of an association! Make my code change as described in comment &quot;June 30th, 2010 @ 05:55 PM&quot; to demonstrate the issue.

And here is an outsider's explanation of when to use as_json and to_json: http://jonathanjulian.com/2010/04/rails-to_json-or-as_json/</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ack! Don't close this!&lt;/p&gt;
&lt;p&gt;Remember that the caller can get a hash representation by
invoking as_json by hand, passing the options hash. This ticket
describes the problem that the &lt;code&gt;options&lt;/code&gt; are not being
passed to each element of an association! Make my code change as
described in comment &quot;June 30th, 2010 @ 05:55 PM&quot; to demonstrate
the issue.&lt;/p&gt;
&lt;p&gt;And here is an outsider's explanation of when to use as_json and
to_json: &lt;a href=
&quot;http://jonathanjulian.com/2010/04/rails-to_json-or-as_json/&quot;&gt;http://jonathanjulian.com/2010/04/rails-to_json-or-as_json/&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T18:50:31+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-06-30T18:51:03+01:00</updated-at>
      <user-id type="integer">17366</user-id>
      <version type="integer">19</version>
      <user-name>Jonathan Julian</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>'Jonathan Julian' got everything right. 

Regarding the options not being passed , checkout my test.

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100630152421) do

  create_table &quot;users&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
class User &lt; ActiveRecord::Base
end


class UsersController &lt; ApplicationController
  def index
    User.delete_all
    User.create(:name =&gt; 'JOHN')
    User.create(:name =&gt; 'MARY')
    @users = User.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml =&gt; @users }
      format.json  { render :json =&gt; @users }
    end
  end
end

# with format.json  { render :json =&gt; @users.to_json(:only =&gt; :name) }
# localhost:3000/user.json results in [{&quot;name&quot;:&quot;john&quot;},{&quot;name&quot;:&quot;mary&quot;}]

# with format.json  { render :json =&gt; @users.to_json(:only =&gt; [:name, :created_at) }
# localhost:3000/user.json results in [{&quot;user&quot;:{&quot;name&quot;:&quot;JOHN&quot;,&quot;created_at&quot;:&quot;2010-06-30T17:59:11Z&quot;}},{&quot;user&quot;:{&quot;name&quot;:&quot;MARY&quot;,&quot;created_at&quot;:&quot;2010-06-30T17:59:11Z&quot;}}]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;'Jonathan Julian' got everything right.&lt;/p&gt;
&lt;p&gt;Regarding the options not being passed , checkout my test.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100630152421) do

  create_table &quot;users&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
class User &amp;lt; ActiveRecord::Base
end


class UsersController &amp;lt; ApplicationController
  def index
    User.delete_all
    User.create(:name =&amp;gt; 'JOHN')
    User.create(:name =&amp;gt; 'MARY')
    @users = User.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml =&amp;gt; @users }
      format.json  { render :json =&amp;gt; @users }
    end
  end
end

# with format.json  { render :json =&amp;gt; @users.to_json(:only =&amp;gt; :name) }
# localhost:3000/user.json results in [{&quot;name&quot;:&quot;john&quot;},{&quot;name&quot;:&quot;mary&quot;}]

# with format.json  { render :json =&amp;gt; @users.to_json(:only =&amp;gt; [:name, :created_at) }
# localhost:3000/user.json results in [{&quot;user&quot;:{&quot;name&quot;:&quot;JOHN&quot;,&quot;created_at&quot;:&quot;2010-06-30T17:59:11Z&quot;}},{&quot;user&quot;:{&quot;name&quot;:&quot;MARY&quot;,&quot;created_at&quot;:&quot;2010-06-30T17:59:11Z&quot;}}]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T19:00:07+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-08-30T01:33:37+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">20</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am having problems with associations.  They do not seem to honor either the to_json or the as_json methods within the child models.

@@@ ruby

ActiveRecord::Schema.define(:version =&gt; 20100713002653) do

  create_table &quot;boos&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;foos&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;boo_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
class Boo &lt; ActiveRecord::Base
  has_many :foos
end
class Foo &lt; ActiveRecord::Base
  belongs_to :boo

  def as_json(option = {})
    super({ :only =&gt; [ :name ] } )
  end
end
class BoosController &lt; ApplicationController
  def index
    b1 = Boo.create(:name =&gt; &quot;Tom&quot;);
    b1.foos.create(:name =&gt; &quot;Alice&quot;);
    b1.foos.create(:name =&gt; &quot;Jane&quot;);
    b2 = Boo.create(:name =&gt; &quot;George&quot;);
    b2.foos.create(:name =&gt; &quot;Suzy&quot;);
    b2.foos.create(:name =&gt; &quot;Jenny&quot;);
    render :json =&gt; Boo.find(:all).to_json({ :include =&gt; [ :foos ] })
  end
end

curl localhost:3000/boos.json
[{&quot;boo&quot;:{&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:1,&quot;name&quot;:&quot;Tom&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;foos&quot;:[{&quot;boo_id&quot;:1,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:1,&quot;name&quot;:&quot;Alice&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;},{&quot;boo_id&quot;:1,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:2,&quot;name&quot;:&quot;Jane&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;}]}},{&quot;boo&quot;:{&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:2,&quot;name&quot;:&quot;George&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;foos&quot;:[{&quot;boo_id&quot;:2,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:3,&quot;name&quot;:&quot;Suzy&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;},{&quot;boo_id&quot;:2,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:4,&quot;name&quot;:&quot;Jenny&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;}]}}]

@@@

I would expect all the foos to have only the names.
I also don't understand why the as_json only takes :only and :except.  How am I suppose to include associations from a controller if to_json is not suppose to be used?

(I'm using Rails 2.3.5)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am having problems with associations. They do not seem to
honor either the to_json or the as_json methods within the child
models.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
ActiveRecord::Schema.define(:version =&amp;gt; 20100713002653) do

  create_table &quot;boos&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;foos&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;boo_id&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

end
class Boo &amp;lt; ActiveRecord::Base
  has_many :foos
end
class Foo &amp;lt; ActiveRecord::Base
  belongs_to :boo

  def as_json(option = {})
    super({ :only =&amp;gt; [ :name ] } )
  end
end
class BoosController &amp;lt; ApplicationController
  def index
    b1 = Boo.create(:name =&amp;gt; &quot;Tom&quot;);
    b1.foos.create(:name =&amp;gt; &quot;Alice&quot;);
    b1.foos.create(:name =&amp;gt; &quot;Jane&quot;);
    b2 = Boo.create(:name =&amp;gt; &quot;George&quot;);
    b2.foos.create(:name =&amp;gt; &quot;Suzy&quot;);
    b2.foos.create(:name =&amp;gt; &quot;Jenny&quot;);
    render :json =&amp;gt; Boo.find(:all).to_json({ :include =&amp;gt; [ :foos ] })
  end
end

curl localhost:3000/boos.json
[{&quot;boo&quot;:{&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:1,&quot;name&quot;:&quot;Tom&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;foos&quot;:[{&quot;boo_id&quot;:1,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:1,&quot;name&quot;:&quot;Alice&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;},{&quot;boo_id&quot;:1,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:2,&quot;name&quot;:&quot;Jane&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;}]}},{&quot;boo&quot;:{&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:2,&quot;name&quot;:&quot;George&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;foos&quot;:[{&quot;boo_id&quot;:2,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:3,&quot;name&quot;:&quot;Suzy&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;},{&quot;boo_id&quot;:2,&quot;created_at&quot;:&quot;2010-07-13T00:52:35Z&quot;,&quot;id&quot;:4,&quot;name&quot;:&quot;Jenny&quot;,&quot;updated_at&quot;:&quot;2010-07-13T00:52:35Z&quot;}]}}]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I would expect all the foos to have only the names.&lt;br&gt;
I also don't understand why the as_json only takes :only and
:except. How am I suppose to include associations from a controller
if to_json is not suppose to be used?&lt;/p&gt;
&lt;p&gt;(I'm using Rails 2.3.5)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-13T02:06:23+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: to_json
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;activerecord associations&quot; to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-07-13T02:06:24+01:00</updated-at>
      <user-id type="integer">29820</user-id>
      <version type="integer">22</version>
      <user-name>pedz</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@pedz Attached is a patch that fixes the issue that you mentioned. Please try it and let us know if it works for you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@pedz Attached is a patch that fixes the issue that you
mentioned. Please try it and let us know if it works for you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-16T20:24:51+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
:priority: 1
:milestone: 73534
:tag: &quot;\&quot;activerecord associations\&quot; to_json&quot;
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-07-16T20:24:53+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">23</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Neeraj, the test in your patch was supposed to be calling super(:only =&gt; :size), no? I don't think the following is/should be supported:

    def as_json
      { :only =&gt; :size }
    end

I don't even think as_json should consider such options as :only and :except. Or you either do it manually:

    def as_json
      super.slice(&quot;only&quot;)
    end

Or you overwrite to_json to change how to encode it (the representation in as_json is still the same):

    def to_json
      super(:only =&gt; :size)
    end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj, the test in your patch was supposed to be calling
super(:only =&amp;gt; :size), no? I don't think the following is/should
be supported:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def as_json
  { :only =&amp;gt; :size }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I don't even think as_json should consider such options as :only
and :except. Or you either do it manually:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def as_json
  super.slice(&quot;only&quot;)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or you overwrite to_json to change how to encode it (the
representation in as_json is still the same):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def to_json
  super(:only =&amp;gt; :size)
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-18T10:27:25+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-07-18T10:28:07+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">24</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached is a failing test case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a failing test case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-18T13:11:23+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-07-18T13:11:25+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">25</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This is a valid test case for me! And the fix provided in the previous patch looks good to me as well. Could you please bundle then in one package Neeraj? :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a valid test case for me! And the fix provided in the
previous patch looks good to me as well. Could you please bundle
then in one package Neeraj? :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T14:32:49+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-07-19T14:32:50+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">26</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Fix provided in previous case is not solving the problem mentioned in the failing test. it is much more complicated.

AM uses serializable_hash and then builds the JSON output. However there is no easy way , at least I have not found, to invoke as_json from within serializable_hash.

Also serializable_hash is a higher level abstraction which is used by both to_xml and to_json. I need to spend some time to understand the existing design before I could come up with a solution. This ticket is in my todo list for today. Will see how it goes :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fix provided in previous case is not solving the problem
mentioned in the failing test. it is much more complicated.&lt;/p&gt;
&lt;p&gt;AM uses serializable_hash and then builds the JSON output.
However there is no easy way , at least I have not found, to invoke
as_json from within serializable_hash.&lt;/p&gt;
&lt;p&gt;Also serializable_hash is a higher level abstraction which is
used by both to_xml and to_json. I need to spend some time to
understand the existing design before I could come up with a
solution. This ticket is in my todo list for today. Will see how it
goes :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T14:44:27+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-07-19T14:44:31+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">27</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm not at edge rails but I will look at the patch.  I'm not sure when I'll be able to move.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not at edge rails but I will look at the patch. I'm not sure
when I'll be able to move.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-21T23:43:18+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-07-21T23:43:20+01:00</updated-at>
      <user-id type="integer">29820</user-id>
      <version type="integer">28</version>
      <user-name>pedz</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-06T20:03:30+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 71472
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-09-06T20:03:32+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">29</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>#5374</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/5374&quot; title=
&quot;Ticket #5374&quot;&gt;#5374&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-07T21:14:32+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord associations&quot; patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-09-07T21:14:34+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">30</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-07T05:21:20+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord associations\&quot; patch to_json&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord associations patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-10-07T05:21:20+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">31</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:35+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 82861
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">3087</number>
      <permalink>activesupportjsonencode-is-inconsistent-for-as_json-and-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord associations patch to_json</tag>
      <title>ActiveSupport::JSON.encode is Inconsistent for #as_json and #to_json</title>
      <updated-at type="datetime">2010-10-15T23:01:35+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">32</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>James Herdman</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3087</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>37023e4b606e95a72322682296064c4ecb6d23e9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-16T20:24:51+01:00</created-at>
      <filename>3087_fix_for_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">595326</id>
      <size type="integer">3831</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/595326/3087_fix_for_edge.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>1cd0e0ea83aad5cba87c57559ee0e8b51fdaab3d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-18T13:11:23+01:00</created-at>
      <filename>failing_test_for_3087.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">595774</id>
      <size type="integer">2591</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/595774/failing_test_for_3087.diff</url>
    </attachment>
  </attachments>
</ticket>
