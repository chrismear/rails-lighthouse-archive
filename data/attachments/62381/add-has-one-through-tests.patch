From 2c22461c054a3600e0287742514e9decbb304934 Mon Sep 17 00:00:00 2001
From: Matt Jones <al2o3cr@gmail.com>
Date: Fri, 14 Nov 2008 13:04:56 -0500
Subject: [PATCH] Add tests for decorated has_one through models - currently fail

---
 .../has_one_through_associations_test.rb           |   46 +++++++++++++++++++-
 activerecord/test/fixtures/organizations.yml       |    3 +
 activerecord/test/models/member.rb                 |    2 +
 activerecord/test/models/member_detail.rb          |    4 ++
 activerecord/test/models/organization.rb           |    4 ++
 activerecord/test/schema/schema.rb                 |   10 ++++
 6 files changed, 68 insertions(+), 1 deletions(-)
 create mode 100644 activerecord/test/fixtures/organizations.yml
 create mode 100644 activerecord/test/models/member_detail.rb
 create mode 100644 activerecord/test/models/organization.rb

diff --git a/activerecord/test/cases/associations/has_one_through_associations_test.rb b/activerecord/test/cases/associations/has_one_through_associations_test.rb
index ff4021f..2ca403e 100644
--- a/activerecord/test/cases/associations/has_one_through_associations_test.rb
+++ b/activerecord/test/cases/associations/has_one_through_associations_test.rb
@@ -3,9 +3,11 @@ require 'models/club'
 require 'models/member'
 require 'models/membership'
 require 'models/sponsor'
+require 'models/organization'
+require 'models/member_detail'
 
 class HasOneThroughAssociationsTest < ActiveRecord::TestCase
-  fixtures :members, :clubs, :memberships, :sponsors
+  fixtures :members, :clubs, :memberships, :sponsors, :organizations
   
   def setup
     @member = members(:groucho)
@@ -120,4 +122,46 @@ class HasOneThroughAssociationsTest < ActiveRecord::TestCase
     clubs(:moustache_club).send(:private_method)
     @member.club.send(:private_method)
   end
+
+  def test_decorated_through_records_saved_correctly
+    @member_detail = MemberDetail.new(:extra_data => 'Extra')
+    @member.member_detail = @member_detail
+    @organization = organizations(:nsa)
+    @organization.members << @member
+    @member.reload
+    assert_equal 'Extra', @member.member_detail.extra_data
+    assert_equal @organization, @member.organization
+    assert @organization.members(true).include?(@member)
+    assert_equal @organization.members.find_by_name(@member.name).member_detail.extra_data, @organization.member_details[0].extra_data
+    assert_equal 'Extra', @organization.member_details[0].extra_data
+  end
+
+  def test_decorated_through_records_saved_correctly_from_the_other_side
+    assert_difference 'MemberDetail.count', 1 do
+      @member_detail = MemberDetail.new(:extra_data => 'Extra')
+      @member.member_detail = @member_detail
+      @member.save!
+      @member.reload
+      @organization = organizations(:nsa)
+      @member.organization = @organization
+      @member.save!
+      @member.reload
+    end
+    assert_equal @organization, @member.organization
+    assert @organization.members(true).include?(@member)
+    assert_equal @organization.members.find_by_name(@member.name).member_detail.extra_data, @organization.member_details[0].extra_data
+    assert_equal 'Extra', @organization.member_details[0].extra_data
+    assert_equal 'Extra', @member.member_detail(true).extra_data
+  end
+
+
+  def test_decorated_through_records_destroyed_appropriately
+    assert_difference 'MemberDetail.count', 1 do
+      @member_detail = MemberDetail.new(:extra_data => 'Extra')
+      @member.member_detail = @member_detail
+      @organization = organizations(:nsa)
+      @organization.members << @member
+    end
+  end
+
 end
diff --git a/activerecord/test/fixtures/organizations.yml b/activerecord/test/fixtures/organizations.yml
new file mode 100644
index 0000000..0355ec2
--- /dev/null
+++ b/activerecord/test/fixtures/organizations.yml
@@ -0,0 +1,3 @@
+nsa:
+  name: No Such Agency
+
diff --git a/activerecord/test/models/member.rb b/activerecord/test/models/member.rb
index 688725f..77a37ab 100644
--- a/activerecord/test/models/member.rb
+++ b/activerecord/test/models/member.rb
@@ -6,4 +6,6 @@ class Member < ActiveRecord::Base
   has_one :favourite_club, :through => :memberships, :conditions => ["memberships.favourite = ?", true], :source => :club
   has_one :sponsor, :as => :sponsorable
   has_one :sponsor_club, :through => :sponsor
+  has_one :member_detail
+  has_one :organization, :through => :member_detail
 end
\ No newline at end of file
diff --git a/activerecord/test/models/member_detail.rb b/activerecord/test/models/member_detail.rb
new file mode 100644
index 0000000..e731454
--- /dev/null
+++ b/activerecord/test/models/member_detail.rb
@@ -0,0 +1,4 @@
+class MemberDetail < ActiveRecord::Base
+  belongs_to :member
+  belongs_to :organization
+end
diff --git a/activerecord/test/models/organization.rb b/activerecord/test/models/organization.rb
new file mode 100644
index 0000000..d79d503
--- /dev/null
+++ b/activerecord/test/models/organization.rb
@@ -0,0 +1,4 @@
+class Organization < ActiveRecord::Base
+  has_many :member_details
+  has_many :members, :through => :member_details
+end
\ No newline at end of file
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index ab5c7c5..6217e3b 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -197,6 +197,12 @@ ActiveRecord::Schema.define do
     t.string :name
   end
 
+  create_table :member_details, :force => true do |t|
+    t.integer :member_id
+    t.integer :organization_id
+    t.string :extra_data
+  end
+
   create_table :memberships, :force => true do |t|
     t.datetime :joined_on
     t.integer :club_id, :member_id
@@ -249,6 +255,10 @@ ActiveRecord::Schema.define do
     t.integer :shipping_customer_id
   end
 
+  create_table :organizations, :force => true do |t|
+    t.string :name
+  end
+
   create_table :owners, :primary_key => :owner_id ,:force => true do |t|
     t.string :name
   end
-- 
1.5.3.1

