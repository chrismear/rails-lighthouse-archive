<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-05T20:36:49+00:00</created-at>
  <creator-id type="integer">123638</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5923</number>
  <permalink>uniqueness-with-accepts_nested_attributes_of</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag nil="true"></tag>
  <title>uniqueness with accepts_nested_attributes_of</title>
  <updated-at type="datetime">2010-11-10T21:12:54+00:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">4</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Ivan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5923</url>
  <priority-name>Low</priority-name>
  <original-body>class Room &lt; ActiveRecord::Base

  has_many :objects, :dependent =&gt; :destroy, :inverse_of =&gt; :room
    accepts_nested_attributes_for :objects, :allow_destroy =&gt; true

end

class Object &lt; ActiveRecord::Base

  belongs_to :room, :inverse_of =&gt; :objects

  validates :forniture_id, :presence =&gt; true, :uniqueness =&gt; {:scope =&gt; :room_id}

  validates :room, :presence =&gt; true

end

************

The &quot;uniqueness&quot; validation doesn't work. When the 'select' is issued, room_id is still NULL, it was not yet set by Rails.</original-body>
  <latest-body>class Room &lt; ActiveRecord::Base

  has_many :objects, :dependent =&gt; :destroy, :inverse_of =&gt; :room
    accepts_nested_attributes_for :objects, :allow_destroy =&gt; true

end

class Object &lt; ActiveRecord::Base

  belongs_to :room, :inverse_of =&gt; :objects

  validates :forniture_id, :presence =&gt; true, :uniqueness =&gt; {:scope =&gt; :room_id}

  validates :room, :presence =&gt; true

end

************

The &quot;uniqueness&quot; validation doesn't work. When the 'select' is issued, room_id is still NULL, it was not yet set by Rails.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;class Room &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_many :objects, :dependent =&amp;gt; :destroy, :inverse_of =&amp;gt;
:room&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;accepts_nested_attributes_for :objects, :allow_destroy =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Object &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;belongs_to :room, :inverse_of =&amp;gt; :objects&lt;/p&gt;
&lt;p&gt;validates :forniture_id, :presence =&amp;gt; true, :uniqueness =&amp;gt;
{:scope =&amp;gt; :room_id}&lt;/p&gt;
&lt;p&gt;validates :room, :presence =&amp;gt; true&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The &quot;uniqueness&quot; validation doesn't work. When the 'select' is
issued, room_id is still NULL, it was not yet set by Rails.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>class Room &lt; ActiveRecord::Base

  has_many :objects, :dependent =&gt; :destroy, :inverse_of =&gt; :room
    accepts_nested_attributes_for :objects, :allow_destroy =&gt; true

end

class Object &lt; ActiveRecord::Base

  belongs_to :room, :inverse_of =&gt; :objects

  validates :forniture_id, :presence =&gt; true, :uniqueness =&gt; {:scope =&gt; :room_id}

  validates :room, :presence =&gt; true

end

************

The &quot;uniqueness&quot; validation doesn't work. When the 'select' is issued, room_id is still NULL, it was not yet set by Rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;class Room &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_many :objects, :dependent =&amp;gt; :destroy, :inverse_of =&amp;gt;
:room&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;accepts_nested_attributes_for :objects, :allow_destroy =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Object &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;belongs_to :room, :inverse_of =&amp;gt; :objects&lt;/p&gt;
&lt;p&gt;validates :forniture_id, :presence =&amp;gt; true, :uniqueness =&amp;gt;
{:scope =&amp;gt; :room_id}&lt;/p&gt;
&lt;p&gt;validates :room, :presence =&amp;gt; true&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The &quot;uniqueness&quot; validation doesn't work. When the 'select' is
issued, room_id is still NULL, it was not yet set by Rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-05T20:36:49+00:00</created-at>
      <creator-id type="integer">123638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5923</number>
      <permalink>uniqueness-with-accepts_nested_attributes_of</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>uniqueness with accepts_nested_attributes_of</title>
      <updated-at type="datetime">2010-11-05T20:45:43+00:00</updated-at>
      <user-id type="integer">123638</user-id>
      <version type="integer">1</version>
      <user-name>Ivan</user-name>
      <creator-name>Ivan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5923</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you elaborate what you mean by when the 'select' is issued?

Can you show me the full case using console?

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you elaborate what you mean by when the 'select' is
issued?&lt;/p&gt;
&lt;p&gt;Can you show me the full case using console?&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-06T06:59:50+00:00</created-at>
      <creator-id type="integer">123638</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5923</number>
      <permalink>uniqueness-with-accepts_nested_attributes_of</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>uniqueness with accepts_nested_attributes_of</title>
      <updated-at type="datetime">2010-11-06T06:59:54+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Ivan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5923</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry, I'd like to say the select 'generated' by Rails to verify if the key record already exists.
In the example, 'room_id' would be 'nil', because it wasn't set by Rails yet.
If you look in the log you can observe that SQL generated is:

SELECT `objects`.`id` FROM `objects` WHERE (`objects`.`forniture_id` = 10) AND (`objects`.`room_id` IS NULL) LIMIT 1

So, even if you have 2 'Object' with the same 'forniture_id' being inserted into the same Room, the result would be as it has none.

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, I'd like to say the select 'generated' by Rails to verify
if the key record already exists.&lt;br&gt;
In the example, 'room_id' would be 'nil', because it wasn't set by
Rails yet.&lt;br&gt;
If you look in the log you can observe that SQL generated is:&lt;/p&gt;
&lt;p&gt;SELECT &lt;code&gt;objects&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; FROM
&lt;code&gt;objects&lt;/code&gt; WHERE
(&lt;code&gt;objects&lt;/code&gt;.&lt;code&gt;forniture_id&lt;/code&gt; = 10) AND
(&lt;code&gt;objects&lt;/code&gt;.&lt;code&gt;room_id&lt;/code&gt; IS NULL) LIMIT 1&lt;/p&gt;
&lt;p&gt;So, even if you have 2 'Object' with the same 'forniture_id'
being inserted into the same Room, the result would be as it has
none.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T11:38:31+00:00</created-at>
      <creator-id type="integer">123638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5923</number>
      <permalink>uniqueness-with-accepts_nested_attributes_of</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>uniqueness with accepts_nested_attributes_of</title>
      <updated-at type="datetime">2010-11-08T11:38:33+00:00</updated-at>
      <user-id type="integer">123638</user-id>
      <version type="integer">3</version>
      <user-name>Ivan</user-name>
      <creator-name>Ivan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5923</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is already a ticket for this one. 

https://rails.lighthouseapp.com/projects/8994/tickets/2646-validations-not-called-when-model-updating-using-nested-attributes</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is already a ticket for this one.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2646-validations-not-called-when-model-updating-using-nested-attributes&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2646-validati...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-10T21:12:52+00:00</created-at>
      <creator-id type="integer">123638</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5923</number>
      <permalink>uniqueness-with-accepts_nested_attributes_of</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>uniqueness with accepts_nested_attributes_of</title>
      <updated-at type="datetime">2010-11-10T21:12:54+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Ivan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5923</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
