<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-18T10:10:47+00:00</created-at>
  <creator-id type="integer">137596</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6446</number>
  <permalink>activeresourcebase-class-is-defective</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>ActiveResource::Base class is defective</title>
  <updated-at type="datetime">2011-02-18T10:10:47+00:00</updated-at>
  <user-id type="integer">137596</user-id>
  <version type="integer">1</version>
  <user-name>Raymond Gao</user-name>
  <creator-name>Raymond Gao</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6446</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi, I am building a GEM for retrieving data from Salesforce Force.com using REST API. 
My class inherits from the ActiveResource::Base class. However, we I tried to make a Salesforce::UserRest.find(:all) call, the ActiveResource fails and complains about 'collect!' as an invalid method.

Apparently, in the 'ActiveResource::Base' file, the line#885 of 3.0.4 version release is the culprit for failure. &quot;collect!&quot; is a valid method for Array. But, when you have a Hash object as the result of a REST call, it breaks the GEM, because 'collect!' is not a valid method for the Hash class.

See this:
        def instantiate_collection(collection, prefix_options = {})
          collection.collect! { |record| instantiate_record(record, prefix_options) }    #This is the problem line.
        end

Can someone please fix this?
Thanks,</original-body>
  <latest-body>Hi, I am building a GEM for retrieving data from Salesforce Force.com using REST API. 
My class inherits from the ActiveResource::Base class. However, we I tried to make a Salesforce::UserRest.find(:all) call, the ActiveResource fails and complains about 'collect!' as an invalid method.

Apparently, in the 'ActiveResource::Base' file, the line#885 of 3.0.4 version release is the culprit for failure. &quot;collect!&quot; is a valid method for Array. But, when you have a Hash object as the result of a REST call, it breaks the GEM, because 'collect!' is not a valid method for the Hash class.

See this:
        def instantiate_collection(collection, prefix_options = {})
          collection.collect! { |record| instantiate_record(record, prefix_options) }    #This is the problem line.
        end

Can someone please fix this?
Thanks,</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi, I am building a GEM for retrieving data from Salesforce
Force.com using REST API.&lt;br&gt;
My class inherits from the ActiveResource::Base class. However, we
I tried to make a Salesforce::UserRest.find(:all) call, the
ActiveResource fails and complains about 'collect!' as an invalid
method.&lt;/p&gt;
&lt;p&gt;Apparently, in the 'ActiveResource::Base' file, the line#885 of
3.0.4 version release is the culprit for failure. &quot;collect!&quot; is a
valid method for Array. But, when you have a Hash object as the
result of a REST call, it breaks the GEM, because 'collect!' is not
a valid method for the Hash class.&lt;/p&gt;
&lt;p&gt;See this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def instantiate_collection(collection, prefix_options = {})
      collection.collect! { |record| instantiate_record(record, prefix_options) }    #This is the problem line.
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Can someone please fix this?&lt;br&gt;
Thanks,&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi, I am building a GEM for retrieving data from Salesforce Force.com using REST API. 
My class inherits from the ActiveResource::Base class. However, we I tried to make a Salesforce::UserRest.find(:all) call, the ActiveResource fails and complains about 'collect!' as an invalid method.

Apparently, in the 'ActiveResource::Base' file, the line#885 of 3.0.4 version release is the culprit for failure. &quot;collect!&quot; is a valid method for Array. But, when you have a Hash object as the result of a REST call, it breaks the GEM, because 'collect!' is not a valid method for the Hash class.

See this:
        def instantiate_collection(collection, prefix_options = {})
          collection.collect! { |record| instantiate_record(record, prefix_options) }    #This is the problem line.
        end

Can someone please fix this?
Thanks,</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi, I am building a GEM for retrieving data from Salesforce
Force.com using REST API.&lt;br&gt;
My class inherits from the ActiveResource::Base class. However, we
I tried to make a Salesforce::UserRest.find(:all) call, the
ActiveResource fails and complains about 'collect!' as an invalid
method.&lt;/p&gt;
&lt;p&gt;Apparently, in the 'ActiveResource::Base' file, the line#885 of
3.0.4 version release is the culprit for failure. &quot;collect!&quot; is a
valid method for Array. But, when you have a Hash object as the
result of a REST call, it breaks the GEM, because 'collect!' is not
a valid method for the Hash class.&lt;/p&gt;
&lt;p&gt;See this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def instantiate_collection(collection, prefix_options = {})
      collection.collect! { |record| instantiate_record(record, prefix_options) }    #This is the problem line.
    end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Can someone please fix this?&lt;br&gt;
Thanks,&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-18T04:22:08+00:00</created-at>
      <creator-id type="integer">137596</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6446</number>
      <permalink>activeresourcebase-class-is-defective</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveResource::Base class is defective</title>
      <updated-at type="datetime">2011-02-18T04:22:09+00:00</updated-at>
      <user-id type="integer">137596</user-id>
      <version type="integer">1</version>
      <user-name>Raymond Gao</user-name>
      <creator-name>Raymond Gao</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6446</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Now our company has an activity, and if you buy the couture &lt;a href=&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;corset style wedding dresses&lt;/a&gt;, you will get a discount here. And our products are in great numbers, you sure can find your truth. The couture &lt;a href=&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;Corset style wedding dresses&lt;/a&gt; has been designed in the right sides, so just take your decision to choose.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Now our company has an activity, and if you buy the couture
&lt;a href=
&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;corset
style wedding dresses&lt;/a&gt;, you will get a discount here. And our
products are in great numbers, you sure can find your truth. The
couture &lt;a href=
&quot;http://www.longmanmart.com/knowledge/corset-wedding-dresses.html&quot;&gt;Corset
style wedding dresses&lt;/a&gt; has been designed in the right sides, so
just take your decision to choose.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-18T07:36:23+00:00</created-at>
      <creator-id type="integer">137596</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6446</number>
      <permalink>activeresourcebase-class-is-defective</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveResource::Base class is defective</title>
      <updated-at type="datetime">2011-02-18T10:10:47+00:00</updated-at>
      <user-id type="integer">137617</user-id>
      <version type="integer">2</version>
      <user-name>junjun555</user-name>
      <creator-name>Raymond Gao</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6446</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
