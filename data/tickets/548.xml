<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-04T01:24:14+01:00</created-at>
  <creator-id type="integer">23972</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">548</number>
  <permalink>has_many-through-w-condition-returns-invalid-records</permalink>
  <priority type="integer">43</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>has_many :through w/ condition returns invalid included records</title>
  <updated-at type="datetime">2008-10-05T15:17:58+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Jon</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/548</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Given the following:

class Father &lt; ActiveRecord::Base
  has_many :children
  has_many :boys, :through =&gt; :children, :conditions =&gt; 'boys.age &lt; 10'
end

class Child &lt; ActiveRecord::Base
  belongs_to :boy
  belongs_to :father
end

class Boy &lt; ActiveRecord::Base
end



mysql&gt; select * from fathers;
+------+
| id   |
+------+
|    1 | 
+------+

mysql&gt; select * from boys;
+------+------+
| id   | age  |
+------+------+
|    1 |    5 | 
|    2 |   18 | 
+------+------+


mysql&gt; select * from children;
+------+--------+-----------+
| id   | boy_id | father_id |
+------+--------+-----------+
|    1 |      1 |         1 | 
|    2 |      2 |         1 | 
+------+--------+-----------+


Father.find(1).boys correctly returns Boy 1
Father.find(1, :include =&gt; :boys) incorrectly returns Boy 1 and Boy 2:

Gunner: ~/test [19] &gt; script/console
Loading development environment (Rails 2.1.0)
&gt;&gt; f = Father.find 1
=&gt; #&lt;Father id: 1&gt;
&gt;&gt; f.boys
=&gt; [#&lt;Boy id: 1, age: 5&gt;]
&gt;&gt; f = Father.find 1, :include =&gt; :boys
=&gt; #&lt;Father id: 1&gt;
&gt;&gt; f.boys
=&gt; [#&lt;Boy id: 1, age: 5&gt;, #&lt;Boy id: 2, age: 18&gt;]


in the logs for the include, it's doing an additional call to get that incorrect Boy 2:

  Father Load (0.000364)   SELECT * FROM `fathers` WHERE (`fathers`.`id` = 1) 
  Child Load (0.000355)   SELECT `children`.* FROM `children` WHERE (`children`.father_id IN (1)) 
  Child Columns (0.010973)   SHOW FIELDS FROM `children`
  Boy Load (0.000381)   SELECT * FROM `boys` WHERE (`boys`.id IN ('1','2') AND (boys.age &lt; 10)) 
  Boy Load (0.000317)   SELECT * FROM `boys` WHERE (`boys`.`id` = 2)</original-body>
  <latest-body>Given the following:

class Father &lt; ActiveRecord::Base
  has_many :children
  has_many :boys, :through =&gt; :children, :conditions =&gt; 'boys.age &lt; 10'
end

class Child &lt; ActiveRecord::Base
  belongs_to :boy
  belongs_to :father
end

class Boy &lt; ActiveRecord::Base
end



mysql&gt; select * from fathers;
+------+
| id   |
+------+
|    1 | 
+------+

mysql&gt; select * from boys;
+------+------+
| id   | age  |
+------+------+
|    1 |    5 | 
|    2 |   18 | 
+------+------+


mysql&gt; select * from children;
+------+--------+-----------+
| id   | boy_id | father_id |
+------+--------+-----------+
|    1 |      1 |         1 | 
|    2 |      2 |         1 | 
+------+--------+-----------+


Father.find(1).boys correctly returns Boy 1
Father.find(1, :include =&gt; :boys) incorrectly returns Boy 1 and Boy 2:

Gunner: ~/test [19] &gt; script/console
Loading development environment (Rails 2.1.0)
&gt;&gt; f = Father.find 1
=&gt; #&lt;Father id: 1&gt;
&gt;&gt; f.boys
=&gt; [#&lt;Boy id: 1, age: 5&gt;]
&gt;&gt; f = Father.find 1, :include =&gt; :boys
=&gt; #&lt;Father id: 1&gt;
&gt;&gt; f.boys
=&gt; [#&lt;Boy id: 1, age: 5&gt;, #&lt;Boy id: 2, age: 18&gt;]


in the logs for the include, it's doing an additional call to get that incorrect Boy 2:

  Father Load (0.000364)   SELECT * FROM `fathers` WHERE (`fathers`.`id` = 1) 
  Child Load (0.000355)   SELECT `children`.* FROM `children` WHERE (`children`.father_id IN (1)) 
  Child Columns (0.010973)   SHOW FIELDS FROM `children`
  Boy Load (0.000381)   SELECT * FROM `boys` WHERE (`boys`.id IN ('1','2') AND (boys.age &lt; 10)) 
  Boy Load (0.000317)   SELECT * FROM `boys` WHERE (`boys`.`id` = 2)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Given the following:
&lt;/p&gt;&lt;p&gt;
class Father &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_many :children
&lt;/p&gt;&lt;p&gt;
has_many :boys, :through =&gt; :children, :conditions =&gt; 'boys.age &amp;lt; 10'
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Child &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
belongs_to :boy
&lt;/p&gt;&lt;p&gt;
belongs_to :father
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Boy &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
mysql&gt; select * from fathers;
&lt;/p&gt;&lt;p&gt;
+------+
&lt;/p&gt;&lt;p&gt;
| id   |
&lt;/p&gt;&lt;p&gt;
+------+
&lt;/p&gt;&lt;p&gt;
|    1 |
&lt;/p&gt;&lt;p&gt;
+------+
&lt;/p&gt;&lt;p&gt;
mysql&gt; select * from boys;
&lt;/p&gt;&lt;p&gt;
+------+------+
&lt;/p&gt;&lt;p&gt;
| id   | age  |
&lt;/p&gt;&lt;p&gt;
+------+------+
&lt;/p&gt;&lt;p&gt;
|    1 |    5 |
&lt;/p&gt;&lt;p&gt;
|    2 |   18 |
&lt;/p&gt;&lt;p&gt;
+------+------+
&lt;/p&gt;&lt;p&gt;
mysql&gt; select * from children;
&lt;/p&gt;&lt;p&gt;
+------+--------+-----------+
&lt;/p&gt;&lt;p&gt;
| id   | boy_id | father_id |
&lt;/p&gt;&lt;p&gt;
+------+--------+-----------+
&lt;/p&gt;&lt;p&gt;
|    1 |      1 |         1 |
&lt;/p&gt;&lt;p&gt;
|    2 |      2 |         1 |
&lt;/p&gt;&lt;p&gt;
+------+--------+-----------+
&lt;/p&gt;&lt;p&gt;
Father.find(1).boys correctly returns Boy 1
&lt;/p&gt;&lt;p&gt;
Father.find(1, :include =&gt; :boys) incorrectly returns Boy 1 and Boy 2:
&lt;/p&gt;&lt;p&gt;
Gunner: ~/test &lt;a href=&quot;/projects/8994/changesets/19&quot; title=&quot;Changeset #19&quot;&gt;[19]&lt;/a&gt; &gt; script/console
&lt;/p&gt;&lt;p&gt;
Loading development environment (Rails 2.1.0)
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f = Father.find 1
&lt;/p&gt;&lt;p&gt;
=&gt; #
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f.boys
&lt;/p&gt;&lt;p&gt;
=&gt; [#]
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f = Father.find 1, :include =&gt; :boys
&lt;/p&gt;&lt;p&gt;
=&gt; #
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f.boys
&lt;/p&gt;&lt;p&gt;
=&gt; [#, #]
&lt;/p&gt;&lt;p&gt;
in the logs for the include, it's doing an additional call to get that incorrect Boy 2:
&lt;/p&gt;&lt;p&gt;
Father Load (0.000364)   SELECT * FROM `fathers` WHERE (`fathers`.`id` = 1)
&lt;/p&gt;&lt;p&gt;
Child Load (0.000355)   SELECT `children`.* FROM `children` WHERE (`children`.father_id IN (1))
&lt;/p&gt;&lt;p&gt;
Child Columns (0.010973)   SHOW FIELDS FROM `children`
&lt;/p&gt;&lt;p&gt;
Boy Load (0.000381)   SELECT * FROM `boys` WHERE (`boys`.id IN ('1','2') AND (boys.age &amp;lt; 10))
&lt;/p&gt;&lt;p&gt;
Boy Load (0.000317)   SELECT * FROM `boys` WHERE (`boys`.`id` = 2)
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given the following:

class Father &lt; ActiveRecord::Base
  has_many :children
  has_many :boys, :through =&gt; :children, :conditions =&gt; 'boys.age &lt; 10'
end

class Child &lt; ActiveRecord::Base
  belongs_to :boy
  belongs_to :father
end

class Boy &lt; ActiveRecord::Base
end



mysql&gt; select * from fathers;
+------+
| id   |
+------+
|    1 | 
+------+

mysql&gt; select * from boys;
+------+------+
| id   | age  |
+------+------+
|    1 |    5 | 
|    2 |   18 | 
+------+------+


mysql&gt; select * from children;
+------+--------+-----------+
| id   | boy_id | father_id |
+------+--------+-----------+
|    1 |      1 |         1 | 
|    2 |      2 |         1 | 
+------+--------+-----------+


Father.find(1).boys correctly returns Boy 1
Father.find(1, :include =&gt; :boys) incorrectly returns Boy 1 and Boy 2:

Gunner: ~/test [19] &gt; script/console
Loading development environment (Rails 2.1.0)
&gt;&gt; f = Father.find 1
=&gt; #&lt;Father id: 1&gt;
&gt;&gt; f.boys
=&gt; [#&lt;Boy id: 1, age: 5&gt;]
&gt;&gt; f = Father.find 1, :include =&gt; :boys
=&gt; #&lt;Father id: 1&gt;
&gt;&gt; f.boys
=&gt; [#&lt;Boy id: 1, age: 5&gt;, #&lt;Boy id: 2, age: 18&gt;]


in the logs for the include, it's doing an additional call to get that incorrect Boy 2:

  Father Load (0.000364)   SELECT * FROM `fathers` WHERE (`fathers`.`id` = 1) 
  Child Load (0.000355)   SELECT `children`.* FROM `children` WHERE (`children`.father_id IN (1)) 
  Child Columns (0.010973)   SHOW FIELDS FROM `children`
  Boy Load (0.000381)   SELECT * FROM `boys` WHERE (`boys`.id IN ('1','2') AND (boys.age &lt; 10)) 
  Boy Load (0.000317)   SELECT * FROM `boys` WHERE (`boys`.`id` = 2)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Given the following:
&lt;/p&gt;&lt;p&gt;
class Father &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_many :children
&lt;/p&gt;&lt;p&gt;
has_many :boys, :through =&gt; :children, :conditions =&gt; 'boys.age &amp;lt; 10'
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Child &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
belongs_to :boy
&lt;/p&gt;&lt;p&gt;
belongs_to :father
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Boy &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
mysql&gt; select * from fathers;
&lt;/p&gt;&lt;p&gt;
+------+
&lt;/p&gt;&lt;p&gt;
| id   |
&lt;/p&gt;&lt;p&gt;
+------+
&lt;/p&gt;&lt;p&gt;
|    1 |
&lt;/p&gt;&lt;p&gt;
+------+
&lt;/p&gt;&lt;p&gt;
mysql&gt; select * from boys;
&lt;/p&gt;&lt;p&gt;
+------+------+
&lt;/p&gt;&lt;p&gt;
| id   | age  |
&lt;/p&gt;&lt;p&gt;
+------+------+
&lt;/p&gt;&lt;p&gt;
|    1 |    5 |
&lt;/p&gt;&lt;p&gt;
|    2 |   18 |
&lt;/p&gt;&lt;p&gt;
+------+------+
&lt;/p&gt;&lt;p&gt;
mysql&gt; select * from children;
&lt;/p&gt;&lt;p&gt;
+------+--------+-----------+
&lt;/p&gt;&lt;p&gt;
| id   | boy_id | father_id |
&lt;/p&gt;&lt;p&gt;
+------+--------+-----------+
&lt;/p&gt;&lt;p&gt;
|    1 |      1 |         1 |
&lt;/p&gt;&lt;p&gt;
|    2 |      2 |         1 |
&lt;/p&gt;&lt;p&gt;
+------+--------+-----------+
&lt;/p&gt;&lt;p&gt;
Father.find(1).boys correctly returns Boy 1
&lt;/p&gt;&lt;p&gt;
Father.find(1, :include =&gt; :boys) incorrectly returns Boy 1 and Boy 2:
&lt;/p&gt;&lt;p&gt;
Gunner: ~/test &lt;a href=&quot;/projects/8994/changesets/19&quot; title=&quot;Changeset #19&quot;&gt;[19]&lt;/a&gt; &gt; script/console
&lt;/p&gt;&lt;p&gt;
Loading development environment (Rails 2.1.0)
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f = Father.find 1
&lt;/p&gt;&lt;p&gt;
=&gt; #
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f.boys
&lt;/p&gt;&lt;p&gt;
=&gt; [#]
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f = Father.find 1, :include =&gt; :boys
&lt;/p&gt;&lt;p&gt;
=&gt; #
&lt;/p&gt;&lt;p&gt;
&gt;&gt; f.boys
&lt;/p&gt;&lt;p&gt;
=&gt; [#, #]
&lt;/p&gt;&lt;p&gt;
in the logs for the include, it's doing an additional call to get that incorrect Boy 2:
&lt;/p&gt;&lt;p&gt;
Father Load (0.000364)   SELECT * FROM `fathers` WHERE (`fathers`.`id` = 1)
&lt;/p&gt;&lt;p&gt;
Child Load (0.000355)   SELECT `children`.* FROM `children` WHERE (`children`.father_id IN (1))
&lt;/p&gt;&lt;p&gt;
Child Columns (0.010973)   SHOW FIELDS FROM `children`
&lt;/p&gt;&lt;p&gt;
Boy Load (0.000381)   SELECT * FROM `boys` WHERE (`boys`.id IN ('1','2') AND (boys.age &amp;lt; 10))
&lt;/p&gt;&lt;p&gt;
Boy Load (0.000317)   SELECT * FROM `boys` WHERE (`boys`.`id` = 2)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-05T07:07:36+01:00</created-at>
      <creator-id type="integer">23972</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">548</number>
      <permalink>has_many-through-w-condition-returns-invalid-records</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many :through w/ condition returns invalid included records</title>
      <updated-at type="datetime">2008-07-05T07:07:36+01:00</updated-at>
      <user-id type="integer">23972</user-id>
      <version type="integer">1</version>
      <user-name>Jon</user-name>
      <creator-name>Jon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/548</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-05T15:17:53+01:00</created-at>
      <creator-id type="integer">23972</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">548</number>
      <permalink>has_many-through-w-condition-returns-invalid-records</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>has_many :through w/ condition returns invalid included records</title>
      <updated-at type="datetime">2008-10-05T15:17:58+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Jon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/548</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
