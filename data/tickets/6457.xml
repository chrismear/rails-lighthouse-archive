<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-21T05:38:09+00:00</created-at>
  <creator-id type="integer">119913</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6457</number>
  <permalink>disregard-for-schema-search-path-in-postgresql_adapterrb</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>disregard for schema search path in postgresql_adapter.rb</title>
  <updated-at type="datetime">2011-02-26T21:11:55+00:00</updated-at>
  <user-id type="integer">119913</user-id>
  <version type="integer">2</version>
  <user-name>SooDesuNe</user-name>
  <creator-name>SooDesuNe</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6457</url>
  <priority-name nil="true"></priority-name>
  <original-body>in #table_exists? the SQL to determine if the table exists is:

        query(&lt;&lt;-SQL).first[0].to_i &gt; 0
            SELECT COUNT(*)
            FROM pg_tables
            WHERE tablename = '#{table.gsub(/(^&quot;|&quot;$)/,'')}'
            #{schema ? &quot;AND schemaname = '#{schema}'&quot; : ''}

this finds all tables in the database, regardless of whether or not they are in the current schema search path.  #table_exists? is frequently used to determine if tables should/can be dropped (as in `active_record/connection_adapters/abstract/schema_statements.rb #create_table`).

Postgres will not let you drop a table that's not in your current search path. `PGError: ERROR:  relation does not exist` is raised.

I believe #table_exists? should return false if the table is not in the current search path.</original-body>
  <latest-body>in #table_exists? the SQL to determine if the table exists is:

        query(&lt;&lt;-SQL).first[0].to_i &gt; 0
            SELECT COUNT(*)
            FROM pg_tables
            WHERE tablename = '#{table.gsub(/(^&quot;|&quot;$)/,'')}'
            #{schema ? &quot;AND schemaname = '#{schema}'&quot; : ''}

this finds all tables in the database, regardless of whether or not they are in the current schema search path.  #table_exists? is frequently used to determine if tables should/can be dropped (as in `active_record/connection_adapters/abstract/schema_statements.rb #create_table`).

Postgres will not let you drop a table that's not in your current search path. `PGError: ERROR:  relation does not exist` is raised.

I believe #table_exists? should return false if the table is not in the current search path.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;in #table_exists? the SQL to determine if the table exists
is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    query(&amp;lt;&amp;lt;-SQL).first[0].to_i &amp;gt; 0
        SELECT COUNT(*)
        FROM pg_tables
        WHERE tablename = '#{table.gsub(/(^&quot;|&quot;$)/,'')}'
        #{schema ? &quot;AND schemaname = '#{schema}'&quot; : ''}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this finds all tables in the database, regardless of whether or
not they are in the current schema search path. #table_exists? is
frequently used to determine if tables should/can be dropped (as in
&lt;code&gt;active_record/connection_adapters/abstract/schema_statements.rb
#create_table&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Postgres will not let you drop a table that's not in your
current search path. &lt;code&gt;PGError: ERROR: relation does not
exist&lt;/code&gt; is raised.&lt;/p&gt;
&lt;p&gt;I believe #table_exists? should return false if the table is not
in the current search path.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>in #table_exists? the SQL to determine if the table exists is:

        query(&lt;&lt;-SQL).first[0].to_i &gt; 0
            SELECT COUNT(*)
            FROM pg_tables
            WHERE tablename = '#{table.gsub(/(^&quot;|&quot;$)/,'')}'
            #{schema ? &quot;AND schemaname = '#{schema}'&quot; : ''}

this finds all tables in the database, regardless of whether or not they are in the current schema search path.  #table_exists? is frequently used to determine if tables should/can be dropped (as in `active_record/connection_adapters/abstract/schema_statements.rb #create_table`).

Postgres will not let you drop a table that's not in your current search path. `PGError: ERROR:  relation does not exist` is raised.

I believe #table_exists? should return false if the table is not in the current search path.</body>
      <body-html>&lt;div&gt;&lt;p&gt;in #table_exists? the SQL to determine if the table exists
is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    query(&amp;lt;&amp;lt;-SQL).first[0].to_i &amp;gt; 0
        SELECT COUNT(*)
        FROM pg_tables
        WHERE tablename = '#{table.gsub(/(^&quot;|&quot;$)/,'')}'
        #{schema ? &quot;AND schemaname = '#{schema}'&quot; : ''}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this finds all tables in the database, regardless of whether or
not they are in the current schema search path. #table_exists? is
frequently used to determine if tables should/can be dropped (as in
&lt;code&gt;active_record/connection_adapters/abstract/schema_statements.rb
#create_table&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Postgres will not let you drop a table that's not in your
current search path. &lt;code&gt;PGError: ERROR: relation does not
exist&lt;/code&gt; is raised.&lt;/p&gt;
&lt;p&gt;I believe #table_exists? should return false if the table is not
in the current search path.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-21T05:38:09+00:00</created-at>
      <creator-id type="integer">119913</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6457</number>
      <permalink>disregard-for-schema-search-path-in-postgresql_adapterrb</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>disregard for schema search path in postgresql_adapter.rb</title>
      <updated-at type="datetime">2011-02-21T05:38:10+00:00</updated-at>
      <user-id type="integer">119913</user-id>
      <version type="integer">1</version>
      <user-name>SooDesuNe</user-name>
      <creator-name>SooDesuNe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6457</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>One possible solution looks like:

        # `AND schemaname = ANY (current_schemas(false))` added so only tables in the current search path are included
        query(&lt;&lt;-SQL).first[0].to_i &gt; 0
            SELECT COUNT(*)
            FROM pg_tables
            WHERE tablename = '#{table.gsub(/(^&quot;|&quot;$)/,'')}'
            #{schema ? &quot;AND schemaname = '#{schema}'&quot; : ''}
            AND schemaname = ANY (current_schemas(false))
        SQL</body>
      <body-html>&lt;div&gt;&lt;p&gt;One possible solution looks like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    # `AND schemaname = ANY (current_schemas(false))` added so only tables in the current search path are included
    query(&amp;lt;&amp;lt;-SQL).first[0].to_i &amp;gt; 0
        SELECT COUNT(*)
        FROM pg_tables
        WHERE tablename = '#{table.gsub(/(^&quot;|&quot;$)/,'')}'
        #{schema ? &quot;AND schemaname = '#{schema}'&quot; : ''}
        AND schemaname = ANY (current_schemas(false))
    SQL&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-26T21:11:54+00:00</created-at>
      <creator-id type="integer">119913</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6457</number>
      <permalink>disregard-for-schema-search-path-in-postgresql_adapterrb</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>disregard for schema search path in postgresql_adapter.rb</title>
      <updated-at type="datetime">2011-02-26T21:11:55+00:00</updated-at>
      <user-id type="integer">119913</user-id>
      <version type="integer">2</version>
      <user-name>SooDesuNe</user-name>
      <creator-name>SooDesuNe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6457</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
