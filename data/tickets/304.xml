<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-02T22:21:15+01:00</created-at>
  <creator-id type="integer">21996</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">304</number>
  <permalink>preloading-a-has_and_belongs_to_many-generates-invalid-sql-with-oracle-at-least</permalink>
  <priority type="integer">15028</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord bug eager_loading has_and_belongs_to_many oracle patch</tag>
  <title>Preloading a &quot;has_and_belongs_to_many&quot; generates invalid SQL (with Oracle at least)</title>
  <updated-at type="datetime">2009-11-30T15:39:24+00:00</updated-at>
  <user-id type="integer">32480</user-id>
  <version type="integer">4</version>
  <user-name>bshand</user-name>
  <creator-name>Mark Roghelia</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/304</url>
  <priority-name nil="true"></priority-name>
  <original-body>I am using Rails 2.1 with an Oracle database on OSX.

I have a UserProfile model with a has_and_belongs_to_many association of UserRoles.

I executed the following:

UserProfile.find(1, :include =&gt; :user_roles)

I got this error:

/Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log': OCIError: ORA-00911: invalid character: SELECT user_role.*, t0.user_profile_id as _parent_record_id FROM user_role    INNER JOIN user_profile_user_role as t0 ON user_role.id = t0.user_role_id WHERE (t0.user_profile_id  IN (1))  (ActiveRecord::StatementInvalid)
	from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:221:in `execute'
	from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:516:in `select'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/query_cache.rb:61:in `select_all'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:582:in `find_by_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:1341:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:536:in `find_without_pagination'
	from /Users/mark/src/msd/vendor/plugins/paginating_find/lib/paginating_find.rb:102:in `find'
	 ... 16 levels...
	from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
	from ./script/runner:3

I pasted this SQL into Oracle's SQL Developer and played with it there to work out what was wrong.  There were actually two different problems.

The first syntax problem was the &quot;as&quot; in the inner join to user_profile_user_role.  I patched the code to remove this &quot;as&quot; and got a second error.  This time it was the column alias &quot;_parent_record_id&quot;.  In Oracle a name cannot start with an underscore.  I replaced &quot;_parent_record_id&quot; with &quot;x_parent_record_id&quot; and things worked.</original-body>
  <latest-body>I am using Rails 2.1 with an Oracle database on OSX.

I have a UserProfile model with a has_and_belongs_to_many association of UserRoles.

I executed the following:

UserProfile.find(1, :include =&gt; :user_roles)

I got this error:

/Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log': OCIError: ORA-00911: invalid character: SELECT user_role.*, t0.user_profile_id as _parent_record_id FROM user_role    INNER JOIN user_profile_user_role as t0 ON user_role.id = t0.user_role_id WHERE (t0.user_profile_id  IN (1))  (ActiveRecord::StatementInvalid)
	from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:221:in `execute'
	from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:516:in `select'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/query_cache.rb:61:in `select_all'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:582:in `find_by_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:1341:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:536:in `find_without_pagination'
	from /Users/mark/src/msd/vendor/plugins/paginating_find/lib/paginating_find.rb:102:in `find'
	 ... 16 levels...
	from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
	from ./script/runner:3

I pasted this SQL into Oracle's SQL Developer and played with it there to work out what was wrong.  There were actually two different problems.

The first syntax problem was the &quot;as&quot; in the inner join to user_profile_user_role.  I patched the code to remove this &quot;as&quot; and got a second error.  This time it was the column alias &quot;_parent_record_id&quot;.  In Oracle a name cannot start with an underscore.  I replaced &quot;_parent_record_id&quot; with &quot;x_parent_record_id&quot; and things worked.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I am using Rails 2.1 with an Oracle database on OSX.
&lt;/p&gt;&lt;p&gt;
I have a UserProfile model with a has_and_belongs_to_many association of UserRoles.
&lt;/p&gt;&lt;p&gt;
I executed the following:
&lt;/p&gt;&lt;p&gt;
UserProfile.find(1, :include =&gt; :user_roles)
&lt;/p&gt;&lt;p&gt;
I got this error:
&lt;/p&gt;&lt;p&gt;
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log': OCIError: ORA-00911: invalid character: SELECT user_role.*, t0.user_profile_id as _parent_record_id FROM user_role    INNER JOIN user_profile_user_role as t0 ON user_role.id = t0.user_role_id WHERE (t0.user_profile_id  IN (1))  (ActiveRecord::StatementInvalid)
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:221:in `execute'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:516:in `select'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/query_cache.rb:61:in `select_all'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:582:in `find_by_sql'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:1341:in `find_every'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:536:in `find_without_pagination'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/vendor/plugins/paginating_find/lib/paginating_find.rb:102:in `find'
&lt;/p&gt;&lt;p&gt;
... 16 levels...
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
&lt;/p&gt;&lt;p&gt;
from ./script/runner:3
&lt;/p&gt;&lt;p&gt;
I pasted this SQL into Oracle's SQL Developer and played with it there to work out what was wrong.  There were actually two different problems.
&lt;/p&gt;&lt;p&gt;
The first syntax problem was the &quot;as&quot; in the inner join to user_profile_user_role.  I patched the code to remove this &quot;as&quot; and got a second error.  This time it was the column alias &quot;_parent_record_id&quot;.  In Oracle a name cannot start with an underscore.  I replaced &quot;_parent_record_id&quot; with &quot;x_parent_record_id&quot; and things worked.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am using Rails 2.1 with an Oracle database on OSX.

I have a UserProfile model with a has_and_belongs_to_many association of UserRoles.

I executed the following:

UserProfile.find(1, :include =&gt; :user_roles)

I got this error:

/Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log': OCIError: ORA-00911: invalid character: SELECT user_role.*, t0.user_profile_id as _parent_record_id FROM user_role    INNER JOIN user_profile_user_role as t0 ON user_role.id = t0.user_role_id WHERE (t0.user_profile_id  IN (1))  (ActiveRecord::StatementInvalid)
	from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:221:in `execute'
	from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:516:in `select'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/query_cache.rb:61:in `select_all'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:582:in `find_by_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:1341:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:536:in `find_without_pagination'
	from /Users/mark/src/msd/vendor/plugins/paginating_find/lib/paginating_find.rb:102:in `find'
	 ... 16 levels...
	from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
	from ./script/runner:3

I pasted this SQL into Oracle's SQL Developer and played with it there to work out what was wrong.  There were actually two different problems.

The first syntax problem was the &quot;as&quot; in the inner join to user_profile_user_role.  I patched the code to remove this &quot;as&quot; and got a second error.  This time it was the column alias &quot;_parent_record_id&quot;.  In Oracle a name cannot start with an underscore.  I replaced &quot;_parent_record_id&quot; with &quot;x_parent_record_id&quot; and things worked.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I am using Rails 2.1 with an Oracle database on OSX.
&lt;/p&gt;&lt;p&gt;
I have a UserProfile model with a has_and_belongs_to_many association of UserRoles.
&lt;/p&gt;&lt;p&gt;
I executed the following:
&lt;/p&gt;&lt;p&gt;
UserProfile.find(1, :include =&gt; :user_roles)
&lt;/p&gt;&lt;p&gt;
I got this error:
&lt;/p&gt;&lt;p&gt;
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract_adapter.rb:147:in `log': OCIError: ORA-00911: invalid character: SELECT user_role.*, t0.user_profile_id as _parent_record_id FROM user_role    INNER JOIN user_profile_user_role as t0 ON user_role.id = t0.user_role_id WHERE (t0.user_profile_id  IN (1))  (ActiveRecord::StatementInvalid)
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:221:in `execute'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-oracle-adapter-1.0.0.9216/lib/active_record/connection_adapters/oracle_adapter.rb:516:in `select'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/connection_adapters/abstract/query_cache.rb:61:in `select_all'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:582:in `find_by_sql'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:1341:in `find_every'
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/activerecord-2.1.0/lib/active_record/base.rb:536:in `find_without_pagination'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/vendor/plugins/paginating_find/lib/paginating_find.rb:102:in `find'
&lt;/p&gt;&lt;p&gt;
... 16 levels...
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
&lt;/p&gt;&lt;p&gt;
from ./script/runner:3
&lt;/p&gt;&lt;p&gt;
I pasted this SQL into Oracle's SQL Developer and played with it there to work out what was wrong.  There were actually two different problems.
&lt;/p&gt;&lt;p&gt;
The first syntax problem was the &quot;as&quot; in the inner join to user_profile_user_role.  I patched the code to remove this &quot;as&quot; and got a second error.  This time it was the column alias &quot;_parent_record_id&quot;.  In Oracle a name cannot start with an underscore.  I replaced &quot;_parent_record_id&quot; with &quot;x_parent_record_id&quot; and things worked.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-02T22:21:15+01:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">304</number>
      <permalink>preloading-a-has_and_belongs_to_many-generates-invalid-sql-with-oracle-at-least</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Preloading a &quot;has_and_belongs_to_many&quot; generates invalid SQL (with Oracle at least)</title>
      <updated-at type="datetime">2008-06-02T22:21:15+01:00</updated-at>
      <user-id type="integer">21996</user-id>
      <version type="integer">1</version>
      <user-name>Mark Roghelia</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/304</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Patch needs tests.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Patch needs tests.
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-04T19:28:12+01:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">304</number>
      <permalink>preloading-a-has_and_belongs_to_many-generates-invalid-sql-with-oracle-at-least</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Preloading a &quot;has_and_belongs_to_many&quot; generates invalid SQL (with Oracle at least)</title>
      <updated-at type="datetime">2008-06-04T19:28:12+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/304</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After more than an hour of trying, I'm still unable to get Activerecord's unit tests running on my Oracle db.  However, I'm willing to bet that if I did, they would fail due to this bug.

I'm giving up and just applying the patch.  But, for any brave soul willing to carry the torch, this may help:http://media.railscasts.com/videos/113_contributing_to_rails_with_git.mov

Good luck, and this really needs to get into rails if we care at all about oracle working.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
After more than an hour of trying, I'm still unable to get Activerecord's unit tests running on my Oracle db.  However, I'm willing to bet that if I did, they would fail due to this bug.
&lt;/p&gt;&lt;p&gt;
I'm giving up and just applying the patch.  But, for any brave soul willing to carry the torch, this may help:http://media.railscasts.com/videos/113_contributing_to_rails_with_git.mov
&lt;/p&gt;&lt;p&gt;
Good luck, and this really needs to get into rails if we care at all about oracle working.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-05T00:27:02+01:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">304</number>
      <permalink>preloading-a-has_and_belongs_to_many-generates-invalid-sql-with-oracle-at-least</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord bug eager_loading has_and_belongs_to_many oracle patch</tag>
      <title>Preloading a &quot;has_and_belongs_to_many&quot; generates invalid SQL (with Oracle at least)</title>
      <updated-at type="datetime">2008-08-05T00:27:02+01:00</updated-at>
      <user-id type="integer">28077</user-id>
      <version type="integer">3</version>
      <user-name>Duke</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/304</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue is fixed in Rails 2.3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue is fixed in Rails 2.3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-30T15:39:22+00:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">304</number>
      <permalink>preloading-a-has_and_belongs_to_many-generates-invalid-sql-with-oracle-at-least</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord bug eager_loading has_and_belongs_to_many oracle patch</tag>
      <title>Preloading a &quot;has_and_belongs_to_many&quot; generates invalid SQL (with Oracle at least)</title>
      <updated-at type="datetime">2009-11-30T15:39:24+00:00</updated-at>
      <user-id type="integer">32480</user-id>
      <version type="integer">4</version>
      <user-name>bshand</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/304</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c61a1cc7d33dd799f29cd7f39d5ee2fce303b78a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-02T22:21:15+01:00</created-at>
      <filename>preload.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">25519</id>
      <size type="integer">927</size>
      <uploader-id type="integer">21996</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/25519/preload.diff</url>
    </attachment>
  </attachments>
</ticket>
