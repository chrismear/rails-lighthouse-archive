<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-15T21:51:05+01:00</created-at>
  <creator-id type="integer">52024</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5125</number>
  <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
  <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
  <updated-at type="datetime">2010-08-09T03:12:15+01:00</updated-at>
  <user-id type="integer">109325</user-id>
  <version type="integer">22</version>
  <user-name>Luis Correa d'Almeida</user-name>
  <creator-name>Robert Pankowecki</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Using collection_singular_ids= (method generated by has_many) raises an exception when class primary_key is string.

Example:

@@@
class Role &lt; ActiveRecord::Base
  has_many :function_roles
  has_many :roles, :through =&gt; :function_roles
end

class Function &lt; ActiveRecord::Base
  set_primary_key :short_name # this is string
end

Role.first.function_ids = ['ManagePermissions']

ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
LINE 1: ...  &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
: SELECT     &quot;functions&quot;.* FROM       &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT 1
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `rescue in log'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:200:in `log'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:431:in `find_by_sql'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:324:in `find_first'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:117:in `first'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:282:in `find_one'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:274:in `find_with_ids'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:102:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:403:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1423:in `block in collection_accessor_methods'
	from (irb):16

@@@

I think it can be easily fixed:

Remove this &quot;map(&amp;:to_i)&quot; from active_record/associations.rb:1422

@@@
def collection_accessor_methods(reflection, association_proxy_class, writer = true)
.
.
.
    define_method(&quot;#{reflection.name.to_s.singularize}_ids=&quot;) do |new_value|
      ids = (new_value || []).reject { |nid| nid.blank? }.map(&amp;:to_i)  # There is no need to map it to integer here in my opinion.
      send(&quot;#{reflection.name}=&quot;, reflection.klass.find(ids).index_by(&amp;:id).values_at(*ids))
.
.
.
@@@</original-body>
  <latest-body>Using collection_singular_ids= (method generated by has_many) raises an exception when class primary_key is string.

Example:

@@@
class Role &lt; ActiveRecord::Base
  has_many :function_roles
  has_many :roles, :through =&gt; :function_roles
end

class Function &lt; ActiveRecord::Base
  set_primary_key :short_name # this is string
end

Role.first.function_ids = ['ManagePermissions']

ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
LINE 1: ...  &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
: SELECT     &quot;functions&quot;.* FROM       &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT 1
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `rescue in log'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:200:in `log'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:431:in `find_by_sql'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:324:in `find_first'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:117:in `first'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:282:in `find_one'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:274:in `find_with_ids'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:102:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:403:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1423:in `block in collection_accessor_methods'
	from (irb):16

@@@

I think it can be easily fixed:

Remove this &quot;map(&amp;:to_i)&quot; from active_record/associations.rb:1422

@@@
def collection_accessor_methods(reflection, association_proxy_class, writer = true)
.
.
.
    define_method(&quot;#{reflection.name.to_s.singularize}_ids=&quot;) do |new_value|
      ids = (new_value || []).reject { |nid| nid.blank? }.map(&amp;:to_i)  # There is no need to map it to integer here in my opinion.
      send(&quot;#{reflection.name}=&quot;, reflection.klass.find(ids).index_by(&amp;:id).values_at(*ids))
.
.
.
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using collection_singular_ids= (method generated by has_many)
raises an exception when class primary_key is string.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Role &amp;lt; ActiveRecord::Base
  has_many :function_roles
  has_many :roles, :through =&amp;gt; :function_roles
end

class Function &amp;lt; ActiveRecord::Base
  set_primary_key :short_name # this is string
end

Role.first.function_ids = ['ManagePermissions']

ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
LINE 1: ...  &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
: SELECT     &quot;functions&quot;.* FROM       &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT 1
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `rescue in log'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:200:in `log'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:431:in `find_by_sql'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:324:in `find_first'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:117:in `first'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:282:in `find_one'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:274:in `find_with_ids'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:102:in `find'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:403:in `find'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1423:in `block in collection_accessor_methods'
    from (irb):16&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think it can be easily fixed:&lt;/p&gt;
&lt;p&gt;Remove this &quot;map(&amp;amp;:to_i)&quot; from
active_record/associations.rb:1422&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def collection_accessor_methods(reflection, association_proxy_class, writer = true)
.
.
.
    define_method(&quot;#{reflection.name.to_s.singularize}_ids=&quot;) do |new_value|
      ids = (new_value || []).reject { |nid| nid.blank? }.map(&amp;amp;:to_i)  # There is no need to map it to integer here in my opinion.
      send(&quot;#{reflection.name}=&quot;, reflection.klass.find(ids).index_by(&amp;amp;:id).values_at(*ids))
.
.
.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using collection_singular_ids= (method generated by has_many) raises an exception when class primary_key is string.

Example:

@@@
class Role &lt; ActiveRecord::Base
  has_many :function_roles
  has_many :roles, :through =&gt; :function_roles
end

class Function &lt; ActiveRecord::Base
  set_primary_key :short_name # this is string
end

Role.first.function_ids = ['ManagePermissions']

ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
LINE 1: ...  &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
: SELECT     &quot;functions&quot;.* FROM       &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT 1
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `rescue in log'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:200:in `log'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:431:in `find_by_sql'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:324:in `find_first'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:117:in `first'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:282:in `find_one'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:274:in `find_with_ids'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:102:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:403:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1423:in `block in collection_accessor_methods'
	from (irb):16

@@@

I think it can be easily fixed:

Remove this &quot;map(&amp;:to_i)&quot; from active_record/associations.rb:1422

@@@
def collection_accessor_methods(reflection, association_proxy_class, writer = true)
.
.
.
    define_method(&quot;#{reflection.name.to_s.singularize}_ids=&quot;) do |new_value|
      ids = (new_value || []).reject { |nid| nid.blank? }.map(&amp;:to_i)  # There is no need to map it to integer here in my opinion.
      send(&quot;#{reflection.name}=&quot;, reflection.klass.find(ids).index_by(&amp;:id).values_at(*ids))
.
.
.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using collection_singular_ids= (method generated by has_many)
raises an exception when class primary_key is string.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Role &amp;lt; ActiveRecord::Base
  has_many :function_roles
  has_many :roles, :through =&amp;gt; :function_roles
end

class Function &amp;lt; ActiveRecord::Base
  set_primary_key :short_name # this is string
end

Role.first.function_ids = ['ManagePermissions']

ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
LINE 1: ...  &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
: SELECT     &quot;functions&quot;.* FROM       &quot;functions&quot; WHERE     (&quot;functions&quot;.&quot;short_name&quot; = 0) LIMIT 1
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `rescue in log'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract_adapter.rb:200:in `log'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:431:in `find_by_sql'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:324:in `find_first'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:117:in `first'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:282:in `find_one'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:274:in `find_with_ids'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:102:in `find'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:403:in `find'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1423:in `block in collection_accessor_methods'
    from (irb):16&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think it can be easily fixed:&lt;/p&gt;
&lt;p&gt;Remove this &quot;map(&amp;amp;:to_i)&quot; from
active_record/associations.rb:1422&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def collection_accessor_methods(reflection, association_proxy_class, writer = true)
.
.
.
    define_method(&quot;#{reflection.name.to_s.singularize}_ids=&quot;) do |new_value|
      ids = (new_value || []).reject { |nid| nid.blank? }.map(&amp;amp;:to_i)  # There is no need to map it to integer here in my opinion.
      send(&quot;#{reflection.name}=&quot;, reflection.klass.find(ids).index_by(&amp;amp;:id).values_at(*ids))
.
.
.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T17:53:25+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-15T17:53:27+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">1</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can submit a patch using proper guidelines?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can submit a patch using proper guidelines?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T18:14:27+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-15T18:14:29+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I will try :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I will try :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T19:26:12+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-15T19:26:16+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">3</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This might not be a rails issue. Problem might line with Arel gem.

I setup a model called 'brake' which has *brake_id*, a string, as primary key.  

I tested with arel and this is what I got:

@@@ ruby
brakes = Table(:brakes)
brakes.where(brakes[:brake_id].eq('b1'))

# the sql that was generated is 
SELECT     &quot;brakes&quot;.&quot;brake_id&quot;, &quot;brakes&quot;.&quot;name&quot;, &quot;brakes&quot;.&quot;car_id&quot; FROM       &quot;brakes&quot; WHERE     &quot;brakes&quot;.&quot;brake_id&quot; = 0
@@@

Looks like ARel does not like primary_key being string.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This might not be a rails issue. Problem might line with Arel
gem.&lt;/p&gt;
&lt;p&gt;I setup a model called 'brake' which has &lt;em&gt;brake_id&lt;/em&gt;, a
string, as primary key.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I tested with arel and this is what I got:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;brakes = Table(:brakes)
brakes.where(brakes[:brake_id].eq('b1'))

# the sql that was generated is 
SELECT     &quot;brakes&quot;.&quot;brake_id&quot;, &quot;brakes&quot;.&quot;name&quot;, &quot;brakes&quot;.&quot;car_id&quot; FROM       &quot;brakes&quot; WHERE     &quot;brakes&quot;.&quot;brake_id&quot; = 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Looks like ARel does not like primary_key being string.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T20:51:45+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-15T20:51:46+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sending patch and tests for this case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sending patch and tests for this case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T21:21:42+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-15T21:21:43+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">5</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Could not reproduce your statement about Arel

@@@
ruby-1.9.2-head &gt; Role.primary_key
 =&gt; &quot;name&quot;

ruby-1.9.2-head &gt; role = Role.arel_table

ruby-1.9.2-head &gt; role.where(role[:name].eq('role')).to_sql
 =&gt; &quot;SELECT     \&quot;roles\&quot;.\&quot;name\&quot;, \&quot;roles\&quot;.\&quot;created_at\&quot;, \&quot;roles\&quot;.\&quot;updated_at\&quot; FROM       \&quot;roles\&quot; WHERE     \&quot;roles\&quot;.\&quot;name\&quot; = 'role'&quot;

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could not reproduce your statement about Arel&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.2-head &amp;gt; Role.primary_key
 =&amp;gt; &quot;name&quot;

ruby-1.9.2-head &amp;gt; role = Role.arel_table

ruby-1.9.2-head &amp;gt; role.where(role[:name].eq('role')).to_sql
 =&amp;gt; &quot;SELECT     \&quot;roles\&quot;.\&quot;name\&quot;, \&quot;roles\&quot;.\&quot;created_at\&quot;, \&quot;roles\&quot;.\&quot;updated_at\&quot; FROM       \&quot;roles\&quot; WHERE     \&quot;roles\&quot;.\&quot;name\&quot; = 'role'&quot;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T21:26:50+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-15T21:26:52+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">6</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I had wrong settings.

Your patch works.

+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had wrong settings.&lt;/p&gt;
&lt;p&gt;Your patch works.&lt;/p&gt;
&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T21:51:05+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-15T21:51:27+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I just found that my patch brokes the method when primary_key is a number. I'm goinh to post soon a better version.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just found that my patch brokes the method when primary_key is
a number. I'm goinh to post soon a better version.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T18:22:57+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-19T18:23:00+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">8</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>But I have one question before: How should the method behave when the given list of ids constains unexisting id? Raise an exception or just ignore it silently?</body>
      <body-html>&lt;div&gt;&lt;p&gt;But I have one question before: How should the method behave
when the given list of ids constains unexisting id? Raise an
exception or just ignore it silently?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T18:24:18+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-19T18:24:22+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">9</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Current behavior is to ignore silently, let's leave it that way. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Current behavior is to ignore silently, let's leave it that way.
:)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-21T14:27:40+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-21T14:27:44+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I checked that current behavior is to raise an exception. It works like that for Rails 2.2.8 and Rails 3 so I will stay with current implementation which seems to more safe for me.


@@@
Rails 2.3.8
ActiveRecord::RecordNotFound: Couldn't find all Containments with IDs (1,3) (found 1 results, but was looking for 2)
	from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/base.rb:1643:in `find_some'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/base.rb:1602:in `find_from_ids'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/base.rb:619:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/associations.rb:1337:in `block in collection_accessor_methods'

Rails 3.0.0.beta4
ActiveRecord::RecordNotFound: Couldn't find all Containments with IDs (1, 3) (found 0 results, but was looking for 2)
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:316:in `find_some'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:277:in `find_with_ids'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:102:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:403:in `find'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1423:in `block in collection_accessor_methods'
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I checked that current behavior is to raise an exception. It
works like that for Rails 2.2.8 and Rails 3 so I will stay with
current implementation which seems to more safe for me.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Rails 2.3.8
ActiveRecord::RecordNotFound: Couldn't find all Containments with IDs (1,3) (found 1 results, but was looking for 2)
    from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/base.rb:1643:in `find_some'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/base.rb:1602:in `find_from_ids'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/base.rb:619:in `find'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head@rails222/gems/activerecord-2.3.8/lib/active_record/associations.rb:1337:in `block in collection_accessor_methods'

Rails 3.0.0.beta4
ActiveRecord::RecordNotFound: Couldn't find all Containments with IDs (1, 3) (found 0 results, but was looking for 2)
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:316:in `find_some'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:277:in `find_with_ids'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/finder_methods.rb:102:in `find'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/base.rb:403:in `find'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1423:in `block in collection_accessor_methods'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T21:04:52+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-27T21:04:53+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">11</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Does this mean I can close this ticket?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Does this mean I can close this ticket?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T21:15:52+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-27T21:15:57+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">12</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>No! I'm working on patch right at this moment to fix the behavior when the primary key is not integer. I will submit a patch in a seconds.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No! I'm working on patch right at this moment to fix the
behavior when the primary key is not integer. I will submit a patch
in a seconds.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T21:39:05+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-27T21:39:07+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">13</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok! :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok! :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T21:57:03+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-27T21:57:06+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">14</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm sending a better patch with test for string and integer primary keys (should work fine with other types of primary keys as well).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm sending a better patch with test for string and integer
primary keys (should work fine with other types of primary keys as
well).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T22:01:50+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-27T22:01:51+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">15</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Hi,
I've had similar problems, the patch seems to fix it. It just works. Thank you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;br&gt;
I've had similar problems, the patch seems to fix it. It just
works. Thank you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-28T08:04:05+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-07-28T08:04:07+01:00</updated-at>
      <user-id type="integer">99681</user-id>
      <version type="integer">16</version>
      <user-name>Krzysztof Kuczek</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [f8b53f35b9cbf2a134a7d9184a044ce95764acfa]) test and fix collection_singular_ids= with string primary keys [#5125 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/f8b53f35b9cbf2a134a7d9184a044ce95764acfa</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/f8b53f35b9cbf2a134a7d9184a044ce95764acfa&quot;
title=
&quot;Changeset [f8b53f35b9cbf2a134a7d9184a044ce95764acfa]&quot;&gt;[f8b53f35b9cbf2a134a7d9184a044ce95764acfa]&lt;/a&gt;)
test and fix collection_singular_ids= with string primary keys
[&lt;a href=&quot;/projects/8994/tickets/5125&quot; title=
&quot;Ticket #5125&quot;&gt;#5125&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/f8b53f35b9cbf2a134a7d9184a044ce95764acfa&quot;&gt;
http://github.com/rails/rails/commit/f8b53f35b9cbf2a134a7d9184a044c...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-02T15:55:59+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-08-02T15:56:00+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">17</version>
      <user-name>Repository</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I've just checked out the 3.0.0.rc3 and the following does not work:

`my_active_record_object.other_ids = [&quot;uuid1&quot;, &quot;uuid2&quot;]`

It seems to still be casting those uuids to integers

`ActiveRecord::RecordNotFound: Couldn't find Other with ID=0`

Can anyone else confirm this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've just checked out the 3.0.0.rc3 and the following does not
work:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;my_active_record_object.other_ids = [&quot;uuid1&quot;,
&quot;uuid2&quot;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It seems to still be casting those uuids to integers&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ActiveRecord::RecordNotFound: Couldn't find Other with
ID=0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Can anyone else confirm this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-09T01:51:03+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-08-09T01:51:07+01:00</updated-at>
      <user-id type="integer">109325</user-id>
      <version type="integer">18</version>
      <user-name>Luis Correa d'Almeida</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>And if you pass in a valid (existing) id, you get

`ActiveRecord::AssociationTypeMismatch: Other(#28595860) expected, got NilClass(#645570)`</body>
      <body-html>&lt;div&gt;&lt;p&gt;And if you pass in a valid (existing) id, you get&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ActiveRecord::AssociationTypeMismatch: Other(#28595860)
expected, got NilClass(#645570)&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-09T01:55:34+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-08-09T01:55:36+01:00</updated-at>
      <user-id type="integer">109325</user-id>
      <version type="integer">19</version>
      <user-name>Luis Correa d'Almeida</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Could you please be more clear? There is no Rails 3.0.0.rc3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you please be more clear? There is no Rails 3.0.0.rc3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-09T01:58:57+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-08-09T01:58:58+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">20</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Sorry, that was a typo - 3.0.0.rc</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, that was a typo - 3.0.0.rc&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-09T02:57:25+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-08-09T02:57:28+01:00</updated-at>
      <user-id type="integer">109325</user-id>
      <version type="integer">21</version>
      <user-name>Luis Correa d'Almeida</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I checked the tag and it seems that it was tagged before this commit. So it makes sense that it is still breaking in the 3.0.0_RC tag.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I checked the tag and it seems that it was tagged before this
commit. So it makes sense that it is still breaking in the 3.0.0_RC
tag.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-09T03:12:11+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5125</number>
      <permalink>collection_singular_ids-method-raises-an-exception-when-primary_key-is-string-rails-3</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;:id primary_key&quot; &quot;rail3 has_many&quot; rails3 &quot;rails3 activerecord&quot;</tag>
      <title>collection_singular_ids= method raises an exception when primary_key is string (Rails 3)</title>
      <updated-at type="datetime">2010-08-09T03:12:15+01:00</updated-at>
      <user-id type="integer">109325</user-id>
      <version type="integer">22</version>
      <user-name>Luis Correa d'Almeida</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5125</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e89325cbfb2ac5eb6507f54b7b873a7278ea32be</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-15T21:21:42+01:00</created-at>
      <filename>collection-singular-id-setter-fix-when-primary-key-is-a-string.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">594480</id>
      <size type="integer">4028</size>
      <uploader-id type="integer">52024</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/594480/collection-singular-id-setter-fix-when-primary-key-is-a-string.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>508ee700a3e074a68c046119a599e9c64ff2d7b5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-27T22:01:50+01:00</created-at>
      <filename>collection-singular-id-setter-fix-when-primary-key-is-a-string-better.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">605039</id>
      <size type="integer">4659</size>
      <uploader-id type="integer">52024</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/605039/collection-singular-id-setter-fix-when-primary-key-is-a-string-better.diff</url>
    </attachment>
  </attachments>
</ticket>
