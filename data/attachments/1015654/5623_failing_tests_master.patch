From 25b287dbd98df07fdc746dc287fb72ee0f3b1f40 Mon Sep 17 00:00:00 2001
From: robg <rob.golkosky@gmail.com>
Date: Thu, 14 Apr 2011 13:55:38 -0700
Subject: [PATCH] Tests for #5623

---
 activerecord/test/cases/associations/eager_test.rb |   35 ++++++++++++++++++++
 1 files changed, 35 insertions(+), 0 deletions(-)

diff --git a/activerecord/test/cases/associations/eager_test.rb b/activerecord/test/cases/associations/eager_test.rb
index 40c82f2..65ac657 100644
--- a/activerecord/test/cases/associations/eager_test.rb
+++ b/activerecord/test/cases/associations/eager_test.rb
@@ -242,6 +242,41 @@ class EagerAssociationTest < ActiveRecord::TestCase
     end
   end
 
+  def test_nested_loading_through_has_one_association
+    aa = AuthorAddress.find(author_addresses(:david_address).id, :include => {:author => :posts})
+    assert_equal aa.author.posts.count, aa.author.posts.length    
+  end
+
+  def test_nested_loading_through_has_one_association_with_order
+    aa = AuthorAddress.find(author_addresses(:david_address).id, :include => {:author => :posts}, :order => 'author_addresses.id')
+    assert_equal aa.author.posts.count, aa.author.posts.length    
+  end
+
+  def test_nested_loading_through_has_one_association_with_order_on_association
+    aa = AuthorAddress.find(author_addresses(:david_address).id, :include => {:author => :posts}, :order => 'authors.id')
+    assert_equal aa.author.posts.count, aa.author.posts.length    
+  end
+
+  def test_nested_loading_through_has_one_association_with_order_on_nested_association
+    aa = AuthorAddress.find(author_addresses(:david_address).id, :include => {:author => :posts}, :order => 'posts.id')
+    assert_equal aa.author.posts.count, aa.author.posts.length    
+  end
+
+  def test_nested_loading_through_has_one_association_with_conditions
+    aa = AuthorAddress.find(author_addresses(:david_address).id, :include => {:author => :posts}, :conditions => "author_addresses.id > 0")
+    assert_equal aa.author.posts.count, aa.author.posts.length    
+  end
+
+  def test_nested_loading_through_has_one_association_with_conditions_on_association
+    aa = AuthorAddress.find(author_addresses(:david_address).id, :include => {:author => :posts}, :conditions => "authors.id > 0")
+    assert_equal aa.author.posts.count, aa.author.posts.length    
+  end
+
+  def test_nested_loading_through_has_one_association_with_conditions_on_nested_association
+    aa = AuthorAddress.find(author_addresses(:david_address).id, :include => {:author => :posts}, :conditions => "posts.id > 0")
+    assert_equal aa.author.posts.count, aa.author.posts.length    
+  end
+
   def test_eager_association_loading_with_belongs_to_and_foreign_keys
     pets = Pet.find(:all, :include => :owner)
     assert_equal 3, pets.length
-- 
1.7.0.4

