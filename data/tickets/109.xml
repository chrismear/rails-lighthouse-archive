<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-04T19:25:37+01:00</created-at>
  <creator-id type="integer">19235</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">109</number>
  <permalink>patch-ensure-necessary-included-tables-are-joined-in-construct_finder_sql_for_association_limiting</permalink>
  <priority type="integer">10857</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug eager_loading edge patch</tag>
  <title>[patch] Ensure necessary included tables are joined in construct_finder_sql_for_association_limiting</title>
  <updated-at type="datetime">2008-05-06T11:01:15+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>John Devine</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/109</url>
  <priority-name nil="true"></priority-name>
  <original-body>Currently selecting limited ids for eager loading associations is broken when there is a condition or an order-by based on a table that is not directly joined to the main active record table.

so if I have:

@@@ruby
class Person
  has_many :items
end

class Item
  belongs_to :person
  has_one :another_item
end

class AnotherItem
  belongs_to :item
end

Person.find(:all, 
            :include=&gt;{:items=&gt;:another_item}, 
            :order=&gt;&quot; another_items.name ASC &quot;,
            :limit=&gt;4)
@@@

The find will fail because the join to table items will not be included.

The patch adds methods to the join_dependency to look up joins by aliased table name, and get an array of the joins required to reach that table.</original-body>
  <latest-body>Currently selecting limited ids for eager loading associations is broken when there is a condition or an order-by based on a table that is not directly joined to the main active record table.

so if I have:

@@@ruby
class Person
  has_many :items
end

class Item
  belongs_to :person
  has_one :another_item
end

class AnotherItem
  belongs_to :item
end

Person.find(:all, 
            :include=&gt;{:items=&gt;:another_item}, 
            :order=&gt;&quot; another_items.name ASC &quot;,
            :limit=&gt;4)
@@@

The find will fail because the join to table items will not be included.

The patch adds methods to the join_dependency to look up joins by aliased table name, and get an array of the joins required to reach that table.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Currently selecting limited ids for eager loading associations is broken when there is a condition or an order-by based on a table that is not directly joined to the main active record table.
&lt;/p&gt;&lt;p&gt;
so if I have:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;class Person
  has_many :items
end

class Item
  belongs_to :person
  has_one :another_item
end

class AnotherItem
  belongs_to :item
end

Person.find(:all, 
            :include=&amp;gt;{:items=&amp;gt;:another_item}, 
            :order=&amp;gt;&amp;quot; another_items.name ASC &amp;quot;,
            :limit=&amp;gt;4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The find will fail because the join to table items will not be included.
&lt;/p&gt;&lt;p&gt;
The patch adds methods to the join_dependency to look up joins by aliased table name, and get an array of the joins required to reach that table.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Currently selecting limited ids for eager loading associations is broken when there is a condition or an order-by based on a table that is not directly joined to the main active record table.

so if I have:

@@@ruby
class Person
  has_many :items
end

class Item
  belongs_to :person
  has_one :another_item
end

class AnotherItem
  belongs_to :item
end

Person.find(:all, 
            :include=&gt;{:items=&gt;:another_item}, 
            :order=&gt;&quot; another_items.name ASC &quot;,
            :limit=&gt;4)
@@@

The find will fail because the join to table items will not be included.

The patch adds methods to the join_dependency to look up joins by aliased table name, and get an array of the joins required to reach that table.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Currently selecting limited ids for eager loading associations is broken when there is a condition or an order-by based on a table that is not directly joined to the main active record table.
&lt;/p&gt;&lt;p&gt;
so if I have:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;class Person
  has_many :items
end

class Item
  belongs_to :person
  has_one :another_item
end

class AnotherItem
  belongs_to :item
end

Person.find(:all, 
            :include=&amp;gt;{:items=&amp;gt;:another_item}, 
            :order=&amp;gt;&amp;quot; another_items.name ASC &amp;quot;,
            :limit=&amp;gt;4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The find will fail because the join to table items will not be included.
&lt;/p&gt;&lt;p&gt;
The patch adds methods to the join_dependency to look up joins by aliased table name, and get an array of the joins required to reach that table.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-04T19:25:37+01:00</created-at>
      <creator-id type="integer">19235</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">109</number>
      <permalink>patch-ensure-necessary-included-tables-are-joined-in-construct_finder_sql_for_association_limiting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[patch] Ensure necessary included tables are joined in construct_finder_sql_for_association_limiting</title>
      <updated-at type="datetime">2008-05-04T19:25:37+01:00</updated-at>
      <user-id type="integer">19235</user-id>
      <version type="integer">1</version>
      <user-name>John Devine</user-name>
      <creator-name>John Devine</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/109</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1. tests all pass, looks sane (also see discussion on trac)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1. tests all pass, looks sane (also see discussion on trac)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-06T10:26:08+01:00</created-at>
      <creator-id type="integer">19235</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">109</number>
      <permalink>patch-ensure-necessary-included-tables-are-joined-in-construct_finder_sql_for_association_limiting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[patch] Ensure necessary included tables are joined in construct_finder_sql_for_association_limiting</title>
      <updated-at type="datetime">2008-05-06T10:26:08+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>John Devine</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/109</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [8ded457b1b31b157d6fe89b553749579e5ac4a27]) Added logic to associations.rb to make sure select_for_limited_ids

includes joins that are needed to reach tables listed in the :order
or :conditions options if they are not joined directly to the main
active_record table.

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#109 state:resolved]
http://github.com/rails/rails/commit/8ded457b1b31b157d6fe89b553749579e5ac4a27</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [8ded457b1b31b157d6fe89b553749579e5ac4a27]) Added logic to associations.rb to make sure select_for_limited_ids
&lt;/p&gt;&lt;p&gt;
includes joins that are needed to reach tables listed in the :order
&lt;/p&gt;&lt;p&gt;
or :conditions options if they are not joined directly to the main
&lt;/p&gt;&lt;p&gt;
active_record table.
&lt;/p&gt;&lt;p&gt;
Signed-off-by: Michael Koziarski 
&lt;/p&gt;&lt;p&gt;
[#109 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/8ded457b1b31b157d6fe89b553749579e5ac4a27&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-06T11:01:15+01:00</created-at>
      <creator-id type="integer">19235</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">109</number>
      <permalink>patch-ensure-necessary-included-tables-are-joined-in-construct_finder_sql_for_association_limiting</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[patch] Ensure necessary included tables are joined in construct_finder_sql_for_association_limiting</title>
      <updated-at type="datetime">2008-05-06T11:01:15+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>John Devine</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/109</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4c7fb7dbe01647c76beb68e03ee7c010375091ce</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-04T19:25:38+01:00</created-at>
      <filename>0001-Added-logic-to-associations.rb-to-make-sure-select_f.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21403</id>
      <size type="integer">4122</size>
      <uploader-id type="integer">19235</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21403/0001-Added-logic-to-associations.rb-to-make-sure-select_f.patch</url>
    </attachment>
  </attachments>
</ticket>
