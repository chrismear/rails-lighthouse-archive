<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-05T09:14:07+01:00</created-at>
  <creator-id type="integer">37892</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">82855</milestone-id>
  <number type="integer">3331</number>
  <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
  <priority type="integer">13</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>bugmash</tag>
  <title>[PATCH] block invalid chars to come in rails app.</title>
  <updated-at type="datetime">2011-02-02T18:16:24+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">12</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>MOROHASHI Kyosuke</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
  <milestone-title>2.3.10</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Rails fixed the XSS vulnerability caused by invalid character.
This is the solution that new helper sanitize/cleanup invalid UTF-8
chars *BEFORE OUTPUT* to browser.

http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on-rails

But it's better to block invalid chars *BEFORE ACCEPT&quot; a (malformed) request.
We can identify that sending malformed UTF-8 as attack the app (as an
user, what's the request for?). We'd better hire &quot;keep the barbarians
out at the gate&quot; approach.

So I wrote a Rack middleware layer blocker.

This patch was tested with
* ruby 1.8.7 / rails 2-3-stable / rack-1.0.0
* ruby 1.8.7 / rails 2-3-stable / rack-trunk
* ryby 1.9.2(trunk) / rails 2-3-stable / rack-trunk
* Note: Rack 1.0.0 on Ruby 1.9 has a bug to fail parse multipart/form-data which contains binary body.</original-body>
  <latest-body>Rails fixed the XSS vulnerability caused by invalid character.
This is the solution that new helper sanitize/cleanup invalid UTF-8
chars *BEFORE OUTPUT* to browser.

http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on-rails

But it's better to block invalid chars *BEFORE ACCEPT&quot; a (malformed) request.
We can identify that sending malformed UTF-8 as attack the app (as an
user, what's the request for?). We'd better hire &quot;keep the barbarians
out at the gate&quot; approach.

So I wrote a Rack middleware layer blocker.

This patch was tested with
* ruby 1.8.7 / rails 2-3-stable / rack-1.0.0
* ruby 1.8.7 / rails 2-3-stable / rack-trunk
* ryby 1.9.2(trunk) / rails 2-3-stable / rack-trunk
* Note: Rack 1.0.0 on Ruby 1.9 has a bug to fail parse multipart/form-data which contains binary body.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails fixed the XSS vulnerability caused by invalid
character.&lt;br&gt;
This is the solution that new helper sanitize/cleanup invalid
UTF-8&lt;br&gt;
chars &lt;em&gt;BEFORE OUTPUT&lt;/em&gt; to browser.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on-rails&quot;&gt;
http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But it's better to block invalid chars *BEFORE ACCEPT&quot; a
(malformed) request.&lt;br&gt;
We can identify that sending malformed UTF-8 as attack the app (as
an&lt;br&gt;
user, what's the request for?). We'd better hire &quot;keep the
barbarians&lt;br&gt;
out at the gate&quot; approach.&lt;/p&gt;
&lt;p&gt;So I wrote a Rack middleware layer blocker.&lt;/p&gt;
&lt;p&gt;This patch was tested with&lt;br&gt;
* ruby 1.8.7 / rails 2-3-stable / rack-1.0.0 * ruby 1.8.7 / rails
2-3-stable / rack-trunk * ryby 1.9.2(trunk) / rails 2-3-stable /
rack-trunk * Note: Rack 1.0.0 on Ruby 1.9 has a bug to fail parse
multipart/form-data which contains binary body.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails fixed the XSS vulnerability caused by invalid character.
This is the solution that new helper sanitize/cleanup invalid UTF-8
chars *BEFORE OUTPUT* to browser.

http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on-rails

But it's better to block invalid chars *BEFORE ACCEPT* a (malformed) request.
We can identify that sending malformed UTF-8 as attack the app (as an
user, what's the request for?). We'd better hire &quot;keep the barbarians
out at the gate&quot; approach.

So I wrote a Rack middleware layer blocker.

This patch was tested with

* ruby 1.8.7 / rails 2-3-stable / rack-1.0.0
* ruby 1.8.7 / rails 2-3-stable / rack-trunk
* ryby 1.9.2(trunk) / rails 2-3-stable / rack-trunk
* Note: Rack 1.0.0 on Ruby 1.9 has a bug to fail parse multipart/form-data which contains binary body.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails fixed the XSS vulnerability caused by invalid
character.&lt;br&gt;
This is the solution that new helper sanitize/cleanup invalid
UTF-8&lt;br&gt;
chars &lt;em&gt;BEFORE OUTPUT&lt;/em&gt; to browser.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on-rails&quot;&gt;
http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But it's better to block invalid chars &lt;em&gt;BEFORE ACCEPT&lt;/em&gt; a
(malformed) request.&lt;br&gt;
We can identify that sending malformed UTF-8 as attack the app (as
an&lt;br&gt;
user, what's the request for?). We'd better hire &quot;keep the
barbarians&lt;br&gt;
out at the gate&quot; approach.&lt;/p&gt;
&lt;p&gt;So I wrote a Rack middleware layer blocker.&lt;/p&gt;
&lt;p&gt;This patch was tested with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ruby 1.8.7 / rails 2-3-stable / rack-1.0.0&lt;/li&gt;
&lt;li&gt;ruby 1.8.7 / rails 2-3-stable / rack-trunk&lt;/li&gt;
&lt;li&gt;ryby 1.9.2(trunk) / rails 2-3-stable / rack-trunk&lt;/li&gt;
&lt;li&gt;Note: Rack 1.0.0 on Ruby 1.9 has a bug to fail parse
multipart/form-data which contains binary body.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-05T09:14:07+01:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actioncontroller patch rack security</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2009-10-05T09:16:47+01:00</updated-at>
      <user-id type="integer">37892</user-id>
      <version type="integer">1</version>
      <user-name>MOROHASHI Kyosuke</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>We chose before output because, for existing apps, barbarians are already through the gate. Blocking the gate is a good idea too. However, is malformed UTF-8 always an attack? Or should we just drop bad characters?</body>
      <body-html>&lt;div&gt;&lt;p&gt;We chose before output because, for existing apps, barbarians
are already through the gate. Blocking the gate is a good idea too.
However, is malformed UTF-8 always an attack? Or should we just
drop bad characters?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-21T09:04:46+00:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actioncontroller patch rack security</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2009-11-21T09:04:48+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I particularly wonder if IE 6 can be relied on to not send Windows-1252 and pretend that it's UTF-8. Doubly so with file uploads...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I particularly wonder if IE 6 can be relied on to not send
Windows-1252 and pretend that it's UTF-8. Doubly so with file
uploads...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-22T03:59:23+00:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actioncontroller patch rack security</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2009-11-22T03:59:28+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">3</version>
      <user-name>Matt Jones</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yes. I saw rails' &quot;before output strategy&quot;, I think it's a good way, too. Both 'before accept' and 'before output' approach is not exclusive.

I thought several times, but the case that user want to send an invalid UTF-8 were not found except for file uploads. And this patch takes care of file upload(if value is likely to IO, pass it). A user can't input invalid UTF-8 on their browsers.

Of course, a user can send invalid cahrs using from script, but for why? (is'nt it attack?)

IE6's behavior on Windows-1252 is new for me. in similer situation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes. I saw rails' &quot;before output strategy&quot;, I think it's a good
way, too. Both 'before accept' and 'before output' approach is not
exclusive.&lt;/p&gt;
&lt;p&gt;I thought several times, but the case that user want to send an
invalid UTF-8 were not found except for file uploads. And this
patch takes care of file upload(if value is likely to IO, pass it).
A user can't input invalid UTF-8 on their browsers.&lt;/p&gt;
&lt;p&gt;Of course, a user can send invalid cahrs using from script, but
for why? (is'nt it attack?)&lt;/p&gt;
&lt;p&gt;IE6's behavior on Windows-1252 is new for me. in similer
situation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-22T16:32:21+00:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actioncontroller patch rack security</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2009-11-22T16:32:22+00:00</updated-at>
      <user-id type="integer">37892</user-id>
      <version type="integer">4</version>
      <user-name>MOROHASHI Kyosuke</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Note that I'm not 100% sure that there *is* a problem with IE, but I've noticed that 80% of the encoding problems people run into (in CSV files, for instance) are the result of stray Windows-1252 characters. IE6 is the most likely suspect for problems simply because of its age relative to wide adoption of UTF-8.

On further review of the patch, it appears that file uploads are passed through without issue, so that's one less thing to worry about.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Note that I'm not 100% sure that there &lt;em&gt;is&lt;/em&gt; a problem
with IE, but I've noticed that 80% of the encoding problems people
run into (in CSV files, for instance) are the result of stray
Windows-1252 characters. IE6 is the most likely suspect for
problems simply because of its age relative to wide adoption of
UTF-8.&lt;/p&gt;
&lt;p&gt;On further review of the patch, it appears that file uploads are
passed through without issue, so that's one less thing to worry
about.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-22T19:35:09+00:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: actioncontroller patch rack security
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2009-11-22T19:35:11+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">5</version>
      <user-name>Matt Jones</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20088)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20088&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-16T02:41:11+01:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2010-05-16T02:41:11+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">6</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20606)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20606&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-23T17:54:44+01:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 50064
</diffable-attributes>
      <milestone-id type="integer">73241</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2010-05-23T17:54:44+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.7</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20631)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20631&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-24T09:40:52+01:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 73241
</diffable-attributes>
      <milestone-id type="integer">73273</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2010-05-24T09:40:52+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.8</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/20816)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/20816&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-25T23:45:39+01:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 73273
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2010-05-25T23:45:39+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27613)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27613&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T02:28:50+01:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 73534
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">13</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2010-08-30T02:28:50+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">10</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:49:56+00:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">13</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2011-02-02T18:15:57+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">11</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:49:57+00:00</created-at>
      <creator-id type="integer">37892</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">3331</number>
      <permalink>patch-block-invalid-chars-to-come-in-rails-app</permalink>
      <priority type="integer">13</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>bugmash</tag>
      <title>[PATCH] block invalid chars to come in rails app.</title>
      <updated-at type="datetime">2011-02-02T18:16:24+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">12</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>MOROHASHI Kyosuke</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3331</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>851dc6b5e4f617fc39d1f828f88402ce98e5955c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-05T09:14:10+01:00</created-at>
      <filename>0001-impl.-rack-middleware-to-block-invalid-chars.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">285933</id>
      <size type="integer">7780</size>
      <uploader-id type="integer">37892</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/285933/0001-impl.-rack-middleware-to-block-invalid-chars.patch</url>
    </attachment>
  </attachments>
</ticket>
