<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-05T03:28:46+01:00</created-at>
  <creator-id type="integer">10682</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">335</number>
  <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
  <priority type="integer">15565</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord conditions enhancement</tag>
  <title>Improve conditions hash to support complex queries</title>
  <updated-at type="datetime">2008-08-20T16:25:19+01:00</updated-at>
  <user-id type="integer">20109</user-id>
  <version type="integer">11</version>
  <user-name>nerdrew</user-name>
  <creator-name>Nathan Esquenazi</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have recently been trying out merb with datamapper and for the most part I actually prefer activerecord but there is one part of datamapper that I really have enjoyed and that is the enhanced conditions hash syntax...ie.

# 'gt' means greater-than. We also do 'lt'.
Person.all(:age.gt =&gt; 30)
# 'gte' means greather-than-or-equal-to. We also do 'lte'.
Person.all(:age.gte =&gt; 30)
Person.all(:name.not =&gt; 'bob')
# If the value of a pair is an Array, we do an IN-clause for you.
Person.all(:name.like =&gt; 'S%')

I find this syntax to be largely superior to any alternative ways of specifying more complex conditions and this is something that could easily be integrated into activerecord.

I already have a partial implementation and before I polish it up and prepare to submit it, I would like some feedback on if this could be accepted into core or if I would be better suited just making this a plugin. In my opinion, this is something that would really be well-suited for being included in rails core even if it doesn't make the cut right now.</original-body>
  <latest-body>I have recently been trying out merb with datamapper and for the most part I actually prefer activerecord but there is one part of datamapper that I really have enjoyed and that is the enhanced conditions hash syntax...ie.

# 'gt' means greater-than. We also do 'lt'.
Person.all(:age.gt =&gt; 30)
# 'gte' means greather-than-or-equal-to. We also do 'lte'.
Person.all(:age.gte =&gt; 30)
Person.all(:name.not =&gt; 'bob')
# If the value of a pair is an Array, we do an IN-clause for you.
Person.all(:name.like =&gt; 'S%')

I find this syntax to be largely superior to any alternative ways of specifying more complex conditions and this is something that could easily be integrated into activerecord.

I already have a partial implementation and before I polish it up and prepare to submit it, I would like some feedback on if this could be accepted into core or if I would be better suited just making this a plugin. In my opinion, this is something that would really be well-suited for being included in rails core even if it doesn't make the cut right now.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I have recently been trying out merb with datamapper and for the most part I actually prefer activerecord but there is one part of datamapper that I really have enjoyed and that is the enhanced conditions hash syntax...ie.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
'gt' means greater-than. We also do 'lt'.
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
Person.all(:age.gt =&gt; 30)
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
'gte' means greather-than-or-equal-to. We also do 'lte'.
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
Person.all(:age.gte =&gt; 30)
&lt;/p&gt;&lt;p&gt;
Person.all(:name.not =&gt; 'bob')
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
If the value of a pair is an Array, we do an IN-clause for you.
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
Person.all(:name.like =&gt; 'S%')
&lt;/p&gt;&lt;p&gt;
I find this syntax to be largely superior to any alternative ways of specifying more complex conditions and this is something that could easily be integrated into activerecord.
&lt;/p&gt;&lt;p&gt;
I already have a partial implementation and before I polish it up and prepare to submit it, I would like some feedback on if this could be accepted into core or if I would be better suited just making this a plugin. In my opinion, this is something that would really be well-suited for being included in rails core even if it doesn't make the cut right now.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have recently been trying out merb with datamapper and for the most part I actually prefer activerecord but there is one part of datamapper that I really have enjoyed and that is the enhanced conditions hash syntax...ie.

@@@ ruby
# 'gt' means greater-than. We also do 'lt'.
Person.all(:age.gt =&gt; 30)
# 'gte' means greather-than-or-equal-to. We also do 'lte'.
Person.all(:age.gte =&gt; 30)
Person.all(:name.not =&gt; 'bob')
# If the value of a pair is an Array, we do an IN-clause for you.
Person.all(:name.like =&gt; 'S%', :id =&gt; [1, 2, 3, 4, 5])
@@@

or if you prefer (maintaining traditional conditions syntax)

@@@ ruby
Person.all(:conditions =&gt; { :age.gt =&gt; 30, :name.like =&gt; &quot;%a%&quot; }) #=&gt; people.`age` &gt; 30 AND people.`name` LIKE &quot;%a%&quot;
@@@

I have also implemented an 'any' block that works as follows:

@@@ ruby
Person.any(:conditions =&gt; { :age.gt =&gt; 30, :name.like =&gt; &quot;%a%&quot; }) #=&gt; people.`age` &gt; 30 OR people.`name` LIKE &quot;%a%&quot;
@@@

I find this syntax to be quite a beautiful alternative to the other ways of specifying more complex conditions and this is something that could be integrated into activerecord relatively easily. Note that this change will maintain complete backward compatibility with the previous conditions syntax and simply adds in this on top of the existing simple hash find structure.

I am aware of this extension: http://www.continuousthinking.com/tags/arext but it seems like it has been outdated and it seemed a bit heavy to introduce into core.

I already have a roughly complete implementation, but before I finish it up and submit it, I would like some feedback on if this could possibly be accepted into core or if I would be better advised just making this a plugin. In my opinion, this is something that would really be well-suited for being included in activerecord core even if it doesn't make it in just yet.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I have recently been trying out merb with datamapper and for the most part I actually prefer activerecord but there is one part of datamapper that I really have enjoyed and that is the enhanced conditions hash syntax...ie.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;# 'gt' means greater-than. We also do 'lt'.
Person.all(:age.gt =&amp;gt; 30)
# 'gte' means greather-than-or-equal-to. We also do 'lte'.
Person.all(:age.gte =&amp;gt; 30)
Person.all(:name.not =&amp;gt; 'bob')
# If the value of a pair is an Array, we do an IN-clause for you.
Person.all(:name.like =&amp;gt; 'S%', :id =&amp;gt; [1, 2, 3, 4, 5])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
or if you prefer (maintaining traditional conditions syntax)
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;Person.all(:conditions =&amp;gt; { :age.gt =&amp;gt; 30, :name.like =&amp;gt; &amp;quot;%a%&amp;quot; }) #=&amp;gt; people.`age` &amp;gt; 30 AND people.`name` LIKE &amp;quot;%a%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I have also implemented an 'any' block that works as follows:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;Person.any(:conditions =&amp;gt; { :age.gt =&amp;gt; 30, :name.like =&amp;gt; &amp;quot;%a%&amp;quot; }) #=&amp;gt; people.`age` &amp;gt; 30 OR people.`name` LIKE &amp;quot;%a%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I find this syntax to be quite a beautiful alternative to the other ways of specifying more complex conditions and this is something that could be integrated into activerecord relatively easily. Note that this change will maintain complete backward compatibility with the previous conditions syntax and simply adds in this on top of the existing simple hash find structure.
&lt;/p&gt;&lt;p&gt;
I am aware of this extension: &lt;a href=&quot;http://www.continuousthinking.com/tags/arext&quot;&gt;http://www.continuousthinking.co...&lt;/a&gt; but it seems like it has been outdated and it seemed a bit heavy to introduce into core.
&lt;/p&gt;&lt;p&gt;
I already have a roughly complete implementation, but before I finish it up and submit it, I would like some feedback on if this could possibly be accepted into core or if I would be better advised just making this a plugin. In my opinion, this is something that would really be well-suited for being included in activerecord core even if it doesn't make it in just yet.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-05T15:12:52+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improve conditions hash to support more complex queries</title>
      <updated-at type="datetime">2008-06-05T15:12:52+01:00</updated-at>
      <user-id type="integer">10682</user-id>
      <version type="integer">1</version>
      <user-name>Nathan Esquenazi</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-05T10:19:37+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Improve conditions hash to support more complex queries
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-06-05T10:19:37+01:00</updated-at>
      <user-id type="integer">10682</user-id>
      <version type="integer">2</version>
      <user-name>Nathan Esquenazi</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Another approach would be:

@@@ ruby
Person.find(:all, :conditions =&gt; { :age.gt =&gt; 30, :name.like =&gt; &quot;%a%&quot;, :or =&gt; { :place =&gt; 'Boca', :occupation =&gt; 'Chef'} }) #=&gt; people.`age` &gt; 30 AND people.`name` LIKE &quot;%a%&quot; AND (people.place =  &quot;Boca&quot; OR people.occupation = &quot;Chef&quot;)

@@@

This allows the construction of queries with AND's and OR's used.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Another approach would be:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;Person.find(:all, :conditions =&amp;gt; { :age.gt =&amp;gt; 30, :name.like =&amp;gt; &amp;quot;%a%&amp;quot;, :or =&amp;gt; { :place =&amp;gt; 'Boca', :occupation =&amp;gt; 'Chef'} }) #=&amp;gt; people.`age` &amp;gt; 30 AND people.`name` LIKE &amp;quot;%a%&amp;quot; AND (people.place =  &amp;quot;Boca&amp;quot; OR people.occupation = &amp;quot;Chef&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This allows the construction of queries with AND's and OR's used.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-10T22:46:22+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-06-10T22:46:22+01:00</updated-at>
      <user-id type="integer">20109</user-id>
      <version type="integer">3</version>
      <user-name>nerdrew</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I would really like to see something like this in active record.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I would really like to see something like this in active record.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-10T22:48:09+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-06-10T22:48:09+01:00</updated-at>
      <user-id type="integer">20109</user-id>
      <version type="integer">4</version>
      <user-name>nerdrew</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks for your feedback nerdrew. I actually do like that syntax. I was trying to think of a way to be able to combine AND / OR into a single hash. I think you touched on a good way to do that. 

I want to go in baby steps though in hopes of even getting the enhanced AND hash into core and go from there. This is one of those features I want to see on edge rails as being included in rails 2.2. 

I have created the plugin here: http://github.com/xgamerx/conditions_fu/tree/master

But again, this is something I would prefer to see baked into activerecord.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Thanks for your feedback nerdrew. I actually do like that syntax. I was trying to think of a way to be able to combine AND / OR into a single hash. I think you touched on a good way to do that.
&lt;/p&gt;&lt;p&gt;
I want to go in baby steps though in hopes of even getting the enhanced AND hash into core and go from there. This is one of those features I want to see on edge rails as being included in rails 2.2.
&lt;/p&gt;&lt;p&gt;
I have created the plugin here: &lt;a href=&quot;http://github.com/xgamerx/conditions_fu/tree/master&quot;&gt;http://github.com/xgamerx/condit...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
But again, this is something I would prefer to see baked into activerecord.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-10T23:04:18+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-06-10T23:04:18+01:00</updated-at>
      <user-id type="integer">10682</user-id>
      <version type="integer">5</version>
      <user-name>Nathan Esquenazi</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Another thing I'd like to see in active record conditions hashes is the ability to use conditions on included tables. Also I'd like these tables to be automatically included. I understand that it needs to be kept simple in order to be included into edge rails, but while I'm wishing away, I figured I'd add it.

@@@ ruby

Person.find(:all, :conditions =&gt; {:name =&gt; 'Bob', :home =&gt; {:state =&gt; 'CA'}}

#=&gt; SELECT * FROM people left outer join homes on person.id = homes.person_id WHERE person.name = &quot;Bob&quot; AND homes.state = &quot;CA&quot;

@@@

I know the SQL isn't exactly the same as AR output, but it gives the idea.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Another thing I'd like to see in active record conditions hashes is the ability to use conditions on included tables. Also I'd like these tables to be automatically included. I understand that it needs to be kept simple in order to be included into edge rails, but while I'm wishing away, I figured I'd add it.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Person.find(:all, :conditions =&amp;gt; {:name =&amp;gt; 'Bob', :home =&amp;gt; {:state =&amp;gt; 'CA'}}

#=&amp;gt; SELECT * FROM people left outer join homes on person.id = homes.person_id WHERE person.name = &amp;quot;Bob&amp;quot; AND homes.state = &amp;quot;CA&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I know the SQL isn't exactly the same as AR output, but it gives the idea.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-10T23:21:14+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-06-10T23:21:14+01:00</updated-at>
      <user-id type="integer">20109</user-id>
      <version type="integer">6</version>
      <user-name>nerdrew</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please discuss this on the mailing list. There might be some parallel efforts for doing the same. IIRC, ARel does this as well.

ARel - http://github.com/nkallen/arel/tree</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Please discuss this on the mailing list. There might be some parallel efforts for doing the same. IIRC, ARel does this as well.
&lt;/p&gt;&lt;p&gt;
ARel - &lt;a href=&quot;http://github.com/nkallen/arel/tree&quot;&gt;http://github.com/nkallen/arel/tree&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-23T13:44:00+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord conditions enhancement</tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-07-23T13:44:00+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">7</version>
      <user-name>Pratik</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What @nerdrew said can be easily achieved by looking at associations (like what :include does). Also, the query should only select the model being asked for, unless otherwise specified. 

@@@ruby
Person.find(:all, :conditions =&gt; {:name =&gt; 'Bob', :home =&gt; {:state =&gt; 'CA'}}
#=&gt; SELECT person.* FROM people left outer join homes on person.id = homes.person_id WHERE person.name = &quot;Bob&quot; AND homes.state = &quot;CA&quot;
@@@

Perhaps :joins =&gt; :homes could be specified to take `SELECT *` instead of `SELECT person.*`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What @nerdrew said can be easily achieved by looking at associations (like what :include does). Also, the query should only select the model being asked for, unless otherwise specified.&lt;/p&gt;

&lt;p&gt;@@@ruby
Person.find(:all, :conditions =&gt; {:name =&gt; 'Bob', :home =&gt; {:state =&gt; 'CA'}}&lt;/p&gt;

&lt;h1&gt;=&gt; SELECT person.* FROM people left outer join homes on person.id = homes.person_id WHERE person.name = &quot;Bob&quot; AND homes.state = &quot;CA&quot;&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;

Perhaps :joins =&amp;gt; :homes could be specified to take `SELECT *` instead of `SELECT person.*`.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-19T21:33:21+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord conditions enhancement</tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-08-19T21:33:21+01:00</updated-at>
      <user-id type="integer">29478</user-id>
      <version type="integer">8</version>
      <user-name>Mihai Alexandru B&#238;rsan</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I've already done something so I can use the conditions as I've described them. I've attached the relevant part of my plugin for this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've already done something so I can use the conditions as I've described them. I've attached the relevant part of my plugin for this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-20T00:45:58+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord conditions enhancement</tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-08-20T00:45:58+01:00</updated-at>
      <user-id type="integer">20109</user-id>
      <version type="integer">9</version>
      <user-name>nerdrew</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@nerdrew I can't see your attachment... Did it go through? :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;@nerdrew I can't see your attachment... Did it go through? :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-20T07:24:21+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord conditions enhancement</tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-08-20T07:24:21+01:00</updated-at>
      <user-id type="integer">29478</user-id>
      <version type="integer">10</version>
      <user-name>Mihai Alexandru B&#238;rsan</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>It shows up on the right side above the list of people watching this ticket for me. If it didn't go through I can resend it. ar_conditions.rb</body>
      <body-html>&lt;div&gt;&lt;p&gt;It shows up on the right side above the list of people watching this ticket for me. If it didn't go through I can resend it. ar_conditions.rb&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-20T16:25:19+01:00</created-at>
      <creator-id type="integer">10682</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">335</number>
      <permalink>improve-conditions-hash-to-support-more-complex-queries</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord conditions enhancement</tag>
      <title>Improve conditions hash to support complex queries</title>
      <updated-at type="datetime">2008-08-20T16:25:19+01:00</updated-at>
      <user-id type="integer">20109</user-id>
      <version type="integer">11</version>
      <user-name>nerdrew</user-name>
      <creator-name>Nathan Esquenazi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/335</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment-image type="Attachment">
      <code>1cf086c4f11a8a624c7818384efecb7e449e780c</code>
      <content-type>image/jpeg</content-type>
      <created-at type="datetime">2008-08-06T12:31:33+01:00</created-at>
      <filename>virago.jpg</filename>
      <height type="integer">600</height>
      <id type="integer">37331</id>
      <size type="integer">74381</size>
      <uploader-id type="integer">28260</uploader-id>
      <width type="integer">800</width>
      <url>http://rails.lighthouseapp.com/attachments/37331/virago.jpg</url>
    </attachment-image>
    <attachment type="Attachment">
      <code>ce717c89c4ef068b0509f7fe45fffd2f35de536e</code>
      <content-type>text/x-ruby-script</content-type>
      <created-at type="datetime">2008-08-20T00:45:58+01:00</created-at>
      <filename>ar_conditions.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">40289</id>
      <size type="integer">7156</size>
      <uploader-id type="integer">20109</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/40289/ar_conditions.rb</url>
    </attachment>
  </attachments>
</ticket>
