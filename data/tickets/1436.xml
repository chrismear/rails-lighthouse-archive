<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-22T17:22:23+00:00</created-at>
  <creator-id type="integer">17949</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1436</number>
  <permalink>an-extensible-api-for-plugin-management</permalink>
  <priority type="integer">821</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>An extensible API for plugin management</title>
  <updated-at type="datetime">2010-10-11T04:52:03+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">11</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Daniel Schierbeck</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>As discussed in ticket #1284, an API for managing plugins would add some benefits to users of alternative version control systems, as it would allow gems and plugins to add-in support for such a system.

My initial idea for the design would be something akin to:
* `PluginManager`
    * `GitPluginManager`
    * `HTTPPluginManager`
    * `BazaarPluginManager`
    * `SubversionPluginManager`
    * ...

A plugin manager should at least respond to `#install`, taking a single `Plugin` instance as argument, as well as an options hash.

It can also define `#update` and `#remove`, which may come in handy when installing plugins using Git submodules or Subversion externals.

I'll begin working on this as soon as I find the time for it -- my biggest concern is how to test all this, but I guess I'll get some clues from the implementation of the Generators API, which is my main source of inspiration.

Any thoughts or ideas would be greatly appreciated.</original-body>
  <latest-body>As discussed in ticket #1284, an API for managing plugins would add some benefits to users of alternative version control systems, as it would allow gems and plugins to add-in support for such a system.

My initial idea for the design would be something akin to:
* `PluginManager`
    * `GitPluginManager`
    * `HTTPPluginManager`
    * `BazaarPluginManager`
    * `SubversionPluginManager`
    * ...

A plugin manager should at least respond to `#install`, taking a single `Plugin` instance as argument, as well as an options hash.

It can also define `#update` and `#remove`, which may come in handy when installing plugins using Git submodules or Subversion externals.

I'll begin working on this as soon as I find the time for it -- my biggest concern is how to test all this, but I guess I'll get some clues from the implementation of the Generators API, which is my main source of inspiration.

Any thoughts or ideas would be greatly appreciated.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As discussed in ticket &lt;a href=&quot;/projects/8994/tickets/1284&quot; title=&quot;Ticket #1284&quot;&gt;#1284&lt;/a&gt;, an API for managing plugins would
add some benefits to users of alternative version control systems,
as it would allow gems and plugins to add-in support for such a
system.&lt;/p&gt;
&lt;p&gt;My initial idea for the design would be something akin to: *
&lt;code&gt;PluginManager&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;* `GitPluginManager`
* `HTTPPluginManager`
* `BazaarPluginManager`
* `SubversionPluginManager`
* ...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A plugin manager should at least respond to
&lt;code&gt;#install&lt;/code&gt;, taking a single &lt;code&gt;Plugin&lt;/code&gt; instance
as argument, as well as an options hash.&lt;/p&gt;
&lt;p&gt;It can also define &lt;code&gt;#update&lt;/code&gt; and
&lt;code&gt;#remove&lt;/code&gt;, which may come in handy when installing
plugins using Git submodules or Subversion externals.&lt;/p&gt;
&lt;p&gt;I'll begin working on this as soon as I find the time for it --
my biggest concern is how to test all this, but I guess I'll get
some clues from the implementation of the Generators API, which is
my main source of inspiration.&lt;/p&gt;
&lt;p&gt;Any thoughts or ideas would be greatly appreciated.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As discussed in ticket #1284, an API for managing plugins would add some benefits to users of alternative version control systems, as it would allow gems and plugins to add-in support for such a system.

My initial idea for the design would be something akin to:

* `PluginManager`
    * `GitPluginManager`
    * `HTTPPluginManager`
    * `BazaarPluginManager`
    * `SubversionPluginManager`
    * ...

A plugin manager should at least respond to `#install`, taking a single `Plugin` instance as argument, as well as an options hash.

It can also define `#update` and `#remove`, which may come in handy when installing plugins using Git submodules or Subversion externals.

I'll begin working on this as soon as I find the time for it -- my biggest concern is how to test all this, but I guess I'll get some clues from the implementation of the Generators API, which is my main source of inspiration.

Any thoughts or ideas would be greatly appreciated.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As discussed in ticket &lt;a href=&quot;/projects/8994/tickets/1284&quot; title=&quot;Ticket #1284&quot;&gt;#1284&lt;/a&gt;, an API for managing plugins would
add some benefits to users of alternative version control systems,
as it would allow gems and plugins to add-in support for such a
system.&lt;/p&gt;
&lt;p&gt;My initial idea for the design would be something akin to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PluginManager&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GitPluginManager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTTPPluginManager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BazaarPluginManager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SubversionPluginManager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A plugin manager should at least respond to
&lt;code&gt;#install&lt;/code&gt;, taking a single &lt;code&gt;Plugin&lt;/code&gt; instance
as argument, as well as an options hash.&lt;/p&gt;
&lt;p&gt;It can also define &lt;code&gt;#update&lt;/code&gt; and
&lt;code&gt;#remove&lt;/code&gt;, which may come in handy when installing
plugins using Git submodules or Subversion externals.&lt;/p&gt;
&lt;p&gt;I'll begin working on this as soon as I find the time for it --
my biggest concern is how to test all this, but I guess I'll get
some clues from the implementation of the Generators API, which is
my main source of inspiration.&lt;/p&gt;
&lt;p&gt;Any thoughts or ideas would be greatly appreciated.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-22T17:22:23+00:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2008-11-22T17:22:56+00:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As per [this comment](http://rails.lighthouseapp.com/projects/8994/tickets/1284-add-hg-mercurial-support-to-scriptplugin#ticket-1284-16) by David.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As per &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1284-add-hg-mercurial-support-to-scriptplugin#ticket-1284-16&quot;&gt;
this comment&lt;/a&gt; by David.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-22T17:23:37+00:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2008-11-22T17:23:40+00:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">2</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've pushed the first bits of code to [a GitHub branch](http://github.com/dasch/rails/tree/plugin-manager). It currently supports installing through Git checkout and Git submodule.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've pushed the first bits of code to &lt;a href=&quot;http://github.com/dasch/rails/tree/plugin-manager&quot;&gt;a GitHub
branch&lt;/a&gt;. It currently supports installing through Git checkout
and Git submodule.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-22T19:05:48+00:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2008-11-22T19:05:52+00:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">3</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This sounds like a great idea.  Just yesterday I was getting annoyed about how hard plugin dependencies are to manage compared to gems.  Dependency hell....

Please provide some mechanism to specify versions or branches of plugins - either a Git revision number, or a branch.

The hook approach for #update and #remove sounds great as well.  Ideally, this facility would be completely decoupled from the rest of Rails (especially the config/initialization/environment), so it could be done as part of app startup from config/preinitializer.rb.  That way, your piston/braid/giternal config could be leveraged to automatically bring the plugin up to the version you want.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This sounds like a great idea. Just yesterday I was getting
annoyed about how hard plugin dependencies are to manage compared
to gems. Dependency hell....&lt;/p&gt;
&lt;p&gt;Please provide some mechanism to specify versions or branches of
plugins - either a Git revision number, or a branch.&lt;/p&gt;
&lt;p&gt;The hook approach for #update and #remove sounds great as well.
Ideally, this facility would be completely decoupled from the rest
of Rails (especially the config/initialization/environment), so it
could be done as part of app startup from config/preinitializer.rb.
That way, your piston/braid/giternal config could be leveraged to
automatically bring the plugin up to the version you want.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-22T20:53:37+00:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2008-11-22T20:53:39+00:00</updated-at>
      <user-id type="integer">17482</user-id>
      <version type="integer">4</version>
      <user-name>Chad Woolley</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Chad: That's what we thought about, all SCM plugins should be loaded automatically and system-wide without having to tweak the config files.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Chad: That's what we thought about, all SCM plugins should be
loaded automatically and system-wide without having to tweak the
config files.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-24T09:20:57+00:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2008-11-24T09:21:02+00:00</updated-at>
      <user-id type="integer">22711</user-id>
      <version type="integer">5</version>
      <user-name>Bounga</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Chad: and yes, revision, branch and all these things will be handle by the manager.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Chad: and yes, revision, branch and all these things will be
handle by the manager.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-24T09:22:41+00:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2008-11-24T09:22:44+00:00</updated-at>
      <user-id type="integer">22711</user-id>
      <version type="integer">6</version>
      <user-name>Bounga</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>NOTE : Update Rails::TemplateRunner to make use of script/plugin features. Git submodules for an example</body>
      <body-html>&lt;div&gt;&lt;p&gt;NOTE : Update Rails::TemplateRunner to make use of script/plugin
features. Git submodules for an example&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-05T23:17:27+00:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2008-12-05T23:32:25+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">7</version>
      <user-name>Pratik</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is this still valid?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is this still valid?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T08:34:00+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2010-04-10T08:34:03+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">8</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:36+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2010-05-04T18:48:36+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>No updates since my ping in April, closing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No updates since my ping in April, closing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T04:50:47+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">821</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2010-10-11T04:50:49+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">10</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just a little update too: I would say this is handled fairly enough by Bundler now by using the `git` comment in _Gemfile_. If you want to use a specific version of a plugin, it's best practice if it was a gem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just a little update too: I would say this is handled fairly
enough by Bundler now by using the &lt;code&gt;git&lt;/code&gt; comment in
&lt;em&gt;Gemfile&lt;/em&gt;. If you want to use a specific version of a
plugin, it's best practice if it was a gem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T04:51:59+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1436</number>
      <permalink>an-extensible-api-for-plugin-management</permalink>
      <priority type="integer">821</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>An extensible API for plugin management</title>
      <updated-at type="datetime">2010-10-11T04:52:03+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">11</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1436</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
