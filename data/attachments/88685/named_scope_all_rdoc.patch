From 915178e9c49a23fe3a8a3dcb702a061d3c11da4f Mon Sep 17 00:00:00 2001
From: Zack Hobson <zack@opensourcery.com>
Date: Fri, 13 Feb 2009 11:23:24 -0800
Subject: [PATCH] Update rdoc: all is not a named_scope.

http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/1959-named_scope-all-is-missing
---
 activerecord/lib/active_record/named_scope.rb |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/named_scope.rb b/activerecord/lib/active_record/named_scope.rb
index 989b2a1..8055df6 100644
--- a/activerecord/lib/active_record/named_scope.rb
+++ b/activerecord/lib/active_record/named_scope.rb
@@ -1,11 +1,12 @@
 module ActiveRecord
   module NamedScope
-    # All subclasses of ActiveRecord::Base have two named \scopes:
-    # * <tt>all</tt> - which is similar to a <tt>find(:all)</tt> query, and
+    # All subclasses of ActiveRecord::Base have one named scope:
     # * <tt>scoped</tt> - which allows for the creation of anonymous \scopes, on the fly: <tt>Shirt.scoped(:conditions => {:color => 'red'}).scoped(:include => :washing_instructions)</tt>
     #
     # These anonymous \scopes tend to be useful when procedurally generating complex queries, where passing
     # intermediate values (scopes) around as first-class objects is convenient.
+    #
+    # You can define a scope that applies to all finders using ActiveRecord::Base.default_scope.
     def self.included(base)
       base.class_eval do
         extend ClassMethods
-- 
1.6.1

