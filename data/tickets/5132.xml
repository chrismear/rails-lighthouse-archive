<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-16T09:38:32+01:00</created-at>
  <creator-id type="integer">52024</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5132</number>
  <permalink>merging-two-relations-activerecordrelation-created-with-joins-method-does-not-work</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord &quot;activerecord relation&quot; &quot;merge relation&quot; rails3</tag>
  <title>Merging two relations (ActiveRecord::Relation) created with joins() method does not work.</title>
  <updated-at type="datetime">2011-02-02T17:13:22+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Robert Pankowecki</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5132</url>
  <priority-name nil="true"></priority-name>
  <original-body>@@@
class Containment &lt; ActiveRecord::Base
  belongs_to :child, :class_name =&gt; 'Unit'
end

Containment.joins(:child =&gt; :properties) works fine but

Containment.joins(:child) &amp; Unit.joins(:properties) raises an exception:

ActiveRecord::ConfigurationError: Association named 'properties' was not found; perhaps you misspelled it?
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1818:in `build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1823:in `block in build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `each'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1739:in `initialize'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `new'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `build_arel'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:93:in `arel'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:324:in `inspect

@@@

I think that both expressions should be equal and behave in the same way.</original-body>
  <latest-body>@@@
class Containment &lt; ActiveRecord::Base
  belongs_to :child, :class_name =&gt; 'Unit'
end

Containment.joins(:child =&gt; :properties) works fine but

Containment.joins(:child) &amp; Unit.joins(:properties) raises an exception:

ActiveRecord::ConfigurationError: Association named 'properties' was not found; perhaps you misspelled it?
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1818:in `build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1823:in `block in build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `each'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1739:in `initialize'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `new'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `build_arel'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:93:in `arel'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:324:in `inspect

@@@

I think that both expressions should be equal and behave in the same way.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;class Containment &amp;lt; ActiveRecord::Base
  belongs_to :child, :class_name =&amp;gt; 'Unit'
end

Containment.joins(:child =&amp;gt; :properties) works fine but

Containment.joins(:child) &amp;amp; Unit.joins(:properties) raises an exception:

ActiveRecord::ConfigurationError: Association named 'properties' was not found; perhaps you misspelled it?
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1818:in `build'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1823:in `block in build'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `each'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `build'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1739:in `initialize'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `new'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `build_arel'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:93:in `arel'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:324:in `inspect&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think that both expressions should be equal and behave in the
same way.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
class Containment &lt; ActiveRecord::Base
  belongs_to :child, :class_name =&gt; 'Unit'
end

Containment.joins(:child =&gt; :properties) works fine but

Containment.joins(:child) &amp; Unit.joins(:properties) raises an exception:

ActiveRecord::ConfigurationError: Association named 'properties' was not found; perhaps you misspelled it?
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1818:in `build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1823:in `block in build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `each'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `build'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1739:in `initialize'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `new'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `build_arel'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:93:in `arel'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
	from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:324:in `inspect

@@@

I think that both expressions should be equal and behave in the same way.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;class Containment &amp;lt; ActiveRecord::Base
  belongs_to :child, :class_name =&amp;gt; 'Unit'
end

Containment.joins(:child =&amp;gt; :properties) works fine but

Containment.joins(:child) &amp;amp; Unit.joins(:properties) raises an exception:

ActiveRecord::ConfigurationError: Association named 'properties' was not found; perhaps you misspelled it?
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1818:in `build'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1823:in `block in build'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `each'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1822:in `build'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/associations.rb:1739:in `initialize'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `new'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:133:in `build_arel'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation/query_methods.rb:93:in `arel'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:64:in `to_a'
    from /home/rupert/.rvm/gems/ruby-1.9.2-head/gems/activerecord-3.0.0.beta4/lib/active_record/relation.rb:324:in `inspect&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think that both expressions should be equal and behave in the
same way.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-16T09:38:32+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5132</number>
      <permalink>merging-two-relations-activerecordrelation-created-with-joins-method-does-not-work</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord relation&quot; &quot;merge relation&quot; rails3</tag>
      <title>Merging two relations (ActiveRecord::Relation) created with joins() method does not work.</title>
      <updated-at type="datetime">2010-07-16T09:38:35+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">1</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5132</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:36:04+00:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5132</number>
      <permalink>merging-two-relations-activerecordrelation-created-with-joins-method-does-not-work</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord &quot;activerecord relation&quot; &quot;merge relation&quot; rails3</tag>
      <title>Merging two relations (ActiveRecord::Relation) created with joins() method does not work.</title>
      <updated-at type="datetime">2011-02-02T17:12:53+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5132</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:36:05+00:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5132</number>
      <permalink>merging-two-relations-activerecordrelation-created-with-joins-method-does-not-work</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord &quot;activerecord relation&quot; &quot;merge relation&quot; rails3</tag>
      <title>Merging two relations (ActiveRecord::Relation) created with joins() method does not work.</title>
      <updated-at type="datetime">2011-02-02T17:13:22+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5132</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
