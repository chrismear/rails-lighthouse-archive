<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-03T14:30:36+01:00</created-at>
  <creator-id type="integer">52921</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2408</number>
  <permalink>allow-engines-routes-order-to-be-defined-mapfrom_plugin</permalink>
  <priority type="integer">1565</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>engines routes routing</tag>
  <title>Allow Engines routes order to be defined (map.from_plugin)</title>
  <updated-at type="datetime">2009-05-15T20:05:42+01:00</updated-at>
  <user-id type="integer">18996</user-id>
  <version type="integer">4</version>
  <user-name>Roger</user-name>
  <creator-name>Marian Rudzynski</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2408</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I just added &quot;map.from_plugin&quot; to the title so this can be found by people missing that functionality from Engines.

There should (must) be a way to define the order of routes set by a plugin. This has been proposed earlier in Ticket #329 (https://rails.lighthouseapp.com/projects/8994/tickets/329-add-an-api-for-plugins-to-register-routes) and has been closed as duplicate for the current implementation -- that allows no ordering whatsoever and simply doesn't clear routes set by plugins (auto-loading their config/routes.rb file)

The way proposed in #329 might be sufficient but one could go all the way now by allowing plugins themselves to define their route positions, like so:

ActionController::Routing::Routes.draw do |map|
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; :last
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; :first
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; {:before =&gt; :root}
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; {:after =&gt; :root}
end

Making it more specific than that would be overkill, imho. All I am looking for right now, for example, is to place a catch-all route like above at the very end of routes. If one needs more specific placement, one should go with the approach of Ticket #329

Now I might actually go ahead and implement this in some fashion as I need it right now, so if there's no taker, I might have a patch up next week.</original-body>
  <latest-body>I just added &quot;map.from_plugin&quot; to the title so this can be found by people missing that functionality from Engines.

There should (must) be a way to define the order of routes set by a plugin. This has been proposed earlier in Ticket #329 (https://rails.lighthouseapp.com/projects/8994/tickets/329-add-an-api-for-plugins-to-register-routes) and has been closed as duplicate for the current implementation -- that allows no ordering whatsoever and simply doesn't clear routes set by plugins (auto-loading their config/routes.rb file)

The way proposed in #329 might be sufficient but one could go all the way now by allowing plugins themselves to define their route positions, like so:

ActionController::Routing::Routes.draw do |map|
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; :last
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; :first
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; {:before =&gt; :root}
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; {:after =&gt; :root}
end

Making it more specific than that would be overkill, imho. All I am looking for right now, for example, is to place a catch-all route like above at the very end of routes. If one needs more specific placement, one should go with the approach of Ticket #329

Now I might actually go ahead and implement this in some fashion as I need it right now, so if there's no taker, I might have a patch up next week.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I just added &quot;map.from_plugin&quot; to the title so this can be found
by people missing that functionality from Engines.&lt;/p&gt;
&lt;p&gt;There should (must) be a way to define the order of routes set
by a plugin. This has been proposed earlier in Ticket &lt;a href=&quot;/projects/8994/tickets/329&quot; title=&quot;Ticket #329&quot;&gt;#329&lt;/a&gt; (&lt;a href=&quot;https://rails.lighthouseapp.com/projects/8994/tickets/329-add-an-api-for-plugins-to-register-routes)&quot;&gt;https://rails.lighthouseapp.com/...&lt;/a&gt;
and has been closed as duplicate for the current implementation --
that allows no ordering whatsoever and simply doesn't clear routes
set by plugins (auto-loading their config/routes.rb file)&lt;/p&gt;
&lt;p&gt;The way proposed in &lt;a href=&quot;/projects/8994/tickets/329&quot; title=&quot;Ticket #329&quot;&gt;#329&lt;/a&gt; might be sufficient but one could go all the
way now by allowing plugins themselves to define their route
positions, like so:&lt;/p&gt;
&lt;p&gt;ActionController::Routing::Routes.draw do |map| map.fourohfour
'&lt;em&gt;path', :controller =&amp;gt; 'errors', :action =&amp;gt; 'show',
:position =&amp;gt; :last map.fourohfour '&lt;/em&gt;path', :controller =&amp;gt;
'errors', :action =&amp;gt; 'show', :position =&amp;gt; :first
map.fourohfour '&lt;em&gt;path', :controller =&amp;gt; 'errors', :action
=&amp;gt; 'show', :position =&amp;gt; {:before =&amp;gt; :root} map.fourohfour
'&lt;/em&gt;path', :controller =&amp;gt; 'errors', :action =&amp;gt; 'show',
:position =&amp;gt; {:after =&amp;gt; :root} end&lt;/p&gt;
&lt;p&gt;Making it more specific than that would be overkill, imho. All I
am looking for right now, for example, is to place a catch-all
route like above at the very end of routes. If one needs more
specific placement, one should go with the approach of Ticket
&lt;a href=&quot;/projects/8994/tickets/329&quot; title=&quot;Ticket #329&quot;&gt;#329&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now I might actually go ahead and implement this in some fashion
as I need it right now, so if there's no taker, I might have a
patch up next week.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just added &quot;map.from_plugin&quot; to the title so this can be found by people missing that functionality from Engines.

There should (must) be a way to define the order of routes set by a plugin. This has been proposed earlier in Ticket #329 and has been closed as duplicate for the current implementation -- that allows no ordering whatsoever and simply doesn't clear routes set by plugins (auto-loading their config/routes.rb file)

The way proposed in #329 might be sufficient but one could go all the way now by allowing plugins themselves to define their route positions, like so:

@@@
ActionController::Routing::Routes.draw do |map|
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; :last
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; :first
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; {:before =&gt; :root}
  map.fourohfour '*path', :controller =&gt; 'errors', :action =&gt; 'show', :position =&gt; {:after =&gt; :root}
end
@@@

Making it more specific than that would be overkill, imho. All I am looking for right now, for example, is to place a catch-all route like above at the very end of routes. If one needs more specific placement, one should go with the approach of Ticket #329

Now I might actually go ahead and implement this in some fashion as I need it right now, so if there's no taker, I might have a patch up next week.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just added &quot;map.from_plugin&quot; to the title so this can be found
by people missing that functionality from Engines.&lt;/p&gt;
&lt;p&gt;There should (must) be a way to define the order of routes set
by a plugin. This has been proposed earlier in Ticket &lt;a href=&quot;/projects/8994/tickets/329&quot; title=&quot;Ticket #329&quot;&gt;#329&lt;/a&gt; and has
been closed as duplicate for the current implementation -- that
allows no ordering whatsoever and simply doesn't clear routes set
by plugins (auto-loading their config/routes.rb file)&lt;/p&gt;
&lt;p&gt;The way proposed in &lt;a href=&quot;/projects/8994/tickets/329&quot; title=&quot;Ticket #329&quot;&gt;#329&lt;/a&gt; might be sufficient but one could go all the
way now by allowing plugins themselves to define their route
positions, like so:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
ActionController::Routing::Routes.draw do |map|
  map.fourohfour '*path', :controller =&amp;gt; 'errors', :action =&amp;gt; 'show', :position =&amp;gt; :last
  map.fourohfour '*path', :controller =&amp;gt; 'errors', :action =&amp;gt; 'show', :position =&amp;gt; :first
  map.fourohfour '*path', :controller =&amp;gt; 'errors', :action =&amp;gt; 'show', :position =&amp;gt; {:before =&amp;gt; :root}
  map.fourohfour '*path', :controller =&amp;gt; 'errors', :action =&amp;gt; 'show', :position =&amp;gt; {:after =&amp;gt; :root}
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Making it more specific than that would be overkill, imho. All I
am looking for right now, for example, is to place a catch-all
route like above at the very end of routes. If one needs more
specific placement, one should go with the approach of Ticket
&lt;a href=&quot;/projects/8994/tickets/329&quot; title=&quot;Ticket #329&quot;&gt;#329&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now I might actually go ahead and implement this in some fashion
as I need it right now, so if there's no taker, I might have a
patch up next week.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-03T14:30:36+01:00</created-at>
      <creator-id type="integer">52921</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2408</number>
      <permalink>allow-engines-routes-order-to-be-defined-mapfrom_plugin</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>engines routes routing</tag>
      <title>Allow Engines routes order to be defined (map.from_plugin)</title>
      <updated-at type="datetime">2009-04-03T14:32:05+01:00</updated-at>
      <user-id type="integer">52921</user-id>
      <version type="integer">1</version>
      <user-name>Marian Rudzynski</user-name>
      <creator-name>Marian Rudzynski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2408</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Happy to reopen if you have a patch. Otherwise, falls under &quot;Creating a feature request: please don't&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Happy to reopen if you have a patch. Otherwise, falls under
&quot;Creating a feature request: please don't&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-03T14:51:16+01:00</created-at>
      <creator-id type="integer">52921</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2408</number>
      <permalink>allow-engines-routes-order-to-be-defined-mapfrom_plugin</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>engines routes routing</tag>
      <title>Allow Engines routes order to be defined (map.from_plugin)</title>
      <updated-at type="datetime">2009-04-03T14:51:20+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Marian Rudzynski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2408</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure that controlling routes via a :position parameter is quite flexible enough, but regardless, I've added a patch which covers controlling plugin route positioning to Ticket #329, and would appreciate your feedback there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure that controlling routes via a :position parameter
is quite flexible enough, but regardless, I've added a patch which
covers controlling plugin route positioning to Ticket &lt;a href=&quot;/projects/8994/tickets/329&quot; title=&quot;Ticket #329&quot;&gt;#329&lt;/a&gt;, and
would appreciate your feedback there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-01T20:48:42+01:00</created-at>
      <creator-id type="integer">52921</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2408</number>
      <permalink>allow-engines-routes-order-to-be-defined-mapfrom_plugin</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>engines routes routing</tag>
      <title>Allow Engines routes order to be defined (map.from_plugin)</title>
      <updated-at type="datetime">2009-05-01T20:48:46+01:00</updated-at>
      <user-id type="integer">137</user-id>
      <version type="integer">3</version>
      <user-name>James Adam</user-name>
      <creator-name>Marian Rudzynski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2408</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>perhaps an option like

Rails::Initializer.run do |config|
  config.do_not_load_plugin_routes = true
end

might be enough, then people can later do something like
load 'vendor/plugins/plugin_name/config/routes.rb'
to have control of route loading

?</body>
      <body-html>&lt;div&gt;&lt;p&gt;perhaps an option like&lt;/p&gt;
&lt;p&gt;Rails::Initializer.run do |config|&lt;br&gt;
config.do_not_load_plugin_routes = true end&lt;/p&gt;
&lt;p&gt;might be enough, then people can later do something like&lt;br&gt;
load 'vendor/plugins/plugin_name/config/routes.rb'&lt;br&gt;
to have control of route loading&lt;/p&gt;
&lt;p&gt;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-15T20:05:37+01:00</created-at>
      <creator-id type="integer">52921</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2408</number>
      <permalink>allow-engines-routes-order-to-be-defined-mapfrom_plugin</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>engines routes routing</tag>
      <title>Allow Engines routes order to be defined (map.from_plugin)</title>
      <updated-at type="datetime">2009-05-15T20:05:42+01:00</updated-at>
      <user-id type="integer">18996</user-id>
      <version type="integer">4</version>
      <user-name>Roger</user-name>
      <creator-name>Marian Rudzynski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2408</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
