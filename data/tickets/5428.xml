<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-22T22:49:57+01:00</created-at>
  <creator-id type="integer">112645</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5428</number>
  <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord database sqlite3</tag>
  <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
  <updated-at type="datetime">2011-02-02T17:04:17+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">7</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jens</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
  <priority-name nil="true"></priority-name>
  <original-body>In Rails 2.3.8

With the configuration below (and rails project attached)

&gt; Second.create fails with Sqlite3::BusyException.

Removing establish_connection, it will work again.  

/////////////// MODELS


class First &lt; ActiveRecord::Base
  establish_connection :development

  belongs_to :second
end

class Second &lt; ActiveRecord::Base
  has_one :first, :dependent =&gt; :destroy
  establish_connection :development

  def before_validation_on_create
    build_first
  end
end

////////////////// WITH MIGRATIONS

lass CreateFirsts &lt; ActiveRecord::Migration
  def self.up
    create_table :firsts, :id =&gt; false do |t|

      t.references :second
      t.timestamps
    end
  end

  def self.down
    drop_table :firsts
  end
end
class CreateSeconds &lt; ActiveRecord::Migration
  def self.up
    create_table :seconds do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :seconds
  end
end</original-body>
  <latest-body>In Rails 2.3.8

With the configuration below (and rails project attached)

&gt; Second.create fails with Sqlite3::BusyException.

Removing establish_connection, it will work again.  

/////////////// MODELS


class First &lt; ActiveRecord::Base
  establish_connection :development

  belongs_to :second
end

class Second &lt; ActiveRecord::Base
  has_one :first, :dependent =&gt; :destroy
  establish_connection :development

  def before_validation_on_create
    build_first
  end
end

////////////////// WITH MIGRATIONS

lass CreateFirsts &lt; ActiveRecord::Migration
  def self.up
    create_table :firsts, :id =&gt; false do |t|

      t.references :second
      t.timestamps
    end
  end

  def self.down
    drop_table :firsts
  end
end
class CreateSeconds &lt; ActiveRecord::Migration
  def self.up
    create_table :seconds do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :seconds
  end
end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In Rails 2.3.8&lt;/p&gt;
&lt;p&gt;With the configuration below (and rails project attached)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Second.create fails with Sqlite3::BusyException.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Removing establish_connection, it will work again.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;/////////////// MODELS&lt;/p&gt;
&lt;p&gt;class First &amp;lt; ActiveRecord::Base&lt;br&gt;
establish_connection :development&lt;/p&gt;
&lt;p&gt;belongs_to :second end&lt;/p&gt;
&lt;p&gt;class Second &amp;lt; ActiveRecord::Base&lt;br&gt;
has_one :first, :dependent =&amp;gt; :destroy establish_connection
:development&lt;/p&gt;
&lt;p&gt;def before_validation_on_create&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;build_first&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;////////////////// WITH MIGRATIONS&lt;/p&gt;
&lt;p&gt;lass CreateFirsts &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :firsts, :id =&amp;gt; false do |t|

  t.references :second
  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :firsts&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;br&gt;
class CreateSeconds &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :seconds do |t|

  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :seconds&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In Rails 2.3.8

With the configuration below (and rails project attached)

&gt; Second.create fails with Sqlite3::BusyException.

Removing establish_connection, it will work again.  

/////////////// MODELS


class First &lt; ActiveRecord::Base
  establish_connection :development

  belongs_to :second
end

class Second &lt; ActiveRecord::Base
  has_one :first, :dependent =&gt; :destroy
  establish_connection :development

  def before_validation_on_create
    build_first
  end
end

////////////////// WITH MIGRATIONS

lass CreateFirsts &lt; ActiveRecord::Migration
  def self.up
    create_table :firsts, :id =&gt; false do |t|

      t.references :second
      t.timestamps
    end
  end

  def self.down
    drop_table :firsts
  end
end
class CreateSeconds &lt; ActiveRecord::Migration
  def self.up
    create_table :seconds do |t|

      t.timestamps
    end
  end

  def self.down
    drop_table :seconds
  end
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;In Rails 2.3.8&lt;/p&gt;
&lt;p&gt;With the configuration below (and rails project attached)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Second.create fails with Sqlite3::BusyException.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Removing establish_connection, it will work again.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;/////////////// MODELS&lt;/p&gt;
&lt;p&gt;class First &amp;lt; ActiveRecord::Base&lt;br&gt;
establish_connection :development&lt;/p&gt;
&lt;p&gt;belongs_to :second end&lt;/p&gt;
&lt;p&gt;class Second &amp;lt; ActiveRecord::Base&lt;br&gt;
has_one :first, :dependent =&amp;gt; :destroy establish_connection
:development&lt;/p&gt;
&lt;p&gt;def before_validation_on_create&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;build_first&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;////////////////// WITH MIGRATIONS&lt;/p&gt;
&lt;p&gt;lass CreateFirsts &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :firsts, :id =&amp;gt; false do |t|

  t.references :second
  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :firsts&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;br&gt;
class CreateSeconds &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :seconds do |t|

  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :seconds&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-22T22:49:57+01:00</created-at>
      <creator-id type="integer">112645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5428</number>
      <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord database sqlite3</tag>
      <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
      <updated-at type="datetime">2010-08-22T22:50:00+01:00</updated-at>
      <user-id type="integer">112645</user-id>
      <version type="integer">1</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What i can conclude is that since I use establish_connection in all models, they will not share connection pools at all. Even though they could (since they connect to the same database). This causes two different connections to access the sqlite file causing the lock.

Any feasable options here?</body>
      <body-html>&lt;div&gt;&lt;p&gt;What i can conclude is that since I use establish_connection in
all models, they will not share connection pools at all. Even
though they could (since they connect to the same database). This
causes two different connections to access the sqlite file causing
the lock.&lt;/p&gt;
&lt;p&gt;Any feasable options here?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-22T23:05:29+01:00</created-at>
      <creator-id type="integer">112645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5428</number>
      <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord database sqlite3</tag>
      <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
      <updated-at type="datetime">2010-08-22T23:05:32+01:00</updated-at>
      <user-id type="integer">112645</user-id>
      <version type="integer">2</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This willa ctually fix it. Maybe this should close the &quot;bug&quot;?

class Legacy &lt; ActiveRecord::Base
  establish_connection :some_other_db
  self.abstract_class = true
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;This willa ctually fix it. Maybe this should close the
&quot;bug&quot;?&lt;/p&gt;
&lt;p&gt;class Legacy &amp;lt; ActiveRecord::Base&lt;br&gt;
establish_connection :some_other_db self.abstract_class = true
end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-22T23:19:55+01:00</created-at>
      <creator-id type="integer">112645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5428</number>
      <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord database sqlite3</tag>
      <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
      <updated-at type="datetime">2010-08-22T23:19:58+01:00</updated-at>
      <user-id type="integer">112645</user-id>
      <version type="integer">3</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That is, if First, and Second inherit from Legacy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That is, if First, and Second inherit from Legacy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-22T23:37:25+01:00</created-at>
      <creator-id type="integer">112645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5428</number>
      <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord database sqlite3</tag>
      <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
      <updated-at type="datetime">2010-08-22T23:37:28+01:00</updated-at>
      <user-id type="integer">112645</user-id>
      <version type="integer">4</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>related / duplicate to #5054</body>
      <body-html>&lt;div&gt;&lt;p&gt;related / duplicate to &lt;a href=&quot;/projects/8994/tickets/5054&quot;
title=&quot;Ticket #5054&quot;&gt;#5054&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T16:59:35+01:00</created-at>
      <creator-id type="integer">112645</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5428</number>
      <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord database sqlite3</tag>
      <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
      <updated-at type="datetime">2010-08-23T16:59:36+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">5</version>
      <user-name>Kane</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:33:56+00:00</created-at>
      <creator-id type="integer">112645</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5428</number>
      <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord database sqlite3</tag>
      <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
      <updated-at type="datetime">2011-02-02T17:03:49+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:33:57+00:00</created-at>
      <creator-id type="integer">112645</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5428</number>
      <permalink>establish_connection-causes-activerecordstatementinvalid-sqlite3busyexception-database-is-locked</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord database sqlite3</tag>
      <title>establish_connection causes ActiveRecord::StatementInvalid: SQLite3::BusyException: database is locked</title>
      <updated-at type="datetime">2011-02-02T17:04:17+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5428</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>eb2b157042cc2e7f9a7c5179a9188584d8bc2c28</code>
      <content-type>application/x-gzip</content-type>
      <created-at type="datetime">2010-08-22T22:49:58+01:00</created-at>
      <filename>test.tgz</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">639973</id>
      <size type="integer">79690</size>
      <uploader-id type="integer">112645</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/639973/test.tgz</url>
    </attachment>
  </attachments>
</ticket>
