<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-30T04:59:31+01:00</created-at>
  <creator-id type="integer">11371</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5494</number>
  <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord patch performance validates_uniqueness_of validations</tag>
  <title>Uniqueness validator can cause error with after_initialize callback</title>
  <updated-at type="datetime">2011-03-29T15:03:39+01:00</updated-at>
  <user-id type="integer">33030</user-id>
  <version type="integer">8</version>
  <user-name>Kane</user-name>
  <creator-name>Adam Meehan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
  <priority-name nil="true"></priority-name>
  <original-body>The uniqueness validator uses the exists? method as the test for a duplicate record. The exists? method calls the find_by_sql method which will instantiate any record found. However the instantiated record will only have the primary attribute method defined because it is the only column in the select.

Given that the record is actually instantiated, any after_initialize callbacks will be run. If the an attribute method other than the primary key is called, then an ActiveModel::MissingAttribute error is raised. There seems to be an exception where the attribute method is called with the self receiver. Otherwise the error will occur.

I have attached a patch which uses 'count &gt; 0' as the duplicate record test and therefore no record is instantiated and the callbacks are not run. This should also make it a little faster when a duplicate is found.

Perhaps a wider issue is whether the exists? method needs to do anything other than a count as well.</original-body>
  <latest-body>The uniqueness validator uses the exists? method as the test for a duplicate record. The exists? method calls the find_by_sql method which will instantiate any record found. However the instantiated record will only have the primary attribute method defined because it is the only column in the select.

Given that the record is actually instantiated, any after_initialize callbacks will be run. If the an attribute method other than the primary key is called, then an ActiveModel::MissingAttribute error is raised. There seems to be an exception where the attribute method is called with the self receiver. Otherwise the error will occur.

I have attached a patch which uses 'count &gt; 0' as the duplicate record test and therefore no record is instantiated and the callbacks are not run. This should also make it a little faster when a duplicate is found.

Perhaps a wider issue is whether the exists? method needs to do anything other than a count as well.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The uniqueness validator uses the exists? method as the test for
a duplicate record. The exists? method calls the find_by_sql method
which will instantiate any record found. However the instantiated
record will only have the primary attribute method defined because
it is the only column in the select.&lt;/p&gt;
&lt;p&gt;Given that the record is actually instantiated, any
after_initialize callbacks will be run. If the an attribute method
other than the primary key is called, then an
ActiveModel::MissingAttribute error is raised. There seems to be an
exception where the attribute method is called with the self
receiver. Otherwise the error will occur.&lt;/p&gt;
&lt;p&gt;I have attached a patch which uses 'count &amp;gt; 0' as the
duplicate record test and therefore no record is instantiated and
the callbacks are not run. This should also make it a little faster
when a duplicate is found.&lt;/p&gt;
&lt;p&gt;Perhaps a wider issue is whether the exists? method needs to do
anything other than a count as well.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The uniqueness validator uses the exists? method as the test for a duplicate record. The exists? method calls the find_by_sql method which will instantiate any record found. However the instantiated record will only have the primary attribute method defined because it is the only column in the select.

Given that the record is actually instantiated, any after_initialize callbacks will be run. If the an attribute method other than the primary key is called, then an ActiveModel::MissingAttribute error is raised. There seems to be an exception where the attribute method is called with the self receiver. Otherwise the error will occur.

I have attached a patch which uses 'count &gt; 0' as the duplicate record test and therefore no record is instantiated and the callbacks are not run. This should also make it a little faster when a duplicate is found.

Perhaps a wider issue is whether the exists? method needs to do anything other than a count as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The uniqueness validator uses the exists? method as the test for
a duplicate record. The exists? method calls the find_by_sql method
which will instantiate any record found. However the instantiated
record will only have the primary attribute method defined because
it is the only column in the select.&lt;/p&gt;
&lt;p&gt;Given that the record is actually instantiated, any
after_initialize callbacks will be run. If the an attribute method
other than the primary key is called, then an
ActiveModel::MissingAttribute error is raised. There seems to be an
exception where the attribute method is called with the self
receiver. Otherwise the error will occur.&lt;/p&gt;
&lt;p&gt;I have attached a patch which uses 'count &amp;gt; 0' as the
duplicate record test and therefore no record is instantiated and
the callbacks are not run. This should also make it a little faster
when a duplicate is found.&lt;/p&gt;
&lt;p&gt;Perhaps a wider issue is whether the exists? method needs to do
anything other than a count as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T04:59:31+01:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2010-08-30T05:01:41+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">1</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-10T04:54:08+01:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord patch validates_uniqueness_of validations
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch performance validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2010-09-10T04:54:10+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">2</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I encountered this too and monkey patched it in my app.

I used STI and wanted to deny instantiation of the base class (kind of abstract).
This class had a validates_uniqueness defined.


Your diff is more than you wanted.

Also i would suggest to fix the underlying problem, which is 'exists?' .
there is no need for instantiation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I encountered this too and monkey patched it in my app.&lt;/p&gt;
&lt;p&gt;I used STI and wanted to deny instantiation of the base class
(kind of abstract).&lt;br&gt;
This class had a validates_uniqueness defined.&lt;/p&gt;
&lt;p&gt;Your diff is more than you wanted.&lt;/p&gt;
&lt;p&gt;Also i would suggest to fix the underlying problem, which is
'exists?' .&lt;br&gt;
there is no need for instantiation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-10T17:24:05+01:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch performance validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2010-09-10T17:24:06+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">3</version>
      <user-name>Kane</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-10T22:22:00+01:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch performance validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2010-09-10T22:22:02+01:00</updated-at>
      <user-id type="integer">33838</user-id>
      <version type="integer">4</version>
      <user-name>Marcelo Giorgi</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Whoops, thanks for the heads up on the patch. Fixed now.

A change to exists? caused too many errors to fix now. Will revisit.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Whoops, thanks for the heads up on the patch. Fixed now.&lt;/p&gt;
&lt;p&gt;A change to exists? caused too many errors to fix now. Will
revisit.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-10T23:15:04+01:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch performance validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2010-09-10T23:15:06+01:00</updated-at>
      <user-id type="integer">11371</user-id>
      <version type="integer">5</version>
      <user-name>Adam Meehan</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:31:54+00:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch performance validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2011-02-02T16:51:21+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:31:56+00:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord patch performance validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2011-02-02T16:51:29+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Changeset [827e5de60f27c6b559640eda7b79857050a72d9e] by Andrew White 

exists? no longer instantiates records, so this should be solved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Changeset &lt;a href=
&quot;/projects/8994/changesets/827e5de60f27c6b559640eda7b79857050a72d9e&quot;
title=
&quot;Changeset [827e5de60f27c6b559640eda7b79857050a72d9e]&quot;&gt;[827e5de60f27c6b559640eda7b79857050a72d9e]&lt;/a&gt;
by Andrew White&lt;/p&gt;
&lt;p&gt;exists? no longer instantiates records, so this should be
solved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-29T15:03:33+01:00</created-at>
      <creator-id type="integer">11371</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5494</number>
      <permalink>uniqueness-validator-can-cause-error-with-after_initialize-callback</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord patch performance validates_uniqueness_of validations</tag>
      <title>Uniqueness validator can cause error with after_initialize callback</title>
      <updated-at type="datetime">2011-03-29T15:03:39+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">8</version>
      <user-name>Kane</user-name>
      <creator-name>Adam Meehan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5494</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e64284957c5f9edb928fc1e8b72482d65d160f5e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-10T23:15:04+01:00</created-at>
      <filename>uniqueness-validator-patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">668871</id>
      <size type="integer">2300</size>
      <uploader-id type="integer">11371</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/668871/uniqueness-validator-patch.diff</url>
    </attachment>
  </attachments>
</ticket>
