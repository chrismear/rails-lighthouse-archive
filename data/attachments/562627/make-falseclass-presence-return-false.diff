From 030fcb578ca17b53f5bf66d4bd96e34998696ea8 Mon Sep 17 00:00:00 2001
From: Philip Arndt <parndt@gmail.com>
Date: Thu, 17 Jun 2010 10:22:00 +1200
Subject: [PATCH] FalseClass should return false (self) as its presence rather than nil because false != nil

---
 .../lib/active_support/core_ext/object/blank.rb    |    4 ++++
 activesupport/test/core_ext/blank_test.rb          |    4 ++--
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/object/blank.rb b/activesupport/lib/active_support/core_ext/object/blank.rb
index eb99bb1..0300a05 100644
--- a/activesupport/lib/active_support/core_ext/object/blank.rb
+++ b/activesupport/lib/active_support/core_ext/object/blank.rb
@@ -47,6 +47,10 @@ class FalseClass #:nodoc:
   def blank?
     true
   end
+  
+  def presence
+    self
+  end
 end
 
 class TrueClass #:nodoc:
diff --git a/activesupport/test/core_ext/blank_test.rb b/activesupport/test/core_ext/blank_test.rb
index 97c6b21..724e7c7 100644
--- a/activesupport/test/core_ext/blank_test.rb
+++ b/activesupport/test/core_ext/blank_test.rb
@@ -16,7 +16,7 @@ class BlankTest < Test::Unit::TestCase
   end
 
   def test_presence
-    BLANK.each { |v| assert_equal nil, v.presence, "#{v.inspect}.presence should return nil" }
-    NOT.each   { |v| assert_equal v,   v.presence, "#{v.inspect}.presence should return self" }
+    BLANK.reject{|v| v.is_a?(FalseClass) }.each { |v| assert_equal nil, v.presence, "#{v.inspect}.presence should return nil" }
+    NOT | [false].each   { |v| assert_equal v,   v.presence, "#{v.inspect}.presence should return self" }
   end
 end
-- 
1.7.1

