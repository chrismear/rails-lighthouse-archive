From 08ad11346bc767d326a80c12f016951562dbb6fe Mon Sep 17 00:00:00 2001
From: Brian Durand <brian@embellishedvisions.com>
Date: Mon, 17 Jan 2011 17:20:28 -0600
Subject: [PATCH 2/4] Fix FileStore#cleanup to actually work

---
 .../lib/active_support/cache/file_store.rb         |   22 +++++++++++--
 activesupport/test/caching_test.rb                 |   34 ++++++++++++++++++++
 2 files changed, 53 insertions(+), 3 deletions(-)

diff --git a/activesupport/lib/active_support/cache/file_store.rb b/activesupport/lib/active_support/cache/file_store.rb
index 18182bb..1cf3620 100644
--- a/activesupport/lib/active_support/cache/file_store.rb
+++ b/activesupport/lib/active_support/cache/file_store.rb
@@ -24,11 +24,26 @@ module ActiveSupport
         FileUtils.rm_r(root_dirs.collect{|f| File.join(cache_path, f)})
       end
 
+      # Cleanup the cache by removing old entries. By default this will delete entries
+      # that haven't been accessed in one day. You can change this behavior by passing
+      # in a +not_accessed_in+ option. Any entry not accessed in that number of seconds
+      # in the past will be deleted. Alternatively, you can pass in +:expired_only+ with
+      # +true+ to only delete expired entries.
       def cleanup(options = nil)
         options = merged_options(options)
-        each_key(options) do |key|
-          entry = read_entry(key, options)
-          delete_entry(key, options) if entry && entry.expired?
+        expired_only = options[:expired_only]
+        timestamp = Time.now - (options[:not_accessed_in] || 1.day.to_i)
+        search_dir(cache_path) do |fname|
+          if expired_only
+            key = file_path_key(fname)
+            entry = read_entry(key, options)
+            delete_entry(key, options) if entry && entry.expired?
+          else
+            if File.atime(fname) <= timestamp
+              key = file_path_key(fname)
+              delete_entry(key, options)
+            end
+          end
         end
       end
 
@@ -183,6 +198,7 @@ module ActiveSupport
             end
           end
         end
+
     end
   end
 end
diff --git a/activesupport/test/caching_test.rb b/activesupport/test/caching_test.rb
index f8086cf..c1304e0 100644
--- a/activesupport/test/caching_test.rb
+++ b/activesupport/test/caching_test.rb
@@ -518,6 +518,29 @@ class FileStoreTest < ActiveSupport::TestCase
     key = @cache.send(:key_file_path, "views/index?id=1")
     assert_equal "views/index?id=1", @cache.send(:file_path_key, key)
   end
+  
+  def test_cleanup_with_not_accessed_in
+    @cache.write(1, "aaaaaaaaaa")
+    @cache.write(2, "bbbbbbbbbb")
+    @cache.write(3, "cccccccccc")
+    sleep(2)
+    @cache.read(2)
+    @cache.cleanup(:not_accessed_in => 1)
+    assert_equal false, @cache.exist?(1)
+    assert_equal true, @cache.exist?(2)
+    assert_equal false, @cache.exist?(3)
+  end
+  
+  def test_cleanup_with_expired_only
+    @cache.write(1, "aaaaaaaaaa", :expires_in => 0.001)
+    @cache.write(2, "bbbbbbbbbb")
+    @cache.write(3, "cccccccccc", :expires_in => 0.001)
+    sleep(0.002)
+    @cache.cleanup(:expired_only => 0.001)
+    assert_equal false, @cache.exist?(1)
+    assert_equal true, @cache.exist?(2)
+    assert_equal false, @cache.exist?(3)
+  end
 end
 
 class MemoryStoreTest < ActiveSupport::TestCase
@@ -589,6 +612,17 @@ class MemoryStoreTest < ActiveSupport::TestCase
     assert_equal true, @cache.exist?(2)
     assert_equal false, @cache.exist?(1)
   end
+  
+  def test_cleanup_removes_expired_entries
+    @cache.write(1, "aaaaaaaaaa", :expires_in => 0.001)
+    @cache.write(2, "bbbbbbbbbb")
+    @cache.write(3, "cccccccccc", :expires_in => 0.001)
+    sleep(0.002)
+    @cache.cleanup
+    assert_equal false, @cache.exist?(1)
+    assert_equal true, @cache.exist?(2)
+    assert_equal false, @cache.exist?(3)
+  end
 end
 
 class SynchronizedStoreTest < ActiveSupport::TestCase
-- 
1.7.3.4

