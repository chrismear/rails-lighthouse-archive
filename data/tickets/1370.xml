<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-13T22:08:06+00:00</created-at>
  <creator-id type="integer">608</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1370</number>
  <permalink>activerecordbaseconstruct_finder_sql-gives-scopefrom-precedence-over-optionsfrom</permalink>
  <priority type="integer">766</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord patch</tag>
  <title>ActiveRecord::Base.construct_finder_sql gives scope[:from] precedence over options[:from]</title>
  <updated-at type="datetime">2009-03-06T18:38:02+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>John Wulff</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1370</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>In activerecord/lib/active_record/base.rb

@@@ ruby
module ActiveRecord
  ...
  class Base
    ...
    class &lt;&lt; self
      ...
      def construct_finder_sql(options)
        ...
        sql  = &quot;SELECT #{options[:select] || (scope &amp;&amp; scope[:select]) || ((options[:joins] || (scope &amp;&amp; scope[:joins])) &amp;&amp; quoted_table_name + '.*') || '*'} &quot;
        sql &lt;&lt; &quot;FROM #{(scope &amp;&amp; scope[:from]) || options[:from] || quoted_table_name} &quot;
        ...
@@@

construct_finder_sql gives precedence to the options hash over the scope for query construction except for the &quot;FROM&quot; clause.  This disallows &quot;FROM&quot; overriding when manually calling construct_finder_sql.

I propose that

@@@ ruby
sql &lt;&lt; &quot;FROM #{(scope &amp;&amp; scope[:from]) || options[:from] || quoted_table_name} &quot;
@@@

be changed to:

@@@ ruby
sql &lt;&lt; &quot;FROM #{options[:from] || (scope &amp;&amp; scope[:from]) || quoted_table_name} &quot;
@@@</original-body>
  <latest-body>In activerecord/lib/active_record/base.rb

@@@ ruby
module ActiveRecord
  ...
  class Base
    ...
    class &lt;&lt; self
      ...
      def construct_finder_sql(options)
        ...
        sql  = &quot;SELECT #{options[:select] || (scope &amp;&amp; scope[:select]) || ((options[:joins] || (scope &amp;&amp; scope[:joins])) &amp;&amp; quoted_table_name + '.*') || '*'} &quot;
        sql &lt;&lt; &quot;FROM #{(scope &amp;&amp; scope[:from]) || options[:from] || quoted_table_name} &quot;
        ...
@@@

construct_finder_sql gives precedence to the options hash over the scope for query construction except for the &quot;FROM&quot; clause.  This disallows &quot;FROM&quot; overriding when manually calling construct_finder_sql.

I propose that

@@@ ruby
sql &lt;&lt; &quot;FROM #{(scope &amp;&amp; scope[:from]) || options[:from] || quoted_table_name} &quot;
@@@

be changed to:

@@@ ruby
sql &lt;&lt; &quot;FROM #{options[:from] || (scope &amp;&amp; scope[:from]) || quoted_table_name} &quot;
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In activerecord/lib/active_record/base.rb&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module ActiveRecord
  ...
  class Base
    ...
    class &amp;lt;&amp;lt; self
      ...
      def construct_finder_sql(options)
        ...
        sql  = &amp;quot;SELECT #{options[:select] || (scope &amp;amp;&amp;amp; scope[:select]) || ((options[:joins] || (scope &amp;amp;&amp;amp; scope[:joins])) &amp;amp;&amp;amp; quoted_table_name + '.*') || '*'} &amp;quot;
        sql &amp;lt;&amp;lt; &amp;quot;FROM #{(scope &amp;amp;&amp;amp; scope[:from]) || options[:from] || quoted_table_name} &amp;quot;
        ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;construct_finder_sql gives precedence to the options hash over
the scope for query construction except for the &quot;FROM&quot; clause. This
disallows &quot;FROM&quot; overriding when manually calling
construct_finder_sql.&lt;/p&gt;
&lt;p&gt;I propose that&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
sql &amp;lt;&amp;lt; &amp;quot;FROM #{(scope &amp;amp;&amp;amp; scope[:from]) || options[:from] || quoted_table_name} &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;be changed to:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
sql &amp;lt;&amp;lt; &amp;quot;FROM #{options[:from] || (scope &amp;amp;&amp;amp; scope[:from]) || quoted_table_name} &amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In activerecord/lib/active_record/base.rb

@@@ ruby
module ActiveRecord
  ...
  class Base
    ...
    class &lt;&lt; self
      ...
      def construct_finder_sql(options)
        ...
        sql  = &quot;SELECT #{options[:select] || (scope &amp;&amp; scope[:select]) || ((options[:joins] || (scope &amp;&amp; scope[:joins])) &amp;&amp; quoted_table_name + '.*') || '*'} &quot;
        sql &lt;&lt; &quot;FROM #{(scope &amp;&amp; scope[:from]) || options[:from] || quoted_table_name} &quot;
        ...
@@@

construct_finder_sql gives precedence to the options hash over the scope for query construction except for the &quot;FROM&quot; clause.  This disallows &quot;FROM&quot; overriding when manually calling construct_finder_sql.

I propose that

@@@ ruby
sql &lt;&lt; &quot;FROM #{(scope &amp;&amp; scope[:from]) || options[:from] || quoted_table_name} &quot;
@@@

be changed to:

@@@ ruby
sql &lt;&lt; &quot;FROM #{options[:from] || (scope &amp;&amp; scope[:from]) || quoted_table_name} &quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;In activerecord/lib/active_record/base.rb&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module ActiveRecord
  ...
  class Base
    ...
    class &amp;lt;&amp;lt; self
      ...
      def construct_finder_sql(options)
        ...
        sql  = &amp;quot;SELECT #{options[:select] || (scope &amp;amp;&amp;amp; scope[:select]) || ((options[:joins] || (scope &amp;amp;&amp;amp; scope[:joins])) &amp;amp;&amp;amp; quoted_table_name + '.*') || '*'} &amp;quot;
        sql &amp;lt;&amp;lt; &amp;quot;FROM #{(scope &amp;amp;&amp;amp; scope[:from]) || options[:from] || quoted_table_name} &amp;quot;
        ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;construct_finder_sql gives precedence to the options hash over
the scope for query construction except for the &quot;FROM&quot; clause. This
disallows &quot;FROM&quot; overriding when manually calling
construct_finder_sql.&lt;/p&gt;
&lt;p&gt;I propose that&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
sql &amp;lt;&amp;lt; &amp;quot;FROM #{(scope &amp;amp;&amp;amp; scope[:from]) || options[:from] || quoted_table_name} &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;be changed to:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
sql &amp;lt;&amp;lt; &amp;quot;FROM #{options[:from] || (scope &amp;amp;&amp;amp; scope[:from]) || quoted_table_name} &amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-13T22:08:06+00:00</created-at>
      <creator-id type="integer">608</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1370</number>
      <permalink>activerecordbaseconstruct_finder_sql-gives-scopefrom-precedence-over-optionsfrom</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>ActiveRecord::Base.construct_finder_sql gives scope[:from] precedence over options[:from]</title>
      <updated-at type="datetime">2008-11-13T22:08:08+00:00</updated-at>
      <user-id type="integer">608</user-id>
      <version type="integer">1</version>
      <user-name>John Wulff</user-name>
      <creator-name>John Wulff</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1370</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached diff.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached diff.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-13T23:03:39+00:00</created-at>
      <creator-id type="integer">608</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1370</number>
      <permalink>activerecordbaseconstruct_finder_sql-gives-scopefrom-precedence-over-optionsfrom</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>ActiveRecord::Base.construct_finder_sql gives scope[:from] precedence over options[:from]</title>
      <updated-at type="datetime">2008-11-13T23:03:44+00:00</updated-at>
      <user-id type="integer">608</user-id>
      <version type="integer">2</version>
      <user-name>John Wulff</user-name>
      <creator-name>John Wulff</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1370</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Looks good to me, but we should have a test that verifies this behavior (one that fails before this patch and passes after).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks good to me, but we should have a test that verifies this
behavior (one that fails before this patch and passes after).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-16T14:52:36+00:00</created-at>
      <creator-id type="integer">608</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1370</number>
      <permalink>activerecordbaseconstruct_finder_sql-gives-scopefrom-precedence-over-optionsfrom</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch</tag>
      <title>ActiveRecord::Base.construct_finder_sql gives scope[:from] precedence over options[:from]</title>
      <updated-at type="datetime">2008-11-16T14:52:42+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">3</version>
      <user-name>DHH</user-name>
      <creator-name>John Wulff</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1370</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [4863634a157a8e4a0033734617253b42325daf34]) Ensure supplie :from has precedence over scoped :from [#1370 state:resolved]
http://github.com/rails/rails/commit/4863634a157a8e4a0033734617253b42325daf34</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [4863634a157a8e4a0033734617253b42325daf34]) Ensure supplie
:from has precedence over scoped :from [&lt;a href=&quot;/projects/8994/tickets/1370&quot; title=&quot;Ticket #1370&quot;&gt;#1370&lt;/a&gt;
state:resolved] &lt;a href=&quot;http://github.com/rails/rails/commit/4863634a157a8e4a0033734617253b42325daf34&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-06T18:38:01+00:00</created-at>
      <creator-id type="integer">608</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1370</number>
      <permalink>activerecordbaseconstruct_finder_sql-gives-scopefrom-precedence-over-optionsfrom</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord patch</tag>
      <title>ActiveRecord::Base.construct_finder_sql gives scope[:from] precedence over options[:from]</title>
      <updated-at type="datetime">2009-03-06T18:38:02+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>John Wulff</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1370</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>992a8d852aa8bcc70625294a6a8c920adf7d7c8d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-13T23:03:39+00:00</created-at>
      <filename>diff.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">62089</id>
      <size type="integer">800</size>
      <uploader-id type="integer">608</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/62089/diff.diff</url>
    </attachment>
  </attachments>
</ticket>
