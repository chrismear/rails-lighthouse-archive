<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-15T05:02:56+01:00</created-at>
  <creator-id type="integer">22313</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">421</number>
  <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
  <priority type="integer">16660</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activesupport bug core_ext patch verified</tag>
  <title>Hash with indifferent access reverse merge problem</title>
  <updated-at type="datetime">2009-03-12T15:14:38+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">10</version>
  <user-name>Repository</user-name>
  <creator-name>David Lowenfels</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
  <priority-name nil="true"></priority-name>
  <original-body>My business partner Rodney ran into this isse the other day.
http://blog.internautdesign.com/2008/6/12/reverse_merge-on-params-issue

I think it is a bug, that violates the Principle of Least Surprise.

Loading development environment (Rails 2.1.0)
&gt;&gt; z = HashWithIndifferentAccess.new
=&gt; {}
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
=&gt; {:a=&gt;1}
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1, :a=&gt;1}

Reverse merging on a HashWithIndifferentAccess should return a new HashWithIndifferentAccess, not a normal hash.

The solution is to overload HashWithIndifferentAccess#reverse_merge:

&gt;&gt; class HashWithIndifferentAccess
&gt;&gt;   def reverse_merge(other_hash)
&gt;&gt;     self.class.new( other_hash.merge(self) )
&gt;&gt;   end
&gt;&gt; end
=&gt; nil
&gt;&gt; z = HashWithIndifferentAccess.new
=&gt; {}
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1}
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1}
&gt;&gt; 

I'm attaching a patch with a test</original-body>
  <latest-body>My business partner Rodney ran into this isse the other day.
http://blog.internautdesign.com/2008/6/12/reverse_merge-on-params-issue

I think it is a bug, that violates the Principle of Least Surprise.

Loading development environment (Rails 2.1.0)
&gt;&gt; z = HashWithIndifferentAccess.new
=&gt; {}
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
=&gt; {:a=&gt;1}
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1, :a=&gt;1}

Reverse merging on a HashWithIndifferentAccess should return a new HashWithIndifferentAccess, not a normal hash.

The solution is to overload HashWithIndifferentAccess#reverse_merge:

&gt;&gt; class HashWithIndifferentAccess
&gt;&gt;   def reverse_merge(other_hash)
&gt;&gt;     self.class.new( other_hash.merge(self) )
&gt;&gt;   end
&gt;&gt; end
=&gt; nil
&gt;&gt; z = HashWithIndifferentAccess.new
=&gt; {}
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1}
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1}
&gt;&gt; 

I'm attaching a patch with a test</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
My business partner Rodney ran into this isse the other day.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://blog.internautdesign.com/2008/6/12/reverse_merge-on-params-issue&quot;&gt;http://blog.internautdesign.com/...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
I think it is a bug, that violates the Principle of Least Surprise.
&lt;/p&gt;&lt;p&gt;
Loading development environment (Rails 2.1.0)
&lt;/p&gt;&lt;p&gt;
&gt;&gt; z = HashWithIndifferentAccess.new
&lt;/p&gt;&lt;p&gt;
=&gt; {}
&lt;/p&gt;&lt;p&gt;
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
&lt;/p&gt;&lt;p&gt;
=&gt; {:a=&gt;1}
&lt;/p&gt;&lt;p&gt;
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
&lt;/p&gt;&lt;p&gt;
=&gt; {&quot;a&quot;=&gt;1, :a=&gt;1}
&lt;/p&gt;&lt;p&gt;
Reverse merging on a HashWithIndifferentAccess should return a new HashWithIndifferentAccess, not a normal hash.
&lt;/p&gt;&lt;p&gt;
The solution is to overload HashWithIndifferentAccess#reverse_merge:
&lt;/p&gt;&lt;p&gt;
&gt;&gt; class HashWithIndifferentAccess
&lt;/p&gt;&lt;p&gt;
&gt;&gt;   def reverse_merge(other_hash)
&lt;/p&gt;&lt;p&gt;
&gt;&gt;     self.class.new( other_hash.merge(self) )
&lt;/p&gt;&lt;p&gt;
&gt;&gt;   end
&lt;/p&gt;&lt;p&gt;
&gt;&gt; end
&lt;/p&gt;&lt;p&gt;
=&gt; nil
&lt;/p&gt;&lt;p&gt;
&gt;&gt; z = HashWithIndifferentAccess.new
&lt;/p&gt;&lt;p&gt;
=&gt; {}
&lt;/p&gt;&lt;p&gt;
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
&lt;/p&gt;&lt;p&gt;
=&gt; {&quot;a&quot;=&gt;1}
&lt;/p&gt;&lt;p&gt;
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
&lt;/p&gt;&lt;p&gt;
=&gt; {&quot;a&quot;=&gt;1}
&lt;/p&gt;&lt;p&gt;
&gt;&gt;
&lt;/p&gt;&lt;p&gt;
I'm attaching a patch with a test
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My business partner Rodney ran into this isse the other day.
http://blog.internautdesign.com/2008/6/12/reverse_merge-on-params-issue

I think it is a bug, that violates the Principle of Least Surprise.

@@@ ruby
Loading development environment (Rails 2.1.0)
&gt;&gt; z = HashWithIndifferentAccess.new
=&gt; {}
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
=&gt; {:a=&gt;1}
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1, :a=&gt;1}
@@@
Reverse merging on a HashWithIndifferentAccess should return a new HashWithIndifferentAccess, not a normal hash.

The solution is to overload HashWithIndifferentAccess#reverse_merge:
@@@ ruby
&gt;&gt; class HashWithIndifferentAccess
&gt;&gt;   def reverse_merge(other_hash)
&gt;&gt;     self.class.new( other_hash.merge(self) )
&gt;&gt;   end
&gt;&gt; end
=&gt; nil
&gt;&gt; z = HashWithIndifferentAccess.new
=&gt; {}
&gt;&gt; z.reverse_merge!( :a =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1}
&gt;&gt; z.reverse_merge!( 'a' =&gt; 1 )
=&gt; {&quot;a&quot;=&gt;1}
&gt;&gt; 
@@@

I'm attaching a patch with a test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
My business partner Rodney ran into this isse the other day.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://blog.internautdesign.com/2008/6/12/reverse_merge-on-params-issue&quot;&gt;http://blog.internautdesign.com/...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
I think it is a bug, that violates the Principle of Least Surprise.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;Loading development environment (Rails 2.1.0)
&amp;gt;&amp;gt; z = HashWithIndifferentAccess.new
=&amp;gt; {}
&amp;gt;&amp;gt; z.reverse_merge!( :a =&amp;gt; 1 )
=&amp;gt; {:a=&amp;gt;1}
&amp;gt;&amp;gt; z.reverse_merge!( 'a' =&amp;gt; 1 )
=&amp;gt; {&amp;quot;a&amp;quot;=&amp;gt;1, :a=&amp;gt;1}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Reverse merging on a HashWithIndifferentAccess should return a new HashWithIndifferentAccess, not a normal hash.
&lt;/p&gt;&lt;p&gt;
The solution is to overload HashWithIndifferentAccess#reverse_merge:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&amp;gt;&amp;gt; class HashWithIndifferentAccess
&amp;gt;&amp;gt;   def reverse_merge(other_hash)
&amp;gt;&amp;gt;     self.class.new( other_hash.merge(self) )
&amp;gt;&amp;gt;   end
&amp;gt;&amp;gt; end
=&amp;gt; nil
&amp;gt;&amp;gt; z = HashWithIndifferentAccess.new
=&amp;gt; {}
&amp;gt;&amp;gt; z.reverse_merge!( :a =&amp;gt; 1 )
=&amp;gt; {&amp;quot;a&amp;quot;=&amp;gt;1}
&amp;gt;&amp;gt; z.reverse_merge!( 'a' =&amp;gt; 1 )
=&amp;gt; {&amp;quot;a&amp;quot;=&amp;gt;1}
&amp;gt;&amp;gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I'm attaching a patch with a test.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-15T06:23:48+01:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2008-06-15T06:23:48+01:00</updated-at>
      <user-id type="integer">22313</user-id>
      <version type="integer">1</version>
      <user-name>David Lowenfels</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 This is rather unexpected behavior. Given that Ruby tries to do the least surprising thing, shouldn't we fix this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 This is rather unexpected behavior. Given that Ruby tries to
do the least surprising thing, shouldn't we fix this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T03:14:48+01:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2008-10-23T16:26:48+01:00</updated-at>
      <user-id type="integer">17912</user-id>
      <version type="integer">2</version>
      <user-name>DrMark</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 Yes, this caused me hours of frustration.  Indifferent access should happen on both getting and setting.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1 Yes, this caused me hours of frustration.  Indifferent access should happen on both getting and setting.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-08T23:46:46+01:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2008-07-08T23:46:46+01:00</updated-at>
      <user-id type="integer">25694</user-id>
      <version type="integer">3</version>
      <user-name>Rodney Carvalho</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>this does seem to be inconsistent with how the HashWithIndifferentAccess class is intended to work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
this does seem to be inconsistent with how the HashWithIndifferentAccess class is intended to work.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-23T03:04:57+01:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2008-07-23T03:04:57+01:00</updated-at>
      <user-id type="integer">26889</user-id>
      <version type="integer">4</version>
      <user-name>Gregory Tomei</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1  Agreed, this would be a serious improvement.  The current behavior leads to difficult-to-trace bugs.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1  Agreed, this would be a serious improvement.  The current behavior leads to difficult-to-trace bugs.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-23T05:53:44+01:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2008-07-23T05:53:44+01:00</updated-at>
      <user-id type="integer">26899</user-id>
      <version type="integer">5</version>
      <user-name>H@rlan Knight</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-29T02:22:15+01:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2008-07-29T02:22:15+01:00</updated-at>
      <user-id type="integer">27414</user-id>
      <version type="integer">6</version>
      <user-name>Noah Thorp</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1  Just ran into this problem this morning with some failing tests - unexpected behavior</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 Just ran into this problem this morning with some failing
tests - unexpected behavior&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-27T15:10:50+00:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2008-10-27T15:10:51+00:00</updated-at>
      <user-id type="integer">20082</user-id>
      <version type="integer">7</version>
      <user-name>Brad Folkens</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have a slightly different take on this now, some of my tests on my app started failing with the previous patch.

This updated version seems to work for additional cases but for some reason I can't get the activesupport tests to break (proving this update works).  The problem seems to occur in the full rails stack when it is more than just the simple case being merged.

Solution is to convert the hash passed into reverse_merge into HashWithIndifferentAccess first, then merge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a slightly different take on this now, some of my tests
on my app started failing with the previous patch.&lt;/p&gt;
&lt;p&gt;This updated version seems to work for additional cases but for
some reason I can't get the activesupport tests to break (proving
this update works). The problem seems to occur in the full rails
stack when it is more than just the simple case being merged.&lt;/p&gt;
&lt;p&gt;Solution is to convert the hash passed into reverse_merge into
HashWithIndifferentAccess first, then merge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-09T16:23:48+00:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport bug core_ext patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch verified</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2009-01-09T16:23:54+00:00</updated-at>
      <user-id type="integer">20082</user-id>
      <version type="integer">8</version>
      <user-name>Brad Folkens</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I have modified the second patch a bit further by re-using the underlying implementation of reverse_merge rather than dublicating it again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have modified the second patch a bit further by re-using the
underlying implementation of reverse_merge rather than dublicating
it again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-16T20:36:38+00:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug core_ext patch verified</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2009-01-16T20:36:43+00:00</updated-at>
      <user-id type="integer">43942</user-id>
      <version type="integer">9</version>
      <user-name>Dmitry Ratnikov</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [aa57e66fec3a131f5d246b8950a2c3286f858b78]) Ensure HWIA#reverse_merge! retrurns HWIA [#421 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/aa57e66fec3a131f5d246b8950a2c3286f858b78</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [aa57e66fec3a131f5d246b8950a2c3286f858b78]) Ensure
HWIA#reverse_merge! retrurns HWIA [&lt;a href=&quot;/projects/8994/tickets/421&quot; title=&quot;Ticket #421&quot;&gt;#421&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/aa57e66fec3a131f5d246b8950a2c3286f858b78&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T15:14:36+00:00</created-at>
      <creator-id type="integer">22313</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">421</number>
      <permalink>hash-with-indifferent-access-reverse-merge-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport bug core_ext patch verified</tag>
      <title>Hash with indifferent access reverse merge problem</title>
      <updated-at type="datetime">2009-03-12T15:14:38+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">10</version>
      <user-name>Repository</user-name>
      <creator-name>David Lowenfels</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/421</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4f9567818c97abb9825066ca48c1aaf6984f4be8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-15T05:02:57+01:00</created-at>
      <filename>fix-indifferent-hash-reverse-merge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">27490</id>
      <size type="integer">2051</size>
      <uploader-id type="integer">22313</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/27490/fix-indifferent-hash-reverse-merge.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>0ac187475e73a7d2374dc8835045122b120c150a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-09T16:23:48+00:00</created-at>
      <filename>fix-indifferent-hash-reverse-merge-1.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">76866</id>
      <size type="integer">2058</size>
      <uploader-id type="integer">20082</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/76866/fix-indifferent-hash-reverse-merge-1.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>0c58bd72cc35a87c05c97eced70e443fd14a535b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-16T20:36:38+00:00</created-at>
      <filename>fix-indifferent-hash-reverse-merge-2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">79222</id>
      <size type="integer">3252</size>
      <uploader-id type="integer">43942</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/79222/fix-indifferent-hash-reverse-merge-2.diff</url>
    </attachment>
  </attachments>
</ticket>
