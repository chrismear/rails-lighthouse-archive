From 2b82b2b9e7ce793e6e24ef838f9801342cf15ee7 Mon Sep 17 00:00:00 2001
From: pivotal <pivotal@camp.flood.pivotallabs.com>
Date: Tue, 28 Jul 2009 15:33:51 -0700
Subject: [PATCH] Fixed HTTP digest to properly return 401 when the Authorization header has no nonce specified, or the Authorization header specifies Basic auth.

---
 .../lib/action_controller/http_authentication.rb   |    1 +
 .../controller/http_digest_authentication_test.rb  |   24 +++++++++++++++++++-
 2 files changed, 24 insertions(+), 1 deletions(-)

diff --git a/actionpack/lib/action_controller/http_authentication.rb b/actionpack/lib/action_controller/http_authentication.rb
index 88c289b..1221ffb 100644
--- a/actionpack/lib/action_controller/http_authentication.rb
+++ b/actionpack/lib/action_controller/http_authentication.rb
@@ -288,6 +288,7 @@ module ActionController
       # allow a user to use new nonce without prompting user again for their
       # username and password.
       def validate_nonce(request, value, seconds_to_timeout=5*60)
+        return false if value.nil?
         t = Base64.decode64(value).split(":").first.to_i
         nonce(t) == value && (t - Time.now.to_i).abs <= seconds_to_timeout
       end
diff --git a/actionpack/test/controller/http_digest_authentication_test.rb b/actionpack/test/controller/http_digest_authentication_test.rb
index 5cc47ee..a0ceada 100644
--- a/actionpack/test/controller/http_digest_authentication_test.rb
+++ b/actionpack/test/controller/http_digest_authentication_test.rb
@@ -92,6 +92,23 @@ class HttpDigestAuthenticationTest < ActionController::TestCase
     assert_equal "Authentication Failed", @response.body
   end
 
+  test "authentication request with missing nonce should return 401" do
+    @request.env['HTTP_AUTHORIZATION'] = encode_credentials(:username => 'pretty', :password => 'please', :remove_nonce => true)
+    get :display
+
+    assert_response :unauthorized
+    assert_equal "Authentication Failed", @response.body
+  end
+
+  test "authentication request with Basic auth credentials should return 401" do
+    ActionController::Base.session_options[:secret] = "session_options_secret"
+    @request.env['HTTP_AUTHORIZATION'] = ActionController::HttpAuthentication::Basic.encode_credentials('pretty', 'please')
+    get :display
+
+    assert_response :unauthorized
+    assert_equal "Authentication Failed", @response.body
+  end
+
   test "authentication request with invalid opaque" do
     @request.env['HTTP_AUTHORIZATION'] = encode_credentials(:username => 'pretty', :password => 'foo', :opaque => "xxyyzz")
     get :display
@@ -197,13 +214,18 @@ class HttpDigestAuthenticationTest < ActionController::TestCase
 
     assert_response :unauthorized
 
+    remove_nonce = options.delete(:remove_nonce)
+
     credentials = decode_credentials(@response.headers['WWW-Authenticate'])
     credentials.merge!(options)
     credentials.reverse_merge!(:uri => "#{@request.env['REQUEST_URI']}")
+
+    credentials.delete(:nonce) if remove_nonce
+
     ActionController::HttpAuthentication::Digest.encode_credentials(method, credentials, password, options[:password_is_ha1])
   end
 
   def decode_credentials(header)
     ActionController::HttpAuthentication::Digest.decode_credentials(@response.headers['WWW-Authenticate'])
   end
-end
\ No newline at end of file
+end
-- 
1.6.1

