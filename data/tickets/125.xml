<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-06T19:10:31+01:00</created-at>
  <creator-id type="integer">7844</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">125</number>
  <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
  <priority type="integer">11202</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord eager_loading edge patch sti</tag>
  <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
  <updated-at type="datetime">2008-05-11T22:16:54+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">9</version>
  <user-name>Repository</user-name>
  <creator-name>Denis Barushev</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
  <priority-name nil="true"></priority-name>
  <original-body>When association is declared in superclass eager loading of this association produces one query for each subclass. Example:

*Update edge Rails and generate empty project:*
@@@
cd ~/dev/ruby/rails/
git pull
ruby railties/bin/rails ~/dev/test/eager
ln -s ~/dev/ruby/rails ~/dev/test/eager/vendor
cd ~/dev/test/eager/
@@@
*Generate models:*
@@@
./script/generate model User name:string
./script/generate model Asset type:string user_id:integer

rake db:migrate
@@@
*app/models:*
@@@ ruby
class User &lt; ActiveRecord::Base
  has_many :assets
end

class Asset &lt; ActiveRecord::Base
  belongs_to :user
end

class Image &lt; Asset
end

class Audio &lt; Asset
end

class Video &lt; Asset
end
@@@
*Console session:*
*Prepare data:*
@@@
&gt;&gt; User.create
&gt;&gt; User.create
&gt;&gt; Image.create :user =&gt; User.first
&gt;&gt; Image.create :user =&gt; User.last
&gt;&gt; Audio.create :user =&gt; User.first
&gt;&gt; Video.create :user =&gt; User.first
@@@
*Find all Assets with user preloading:*
@@@
&gt;&gt; Asset.find :all, :include =&gt; :user
@@@
*Produces queries:*
@@@
  Asset Load (0.002034)   SELECT * FROM &quot;assets&quot;
  User Load (0.001601)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('6','5'))
  User Load (0.001147)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('5'))
  User Load (0.001194)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('5'))
@@@

I think when association is declared in superclass it must be only one query to preload it, not one for each subclass. Such as:
@@@
  Asset Load (0.002034)   SELECT * FROM &quot;assets&quot;
  User Load (0.001601)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('6','5'))
@@@</original-body>
  <latest-body>When association is declared in superclass eager loading of this association produces one query for each subclass. Example:

*Update edge Rails and generate empty project:*
@@@
cd ~/dev/ruby/rails/
git pull
ruby railties/bin/rails ~/dev/test/eager
ln -s ~/dev/ruby/rails ~/dev/test/eager/vendor
cd ~/dev/test/eager/
@@@
*Generate models:*
@@@
./script/generate model User name:string
./script/generate model Asset type:string user_id:integer

rake db:migrate
@@@
*app/models:*
@@@ ruby
class User &lt; ActiveRecord::Base
  has_many :assets
end

class Asset &lt; ActiveRecord::Base
  belongs_to :user
end

class Image &lt; Asset
end

class Audio &lt; Asset
end

class Video &lt; Asset
end
@@@
*Console session:*
*Prepare data:*
@@@
&gt;&gt; User.create
&gt;&gt; User.create
&gt;&gt; Image.create :user =&gt; User.first
&gt;&gt; Image.create :user =&gt; User.last
&gt;&gt; Audio.create :user =&gt; User.first
&gt;&gt; Video.create :user =&gt; User.first
@@@
*Find all Assets with user preloading:*
@@@
&gt;&gt; Asset.find :all, :include =&gt; :user
@@@
*Produces queries:*
@@@
  Asset Load (0.002034)   SELECT * FROM &quot;assets&quot;
  User Load (0.001601)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('6','5'))
  User Load (0.001147)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('5'))
  User Load (0.001194)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('5'))
@@@

I think when association is declared in superclass it must be only one query to preload it, not one for each subclass. Such as:
@@@
  Asset Load (0.002034)   SELECT * FROM &quot;assets&quot;
  User Load (0.001601)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('6','5'))
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When association is declared in superclass eager loading of this association produces one query for each subclass. Example:
&lt;/p&gt;&lt;p&gt;
&lt;strong&gt;Update edge Rails and generate empty project:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;cd ~/dev/ruby/rails/
git pull
ruby railties/bin/rails ~/dev/test/eager
ln -s ~/dev/ruby/rails ~/dev/test/eager/vendor
cd ~/dev/test/eager/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Generate models:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;./script/generate model User name:string
./script/generate model Asset type:string user_id:integer

rake db:migrate&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;app/models:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_many :assets
end

class Asset &amp;lt; ActiveRecord::Base
  belongs_to :user
end

class Image &amp;lt; Asset
end

class Audio &amp;lt; Asset
end

class Video &amp;lt; Asset
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Console session:&lt;/strong&gt;
&lt;/p&gt;&lt;p&gt;
&lt;strong&gt;Prepare data:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; User.create
&amp;gt;&amp;gt; User.create
&amp;gt;&amp;gt; Image.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Image.create :user =&amp;gt; User.last
&amp;gt;&amp;gt; Audio.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Video.create :user =&amp;gt; User.first&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Find all Assets with user preloading:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; Asset.find :all, :include =&amp;gt; :user&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Produces queries:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  Asset Load (0.002034)   SELECT * FROM &amp;quot;assets&amp;quot;
  User Load (0.001601)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('6','5'))
  User Load (0.001147)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('5'))
  User Load (0.001194)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('5'))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I think when association is declared in superclass it must be only one query to preload it, not one for each subclass. Such as:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  Asset Load (0.002034)   SELECT * FROM &amp;quot;assets&amp;quot;
  User Load (0.001601)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('6','5'))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When association is declared in superclass eager loading of this association produces one query for each subclass. Example:

*Update edge Rails and generate empty project:*
@@@
cd ~/dev/ruby/rails/
git pull
ruby railties/bin/rails ~/dev/test/eager
ln -s ~/dev/ruby/rails ~/dev/test/eager/vendor
cd ~/dev/test/eager/
@@@
*Generate models:*
@@@
./script/generate model User name:string
./script/generate model Asset type:string user_id:integer

rake db:migrate
@@@
*app/models:*
@@@ ruby
class User &lt; ActiveRecord::Base
  has_many :assets
end

class Asset &lt; ActiveRecord::Base
  belongs_to :user
end

class Image &lt; Asset
end

class Audio &lt; Asset
end

class Video &lt; Asset
end
@@@
*Console session:*
*Prepare data:*
@@@
&gt;&gt; User.create
&gt;&gt; User.create
&gt;&gt; Image.create :user =&gt; User.first
&gt;&gt; Image.create :user =&gt; User.last
&gt;&gt; Audio.create :user =&gt; User.first
&gt;&gt; Video.create :user =&gt; User.first
@@@
*Find all Assets with user preloading:*
@@@
&gt;&gt; Asset.find :all, :include =&gt; :user
@@@
*Produces queries:*
@@@
  Asset Load (0.002034)   SELECT * FROM &quot;assets&quot;
  User Load (0.001601)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('6','5'))
  User Load (0.001147)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('5'))
  User Load (0.001194)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('5'))
@@@

I think when association is declared in superclass it must be only one query to preload it, not one for each subclass. Such as:
@@@
  Asset Load (0.002034)   SELECT * FROM &quot;assets&quot;
  User Load (0.001601)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('6','5'))
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When association is declared in superclass eager loading of this association produces one query for each subclass. Example:
&lt;/p&gt;&lt;p&gt;
&lt;strong&gt;Update edge Rails and generate empty project:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;cd ~/dev/ruby/rails/
git pull
ruby railties/bin/rails ~/dev/test/eager
ln -s ~/dev/ruby/rails ~/dev/test/eager/vendor
cd ~/dev/test/eager/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Generate models:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;./script/generate model User name:string
./script/generate model Asset type:string user_id:integer

rake db:migrate&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;app/models:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_many :assets
end

class Asset &amp;lt; ActiveRecord::Base
  belongs_to :user
end

class Image &amp;lt; Asset
end

class Audio &amp;lt; Asset
end

class Video &amp;lt; Asset
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Console session:&lt;/strong&gt;
&lt;/p&gt;&lt;p&gt;
&lt;strong&gt;Prepare data:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; User.create
&amp;gt;&amp;gt; User.create
&amp;gt;&amp;gt; Image.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Image.create :user =&amp;gt; User.last
&amp;gt;&amp;gt; Audio.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Video.create :user =&amp;gt; User.first&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Find all Assets with user preloading:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; Asset.find :all, :include =&amp;gt; :user&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Produces queries:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  Asset Load (0.002034)   SELECT * FROM &amp;quot;assets&amp;quot;
  User Load (0.001601)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('6','5'))
  User Load (0.001147)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('5'))
  User Load (0.001194)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('5'))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I think when association is declared in superclass it must be only one query to preload it, not one for each subclass. Such as:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  Asset Load (0.002034)   SELECT * FROM &amp;quot;assets&amp;quot;
  User Load (0.001601)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('6','5'))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-06T19:10:31+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-06T19:10:31+01:00</updated-at>
      <user-id type="integer">7844</user-id>
      <version type="integer">1</version>
      <user-name>Denis Barushev</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well [http://dev.rubyonrails.org/ticket/11154][this ticket] is why the current behaviour is what it is. I can't think off the top of my head whether that the ticket and what you've noticed can easily be reconciled.

Whatever it is, the fix is likely to be in preload_one_association where it does records.group_by(&amp;:class); if it can be determined when this partitoning is not necessary and fall back.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Well [&lt;a href=&quot;http://dev.rubyonrails.org/ticket/11154&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;][this ticket] is why the current behaviour is what it is. I can't think off the top of my head whether that the ticket and what you've noticed can easily be reconciled.
&lt;/p&gt;&lt;p&gt;
Whatever it is, the fix is likely to be in preload_one_association where it does records.group_by(&amp;:class); if it can be determined when this partitoning is not necessary and fall back.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-06T22:51:45+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-06T22:51:45+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I believe this does the trick. Would be good for those bitten by this to try it out</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I believe this does the trick. Would be good for those bitten by this to try it out
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-07T00:16:06+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-07T00:16:06+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There seems to be an unused &quot;class_to_reflection = {}&quot; there, planning to cache the reflection for each cache?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
There seems to be an unused &quot;class_to_reflection = {}&quot; there, planning to cache the reflection for each cache?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-07T20:23:07+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-07T20:23:07+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">4</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>D'oh, somehow manager to produce a patch with not the final version (and mix that in with a patch from another ticket I'd applied locally to test - no idea how that happened!). I think I have untangled my git-tardedness now</body>
      <body-html>&lt;div&gt;&lt;p&gt;
D'oh, somehow manager to produce a patch with not the final version (and mix that in with a patch from another ticket I'd applied locally to test - no idea how that happened!). I think I have untangled my git-tardedness now
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-07T00:30:23+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-07T00:30:23+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">5</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm not good familiar with Rails sources, but I fixed this problem. See path.

Manual test:
@@@ ruby
class Asset &lt; ActiveRecord::Base
  belongs_to :user
end

class Image &lt; Asset
end

class Audio &lt; Asset
end

class Video &lt; Asset
end


class Asset1 &lt; ActiveRecord::Base
  belongs_to :user
end

class Image1 &lt; Asset1
end

class Audio1 &lt; Asset1
  belongs_to :user
end

class Video1 &lt; Asset1
end
@@@
@@@
&gt;&gt; Asset.destroy_all
&gt;&gt; Asset1.destroy_all

&gt;&gt; Audio.create :user =&gt; User.first
&gt;&gt; Audio.create :user =&gt; User.last
&gt;&gt; Video.create :user =&gt; User.first
&gt;&gt; Image.create :user =&gt; User.first

&gt;&gt; Audio1.create :user =&gt; User.first
&gt;&gt; Audio1.create :user =&gt; User.last
&gt;&gt; Video1.create :user =&gt; User.first
&gt;&gt; Image1.create :user =&gt; User.first

&gt;&gt; Asset.all :include =&gt; :user
&gt;&gt; Asset1.all :include =&gt; :user
@@@
*SQL-queries:*
@@@
  Asset Load (0.003225)   SELECT * FROM &quot;assets&quot;
  User Load (0.001348)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('1','2'))

  Asset1 Load (0.001352)   SELECT * FROM &quot;asset1s&quot;
  User Load (0.000919)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('1','2'))
  User Load (0.000703)   SELECT * FROM &quot;users&quot; WHERE (&quot;users&quot;.id IN ('1'))
@@@

How test this behavior in Test::Unit?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm not good familiar with Rails sources, but I fixed this problem. See path.
&lt;/p&gt;&lt;p&gt;
Manual test:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Asset &amp;lt; ActiveRecord::Base
  belongs_to :user
end

class Image &amp;lt; Asset
end

class Audio &amp;lt; Asset
end

class Video &amp;lt; Asset
end


class Asset1 &amp;lt; ActiveRecord::Base
  belongs_to :user
end

class Image1 &amp;lt; Asset1
end

class Audio1 &amp;lt; Asset1
  belongs_to :user
end

class Video1 &amp;lt; Asset1
end&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; Asset.destroy_all
&amp;gt;&amp;gt; Asset1.destroy_all

&amp;gt;&amp;gt; Audio.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Audio.create :user =&amp;gt; User.last
&amp;gt;&amp;gt; Video.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Image.create :user =&amp;gt; User.first

&amp;gt;&amp;gt; Audio1.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Audio1.create :user =&amp;gt; User.last
&amp;gt;&amp;gt; Video1.create :user =&amp;gt; User.first
&amp;gt;&amp;gt; Image1.create :user =&amp;gt; User.first

&amp;gt;&amp;gt; Asset.all :include =&amp;gt; :user
&amp;gt;&amp;gt; Asset1.all :include =&amp;gt; :user&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;SQL-queries:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;  Asset Load (0.003225)   SELECT * FROM &amp;quot;assets&amp;quot;
  User Load (0.001348)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('1','2'))

  Asset1 Load (0.001352)   SELECT * FROM &amp;quot;asset1s&amp;quot;
  User Load (0.000919)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('1','2'))
  User Load (0.000703)   SELECT * FROM &amp;quot;users&amp;quot; WHERE (&amp;quot;users&amp;quot;.id IN ('1'))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
How test this behavior in Test::Unit?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-07T20:22:43+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Eager loading load association for every STI subclass when it is declared in superclass
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATH] Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-07T20:22:43+01:00</updated-at>
      <user-id type="integer">7844</user-id>
      <version type="integer">6</version>
      <user-name>Denis Barushev</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>See the patch I attached :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
See the patch I attached :-)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-07T10:51:08+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-07T10:51:08+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">7</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Oops, I haven't seen your patches. Lighthouse doesn't have intuitive interface.
Sorry :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Oops, I haven't seen your patches. Lighthouse doesn't have intuitive interface.
&lt;/p&gt;&lt;p&gt;
Sorry :)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-07T20:23:03+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Eager loading load association for every STI subclass when it is declared in superclass
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATH] Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-07T20:23:03+01:00</updated-at>
      <user-id type="integer">7844</user-id>
      <version type="integer">8</version>
      <user-name>Denis Barushev</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [236f0bb67adecbc1e6dac5258e4a8cb310ffd7a4]) When preloading group by reflection rather than by class [#125 state:resolved]

This avoids extra queries when several subclasses inherit the association
from their parent class, while still coping with subclasses redefining
associations.

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/236f0bb67adecbc1e6dac5258e4a8cb310ffd7a4</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [236f0bb67adecbc1e6dac5258e4a8cb310ffd7a4]) When preloading group by reflection rather than by class [#125 state:resolved]
&lt;/p&gt;&lt;p&gt;
This avoids extra queries when several subclasses inherit the association
&lt;/p&gt;&lt;p&gt;
from their parent class, while still coping with subclasses redefining
&lt;/p&gt;&lt;p&gt;
associations.
&lt;/p&gt;&lt;p&gt;
Signed-off-by: Pratik Naik 
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/236f0bb67adecbc1e6dac5258e4a8cb310ffd7a4&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-11T22:16:54+01:00</created-at>
      <creator-id type="integer">7844</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:title: &quot;[PATH] Eager loading load association for every STI subclass when it is declared in superclass&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">125</number>
      <permalink>eager-loading-load-association-for-every-sti-subclass-when-it-is-declared-in-superclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Eager loading load association for every STI subclass when it is declared in superclass</title>
      <updated-at type="datetime">2008-05-11T22:16:54+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>Denis Barushev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/125</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>70c238a1559489ddd2f7f9b0829c3dcef6589f0a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-07T00:16:06+01:00</created-at>
      <filename>dont_preload_sti_subclasses_separately_unnecessarily.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21806</id>
      <size type="integer">6752</size>
      <uploader-id type="integer">17477</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21806/dont_preload_sti_subclasses_separately_unnecessarily.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d2ae6bb91df1a2215c6bc03f4b17ec5d805422ab</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-07T00:30:24+01:00</created-at>
      <filename>0001-When-preloading-group-by-reflection-rather-than-by-c.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21812</id>
      <size type="integer">2665</size>
      <uploader-id type="integer">17477</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21812/0001-When-preloading-group-by-reflection-rather-than-by-c.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>c249e62d0965db8df52b2e3fbad7ad538eef0002</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-07T10:41:56+01:00</created-at>
      <filename>fix-eager-loading-association-for-every-sti-subclass.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21867</id>
      <size type="integer">1387</size>
      <uploader-id type="integer">7844</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21867/fix-eager-loading-association-for-every-sti-subclass.diff</url>
    </attachment>
  </attachments>
</ticket>
