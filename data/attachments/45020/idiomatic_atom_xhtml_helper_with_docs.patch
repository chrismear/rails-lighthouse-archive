From 6043c4374c04e8bb8f4f06eb07d45b07fb31c35b Mon Sep 17 00:00:00 2001
From: Sam Ruby <rubys@intertwingly.net>
Date: Wed, 10 Sep 2008 08:51:11 -0400
Subject: [PATCH] Add XHTML support to the atom_feed_helper

---
 .../lib/action_view/helpers/atom_feed_helper.rb    |   54 +++++++++++++++++---
 actionpack/test/template/atom_feed_helper_test.rb  |   30 +++++++++++
 2 files changed, 76 insertions(+), 8 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/atom_feed_helper.rb b/actionpack/lib/action_view/helpers/atom_feed_helper.rb
index e65d5d1..fdaf7dc 100644
--- a/actionpack/lib/action_view/helpers/atom_feed_helper.rb
+++ b/actionpack/lib/action_view/helpers/atom_feed_helper.rb
@@ -74,8 +74,20 @@ module ActionView
       #       end
       #     end
       #
+      # The Atom spec defines five elements (content rights title subtitle
+      # summary) which may directly contain xhtml content if :type => 'xhtml'
+      # is specified as an attribute.  If so, this helper will take care of
+      # the enclosing div and xhtml namespace declaration.  Example usage:
       #
-      # atom_feed yields an AtomFeedBuilder instance.
+      #    entry.summary :type => 'xhtml' do |xhtml|
+      #      xhtml.p pluralize(order.line_items.count, "line item")
+      #      xhtml.p "Shipped to #{order.address}"
+      #      xhtml.p "Paid by #{order.pay_type}"
+      #    end
+      #
+      #
+      # atom_feed yields an AtomFeedBuilder instance.  Nested elements yield
+      # an AtomBuilder instance.
       def atom_feed(options = {}, &block)
         if options[:schema_date]
           options[:schema_date] = options[:schema_date].strftime("%Y-%m-%d") if options[:schema_date].respond_to?(:strftime)
@@ -98,8 +110,38 @@ module ActionView
         end
       end
 
+      class AtomBuilder
+        def initialize(xml)
+          @xml = xml
+        end
 
-      class AtomFeedBuilder
+        private
+          # Delegate to xml builder, first wrapping the element in a xhtml
+          # namespaced div element if the method and arguments indicate
+          # that an xhtml_block? is desired.
+          def method_missing(method, *arguments, &block)
+            if xhtml_block?(method, arguments)
+              @xml.__send__(method, *arguments) do
+                @xml.div(:xmlns => 'http://www.w3.org/1999/xhtml') do |xhtml|
+                  block.call(xhtml)
+                end
+              end
+            else
+              @xml.__send__(method, *arguments, &block)
+            end
+          end
+          
+          # True if the method name matches one of the five elements defined
+          # in the Atom spec as potentially containing XHTML content and
+          # if :type => 'xhtml' is, in fact, specified.
+          def xhtml_block?(method, arguments)
+            %w( content rights title subtitle summary ).include?(method.to_s) && 
+                arguments.last.respond_to?(:[]) && 
+                  arguments.last[:type].to_s == 'xhtml'
+          end
+      end
+
+      class AtomFeedBuilder < AtomBuilder
         def initialize(xml, view, feed_options = {})
           @xml, @view, @feed_options = xml, view, feed_options
         end
@@ -131,15 +173,11 @@ module ActionView
 
             @xml.link(:rel => 'alternate', :type => 'text/html', :href => options[:url] || @view.polymorphic_url(record))
 
-            yield @xml
+            yield AtomBuilder.new(@xml)
           end
         end
-
-        private
-          def method_missing(method, *arguments, &block)
-            @xml.__send__(method, *arguments, &block)
-          end
       end
+
     end
   end
 end
diff --git a/actionpack/test/template/atom_feed_helper_test.rb b/actionpack/test/template/atom_feed_helper_test.rb
index ef31ab2..151335b 100644
--- a/actionpack/test/template/atom_feed_helper_test.rb
+++ b/actionpack/test/template/atom_feed_helper_test.rb
@@ -92,6 +92,28 @@ class ScrollsController < ActionController::Base
           end
         end
     EOT
+    FEEDS["feed_with_xhtml_content"] = <<-'EOT'
+        atom_feed do |feed|
+          feed.title("My great blog!")
+          feed.updated((@scrolls.first.created_at))
+
+          for scroll in @scrolls
+            feed.entry(scroll) do |entry|
+              entry.title(scroll.title)
+              entry.summary(:type => 'xhtml') do |xhtml|
+                xhtml.p "before #{scroll.id}"
+                xhtml.p {xhtml << scroll.body}
+                xhtml.p "after #{scroll.id}"
+              end
+              entry.tag!('app:edited', Time.now)
+
+              entry.author do |author|
+                author.name("DHH")
+              end
+            end
+          end
+        end
+    EOT
   def index
     @scrolls = [
       Scroll.new(1, "1", "Hello One", "Something <i>COOL!</i>", Time.utc(2007, 12, 12, 15), Time.utc(2007, 12, 12, 15)),
@@ -194,6 +216,14 @@ class AtomFeedTest < Test::Unit::TestCase
     end
   end
 
+  def test_feed_xhtml
+    with_restful_routing(:scrolls) do
+      get :index, :id => "feed_with_xhtml_content"
+      assert_match %r{xmlns="http://www.w3.org/1999/xhtml"}, @response.body
+      assert_select "summary div p", :text => "Something Boring"
+      assert_select "summary div p", :text => "after 2"
+    end
+  end
 private
     def with_restful_routing(resources)
       with_routing do |set|
-- 
1.5.2.5

