<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-12T22:18:52+01:00</created-at>
  <creator-id type="integer">40279</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5368</number>
  <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>rails3</tag>
  <title>weird behavior on expire_page when you are running under namespace</title>
  <updated-at type="datetime">2011-01-27T06:36:40+00:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">12</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Daniel Lopes</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
  <priority-name>Low</priority-name>
  <original-body>[This ticket is not a bug, somebody could close it?]

Today when I'm testing Rails 3.0 I found a behavior that I think is bug.

If you have a blog with an admin and public area like below:

@@@ ruby
  namespace :admin do
    resources :posts
  end

  resources :posts
@@@

And create a sweeper like:

@@@ ruby

class PostSweeper &lt; ActionController::Caching::Sweeper
  def after_save(resource)
    expire_cache(resource)
  end

  def after_destroy(resource)
    expire_cache(resource)
  end

  def expire_cache(resource)
    expire_page :controller =&gt; &quot;posts&quot;, :action =&gt; &quot;show&quot;
  end
end

@@@

If you set this sweeper in Admin::PostsController and do a change in the post from Admin namespace Rails will try to expire:

*/developer/app/public/admin/posts/1-rails-3-0-rc.html*

And not:

*/developer/app/public/posts/1-rails-3-0-rc.html*

When I look the code of expire_page I found this:

http://apidock.com/rails/ActionController/Caching/Pages/ClassMethods/page_cache_file

This method will use the URI to set the path for the file which ends with the weird behavior above. Don't you guy think this is a bug?</original-body>
  <latest-body>[This ticket is not a bug, somebody could close it?]

Today when I'm testing Rails 3.0 I found a behavior that I think is bug.

If you have a blog with an admin and public area like below:

@@@ ruby
  namespace :admin do
    resources :posts
  end

  resources :posts
@@@

And create a sweeper like:

@@@ ruby

class PostSweeper &lt; ActionController::Caching::Sweeper
  def after_save(resource)
    expire_cache(resource)
  end

  def after_destroy(resource)
    expire_cache(resource)
  end

  def expire_cache(resource)
    expire_page :controller =&gt; &quot;posts&quot;, :action =&gt; &quot;show&quot;
  end
end

@@@

If you set this sweeper in Admin::PostsController and do a change in the post from Admin namespace Rails will try to expire:

*/developer/app/public/admin/posts/1-rails-3-0-rc.html*

And not:

*/developer/app/public/posts/1-rails-3-0-rc.html*

When I look the code of expire_page I found this:

http://apidock.com/rails/ActionController/Caching/Pages/ClassMethods/page_cache_file

This method will use the URI to set the path for the file which ends with the weird behavior above. Don't you guy think this is a bug?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;[This ticket is not a bug, somebody could close it?]&lt;/p&gt;
&lt;p&gt;Today when I'm testing Rails 3.0 I found a behavior that I think
is bug.&lt;/p&gt;
&lt;p&gt;If you have a blog with an admin and public area like below:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  namespace :admin do
    resources :posts
  end

  resources :posts&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And create a sweeper like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class PostSweeper &amp;lt; ActionController::Caching::Sweeper
  def after_save(resource)
    expire_cache(resource)
  end

  def after_destroy(resource)
    expire_cache(resource)
  end

  def expire_cache(resource)
    expire_page :controller =&amp;gt; &quot;posts&quot;, :action =&amp;gt; &quot;show&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you set this sweeper in Admin::PostsController and do a
change in the post from Admin namespace Rails will try to
expire:&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;/developer/app/public/admin/posts/1-rails-3-0-rc.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And not:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/developer/app/public/posts/1-rails-3-0-rc.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I look the code of expire_page I found this:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://apidock.com/rails/ActionController/Caching/Pages/ClassMethods/page_cache_file&quot;&gt;
http://apidock.com/rails/ActionController/Caching/Pages/ClassMethod...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This method will use the URI to set the path for the file which
ends with the weird behavior above. Don't you guy think this is a
bug?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[This ticket is not a bug, somebody could close it?]

Today when I'm testing Rails 3.0 I found a behavior that I think is bug.

If you have a blog with an admin and public area like below:

@@@ ruby
  namespace :admin do
    resources :posts
  end

  resources :posts
@@@

And create a sweeper like:

@@@ ruby

class PostSweeper &lt; ActionController::Caching::Sweeper
  def after_save(resource)
    expire_cache(resource)
  end

  def after_destroy(resource)
    expire_cache(resource)
  end

  def expire_cache(resource)
    expire_page :controller =&gt; &quot;posts&quot;, :action =&gt; &quot;show&quot;
  end
end

@@@

If you set this sweeper in Admin::PostsController and do a change in the post from Admin namespace Rails will try to expire:

*/developer/app/public/admin/posts/1-rails-3-0-rc.html*

And not:

*/developer/app/public/posts/1-rails-3-0-rc.html*

When I look the code of expire_page I found this:

http://apidock.com/rails/ActionController/Caching/Pages/ClassMethods/page_cache_file

This method will use the URI to set the path for the file which ends with the weird behavior above. Don't you guy think this is a bug?</body>
      <body-html>&lt;div&gt;&lt;p&gt;[This ticket is not a bug, somebody could close it?]&lt;/p&gt;
&lt;p&gt;Today when I'm testing Rails 3.0 I found a behavior that I think
is bug.&lt;/p&gt;
&lt;p&gt;If you have a blog with an admin and public area like below:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  namespace :admin do
    resources :posts
  end

  resources :posts&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And create a sweeper like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class PostSweeper &amp;lt; ActionController::Caching::Sweeper
  def after_save(resource)
    expire_cache(resource)
  end

  def after_destroy(resource)
    expire_cache(resource)
  end

  def expire_cache(resource)
    expire_page :controller =&amp;gt; &quot;posts&quot;, :action =&amp;gt; &quot;show&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you set this sweeper in Admin::PostsController and do a
change in the post from Admin namespace Rails will try to
expire:&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;/developer/app/public/admin/posts/1-rails-3-0-rc.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And not:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/developer/app/public/posts/1-rails-3-0-rc.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I look the code of expire_page I found this:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://apidock.com/rails/ActionController/Caching/Pages/ClassMethods/page_cache_file&quot;&gt;
http://apidock.com/rails/ActionController/Caching/Pages/ClassMethod...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This method will use the URI to set the path for the file which
ends with the weird behavior above. Don't you guy think this is a
bug?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T22:18:52+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3.0rc</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-22T16:11:29+01:00</updated-at>
      <user-id type="integer">40279</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Lopes</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>To force Rails to don't use admin in path what I did was:

*expire_page :controller =&gt; &quot;/posts&quot;, :action =&gt; &quot;show&quot;, :only_path =&gt; true*

But &quot;/posts&quot; is as strange for a controller name. Don't you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;To force Rails to don't use admin in path what I did was:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;expire_page :controller =&amp;gt; &quot;/posts&quot;, :action =&amp;gt;
&quot;show&quot;, :only_path =&amp;gt; true&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;But &quot;/posts&quot; is as strange for a controller name. Don't you
think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T22:24:41+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3.0rc</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-08-12T22:24:43+01:00</updated-at>
      <user-id type="integer">40279</user-id>
      <version type="integer">2</version>
      <user-name>Daniel Lopes</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>-1 I'm not sure why do you think this is a bug; taking the namespace in consideration sounds like the only reasonable behavior to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 I'm not sure why do you think this is a bug; taking the
namespace in consideration sounds like the only reasonable behavior
to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-17T14:29:16+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: rails3.0rc
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-17T14:29:19+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">3</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm not sure why do you think this is a &lt;a href=&quot;http://www.weddinginthebox.com/blog/places-to-buy-wedding-dresses.html&quot;&gt;best place to buy a wedding dress&lt;/a&gt;; taking the namespace in consideration sounds like the only reasonable behavior to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure why do you think this is a &lt;a href=
&quot;http://www.weddinginthebox.com/blog/places-to-buy-wedding-dresses.html&quot;&gt;
best place to buy a wedding dress&lt;/a&gt;; taking the namespace in
consideration sounds like the only reasonable behavior to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T06:23:25+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-19T17:52:53+01:00</updated-at>
      <user-id type="integer">120610</user-id>
      <version type="integer">4</version>
      <user-name>koukou</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Andrea, I didn't said anything about the Admin namespace in the Sweeper. That is the reason why I think this is undesired. What I think is the right thing to expire the admin posts is:

expire_page :controller =&gt; 'admin/posts', :action =&gt; 'index'

But expire the admin when I want to expire the public controller, for me, is strange/</body>
      <body-html>&lt;div&gt;&lt;p&gt;Andrea, I didn't said anything about the Admin namespace in the
Sweeper. That is the reason why I think this is undesired. What I
think is the right thing to expire the admin posts is:&lt;/p&gt;
&lt;p&gt;expire_page :controller =&amp;gt; 'admin/posts', :action =&amp;gt;
'index'&lt;/p&gt;
&lt;p&gt;But expire the admin when I want to expire the public
controller, for me, is strange/&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T14:36:52+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-19T14:36:55+01:00</updated-at>
      <user-id type="integer">40279</user-id>
      <version type="integer">5</version>
      <user-name>Daniel Lopes</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The @Sweeper@ itself may not be in the @Admin@ namespace, but you are assigning it to the @Admin::PostsController@; when @#expire_page@ is invoked, it invoked @#url_for@, which will take the controller namespace into consideration to build the cache path.
That sounds consistent to the way @#url_for@ works.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The &lt;code&gt;Sweeper&lt;/code&gt; itself may not be in the
&lt;code&gt;Admin&lt;/code&gt; namespace, but you are assigning it to the
@Admin::PostsController@; when &lt;code&gt;#expire_page&lt;/code&gt; is
invoked, it invoked @#url_for@, which will take the controller
namespace into consideration to build the cache path.&lt;br&gt;
That sounds consistent to the way &lt;code&gt;#url_for&lt;/code&gt; works.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T22:09:11+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-19T22:09:14+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">6</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Actually I any place I reference the admin namespace in the sweeper, neither in the controllers. The sweeper will expire the Admin controller without I said to do that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually I any place I reference the admin namespace in the
sweeper, neither in the controllers. The sweeper will expire the
Admin controller without I said to do that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-20T14:04:11+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-20T14:04:14+01:00</updated-at>
      <user-id type="integer">40279</user-id>
      <version type="integer">7</version>
      <user-name>Daniel Lopes</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Your controller is named @Admin::PostsController@. That's all the namespacing Rails needs to see.

If that's not the case, you need to show more of your controllers, otherwise there's no way I can guess what you mean.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Your controller is named &lt;code&gt;Admin::PostsController&lt;/code&gt;.
That's all the namespacing Rails needs to see.&lt;/p&gt;
&lt;p&gt;If that's not the case, you need to show more of your
controllers, otherwise there's no way I can guess what you
mean.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-20T16:27:59+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-20T16:28:02+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">8</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I attached an app for the example. In the source folder I have a PostsController and an Admin::PostsController. My admin calls the cache_sweeper method and say to dispatch it in create and update. 

My Sweeper observes the Post model and in the right callback it calls:

expire_page :controller =&gt; &quot;posts&quot;, :action =&gt; &quot;show&quot;, :only_path =&gt; true

But calling just posts in the expire_page and not admin/posts will expire admin/posts. For me it's against of the principle of least surprise. Rails inferrers that I want to expire the admin just because the controller that call cache_sweeper is in Admin namespace even when I say explicitly that the controller is just posts?

For it's a strange.

Take a look in the app attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I attached an app for the example. In the source folder I have a
PostsController and an Admin::PostsController. My admin calls the
cache_sweeper method and say to dispatch it in create and
update.&lt;/p&gt;
&lt;p&gt;My Sweeper observes the Post model and in the right callback it
calls:&lt;/p&gt;
&lt;p&gt;expire_page :controller =&amp;gt; &quot;posts&quot;, :action =&amp;gt; &quot;show&quot;,
:only_path =&amp;gt; true&lt;/p&gt;
&lt;p&gt;But calling just posts in the expire_page and not admin/posts
will expire admin/posts. For me it's against of the principle of
least surprise. Rails inferrers that I want to expire the admin
just because the controller that call cache_sweeper is in Admin
namespace even when I say explicitly that the controller is just
posts?&lt;/p&gt;
&lt;p&gt;For it's a strange.&lt;/p&gt;
&lt;p&gt;Take a look in the app attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-20T23:50:14+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-20T23:50:16+01:00</updated-at>
      <user-id type="integer">40279</user-id>
      <version type="integer">9</version>
      <user-name>Daniel Lopes</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; But calling just posts in the expire_page and not admin/posts will expire admin/posts. For me it's against of the principle of least surprise. Rails inferrers that I want to expire the admin just because the controller that call cache_sweeper is in Admin namespace even when I say explicitly that the controller is just posts?

Yes, that's what I was trying to tell you, sorry if I didn't make it clear.

Personally, I don't find it confusing at all, it's exactly how I would expect it to work. For instance, that's how @link_to@ works:

@@@
link_to 'test', :controller =&gt; &quot;posts&quot;, :action =&gt; &quot;index} # &lt;a href=&quot;/admin/posts&quot;&gt;test&lt;/a&gt;

link_to 'test', :controller =&gt; &quot;/posts&quot;, :action =&gt; &quot;index} # &lt;a href=&quot;/posts&quot;&gt;test&lt;/a&gt;
@@@

If @expire_page@ and @link_to@ were to build different URLs, now that would be confusing!</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;But calling just posts in the expire_page and not admin/posts
will expire admin/posts. For me it's against of the principle of
least surprise. Rails inferrers that I want to expire the admin
just because the controller that call cache_sweeper is in Admin
namespace even when I say explicitly that the controller is just
posts?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yes, that's what I was trying to tell you, sorry if I didn't
make it clear.&lt;/p&gt;
&lt;p&gt;Personally, I don't find it confusing at all, it's exactly how I
would expect it to work. For instance, that's how
&lt;code&gt;link_to&lt;/code&gt; works:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;link_to 'test', :controller =&amp;gt; &quot;posts&quot;, :action =&amp;gt; &quot;index} # &amp;lt;a href=&quot;/admin/posts&quot;&amp;gt;test&amp;lt;/a&amp;gt;

link_to 'test', :controller =&amp;gt; &quot;/posts&quot;, :action =&amp;gt; &quot;index} # &amp;lt;a href=&quot;/posts&quot;&amp;gt;test&amp;lt;/a&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If &lt;code&gt;expire_page&lt;/code&gt; and &lt;code&gt;link_to&lt;/code&gt; were to
build different URLs, now that would be confusing!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-22T15:44:45+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-22T15:44:47+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">10</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Now I got what are you trying to explain. In the context of views is pretty clear when the view that call's link_to (and uses url for behind) will take his own controller as scope for the url.

In the sweepers I don't think it's so clear that's the calling of cache_sweeper in the controller will be responsible for set the scope for the url_for. But I got what you tried to explain and looking for the point of view of a link_to you are correct.

I will close this ticket.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Now I got what are you trying to explain. In the context of
views is pretty clear when the view that call's link_to (and uses
url for behind) will take his own controller as scope for the
url.&lt;/p&gt;
&lt;p&gt;In the sweepers I don't think it's so clear that's the calling
of cache_sweeper in the controller will be responsible for set the
scope for the url_for. But I got what you tried to explain and
looking for the point of view of a link_to you are correct.&lt;/p&gt;
&lt;p&gt;I will close this ticket.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-22T16:09:08+01:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2010-10-22T16:09:10+01:00</updated-at>
      <user-id type="integer">40279</user-id>
      <version type="integer">11</version>
      <user-name>Daniel Lopes</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-27T06:36:30+00:00</created-at>
      <creator-id type="integer">40279</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5368</number>
      <permalink>weird-behavior-on-expire_page-when-you-are-running-under-namespace</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>rails3</tag>
      <title>weird behavior on expire_page when you are running under namespace</title>
      <updated-at type="datetime">2011-01-27T06:36:40+00:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">12</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Daniel Lopes</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5368</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>22524cc19b62e2c14dccc3f4f1e605ae05e5822c</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2010-10-20T23:50:14+01:00</created-at>
      <filename>app.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">730291</id>
      <size type="integer">118098</size>
      <uploader-id type="integer">40279</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/730291/app.zip</url>
    </attachment>
  </attachments>
</ticket>
