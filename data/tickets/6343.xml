<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-01-28T01:33:23+00:00</created-at>
  <creator-id type="integer">134606</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6343</number>
  <permalink>possible-bug-of-accepts_nested_attributes_for</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Possible bug of accepts_nested_attributes_for</title>
  <updated-at type="datetime">2011-04-23T00:04:12+01:00</updated-at>
  <user-id type="integer">87360</user-id>
  <version type="integer">2</version>
  <user-name>c.apolzon</user-name>
  <creator-name>Sam Kong</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6343</url>
  <priority-name nil="true"></priority-name>
  <original-body>I realized that sometimes a nested form fail to destroy a child in rails 3.0.3.

It happens when the children are not loaded and the parent is assigned the attributes.

I narrowed down the problem code.

&lt;code&gt;activerecord-3.0.3/lib/active_record/nested_attributes.rb&lt;/code&gt;

line# 376: &lt;code&gt;association.send(:add_record_to_target_with_callbacks, existing_record) if association.loaded? &amp;&amp; !call_reject_if(association_name, attributes)&lt;/code&gt;

The line was changed from rails 3.0.0.

Here's how I tested it in console.
(I intentionally removed some outputs for simplicity.)

@@@
Loading development environment (Rails 3.0.3)
ruby-1.8.7-p302 &gt; post=Post.find 204
ruby-1.8.7-p302 &gt; post.attachments.loaded?
 =&gt; false
ruby-1.8.7-p302 &gt;
post.attributes={&quot;attachments_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;id&quot;=&gt;&quot;44&quot;,
&quot;_destroy&quot;=&gt;&quot;1&quot;}}}
ruby-1.8.7-p302 &gt; post.save
 =&gt; true
ruby-1.8.7-p302 &gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&gt; &quot;44, 45, 46, 47, 48, 49&quot; #44 is still there.
ruby-1.8.7-p302 &gt;
post.attributes={&quot;attachments_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;id&quot;=&gt;&quot;44&quot;,
&quot;_destroy&quot;=&gt;&quot;1&quot;}}}
# Now I try to destroy it again when the attachments are loaded.
ruby-1.8.7-p302 &gt; post.save
 =&gt; true
ruby-1.8.7-p302 &gt; post.attachments.reload
# To make sure that attachments are reloaded after the change.
ruby-1.8.7-p302 &gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&gt; &quot;45, 46, 47, 48, 49&quot; # Now 44 is gone.
@@@

The problem doesn't happen in rails 3.0.0.

&lt;em&gt;Edited by [Rohit Arondekar](https://rails.lighthouseapp.com/users/89656) for formatting.&lt;/em&gt;</original-body>
  <latest-body>I realized that sometimes a nested form fail to destroy a child in rails 3.0.3.

It happens when the children are not loaded and the parent is assigned the attributes.

I narrowed down the problem code.

&lt;code&gt;activerecord-3.0.3/lib/active_record/nested_attributes.rb&lt;/code&gt;

line# 376: &lt;code&gt;association.send(:add_record_to_target_with_callbacks, existing_record) if association.loaded? &amp;&amp; !call_reject_if(association_name, attributes)&lt;/code&gt;

The line was changed from rails 3.0.0.

Here's how I tested it in console.
(I intentionally removed some outputs for simplicity.)

@@@
Loading development environment (Rails 3.0.3)
ruby-1.8.7-p302 &gt; post=Post.find 204
ruby-1.8.7-p302 &gt; post.attachments.loaded?
 =&gt; false
ruby-1.8.7-p302 &gt;
post.attributes={&quot;attachments_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;id&quot;=&gt;&quot;44&quot;,
&quot;_destroy&quot;=&gt;&quot;1&quot;}}}
ruby-1.8.7-p302 &gt; post.save
 =&gt; true
ruby-1.8.7-p302 &gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&gt; &quot;44, 45, 46, 47, 48, 49&quot; #44 is still there.
ruby-1.8.7-p302 &gt;
post.attributes={&quot;attachments_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;id&quot;=&gt;&quot;44&quot;,
&quot;_destroy&quot;=&gt;&quot;1&quot;}}}
# Now I try to destroy it again when the attachments are loaded.
ruby-1.8.7-p302 &gt; post.save
 =&gt; true
ruby-1.8.7-p302 &gt; post.attachments.reload
# To make sure that attachments are reloaded after the change.
ruby-1.8.7-p302 &gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&gt; &quot;45, 46, 47, 48, 49&quot; # Now 44 is gone.
@@@

The problem doesn't happen in rails 3.0.0.

&lt;em&gt;Edited by [Rohit Arondekar](https://rails.lighthouseapp.com/users/89656) for formatting.&lt;/em&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I realized that sometimes a nested form fail to destroy a child
in rails 3.0.3.&lt;/p&gt;
&lt;p&gt;It happens when the children are not loaded and the parent is
assigned the attributes.&lt;/p&gt;
&lt;p&gt;I narrowed down the problem code.&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;activerecord-3.0.3/lib/active_record/nested_attributes.rb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;line# 376:
&lt;code&gt;association.send(:add_record_to_target_with_callbacks,
existing_record) if association.loaded? &amp;amp;&amp;amp;
!call_reject_if(association_name, attributes)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The line was changed from rails 3.0.0.&lt;/p&gt;
&lt;p&gt;Here's how I tested it in console.&lt;br&gt;
(I intentionally removed some outputs for simplicity.)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 3.0.3)
ruby-1.8.7-p302 &amp;gt; post=Post.find 204
ruby-1.8.7-p302 &amp;gt; post.attachments.loaded?
 =&amp;gt; false
ruby-1.8.7-p302 &amp;gt;
post.attributes={&quot;attachments_attributes&quot;=&amp;gt;{&quot;0&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;&quot;44&quot;,
&quot;_destroy&quot;=&amp;gt;&quot;1&quot;}}}
ruby-1.8.7-p302 &amp;gt; post.save
 =&amp;gt; true
ruby-1.8.7-p302 &amp;gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&amp;gt; &quot;44, 45, 46, 47, 48, 49&quot; #44 is still there.
ruby-1.8.7-p302 &amp;gt;
post.attributes={&quot;attachments_attributes&quot;=&amp;gt;{&quot;0&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;&quot;44&quot;,
&quot;_destroy&quot;=&amp;gt;&quot;1&quot;}}}
# Now I try to destroy it again when the attachments are loaded.
ruby-1.8.7-p302 &amp;gt; post.save
 =&amp;gt; true
ruby-1.8.7-p302 &amp;gt; post.attachments.reload
# To make sure that attachments are reloaded after the change.
ruby-1.8.7-p302 &amp;gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&amp;gt; &quot;45, 46, 47, 48, 49&quot; # Now 44 is gone.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem doesn't happen in rails 3.0.0.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edited by &lt;a href=
&quot;https://rails.lighthouseapp.com/users/89656&quot;&gt;Rohit Arondekar&lt;/a&gt;
for formatting.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I realized that sometimes a nested form fail to destroy a child in rails 3.0.3.

It happens when the children are not loaded and the parent is assigned the attributes.

I narrowed down the problem code.

&lt;code&gt;activerecord-3.0.3/lib/active_record/nested_attributes.rb&lt;/code&gt;

line# 376: &lt;code&gt;association.send(:add_record_to_target_with_callbacks, existing_record) if association.loaded? &amp;&amp; !call_reject_if(association_name, attributes)&lt;/code&gt;

The line was changed from rails 3.0.0.

Here's how I tested it in console.
(I intentionally removed some outputs for simplicity.)

@@@
Loading development environment (Rails 3.0.3)
ruby-1.8.7-p302 &gt; post=Post.find 204
ruby-1.8.7-p302 &gt; post.attachments.loaded?
 =&gt; false
ruby-1.8.7-p302 &gt;
post.attributes={&quot;attachments_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;id&quot;=&gt;&quot;44&quot;,
&quot;_destroy&quot;=&gt;&quot;1&quot;}}}
ruby-1.8.7-p302 &gt; post.save
 =&gt; true
ruby-1.8.7-p302 &gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&gt; &quot;44, 45, 46, 47, 48, 49&quot; #44 is still there.
ruby-1.8.7-p302 &gt;
post.attributes={&quot;attachments_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;id&quot;=&gt;&quot;44&quot;,
&quot;_destroy&quot;=&gt;&quot;1&quot;}}}
# Now I try to destroy it again when the attachments are loaded.
ruby-1.8.7-p302 &gt; post.save
 =&gt; true
ruby-1.8.7-p302 &gt; post.attachments.reload
# To make sure that attachments are reloaded after the change.
ruby-1.8.7-p302 &gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&gt; &quot;45, 46, 47, 48, 49&quot; # Now 44 is gone.
@@@

The problem doesn't happen in rails 3.0.0.

&lt;em&gt;Edited by [Rohit Arondekar](https://rails.lighthouseapp.com/users/89656) for formatting.&lt;/em&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I realized that sometimes a nested form fail to destroy a child
in rails 3.0.3.&lt;/p&gt;
&lt;p&gt;It happens when the children are not loaded and the parent is
assigned the attributes.&lt;/p&gt;
&lt;p&gt;I narrowed down the problem code.&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;activerecord-3.0.3/lib/active_record/nested_attributes.rb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;line# 376:
&lt;code&gt;association.send(:add_record_to_target_with_callbacks,
existing_record) if association.loaded? &amp;amp;&amp;amp;
!call_reject_if(association_name, attributes)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The line was changed from rails 3.0.0.&lt;/p&gt;
&lt;p&gt;Here's how I tested it in console.&lt;br&gt;
(I intentionally removed some outputs for simplicity.)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 3.0.3)
ruby-1.8.7-p302 &amp;gt; post=Post.find 204
ruby-1.8.7-p302 &amp;gt; post.attachments.loaded?
 =&amp;gt; false
ruby-1.8.7-p302 &amp;gt;
post.attributes={&quot;attachments_attributes&quot;=&amp;gt;{&quot;0&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;&quot;44&quot;,
&quot;_destroy&quot;=&amp;gt;&quot;1&quot;}}}
ruby-1.8.7-p302 &amp;gt; post.save
 =&amp;gt; true
ruby-1.8.7-p302 &amp;gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&amp;gt; &quot;44, 45, 46, 47, 48, 49&quot; #44 is still there.
ruby-1.8.7-p302 &amp;gt;
post.attributes={&quot;attachments_attributes&quot;=&amp;gt;{&quot;0&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;&quot;44&quot;,
&quot;_destroy&quot;=&amp;gt;&quot;1&quot;}}}
# Now I try to destroy it again when the attachments are loaded.
ruby-1.8.7-p302 &amp;gt; post.save
 =&amp;gt; true
ruby-1.8.7-p302 &amp;gt; post.attachments.reload
# To make sure that attachments are reloaded after the change.
ruby-1.8.7-p302 &amp;gt; post.attachments.map { |i| i.id }.join(&quot;, &quot;)
 =&amp;gt; &quot;45, 46, 47, 48, 49&quot; # Now 44 is gone.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem doesn't happen in rails 3.0.0.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edited by &lt;a href=
&quot;https://rails.lighthouseapp.com/users/89656&quot;&gt;Rohit Arondekar&lt;/a&gt;
for formatting.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-28T01:33:23+00:00</created-at>
      <creator-id type="integer">134606</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6343</number>
      <permalink>possible-bug-of-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Possible bug of accepts_nested_attributes_for</title>
      <updated-at type="datetime">2011-01-28T04:33:32+00:00</updated-at>
      <user-id type="integer">134606</user-id>
      <version type="integer">1</version>
      <user-name>Sam Kong</user-name>
      <creator-name>Sam Kong</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6343</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is still present in 3.0.7.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is still present in 3.0.7.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-23T00:04:07+01:00</created-at>
      <creator-id type="integer">134606</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6343</number>
      <permalink>possible-bug-of-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Possible bug of accepts_nested_attributes_for</title>
      <updated-at type="datetime">2011-04-23T00:04:12+01:00</updated-at>
      <user-id type="integer">87360</user-id>
      <version type="integer">2</version>
      <user-name>c.apolzon</user-name>
      <creator-name>Sam Kong</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6343</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
