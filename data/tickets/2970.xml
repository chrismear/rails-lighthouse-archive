<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-07-29T03:33:31+01:00</created-at>
  <creator-id type="integer">29892</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2970</number>
  <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
  <priority type="integer">128621</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>parameters params testing</tag>
  <title>Parameters to functional test requests should have proper values</title>
  <updated-at type="datetime">2009-08-02T07:54:49+01:00</updated-at>
  <user-id type="integer">29892</user-id>
  <version type="integer">14</version>
  <user-name>Adam Milligan</user-name>
  <creator-name>Adam Milligan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
  <priority-name nil="true"></priority-name>
  <original-body>How many times have you written this in a functional test:

&lt;code&gt;
post :create, :wibble =&gt; { :dingledongle =&gt; 7 }
&lt;/code&gt;

It looks fine, and the test runs fine, but then you deploy and BOOM! because your Wibble model is assuming the dingledongle value is a number, but the real HTTP parameter is, in fact a string.

Or this:

&lt;code&gt;
post :index, :parent_id =&gt; @parent.id
&lt;/code&gt;

Tests run fine, everything works, until you change #to_param on the Parent model to return a URL slug and then you're up all night fixing test failures.  The :parent_id parameter isn't an ID, after all, it's part of a URL, and it should be a string.

In short, parameters to functional test requests should be strings, because that's what HTTP provides in real life.  This patch verifies that this is the case, and throws a warm and friendly exception if you're trying to pass in something improper (it also allows TestUploadedFile instances, nil, and, for parameters used in routing, ActiveRecords.

This patch is about a dozen lines in TestRequest, a pile of tests, and a bunch of changes to tests that were passing in improper values.</original-body>
  <latest-body>How many times have you written this in a functional test:

&lt;code&gt;
post :create, :wibble =&gt; { :dingledongle =&gt; 7 }
&lt;/code&gt;

It looks fine, and the test runs fine, but then you deploy and BOOM! because your Wibble model is assuming the dingledongle value is a number, but the real HTTP parameter is, in fact a string.

Or this:

&lt;code&gt;
post :index, :parent_id =&gt; @parent.id
&lt;/code&gt;

Tests run fine, everything works, until you change #to_param on the Parent model to return a URL slug and then you're up all night fixing test failures.  The :parent_id parameter isn't an ID, after all, it's part of a URL, and it should be a string.

In short, parameters to functional test requests should be strings, because that's what HTTP provides in real life.  This patch verifies that this is the case, and throws a warm and friendly exception if you're trying to pass in something improper (it also allows TestUploadedFile instances, nil, and, for parameters used in routing, ActiveRecords.

This patch is about a dozen lines in TestRequest, a pile of tests, and a bunch of changes to tests that were passing in improper values.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;How many times have you written this in a functional test:&lt;/p&gt;
&lt;p&gt;post :create, :wibble =&amp;gt; { :dingledongle =&amp;gt; 7 }&lt;/p&gt;
&lt;p&gt;It looks fine, and the test runs fine, but then you deploy and
BOOM! because your Wibble model is assuming the dingledongle value
is a number, but the real HTTP parameter is, in fact a string.&lt;/p&gt;
&lt;p&gt;Or this:&lt;/p&gt;
&lt;p&gt;post :index, :parent_id =&amp;gt; @parent.id&lt;/p&gt;
&lt;p&gt;Tests run fine, everything works, until you change #to_param on
the Parent model to return a URL slug and then you're up all night
fixing test failures. The :parent_id parameter isn't an ID, after
all, it's part of a URL, and it should be a string.&lt;/p&gt;
&lt;p&gt;In short, parameters to functional test requests should be
strings, because that's what HTTP provides in real life. This patch
verifies that this is the case, and throws a warm and friendly
exception if you're trying to pass in something improper (it also
allows TestUploadedFile instances, nil, and, for parameters used in
routing, ActiveRecords.&lt;/p&gt;
&lt;p&gt;This patch is about a dozen lines in TestRequest, a pile of
tests, and a bunch of changes to tests that were passing in
improper values.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>How many times have you written this in a functional test:

&lt;code&gt;
post :create, :wibble =&gt; { :dingledongle =&gt; 7 }
&lt;/code&gt;

It looks fine, and the test runs fine, but then you deploy and BOOM! because your Wibble model is assuming the dingledongle value is a number, but the real HTTP parameter is, in fact a string.

Or this:

&lt;code&gt;
post :index, :parent_id =&gt; @parent.id
&lt;/code&gt;

Tests run fine, everything works, until you change #to_param on the Parent model to return a URL slug and then you're up all night fixing test failures.  The :parent_id parameter isn't an ID, after all, it's part of a URL, and it should be a string.

In short, parameters to functional test requests should be strings, because that's what HTTP provides in real life.  This patch verifies that this is the case, and throws a warm and friendly exception if you're trying to pass in something improper (it also allows TestUploadedFile instances, nil, and, for parameters used in routing, ActiveRecords.

This patch is about a dozen lines in TestRequest, a pile of tests, and a bunch of changes to tests that were passing in improper values.</body>
      <body-html>&lt;div&gt;&lt;p&gt;How many times have you written this in a functional test:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
post :create, :wibble =&amp;gt; { :dingledongle =&amp;gt; 7
}&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It looks fine, and the test runs fine, but then you deploy and
BOOM! because your Wibble model is assuming the dingledongle value
is a number, but the real HTTP parameter is, in fact a string.&lt;/p&gt;
&lt;p&gt;Or this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
post :index, :parent_id =&amp;gt; @parent.id&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tests run fine, everything works, until you change #to_param on
the Parent model to return a URL slug and then you're up all night
fixing test failures. The :parent_id parameter isn't an ID, after
all, it's part of a URL, and it should be a string.&lt;/p&gt;
&lt;p&gt;In short, parameters to functional test requests should be
strings, because that's what HTTP provides in real life. This patch
verifies that this is the case, and throws a warm and friendly
exception if you're trying to pass in something improper (it also
allows TestUploadedFile instances, nil, and, for parameters used in
routing, ActiveRecords.&lt;/p&gt;
&lt;p&gt;This patch is about a dozen lines in TestRequest, a pile of
tests, and a bunch of changes to tests that were passing in
improper values.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-29T03:33:31+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-29T03:33:34+01:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">1</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>We just ran afoul of this on our project; this patch would have helped us catch our mistake earlier.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We just ran afoul of this on our project; this patch would have
helped us catch our mistake earlier.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-29T04:03:11+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-29T04:03:16+01:00</updated-at>
      <user-id type="integer">21993</user-id>
      <version type="integer">2</version>
      <user-name>Donald Ball</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Shouldn't the test wrappers just automatically convert everything to a string?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Shouldn't the test wrappers just automatically convert
everything to a string?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-29T05:22:18+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-29T05:22:22+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">3</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There's no way I'm going to break all those tests to catch this case.

I would take a patch like will's talking about where everything passed is to_param'd, but that's about it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There's no way I'm going to break all those tests to catch this
case.&lt;/p&gt;
&lt;p&gt;I would take a patch like will's talking about where everything
passed is to_param'd, but that's about it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-29T06:01:27+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-29T06:01:32+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I agree with Will. It should convert it to the string rather than telling the tester to.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with Will. It should convert it to the string rather
than telling the tester to.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-29T13:34:00+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-29T13:34:05+01:00</updated-at>
      <user-id type="integer">58475</user-id>
      <version type="integer">5</version>
      <user-name>blatyo</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm having issues with this too, I think everything should be converted to string/param automatically.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having issues with this too, I think everything should be
converted to string/param automatically.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-30T11:29:17+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-30T11:29:20+01:00</updated-at>
      <user-id type="integer">57620</user-id>
      <version type="integer">6</version>
      <user-name>David Si&#241;uela (Siu)</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That patch is gonna break a lot of stuff just to add a little safety for not using proper types, which is your fault anyway (&quot;you&quot; being generic). I don't think this justifies breaking existing test suites.

Now, since it is the programmer's responsability to pass objects with the correct type and to_param is idiomatic, I'd find automatic to_param to be a convenience that may be useful and fits with its automatic usage by Rails itself.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That patch is gonna break a lot of stuff just to add a little
safety for not using proper types, which is your fault anyway
(&quot;you&quot; being generic). I don't think this justifies breaking
existing test suites.&lt;/p&gt;
&lt;p&gt;Now, since it is the programmer's responsability to pass objects
with the correct type and to_param is idiomatic, I'd find automatic
to_param to be a convenience that may be useful and fits with its
automatic usage by Rails itself.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-30T16:42:58+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-30T16:43:00+01:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">7</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I didn't really expect this patch to be committed as is.  However, the idea that Rails should automatically convert all of your test parameters to something ostensibly correct is worse than the existing functionality.

Consider this:

&lt;code&gt;
  get :show, :some_boolean_checkbox =&gt; false
&lt;/code&gt;

This will currently run just fine, although it's not testing the right thing.  Would you prefer that Rails call #to_s or #to_param on this parameter?  #to_s will return &quot;false&quot;, #to_param will return false (the boolean value).  Neither is correct.

It doesn't take very much imagination to think up a number of scenarios in which automatically calling #to_s or #to_param would change the parameters in subtlely incorrect ways.  

As far as the argument that writing tests correctly is &quot;your responsibility,&quot; as it turns out writing production code correctly is your responsibility as well.  Yet, somehow we regularly screw that up, so we write tests to catch those mistakes.  The &quot;people just shouldn't make that mistake&quot; argument is never compelling.

As I said, I didn't really expect anyone would commit this patch.  I repurposed it as a plugin (http://github.com/amilligan/wapcaplet/tree/master) for anyone who cares to fix their tests.  I'll likely resubmit the patch again with warnings rather than errors, and possibly some configuration options for changing the behavior, but that's just because I enjoy rejection.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I didn't really expect this patch to be committed as is.
However, the idea that Rails should automatically convert all of
your test parameters to something ostensibly correct is worse than
the existing functionality.&lt;/p&gt;
&lt;p&gt;Consider this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
get :show, :some_boolean_checkbox =&amp;gt; false&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will currently run just fine, although it's not testing the
right thing. Would you prefer that Rails call #to_s or #to_param on
this parameter? #to_s will return &quot;false&quot;, #to_param will return
false (the boolean value). Neither is correct.&lt;/p&gt;
&lt;p&gt;It doesn't take very much imagination to think up a number of
scenarios in which automatically calling #to_s or #to_param would
change the parameters in subtlely incorrect ways.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;As far as the argument that writing tests correctly is &quot;your
responsibility,&quot; as it turns out writing production code correctly
is your responsibility as well. Yet, somehow we regularly screw
that up, so we write tests to catch those mistakes. The &quot;people
just shouldn't make that mistake&quot; argument is never compelling.&lt;/p&gt;
&lt;p&gt;As I said, I didn't really expect anyone would commit this
patch. I repurposed it as a plugin (&lt;a href=
&quot;http://github.com/amilligan/wapcaplet/tree/master&quot;&gt;http://github.com/amilligan/wapcaplet/tree/master&lt;/a&gt;)
for anyone who cares to fix their tests. I'll likely resubmit the
patch again with warnings rather than errors, and possibly some
configuration options for changing the behavior, but that's just
because I enjoy rejection.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-30T17:52:27+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-30T17:52:31+01:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">8</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; As far as the argument that writing tests correctly is &quot;your responsibility,&quot; as it turns out writing 
&gt; production code correctly is your responsibility as well.  Yet, somehow we regularly screw that up, so we 
&gt; write tests to catch those mistakes.  The &quot;people just shouldn't make that mistake&quot; argument is never 
&gt; compelling.

The argument is not just that. The argument goes that since this is not fixing something seriously broken, it is only a safety check, I think it is not worth breaking everyone's test suite. It is the solution taken together with its consequences that make me vote for pointing to just using the correct types.

The idea itself is fine for me, in my view it is a nice to have safety check taken in isolation.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;As far as the argument that writing tests correctly is &quot;your
responsibility,&quot; as it turns out writing production code correctly
is your responsibility as well. Yet, somehow we regularly screw
that up, so we write tests to catch those mistakes. The &quot;people
just shouldn't make that mistake&quot; argument is never compelling.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The argument is not just that. The argument goes that since this
is not fixing something seriously broken, it is only a safety
check, I think it is not worth breaking everyone's test suite. It
is the solution taken together with its consequences that make me
vote for pointing to just using the correct types.&lt;/p&gt;
&lt;p&gt;The idea itself is fine for me, in my view it is a nice to have
safety check taken in isolation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-30T23:30:15+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-07-30T23:30:21+01:00</updated-at>
      <user-id type="integer">11378</user-id>
      <version type="integer">9</version>
      <user-name>Xavier Noria</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm sympathetic to the idea that this patch would break a lot of existing tests, but I agree with Adam that the responsibility argument is not compelling. I've always felt that silently allowing non-string arguments here was somewhat counter to the rest of Rails, in that Rails often automatically assures type safety in other contexts (such as ActiveRecord fields). It's always seemed a weird oversight that the framework lets me shoot myself in the foot with this particular bullet.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm sympathetic to the idea that this patch would break a lot of
existing tests, but I agree with Adam that the responsibility
argument is not compelling. I've always felt that silently allowing
non-string arguments here was somewhat counter to the rest of
Rails, in that Rails often automatically assures type safety in
other contexts (such as ActiveRecord fields). It's always seemed a
weird oversight that the framework lets me shoot myself in the foot
with this particular bullet.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-02T03:55:39+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-08-02T03:55:44+01:00</updated-at>
      <user-id type="integer">20191</user-id>
      <version type="integer">10</version>
      <user-name>Noel Rappin</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What if, instead of breaking the tests, it just put a warning when a parameter wasn't a string?</body>
      <body-html>&lt;div&gt;&lt;p&gt;What if, instead of breaking the tests, it just put a warning
when a parameter wasn't a string?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-02T04:41:58+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-08-02T04:42:02+01:00</updated-at>
      <user-id type="integer">472</user-id>
      <version type="integer">11</version>
      <user-name>BJ Clark</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I agree, a warning would be nice.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree, a warning would be nice.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-02T05:43:49+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-08-02T05:43:52+01:00</updated-at>
      <user-id type="integer">395</user-id>
      <version type="integer">12</version>
      <user-name>Joe Van Dyk</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>OK, investigate a change which calls to_param on any non-string values
and prints out a deprecation warning (just because it's a warning
mechanism, we won't necessarily remove this support in the future).

We'll see how spammy it is and do a cost-benefit comparison based on that.

I'm definitely not going to break everyone's tests to just make sure
that you're passing @foo.to_param instead of @foo.id, but we can
definitely look at warning folks.  On the flipside you *can* provide
strongly typed data to controllers using the XML parser, so this whole
discussion could be moot.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, investigate a change which calls to_param on any non-string
values&lt;br&gt;
and prints out a deprecation warning (just because it's a
warning&lt;br&gt;
mechanism, we won't necessarily remove this support in the
future).&lt;/p&gt;
&lt;p&gt;We'll see how spammy it is and do a cost-benefit comparison
based on that.&lt;/p&gt;
&lt;p&gt;I'm definitely not going to break everyone's tests to just make
sure&lt;br&gt;
that you're passing @foo.to_param instead of @foo.id, but we
can&lt;br&gt;
definitely look at warning folks. On the flipside you &lt;em&gt;can&lt;/em&gt;
provide&lt;br&gt;
strongly typed data to controllers using the XML parser, so this
whole&lt;br&gt;
discussion could be moot.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-02T06:40:33+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-08-02T06:40:33+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">13</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've created a new patch with warnings and options here: https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2984-warn-when-parameters-to-functional-test-requests-have-improper-values</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've created a new patch with warnings and options here:
&lt;a href=&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2984-warn-when-parameters-to-functional-test-requests-have-improper-values&quot;&gt;
https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-02T07:54:45+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2970</number>
      <permalink>parameters-to-functional-test-requests-should-have-proper-values</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>parameters params testing</tag>
      <title>Parameters to functional test requests should have proper values</title>
      <updated-at type="datetime">2009-08-02T07:54:49+01:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">14</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Adam Milligan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2970</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>05ac2f20b4e69d0ae738ca52b107e7638b72fe13</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-07-29T03:33:32+01:00</created-at>
      <filename>functional_test_parameters.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">231619</id>
      <size type="integer">26926</size>
      <uploader-id type="integer">29892</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/231619/functional_test_parameters.patch</url>
    </attachment>
  </attachments>
</ticket>
