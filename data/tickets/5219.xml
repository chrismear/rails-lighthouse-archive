<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-27T18:18:37+01:00</created-at>
  <creator-id type="integer">76466</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5219</number>
  <permalink>update_attribute-doesnt-save-new-record-documentation-should-notice-this</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>documentation rails3</tag>
  <title>update_attribute doesn't save new record -- documentation should notice this</title>
  <updated-at type="datetime">2010-07-27T18:56:40+01:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">2</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>xHire</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5219</url>
  <priority-name>Low</priority-name>
  <original-body>Since Rails 3.0.0 RC method ActiveRecord::Persistence.update_attribute doesn't save new record (if it isn't another bug), so the documentation of this method has not been accurate.

Mentioning only relevant text, there is:
    Updates a single attribute and saves the record.

1. There should be stated that it applies only to already existing records, because new records remain unsaved.
2. The record is not saved as a whole but only the one attribute (updated by calling this method) is saved (i.e. all remaining dirty attributes are not saved).</original-body>
  <latest-body>Since Rails 3.0.0 RC method ActiveRecord::Persistence.update_attribute doesn't save new record (if it isn't another bug), so the documentation of this method has not been accurate.

Mentioning only relevant text, there is:
    Updates a single attribute and saves the record.

1. There should be stated that it applies only to already existing records, because new records remain unsaved.
2. The record is not saved as a whole but only the one attribute (updated by calling this method) is saved (i.e. all remaining dirty attributes are not saved).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Since Rails 3.0.0 RC method
ActiveRecord::Persistence.update_attribute doesn't save new record
(if it isn't another bug), so the documentation of this method has
not been accurate.&lt;/p&gt;
&lt;p&gt;Mentioning only relevant text, there is:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Updates a single attribute and saves the record.&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;There should be stated that it applies only to already existing
records, because new records remain unsaved.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The record is not saved as a whole but only the one attribute
(updated by calling this method) is saved (i.e. all remaining dirty
attributes are not saved).&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Since Rails 3.0.0 RC method ActiveRecord::Persistence.update_attribute doesn't save new record (if it isn't another bug), so the documentation of this method has not been accurate.

Mentioning only relevant text, there is:
    Updates a single attribute and saves the record.

1. There should be stated that it applies only to already existing records, because new records remain unsaved.
2. The record is not saved as a whole but only the one attribute (updated by calling this method) is saved (i.e. all remaining dirty attributes are not saved).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Since Rails 3.0.0 RC method
ActiveRecord::Persistence.update_attribute doesn't save new record
(if it isn't another bug), so the documentation of this method has
not been accurate.&lt;/p&gt;
&lt;p&gt;Mentioning only relevant text, there is:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Updates a single attribute and saves the record.&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;There should be stated that it applies only to already existing
records, because new records remain unsaved.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The record is not saved as a whole but only the one attribute
(updated by calling this method) is saved (i.e. all remaining dirty
attributes are not saved).&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-27T18:18:37+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5219</number>
      <permalink>update_attribute-doesnt-save-new-record-documentation-should-notice-this</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>documentation rails3</tag>
      <title>update_attribute doesn't save new record -- documentation should notice this</title>
      <updated-at type="datetime">2010-07-27T18:18:42+01:00</updated-at>
      <user-id type="integer">76466</user-id>
      <version type="integer">1</version>
      <user-name>xHire</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5219</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It is not a bug.

Document has been updated . http://github.com/lifo/docrails/commit/c9fe3c3bd0ee5010a36a157fe850ef6e8ffb147d

Thanks for the feeback.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It is not a bug.&lt;/p&gt;
&lt;p&gt;Document has been updated . &lt;a href=
&quot;http://github.com/lifo/docrails/commit/c9fe3c3bd0ee5010a36a157fe850ef6e8ffb147d&quot;&gt;
http://github.com/lifo/docrails/commit/c9fe3c3bd0ee5010a36a157fe850...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks for the feeback.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-27T18:56:38+01:00</created-at>
      <creator-id type="integer">76466</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5219</number>
      <permalink>update_attribute-doesnt-save-new-record-documentation-should-notice-this</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>documentation rails3</tag>
      <title>update_attribute doesn't save new record -- documentation should notice this</title>
      <updated-at type="datetime">2010-07-27T18:56:40+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>xHire</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5219</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
