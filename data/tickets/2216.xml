<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-11T18:34:32+00:00</created-at>
  <creator-id type="integer">50328</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2216</number>
  <permalink>base64-does-not-get-cast-for-activerecord-objects-when-using-xmlrpc-aws</permalink>
  <priority type="integer">1407</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Base64 does not get cast for ActiveRecord objects when using XMLRPC AWS.</title>
  <updated-at type="datetime">2010-04-15T22:58:15+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">3</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Steve</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2216</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is similar to the (old) ticket:

http://dev.rubyonrails.org/ticket/3567

SO I realize that this may not be the &quot;appropriate&quot; place to put this, as AWS is no longer packaged with rails.  But on the offchance someone here would like to track this, here is the issue:

Using XMLRPC, I'm returning a Track object, defined by this schema:

create_table &quot;tracks&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;user_id&quot;,       :limit =&gt; 11
    t.binary   &quot;track_data&quot;
    t.binary   &quot;warn_data&quot;
    t.boolean  &quot;published&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
    t.integer  &quot;background_id&quot;, :limit =&gt; 11
end

It works great... except that AWS 2.1.0 (from datanoise - http://github.com/datanoise/actionwebservice/tree/master) is returning my binary data in the structured object (ActiveRecord::Base object) as a String instead of Base64.  It is being returned as &lt;string&gt;datadatadata&lt;/string&gt;.

I realize that XMLRPC and SOAP are kind of like Rails' red-headed step children, but some of us are stuck with them for reasons outside our control...  :(</original-body>
  <latest-body>This is similar to the (old) ticket:

http://dev.rubyonrails.org/ticket/3567

SO I realize that this may not be the &quot;appropriate&quot; place to put this, as AWS is no longer packaged with rails.  But on the offchance someone here would like to track this, here is the issue:

Using XMLRPC, I'm returning a Track object, defined by this schema:

create_table &quot;tracks&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;user_id&quot;,       :limit =&gt; 11
    t.binary   &quot;track_data&quot;
    t.binary   &quot;warn_data&quot;
    t.boolean  &quot;published&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
    t.integer  &quot;background_id&quot;, :limit =&gt; 11
end

It works great... except that AWS 2.1.0 (from datanoise - http://github.com/datanoise/actionwebservice/tree/master) is returning my binary data in the structured object (ActiveRecord::Base object) as a String instead of Base64.  It is being returned as &lt;string&gt;datadatadata&lt;/string&gt;.

I realize that XMLRPC and SOAP are kind of like Rails' red-headed step children, but some of us are stuck with them for reasons outside our control...  :(</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is similar to the (old) ticket:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.rubyonrails.org/ticket/3567&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SO I realize that this may not be the &quot;appropriate&quot; place to put
this, as AWS is no longer packaged with rails. But on the offchance
someone here would like to track this, here is the issue:&lt;/p&gt;
&lt;p&gt;Using XMLRPC, I'm returning a Track object, defined by this
schema:&lt;/p&gt;
&lt;p&gt;create_table &quot;tracks&quot;, :force =&amp;gt; true do |t|&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;t.string   &quot;name&quot;
t.integer  &quot;user_id&quot;,       :limit =&amp;gt; 11
t.binary   &quot;track_data&quot;
t.binary   &quot;warn_data&quot;
t.boolean  &quot;published&quot;
t.datetime &quot;created_at&quot;
t.datetime &quot;updated_at&quot;
t.integer  &quot;background_id&quot;, :limit =&amp;gt; 11
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;It works great... except that AWS 2.1.0 (from datanoise -
&lt;a href=&quot;http://github.com/datanoise/actionwebservice/tree/master)&quot;&gt;http://github.com/datanoise/acti...&lt;/a&gt;
is returning my binary data in the structured object
(ActiveRecord::Base object) as a String instead of Base64. It is
being returned as datadatadata.&lt;/p&gt;
&lt;p&gt;I realize that XMLRPC and SOAP are kind of like Rails'
red-headed step children, but some of us are stuck with them for
reasons outside our control... :(&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is similar to the (old) ticket:

http://dev.rubyonrails.org/ticket/3567

SO I realize that this may not be the &quot;appropriate&quot; place to put this, as AWS is no longer packaged with rails.  But on the offchance someone here would like to track this, here is the issue:

Using XMLRPC, I'm returning a Track object, defined by this schema:

create_table &quot;tracks&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.integer  &quot;user_id&quot;,       :limit =&gt; 11
    t.binary   &quot;track_data&quot;
    t.binary   &quot;warn_data&quot;
    t.boolean  &quot;published&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
    t.integer  &quot;background_id&quot;, :limit =&gt; 11
end

It works great... except that AWS 2.1.0 (from datanoise - http://github.com/datanoise/actionwebservice/tree/master) is returning my binary data in the structured object (ActiveRecord::Base object) as a String instead of Base64.  It is being returned as &lt;string&gt;datadatadata&lt;/string&gt;.

I realize that XMLRPC and SOAP are kind of like Rails' red-headed step children, but some of us are stuck with them for reasons outside our control...  :(</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is similar to the (old) ticket:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.rubyonrails.org/ticket/3567&quot;&gt;http://dev.rubyonrails.org/ticke...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SO I realize that this may not be the &quot;appropriate&quot; place to put
this, as AWS is no longer packaged with rails. But on the offchance
someone here would like to track this, here is the issue:&lt;/p&gt;
&lt;p&gt;Using XMLRPC, I'm returning a Track object, defined by this
schema:&lt;/p&gt;
&lt;p&gt;create_table &quot;tracks&quot;, :force =&amp;gt; true do |t|&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;t.string   &quot;name&quot;
t.integer  &quot;user_id&quot;,       :limit =&amp;gt; 11
t.binary   &quot;track_data&quot;
t.binary   &quot;warn_data&quot;
t.boolean  &quot;published&quot;
t.datetime &quot;created_at&quot;
t.datetime &quot;updated_at&quot;
t.integer  &quot;background_id&quot;, :limit =&amp;gt; 11
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;It works great... except that AWS 2.1.0 (from datanoise -
&lt;a href=&quot;http://github.com/datanoise/actionwebservice/tree/master)&quot;&gt;http://github.com/datanoise/acti...&lt;/a&gt;
is returning my binary data in the structured object
(ActiveRecord::Base object) as a String instead of Base64. It is
being returned as datadatadata.&lt;/p&gt;
&lt;p&gt;I realize that XMLRPC and SOAP are kind of like Rails'
red-headed step children, but some of us are stuck with them for
reasons outside our control... :(&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T18:34:32+00:00</created-at>
      <creator-id type="integer">50328</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2216</number>
      <permalink>base64-does-not-get-cast-for-activerecord-objects-when-using-xmlrpc-aws</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Base64 does not get cast for ActiveRecord objects when using XMLRPC AWS.</title>
      <updated-at type="datetime">2009-03-11T19:10:34+00:00</updated-at>
      <user-id type="integer">50328</user-id>
      <version type="integer">1</version>
      <user-name>Steve</user-name>
      <creator-name>Steve</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2216</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Unrelated to Rails. Can be marked as invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Unrelated to Rails. Can be marked as invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-15T19:41:23+01:00</created-at>
      <creator-id type="integer">50328</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2216</number>
      <permalink>base64-does-not-get-cast-for-activerecord-objects-when-using-xmlrpc-aws</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Base64 does not get cast for ActiveRecord objects when using XMLRPC AWS.</title>
      <updated-at type="datetime">2010-04-15T19:41:28+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">2</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Steve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2216</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Seems like a bug in the plugin rather than Rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems like a bug in the plugin rather than Rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-15T22:58:07+01:00</created-at>
      <creator-id type="integer">50328</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2216</number>
      <permalink>base64-does-not-get-cast-for-activerecord-objects-when-using-xmlrpc-aws</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Base64 does not get cast for ActiveRecord objects when using XMLRPC AWS.</title>
      <updated-at type="datetime">2010-04-15T22:58:15+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Steve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2216</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
