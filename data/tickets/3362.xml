<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-09T20:05:20+01:00</created-at>
  <creator-id type="integer">72654</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3362</number>
  <permalink>fix-inflection-in-reflection</permalink>
  <priority type="integer">160117</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Fix inflection in reflection</title>
  <updated-at type="datetime">2010-10-06T06:38:27+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">2</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>cmilfont</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3362</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hello guys, i am suggesting this patch to resolve a problem the inflector in my language in relations has_many.
We have grammar rules that singularize the first word in compounds words

See how is the singular and plural in my idiom
 ActiveSupport::Inflector.inflections do |inflect|
   inflect.irregular 'plano_de_contas_base', 'planos_de_contas_base'
   inflect.irregular 'plano_de_contas', 'planos_de_contas'
 end

I found this solution to singularize correctly
class_name = name.to_s.camelize
#output PlanosDeContas
class_name.singularize
#output PlanosDeConta
name.to_s.singularize.camelize
#output PlanoDeContas, it should be done

has_many example
#book-keeper in portuguese
class PlanoDeContas &lt; ActiveRecord::Base
  belongs_to :banco
end

#bank in portuguese
class Banco &lt; ActiveRecord::Base
  has_many :planos_de_contas
end

cheers!</original-body>
  <latest-body>Hello guys, i am suggesting this patch to resolve a problem the inflector in my language in relations has_many.
We have grammar rules that singularize the first word in compounds words

See how is the singular and plural in my idiom
 ActiveSupport::Inflector.inflections do |inflect|
   inflect.irregular 'plano_de_contas_base', 'planos_de_contas_base'
   inflect.irregular 'plano_de_contas', 'planos_de_contas'
 end

I found this solution to singularize correctly
class_name = name.to_s.camelize
#output PlanosDeContas
class_name.singularize
#output PlanosDeConta
name.to_s.singularize.camelize
#output PlanoDeContas, it should be done

has_many example
#book-keeper in portuguese
class PlanoDeContas &lt; ActiveRecord::Base
  belongs_to :banco
end

#bank in portuguese
class Banco &lt; ActiveRecord::Base
  has_many :planos_de_contas
end

cheers!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello guys, i am suggesting this patch to resolve a problem the
inflector in my language in relations has_many.&lt;br&gt;
We have grammar rules that singularize the first word in compounds
words&lt;/p&gt;
&lt;p&gt;See how is the singular and plural in my idiom&lt;br&gt;
ActiveSupport::Inflector.inflections do |inflect| inflect.irregular
'plano_de_contas_base', 'planos_de_contas_base' inflect.irregular
'plano_de_contas', 'planos_de_contas' end&lt;/p&gt;
&lt;p&gt;I found this solution to singularize correctly&lt;br&gt;
class_name = name.to_s.camelize&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;output PlanosDeContas&lt;/h1&gt;
&lt;p&gt;class_name.singularize&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;output PlanosDeConta&lt;/h1&gt;
&lt;p&gt;name.to_s.singularize.camelize&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;output PlanoDeContas, it should be done&lt;/h1&gt;
&lt;p&gt;has_many example&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;book-keeper in portuguese&lt;/h1&gt;
&lt;p&gt;class PlanoDeContas &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :banco end&lt;/p&gt;
&lt;h1&gt;bank in portuguese&lt;/h1&gt;
&lt;p&gt;class Banco &amp;lt; ActiveRecord::Base&lt;br&gt;
has_many :planos_de_contas end&lt;/p&gt;
&lt;p&gt;cheers!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello guys, i am suggesting this patch to resolve a problem the inflector in my language in relations has_many.
We have grammar rules that singularize the first word in compounds words

See how is the singular and plural in my idiom
ActiveSupport::Inflector.inflections do |inflect|

inflect.irregular 'plano_de_contas_base', 'planos_de_contas_base'
inflect.irregular 'plano_de_contas', 'planos_de_contas'

end

I found this solution to singularize correctly

class_name = name.to_s.camelize
output PlanosDeContas

class_name.singularize
output PlanosDeConta

name.to_s.singularize.camelize
output PlanoDeContas, it should be done

has_many example

book-keeper in portuguese
class PlanoDeContas &lt; ActiveRecord::Base

belongs_to :banco

end

bank in portuguese
class Banco &lt; ActiveRecord::Base

has_many :planos_de_contas

end

cheers!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello guys, i am suggesting this patch to resolve a problem the
inflector in my language in relations has_many.&lt;br&gt;
We have grammar rules that singularize the first word in compounds
words&lt;/p&gt;
&lt;p&gt;See how is the singular and plural in my idiom&lt;br&gt;
ActiveSupport::Inflector.inflections do |inflect|&lt;/p&gt;
&lt;p&gt;inflect.irregular 'plano_de_contas_base',
'planos_de_contas_base'&lt;br&gt;
inflect.irregular 'plano_de_contas', 'planos_de_contas'&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;I found this solution to singularize correctly&lt;/p&gt;
&lt;p&gt;class_name = name.to_s.camelize&lt;br&gt;
output PlanosDeContas&lt;/p&gt;
&lt;p&gt;class_name.singularize&lt;br&gt;
output PlanosDeConta&lt;/p&gt;
&lt;p&gt;name.to_s.singularize.camelize&lt;br&gt;
output PlanoDeContas, it should be done&lt;/p&gt;
&lt;p&gt;has_many example&lt;/p&gt;
&lt;p&gt;book-keeper in portuguese&lt;br&gt;
class PlanoDeContas &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;belongs_to :banco&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;bank in portuguese&lt;br&gt;
class Banco &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_many :planos_de_contas&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;cheers!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-09T20:05:20+01:00</created-at>
      <creator-id type="integer">72654</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3362</number>
      <permalink>fix-inflection-in-reflection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fix inflection in reflection</title>
      <updated-at type="datetime">2009-10-09T20:28:57+01:00</updated-at>
      <user-id type="integer">72654</user-id>
      <version type="integer">1</version>
      <user-name>cmilfont</user-name>
      <creator-name>cmilfont</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3362</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:38:25+01:00</created-at>
      <creator-id type="integer">72654</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3362</number>
      <permalink>fix-inflection-in-reflection</permalink>
      <priority type="integer">160117</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Fix inflection in reflection</title>
      <updated-at type="datetime">2010-10-06T06:38:27+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>cmilfont</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3362</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b9713129813318988a1a93221a85d9977f1edf99</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-09T20:05:22+01:00</created-at>
      <filename>fix-inflection-in-reflection.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">291635</id>
      <size type="integer">1917</size>
      <uploader-id type="integer">72654</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/291635/fix-inflection-in-reflection.diff</url>
    </attachment>
  </attachments>
</ticket>
