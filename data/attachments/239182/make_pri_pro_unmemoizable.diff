From afdf0b83f88440d90bc3fa62ada58f395568abbf Mon Sep 17 00:00:00 2001
From: jeem <jeem@hughesorama.com>
Date: Sat, 8 Aug 2009 16:24:23 -0500
Subject: [PATCH] make private_and_public_methods unmemoizable

---
 activesupport/lib/active_support/memoizable.rb     |    2 +-
 .../flush_cache_on_private_memoization_test.rb     |   44 ++++++++++++++++++++
 2 files changed, 45 insertions(+), 1 deletions(-)
 create mode 100644 activesupport/test/flush_cache_on_private_memoization_test.rb

diff --git a/activesupport/lib/active_support/memoizable.rb b/activesupport/lib/active_support/memoizable.rb
index fa6db68..7724b9d 100644
--- a/activesupport/lib/active_support/memoizable.rb
+++ b/activesupport/lib/active_support/memoizable.rb
@@ -59,7 +59,7 @@ module ActiveSupport
 
       def flush_cache(*syms, &block)
         syms.each do |sym|
-          methods.each do |m|
+          (methods + private_methods + protected_methods).each do |m|
             if m.to_s =~ /^_unmemoized_(#{sym})/
               ivar = ActiveSupport::Memoizable.memoized_ivar_for($1)
               instance_variable_get(ivar).clear if instance_variable_defined?(ivar)
diff --git a/activesupport/test/flush_cache_on_private_memoization_test.rb b/activesupport/test/flush_cache_on_private_memoization_test.rb
new file mode 100644
index 0000000..ddbd05b
--- /dev/null
+++ b/activesupport/test/flush_cache_on_private_memoization_test.rb
@@ -0,0 +1,44 @@
+require 'rubygems'
+require 'activesupport'
+require 'test/unit'
+
+class FlashCacheOnPrivateMemoizationTest < Test::Unit::TestCase
+  extend ActiveSupport::Memoizable
+
+  def test_public
+    assert_method_unmemoizable :pub
+  end
+
+  def test_protected
+    assert_method_unmemoizable :prot
+  end
+
+  def test_private
+    assert_method_unmemoizable :priv
+  end
+
+  def pub; rand end
+  memoize :pub
+
+  protected
+
+  def prot; rand end
+  memoize :prot
+
+  private
+
+  def priv; rand end
+  memoize :priv
+
+  def assert_method_unmemoizable(meth, message=nil)
+    full_message = build_message(message, "<?> not unmemoizable.\n", meth)
+    assert_block(full_message) do
+      a = send meth
+      b = send meth
+      unmemoize_all
+      c = send meth
+      a == b && a != c
+    end
+  end
+
+end
\ No newline at end of file
-- 
1.5.3.4

