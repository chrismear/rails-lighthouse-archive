<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-27T17:39:55+01:00</created-at>
  <creator-id type="integer">33130</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1121</number>
  <permalink>assert_template-fails-when-multiple-templates-are-rendered</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>assert_template fails when multiple templates are rendered</title>
  <updated-at type="datetime">2010-07-27T17:39:55+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">4</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Matt Brown</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1121</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>assert_template is provided by rails to check if the appropriate view template was rendered by a controller, the example given by the docs is

@@@
 # assert that the &quot;new&quot; view template was rendered
 assert_template &quot;new&quot;
@@@

This will only work if no other template is rendered in the controller as the implementation of assert_template simply checks that the name of the *first* template rendered during the processing matches the supplied value. 

There are many scenarios where the first template rendered during the controller is not actually the template being checked for, the two that I have encountered are:

1. Using render_to_string to process a partial and store into an instance variable in the controller. assert_template ends up with the name of the partial in this case.
2. Rendering a view inside of a layout, because the layout template is rendered before the 'inner' view template, assert_template ends up with the name of the layout template in this case. 

Both of these situations cause the example usage of assert_template to fail and make assert_template essentially useless for testing many controllers.

I have attached a patch which fixes the first case, by resetting first_render in the erase_render_results method which is called after render_to_string completes. I'm not sure how to address the 2nd case or the more design flaw however.</original-body>
  <latest-body>assert_template is provided by rails to check if the appropriate view template was rendered by a controller, the example given by the docs is

@@@
 # assert that the &quot;new&quot; view template was rendered
 assert_template &quot;new&quot;
@@@

This will only work if no other template is rendered in the controller as the implementation of assert_template simply checks that the name of the *first* template rendered during the processing matches the supplied value. 

There are many scenarios where the first template rendered during the controller is not actually the template being checked for, the two that I have encountered are:

1. Using render_to_string to process a partial and store into an instance variable in the controller. assert_template ends up with the name of the partial in this case.
2. Rendering a view inside of a layout, because the layout template is rendered before the 'inner' view template, assert_template ends up with the name of the layout template in this case. 

Both of these situations cause the example usage of assert_template to fail and make assert_template essentially useless for testing many controllers.

I have attached a patch which fixes the first case, by resetting first_render in the erase_render_results method which is called after render_to_string completes. I'm not sure how to address the 2nd case or the more design flaw however.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;assert_template is provided by rails to check if the appropriate
view template was rendered by a controller, the example given by
the docs is&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
 # assert that the &amp;quot;new&amp;quot; view template was rendered
 assert_template &amp;quot;new&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will only work if no other template is rendered in the
controller as the implementation of assert_template simply checks
that the name of the &lt;em&gt;first&lt;/em&gt; template rendered during the
processing matches the supplied value.&lt;/p&gt;
&lt;p&gt;There are many scenarios where the first template rendered
during the controller is not actually the template being checked
for, the two that I have encountered are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using render_to_string to process a partial and store into an
instance variable in the controller. assert_template ends up with
the name of the partial in this case.&lt;/li&gt;
&lt;li&gt;Rendering a view inside of a layout, because the layout
template is rendered before the 'inner' view template,
assert_template ends up with the name of the layout template in
this case.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Both of these situations cause the example usage of
assert_template to fail and make assert_template essentially
useless for testing many controllers.&lt;/p&gt;
&lt;p&gt;I have attached a patch which fixes the first case, by resetting
first_render in the erase_render_results method which is called
after render_to_string completes. I'm not sure how to address the
2nd case or the more design flaw however.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>assert_template is provided by rails to check if the appropriate view template was rendered by a controller, the example given by the docs is

@@@
 # assert that the &quot;new&quot; view template was rendered
 assert_template &quot;new&quot;
@@@

This will only work if no other template is rendered in the controller as the implementation of assert_template simply checks that the name of the *first* template rendered during the processing matches the supplied value. 

There are many scenarios where the first template rendered during the controller is not actually the template being checked for, the two that I have encountered are:

1. Using render_to_string to process a partial and store into an instance variable in the controller. assert_template ends up with the name of the partial in this case.
2. Rendering a view inside of a layout, because the layout template is rendered before the 'inner' view template, assert_template ends up with the name of the layout template in this case. 

Both of these situations cause the example usage of assert_template to fail and make assert_template essentially useless for testing many controllers.

I have attached a patch which fixes the first case, by resetting first_render in the erase_render_results method which is called after render_to_string completes. I'm not sure how to address the 2nd case or the more design flaw however.</body>
      <body-html>&lt;div&gt;&lt;p&gt;assert_template is provided by rails to check if the appropriate
view template was rendered by a controller, the example given by
the docs is&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
 # assert that the &amp;quot;new&amp;quot; view template was rendered
 assert_template &amp;quot;new&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will only work if no other template is rendered in the
controller as the implementation of assert_template simply checks
that the name of the &lt;em&gt;first&lt;/em&gt; template rendered during the
processing matches the supplied value.&lt;/p&gt;
&lt;p&gt;There are many scenarios where the first template rendered
during the controller is not actually the template being checked
for, the two that I have encountered are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using render_to_string to process a partial and store into an
instance variable in the controller. assert_template ends up with
the name of the partial in this case.&lt;/li&gt;
&lt;li&gt;Rendering a view inside of a layout, because the layout
template is rendered before the 'inner' view template,
assert_template ends up with the name of the layout template in
this case.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Both of these situations cause the example usage of
assert_template to fail and make assert_template essentially
useless for testing many controllers.&lt;/p&gt;
&lt;p&gt;I have attached a patch which fixes the first case, by resetting
first_render in the erase_render_results method which is called
after render_to_string completes. I'm not sure how to address the
2nd case or the more design flaw however.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-26T18:46:54+01:00</created-at>
      <creator-id type="integer">33130</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1121</number>
      <permalink>assert_template-fails-when-multiple-templates-are-rendered</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>assert_template fails when multiple templates are rendered</title>
      <updated-at type="datetime">2008-09-26T18:46:58+01:00</updated-at>
      <user-id type="integer">33130</user-id>
      <version type="integer">1</version>
      <user-name>Matt Brown</user-name>
      <creator-name>Matt Brown</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1121</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attaching test case and patch against Edge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attaching test case and patch against Edge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T20:06:06+01:00</created-at>
      <creator-id type="integer">33130</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1121</number>
      <permalink>assert_template-fails-when-multiple-templates-are-rendered</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>assert_template fails when multiple templates are rendered</title>
      <updated-at type="datetime">2008-09-29T20:06:09+01:00</updated-at>
      <user-id type="integer">33334</user-id>
      <version type="integer">2</version>
      <user-name>Nick Eskelinen</user-name>
      <creator-name>Matt Brown</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1121</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I think scenario 2 was fixed in Edge with this:

http://github.com/rails/rails/commit/73b34e9f75d33dc0709d4ad36c912bdbb8977994</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think scenario 2 was fixed in Edge with this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/73b34e9f75d33dc0709d4ad36c912bdbb8977994&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T21:55:39+01:00</created-at>
      <creator-id type="integer">33130</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1121</number>
      <permalink>assert_template-fails-when-multiple-templates-are-rendered</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>assert_template fails when multiple templates are rendered</title>
      <updated-at type="datetime">2008-09-29T21:55:42+01:00</updated-at>
      <user-id type="integer">33334</user-id>
      <version type="integer">3</version>
      <user-name>Nick Eskelinen</user-name>
      <creator-name>Matt Brown</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1121</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-03T16:01:07+00:00</created-at>
      <creator-id type="integer">33130</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1121</number>
      <permalink>assert_template-fails-when-multiple-templates-are-rendered</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>assert_template fails when multiple templates are rendered</title>
      <updated-at type="datetime">2008-12-03T16:01:12+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">4</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Matt Brown</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1121</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Cheap balenciaga purses, balenciaga handbags, balenciaga wallets onsale, 
Luxuy handbags, purses, high quality at low price at poboshop.com.
&lt;a href='http://www.poboshop.com'&gt;balenciaga handbags&lt;/a&gt;
&lt;a href='http://www.balenciagaonsale.com'&gt;balenciaga bags&lt;/a&gt;

Explore the world of erotic lingerie. Find the most erotic lingerie, hot underwear,
babydoll, clubwear, teddies and more.
&lt;a href='http://www.allonmall.com'&gt;erotic lingerie&lt;/a&gt;


Dsquared2discount is the best online Dsquared shop where you can 
buy the Dsquared Jacket, Dsquared Jeans, Dsquared Shirt and more.
&lt;a href='http://www.dsquared2discount.com'&gt;Dsquared&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cheap balenciaga purses, balenciaga handbags, balenciaga wallets
onsale,&lt;br&gt;
Luxuy handbags, purses, high quality at low price at
poboshop.com.&lt;br&gt;
&lt;a href=&quot;http://www.poboshop.com&quot;&gt;balenciaga handbags&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.balenciagaonsale.com&quot;&gt;balenciaga bags&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Explore the world of erotic lingerie. Find the most erotic
lingerie, hot underwear,&lt;br&gt;
babydoll, clubwear, teddies and more.&lt;br&gt;
&lt;a href=&quot;http://www.allonmall.com&quot;&gt;erotic lingerie&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dsquared2discount is the best online Dsquared shop where you
can&lt;br&gt;
buy the Dsquared Jacket, Dsquared Jeans, Dsquared Shirt and
more.&lt;br&gt;
&lt;a href=&quot;http://www.dsquared2discount.com&quot;&gt;Dsquared&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-27T15:21:32+01:00</created-at>
      <creator-id type="integer">33130</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1121</number>
      <permalink>assert_template-fails-when-multiple-templates-are-rendered</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>assert_template fails when multiple templates are rendered</title>
      <updated-at type="datetime">2010-07-27T17:39:55+01:00</updated-at>
      <user-id type="integer">109040</user-id>
      <version type="integer">5</version>
      <user-name>matin</user-name>
      <creator-name>Matt Brown</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1121</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4d622afc4636a3cc63c7caf9401bf2cede8c190f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-26T18:46:55+01:00</created-at>
      <filename>fix_assert_template_render_to_string.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">48968</id>
      <size type="integer">383</size>
      <uploader-id type="integer">33130</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/48968/fix_assert_template_render_to_string.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>9b41271f1286e5f46c06a4ccfa2be09242a49daa</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-29T20:06:06+01:00</created-at>
      <filename>fix_assert_template_render_to_string.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">49403</id>
      <size type="integer">1757</size>
      <uploader-id type="integer">33334</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/49403/fix_assert_template_render_to_string.patch</url>
    </attachment>
  </attachments>
</ticket>
