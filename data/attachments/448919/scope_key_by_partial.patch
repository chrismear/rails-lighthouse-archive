From 41fca6b809e9be7540eea5f61f8f5a7d72128c78 Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Tue, 16 Mar 2010 20:12:04 -0300
Subject: [PATCH] scope_key_by_partial fix for Ruby 1.9 when there's virtual_path [#4202 state:resolved]

---
 .../lib/action_view/helpers/translation_helper.rb  |    5 +++--
 .../fixtures/test/scoped_array_translation.erb     |    1 +
 .../test/template/translation_helper_test.rb       |    6 ++++++
 3 files changed, 10 insertions(+), 2 deletions(-)
 create mode 100644 actionpack/test/fixtures/test/scoped_array_translation.erb

diff --git a/actionpack/lib/action_view/helpers/translation_helper.rb b/actionpack/lib/action_view/helpers/translation_helper.rb
index 26ba4e2..457944d 100644
--- a/actionpack/lib/action_view/helpers/translation_helper.rb
+++ b/actionpack/lib/action_view/helpers/translation_helper.rb
@@ -29,9 +29,10 @@ module ActionView
       private
 
         def scope_key_by_partial(key)
-          if (key.respond_to?(:join) ? key.join : key.to_s).first == "."
+          strkey = key.respond_to?(:join) ? key.join : key.to_s
+          if strkey.first == "."
             if @_virtual_path
-              @_virtual_path.gsub(%r{/_?}, ".") + key.to_s
+              @_virtual_path.gsub(%r{/_?}, ".") + strkey
             else
               raise "Cannot use t(#{key.inspect}) shortcut because path is not available"
             end
diff --git a/actionpack/test/fixtures/test/scoped_array_translation.erb b/actionpack/test/fixtures/test/scoped_array_translation.erb
new file mode 100644
index 0000000..0a0c79f
--- /dev/null
+++ b/actionpack/test/fixtures/test/scoped_array_translation.erb
@@ -0,0 +1 @@
+<%= t(['.foo', '.bar']) %>
\ No newline at end of file
diff --git a/actionpack/test/template/translation_helper_test.rb b/actionpack/test/template/translation_helper_test.rb
index 5a32d71..6782bf0 100644
--- a/actionpack/test/template/translation_helper_test.rb
+++ b/actionpack/test/template/translation_helper_test.rb
@@ -41,4 +41,10 @@ class TranslationHelperTest < ActiveSupport::TestCase
     @view = ActionView::Base.new(ActionController::Base.view_paths, {})
     assert_equal "helper", @view.render(:file => "test/translation")
   end
+
+  def test_scoping_by_partial_of_an_array
+    I18n.expects(:translate).with("test.scoped_array_translation.foo.bar", :raise => true).returns(["foo", "bar"])
+    @view = ActionView::Base.new(ActionController::Base.view_paths, {})
+    assert_equal "foobar", @view.render(:file => "test/scoped_array_translation")
+  end
 end
-- 
1.7.0

