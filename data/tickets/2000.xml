<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-17T19:09:05+00:00</created-at>
  <creator-id type="integer">32494</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2000</number>
  <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
  <priority type="integer">1242</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag nil="true"></tag>
  <title>Patch for HTTP Digest Authentication URI comparison</title>
  <updated-at type="datetime">2010-11-08T08:26:03+00:00</updated-at>
  <user-id type="integer">94458</user-id>
  <version type="integer">16</version>
  <user-name>Jeff Kreeftmeijer</user-name>
  <creator-name>Don Parish</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This patch better implements the fix I made in #1848.

RFC 2617, Section 3.2.2.5, says that the authenticating server must ensure the document designated by the uri parameter is the same as the document served. To do this, the uri in the credentials should be compared to the uri in the request line.

This patch does that. The prior implementation before my first patch, passed in the full URL instead of the URI, that's why the tests passed, but it failed with most browsers which send a uri without the full URL.

I've added two tests. One that makes sure the uris in the request and credentials match, whether using a url or relative uri. The other test checks to see that the authorization will fail if the header uri is changed.</original-body>
  <latest-body>This patch better implements the fix I made in #1848.

RFC 2617, Section 3.2.2.5, says that the authenticating server must ensure the document designated by the uri parameter is the same as the document served. To do this, the uri in the credentials should be compared to the uri in the request line.

This patch does that. The prior implementation before my first patch, passed in the full URL instead of the URI, that's why the tests passed, but it failed with most browsers which send a uri without the full URL.

I've added two tests. One that makes sure the uris in the request and credentials match, whether using a url or relative uri. The other test checks to see that the authorization will fail if the header uri is changed.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch better implements the fix I made in &lt;a href=&quot;/projects/8994/tickets/1848&quot; title=&quot;Ticket #1848&quot;&gt;#1848&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;RFC 2617, Section 3.2.2.5, says that the authenticating server
must ensure the document designated by the uri parameter is the
same as the document served. To do this, the uri in the credentials
should be compared to the uri in the request line.&lt;/p&gt;
&lt;p&gt;This patch does that. The prior implementation before my first
patch, passed in the full URL instead of the URI, that's why the
tests passed, but it failed with most browsers which send a uri
without the full URL.&lt;/p&gt;
&lt;p&gt;I've added two tests. One that makes sure the uris in the
request and credentials match, whether using a url or relative uri.
The other test checks to see that the authorization will fail if
the header uri is changed.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch better implements the fix I made in #1848.

RFC 2617, Section 3.2.2.5, says that the authenticating server must ensure the document designated by the uri parameter is the same as the document served. To do this, the uri in the credentials should be compared to the uri in the request line.

This patch does that. The prior implementation before my first patch, passed in the full URL instead of the URI, that's why the tests passed, but it failed with most browsers which send a uri without the full URL.

I've added two tests. One that makes sure the uris in the request and credentials match, whether using a url or relative uri. The other test checks to see that the authorization will fail if the header uri is changed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch better implements the fix I made in &lt;a href=&quot;/projects/8994/tickets/1848&quot; title=&quot;Ticket #1848&quot;&gt;#1848&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;RFC 2617, Section 3.2.2.5, says that the authenticating server
must ensure the document designated by the uri parameter is the
same as the document served. To do this, the uri in the credentials
should be compared to the uri in the request line.&lt;/p&gt;
&lt;p&gt;This patch does that. The prior implementation before my first
patch, passed in the full URL instead of the URI, that's why the
tests passed, but it failed with most browsers which send a uri
without the full URL.&lt;/p&gt;
&lt;p&gt;I've added two tests. One that makes sure the uris in the
request and credentials match, whether using a url or relative uri.
The other test checks to see that the authorization will fail if
the header uri is changed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-17T19:09:06+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-17T19:09:10+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">1</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Updated patch to consolidate commits.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch to consolidate commits.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-18T05:16:55+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-18T05:17:00+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">2</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached patch includes changes from patch above (http_digest_authentication_fix_uri.diff) and adds support for using a hashed digest of the credentials instead of storing a plain text password. The format is the ha1 hash which is the MD5(user:realm:password), the same way Apache stores digest credentials. Protects the user password from use in other applications, although having the ha1 hash is enough to allow someone to authenticate.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached patch includes changes from patch above
(http_digest_authentication_fix_uri.diff) and adds support for
using a hashed digest of the credentials instead of storing a plain
text password. The format is the ha1 hash which is the
MD5(user:realm:password), the same way Apache stores digest
credentials. Protects the user password from use in other
applications, although having the ha1 hash is enough to allow
someone to authenticate.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-18T12:56:30+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-18T12:56:34+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">3</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Definitely like the ability to use ha1 for verification vs. a clear-text password. However, I think we need to make a variant of the ha1 method public, so that users can use it when initially storing the password. The password_procedure block should also pass the realm for completeness; best not to assume it's an application global.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Definitely like the ability to use ha1 for verification vs. a
clear-text password. However, I think we need to make a variant of
the ha1 method public, so that users can use it when initially
storing the password. The password_procedure block should also pass
the realm for completeness; best not to assume it's an application
global.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-18T15:48:13+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-18T15:48:18+00:00</updated-at>
      <user-id type="integer">22440</user-id>
      <version type="integer">4</version>
      <user-name>Gregg Kellogg</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Gregg, not sure if it is necessary to make *ha1* method public as the code is just a one-liner. I added it just to make my line of code shorter and easier to follow.

I took a look at passing the realm into the block, but it's not necessary since the realm is already a parameter of the authenticate method:

&lt;script src=&quot;http://gist.github.com/67053.js&quot;&gt;&lt;/script&gt;

Please take a look at my code. I've had an interest in using Digest and want to help make it a good implementation for Rails. My last change kept a plain text option for storing the passwords, but I'm not sure that is good idea to even have the option. Maybe it needs to be an option that has to be explicitly turned on.

My time is limited, but I'd like to look at:

  - adding support for auth-int
  - using a nonce and opaque that don't rely on having sessions turned on</body>
      <body-html>&lt;div&gt;&lt;p&gt;Gregg, not sure if it is necessary to make &lt;em&gt;ha1&lt;/em&gt; method
public as the code is just a one-liner. I added it just to make my
line of code shorter and easier to follow.&lt;/p&gt;
&lt;p&gt;I took a look at passing the realm into the block, but it's not
necessary since the realm is already a parameter of the
authenticate method:&lt;/p&gt;

&lt;p&gt;Please take a look at my code. I've had an interest in using
Digest and want to help make it a good implementation for Rails. My
last change kept a plain text option for storing the passwords, but
I'm not sure that is good idea to even have the option. Maybe it
needs to be an option that has to be explicitly turned on.&lt;/p&gt;
&lt;p&gt;My time is limited, but I'd like to look at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adding support for auth-int&lt;/li&gt;
&lt;li&gt;using a nonce and opaque that don't rely on having sessions
turned on&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-19T19:21:11+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-19T19:21:15+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">5</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Here is code and gist for last comment:

http://gist.github.com/67053



      ADMIN_REALM = &quot;Admin Realm&quot;
      USERS_REALM = &quot;Users Realm&quot;
      
      REALM_USERS = {
        ADMIN_REALM =&gt; {
          &quot;dhh&quot; =&gt; &quot;as&quot;,
          &quot;don&quot; =&gt; &quot;ap&quot;},
        USERS_REALM =&gt; {
          &quot;dhh&quot; =&gt; &quot;us&quot;,
          &quot;don&quot; =&gt; &quot;up&quot;}
      }
    
      def authenticate
        authenticate_or_request_with_http_digest(USERS_REALM) do |username|
          REALM_USERS[USERS_REALM][username]
        end
      end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is code and gist for last comment:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gist.github.com/67053&quot;&gt;http://gist.github.com/67053&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  ADMIN_REALM = &quot;Admin Realm&quot;
  USERS_REALM = &quot;Users Realm&quot;

  REALM_USERS = {
    ADMIN_REALM =&amp;gt; {
      &quot;dhh&quot; =&amp;gt; &quot;as&quot;,
      &quot;don&quot; =&amp;gt; &quot;ap&quot;},
    USERS_REALM =&amp;gt; {
      &quot;dhh&quot; =&amp;gt; &quot;us&quot;,
      &quot;don&quot; =&amp;gt; &quot;up&quot;}
  }

  def authenticate
    authenticate_or_request_with_http_digest(USERS_REALM) do |username|
      REALM_USERS[USERS_REALM][username]
    end
  end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-19T19:24:21+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-19T19:24:24+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">6</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Without a session_id, something else must be used on which to base the creation of the nonce. The OAuth plugin creates a DB table to track nonces, which is too expensive, in my mind. Using the client IP address is a possibility, but it can change for mobile clients and can be a problem with proxies. This might best be left as a policy that can be implemented by the application, defaulting to the session_id-based nonce if not overridden. This would require  overriding nonce and validate_nonce in the ApplicationController (and moving the methods into this scope), or specifying callback routines.

I think that providing an encoding function (ha1) is preferable to specifying an algorithm for an application to implement. This can be as easy as creating an http_digest_encode_password method in ControllerMethods.

I agree with eliminating the clear password use case.

Thanks for the work on improving this implementation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Without a session_id, something else must be used on which to
base the creation of the nonce. The OAuth plugin creates a DB table
to track nonces, which is too expensive, in my mind. Using the
client IP address is a possibility, but it can change for mobile
clients and can be a problem with proxies. This might best be left
as a policy that can be implemented by the application, defaulting
to the session_id-based nonce if not overridden. This would require
overriding nonce and validate_nonce in the ApplicationController
(and moving the methods into this scope), or specifying callback
routines.&lt;/p&gt;
&lt;p&gt;I think that providing an encoding function (ha1) is preferable
to specifying an algorithm for an application to implement. This
can be as easy as creating an http_digest_encode_password method in
ControllerMethods.&lt;/p&gt;
&lt;p&gt;I agree with eliminating the clear password use case.&lt;/p&gt;
&lt;p&gt;Thanks for the work on improving this implementation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-19T20:56:44+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-19T20:56:50+00:00</updated-at>
      <user-id type="integer">22440</user-id>
      <version type="integer">7</version>
      <user-name>Gregg Kellogg</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Updated patch from February 18th, 2009 @ 12:56 PM with minor correction to documentation to require 'md5'.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch from February 18th, 2009 @ 12:56 PM with minor
correction to documentation to require 'md5'.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-23T18:53:22+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-23T18:53:27+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">8</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Gregg,

Attached is a diff that can implement Digest auth without sessions having to be turned on. I've tested it with curl on Win32. It used the session secret created by the Rails generator, so this will work as long as it is not deleted. What do you think?

Is it necessary for the opaque to change for each client? The RFC say the opaque can be used to pass session-type information, but the requirement is just that they match.

I put the nonce timeout in as a parameter. I think it could be reduced to seconds, if the Stale directive of the RFC was implemented to allow the client to use the new given nonce without having to type in the username and password again.

Thanks,

Don</body>
      <body-html>&lt;div&gt;&lt;p&gt;Gregg,&lt;/p&gt;
&lt;p&gt;Attached is a diff that can implement Digest auth without
sessions having to be turned on. I've tested it with curl on Win32.
It used the session secret created by the Rails generator, so this
will work as long as it is not deleted. What do you think?&lt;/p&gt;
&lt;p&gt;Is it necessary for the opaque to change for each client? The
RFC say the opaque can be used to pass session-type information,
but the requirement is just that they match.&lt;/p&gt;
&lt;p&gt;I put the nonce timeout in as a parameter. I think it could be
reduced to seconds, if the Stale directive of the RFC was
implemented to allow the client to use the new given nonce without
having to type in the username and password again.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Don&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-23T19:07:36+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-23T19:07:38+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">9</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Looking within ActionController, it looks like the session secret is an attribute of the CookieSessionStore, and not included in other session stores (e.g., memcache). Also, the session secret is a global for the site, and subject to greater potential for attack than something that's generated on a per-connection basis.

I like the direction you're going in, but it looks like dependencies are spreading a little wide. If we want to exclude needing a session, then we're really only left with information from the HTTP header, along with site-global information. Perhaps hashing the HOST_ADDR with something like the session secret would work. This would require promoting session secret from the cookie store to the abstract store, but shouldn't be an issue, as the option gets set in boilerplate environment code.

I'd certainly like to hear the opinion of some core members.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looking within ActionController, it looks like the session
secret is an attribute of the CookieSessionStore, and not included
in other session stores (e.g., memcache). Also, the session secret
is a global for the site, and subject to greater potential for
attack than something that's generated on a per-connection
basis.&lt;/p&gt;
&lt;p&gt;I like the direction you're going in, but it looks like
dependencies are spreading a little wide. If we want to exclude
needing a session, then we're really only left with information
from the HTTP header, along with site-global information. Perhaps
hashing the HOST_ADDR with something like the session secret would
work. This would require promoting session secret from the cookie
store to the abstract store, but shouldn't be an issue, as the
option gets set in boilerplate environment code.&lt;/p&gt;
&lt;p&gt;I'd certainly like to hear the opinion of some core members.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-25T07:24:42+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-25T07:24:46+00:00</updated-at>
      <user-id type="integer">22440</user-id>
      <version type="integer">10</version>
      <user-name>Gregg Kellogg</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>As long as the session secret is available in the session_store.rb initializer, it is available as:

    ActionController::Base.session_options[:secret]

even if the session store is set to ActiveRecord::SessionStore. You can try this on the Rails console:



I'm using a secret key to use the suggestion in [RFC3617](http://www.faqs.org/rfcs/rfc2617.html)

&gt; A nonce might, for example, be constructed as the base 64
&gt; encoding of
&gt;
&gt; time-stamp H(time-stamp &quot;:&quot; ETag &quot;:&quot; private-key)
&gt;
&gt; where ... private-key is data known only to the server.

I see your point about dependencies getting spread thin, but I Digest auth should work out of the box, and the session secret should be there for each newly generated Rails app. I need to make this clear in the docs.

We could try adding in the ETAG to add additional security to the nonce?

In any case, I hope we agree that we don't want the digest auth to be dependent on sessions being turned on. With current code, a sessionless client, such as Curl will fail on authorizing You _could_ turn on cookie support, but you shouldn't have to, as HTTP should generally be stateless.


_Testing Session Secret with Different Session Stores:_

&lt;pre&gt;
    &gt;&gt; ActionController::Base.session_store
    =&gt; ActionController::Session::CookieStore

    &gt;&gt; ActionController::Base.session_options[:secret]
    =&gt; &quot;bbbaf7c139ad50d759d...387a2306f2b500997e3&quot;

    $ rake db:sessions:create
    $ rake db:migrate

    &gt;&gt; ActionController::Base.session_store
    =&gt; ActiveRecord::SessionStore

    &gt;&gt; ActionController::Base.session_options[:secret]
    =&gt; &quot;bbbaf7c139ad50d759d...387a2306f2b500997e3&quot;
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;As long as the session secret is available in the
session_store.rb initializer, it is available as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActionController::Base.session_options[:secret]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;even if the session store is set to ActiveRecord::SessionStore.
You can try this on the Rails console:&lt;/p&gt;
&lt;p&gt;I'm using a secret key to use the suggestion in &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2617.html&quot;&gt;RFC3617&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A nonce might, for example, be constructed as the base 64
encoding of&lt;/p&gt;
&lt;p&gt;time-stamp H(time-stamp &quot;:&quot; ETag &quot;:&quot; private-key)&lt;/p&gt;
&lt;p&gt;where ... private-key is data known only to the server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I see your point about dependencies getting spread thin, but I
Digest auth should work out of the box, and the session secret
should be there for each newly generated Rails app. I need to make
this clear in the docs.&lt;/p&gt;
&lt;p&gt;We could try adding in the ETAG to add additional security to
the nonce?&lt;/p&gt;
&lt;p&gt;In any case, I hope we agree that we don't want the digest auth
to be dependent on sessions being turned on. With current code, a
sessionless client, such as Curl will fail on authorizing You
&lt;em&gt;could&lt;/em&gt; turn on cookie support, but you shouldn't have to,
as HTTP should generally be stateless.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Testing Session Secret with Different Session
Stores:&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
    &amp;gt;&amp;gt; ActionController::Base.session_store
    =&amp;gt; ActionController::Session::CookieStore

    &amp;gt;&amp;gt; ActionController::Base.session_options[:secret]
    =&amp;gt; &quot;bbbaf7c139ad50d759d...387a2306f2b500997e3&quot;

    $ rake db:sessions:create
    $ rake db:migrate

    &amp;gt;&amp;gt; ActionController::Base.session_store
    =&amp;gt; ActiveRecord::SessionStore

    &amp;gt;&amp;gt; ActionController::Base.session_options[:secret]
    =&amp;gt; &quot;bbbaf7c139ad50d759d...387a2306f2b500997e3&quot;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-25T13:26:46+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-25T13:26:47+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">11</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I think using ETag is problematic: We'd have to avoid header calculation and authentication detection until after the ETag's been generated: i.e., in an after_filter. Also, we'd need to be sure that the ETag was generated identically on both the 401 response and the subsequent authenticated response. This might not happen, for instance, if a timestamp or other volatile information is included in the response body used to generate the ETag.

I think all we're left with is using the session secret. This is another reason to promote nonce to ActionController::HttpAuthentication::Digest: it allows an application to make a more secure nonce using application-specific knowledge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think using ETag is problematic: We'd have to avoid header
calculation and authentication detection until after the ETag's
been generated: i.e., in an after_filter. Also, we'd need to be
sure that the ETag was generated identically on both the 401
response and the subsequent authenticated response. This might not
happen, for instance, if a timestamp or other volatile information
is included in the response body used to generate the ETag.&lt;/p&gt;
&lt;p&gt;I think all we're left with is using the session secret. This is
another reason to promote nonce to
ActionController::HttpAuthentication::Digest: it allows an
application to make a more secure nonce using application-specific
knowledge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-25T16:02:12+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-02-25T16:02:17+00:00</updated-at>
      <user-id type="integer">22440</user-id>
      <version type="integer">12</version>
      <user-name>Gregg Kellogg</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I've replaced with patch with #2209. It incorporates the fixes mentioned here. I believe the current implementation will not work in a controller action that does not reference sessions nor from a session less connection via curl.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've replaced with patch with &lt;a href=&quot;/projects/8994/tickets/2209&quot; title=&quot;Ticket #2209&quot;&gt;#2209&lt;/a&gt;. It
incorporates the fixes mentioned here. I believe the current
implementation will not work in a controller action that does not
reference sessions nor from a session less connection via curl.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T06:54:10+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-03-11T07:30:33+00:00</updated-at>
      <user-id type="integer">32494</user-id>
      <version type="integer">13</version>
      <user-name>Don Parish</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T13:22:58+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>2.3 authentication bug digest patch</tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2009-03-12T13:23:03+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">14</version>
      <user-name>Pratik</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T08:25:57+00:00</created-at>
      <creator-id type="integer">32494</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3 authentication bug digest patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2000</number>
      <permalink>patch-for-http-digest-authentication-uri-comparison</permalink>
      <priority type="integer">1242</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>Patch for HTTP Digest Authentication URI comparison</title>
      <updated-at type="datetime">2010-11-08T08:26:03+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">16</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Don Parish</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2000</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>fb89bc061d3660ab4c5cfe2e2adcb125aa2dc1ea</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-18T05:16:55+00:00</created-at>
      <filename>http_digest_authentication_fix_uri.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">89994</id>
      <size type="integer">3657</size>
      <uploader-id type="integer">32494</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/89994/http_digest_authentication_fix_uri.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>1f05dc34bee4fa027b106c08db0b31ac689633c0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-23T18:53:22+00:00</created-at>
      <filename>http_digest_auth_with_hashed_password_2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">91945</id>
      <size type="integer">12739</size>
      <uploader-id type="integer">32494</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/91945/http_digest_auth_with_hashed_password_2.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>98475fc27eab1e898c8fe0de76094fb06b558898</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-23T19:07:36+00:00</created-at>
      <filename>sessionless.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">91955</id>
      <size type="integer">3631</size>
      <uploader-id type="integer">32494</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/91955/sessionless.diff</url>
    </attachment>
  </attachments>
</ticket>
