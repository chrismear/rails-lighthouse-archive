<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-18T17:41:03+00:00</created-at>
  <creator-id type="integer">18346</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1405</number>
  <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
  <priority type="integer">796</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
  <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
  <updated-at type="datetime">2008-12-01T19:23:00+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>Brent Miller</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1405</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is a follow-up to ticket #394.  After #394 was set to &quot;resolved&quot; there was discussion of another bug in the SQL that never got resolved.

The habtm :joins clause includes an extra &quot;as&quot; that generates non-standard SQL, causing it to break in Oracle. In INNER JOIN clauses, you can &quot;INNER JOIN my_table t0&quot; but you can't &quot;INNER JOIN my_table as t0&quot; which is the current behavior.  MySQL and other dbs are tolerant of the extra as, but Oracle throws a fit.

You can verify this with a SQL syntax checker: http://developer.mimer.com/validator/parser200x/index.tml#parser

Old output:

SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))

New output:

SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))

No new tests are necessary, as no new behaviors are being added.

Since this is such an open-and-shut case, it would be fantastic if this bug fix could make it in to 2.2.  Thanks!</original-body>
  <latest-body>This is a follow-up to ticket #394.  After #394 was set to &quot;resolved&quot; there was discussion of another bug in the SQL that never got resolved.

The habtm :joins clause includes an extra &quot;as&quot; that generates non-standard SQL, causing it to break in Oracle. In INNER JOIN clauses, you can &quot;INNER JOIN my_table t0&quot; but you can't &quot;INNER JOIN my_table as t0&quot; which is the current behavior.  MySQL and other dbs are tolerant of the extra as, but Oracle throws a fit.

You can verify this with a SQL syntax checker: http://developer.mimer.com/validator/parser200x/index.tml#parser

Old output:

SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))

New output:

SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))

No new tests are necessary, as no new behaviors are being added.

Since this is such an open-and-shut case, it would be fantastic if this bug fix could make it in to 2.2.  Thanks!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is a follow-up to ticket &lt;a href=&quot;/projects/8994/tickets/394&quot; title=&quot;Ticket #394&quot;&gt;#394&lt;/a&gt;. After
&lt;a href=&quot;/projects/8994/tickets/394&quot; title=&quot;Ticket #394&quot;&gt;#394&lt;/a&gt;
was set to &quot;resolved&quot; there was discussion of another bug in the
SQL that never got resolved.&lt;/p&gt;
&lt;p&gt;The habtm :joins clause includes an extra &quot;as&quot; that generates
non-standard SQL, causing it to break in Oracle. In INNER JOIN
clauses, you can &quot;INNER JOIN my_table t0&quot; but you can't &quot;INNER JOIN
my_table as t0&quot; which is the current behavior. MySQL and other dbs
are tolerant of the extra as, but Oracle throws a fit.&lt;/p&gt;
&lt;p&gt;You can verify this with a SQL syntax checker: &lt;a href=&quot;http://developer.mimer.com/validator/parser200x/index.tml#parser&quot;&gt;http://developer.mimer.com/valid...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Old output:&lt;/p&gt;
&lt;p&gt;SELECT developers.*, t0.project_id as _parent_record_id FROM
developers INNER JOIN developers_projects as t0 ON developers.id =
t0.developer_id WHERE (t0.project_id IN (1,2))&lt;/p&gt;
&lt;p&gt;New output:&lt;/p&gt;
&lt;p&gt;SELECT developers.*, t0.project_id as _parent_record_id FROM
developers INNER JOIN developers_projects t0 ON developers.id =
t0.developer_id WHERE (t0.project_id IN (1,2))&lt;/p&gt;
&lt;p&gt;No new tests are necessary, as no new behaviors are being
added.&lt;/p&gt;
&lt;p&gt;Since this is such an open-and-shut case, it would be fantastic
if this bug fix could make it in to 2.2. Thanks!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a follow-up to ticket #394.  After #394 was set to &quot;resolved&quot; there was discussion of another bug in the SQL that never got resolved.

The habtm :joins clause includes an extra &quot;as&quot; that generates non-standard SQL, causing it to break in Oracle. In INNER JOIN clauses, you can &quot;INNER JOIN my_table t0&quot; but you can't &quot;INNER JOIN my_table as t0&quot; which is the current behavior.  MySQL and other dbs are tolerant of the extra &quot;as,&quot; but Oracle throws a fit.

You can verify this with a SQL syntax checker: http://developer.mimer.com/validator/parser200x/index.tml#parser

Old output:

@@@
SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))
@@@

New output:

@@@
SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))
@@@

No new tests are necessary, as no new behaviors are being added.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a follow-up to ticket &lt;a href=&quot;/projects/8994/tickets/394&quot; title=&quot;Ticket #394&quot;&gt;#394&lt;/a&gt;. After
&lt;a href=&quot;/projects/8994/tickets/394&quot; title=&quot;Ticket #394&quot;&gt;#394&lt;/a&gt;
was set to &quot;resolved&quot; there was discussion of another bug in the
SQL that never got resolved.&lt;/p&gt;
&lt;p&gt;The habtm :joins clause includes an extra &quot;as&quot; that generates
non-standard SQL, causing it to break in Oracle. In INNER JOIN
clauses, you can &quot;INNER JOIN my_table t0&quot; but you can't &quot;INNER JOIN
my_table as t0&quot; which is the current behavior. MySQL and other dbs
are tolerant of the extra &quot;as,&quot; but Oracle throws a fit.&lt;/p&gt;
&lt;p&gt;You can verify this with a SQL syntax checker: &lt;a href=&quot;http://developer.mimer.com/validator/parser200x/index.tml#parser&quot;&gt;http://developer.mimer.com/valid...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Old output:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;New output:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
SELECT developers.*, t0.project_id as _parent_record_id
FROM developers
INNER JOIN developers_projects t0 ON developers.id = t0.developer_id
WHERE (t0.project_id IN (1,2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No new tests are necessary, as no new behaviors are being
added.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-18T17:41:03+00:00</created-at>
      <creator-id type="integer">18346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1405</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-11-24T16:44:59+00:00</updated-at>
      <user-id type="integer">18346</user-id>
      <version type="integer">1</version>
      <user-name>Brent Miller</user-name>
      <creator-name>Brent Miller</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1405</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [0c4ba90aa1ea6a8d386c724a55a31e63a13c46ab]) Removed extra 'as' in :joins clause for habtm preloading

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;

[#1405 state:committed]
http://github.com/rails/rails/commit/0c4ba90aa1ea6a8d386c724a55a31e63a13c46ab</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [0c4ba90aa1ea6a8d386c724a55a31e63a13c46ab]) Removed extra
'as' in :joins clause for habtm preloading&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/1405&quot; title=&quot;Ticket #1405&quot;&gt;#1405&lt;/a&gt; state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/0c4ba90aa1ea6a8d386c724a55a31e63a13c46ab&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-01T19:22:59+00:00</created-at>
      <creator-id type="integer">18346</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1405</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-12-01T19:23:00+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Brent Miller</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1405</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>77cfe817cf43892ab5adbce9b6afebc4a5c6021c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-18T17:41:03+00:00</created-at>
      <filename>remove_extra_as.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">63324</id>
      <size type="integer">1370</size>
      <uploader-id type="integer">18346</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/63324/remove_extra_as.diff</url>
    </attachment>
  </attachments>
</ticket>
