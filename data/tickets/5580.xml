<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">25293</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-12T10:02:33+01:00</created-at>
  <creator-id type="integer">26611</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5580</number>
  <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>1.8.7 1.9.2 3.0</tag>
  <title>rake default test task does not use the test.rb environment</title>
  <updated-at type="datetime">2010-09-12T10:03:51+01:00</updated-at>
  <user-id type="integer">25293</user-id>
  <version type="integer">8</version>
  <user-name>Prem Sichanugrist (sikachu)</user-name>
  <creator-name>Sidu Ponnappa</creator-name>
  <assigned-user-name>Prem Sichanugrist (sikachu)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
  <priority-name>Low</priority-name>
  <original-body>Tested on ruby 1.8.7 and 1.9.2 with Rails 3.0.0 on OSX 10.6.4
To replicate:

* `&gt; rails new Dummy`
* `&gt; cd Dummy`
* `&gt; rake db:migrate`
* Edit config/environments/development.rb and add `puts 'Loading development'` to it. 
* Edit config/environments/test.rb and add `puts 'Loading test'` to it. 
* `&gt; rake --trace`

The outputs looks like this (note that 'Loading test' is never printed):
@@@
~/Work/Dummy &#955; rake --trace 
(in /Users/sidu/Work/Dummy)
** Invoke default (first_time)
** Invoke test (first_time)
** Execute test
** Invoke test:units (first_time)
** Invoke test:prepare (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute test:prepare
** Execute test:units
** Invoke test:functionals (first_time)
** Invoke test:prepare 
** Execute test:functionals
** Invoke test:integration (first_time)
** Invoke test:prepare 
** Execute test:integration
** Execute default
@@@</original-body>
  <latest-body>Tested on ruby 1.8.7 and 1.9.2 with Rails 3.0.0 on OSX 10.6.4
To replicate:

* `&gt; rails new Dummy`
* `&gt; cd Dummy`
* `&gt; rake db:migrate`
* Edit config/environments/development.rb and add `puts 'Loading development'` to it. 
* Edit config/environments/test.rb and add `puts 'Loading test'` to it. 
* `&gt; rake --trace`

The outputs looks like this (note that 'Loading test' is never printed):
@@@
~/Work/Dummy &#955; rake --trace 
(in /Users/sidu/Work/Dummy)
** Invoke default (first_time)
** Invoke test (first_time)
** Execute test
** Invoke test:units (first_time)
** Invoke test:prepare (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute test:prepare
** Execute test:units
** Invoke test:functionals (first_time)
** Invoke test:prepare 
** Execute test:functionals
** Invoke test:integration (first_time)
** Invoke test:prepare 
** Execute test:integration
** Execute default
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Tested on ruby 1.8.7 and 1.9.2 with Rails 3.0.0 on OSX
10.6.4&lt;br&gt;
To replicate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; rails new Dummy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; cd Dummy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; rake db:migrate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit config/environments/development.rb and add &lt;code&gt;puts
'Loading development'&lt;/code&gt; to it.&lt;/li&gt;
&lt;li&gt;Edit config/environments/test.rb and add &lt;code&gt;puts 'Loading
test'&lt;/code&gt; to it.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; rake --trace&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The outputs looks like this (note that 'Loading test' is never
printed):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;~/Work/Dummy &amp;#955; rake --trace 
(in /Users/sidu/Work/Dummy)
&lt;strong&gt; Invoke default (first_time)
&lt;/strong&gt; Invoke test (first_time)
&lt;strong&gt; Execute test
&lt;/strong&gt; Invoke test:units (first_time)
&lt;strong&gt; Invoke test:prepare (first_time)
&lt;/strong&gt; Invoke db:test:prepare (first_time)
&lt;strong&gt; Invoke db:abort_if_pending_migrations (first_time)
&lt;/strong&gt; Invoke environment (first_time)
&lt;strong&gt; Execute environment
Loading development
&lt;/strong&gt; Execute db:abort_if_pending_migrations
&lt;strong&gt; Execute db:test:prepare
&lt;/strong&gt; Invoke db:test:load (first_time)
&lt;strong&gt; Invoke db:test:purge (first_time)
&lt;/strong&gt; Invoke environment 
&lt;strong&gt; Execute db:test:purge
&lt;/strong&gt; Execute db:test:load
&lt;strong&gt; Invoke db:schema:load (first_time)
&lt;/strong&gt; Invoke environment 
&lt;strong&gt; Execute db:schema:load
&lt;/strong&gt; Execute test:prepare
&lt;strong&gt; Execute test:units
&lt;/strong&gt; Invoke test:functionals (first_time)
&lt;strong&gt; Invoke test:prepare 
&lt;/strong&gt; Execute test:functionals
&lt;strong&gt; Invoke test:integration (first_time)
&lt;/strong&gt; Invoke test:prepare 
&lt;strong&gt; Execute test:integration
&lt;/strong&gt; Execute default&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Tested on ruby 1.8.7 and 1.9.2 with Rails 3.0.0 on OSX 10.6.4
To replicate:

* `&gt; rails new Dummy`
* `&gt; cd Dummy`
* `&gt; rake db:migrate`
* Edit config/environments/development.rb and add `puts 'Loading development'` to it. 
* Edit config/environments/test.rb and add `puts 'Loading test'` to it. 
* `&gt; rake --trace`

The outputs looks like this (note that 'Loading test' is never printed):
@@@
~/Work/Dummy &#955; rake --trace 
(in /Users/sidu/Work/Dummy)
** Invoke default (first_time)
** Invoke test (first_time)
** Execute test
** Invoke test:units (first_time)
** Invoke test:prepare (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute test:prepare
** Execute test:units
** Invoke test:functionals (first_time)
** Invoke test:prepare 
** Execute test:functionals
** Invoke test:integration (first_time)
** Invoke test:prepare 
** Execute test:integration
** Execute default
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tested on ruby 1.8.7 and 1.9.2 with Rails 3.0.0 on OSX
10.6.4&lt;br&gt;
To replicate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; rails new Dummy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; cd Dummy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; rake db:migrate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit config/environments/development.rb and add &lt;code&gt;puts
'Loading development'&lt;/code&gt; to it.&lt;/li&gt;
&lt;li&gt;Edit config/environments/test.rb and add &lt;code&gt;puts 'Loading
test'&lt;/code&gt; to it.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; rake --trace&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The outputs looks like this (note that 'Loading test' is never
printed):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;~/Work/Dummy &amp;#955; rake --trace 
(in /Users/sidu/Work/Dummy)
&lt;strong&gt; Invoke default (first_time)
&lt;/strong&gt; Invoke test (first_time)
&lt;strong&gt; Execute test
&lt;/strong&gt; Invoke test:units (first_time)
&lt;strong&gt; Invoke test:prepare (first_time)
&lt;/strong&gt; Invoke db:test:prepare (first_time)
&lt;strong&gt; Invoke db:abort_if_pending_migrations (first_time)
&lt;/strong&gt; Invoke environment (first_time)
&lt;strong&gt; Execute environment
Loading development
&lt;/strong&gt; Execute db:abort_if_pending_migrations
&lt;strong&gt; Execute db:test:prepare
&lt;/strong&gt; Invoke db:test:load (first_time)
&lt;strong&gt; Invoke db:test:purge (first_time)
&lt;/strong&gt; Invoke environment 
&lt;strong&gt; Execute db:test:purge
&lt;/strong&gt; Execute db:test:load
&lt;strong&gt; Invoke db:schema:load (first_time)
&lt;/strong&gt; Invoke environment 
&lt;strong&gt; Execute db:schema:load
&lt;/strong&gt; Execute test:prepare
&lt;strong&gt; Execute test:units
&lt;/strong&gt; Invoke test:functionals (first_time)
&lt;strong&gt; Invoke test:prepare 
&lt;/strong&gt; Execute test:functionals
&lt;strong&gt; Invoke test:integration (first_time)
&lt;/strong&gt; Invoke test:prepare 
&lt;strong&gt; Execute test:integration
&lt;/strong&gt; Execute default&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-08T10:13:02+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-08T10:15:40+01:00</updated-at>
      <user-id type="integer">26611</user-id>
      <version type="integer">1</version>
      <user-name>Sidu Ponnappa</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You don't need to run with trace. I am getting the right result.

@@@ ruby
$ rake
(in /Users/nsingh/dev/rails_tickets/r3_5580)
Loading test
/Users/nsingh/dev/rails_tickets/r3_5580/config/routes.rb:1: warning: multiple values for a block parameter (0 for 1)
	from /Users/nsingh/dev/rails_tickets/r3_5580/vendor/rails/actionpack/lib/action_dispatch/routing/route_set.rb:231
Loaded suite /Users/nsingh/.rvm/gems/ree-1.8.7-2010.01/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.
Finished in 0.007541 seconds.

1 tests, 1 assertions, 0 failures, 0 errors
Loading test
/Users/nsingh/dev/rails_tickets/r3_5580/config/routes.rb:1: warning: multiple values for a block parameter (0 for 1)
	from /Users/nsingh/dev/rails_tickets/r3_5580/vendor/rails/actionpack/lib/action_dispatch/routing/route_set.rb:231
Loaded suite /Users/nsingh/.rvm/gems/ree-1.8.7-2010.01/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.......
Finished in 0.120012 seconds.

7 tests, 10 assertions, 0 failures, 0 errors
Loaded suite /Users/nsingh/.rvm/gems/ree-1.8.7-2010.01/bin/rake
Started
@@@


This is on ruby 1.8.7

Another way to test would be to add raise 'boom' at the top of your test.rb .</body>
      <body-html>&lt;div&gt;&lt;p&gt;You don't need to run with trace. I am getting the right
result.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;$ rake
(in /Users/nsingh/dev/rails_tickets/r3_5580)
Loading test
/Users/nsingh/dev/rails_tickets/r3_5580/config/routes.rb:1: warning: multiple values for a block parameter (0 for 1)
    from /Users/nsingh/dev/rails_tickets/r3_5580/vendor/rails/actionpack/lib/action_dispatch/routing/route_set.rb:231
Loaded suite /Users/nsingh/.rvm/gems/ree-1.8.7-2010.01/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.
Finished in 0.007541 seconds.

1 tests, 1 assertions, 0 failures, 0 errors
Loading test
/Users/nsingh/dev/rails_tickets/r3_5580/config/routes.rb:1: warning: multiple values for a block parameter (0 for 1)
    from /Users/nsingh/dev/rails_tickets/r3_5580/vendor/rails/actionpack/lib/action_dispatch/routing/route_set.rb:231
Loaded suite /Users/nsingh/.rvm/gems/ree-1.8.7-2010.01/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.......
Finished in 0.120012 seconds.

7 tests, 10 assertions, 0 failures, 0 errors
Loaded suite /Users/nsingh/.rvm/gems/ree-1.8.7-2010.01/bin/rake
Started&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is on ruby 1.8.7&lt;/p&gt;
&lt;p&gt;Another way to test would be to add raise 'boom' at the top of
your test.rb .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-08T11:28:19+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-08T11:28:20+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I tested with rails edge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I tested with rails edge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-08T11:28:40+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-08T11:28:42+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I didn't create any tests as part of the setup. Try it without any tests and it breaks as I've described. This matters when using RSpec, because there won't be any Test::Unit tests, but there are Rspec specs being run - and none of my test environment specific config loads.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I didn't create any tests as part of the setup. Try it without
any tests and it breaks as I've described. This matters when using
RSpec, because there won't be any Test::Unit tests, but there are
Rspec specs being run - and none of my test environment specific
config loads.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-08T11:39:06+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-08T11:39:09+01:00</updated-at>
      <user-id type="integer">26611</user-id>
      <version type="integer">4</version>
      <user-name>Sidu Ponnappa</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-08T13:17:13+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-08T13:17:16+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I followed Sidu's steps and was able to reproduce the problem:

@@@
$ rake --trace
(in /Users/jeff/rails/apps/rake_test_env)
** Invoke default (first_time)
** Invoke test (first_time)
** Execute test
** Invoke test:units (first_time)
** Invoke test:prepare (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute test:prepare
** Execute test:units
** Invoke test:functionals (first_time)
** Invoke test:prepare 
** Execute test:functionals
** Invoke test:integration (first_time)
** Invoke test:prepare 
** Execute test:integration
** Execute default
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I followed Sidu's steps and was able to reproduce the
problem:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rake --trace
(in /Users/jeff/rails/apps/rake_test_env)
** Invoke default (first_time)
** Invoke test (first_time)
** Execute test
** Invoke test:units (first_time)
** Invoke test:prepare (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute test:prepare
** Execute test:units
** Invoke test:functionals (first_time)
** Invoke test:prepare 
** Execute test:functionals
** Invoke test:integration (first_time)
** Invoke test:prepare 
** Execute test:integration
** Execute default&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-09T20:18:27+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-09T20:18:30+01:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">6</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">25293</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-10T14:16:08+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-10T14:16:10+01:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">7</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name>Prem Sichanugrist (sikachu)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">25293</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've tried to reproduce your problem, and I can confirm that there's no &quot;Loading test&quot; output when I have no test case in `test/*`. However, when I add a unit test then I got this output:

@@@
[master][~/Projects/test_edge] rake --trace                  
(in /Users/sikachu/Projects/test_edge)
** Invoke default (first_time)
** Invoke test (first_time)
** Execute test
** Invoke test:units (first_time)
** Invoke test:prepare (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
&gt;&gt; Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute test:prepare
** Execute test:units
&gt;&gt; Loading test
Loaded suite /Users/sikachu/.rvm/gems/ruby-1.8.7-p302@rails3/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.
Finished in 0.022144 seconds.

1 tests, 1 assertions, 0 failures, 0 errors
** Invoke test:functionals (first_time)
** Invoke test:prepare 
** Execute test:functionals
** Invoke test:integration (first_time)
** Invoke test:prepare 
** Execute test:integration
** Execute default
@@@

Note that you'll see both &quot;Loading development&quot; and &quot;Loading test&quot; in my output. But why?

Turns out that when Rails staring the test, it actually change the environment to `test` and then execute another Ruby process to load new environment. You can see that in `test/test_helper.rb`

@@@
**test/test_helper.rb**

ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;
require File.expand_path('../../config/environment', __FILE__)
require 'rails/test_help'

@@@

You said that you're using RSpec, and I think RSpec is doing the same thing by changing environment to `test` and then execute another Ruby process to load new environment. It does that in `test/spec_helper.rb`

@@@
**spec/spec_helper.rb**

# This file is copied to spec/ when you run 'rails generate rspec:install'
ENV[&quot;RAILS_ENV&quot;] ||= 'test'
require File.expand_path(&quot;../../config/environment&quot;, __FILE__)
require 'rspec/rails'

@@@

And yet when I run `rake --trace` with rspec installed, you can see that it has almost the same output as test_unit. Also, you could see that it creating another Ruby process before loading the `test` environment.

@@@
[~/Projects/test_rspec] rake --trace
(in /Users/sikachu/Projects/test_rspec)
** Invoke default (first_time)
** Invoke spec (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
&gt;&gt; Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute spec
/Users/sikachu/.rvm/rubies/ruby-1.8.7-p302/bin/ruby -S bundle exec  /Users/sikachu/.rvm/rubies/ruby-1.8.7-p302/bin/ruby  -Ilib -Ispec &quot;./spec/models/user_spec.rb&quot; 
&gt;&gt; Loading test
.

Finished in 0.01218 seconds
1 example, 0 failures
** Execute default
@@@

So, I think this is the expected behavior, as normally `db:abort_if_pending_migrations` task will run every time you run `rake` to make sure you have migrated your `development` database. And that task is actually the one that depends on `environment`, which loads the default `development` environment and output that &quot;Load development&quot; line for you.

From your original problem, I think there's some misconfiguration in your `config/environements/test.rb` file which causes RSpec not load the configuration.

I'm marking this as invalid again, as I think this is the expected behavior and I think my examples are clear :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've tried to reproduce your problem, and I can confirm that
there's no &quot;Loading test&quot; output when I have no test case in
&lt;code&gt;test/*&lt;/code&gt;. However, when I add a unit test then I got
this output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[master][~/Projects/test_edge] rake --trace                  
(in /Users/sikachu/Projects/test_edge)
** Invoke default (first_time)
** Invoke test (first_time)
** Execute test
** Invoke test:units (first_time)
** Invoke test:prepare (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
&amp;gt;&amp;gt; Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute test:prepare
** Execute test:units
&amp;gt;&amp;gt; Loading test
Loaded suite /Users/sikachu/.rvm/gems/ruby-1.8.7-p302@rails3/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.
Finished in 0.022144 seconds.

1 tests, 1 assertions, 0 failures, 0 errors
** Invoke test:functionals (first_time)
** Invoke test:prepare 
** Execute test:functionals
** Invoke test:integration (first_time)
** Invoke test:prepare 
** Execute test:integration
** Execute default&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that you'll see both &quot;Loading development&quot; and &quot;Loading
test&quot; in my output. But why?&lt;/p&gt;
&lt;p&gt;Turns out that when Rails staring the test, it actually change
the environment to &lt;code&gt;test&lt;/code&gt; and then execute another Ruby
process to load new environment. You can see that in
&lt;code&gt;test/test_helper.rb&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;**test/test_helper.rb**

ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;
require File.expand_path('../../config/environment', __FILE__)
require 'rails/test_help'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You said that you're using RSpec, and I think RSpec is doing the
same thing by changing environment to &lt;code&gt;test&lt;/code&gt; and then
execute another Ruby process to load new environment. It does that
in &lt;code&gt;test/spec_helper.rb&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;**spec/spec_helper.rb**

# This file is copied to spec/ when you run 'rails generate rspec:install'
ENV[&quot;RAILS_ENV&quot;] ||= 'test'
require File.expand_path(&quot;../../config/environment&quot;, __FILE__)
require 'rspec/rails'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And yet when I run &lt;code&gt;rake --trace&lt;/code&gt; with rspec
installed, you can see that it has almost the same output as
test_unit. Also, you could see that it creating another Ruby
process before loading the &lt;code&gt;test&lt;/code&gt; environment.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[~/Projects/test_rspec] rake --trace
(in /Users/sikachu/Projects/test_rspec)
** Invoke default (first_time)
** Invoke spec (first_time)
** Invoke db:test:prepare (first_time)
** Invoke db:abort_if_pending_migrations (first_time)
** Invoke environment (first_time)
** Execute environment
&amp;gt;&amp;gt; Loading development
** Execute db:abort_if_pending_migrations
** Execute db:test:prepare
** Invoke db:test:load (first_time)
** Invoke db:test:purge (first_time)
** Invoke environment 
** Execute db:test:purge
** Execute db:test:load
** Invoke db:schema:load (first_time)
** Invoke environment 
** Execute db:schema:load
** Execute spec
/Users/sikachu/.rvm/rubies/ruby-1.8.7-p302/bin/ruby -S bundle exec  /Users/sikachu/.rvm/rubies/ruby-1.8.7-p302/bin/ruby  -Ilib -Ispec &quot;./spec/models/user_spec.rb&quot; 
&amp;gt;&amp;gt; Loading test
.

Finished in 0.01218 seconds
1 example, 0 failures
** Execute default&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So, I think this is the expected behavior, as normally
&lt;code&gt;db:abort_if_pending_migrations&lt;/code&gt; task will run every
time you run &lt;code&gt;rake&lt;/code&gt; to make sure you have migrated your
&lt;code&gt;development&lt;/code&gt; database. And that task is actually the
one that depends on &lt;code&gt;environment&lt;/code&gt;, which loads the
default &lt;code&gt;development&lt;/code&gt; environment and output that &quot;Load
development&quot; line for you.&lt;/p&gt;
&lt;p&gt;From your original problem, I think there's some
misconfiguration in your &lt;code&gt;config/environements/test.rb&lt;/code&gt;
file which causes RSpec not load the configuration.&lt;/p&gt;
&lt;p&gt;I'm marking this as invalid again, as I think this is the
expected behavior and I think my examples are clear :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-12T10:02:33+01:00</created-at>
      <creator-id type="integer">26611</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5580</number>
      <permalink>rake-default-test-task-does-not-use-the-testrb-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>1.8.7 1.9.2 3.0</tag>
      <title>rake default test task does not use the test.rb environment</title>
      <updated-at type="datetime">2010-09-12T10:03:49+01:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">8</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Sidu Ponnappa</creator-name>
      <assigned-user-name>Prem Sichanugrist (sikachu)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5580</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
