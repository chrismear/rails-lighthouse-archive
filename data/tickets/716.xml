<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-21T01:46:47+01:00</created-at>
  <creator-id type="integer">18096</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">716</number>
  <permalink>numberhelper-i18n-compatibility</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>NumberHelper i18n compatibility</title>
  <updated-at type="datetime">2010-10-19T07:10:15+01:00</updated-at>
  <user-id type="integer">94458</user-id>
  <version type="integer">6</version>
  <user-name>Jeff Kreeftmeijer</user-name>
  <creator-name>Clemens Kofler</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/716</url>
  <milestone-title>2.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>I've taken the NumberHelper for another ride to make it fully i18n compatible (with exception of number_to_phone).

It's a really massive patch so here's a rundown of the changes:
* A small but important change to the current definition in the en-US locale: I've changed the namespacing so that all NumberHelper related stuff sits in the :number namespace and the :number namespace defines special options of each method as its child elements. I think this makes sense from an OO perspective: :'number.format' defines default options which can be overridden or extended by it's children (e.g. :currency changes the default :precision from 3 to 2 and adds :unit and :format as new specific options).
* The changes forced me to change a few bits of the i18n number_to_currency mocha testing. Nothing big, since it's only implementation testing.
* Pretty much all methods now internally rely on number_with_precision which, in turn, relies on number_with_delimiter. This makes all methods compatible with the :separator, :delimiter and :precision options.
* number_to_currency had some weird behavior: When called like number_to_currency(&quot;x&quot;) one of the tests enforced it to return &quot;$x.&quot;. All other methods return invalid parameters untouched. I've changed it so that it returns &quot;$x&quot; (without the dot). It makes a little more sense (still not much) and it cuts down the code in the method. I've commented out the old test and added a new one.
* Similar for number_to_human_size: This was the only method to return nil for invalid parameters. In this case, I've only commented out the failing test. The new behavior is that nil returns nil and everything else that evaluates to 0 using to_i returns &quot;0 Bytes&quot;.
* The ugly unDRY case-when in number_to_human_size is gone and replaced by some easy mathematical logarithm calculation. I've also moved this part into its own private method.
* Added tests for new options and behaviors.
* General cleanup and consolidation: symbolize_keys is now used throughout. Some Regexps were unnecessary due to the new structure.
* Updated and consolidated docs.
* Added deprecation notices for API changes in &quot;this ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/666.

I hope this is all clear and makes sense. If not, feel free to task. 

I think this patch is really valuable regarding Rails' late i18n efforts and Helper API consolidation.

Apart from the tests I mentioned, all existing tests pass.</original-body>
  <latest-body>I've taken the NumberHelper for another ride to make it fully i18n compatible (with exception of number_to_phone).

It's a really massive patch so here's a rundown of the changes:
* A small but important change to the current definition in the en-US locale: I've changed the namespacing so that all NumberHelper related stuff sits in the :number namespace and the :number namespace defines special options of each method as its child elements. I think this makes sense from an OO perspective: :'number.format' defines default options which can be overridden or extended by it's children (e.g. :currency changes the default :precision from 3 to 2 and adds :unit and :format as new specific options).
* The changes forced me to change a few bits of the i18n number_to_currency mocha testing. Nothing big, since it's only implementation testing.
* Pretty much all methods now internally rely on number_with_precision which, in turn, relies on number_with_delimiter. This makes all methods compatible with the :separator, :delimiter and :precision options.
* number_to_currency had some weird behavior: When called like number_to_currency(&quot;x&quot;) one of the tests enforced it to return &quot;$x.&quot;. All other methods return invalid parameters untouched. I've changed it so that it returns &quot;$x&quot; (without the dot). It makes a little more sense (still not much) and it cuts down the code in the method. I've commented out the old test and added a new one.
* Similar for number_to_human_size: This was the only method to return nil for invalid parameters. In this case, I've only commented out the failing test. The new behavior is that nil returns nil and everything else that evaluates to 0 using to_i returns &quot;0 Bytes&quot;.
* The ugly unDRY case-when in number_to_human_size is gone and replaced by some easy mathematical logarithm calculation. I've also moved this part into its own private method.
* Added tests for new options and behaviors.
* General cleanup and consolidation: symbolize_keys is now used throughout. Some Regexps were unnecessary due to the new structure.
* Updated and consolidated docs.
* Added deprecation notices for API changes in &quot;this ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/666.

I hope this is all clear and makes sense. If not, feel free to task. 

I think this patch is really valuable regarding Rails' late i18n efforts and Helper API consolidation.

Apart from the tests I mentioned, all existing tests pass.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I've taken the NumberHelper for another ride to make it fully i18n compatible (with exception of number_to_phone).
&lt;/p&gt;&lt;p&gt;
It's a really massive patch so here's a rundown of the changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
A small but important change to the current definition in the en-US locale: I've changed the namespacing so that all NumberHelper related stuff sits in the :number namespace and the :number namespace defines special options of each method as its child elements. I think this makes sense from an OO perspective: :'number.format' defines default options which can be overridden or extended by it's children (e.g. :currency changes the default :precision from 3 to 2 and adds :unit and :format as new specific options).
&lt;/li&gt;&lt;li&gt;
The changes forced me to change a few bits of the i18n number_to_currency mocha testing. Nothing big, since it's only implementation testing.
&lt;/li&gt;&lt;li&gt;
Pretty much all methods now internally rely on number_with_precision which, in turn, relies on number_with_delimiter. This makes all methods compatible with the :separator, :delimiter and :precision options.
&lt;/li&gt;&lt;li&gt;
number_to_currency had some weird behavior: When called like number_to_currency(&quot;x&quot;) one of the tests enforced it to return &quot;$x.&quot;. All other methods return invalid parameters untouched. I've changed it so that it returns &quot;$x&quot; (without the dot). It makes a little more sense (still not much) and it cuts down the code in the method. I've commented out the old test and added a new one.
&lt;/li&gt;&lt;li&gt;
Similar for number_to_human_size: This was the only method to return nil for invalid parameters. In this case, I've only commented out the failing test. The new behavior is that nil returns nil and everything else that evaluates to 0 using to_i returns &quot;0 Bytes&quot;.
&lt;/li&gt;&lt;li&gt;
The ugly unDRY case-when in number_to_human_size is gone and replaced by some easy mathematical logarithm calculation. I've also moved this part into its own private method.
&lt;/li&gt;&lt;li&gt;
Added tests for new options and behaviors.
&lt;/li&gt;&lt;li&gt;
General cleanup and consolidation: symbolize_keys is now used throughout. Some Regexps were unnecessary due to the new structure.
&lt;/li&gt;&lt;li&gt;
Updated and consolidated docs.
&lt;/li&gt;&lt;li&gt;
Added deprecation notices for API changes in &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/666&quot;&gt;this ticket&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
I hope this is all clear and makes sense. If not, feel free to task.
&lt;/p&gt;&lt;p&gt;
I think this patch is really valuable regarding Rails' late i18n efforts and Helper API consolidation.
&lt;/p&gt;&lt;p&gt;
Apart from the tests I mentioned, all existing tests pass.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've taken the NumberHelper for another ride to make it fully i18n compatible (with exception of number_to_phone).

It's a really massive patch so here's a rundown of the changes:
* A small but important change to the current definition in the en-US locale: I've changed the namespacing so that all NumberHelper related stuff sits in the :number namespace and the :number namespace defines special options of each method as its child elements. I think this makes sense from an OO perspective: :'number.format' defines default options which can be overridden or extended by it's children (e.g. :currency changes the default :precision from 3 to 2 and adds :unit and :format as new specific options).
* The changes forced me to change a few bits of the i18n number_to_currency mocha testing. Nothing big, since it's only implementation testing.
* Pretty much all methods now internally rely on number_with_precision which, in turn, relies on number_with_delimiter. This makes all methods compatible with the :separator, :delimiter and :precision options.
* number_to_currency had some weird behavior: When called like number_to_currency(&quot;x&quot;) one of the tests enforced it to return &quot;$x.&quot;. All other methods return invalid parameters untouched. I've changed it so that it returns &quot;$x&quot; (without the dot). It makes a little more sense (still not much) and it cuts down the code in the method. I've commented out the old test and added a new one.
* Similar for number_to_human_size: This was the only method to return nil for invalid parameters. In this case, I've only commented out the failing test. The new behavior is that nil returns nil and everything else that evaluates to 0 using to_i returns &quot;0 Bytes&quot;.
* The ugly unDRY case-when in number_to_human_size is gone and replaced by some easy mathematical logarithm calculation. I've also moved this part into its own private method.
* Added tests for new options and behaviors.
* General cleanup and consolidation: symbolize_keys is now used throughout. Some Regexps were unnecessary due to the new structure.
* Updated and consolidated docs.
* Added deprecation notices for API changes in &quot;this ticket&quot;:http://rails.lighthouseapp.com/projects/8994/tickets/666. This also forced me to update the old tests in order to avoid deprecation warnings. But AFAIK this is standard practice anyway.

I hope this is all clear and makes sense. If not, feel free to task. 

I think this patch is really valuable regarding Rails' late i18n efforts and Helper API consolidation.

Apart from the tests I mentioned, all existing tests pass.

PS: Due to my micro commits, the patch looks bigger than it is.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've taken the NumberHelper for another ride to make it fully i18n compatible (with exception of number_to_phone).
&lt;/p&gt;&lt;p&gt;
It's a really massive patch so here's a rundown of the changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
A small but important change to the current definition in the en-US locale: I've changed the namespacing so that all NumberHelper related stuff sits in the :number namespace and the :number namespace defines special options of each method as its child elements. I think this makes sense from an OO perspective: :'number.format' defines default options which can be overridden or extended by it's children (e.g. :currency changes the default :precision from 3 to 2 and adds :unit and :format as new specific options).
&lt;/li&gt;&lt;li&gt;
The changes forced me to change a few bits of the i18n number_to_currency mocha testing. Nothing big, since it's only implementation testing.
&lt;/li&gt;&lt;li&gt;
Pretty much all methods now internally rely on number_with_precision which, in turn, relies on number_with_delimiter. This makes all methods compatible with the :separator, :delimiter and :precision options.
&lt;/li&gt;&lt;li&gt;
number_to_currency had some weird behavior: When called like number_to_currency(&quot;x&quot;) one of the tests enforced it to return &quot;$x.&quot;. All other methods return invalid parameters untouched. I've changed it so that it returns &quot;$x&quot; (without the dot). It makes a little more sense (still not much) and it cuts down the code in the method. I've commented out the old test and added a new one.
&lt;/li&gt;&lt;li&gt;
Similar for number_to_human_size: This was the only method to return nil for invalid parameters. In this case, I've only commented out the failing test. The new behavior is that nil returns nil and everything else that evaluates to 0 using to_i returns &quot;0 Bytes&quot;.
&lt;/li&gt;&lt;li&gt;
The ugly unDRY case-when in number_to_human_size is gone and replaced by some easy mathematical logarithm calculation. I've also moved this part into its own private method.
&lt;/li&gt;&lt;li&gt;
Added tests for new options and behaviors.
&lt;/li&gt;&lt;li&gt;
General cleanup and consolidation: symbolize_keys is now used throughout. Some Regexps were unnecessary due to the new structure.
&lt;/li&gt;&lt;li&gt;
Updated and consolidated docs.
&lt;/li&gt;&lt;li&gt;
Added deprecation notices for API changes in &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/666&quot;&gt;this ticket&lt;/a&gt;. This also forced me to update the old tests in order to avoid deprecation warnings. But AFAIK this is standard practice anyway.
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
I hope this is all clear and makes sense. If not, feel free to task.
&lt;/p&gt;&lt;p&gt;
I think this patch is really valuable regarding Rails' late i18n efforts and Helper API consolidation.
&lt;/p&gt;&lt;p&gt;
Apart from the tests I mentioned, all existing tests pass.
&lt;/p&gt;&lt;p&gt;
PS: Due to my micro commits, the patch looks bigger than it is.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-29T00:16:19+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">716</number>
      <permalink>numberhelper-i18n-compatibility</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement helper i18n patch</tag>
      <title>NumberHelper i18n compatibility</title>
      <updated-at type="datetime">2008-07-29T00:16:19+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">1</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/716</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The attached number_helper_i18n_new.diff is a more compact version of the first patch with only one commit.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The attached number_helper_i18n_new.diff is a more compact version of the first patch with only one commit.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-29T00:18:10+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">716</number>
      <permalink>numberhelper-i18n-compatibility</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement helper i18n patch</tag>
      <title>NumberHelper i18n compatibility</title>
      <updated-at type="datetime">2008-07-29T00:18:10+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">2</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/716</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [fea7771d2294bd810d04c03c125ceac5d6bb9806]) Updated NumberHelper: Full i18n support (except number_to_phone), consolidated API (almost all methods now support :precision, :delimiter and :separator). Added deprecation notices for old API. Added tests for new options [#716 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/fea7771d2294bd810d04c03c125ceac5d6bb9806</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [fea7771d2294bd810d04c03c125ceac5d6bb9806]) Updated NumberHelper: Full i18n support (except number_to_phone), consolidated API (almost all methods now support :precision, :delimiter and :separator). Added deprecation notices for old API. Added tests for new options [#716 state:resolved]
&lt;/p&gt;&lt;p&gt;
Signed-off-by: Joshua Peek 
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/fea7771d2294bd810d04c03c125ceac5d6bb9806&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-30T03:43:48+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">716</number>
      <permalink>numberhelper-i18n-compatibility</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actionpack enhancement helper i18n patch</tag>
      <title>NumberHelper i18n compatibility</title>
      <updated-at type="datetime">2008-07-30T03:43:48+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/716</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>varied times &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;wholesale fine jewelry&lt;/a&gt;&lt;/b&gt; centers on setting augmentation &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;fashion silver jewelry&lt;/a&gt;&lt;/b&gt; limitations further pointing out &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;cheap jewelry&lt;/a&gt;&lt;/b&gt; the discontinuity of decision-making &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;wholesale fashion silver jewelry&lt;/a&gt;&lt;/b&gt; authorities. On contra, inland &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;cheap jewelry&lt;/a&gt;&lt;/b&gt; vitality weight stale centers &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;wholesale silver jewelry&lt;/a&gt;&lt;/b&gt; on creating, a productive, &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net/collection/christian-dior-bracelets.html&quot;&gt;Christian Dior Bracelets Jewelry&lt;/a&gt;&lt;/b&gt; line tussle across the &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;designer jewelry&lt;/a&gt;&lt;/b&gt; matter Practices which provides &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;silver jewelry&lt;/a&gt;&lt;/b&gt; through concurrent consultations amongst &lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;silver jewelry&lt;/a&gt;&lt;/b&gt; o</body>
      <body-html>&lt;div&gt;&lt;p&gt;varied times &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;wholesale fine jewelry&lt;/a&gt;&lt;/b&gt;
centers on setting augmentation &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;fashion silver jewelry&lt;/a&gt;&lt;/b&gt;
limitations further pointing out &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;cheap jewelry&lt;/a&gt;&lt;/b&gt; the
discontinuity of decision-making &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;wholesale fashion silver
jewelry&lt;/a&gt;&lt;/b&gt; authorities. On contra, inland &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;cheap jewelry&lt;/a&gt;&lt;/b&gt; vitality
weight stale centers &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;wholesale silver jewelry&lt;/a&gt;&lt;/b&gt;
on creating, a productive, &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net/collection/christian-dior-bracelets.html&quot;&gt;
Christian Dior Bracelets Jewelry&lt;/a&gt;&lt;/b&gt; line tussle across the
&lt;b&gt;&lt;a href=&quot;http://www.finesilverjewelry.net&quot;&gt;designer
jewelry&lt;/a&gt;&lt;/b&gt; matter Practices which provides &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;silver jewelry&lt;/a&gt;&lt;/b&gt; through
concurrent consultations amongst &lt;b&gt;&lt;a href=
&quot;http://www.finesilverjewelry.net&quot;&gt;silver jewelry&lt;/a&gt;&lt;/b&gt; o&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T07:43:39+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">716</number>
      <permalink>numberhelper-i18n-compatibility</permalink>
      <priority type="integer">175</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actionpack enhancement helper i18n patch</tag>
      <title>NumberHelper i18n compatibility</title>
      <updated-at type="datetime">2010-07-21T01:46:47+01:00</updated-at>
      <user-id type="integer">107784</user-id>
      <version type="integer">4</version>
      <user-name>laiji</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/716</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-19T07:10:08+01:00</created-at>
      <creator-id type="integer">18096</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: actionpack enhancement helper i18n patch
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">716</number>
      <permalink>numberhelper-i18n-compatibility</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>NumberHelper i18n compatibility</title>
      <updated-at type="datetime">2010-10-19T07:10:15+01:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">6</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Clemens Kofler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/716</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>df60bc641d190dd9f969a1494f9585b7914bc86f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-28T22:13:02+01:00</created-at>
      <filename>number_helper_i18n.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">35384</id>
      <size type="integer">54193</size>
      <uploader-id type="integer">18096</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/35384/number_helper_i18n.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>63d170f138c8dacacd531065766beafa7ca35315</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-29T00:18:10+01:00</created-at>
      <filename>number_helper_i18n_new.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">35410</id>
      <size type="integer">24769</size>
      <uploader-id type="integer">18096</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/35410/number_helper_i18n_new.diff</url>
    </attachment>
  </attachments>
</ticket>
