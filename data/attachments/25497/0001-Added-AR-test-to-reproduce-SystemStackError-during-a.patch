From 6c7acc0900108ac0b252017677e9408056766903 Mon Sep 17 00:00:00 2001
From: Matt Mower <self@mattmower.com>
Date: Mon, 2 Jun 2008 20:38:27 +0100
Subject: [PATCH] Added AR test to reproduce SystemStackError during after_create callback on model with has_one self-referential association

---
 .../associations/has_one_associations_test.rb      |    9 ++++++++-
 activerecord/test/fixtures/relationships.yml       |    3 +++
 activerecord/test/models/relationship.rb           |   20 ++++++++++++++++++++
 activerecord/test/schema/schema.rb                 |    6 ++++++
 4 files changed, 37 insertions(+), 1 deletions(-)
 create mode 100644 activerecord/test/fixtures/relationships.yml
 create mode 100644 activerecord/test/models/relationship.rb

diff --git a/activerecord/test/cases/associations/has_one_associations_test.rb b/activerecord/test/cases/associations/has_one_associations_test.rb
index abc7ee7..a69dfc5 100755
--- a/activerecord/test/cases/associations/has_one_associations_test.rb
+++ b/activerecord/test/cases/associations/has_one_associations_test.rb
@@ -2,9 +2,10 @@ require "cases/helper"
 require 'models/developer'
 require 'models/project'
 require 'models/company'
+require 'models/relationship'
 
 class HasOneAssociationsTest < ActiveRecord::TestCase
-  fixtures :accounts, :companies, :developers, :projects, :developers_projects
+  fixtures :accounts, :companies, :developers, :projects, :developers_projects, :relationships
 
   def setup
     Account.destroyed_account_ids.clear
@@ -319,5 +320,11 @@ class HasOneAssociationsTest < ActiveRecord::TestCase
     assert_raise(ActiveRecord::ReadOnlyRecord) { companies(:first_firm).readonly_account.save!  }
     assert companies(:first_firm).readonly_account.readonly?
   end
+  
+  def test_should_not_raise_system_stack_error_on_create
+    assert_nothing_raised do
+      Relationship.create!( :user_id => 2, :contact_id => 1 )
+    end
+  end
 
 end
diff --git a/activerecord/test/fixtures/relationships.yml b/activerecord/test/fixtures/relationships.yml
new file mode 100644
index 0000000..053afb9
--- /dev/null
+++ b/activerecord/test/fixtures/relationships.yml
@@ -0,0 +1,3 @@
+one:
+  user_id: 1
+  contact_id: 2
diff --git a/activerecord/test/models/relationship.rb b/activerecord/test/models/relationship.rb
new file mode 100644
index 0000000..872163e
--- /dev/null
+++ b/activerecord/test/models/relationship.rb
@@ -0,0 +1,20 @@
+class Relationship < ActiveRecord::Base
+  
+  has_one :inverse, :class_name => 'Relationship', :foreign_key => 'inverse_id', :dependent => :nullify
+  
+  def self.find_for( user_id, contact_id )
+    Relationship.find( :first, :conditions => [ 'user_id = ? AND contact_id =?', user_id, contact_id ] )
+  end
+  
+  def after_create
+    if !self.inverse
+      self.inverse = Relationship.find_for( contact_id, user_id )
+      if self.inverse
+        self.save!
+        self.inverse.inverse = self
+        self.inverse.save!
+      end
+    end
+  end
+  
+end
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index 423929f..a186361 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -406,6 +406,12 @@ ActiveRecord::Schema.define do
   create_table :guids, :force => true do |t|
     t.column :key, :string
   end
+  
+  create_table :relationships, :force => true do |t|
+    t.column :user_id, :integer
+    t.column :contact_id, :integer
+    t.column :inverse_id, :integer
+  end
 
   except 'SQLite' do
     # fk_test_has_fk should be before fk_test_has_pk
-- 
1.5.4.3

