<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-05T21:58:29+01:00</created-at>
  <creator-id type="integer">62087</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6674</number>
  <permalink>forgery-protection-in-master</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>request-forgery-protection</tag>
  <title>forgery protection in master</title>
  <updated-at type="datetime">2011-04-05T21:58:31+01:00</updated-at>
  <user-id type="integer">62087</user-id>
  <version type="integer">1</version>
  <user-name>Anton Topchii</user-name>
  <creator-name>Anton Topchii</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6674</url>
  <priority-name nil="true"></priority-name>
  <original-body>Current forgery protection is not raise any exceptions as said in documentation. It just quietly reset session. And request processing goes to controller action.

  # CSRF protection is turned on with the &lt;tt&gt;protect_from_forgery&lt;/tt&gt; method,
  # which will check the token and raise an ActionController::InvalidAuthenticityToken
  # if it doesn't match what was expected. A call to this method is generated for new
  # \Rails applications by default. You can customize the error message by editing
  # public/422.html.

      def verify_authenticity_token
        verified_request? || handle_unverified_request
      end

      def handle_unverified_request
        reset_session
      end</original-body>
  <latest-body>Current forgery protection is not raise any exceptions as said in documentation. It just quietly reset session. And request processing goes to controller action.

  # CSRF protection is turned on with the &lt;tt&gt;protect_from_forgery&lt;/tt&gt; method,
  # which will check the token and raise an ActionController::InvalidAuthenticityToken
  # if it doesn't match what was expected. A call to this method is generated for new
  # \Rails applications by default. You can customize the error message by editing
  # public/422.html.

      def verify_authenticity_token
        verified_request? || handle_unverified_request
      end

      def handle_unverified_request
        reset_session
      end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Current forgery protection is not raise any exceptions as said
in documentation. It just quietly reset session. And request
processing goes to controller action.&lt;/p&gt;
&lt;p&gt;# CSRF protection is turned on with the
&lt;tt&gt;protect_from_forgery&lt;/tt&gt; method, # which will check the token
and raise an ActionController::InvalidAuthenticityToken # if it
doesn't match what was expected. A call to this method is generated
for new # \Rails applications by default. You can customize the
error message by editing # public/422.html.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def verify_authenticity_token
    verified_request? || handle_unverified_request
  end

  def handle_unverified_request
    reset_session
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Current forgery protection is not raise any exceptions as said in documentation. It just quietly reset session. And request processing goes to controller action.

  # CSRF protection is turned on with the &lt;tt&gt;protect_from_forgery&lt;/tt&gt; method,
  # which will check the token and raise an ActionController::InvalidAuthenticityToken
  # if it doesn't match what was expected. A call to this method is generated for new
  # \Rails applications by default. You can customize the error message by editing
  # public/422.html.

      def verify_authenticity_token
        verified_request? || handle_unverified_request
      end

      def handle_unverified_request
        reset_session
      end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Current forgery protection is not raise any exceptions as said
in documentation. It just quietly reset session. And request
processing goes to controller action.&lt;/p&gt;
&lt;p&gt;# CSRF protection is turned on with the
&lt;tt&gt;protect_from_forgery&lt;/tt&gt; method, # which will check the token
and raise an ActionController::InvalidAuthenticityToken # if it
doesn't match what was expected. A call to this method is generated
for new # \Rails applications by default. You can customize the
error message by editing # public/422.html.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def verify_authenticity_token
    verified_request? || handle_unverified_request
  end

  def handle_unverified_request
    reset_session
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-05T21:58:29+01:00</created-at>
      <creator-id type="integer">62087</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6674</number>
      <permalink>forgery-protection-in-master</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>request-forgery-protection</tag>
      <title>forgery protection in master</title>
      <updated-at type="datetime">2011-04-05T21:58:31+01:00</updated-at>
      <user-id type="integer">62087</user-id>
      <version type="integer">1</version>
      <user-name>Anton Topchii</user-name>
      <creator-name>Anton Topchii</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6674</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
