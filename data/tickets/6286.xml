<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-18T08:52:33+00:00</created-at>
  <creator-id type="integer">120472</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6286</number>
  <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>active_support json ruby1.9.2</tag>
  <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
  <updated-at type="datetime">2011-02-12T15:35:10+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">8</version>
  <user-name>Repository</user-name>
  <creator-name>pederbl (at jobstar)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
  <priority-name nil="true"></priority-name>
  <original-body>Repro: 
ActiveSupport::JSON.decode(&quot;{\&quot;str\&quot;:\&quot;1089-10-40\&quot;}&quot;) =&gt; Invalid json exception is raised

Expected:
The hash with { &quot;str&quot; =&gt; &quot;1089-10-40&quot; } should be returned. 

Stack (after disabling the invalid json exception): 
/usr/local/ruby/lib/ruby/1.9.1/date.rb:810:in `civil': invalid date (ArgumentError)
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `node_import'
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
	from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/backends/yaml.rb:18:in `decode'
	from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/decoding.rb:14:in `decode'

The error seems to be in the Parser which I haven't found yet. 

Ruby Version: ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]</original-body>
  <latest-body>Repro: 
ActiveSupport::JSON.decode(&quot;{\&quot;str\&quot;:\&quot;1089-10-40\&quot;}&quot;) =&gt; Invalid json exception is raised

Expected:
The hash with { &quot;str&quot; =&gt; &quot;1089-10-40&quot; } should be returned. 

Stack (after disabling the invalid json exception): 
/usr/local/ruby/lib/ruby/1.9.1/date.rb:810:in `civil': invalid date (ArgumentError)
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `node_import'
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
	from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/backends/yaml.rb:18:in `decode'
	from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/decoding.rb:14:in `decode'

The error seems to be in the Parser which I haven't found yet. 

Ruby Version: ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Repro:&lt;br&gt;
ActiveSupport::JSON.decode(&quot;{&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stack (after disabling the invalid json exception):&lt;br&gt;
/usr/local/ruby/lib/ruby/1.9.1/date.rb:810:in &lt;code&gt;civil': invalid
date (ArgumentError)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `node_import'
from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/backends/yaml.rb:18:in `decode'
from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/decoding.rb:14:in `decode'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The error seems to be in the Parser which I haven't found
yet.&lt;/p&gt;
&lt;p&gt;Ruby Version: ruby 1.9.2p0 (2010-08-18 revision 29036)
[x86_64-linux]&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Repro: 
ActiveSupport::JSON.decode(&quot;{\&quot;str\&quot;:\&quot;1089-10-40\&quot;}&quot;) =&gt; Invalid json exception is raised

Expected:
The hash with { &quot;str&quot; =&gt; &quot;1089-10-40&quot; } should be returned. 

Stack (after disabling the invalid json exception): 
/usr/local/ruby/lib/ruby/1.9.1/date.rb:810:in `civil': invalid date (ArgumentError)
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `node_import'
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
	from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
	from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/backends/yaml.rb:18:in `decode'
	from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/decoding.rb:14:in `decode'

The error seems to be in the Parser which I haven't found yet. 

Ruby Version: ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]</body>
      <body-html>&lt;div&gt;&lt;p&gt;Repro:&lt;br&gt;
ActiveSupport::JSON.decode(&quot;{&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stack (after disabling the invalid json exception):&lt;br&gt;
/usr/local/ruby/lib/ruby/1.9.1/date.rb:810:in &lt;code&gt;civil': invalid
date (ArgumentError)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `node_import'
from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
from /usr/local/ruby/lib/ruby/1.9.1/syck.rb:136:in `load'
from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/backends/yaml.rb:18:in `decode'
from /usr/local/ruby/lib/ruby/gems/1.9.1/gems/activesupport-3.0.0/lib/active_support/json/decoding.rb:14:in `decode'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The error seems to be in the Parser which I haven't found
yet.&lt;/p&gt;
&lt;p&gt;Ruby Version: ruby 1.9.2p0 (2010-08-18 revision 29036)
[x86_64-linux]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-13T11:39:09+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-01-13T11:39:11+00:00</updated-at>
      <user-id type="integer">120472</user-id>
      <version type="integer">1</version>
      <user-name>pederbl (at jobstar)</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; &quot;{\&quot;str\&quot;:\&quot;1089-10-40\&quot;}&quot;

seems like lighthouse formatting has a problem with displaying json strings</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;&quot;{&lt;a href=&quot;&quot;&gt;str&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;seems like lighthouse formatting has a problem with displaying
json strings&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-13T11:44:48+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-01-13T11:44:50+00:00</updated-at>
      <user-id type="integer">120472</user-id>
      <version type="integer">2</version>
      <user-name>pederbl (at jobstar)</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ok here is another try: 

{&quot;str&quot;:&quot;1089-10-40&quot;}</body>
      <body-html>&lt;div&gt;&lt;p&gt;ok here is another try:&lt;/p&gt;
&lt;p&gt;{&lt;a href=&quot;&quot;&gt;str&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-13T11:45:51+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-01-13T11:45:55+00:00</updated-at>
      <user-id type="integer">120472</user-id>
      <version type="integer">3</version>
      <user-name>pederbl (at jobstar)</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>retry: 

&gt; {
&gt;    str: 1089-10-40
&gt; }</body>
      <body-html>&lt;div&gt;&lt;p&gt;retry:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;{ str: 1089-10-40 }&lt;/p&gt;
&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-13T11:47:53+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-01-13T11:47:55+00:00</updated-at>
      <user-id type="integer">120472</user-id>
      <version type="integer">4</version>
      <user-name>pederbl (at jobstar)</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Choose your &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-designer-wedding-dresses-2011-35&quot;&gt;Designer Wedding Dresses 2011&lt;/a&gt;&lt;/b&gt; should be an enjoyable experience and that is what the bride wants big and beautiful! Every bride should receive personal attention when shopping for &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-empire-waist-wedding-dresses-8&quot;&gt;Wholesale Empire Waist Wedding Dresses&lt;/a&gt;&lt;/b&gt; .
Ask around and visit several stores before making a decision. Note, however, there is now a large and beautiful selection of &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-flower-girl-dresses-2&quot;&gt;Wholesale Flower girl dresses&lt;/a&gt;&lt;/b&gt; that can be purchased online.
Online shopping for bridal gown size could be your best bet. Styles include long or short sleeves, tight sleeves or strapless dresses nice to see a full figure and bare shoulders.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Choose your &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-designer-wedding-dresses-2011-35&quot;&gt;
Designer Wedding Dresses 2011&lt;/a&gt;&lt;/b&gt; should be an enjoyable
experience and that is what the bride wants big and beautiful!
Every bride should receive personal attention when shopping for
&lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-empire-waist-wedding-dresses-8&quot;&gt;
Wholesale Empire Waist Wedding Dresses&lt;/a&gt;&lt;/b&gt; .&lt;br&gt;
Ask around and visit several stores before making a decision. Note,
however, there is now a large and beautiful selection of
&lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-flower-girl-dresses-2&quot;&gt;
Wholesale Flower girl dresses&lt;/a&gt;&lt;/b&gt; that can be purchased
online.&lt;br&gt;
Online shopping for bridal gown size could be your best bet. Styles
include long or short sleeves, tight sleeves or strapless dresses
nice to see a full figure and bare shoulders.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-18T08:35:02+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-01-18T08:52:33+00:00</updated-at>
      <user-id type="integer">133048</user-id>
      <version type="integer">5</version>
      <user-name>mary01</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [b17d8d727fb510ad8b6eb4302984d290dc2e53b0]) Fixes an issue when decoding a json string which looks like a date but is invalid. This DateTime parse error is now caught and the original string is instead passed back [#6286 state:resolved]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/b17d8d727fb510ad8b6eb4302984d290dc2e53b0</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/b17d8d727fb510ad8b6eb4302984d290dc2e53b0&quot;
title=
&quot;Changeset [b17d8d727fb510ad8b6eb4302984d290dc2e53b0]&quot;&gt;[b17d8d727fb510ad8b6eb4302984d290dc2e53b0]&lt;/a&gt;)
Fixes an issue when decoding a json string which looks like a date
but is invalid. This DateTime parse error is now caught and the
original string is instead passed back [&lt;a href=
&quot;/projects/8994/tickets/6286&quot; title=&quot;Ticket #6286&quot;&gt;#6286&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino
&lt;a&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/b17d8d727fb510ad8b6eb4302984d290dc2e53b0&quot;&gt;
https://github.com/rails/rails/commit/b17d8d727fb510ad8b6eb4302984d...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-11T15:56:22+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-02-11T15:56:25+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks for fixing this problem. However, I suggest that you should never convert string values to DateTime in the JSON parser. Generally, the current logic violates the Keep it Simple Smartypants (KISS) principle. Specifically, I will have to do the following unintuitive and cumbersome programming pattern because of the current logic: 

hash = ActiveSupport::JSON.decode(json_string)
hash['reference'] = hash['reference'].to_s # make sure to convert DateTime to string if the string matched the datetime regexp in the parser. 

I will have to convert all string values to strings in the hash because otherwise something like the following might happen: 

subject = &quot;Product reference: #{hash['reference']}&quot; # =&gt; &quot;Product reference: 2011-02-12T00:00:00+00:00&quot;

which would be incorrect. The expected value of subject should be: &quot;Product reference: 2011-02-12&quot; because the reference string just happens to look like a date but really isn't. 

So by converting string values to DateTime in the parser you: 
1) require a unintuitive and cumbersome programming pattern
2) make it hard to avoid bugs that are hard to find and debug and appear seldom. 

Also, by converting strings to DateTime the parse code become unnecessarily complicated which makes it harder to maintain increases the risk of bugs and makes it slower.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for fixing this problem. However, I suggest that you
should never convert string values to DateTime in the JSON parser.
Generally, the current logic violates the Keep it Simple
Smartypants (KISS) principle. Specifically, I will have to do the
following unintuitive and cumbersome programming pattern because of
the current logic:&lt;/p&gt;
&lt;p&gt;hash = ActiveSupport::JSON.decode(json_string)&lt;br&gt;
hash['reference'] = hash['reference'].to_s # make sure to convert
DateTime to string if the string matched the datetime regexp in the
parser.&lt;/p&gt;
&lt;p&gt;I will have to convert all string values to strings in the hash
because otherwise something like the following might happen:&lt;/p&gt;
&lt;p&gt;subject = &quot;Product reference: #{hash['reference']}&quot; # =&amp;gt;
&quot;Product reference: 2011-02-12T00:00:00+00:00&quot;&lt;/p&gt;
&lt;p&gt;which would be incorrect. The expected value of subject should
be: &quot;Product reference: 2011-02-12&quot; because the reference string
just happens to look like a date but really isn't.&lt;/p&gt;
&lt;p&gt;So by converting string values to DateTime in the parser
you:&lt;br&gt;
1) require a unintuitive and cumbersome programming pattern&lt;br&gt;
2) make it hard to avoid bugs that are hard to find and debug and
appear seldom.&lt;/p&gt;
&lt;p&gt;Also, by converting strings to DateTime the parse code become
unnecessarily complicated which makes it harder to maintain
increases the risk of bugs and makes it slower.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-12T05:22:58+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-02-12T05:23:00+00:00</updated-at>
      <user-id type="integer">120472</user-id>
      <version type="integer">7</version>
      <user-name>pederbl (at jobstar)</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [e605165d16bc0eff8e4bea9865d9963b2d24dcf1]) Fixes an issue when decoding a json string which looks like a date but is invalid. This DateTime parse error is now caught and the original string is instead passed back [#6286 state:resolved]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/e605165d16bc0eff8e4bea9865d9963b2d24dcf1</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/e605165d16bc0eff8e4bea9865d9963b2d24dcf1&quot;
title=
&quot;Changeset [e605165d16bc0eff8e4bea9865d9963b2d24dcf1]&quot;&gt;[e605165d16bc0eff8e4bea9865d9963b2d24dcf1]&lt;/a&gt;)
Fixes an issue when decoding a json string which looks like a date
but is invalid. This DateTime parse error is now caught and the
original string is instead passed back [&lt;a href=
&quot;/projects/8994/tickets/6286&quot; title=&quot;Ticket #6286&quot;&gt;#6286&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino
&lt;a&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/e605165d16bc0eff8e4bea9865d9963b2d24dcf1&quot;&gt;
https://github.com/rails/rails/commit/e605165d16bc0eff8e4bea9865d99...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-12T15:35:02+00:00</created-at>
      <creator-id type="integer">120472</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6286</number>
      <permalink>activesupportjsondecode-breaks-for-strings-that-look-like-dates-ruby192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_support json ruby1.9.2</tag>
      <title>ActiveSupport::JSON.decode breaks for strings that look like dates ruby1.9.2</title>
      <updated-at type="datetime">2011-02-12T15:35:10+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>pederbl (at jobstar)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6286</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
