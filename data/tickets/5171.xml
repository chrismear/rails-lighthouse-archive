<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-04T08:57:16+01:00</created-at>
  <creator-id type="integer">40263</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5171</number>
  <permalink>refactor-tests-for-nested_attributes</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;nested attributes&quot; &quot;rails 3&quot;</tag>
  <title>refactor tests for nested_attributes</title>
  <updated-at type="datetime">2011-02-02T17:04:08+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Neeraj Singh</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5171</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>This ticket is continuation of discussion from ticket #5053. Please read that ticket to get a background.

As part of fix for #5053 I created a personal branch where some discussion took place. Here I am going to copy paste some of the discussions that took place. It will not contain all the discussions, just some of them which seem relevant.

**Alloy:**

In nested_attributes_test.rb following should be changed from 

@@@ ruby
  test &quot;if association is not loaded and child doesn't change and I am saving a grandchild then in memory record should be used&quot; do
    @ship.parts_attributes=[{:id =&gt; @part.id,:trinkets_attributes =&gt;[{:id =&gt; @trinket.id, :name =&gt; 'Ruby'}]}]
    assert_equal 1, @ship.parts.proxy_target.size
    assert_equal 'Mast', @ship.parts[0].name
    assert_no_difference(&quot;@ship.parts[0].trinkets.proxy_target.size&quot;) do
      @ship.parts[0].trinkets.proxy_target.size
    end
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    @ship.save
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
@@@

to

@@@ ruby
What I actually meant, in the last comment, was to make the test look something like:

&lt;pre&gt;
  test &quot;load_target does not replace updated attributes set on an in-memory version of the same record&quot; do
    @trinket.name = 'Ruby'
    assert !@part.trinkets.loaded?
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    assert_no_difference(&quot;@part.trinkets.proxy_target.size&quot;) { @ship.save! }
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
&lt;/pre&gt;

I also tried to make the test description a bit more clearer, but I'm not sure if I got that right.
@@@

**Alloy:**

As a final note, it seems that some of these patches are written because of an issue encountered when using nested attributes. However, they are not specifically about nested attributes. For instance the one mentioned above, which is really about association collection. So I would expect at least a test added to the association collection test, and maybe a regression one to the nested attributes tests. I especially was a bit surprised to find that there are a whole bunch of these &#8216;lost&#8217; tests in the nested attributes tests.

All tests from line 811 down should not be there at all: http://github.com/neerajdotname/rails/blob/49cc2d682f17dcf74e11b56c...
They should either be in the autosave association tests, or in the association collection tests, as far as I have studied them. Furthermore, they should not use the nested attributes API, as again, it's unrelated and only adds noise.</original-body>
  <latest-body>This ticket is continuation of discussion from ticket #5053. Please read that ticket to get a background.

As part of fix for #5053 I created a personal branch where some discussion took place. Here I am going to copy paste some of the discussions that took place. It will not contain all the discussions, just some of them which seem relevant.

**Alloy:**

In nested_attributes_test.rb following should be changed from 

@@@ ruby
  test &quot;if association is not loaded and child doesn't change and I am saving a grandchild then in memory record should be used&quot; do
    @ship.parts_attributes=[{:id =&gt; @part.id,:trinkets_attributes =&gt;[{:id =&gt; @trinket.id, :name =&gt; 'Ruby'}]}]
    assert_equal 1, @ship.parts.proxy_target.size
    assert_equal 'Mast', @ship.parts[0].name
    assert_no_difference(&quot;@ship.parts[0].trinkets.proxy_target.size&quot;) do
      @ship.parts[0].trinkets.proxy_target.size
    end
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    @ship.save
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
@@@

to

@@@ ruby
What I actually meant, in the last comment, was to make the test look something like:

&lt;pre&gt;
  test &quot;load_target does not replace updated attributes set on an in-memory version of the same record&quot; do
    @trinket.name = 'Ruby'
    assert !@part.trinkets.loaded?
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    assert_no_difference(&quot;@part.trinkets.proxy_target.size&quot;) { @ship.save! }
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
&lt;/pre&gt;

I also tried to make the test description a bit more clearer, but I'm not sure if I got that right.
@@@

**Alloy:**

As a final note, it seems that some of these patches are written because of an issue encountered when using nested attributes. However, they are not specifically about nested attributes. For instance the one mentioned above, which is really about association collection. So I would expect at least a test added to the association collection test, and maybe a regression one to the nested attributes tests. I especially was a bit surprised to find that there are a whole bunch of these &#8216;lost&#8217; tests in the nested attributes tests.

All tests from line 811 down should not be there at all: http://github.com/neerajdotname/rails/blob/49cc2d682f17dcf74e11b56c...
They should either be in the autosave association tests, or in the association collection tests, as far as I have studied them. Furthermore, they should not use the nested attributes API, as again, it's unrelated and only adds noise.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This ticket is continuation of discussion from ticket &lt;a href=
&quot;/projects/8994/tickets/5053&quot; title=&quot;Ticket #5053&quot;&gt;#5053&lt;/a&gt;.
Please read that ticket to get a background.&lt;/p&gt;
&lt;p&gt;As part of fix for &lt;a href=&quot;/projects/8994/tickets/5053&quot; title=
&quot;Ticket #5053&quot;&gt;#5053&lt;/a&gt; I created a personal branch where some
discussion took place. Here I am going to copy paste some of the
discussions that took place. It will not contain all the
discussions, just some of them which seem relevant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alloy:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In nested_attributes_test.rb following should be changed
from&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  test &quot;if association is not loaded and child doesn't change and I am saving a grandchild then in memory record should be used&quot; do
    @ship.parts_attributes=[{:id =&amp;gt; @part.id,:trinkets_attributes =&amp;gt;[{:id =&amp;gt; @trinket.id, :name =&amp;gt; 'Ruby'}]}]
    assert_equal 1, @ship.parts.proxy_target.size
    assert_equal 'Mast', @ship.parts[0].name
    assert_no_difference(&quot;@ship.parts[0].trinkets.proxy_target.size&quot;) do
      @ship.parts[0].trinkets.proxy_target.size
    end
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    @ship.save
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;What I actually meant, in the last comment, was to make the test look something like:

&amp;lt;pre&amp;gt;
  test &quot;load_target does not replace updated attributes set on an in-memory version of the same record&quot; do
    @trinket.name = 'Ruby'
    assert !@part.trinkets.loaded?
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    assert_no_difference(&quot;@part.trinkets.proxy_target.size&quot;) { @ship.save! }
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
&amp;lt;/pre&amp;gt;

I also tried to make the test description a bit more clearer, but I'm not sure if I got that right.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Alloy:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As a final note, it seems that some of these patches are written
because of an issue encountered when using nested attributes.
However, they are not specifically about nested attributes. For
instance the one mentioned above, which is really about association
collection. So I would expect at least a test added to the
association collection test, and maybe a regression one to the
nested attributes tests. I especially was a bit surprised to find
that there are a whole bunch of these &amp;lsquo;lost&amp;rsquo; tests in
the nested attributes tests.&lt;/p&gt;
&lt;p&gt;All tests from line 811 down should not be there at all:
&lt;a href=&quot;http://github.com/neerajdotname/rails/blob/49cc2d682f17dcf74e11b56c..&quot;&gt;
http://github.com/neerajdotname/rails/blob/49cc2d682f17dcf74e11b56c..&lt;/a&gt;.&lt;br&gt;
They should either be in the autosave association tests, or in the
association collection tests, as far as I have studied them.
Furthermore, they should not use the nested attributes API, as
again, it's unrelated and only adds noise.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This ticket is continuation of discussion from ticket #5053. Please read that ticket to get a background.

As part of fix for #5053 I created a personal branch where some discussion took place. Here I am going to copy paste some of the discussions that took place. It will not contain all the discussions, just some of them which seem relevant.

**Alloy:**

In nested_attributes_test.rb following should be changed from 

@@@ ruby
  test &quot;if association is not loaded and child doesn't change and I am saving a grandchild then in memory record should be used&quot; do
    @ship.parts_attributes=[{:id =&gt; @part.id,:trinkets_attributes =&gt;[{:id =&gt; @trinket.id, :name =&gt; 'Ruby'}]}]
    assert_equal 1, @ship.parts.proxy_target.size
    assert_equal 'Mast', @ship.parts[0].name
    assert_no_difference(&quot;@ship.parts[0].trinkets.proxy_target.size&quot;) do
      @ship.parts[0].trinkets.proxy_target.size
    end
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    @ship.save
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
@@@

to

@@@ ruby
What I actually meant, in the last comment, was to make the test look something like:

&lt;pre&gt;
  test &quot;load_target does not replace updated attributes set on an in-memory version of the same record&quot; do
    @trinket.name = 'Ruby'
    assert !@part.trinkets.loaded?
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    assert_no_difference(&quot;@part.trinkets.proxy_target.size&quot;) { @ship.save! }
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
&lt;/pre&gt;

I also tried to make the test description a bit more clearer, but I'm not sure if I got that right.
@@@

**Alloy:**

As a final note, it seems that some of these patches are written because of an issue encountered when using nested attributes. However, they are not specifically about nested attributes. For instance the one mentioned above, which is really about association collection. So I would expect at least a test added to the association collection test, and maybe a regression one to the nested attributes tests. I especially was a bit surprised to find that there are a whole bunch of these &#8216;lost&#8217; tests in the nested attributes tests.

All tests from line 811 down should not be there at all: http://github.com/neerajdotname/rails/blob/49cc2d682f17dcf74e11b56c...
They should either be in the autosave association tests, or in the association collection tests, as far as I have studied them. Furthermore, they should not use the nested attributes API, as again, it's unrelated and only adds noise.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This ticket is continuation of discussion from ticket &lt;a href=
&quot;/projects/8994/tickets/5053&quot; title=&quot;Ticket #5053&quot;&gt;#5053&lt;/a&gt;.
Please read that ticket to get a background.&lt;/p&gt;
&lt;p&gt;As part of fix for &lt;a href=&quot;/projects/8994/tickets/5053&quot; title=
&quot;Ticket #5053&quot;&gt;#5053&lt;/a&gt; I created a personal branch where some
discussion took place. Here I am going to copy paste some of the
discussions that took place. It will not contain all the
discussions, just some of them which seem relevant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alloy:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In nested_attributes_test.rb following should be changed
from&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  test &quot;if association is not loaded and child doesn't change and I am saving a grandchild then in memory record should be used&quot; do
    @ship.parts_attributes=[{:id =&amp;gt; @part.id,:trinkets_attributes =&amp;gt;[{:id =&amp;gt; @trinket.id, :name =&amp;gt; 'Ruby'}]}]
    assert_equal 1, @ship.parts.proxy_target.size
    assert_equal 'Mast', @ship.parts[0].name
    assert_no_difference(&quot;@ship.parts[0].trinkets.proxy_target.size&quot;) do
      @ship.parts[0].trinkets.proxy_target.size
    end
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    @ship.save
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;What I actually meant, in the last comment, was to make the test look something like:

&amp;lt;pre&amp;gt;
  test &quot;load_target does not replace updated attributes set on an in-memory version of the same record&quot; do
    @trinket.name = 'Ruby'
    assert !@part.trinkets.loaded?
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
    assert_no_difference(&quot;@part.trinkets.proxy_target.size&quot;) { @ship.save! }
    assert_equal 'Ruby', @ship.parts[0].trinkets[0].name
  end
&amp;lt;/pre&amp;gt;

I also tried to make the test description a bit more clearer, but I'm not sure if I got that right.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Alloy:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As a final note, it seems that some of these patches are written
because of an issue encountered when using nested attributes.
However, they are not specifically about nested attributes. For
instance the one mentioned above, which is really about association
collection. So I would expect at least a test added to the
association collection test, and maybe a regression one to the
nested attributes tests. I especially was a bit surprised to find
that there are a whole bunch of these &amp;lsquo;lost&amp;rsquo; tests in
the nested attributes tests.&lt;/p&gt;
&lt;p&gt;All tests from line 811 down should not be there at all:
&lt;a href=&quot;http://github.com/neerajdotname/rails/blob/49cc2d682f17dcf74e11b56c..&quot;&gt;
http://github.com/neerajdotname/rails/blob/49cc2d682f17dcf74e11b56c..&lt;/a&gt;.&lt;br&gt;
They should either be in the autosave association tests, or in the
association collection tests, as far as I have studied them.
Furthermore, they should not use the nested attributes API, as
again, it's unrelated and only adds noise.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-21T14:51:16+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5171</number>
      <permalink>refactor-tests-for-nested_attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;nested attributes&quot; &quot;rails 3&quot;</tag>
      <title>refactor tests for nested_attributes</title>
      <updated-at type="datetime">2010-07-21T14:51:19+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">1</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5171</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:34:06+00:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5171</number>
      <permalink>refactor-tests-for-nested_attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;nested attributes&quot; &quot;rails 3&quot;</tag>
      <title>refactor tests for nested_attributes</title>
      <updated-at type="datetime">2011-02-02T17:04:02+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5171</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:34:08+00:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5171</number>
      <permalink>refactor-tests-for-nested_attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;nested attributes&quot; &quot;rails 3&quot;</tag>
      <title>refactor tests for nested_attributes</title>
      <updated-at type="datetime">2011-02-02T17:04:08+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5171</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
