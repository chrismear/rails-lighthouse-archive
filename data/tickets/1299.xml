<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-30T16:42:27+00:00</created-at>
  <creator-id type="integer">23951</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1299</number>
  <permalink>asset-tag-caching-with-an-asset_host-proc-is-problematic</permalink>
  <priority type="integer">703</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>asset_host</tag>
  <title>asset tag caching breaks setting asset_host to a proc</title>
  <updated-at type="datetime">2009-01-01T18:20:34+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Dan Manges</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1299</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I'm using a proc to set the asset_host. I basically want to use ssl if the request is an ssl request, serve assets using the same host as the request if the user is hitting the box directly, and otherwise, use 4 different asset hosts.

The problem is that the cache key in AssetTag.create uses ActionController::Base.asset_host, which is a Proc, but evaluated as a string is always the same.</original-body>
  <latest-body>I'm using a proc to set the asset_host. I basically want to use ssl if the request is an ssl request, serve assets using the same host as the request if the user is hitting the box directly, and otherwise, use 4 different asset hosts.

The problem is that the cache key in AssetTag.create uses ActionController::Base.asset_host, which is a Proc, but evaluated as a string is always the same.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm using a proc to set the asset_host. I basically want to use
ssl if the request is an ssl request, serve assets using the same
host as the request if the user is hitting the box directly, and
otherwise, use 4 different asset hosts.&lt;/p&gt;
&lt;p&gt;The problem is that the cache key in AssetTag.create uses
ActionController::Base.asset_host, which is a Proc, but evaluated
as a string is always the same.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm using a proc to set the asset_host. I basically want to use ssl if the request is an ssl request, serve assets using the same host as the request if the user is hitting the box directly, and otherwise, use 4 different asset hosts.

The problem is that the cache key in AssetTag.create uses ActionController::Base.asset_host, which is a Proc, but evaluated as a string is always the same. So because of the caching, the Proc isn't being called and is returning the wrong results.

@@@ ruby
config.action_controller.asset_host = Proc.new do |source, request|
  if request.ssl?
    &quot;#{request.protocol}#{request.host_with_port}&quot;
  elsif request.host_with_port =~ /^ror\d/i
    request.host_with_port
  else
    &quot;asset%d.domain.com&quot; % (source.hash % 4)
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using a proc to set the asset_host. I basically want to use
ssl if the request is an ssl request, serve assets using the same
host as the request if the user is hitting the box directly, and
otherwise, use 4 different asset hosts.&lt;/p&gt;
&lt;p&gt;The problem is that the cache key in AssetTag.create uses
ActionController::Base.asset_host, which is a Proc, but evaluated
as a string is always the same. So because of the caching, the Proc
isn't being called and is returning the wrong results.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
config.action_controller.asset_host = Proc.new do |source, request|
  if request.ssl?
    &amp;quot;#{request.protocol}#{request.host_with_port}&amp;quot;
  elsif request.host_with_port =~ /^ror\d/i
    request.host_with_port
  else
    &amp;quot;asset%d.domain.com&amp;quot; % (source.hash % 4)
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T16:42:27+00:00</created-at>
      <creator-id type="integer">23951</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1299</number>
      <permalink>asset-tag-caching-with-an-asset_host-proc-is-problematic</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>asset_host</tag>
      <title>asset tag caching breaks setting asset_host to a proc</title>
      <updated-at type="datetime">2008-10-30T16:44:59+00:00</updated-at>
      <user-id type="integer">23951</user-id>
      <version type="integer">1</version>
      <user-name>Dan Manges</user-name>
      <creator-name>Dan Manges</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1299</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [49a055dff639164435dfb71bf18d695970eedac9]) Fixed the AssetTagHelper cache to use the computed asset host as part of the cache key instead of just assuming the its a string [#1299 state:committed]
http://github.com/rails/rails/commit/49a055dff639164435dfb71bf18d695970eedac9</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [49a055dff639164435dfb71bf18d695970eedac9]) Fixed the
AssetTagHelper cache to use the computed asset host as part of the
cache key instead of just assuming the its a string [&lt;a href=&quot;/projects/8994/tickets/1299&quot; title=&quot;Ticket #1299&quot;&gt;#1299&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/49a055dff639164435dfb71bf18d695970eedac9&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-01T17:53:44+00:00</created-at>
      <creator-id type="integer">23951</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1299</number>
      <permalink>asset-tag-caching-with-an-asset_host-proc-is-problematic</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>asset_host</tag>
      <title>asset tag caching breaks setting asset_host to a proc</title>
      <updated-at type="datetime">2009-01-01T17:53:45+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Dan Manges</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1299</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [ee701e0672f5b0978ace900f272b577b45bf826b]) Fixed the AssetTagHelper cache to use the computed asset host as part of the cache key instead of just assuming the its a string [#1299 state:fixed]
http://github.com/rails/rails/commit/ee701e0672f5b0978ace900f272b577b45bf826b</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [ee701e0672f5b0978ace900f272b577b45bf826b]) Fixed the
AssetTagHelper cache to use the computed asset host as part of the
cache key instead of just assuming the its a string [&lt;a href=&quot;/projects/8994/tickets/1299&quot; title=&quot;Ticket #1299&quot;&gt;#1299&lt;/a&gt;
state:fixed] &lt;a href=&quot;http://github.com/rails/rails/commit/ee701e0672f5b0978ace900f272b577b45bf826b&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-01T18:20:33+00:00</created-at>
      <creator-id type="integer">23951</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1299</number>
      <permalink>asset-tag-caching-with-an-asset_host-proc-is-problematic</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>asset_host</tag>
      <title>asset tag caching breaks setting asset_host to a proc</title>
      <updated-at type="datetime">2009-01-01T18:20:34+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Dan Manges</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1299</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
