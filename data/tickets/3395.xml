<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-20T05:28:51+01:00</created-at>
  <creator-id type="integer">19734</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3395</number>
  <permalink>transaction-fixtures-dont-work-if-model-has-a-different-connection-than-activerecordbase</permalink>
  <priority type="integer">165233</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord fixtures testing</tag>
  <title>Transaction fixtures don't work if model has a different connection than ActiveRecord::Base</title>
  <updated-at type="datetime">2010-10-06T06:37:56+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Andrew Selder</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3395</url>
  <priority-name nil="true"></priority-name>
  <original-body>When using transactional fixtures each example is wrapped in a database transactions. This transaction is started on ActiveRecord::Base's connection. However if you use fixture for a model that has a different connection, any changes to this model are not inside of a transaction. This means that changes to this table accumulate and are not reset between examples.

The solution should be fairly simple. Instead of only using database transaction on AR::Base, start a transaction against every connection referred to by a model.

attached is a diff based on Rails 2.2.2 which illustrates the basic idea. I'll create a proper patch against HEAD shortly, as well as write some test.</original-body>
  <latest-body>When using transactional fixtures each example is wrapped in a database transactions. This transaction is started on ActiveRecord::Base's connection. However if you use fixture for a model that has a different connection, any changes to this model are not inside of a transaction. This means that changes to this table accumulate and are not reset between examples.

The solution should be fairly simple. Instead of only using database transaction on AR::Base, start a transaction against every connection referred to by a model.

attached is a diff based on Rails 2.2.2 which illustrates the basic idea. I'll create a proper patch against HEAD shortly, as well as write some test.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When using transactional fixtures each example is wrapped in a
database transactions. This transaction is started on
ActiveRecord::Base's connection. However if you use fixture for a
model that has a different connection, any changes to this model
are not inside of a transaction. This means that changes to this
table accumulate and are not reset between examples.&lt;/p&gt;
&lt;p&gt;The solution should be fairly simple. Instead of only using
database transaction on AR::Base, start a transaction against every
connection referred to by a model.&lt;/p&gt;
&lt;p&gt;attached is a diff based on Rails 2.2.2 which illustrates the
basic idea. I'll create a proper patch against HEAD shortly, as
well as write some test.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using transactional fixtures each example is wrapped in a database transactions. This transaction is started on ActiveRecord::Base's connection. However if you use fixture for a model that has a different connection, any changes to this model are not inside of a transaction. This means that changes to this table accumulate and are not reset between examples.

The solution should be fairly simple. Instead of only using database transaction on AR::Base, start a transaction against every connection referred to by a model.

attached is a diff based on Rails 2.2.2 which illustrates the basic idea. I'll create a proper patch against HEAD shortly, as well as write some test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When using transactional fixtures each example is wrapped in a
database transactions. This transaction is started on
ActiveRecord::Base's connection. However if you use fixture for a
model that has a different connection, any changes to this model
are not inside of a transaction. This means that changes to this
table accumulate and are not reset between examples.&lt;/p&gt;
&lt;p&gt;The solution should be fairly simple. Instead of only using
database transaction on AR::Base, start a transaction against every
connection referred to by a model.&lt;/p&gt;
&lt;p&gt;attached is a diff based on Rails 2.2.2 which illustrates the
basic idea. I'll create a proper patch against HEAD shortly, as
well as write some test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-20T05:28:51+01:00</created-at>
      <creator-id type="integer">19734</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3395</number>
      <permalink>transaction-fixtures-dont-work-if-model-has-a-different-connection-than-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord fixtures testing</tag>
      <title>Transaction fixtures don't work if model has a different connection than ActiveRecord::Base</title>
      <updated-at type="datetime">2009-10-20T05:28:55+01:00</updated-at>
      <user-id type="integer">19734</user-id>
      <version type="integer">1</version>
      <user-name>Andrew Selder</user-name>
      <creator-name>Andrew Selder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3395</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The diff is against fixtures.rb in case it wasn't clear.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The diff is against fixtures.rb in case it wasn't clear.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-20T05:29:51+01:00</created-at>
      <creator-id type="integer">19734</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3395</number>
      <permalink>transaction-fixtures-dont-work-if-model-has-a-different-connection-than-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord fixtures testing</tag>
      <title>Transaction fixtures don't work if model has a different connection than ActiveRecord::Base</title>
      <updated-at type="datetime">2009-10-20T05:29:52+01:00</updated-at>
      <user-id type="integer">19734</user-id>
      <version type="integer">2</version>
      <user-name>Andrew Selder</user-name>
      <creator-name>Andrew Selder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3395</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:37:52+01:00</created-at>
      <creator-id type="integer">19734</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3395</number>
      <permalink>transaction-fixtures-dont-work-if-model-has-a-different-connection-than-activerecordbase</permalink>
      <priority type="integer">165233</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord fixtures testing</tag>
      <title>Transaction fixtures don't work if model has a different connection than ActiveRecord::Base</title>
      <updated-at type="datetime">2010-10-06T06:37:56+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Andrew Selder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3395</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>3b0327f710d23018a9115360d4bee4b724bf43a1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-20T05:28:53+01:00</created-at>
      <filename>patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">300035</id>
      <size type="integer">1756</size>
      <uploader-id type="integer">19734</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/300035/patch.diff</url>
    </attachment>
  </attachments>
</ticket>
