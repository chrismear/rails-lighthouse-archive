<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-08T13:19:42+01:00</created-at>
  <creator-id type="integer">192</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5069</number>
  <permalink>activerecord-destroy_all-returns-empty-array-instead-of-destroyed-records</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord associations destroy_all patch regression</tag>
  <title>ActiveRecord `destroy_all` returns empty array instead of destroyed records</title>
  <updated-at type="datetime">2010-07-08T19:37:04+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">5</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Mislav</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5069</url>
  <priority-name>Low</priority-name>
  <original-body>Just noticed a regression in Rails 3: `destroy_all` always returns an empty array. I've added tests to master and 2-3-stable that `destroy_all` should return destroyed, frozen records same as `destroy` class method does. I've fixed the failure in Rails 3 and also fixed `destroy_all` on associations in both Rails 3 and 2.3.

1. Fix for master is in [mislav/destroy_all-fix](http://github.com/mislav/rails/compare/bf5d15456757e63598575db42917d702af9da729...destroy_all-fix)
2. Fix for 2.3 is in [mislav/destroy_all-2-3-stable](http://github.com/mislav/rails/compare/bfbdeeae3080c89a0b27e42d684cbeb6206c6f60...destroy_all-2-3-stable)</original-body>
  <latest-body>Just noticed a regression in Rails 3: `destroy_all` always returns an empty array. I've added tests to master and 2-3-stable that `destroy_all` should return destroyed, frozen records same as `destroy` class method does. I've fixed the failure in Rails 3 and also fixed `destroy_all` on associations in both Rails 3 and 2.3.

1. Fix for master is in [mislav/destroy_all-fix](http://github.com/mislav/rails/compare/bf5d15456757e63598575db42917d702af9da729...destroy_all-fix)
2. Fix for 2.3 is in [mislav/destroy_all-2-3-stable](http://github.com/mislav/rails/compare/bfbdeeae3080c89a0b27e42d684cbeb6206c6f60...destroy_all-2-3-stable)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Just noticed a regression in Rails 3: &lt;code&gt;destroy_all&lt;/code&gt;
always returns an empty array. I've added tests to master and
2-3-stable that &lt;code&gt;destroy_all&lt;/code&gt; should return destroyed,
frozen records same as &lt;code&gt;destroy&lt;/code&gt; class method does. I've
fixed the failure in Rails 3 and also fixed
&lt;code&gt;destroy_all&lt;/code&gt; on associations in both Rails 3 and
2.3.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fix for master is in &lt;a href=
&quot;http://github.com/mislav/rails/compare/bf5d15456757e63598575db42917d702af9da729...destroy_all-fix&quot;&gt;
mislav/destroy_all-fix&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Fix for 2.3 is in &lt;a href=
&quot;http://github.com/mislav/rails/compare/bfbdeeae3080c89a0b27e42d684cbeb6206c6f60...destroy_all-2-3-stable&quot;&gt;
mislav/destroy_all-2-3-stable&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just noticed a regression in Rails 3: `destroy_all` always returns an empty array. I've added tests to master and 2-3-stable that `destroy_all` should return destroyed, frozen records same as `destroy` class method does. I've fixed the failure in Rails 3 and also fixed `destroy_all` on associations in both Rails 3 and 2.3.

1. Fix for master is in [mislav/destroy_all-fix](http://github.com/mislav/rails/compare/bf5d15456757e63598575db42917d702af9da729...destroy_all-fix)
2. Fix for 2.3 is in [mislav/destroy_all-2-3-stable](http://github.com/mislav/rails/compare/bfbdeeae3080c89a0b27e42d684cbeb6206c6f60...destroy_all-2-3-stable)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just noticed a regression in Rails 3: &lt;code&gt;destroy_all&lt;/code&gt;
always returns an empty array. I've added tests to master and
2-3-stable that &lt;code&gt;destroy_all&lt;/code&gt; should return destroyed,
frozen records same as &lt;code&gt;destroy&lt;/code&gt; class method does. I've
fixed the failure in Rails 3 and also fixed
&lt;code&gt;destroy_all&lt;/code&gt; on associations in both Rails 3 and
2.3.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fix for master is in &lt;a href=
&quot;http://github.com/mislav/rails/compare/bf5d15456757e63598575db42917d702af9da729...destroy_all-fix&quot;&gt;
mislav/destroy_all-fix&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Fix for 2.3 is in &lt;a href=
&quot;http://github.com/mislav/rails/compare/bfbdeeae3080c89a0b27e42d684cbeb6206c6f60...destroy_all-2-3-stable&quot;&gt;
mislav/destroy_all-2-3-stable&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T13:19:42+01:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5069</number>
      <permalink>activerecord-destroy_all-returns-empty-array-instead-of-destroyed-records</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations destroy_all patch regression</tag>
      <title>ActiveRecord `destroy_all` returns empty array instead of destroyed records</title>
      <updated-at type="datetime">2010-07-08T13:19:44+01:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">1</version>
      <user-name>Mislav</user-name>
      <creator-name>Mislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5069</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
to_a.each {|object| object.destroy }.tap { reset }
@@@

What if destroy operation fails on an object. In that case even the failed object will show up in the returned collection. I think changing 'each' to 'select' might fix that problem.

If you don't mind can you add test for this edge condition. Thanks.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;to_a.each {|object| object.destroy }.tap { reset }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What if destroy operation fails on an object. In that case even
the failed object will show up in the returned collection. I think
changing 'each' to 'select' might fix that problem.&lt;/p&gt;
&lt;p&gt;If you don't mind can you add test for this edge condition.
Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T13:57:26+01:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5069</number>
      <permalink>activerecord-destroy_all-returns-empty-array-instead-of-destroyed-records</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations destroy_all patch regression</tag>
      <title>ActiveRecord `destroy_all` returns empty array instead of destroyed records</title>
      <updated-at type="datetime">2010-07-08T13:57:28+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Mislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5069</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>That wasn't a behavior of Rails 2.3. Why change it? A user can iterate over the &quot;destroyed&quot; objects collection and check which records are truly `destroyed?` and which have failed because of `before_destroy` callbacks.

But you're right: whatever behavior is in place, it should be tested.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That wasn't a behavior of Rails 2.3. Why change it? A user can
iterate over the &quot;destroyed&quot; objects collection and check which
records are truly &lt;code&gt;destroyed?&lt;/code&gt; and which have failed
because of &lt;code&gt;before_destroy&lt;/code&gt; callbacks.&lt;/p&gt;
&lt;p&gt;But you're right: whatever behavior is in place, it should be
tested.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T15:48:37+01:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5069</number>
      <permalink>activerecord-destroy_all-returns-empty-array-instead-of-destroyed-records</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations destroy_all patch regression</tag>
      <title>ActiveRecord `destroy_all` returns empty array instead of destroyed records</title>
      <updated-at type="datetime">2010-07-08T15:48:40+01:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">3</version>
      <user-name>Mislav</user-name>
      <creator-name>Mislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5069</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Heads-up to those who might have already pulled: I've just force-pushed something I forgot to my branch for master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Heads-up to those who might have already pulled: I've just
force-pushed something I forgot to my branch for master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-08T16:22:01+01:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5069</number>
      <permalink>activerecord-destroy_all-returns-empty-array-instead-of-destroyed-records</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations destroy_all patch regression</tag>
      <title>ActiveRecord `destroy_all` returns empty array instead of destroyed records</title>
      <updated-at type="datetime">2010-07-08T16:22:06+01:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">4</version>
      <user-name>Mislav</user-name>
      <creator-name>Mislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5069</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Cherry-picked. Thanks Mislav!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cherry-picked. Thanks Mislav!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-08T19:37:00+01:00</created-at>
      <creator-id type="integer">192</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5069</number>
      <permalink>activerecord-destroy_all-returns-empty-array-instead-of-destroyed-records</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord associations destroy_all patch regression</tag>
      <title>ActiveRecord `destroy_all` returns empty array instead of destroyed records</title>
      <updated-at type="datetime">2010-07-08T19:37:04+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Mislav</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5069</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
