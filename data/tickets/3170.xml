<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-09T07:56:14+01:00</created-at>
  <creator-id type="integer">69125</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3170</number>
  <permalink>routing-conflicts-with-shallow-routes</permalink>
  <priority type="integer">139867</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>:shallow_routes has_many_through resources rest routes</tag>
  <title>Routing conflicts with shallow routes</title>
  <updated-at type="datetime">2010-07-29T15:37:57+01:00</updated-at>
  <user-id type="integer">102763</user-id>
  <version type="integer">3</version>
  <user-name>Mike Riley</user-name>
  <creator-name>Jose Prado</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3170</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm quite new to Rails (less than a week in) and I've run into a snag.

I have three models. User has many Groups through Memberships. Group has many Users through Memberships. Membership belongs to Users and Groups.

Everything was working fine until I tried to use the shallow routes option. I've set up RESTful routing using:
@@@ ruby
map.resources :users, :has_many =&gt; :groups, :shallow =&gt; true
map.resources :groups, :has_many =&gt; :users, :shallow =&gt; true
@@@

The User routes work fine but now the Group routes are broken since I can't access /groups/new anymore. A call of &quot;rake routes&quot; clearly shows the problem (I took out the non-GET routes for simplicity):
@@@ ruby
   user_groups GET    /users/:user_id/groups(.:format)      {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
new_user_group GET    /users/:user_id/groups/new(.:format)  {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
    edit_group GET    /groups/:id/edit(.:format)            {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
         group GET    /groups/:id(.:format)                 {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
         users GET    /users(.:format)                      {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;index&quot;}
      new_user GET    /users/new(.:format)                  {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;new&quot;}
     edit_user GET    /users/:id/edit(.:format)             {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;edit&quot;}
          user GET    /users/:id(.:format)                  {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;show&quot;}
   group_users GET    /groups/:group_id/users(.:format)     {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;index&quot;}
new_group_user GET    /groups/:group_id/users/new(.:format) {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;new&quot;}
               GET    /users/:id/edit(.:format)             {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;edit&quot;}
               GET    /users/:id(.:format)                  {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;show&quot;}
        groups GET    /groups(.:format)                     {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
     new_group GET    /groups/new(.:format)                 {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
               GET    /groups/:id/edit(.:format)            {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
               GET    /groups/:id(.:format)                 {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
@@@

The route &quot;group GET /groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; takes precedence over the &quot;new_group GET /groups/new(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}&quot; route so it seems that &quot;new&quot; is interpreted as the :id parameter.

If I remove the shallow routes option and run &quot;rake routes&quot; again, we get similar routing, but in this case, the /groups/new path works as expected. Here's the relevant sections from these routes:

    user_groups GET    /users/:user_id/groups(.:format)           {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
 new_user_group GET    /users/:user_id/groups/new(.:format)       {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
edit_user_group GET    /users/:user_id/groups/:id/edit(.:format)  {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
     user_group GET    /users/:user_id/groups/:id(.:format)       {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
# ....
         groups GET    /groups(.:format)                  {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
      new_group GET    /groups/new(.:format)              {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
     edit_group GET    /groups/:id/edit(.:format)         {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
          group GET    /groups/:id(.:format)              {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}

Looking at these routes, it seems that when the nested routes get shortened with the shallow routes option, they end up becoming higher precedence routes which kill the natural Group routes. More specifically, route &quot;user_group GET /users/:user_id/groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; becomes route &quot;group GET /groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; which is causing the conflict.

So again, Rails beginner here so I'm not sure if this is how it's supposed to work, but it doesn't seem like expected behavior to me. Any tips/thoughts?</original-body>
  <latest-body>I'm quite new to Rails (less than a week in) and I've run into a snag.

I have three models. User has many Groups through Memberships. Group has many Users through Memberships. Membership belongs to Users and Groups.

Everything was working fine until I tried to use the shallow routes option. I've set up RESTful routing using:
@@@ ruby
map.resources :users, :has_many =&gt; :groups, :shallow =&gt; true
map.resources :groups, :has_many =&gt; :users, :shallow =&gt; true
@@@

The User routes work fine but now the Group routes are broken since I can't access /groups/new anymore. A call of &quot;rake routes&quot; clearly shows the problem (I took out the non-GET routes for simplicity):
@@@ ruby
   user_groups GET    /users/:user_id/groups(.:format)      {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
new_user_group GET    /users/:user_id/groups/new(.:format)  {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
    edit_group GET    /groups/:id/edit(.:format)            {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
         group GET    /groups/:id(.:format)                 {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
         users GET    /users(.:format)                      {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;index&quot;}
      new_user GET    /users/new(.:format)                  {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;new&quot;}
     edit_user GET    /users/:id/edit(.:format)             {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;edit&quot;}
          user GET    /users/:id(.:format)                  {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;show&quot;}
   group_users GET    /groups/:group_id/users(.:format)     {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;index&quot;}
new_group_user GET    /groups/:group_id/users/new(.:format) {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;new&quot;}
               GET    /users/:id/edit(.:format)             {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;edit&quot;}
               GET    /users/:id(.:format)                  {:controller=&gt;&quot;users&quot;, :action=&gt;&quot;show&quot;}
        groups GET    /groups(.:format)                     {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
     new_group GET    /groups/new(.:format)                 {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
               GET    /groups/:id/edit(.:format)            {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
               GET    /groups/:id(.:format)                 {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
@@@

The route &quot;group GET /groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; takes precedence over the &quot;new_group GET /groups/new(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}&quot; route so it seems that &quot;new&quot; is interpreted as the :id parameter.

If I remove the shallow routes option and run &quot;rake routes&quot; again, we get similar routing, but in this case, the /groups/new path works as expected. Here's the relevant sections from these routes:

    user_groups GET    /users/:user_id/groups(.:format)           {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
 new_user_group GET    /users/:user_id/groups/new(.:format)       {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
edit_user_group GET    /users/:user_id/groups/:id/edit(.:format)  {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
     user_group GET    /users/:user_id/groups/:id(.:format)       {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
# ....
         groups GET    /groups(.:format)                  {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
      new_group GET    /groups/new(.:format)              {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
     edit_group GET    /groups/:id/edit(.:format)         {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
          group GET    /groups/:id(.:format)              {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}

Looking at these routes, it seems that when the nested routes get shortened with the shallow routes option, they end up becoming higher precedence routes which kill the natural Group routes. More specifically, route &quot;user_group GET /users/:user_id/groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; becomes route &quot;group GET /groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; which is causing the conflict.

So again, Rails beginner here so I'm not sure if this is how it's supposed to work, but it doesn't seem like expected behavior to me. Any tips/thoughts?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm quite new to Rails (less than a week in) and I've run into a
snag.&lt;/p&gt;
&lt;p&gt;I have three models. User has many Groups through Memberships.
Group has many Users through Memberships. Membership belongs to
Users and Groups.&lt;/p&gt;
&lt;p&gt;Everything was working fine until I tried to use the shallow
routes option. I've set up RESTful routing using:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;map.resources :users, :has_many =&amp;gt; :groups, :shallow =&amp;gt; true
map.resources :groups, :has_many =&amp;gt; :users, :shallow =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The User routes work fine but now the Group routes are broken
since I can't access /groups/new anymore. A call of &quot;rake routes&quot;
clearly shows the problem (I took out the non-GET routes for
simplicity):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;   user_groups GET    /users/:user_id/groups(.:format)      {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;index&quot;}
new_user_group GET    /users/:user_id/groups/new(.:format)  {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&lt;code&gt;edit_group GET    /groups/:id/edit(.:format)            {:controller=&amp;amp;gt;&amp;amp;quot;groups&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;edit&amp;amp;quot;}
     group GET    /groups/:id(.:format)                 {:controller=&amp;amp;gt;&amp;amp;quot;groups&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;show&amp;amp;quot;}
     users GET    /users(.:format)                      {:controller=&amp;amp;gt;&amp;amp;quot;users&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;index&amp;amp;quot;}
  new_user GET    /users/new(.:format)                  {:controller=&amp;amp;gt;&amp;amp;quot;users&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;new&amp;amp;quot;}
 edit_user GET    /users/:id/edit(.:format)             {:controller=&amp;amp;gt;&amp;amp;quot;users&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;edit&amp;amp;quot;}
      user GET    /users/:id(.:format)                  {:controller=&amp;amp;gt;&amp;amp;quot;users&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;show&amp;amp;quot;}&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
   group_users GET    /groups/:group_id/users(.:format)     {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;index&quot;}
new_group_user GET    /groups/:group_id/users/new(.:format) {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;new&quot;}

&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;           GET    /users/:id/edit(.:format)             {:controller=&amp;amp;gt;&amp;amp;quot;users&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;edit&amp;amp;quot;}
           GET    /users/:id(.:format)                  {:controller=&amp;amp;gt;&amp;amp;quot;users&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;show&amp;amp;quot;}
    groups GET    /groups(.:format)                     {:controller=&amp;amp;gt;&amp;amp;quot;groups&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;index&amp;amp;quot;}
 new_group GET    /groups/new(.:format)                 {:controller=&amp;amp;gt;&amp;amp;quot;groups&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;new&amp;amp;quot;}
           GET    /groups/:id/edit(.:format)            {:controller=&amp;amp;gt;&amp;amp;quot;groups&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;edit&amp;amp;quot;}
           GET    /groups/:id(.:format)                 {:controller=&amp;amp;gt;&amp;amp;quot;groups&amp;amp;quot;, :action=&amp;amp;gt;&amp;amp;quot;show&amp;amp;quot;}&amp;lt;/code&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
&lt;/pre&gt;
&lt;p&gt;The route &quot;group GET /groups/:id(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&quot; takes precedence
over the &quot;new_group GET /groups/new(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}&quot; route so it seems
that &quot;new&quot; is interpreted as the :id parameter.&lt;/p&gt;
&lt;p&gt;If I remove the shallow routes option and run &quot;rake routes&quot;
again, we get similar routing, but in this case, the /groups/new
path works as expected. Here's the relevant sections from these
routes:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;user_groups GET    /users/:user_id/groups(.:format)           {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;index&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;new_user_group GET /users/:user_id/groups/new(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;} edit_user_group GET
/users/:user_id/groups/:id/edit(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;edit&quot;}&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; user_group GET    /users/:user_id/groups/:id(.:format)       {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;....&lt;/h1&gt;
&lt;pre&gt;
&lt;code&gt;     groups GET    /groups(.:format)                  {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;index&quot;}
  new_group GET    /groups/new(.:format)              {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}
 edit_group GET    /groups/:id/edit(.:format)         {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;edit&quot;}
      group GET    /groups/:id(.:format)              {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Looking at these routes, it seems that when the nested routes
get shortened with the shallow routes option, they end up becoming
higher precedence routes which kill the natural Group routes. More
specifically, route &quot;user_group GET
/users/:user_id/groups/:id(.:format) {:controller=&amp;gt;&quot;groups&quot;,
:action=&amp;gt;&quot;show&quot;}&quot; becomes route &quot;group GET /groups/:id(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&quot; which is causing
the conflict.&lt;/p&gt;
&lt;p&gt;So again, Rails beginner here so I'm not sure if this is how
it's supposed to work, but it doesn't seem like expected behavior
to me. Any tips/thoughts?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm quite new to Rails (less than a week in) and I've run into a snag.

I have three models. User has many Groups through Memberships. Group has many Users through Memberships. Membership belongs to Users and Groups.

Everything was working fine until I tried to use the shallow routes option. I've set up RESTful routing using:
@@@ ruby
map.resources :users, :has_many =&gt; :groups, :shallow =&gt; true
map.resources :groups, :has_many =&gt; :users, :shallow =&gt; true
@@@

The User routes work fine but now the Group routes are broken since I can't access /groups/new anymore. A call of &quot;rake routes&quot; clearly shows the problem (I took out the non-GET routes for simplicity and added text because the Lighthouse syntax parser butchers lines with space at the beginning.):
@@@ ruby
user_groups		GET	/users/:user_id/groups(.:format)		{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
new_user_group	GET	/users/:user_id/groups/new(.:format)	{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
edit_group		GET	/groups/:id/edit(.:format)				{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
group			GET	/groups/:id(.:format)					{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
users 			GET	/users(.:format)						{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;index&quot;}
new_user		GET	/users/new(.:format)					{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;new&quot;}
edit_user		GET	/users/:id/edit(.:format)				{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;edit&quot;}
user			GET	/users/:id(.:format)					{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;show&quot;}
group_users		GET	/groups/:group_id/users(.:format)		{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;index&quot;}
new_group_user	GET	/groups/:group_id/users/new(.:format)	{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;new&quot;}
new_group_user	GET	/users/:id/edit(.:format)				{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;edit&quot;}
new_group_user	GET	/users/:id(.:format)					{:controller=&gt;&quot;users&quot;, :action=&gt;&quot;show&quot;}
groups			GET	/groups(.:format)						{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
new_group		GET	/groups/new(.:format)					{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
new_group		GET	/groups/:id/edit(.:format)				{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
new_group		GET	/groups/:id(.:format)					{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
@@@

The route &quot;group GET /groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; takes precedence over the &quot;new_group GET /groups/new(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}&quot; route so it seems that &quot;new&quot; is interpreted as the :id parameter.

If I remove the shallow routes option and run &quot;rake routes&quot; again, we get similar routing, but in this case, the /groups/new path works as expected. Here's the relevant sections from these routes:
@@@ ruby
user_groups		GET	/users/:user_id/groups(.:format)			{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
new_user_group	GET	/users/:user_id/groups/new(.:format)		{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
edit_user_group	GET	/users/:user_id/groups/:id/edit(.:format)	{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
user_group		GET	/users/:user_id/groups/:id(.:format)		{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}

groups			GET	/groups(.:format)							{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;index&quot;}
new_group		GET	/groups/new(.:format)						{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;new&quot;}
edit_group		GET	/groups/:id/edit(.:format)					{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;edit&quot;}
group			GET	/groups/:id(.:format)						{:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}
@@@

Looking at these routes, it seems that when the nested routes get shortened with the shallow routes option, they end up becoming higher precedence routes which kill the natural Group routes. More specifically, route &quot;user_group GET /users/:user_id/groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; becomes route &quot;group GET /groups/:id(.:format) {:controller=&gt;&quot;groups&quot;, :action=&gt;&quot;show&quot;}&quot; which is causing the conflict.

So again, Rails beginner here so I'm not sure if this is how it's supposed to work, but it doesn't seem like expected behavior to me. Any tips/thoughts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm quite new to Rails (less than a week in) and I've run into a
snag.&lt;/p&gt;
&lt;p&gt;I have three models. User has many Groups through Memberships.
Group has many Users through Memberships. Membership belongs to
Users and Groups.&lt;/p&gt;
&lt;p&gt;Everything was working fine until I tried to use the shallow
routes option. I've set up RESTful routing using:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;map.resources :users, :has_many =&amp;gt; :groups, :shallow =&amp;gt; true
map.resources :groups, :has_many =&amp;gt; :users, :shallow =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The User routes work fine but now the Group routes are broken
since I can't access /groups/new anymore. A call of &quot;rake routes&quot;
clearly shows the problem (I took out the non-GET routes for
simplicity and added text because the Lighthouse syntax parser
butchers lines with space at the beginning.):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;user_groups     GET /users/:user_id/groups(.:format)        {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;index&quot;}
new_user_group  GET /users/:user_id/groups/new(.:format)    {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}
edit_group      GET /groups/:id/edit(.:format)              {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;edit&quot;}
group           GET /groups/:id(.:format)                   {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}
users           GET /users(.:format)                        {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;index&quot;}
new_user        GET /users/new(.:format)                    {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;new&quot;}
edit_user       GET /users/:id/edit(.:format)               {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;edit&quot;}
user            GET /users/:id(.:format)                    {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;show&quot;}
group_users     GET /groups/:group_id/users(.:format)       {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;index&quot;}
new_group_user  GET /groups/:group_id/users/new(.:format)   {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;new&quot;}
new_group_user  GET /users/:id/edit(.:format)               {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;edit&quot;}
new_group_user  GET /users/:id(.:format)                    {:controller=&amp;gt;&quot;users&quot;, :action=&amp;gt;&quot;show&quot;}
groups          GET /groups(.:format)                       {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;index&quot;}
new_group       GET /groups/new(.:format)                   {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}
new_group       GET /groups/:id/edit(.:format)              {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;edit&quot;}
new_group       GET /groups/:id(.:format)                   {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The route &quot;group GET /groups/:id(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&quot; takes precedence
over the &quot;new_group GET /groups/new(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}&quot; route so it seems
that &quot;new&quot; is interpreted as the :id parameter.&lt;/p&gt;
&lt;p&gt;If I remove the shallow routes option and run &quot;rake routes&quot;
again, we get similar routing, but in this case, the /groups/new
path works as expected. Here's the relevant sections from these
routes:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;user_groups     GET /users/:user_id/groups(.:format)            {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;index&quot;}
new_user_group  GET /users/:user_id/groups/new(.:format)        {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}
edit_user_group GET /users/:user_id/groups/:id/edit(.:format)   {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;edit&quot;}
user_group      GET /users/:user_id/groups/:id(.:format)        {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
groups          GET /groups(.:format)                           {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;index&quot;}
new_group       GET /groups/new(.:format)                       {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;new&quot;}
edit_group      GET /groups/:id/edit(.:format)                  {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;edit&quot;}
group           GET /groups/:id(.:format)                       {:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Looking at these routes, it seems that when the nested routes
get shortened with the shallow routes option, they end up becoming
higher precedence routes which kill the natural Group routes. More
specifically, route &quot;user_group GET
/users/:user_id/groups/:id(.:format) {:controller=&amp;gt;&quot;groups&quot;,
:action=&amp;gt;&quot;show&quot;}&quot; becomes route &quot;group GET /groups/:id(.:format)
{:controller=&amp;gt;&quot;groups&quot;, :action=&amp;gt;&quot;show&quot;}&quot; which is causing
the conflict.&lt;/p&gt;
&lt;p&gt;So again, Rails beginner here so I'm not sure if this is how
it's supposed to work, but it doesn't seem like expected behavior
to me. Any tips/thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-09T07:56:14+01:00</created-at>
      <creator-id type="integer">69125</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3170</number>
      <permalink>routing-conflicts-with-shallow-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:shallow_routes has_many_through resources rest routes</tag>
      <title>Routing conflicts with shallow routes</title>
      <updated-at type="datetime">2009-09-09T08:16:25+01:00</updated-at>
      <user-id type="integer">69125</user-id>
      <version type="integer">1</version>
      <user-name>Jose Prado</user-name>
      <creator-name>Jose Prado</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3170</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This doesn't seem to me to be a bug, routes are executed in order and I think your analysis is correct. One solution is to only generate the nested resources for :users, eg.

map.resources :users do |users|
  users.resources :groups, :shallow =&gt; true, :only =&gt; [:index, :new]
end

This will generate only the /users/:user_id/groups and /users/:user_id/groups/new routes, so all /groups routes will fall through to the map.resources :groups, :shallow =&gt; true routes</body>
      <body-html>&lt;div&gt;&lt;p&gt;This doesn't seem to me to be a bug, routes are executed in
order and I think your analysis is correct. One solution is to only
generate the nested resources for :users, eg.&lt;/p&gt;
&lt;p&gt;map.resources :users do |users|&lt;br&gt;
users.resources :groups, :shallow =&amp;gt; true, :only =&amp;gt; [:index,
:new] end&lt;/p&gt;
&lt;p&gt;This will generate only the /users/:user_id/groups and
/users/:user_id/groups/new routes, so all /groups routes will fall
through to the map.resources :groups, :shallow =&amp;gt; true
routes&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-06T23:21:13+00:00</created-at>
      <creator-id type="integer">69125</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3170</number>
      <permalink>routing-conflicts-with-shallow-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>:shallow_routes has_many_through resources rest routes</tag>
      <title>Routing conflicts with shallow routes</title>
      <updated-at type="datetime">2009-11-06T23:21:15+00:00</updated-at>
      <user-id type="integer">75697</user-id>
      <version type="integer">2</version>
      <user-name>Pete Campbell</user-name>
      <creator-name>Jose Prado</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3170</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello,

I am going to mark this as invalid based on Pete's reply.  If you are still having issues with configuring and setting up your routes, you could also ask at http://www.railsforum.com/ or http://www.ruby-forum.com/forum/3 for further help.  I have had good luck with those sites.

Mike Riley</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;I am going to mark this as invalid based on Pete's reply. If you
are still having issues with configuring and setting up your
routes, you could also ask at &lt;a href=
&quot;http://www.railsforum.com/&quot;&gt;http://www.railsforum.com/&lt;/a&gt; or
&lt;a href=
&quot;http://www.ruby-forum.com/forum/3&quot;&gt;http://www.ruby-forum.com/forum/3&lt;/a&gt;
for further help. I have had good luck with those sites.&lt;/p&gt;
&lt;p&gt;Mike Riley&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-29T15:37:56+01:00</created-at>
      <creator-id type="integer">69125</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3170</number>
      <permalink>routing-conflicts-with-shallow-routes</permalink>
      <priority type="integer">139867</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>:shallow_routes has_many_through resources rest routes</tag>
      <title>Routing conflicts with shallow routes</title>
      <updated-at type="datetime">2010-07-29T15:37:57+01:00</updated-at>
      <user-id type="integer">102763</user-id>
      <version type="integer">3</version>
      <user-name>Mike Riley</user-name>
      <creator-name>Jose Prado</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3170</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
