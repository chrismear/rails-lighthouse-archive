<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-15T21:11:37+01:00</created-at>
  <creator-id type="integer">26272</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">627</number>
  <permalink>rails-initializer-load_application_initializers-is-overzealously-globbing-sccs-directories</permalink>
  <priority type="integer">112</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.1 bitkeeper bug sccs</tag>
  <title>Rails::Initializer.load_application_initializers is overzealously globbing SCCS directories</title>
  <updated-at type="datetime">2008-07-20T01:21:11+01:00</updated-at>
  <user-id type="integer">26272</user-id>
  <version type="integer">3</version>
  <user-name>Peter Kovacs</user-name>
  <creator-name>Peter Kovacs</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/627</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have a rails application checked into a BitKeeper repository.  BitKeeper creates an SCCS directory in every directory in which there is source code committed:

config/initializers/inflections.rb
config/initializers/SCCS/s.inflections.rb
...

Rails::Initializer.load_application_initializers uses the following to load these initializers:

Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
  load(initializer)
end

This pattern is used in many places including lib/tasks, etc.  The result is that the SCCS/s.*.rb files are loaded which causes the Rails::Initializer to bomb out.

It seems there are two ways of fixing this problem, either change every where this pattern is used to do something like:

Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
  load(initializer) unless initializer =~ /SCCS/
end

Even if i override this function in (for example) config/environment.rb there are other places were this occurs, such as actionpack-2.1.0/lib/action_controller/helpers.rb in the all_application_helpers function.</original-body>
  <latest-body>I have a rails application checked into a BitKeeper repository.  BitKeeper creates an SCCS directory in every directory in which there is source code committed:

config/initializers/inflections.rb
config/initializers/SCCS/s.inflections.rb
...

Rails::Initializer.load_application_initializers uses the following to load these initializers:

Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
  load(initializer)
end

This pattern is used in many places including lib/tasks, etc.  The result is that the SCCS/s.*.rb files are loaded which causes the Rails::Initializer to bomb out.

It seems there are two ways of fixing this problem, either change every where this pattern is used to do something like:

Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
  load(initializer) unless initializer =~ /SCCS/
end

Even if i override this function in (for example) config/environment.rb there are other places were this occurs, such as actionpack-2.1.0/lib/action_controller/helpers.rb in the all_application_helpers function.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I have a rails application checked into a BitKeeper repository.  BitKeeper creates an SCCS directory in every directory in which there is source code committed:
&lt;/p&gt;&lt;p&gt;
config/initializers/inflections.rb
&lt;/p&gt;&lt;p&gt;
config/initializers/SCCS/s.inflections.rb
&lt;/p&gt;&lt;p&gt;
...
&lt;/p&gt;&lt;p&gt;
Rails::Initializer.load_application_initializers uses the following to load these initializers:
&lt;/p&gt;&lt;p&gt;
Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
&lt;/p&gt;&lt;p&gt;
load(initializer)
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
This pattern is used in many places including lib/tasks, etc.  The result is that the SCCS/s.*.rb files are loaded which causes the Rails::Initializer to bomb out.
&lt;/p&gt;&lt;p&gt;
It seems there are two ways of fixing this problem, either change every where this pattern is used to do something like:
&lt;/p&gt;&lt;p&gt;
Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
&lt;/p&gt;&lt;p&gt;
load(initializer) unless initializer =~ /SCCS/
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
Even if i override this function in (for example) config/environment.rb there are other places were this occurs, such as actionpack-2.1.0/lib/action_controller/helpers.rb in the all_application_helpers function.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a rails application checked into a BitKeeper repository.  BitKeeper creates an SCCS directory in every directory in which there is source code committed:

config/initializers/inflections.rb
config/initializers/SCCS/s.inflections.rb
...

Rails::Initializer.load_application_initializers uses the following to load these initializers:

Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
  load(initializer)
end

This pattern is used in many places including lib/tasks, etc.  The result is that the SCCS/s.*.rb files are loaded which causes the Rails::Initializer to bomb out.

It seems there are two ways of fixing this problem, either change every where this pattern is used to do something like:

Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
  load(initializer) unless initializer =~ /SCCS/
end

Even if i override this function in (for example) config/environment.rb there are other places were this occurs, such as actionpack-2.1.0/lib/action_controller/helpers.rb in the all_application_helpers function.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I have a rails application checked into a BitKeeper repository.  BitKeeper creates an SCCS directory in every directory in which there is source code committed:
&lt;/p&gt;&lt;p&gt;
config/initializers/inflections.rb
&lt;/p&gt;&lt;p&gt;
config/initializers/SCCS/s.inflections.rb
&lt;/p&gt;&lt;p&gt;
...
&lt;/p&gt;&lt;p&gt;
Rails::Initializer.load_application_initializers uses the following to load these initializers:
&lt;/p&gt;&lt;p&gt;
Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
&lt;/p&gt;&lt;p&gt;
load(initializer)
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
This pattern is used in many places including lib/tasks, etc.  The result is that the SCCS/s.*.rb files are loaded which causes the Rails::Initializer to bomb out.
&lt;/p&gt;&lt;p&gt;
It seems there are two ways of fixing this problem, either change every where this pattern is used to do something like:
&lt;/p&gt;&lt;p&gt;
Dir[&quot;.../config/initializers/**/*.rb&quot;].sort.each do |initializer|
&lt;/p&gt;&lt;p&gt;
load(initializer) unless initializer =~ /SCCS/
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
Even if i override this function in (for example) config/environment.rb there are other places were this occurs, such as actionpack-2.1.0/lib/action_controller/helpers.rb in the all_application_helpers function.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-15T21:11:37+01:00</created-at>
      <creator-id type="integer">26272</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">627</number>
      <permalink>rails-initializer-load_application_initializers-is-overzealously-globbing-sccs-directories</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 bitkeeper bug sccs</tag>
      <title>Rails::Initializer.load_application_initializers is overzealously globbing SCCS directories</title>
      <updated-at type="datetime">2008-07-15T21:11:37+01:00</updated-at>
      <user-id type="integer">26272</user-id>
      <version type="integer">1</version>
      <user-name>Peter Kovacs</user-name>
      <creator-name>Peter Kovacs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/627</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We use the /**/*.rb in a ton of places. So adding &quot;=~ /SCCS/&quot; to each is a no. Maybe you could override &quot;Dir#[]&quot;? Or try git :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
We use the /**/*.rb in a ton of places. So adding &quot;=~ /SCCS/&quot; to each is a no. Maybe you could override &quot;Dir#[]&quot;? Or try git :)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-19T21:43:38+01:00</created-at>
      <creator-id type="integer">26272</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">627</number>
      <permalink>rails-initializer-load_application_initializers-is-overzealously-globbing-sccs-directories</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.1 bitkeeper bug sccs</tag>
      <title>Rails::Initializer.load_application_initializers is overzealously globbing SCCS directories</title>
      <updated-at type="datetime">2008-07-19T21:43:38+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Peter Kovacs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/627</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I thought about overriding Dir[], but couldn't quite come up with the correct incantation (as I'm fairly new to ruby).  Or perhaps I had it in the wrong place.  I can definitely try that again though.  Any pointers?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I thought about overriding Dir[], but couldn't quite come up with the correct incantation (as I'm fairly new to ruby).  Or perhaps I had it in the wrong place.  I can definitely try that again though.  Any pointers?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-20T01:21:11+01:00</created-at>
      <creator-id type="integer">26272</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">627</number>
      <permalink>rails-initializer-load_application_initializers-is-overzealously-globbing-sccs-directories</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.1 bitkeeper bug sccs</tag>
      <title>Rails::Initializer.load_application_initializers is overzealously globbing SCCS directories</title>
      <updated-at type="datetime">2008-07-20T01:21:11+01:00</updated-at>
      <user-id type="integer">26272</user-id>
      <version type="integer">3</version>
      <user-name>Peter Kovacs</user-name>
      <creator-name>Peter Kovacs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/627</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
