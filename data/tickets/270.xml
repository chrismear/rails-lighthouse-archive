<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-28T19:40:23+01:00</created-at>
  <creator-id type="integer">18267</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">270</number>
  <permalink>can-t-use-references-in-add_column</permalink>
  <priority type="integer">14515</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Can't use :references in add_column</title>
  <updated-at type="datetime">2008-10-05T15:18:39+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">3</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Mark A. Richman</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/270</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a User and an Address model, where User has_one :address. When creating the Address mode, I am planning for a polymorphic association for another model that also has_one :address. I need to use :references in a migration using add_column, just as I would using create_table.

I expected the following to work:

add_column :users, :addressable, :references, :polymorphic =&gt; true

here is the error:

== 20080526144501 CreateAddresses: migrating ==================================
-- create_table(:addresses)
   -&gt; 0.0040s
-- add_column(:users, :addressable, :references, {:polymorphic=&gt;true})
rake aborted!

Workaround (reversed from schema.rb):

add_column :users, :addressable_id, :integer, :limit =&gt; 11
add_column :users, :addressable_type, :string

Thanks,
Mark</original-body>
  <latest-body>I have a User and an Address model, where User has_one :address. When creating the Address mode, I am planning for a polymorphic association for another model that also has_one :address. I need to use :references in a migration using add_column, just as I would using create_table.

I expected the following to work:

add_column :users, :addressable, :references, :polymorphic =&gt; true

here is the error:

== 20080526144501 CreateAddresses: migrating ==================================
-- create_table(:addresses)
   -&gt; 0.0040s
-- add_column(:users, :addressable, :references, {:polymorphic=&gt;true})
rake aborted!

Workaround (reversed from schema.rb):

add_column :users, :addressable_id, :integer, :limit =&gt; 11
add_column :users, :addressable_type, :string

Thanks,
Mark</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I have a User and an Address model, where User has_one :address. When creating the Address mode, I am planning for a polymorphic association for another model that also has_one :address. I need to use :references in a migration using add_column, just as I would using create_table.
&lt;/p&gt;&lt;p&gt;
I expected the following to work:
&lt;/p&gt;&lt;p&gt;
add_column :users, :addressable, :references, :polymorphic =&gt; true
&lt;/p&gt;&lt;p&gt;
here is the error:
&lt;/p&gt;&lt;p&gt;
== 20080526144501 CreateAddresses: migrating ==================================
&lt;/p&gt;&lt;p&gt;
-- create_table(:addresses)
&lt;/p&gt;&lt;p&gt;
-&gt; 0.0040s
&lt;/p&gt;&lt;p&gt;
-- add_column(:users, :addressable, :references, {:polymorphic=&gt;true})
&lt;/p&gt;&lt;p&gt;
rake aborted!
&lt;/p&gt;&lt;p&gt;
Workaround (reversed from schema.rb):
&lt;/p&gt;&lt;p&gt;
add_column :users, :addressable_id, :integer, :limit =&gt; 11
&lt;/p&gt;&lt;p&gt;
add_column :users, :addressable_type, :string
&lt;/p&gt;&lt;p&gt;
Thanks,
&lt;/p&gt;&lt;p&gt;
Mark
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a User and an Address model, where User has_one :address. When creating the Address mode, I am planning for a polymorphic association for another model that also has_one :address. I need to use :references in a migration using add_column, just as I would using create_table.

I expected the following to work:

add_column :users, :addressable, :references, :polymorphic =&gt; true

here is the error:

== 20080526144501 CreateAddresses: migrating ==================================
-- create_table(:addresses)
   -&gt; 0.0040s
-- add_column(:users, :addressable, :references, {:polymorphic=&gt;true})
rake aborted!

Workaround (reversed from schema.rb):

add_column :users, :addressable_id, :integer, :limit =&gt; 11
add_column :users, :addressable_type, :string

Thanks,
Mark</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I have a User and an Address model, where User has_one :address. When creating the Address mode, I am planning for a polymorphic association for another model that also has_one :address. I need to use :references in a migration using add_column, just as I would using create_table.
&lt;/p&gt;&lt;p&gt;
I expected the following to work:
&lt;/p&gt;&lt;p&gt;
add_column :users, :addressable, :references, :polymorphic =&gt; true
&lt;/p&gt;&lt;p&gt;
here is the error:
&lt;/p&gt;&lt;p&gt;
== 20080526144501 CreateAddresses: migrating ==================================
&lt;/p&gt;&lt;p&gt;
-- create_table(:addresses)
&lt;/p&gt;&lt;p&gt;
-&gt; 0.0040s
&lt;/p&gt;&lt;p&gt;
-- add_column(:users, :addressable, :references, {:polymorphic=&gt;true})
&lt;/p&gt;&lt;p&gt;
rake aborted!
&lt;/p&gt;&lt;p&gt;
Workaround (reversed from schema.rb):
&lt;/p&gt;&lt;p&gt;
add_column :users, :addressable_id, :integer, :limit =&gt; 11
&lt;/p&gt;&lt;p&gt;
add_column :users, :addressable_type, :string
&lt;/p&gt;&lt;p&gt;
Thanks,
&lt;/p&gt;&lt;p&gt;
Mark
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-28T19:40:23+01:00</created-at>
      <creator-id type="integer">18267</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">270</number>
      <permalink>can-t-use-references-in-add_column</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Can't use :references in add_column</title>
      <updated-at type="datetime">2008-05-28T19:40:23+01:00</updated-at>
      <user-id type="integer">18267</user-id>
      <version type="integer">1</version>
      <user-name>Mark A. Richman</user-name>
      <creator-name>Mark A. Richman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/270</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What you think about change_table?

change_table :users do |t|
  t.references :addressable, :polymorphic =&gt; true
end

calling add column with expectation of having two columns sounds wrong to me - whereas using change table you get the same syntax you would have with create table</body>
      <body-html>&lt;div&gt;&lt;p&gt;
What you think about change_table?
&lt;/p&gt;&lt;p&gt;
change_table :users do |t|
&lt;/p&gt;&lt;p&gt;
t.references :addressable, :polymorphic =&gt; true
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
calling add column with expectation of having two columns sounds wrong to me - whereas using change table you get the same syntax you would have with create table
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-03T11:03:53+01:00</created-at>
      <creator-id type="integer">18267</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">270</number>
      <permalink>can-t-use-references-in-add_column</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Can't use :references in add_column</title>
      <updated-at type="datetime">2008-07-03T11:03:53+01:00</updated-at>
      <user-id type="integer">23933</user-id>
      <version type="integer">2</version>
      <user-name>Darragh Curran</user-name>
      <creator-name>Mark A. Richman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/270</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-05T15:18:36+01:00</created-at>
      <creator-id type="integer">18267</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">270</number>
      <permalink>can-t-use-references-in-add_column</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Can't use :references in add_column</title>
      <updated-at type="datetime">2008-10-05T15:18:39+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Mark A. Richman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/270</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
