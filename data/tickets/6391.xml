<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-08T22:28:53+00:00</created-at>
  <creator-id type="integer">117569</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6391</number>
  <permalink>support-multiple-databases-in-migrations</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Support multiple databases in migrations</title>
  <updated-at type="datetime">2011-02-08T22:28:54+00:00</updated-at>
  <user-id type="integer">117569</user-id>
  <version type="integer">1</version>
  <user-name>Arthur Pirogovski</user-name>
  <creator-name>Arthur Pirogovski</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6391</url>
  <priority-name nil="true"></priority-name>
  <original-body>ActiveRecord natively supports multiple database connections. There's no reason for migrations not to do the same.

Not to mess things up, migrations for default database should still reside in db/migrate, while others should reside in db/migrate/database_config_name_without_environment_name.

Also, db:migrate should support option for specifying which database to run migrations on.

Directory layout example:

  db/migrate
  db/migrate/second

Corresponding db config:

@@@ yaml
### config/database.yml
development:
  adapter: sqlite3
  database: main_development

test:
  adapter: sqlite3
  database: main_test

production:
  adapter: sqlite3
  database: main_production

second_development:
  adapter: postgresql
  database: second_development

second_test:
  adapter: postgresql
  database: second_test

second_production:
  adapter: postgresql
  database: second_production
@@@ yaml</original-body>
  <latest-body>ActiveRecord natively supports multiple database connections. There's no reason for migrations not to do the same.

Not to mess things up, migrations for default database should still reside in db/migrate, while others should reside in db/migrate/database_config_name_without_environment_name.

Also, db:migrate should support option for specifying which database to run migrations on.

Directory layout example:

  db/migrate
  db/migrate/second

Corresponding db config:

@@@ yaml
### config/database.yml
development:
  adapter: sqlite3
  database: main_development

test:
  adapter: sqlite3
  database: main_test

production:
  adapter: sqlite3
  database: main_production

second_development:
  adapter: postgresql
  database: second_development

second_test:
  adapter: postgresql
  database: second_test

second_production:
  adapter: postgresql
  database: second_production
@@@ yaml</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ActiveRecord natively supports multiple database connections.
There's no reason for migrations not to do the same.&lt;/p&gt;
&lt;p&gt;Not to mess things up, migrations for default database should
still reside in db/migrate, while others should reside in
db/migrate/database_config_name_without_environment_name.&lt;/p&gt;
&lt;p&gt;Also, db:migrate should support option for specifying which
database to run migrations on.&lt;/p&gt;
&lt;p&gt;Directory layout example:&lt;/p&gt;
&lt;p&gt;db/migrate db/migrate/second&lt;/p&gt;
&lt;p&gt;Corresponding db config:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;yaml&quot;&gt;### config/database.yml
development:
  adapter: sqlite3
  database: main_development

test:
  adapter: sqlite3
  database: main_test

production:
  adapter: sqlite3
  database: main_production

second_development:
  adapter: postgresql
  database: second_development

second_test:
  adapter: postgresql
  database: second_test

second_production:
  adapter: postgresql
  database: second_production&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveRecord natively supports multiple database connections. There's no reason for migrations not to do the same.

Not to mess things up, migrations for default database should still reside in db/migrate, while others should reside in db/migrate/database_config_name_without_environment_name.

Also, db:migrate should support option for specifying which database to run migrations on.

Directory layout example:

  db/migrate
  db/migrate/second

Corresponding db config:

@@@ yaml
### config/database.yml
development:
  adapter: sqlite3
  database: main_development

test:
  adapter: sqlite3
  database: main_test

production:
  adapter: sqlite3
  database: main_production

second_development:
  adapter: postgresql
  database: second_development

second_test:
  adapter: postgresql
  database: second_test

second_production:
  adapter: postgresql
  database: second_production
@@@ yaml</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveRecord natively supports multiple database connections.
There's no reason for migrations not to do the same.&lt;/p&gt;
&lt;p&gt;Not to mess things up, migrations for default database should
still reside in db/migrate, while others should reside in
db/migrate/database_config_name_without_environment_name.&lt;/p&gt;
&lt;p&gt;Also, db:migrate should support option for specifying which
database to run migrations on.&lt;/p&gt;
&lt;p&gt;Directory layout example:&lt;/p&gt;
&lt;p&gt;db/migrate db/migrate/second&lt;/p&gt;
&lt;p&gt;Corresponding db config:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;yaml&quot;&gt;### config/database.yml
development:
  adapter: sqlite3
  database: main_development

test:
  adapter: sqlite3
  database: main_test

production:
  adapter: sqlite3
  database: main_production

second_development:
  adapter: postgresql
  database: second_development

second_test:
  adapter: postgresql
  database: second_test

second_production:
  adapter: postgresql
  database: second_production&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-08T22:28:53+00:00</created-at>
      <creator-id type="integer">117569</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6391</number>
      <permalink>support-multiple-databases-in-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Support multiple databases in migrations</title>
      <updated-at type="datetime">2011-02-08T22:28:54+00:00</updated-at>
      <user-id type="integer">117569</user-id>
      <version type="integer">1</version>
      <user-name>Arthur Pirogovski</user-name>
      <creator-name>Arthur Pirogovski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6391</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
