<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-26T08:45:38+01:00</created-at>
  <creator-id type="integer">21996</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">306</number>
  <permalink>eager-fetching-a-habtm-fails-when-the-habtm-uses-the-include-option</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>2.1 activerecord bug eager_loading</tag>
  <title>Eager fetching a HABTM fails when the HABTM uses the &quot;include&quot; option</title>
  <updated-at type="datetime">2010-07-26T08:45:38+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">4</version>
  <user-name>Pratik</user-name>
  <creator-name>Mark Roghelia</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/306</url>
  <priority-name nil="true"></priority-name>
  <original-body>This ticket assumes that the fix for eager fetching HABTMs that is detailed in ticket #304 has been applied.

Eager fetching a &quot;has_and_belongs_to_many&quot; association as part of a find generates as error when that association is defined to include another HABTM with the &quot;include&quot; option.

Consider the following example.  A UserProfile class has a &quot;has_and_belongs_to_many&quot; association with UserRole.  UserRole in turn has a HABTM with Permission.  In UserProfile, the &quot;user_roles&quot; association is defined to include the permissions, as follows:

class UserProfile &lt; ActiveRecord::Base
  has_and_belongs_to_many :user_roles, :include =&gt; :permissions
end

If I call UserProfile.find(1, :include =&gt; :user_roles), I get the following error:

/Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47: /Users/mark/src/msd/lib/preload_association.rb:45:in `add_preloaded_records_to_collection': You have a nil object when you didn't expect it! (NoMethodError)
You might have expected an instance of Array.
The error occurred while evaluating nil.each	from /Users/mark/src/msd/lib/preload_association.rb:63:in `set_association_collection_records'
	from /Users/mark/src/msd/lib/preload_association.rb:61:in `each'
	from /Users/mark/src/msd/lib/preload_association.rb:61:in `set_association_collection_records'
	from /Users/mark/src/msd/lib/preload_association.rb:109:in `preload_has_and_belongs_to_many_association'
	from /Users/mark/src/msd/lib/preload_association.rb:40:in `send'
	from /Users/mark/src/msd/lib/preload_association.rb:40:in `preload_one_association'
	from /Users/mark/src/msd/lib/preload_association.rb:38:in `each'
	from /Users/mark/src/msd/lib/preload_association.rb:38:in `preload_one_association'
	 ... 11 levels...
	from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
	from ./script/runner:3

This seems to result from the &quot;_parent_id&quot; column not being included in the query.  If I leave &quot;:include =&gt; :permission&quot; out of the definition of &quot;user_roles&quot;, this works (assuming the patch from ticket #304 has been applied).</original-body>
  <latest-body>This ticket assumes that the fix for eager fetching HABTMs that is detailed in ticket #304 has been applied.

Eager fetching a &quot;has_and_belongs_to_many&quot; association as part of a find generates as error when that association is defined to include another HABTM with the &quot;include&quot; option.

Consider the following example.  A UserProfile class has a &quot;has_and_belongs_to_many&quot; association with UserRole.  UserRole in turn has a HABTM with Permission.  In UserProfile, the &quot;user_roles&quot; association is defined to include the permissions, as follows:

class UserProfile &lt; ActiveRecord::Base
  has_and_belongs_to_many :user_roles, :include =&gt; :permissions
end

If I call UserProfile.find(1, :include =&gt; :user_roles), I get the following error:

/Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47: /Users/mark/src/msd/lib/preload_association.rb:45:in `add_preloaded_records_to_collection': You have a nil object when you didn't expect it! (NoMethodError)
You might have expected an instance of Array.
The error occurred while evaluating nil.each	from /Users/mark/src/msd/lib/preload_association.rb:63:in `set_association_collection_records'
	from /Users/mark/src/msd/lib/preload_association.rb:61:in `each'
	from /Users/mark/src/msd/lib/preload_association.rb:61:in `set_association_collection_records'
	from /Users/mark/src/msd/lib/preload_association.rb:109:in `preload_has_and_belongs_to_many_association'
	from /Users/mark/src/msd/lib/preload_association.rb:40:in `send'
	from /Users/mark/src/msd/lib/preload_association.rb:40:in `preload_one_association'
	from /Users/mark/src/msd/lib/preload_association.rb:38:in `each'
	from /Users/mark/src/msd/lib/preload_association.rb:38:in `preload_one_association'
	 ... 11 levels...
	from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
	from ./script/runner:3

This seems to result from the &quot;_parent_id&quot; column not being included in the query.  If I leave &quot;:include =&gt; :permission&quot; out of the definition of &quot;user_roles&quot;, this works (assuming the patch from ticket #304 has been applied).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
This ticket assumes that the fix for eager fetching HABTMs that is detailed in ticket &lt;a href=&quot;/projects/8994/tickets/304&quot; title=&quot;Ticket #304&quot;&gt;#304&lt;/a&gt; has been applied.
&lt;/p&gt;&lt;p&gt;
Eager fetching a &quot;has_and_belongs_to_many&quot; association as part of a find generates as error when that association is defined to include another HABTM with the &quot;include&quot; option.
&lt;/p&gt;&lt;p&gt;
Consider the following example.  A UserProfile class has a &quot;has_and_belongs_to_many&quot; association with UserRole.  UserRole in turn has a HABTM with Permission.  In UserProfile, the &quot;user_roles&quot; association is defined to include the permissions, as follows:
&lt;/p&gt;&lt;p&gt;
class UserProfile &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_and_belongs_to_many :user_roles, :include =&gt; :permissions
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
If I call UserProfile.find(1, :include =&gt; :user_roles), I get the following error:
&lt;/p&gt;&lt;p&gt;
/Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47: /Users/mark/src/msd/lib/preload_association.rb:45:in `add_preloaded_records_to_collection': You have a nil object when you didn't expect it! (NoMethodError)
&lt;/p&gt;&lt;p&gt;
You might have expected an instance of Array.
&lt;/p&gt;&lt;p&gt;
The error occurred while evaluating nil.each	from /Users/mark/src/msd/lib/preload_association.rb:63:in `set_association_collection_records'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:61:in `each'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:61:in `set_association_collection_records'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:109:in `preload_has_and_belongs_to_many_association'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:40:in `send'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:40:in `preload_one_association'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:38:in `each'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:38:in `preload_one_association'
&lt;/p&gt;&lt;p&gt;
... 11 levels...
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
&lt;/p&gt;&lt;p&gt;
from ./script/runner:3
&lt;/p&gt;&lt;p&gt;
This seems to result from the &quot;_parent_id&quot; column not being included in the query.  If I leave &quot;:include =&gt; :permission&quot; out of the definition of &quot;user_roles&quot;, this works (assuming the patch from ticket &lt;a href=&quot;/projects/8994/tickets/304&quot; title=&quot;Ticket #304&quot;&gt;#304&lt;/a&gt; has been applied).
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This ticket assumes that the fix for eager fetching HABTMs that is detailed in ticket #304 has been applied.

Eager fetching a &quot;has_and_belongs_to_many&quot; association as part of a find generates as error when that association is defined to include another HABTM with the &quot;include&quot; option.

Consider the following example.  A UserProfile class has a &quot;has_and_belongs_to_many&quot; association with UserRole.  UserRole in turn has a HABTM with Permission.  In UserProfile, the &quot;user_roles&quot; association is defined to include the permissions, as follows:

class UserProfile &lt; ActiveRecord::Base
  has_and_belongs_to_many :user_roles, :include =&gt; :permissions
end

If I call UserProfile.find(1, :include =&gt; :user_roles), I get the following error:

/Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47: /Users/mark/src/msd/lib/preload_association.rb:45:in `add_preloaded_records_to_collection': You have a nil object when you didn't expect it! (NoMethodError)
You might have expected an instance of Array.
The error occurred while evaluating nil.each	from /Users/mark/src/msd/lib/preload_association.rb:63:in `set_association_collection_records'
	from /Users/mark/src/msd/lib/preload_association.rb:61:in `each'
	from /Users/mark/src/msd/lib/preload_association.rb:61:in `set_association_collection_records'
	from /Users/mark/src/msd/lib/preload_association.rb:109:in `preload_has_and_belongs_to_many_association'
	from /Users/mark/src/msd/lib/preload_association.rb:40:in `send'
	from /Users/mark/src/msd/lib/preload_association.rb:40:in `preload_one_association'
	from /Users/mark/src/msd/lib/preload_association.rb:38:in `each'
	from /Users/mark/src/msd/lib/preload_association.rb:38:in `preload_one_association'
	 ... 11 levels...
	from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
	from ./script/runner:3

This seems to result from the &quot;_parent_id&quot; column not being included in the query.  If I leave &quot;:include =&gt; :permission&quot; out of the definition of &quot;user_roles&quot;, this works (assuming the patch from ticket #304 has been applied).</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This ticket assumes that the fix for eager fetching HABTMs that is detailed in ticket &lt;a href=&quot;/projects/8994/tickets/304&quot; title=&quot;Ticket #304&quot;&gt;#304&lt;/a&gt; has been applied.
&lt;/p&gt;&lt;p&gt;
Eager fetching a &quot;has_and_belongs_to_many&quot; association as part of a find generates as error when that association is defined to include another HABTM with the &quot;include&quot; option.
&lt;/p&gt;&lt;p&gt;
Consider the following example.  A UserProfile class has a &quot;has_and_belongs_to_many&quot; association with UserRole.  UserRole in turn has a HABTM with Permission.  In UserProfile, the &quot;user_roles&quot; association is defined to include the permissions, as follows:
&lt;/p&gt;&lt;p&gt;
class UserProfile &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_and_belongs_to_many :user_roles, :include =&gt; :permissions
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
If I call UserProfile.find(1, :include =&gt; :user_roles), I get the following error:
&lt;/p&gt;&lt;p&gt;
/Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47: /Users/mark/src/msd/lib/preload_association.rb:45:in `add_preloaded_records_to_collection': You have a nil object when you didn't expect it! (NoMethodError)
&lt;/p&gt;&lt;p&gt;
You might have expected an instance of Array.
&lt;/p&gt;&lt;p&gt;
The error occurred while evaluating nil.each	from /Users/mark/src/msd/lib/preload_association.rb:63:in `set_association_collection_records'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:61:in `each'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:61:in `set_association_collection_records'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:109:in `preload_has_and_belongs_to_many_association'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:40:in `send'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:40:in `preload_one_association'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:38:in `each'
&lt;/p&gt;&lt;p&gt;
from /Users/mark/src/msd/lib/preload_association.rb:38:in `preload_one_association'
&lt;/p&gt;&lt;p&gt;
... 11 levels...
&lt;/p&gt;&lt;p&gt;
from /Library/Ruby/Gems/1.8/gems/rails-2.1.0/lib/commands/runner.rb:47
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
&lt;/p&gt;&lt;p&gt;
from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems/custom_require.rb:27:in `require'
&lt;/p&gt;&lt;p&gt;
from ./script/runner:3
&lt;/p&gt;&lt;p&gt;
This seems to result from the &quot;_parent_id&quot; column not being included in the query.  If I leave &quot;:include =&gt; :permission&quot; out of the definition of &quot;user_roles&quot;, this works (assuming the patch from ticket &lt;a href=&quot;/projects/8994/tickets/304&quot; title=&quot;Ticket #304&quot;&gt;#304&lt;/a&gt; has been applied).
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-02T22:53:14+01:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">306</number>
      <permalink>eager-fetching-a-habtm-fails-when-the-habtm-uses-the-include-option</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager fetching a HABTM fails when the HABTM uses the &quot;include&quot; option</title>
      <updated-at type="datetime">2008-06-02T22:53:14+01:00</updated-at>
      <user-id type="integer">21996</user-id>
      <version type="integer">1</version>
      <user-name>Mark Roghelia</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/306</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just hit this problem myself on 2.1 w/ postgres. 

I can concur the _parent_id is left out, as it looks like the :select option (which contains the needed _parent_id) is completely ignored in 
ActiveRecord::Associations:construct_finder_sql_with_included_associations</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I just hit this problem myself on 2.1 w/ postgres.
&lt;/p&gt;&lt;p&gt;
I can concur the _parent_id is left out, as it looks like the :select option (which contains the needed _parent_id) is completely ignored in
&lt;/p&gt;&lt;p&gt;
ActiveRecord::Associations:construct_finder_sql_with_included_associations
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-05T22:47:31+01:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">306</number>
      <permalink>eager-fetching-a-habtm-fails-when-the-habtm-uses-the-include-option</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager fetching a HABTM fails when the HABTM uses the &quot;include&quot; option</title>
      <updated-at type="datetime">2008-06-05T22:47:31+01:00</updated-at>
      <user-id type="integer">22437</user-id>
      <version type="integer">2</version>
      <user-name>James Kebinger</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/306</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I suspect this problem is linked with #77 http://rails.lighthouseapp.com/projects/8994/tickets/77-activerecord-select-is-wiped-when-doing-a-join</body>
      <body-html>&lt;div&gt;&lt;p&gt;I suspect this problem is linked with &lt;a href=&quot;/projects/8994/tickets/77&quot; title=&quot;Ticket #77&quot;&gt;#77&lt;/a&gt; &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/77-activerecord-select-is-wiped-when-doing-a-join&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-06T02:41:04+01:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">306</number>
      <permalink>eager-fetching-a-habtm-fails-when-the-habtm-uses-the-include-option</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager fetching a HABTM fails when the HABTM uses the &quot;include&quot; option</title>
      <updated-at type="datetime">2008-10-23T16:23:41+01:00</updated-at>
      <user-id type="integer">22437</user-id>
      <version type="integer">3</version>
      <user-name>James Kebinger</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/306</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-23T14:12:25+01:00</created-at>
      <creator-id type="integer">21996</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">306</number>
      <permalink>eager-fetching-a-habtm-fails-when-the-habtm-uses-the-include-option</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>2.1 activerecord bug eager_loading</tag>
      <title>Eager fetching a HABTM fails when the HABTM uses the &quot;include&quot; option</title>
      <updated-at type="datetime">2008-07-23T14:12:25+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>Mark Roghelia</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/306</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
