<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-21T14:05:00+00:00</created-at>
  <creator-id type="integer">89237</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5233</number>
  <permalink>rails3-rc</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>abstract_storerb rails30rc rails3rc session</tag>
  <title>Rails3 rc env['rack.session.record'] is not initialized in first request</title>
  <updated-at type="datetime">2011-03-26T02:51:50+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">7</version>
  <user-name>bingbing</user-name>
  <creator-name>Daniele Orlandi</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
  <priority-name>Low</priority-name>
  <original-body>When creating a new session (by accessing the &lt;tt&gt;SessionHash&lt;/tt&gt;), &lt;tt&gt;load_session&lt;/tt&gt; in &lt;tt&gt;AbstractStore&lt;/tt&gt; is not calling get_session anymore (between beta4 and rc), thus the &lt;tt&gt;ActiveRecord&lt;/tt&gt; session record is not instantiated and &lt;tt&gt;env['rack.session.record']&lt;/tt&gt; is empty.

This is the relevant code in &lt;tt&gt;./actionpack-3.0.0.rc/lib/action_dispatch/middleware/session/abstract_store.rb&lt;/tt&gt;

@@@ ruby
        def load_session(env)
          stale_session_check! do
            if sid = current_session_id(env)
              sid, session = get_session(env, sid)
            else
              sid, session = generate_sid, {}
            end
            [sid, session]
          end
        end
@@@

Since my session record is a complex model which also implements session-specific behavior I need to access it even if it is a new session.

I see that this change has been made on purpose to lazy-create the record, however it breaks my usage of sessions and I don't see an alternative approach to have a session model (and not only a hash) in my application without duplicating session tables.</original-body>
  <latest-body>When creating a new session (by accessing the &lt;tt&gt;SessionHash&lt;/tt&gt;), &lt;tt&gt;load_session&lt;/tt&gt; in &lt;tt&gt;AbstractStore&lt;/tt&gt; is not calling get_session anymore (between beta4 and rc), thus the &lt;tt&gt;ActiveRecord&lt;/tt&gt; session record is not instantiated and &lt;tt&gt;env['rack.session.record']&lt;/tt&gt; is empty.

This is the relevant code in &lt;tt&gt;./actionpack-3.0.0.rc/lib/action_dispatch/middleware/session/abstract_store.rb&lt;/tt&gt;

@@@ ruby
        def load_session(env)
          stale_session_check! do
            if sid = current_session_id(env)
              sid, session = get_session(env, sid)
            else
              sid, session = generate_sid, {}
            end
            [sid, session]
          end
        end
@@@

Since my session record is a complex model which also implements session-specific behavior I need to access it even if it is a new session.

I see that this change has been made on purpose to lazy-create the record, however it breaks my usage of sessions and I don't see an alternative approach to have a session model (and not only a hash) in my application without duplicating session tables.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When creating a new session (by accessing the
&lt;tt&gt;SessionHash&lt;/tt&gt;), &lt;tt&gt;load_session&lt;/tt&gt; in
&lt;tt&gt;AbstractStore&lt;/tt&gt; is not calling get_session anymore (between
beta4 and rc), thus the &lt;tt&gt;ActiveRecord&lt;/tt&gt; session record is not
instantiated and &lt;tt&gt;env['rack.session.record']&lt;/tt&gt; is empty.&lt;/p&gt;
&lt;p&gt;This is the relevant code in
&lt;tt&gt;./actionpack-3.0.0.rc/lib/action_dispatch/middleware/session/abstract_store.rb&lt;/tt&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;        def load_session(env)
          stale_session_check! do
            if sid = current_session_id(env)
              sid, session = get_session(env, sid)
            else
              sid, session = generate_sid, {}
            end
            [sid, session]
          end
        end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since my session record is a complex model which also implements
session-specific behavior I need to access it even if it is a new
session.&lt;/p&gt;
&lt;p&gt;I see that this change has been made on purpose to lazy-create
the record, however it breaks my usage of sessions and I don't see
an alternative approach to have a session model (and not only a
hash) in my application without duplicating session tables.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When creating a new session (by accessing the &lt;tt&gt;SessionHash&lt;/tt&gt;), &lt;tt&gt;load_session&lt;/tt&gt; in &lt;tt&gt;AbstractStore&lt;/tt&gt; is not calling get_session anymore (between beta4 and rc), thus the &lt;tt&gt;ActiveRecord&lt;/tt&gt; session record is not instantiated and &lt;tt&gt;env['rack.session.record']&lt;/tt&gt; is empty.

This is the relevant code in &lt;tt&gt;./actionpack-3.0.0.rc/lib/action_dispatch/middleware/session/abstract_store.rb&lt;/tt&gt;

@@@ ruby
        def load_session(env)
          stale_session_check! do
            if sid = current_session_id(env)
              sid, session = get_session(env, sid)
            else
              sid, session = generate_sid, {}
            end
            [sid, session]
          end
        end
@@@

Since my session record is a complex model which also implements session-specific behavior I need to access it even if it is a new session.

I see that this change has been made on purpose to lazy-create the record, however it breaks my usage of sessions and I don't see an alternative approach to have a session model (and not only a hash) in my application without duplicating session tables.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When creating a new session (by accessing the
&lt;tt&gt;SessionHash&lt;/tt&gt;), &lt;tt&gt;load_session&lt;/tt&gt; in
&lt;tt&gt;AbstractStore&lt;/tt&gt; is not calling get_session anymore (between
beta4 and rc), thus the &lt;tt&gt;ActiveRecord&lt;/tt&gt; session record is not
instantiated and &lt;tt&gt;env['rack.session.record']&lt;/tt&gt; is empty.&lt;/p&gt;
&lt;p&gt;This is the relevant code in
&lt;tt&gt;./actionpack-3.0.0.rc/lib/action_dispatch/middleware/session/abstract_store.rb&lt;/tt&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;        def load_session(env)
          stale_session_check! do
            if sid = current_session_id(env)
              sid, session = get_session(env, sid)
            else
              sid, session = generate_sid, {}
            end
            [sid, session]
          end
        end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since my session record is a complex model which also implements
session-specific behavior I need to access it even if it is a new
session.&lt;/p&gt;
&lt;p&gt;I see that this change has been made on purpose to lazy-create
the record, however it breaks my usage of sessions and I don't see
an alternative approach to have a session model (and not only a
hash) in my application without duplicating session tables.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-28T17:59:28+01:00</created-at>
      <creator-id type="integer">89237</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5233</number>
      <permalink>rails3-rc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>abstract_store.rb rails3.0rc rails3rc session</tag>
      <title>Rails3 rc </title>
      <updated-at type="datetime">2010-07-29T02:48:40+01:00</updated-at>
      <user-id type="integer">89237</user-id>
      <version type="integer">1</version>
      <user-name>Daniele Orlandi</user-name>
      <creator-name>Daniele Orlandi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry, title has been truncated.... should have read &quot;Rails3 rc env['rack.session.record'] is not initialized in first request&quot;

Can you edit it?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, title has been truncated.... should have read &quot;Rails3 rc
env['rack.session.record'] is not initialized in first request&quot;&lt;/p&gt;
&lt;p&gt;Can you edit it?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-28T18:11:44+01:00</created-at>
      <creator-id type="integer">89237</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5233</number>
      <permalink>rails3-rc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>abstract_store.rb rails3.0rc rails3rc session</tag>
      <title>Rails3 rc </title>
      <updated-at type="datetime">2010-07-28T18:11:46+01:00</updated-at>
      <user-id type="integer">89237</user-id>
      <version type="integer">2</version>
      <user-name>Daniele Orlandi</user-name>
      <creator-name>Daniele Orlandi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-29T02:49:50+01:00</created-at>
      <creator-id type="integer">89237</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:title: &quot;Rails3 rc &quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5233</number>
      <permalink>rails3-rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>abstract_store.rb rails3.0rc rails3rc session</tag>
      <title>Rails3 rc env['rack.session.record'] is not initialized in first request</title>
      <updated-at type="datetime">2010-07-29T02:49:53+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Daniele Orlandi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:34:33+00:00</created-at>
      <creator-id type="integer">89237</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: abstract_store.rb rails3.0rc rails3rc session
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5233</number>
      <permalink>rails3-rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>abstract_storerb rails30rc rails3rc session</tag>
      <title>Rails3 rc env['rack.session.record'] is not initialized in first request</title>
      <updated-at type="datetime">2011-02-02T17:05:57+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Daniele Orlandi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:34:34+00:00</created-at>
      <creator-id type="integer">89237</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5233</number>
      <permalink>rails3-rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>abstract_storerb rails30rc rails3rc session</tag>
      <title>Rails3 rc env['rack.session.record'] is not initialized in first request</title>
      <updated-at type="datetime">2011-02-02T17:06:07+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Daniele Orlandi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Replica Tag Watches sell at low prices. Buy Tag Heuer Replica Watches, Fake TAG Heuer Watches please come to our &lt;a href=&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag Heuer watches&lt;/a&gt;.Look no further for &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches, Ladies Omega Replica Watches from our &lt;a href=&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega watches&lt;/a&gt; store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Replica Tag Watches sell at low prices. Buy Tag Heuer Replica
Watches, Fake TAG Heuer Watches please come to our &lt;a href=
&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag
Heuer watches&lt;/a&gt;.Look no further for &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica
Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss
replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches,
Ladies Omega Replica Watches from our &lt;a href=
&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega
watches&lt;/a&gt; store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-21T14:04:11+00:00</created-at>
      <creator-id type="integer">89237</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5233</number>
      <permalink>rails3-rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>abstract_storerb rails30rc rails3rc session</tag>
      <title>Rails3 rc env['rack.session.record'] is not initialized in first request</title>
      <updated-at type="datetime">2011-02-21T14:05:00+00:00</updated-at>
      <user-id type="integer">138022</user-id>
      <version type="integer">6</version>
      <user-name>benben</user-name>
      <creator-name>Daniele Orlandi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:16:26+00:00</created-at>
      <creator-id type="integer">89237</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5233</number>
      <permalink>rails3-rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>abstract_storerb rails30rc rails3rc session</tag>
      <title>Rails3 rc env['rack.session.record'] is not initialized in first request</title>
      <updated-at type="datetime">2011-03-26T02:51:50+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">7</version>
      <user-name>bingbing</user-name>
      <creator-name>Daniele Orlandi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5233</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
