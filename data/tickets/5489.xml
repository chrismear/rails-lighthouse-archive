<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-20T16:10:07+00:00</created-at>
  <creator-id type="integer">113604</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5489</number>
  <permalink>activerecord-observer-calls-method_missing-with-ruby-192-p0-rake-dbmigratereset-fails</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord bugs patch &quot;rails 238&quot; ruby192 workaround</tag>
  <title>ActiveRecord Observer calls method_missing with ruby 1.9.2-p0, rake db:migrate:reset fails</title>
  <updated-at type="datetime">2011-02-21T00:00:13+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">5</version>
  <user-name>rails</user-name>
  <creator-name>Stuart Zilm</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5489</url>
  <priority-name nil="true"></priority-name>
  <original-body>Using rails 2.3.8.

After upgrading from ruby 1.9.1 to ruby 1.9.2-p0, rake db:migrate began failing on an empty database.

The culprit is ruby 1.9.2-p0's Array.flatten in ActiveRecord::Observer::observed_classes.
activerecord-2.3.8/lib/active_record/observer.rb:183:  Set.new([self.class.observed_class].compact.flatten)

rake db:migrate loads the environment, instantiating the observers, before migrating the database.

Under ruby 1.9.1-p378, this line and Array.flatten in general call to_ary when available on each array element, but avoid missing_method.
Under ruby 1.9.2-p0, missing_method is called on elements that don't have to_ary.

Calls to missing_method on observed classes inheriting ActiveRecord::Base generate SQL errors if the relations do not yet exist.</original-body>
  <latest-body>Using rails 2.3.8.

After upgrading from ruby 1.9.1 to ruby 1.9.2-p0, rake db:migrate began failing on an empty database.

The culprit is ruby 1.9.2-p0's Array.flatten in ActiveRecord::Observer::observed_classes.
activerecord-2.3.8/lib/active_record/observer.rb:183:  Set.new([self.class.observed_class].compact.flatten)

rake db:migrate loads the environment, instantiating the observers, before migrating the database.

Under ruby 1.9.1-p378, this line and Array.flatten in general call to_ary when available on each array element, but avoid missing_method.
Under ruby 1.9.2-p0, missing_method is called on elements that don't have to_ary.

Calls to missing_method on observed classes inheriting ActiveRecord::Base generate SQL errors if the relations do not yet exist.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using rails 2.3.8.&lt;/p&gt;
&lt;p&gt;After upgrading from ruby 1.9.1 to ruby 1.9.2-p0, rake
db:migrate began failing on an empty database.&lt;/p&gt;
&lt;p&gt;The culprit is ruby 1.9.2-p0's Array.flatten in
ActiveRecord::Observer::observed_classes.&lt;br&gt;
activerecord-2.3.8/lib/active_record/observer.rb:183:
Set.new([self.class.observed_class].compact.flatten)&lt;/p&gt;
&lt;p&gt;rake db:migrate loads the environment, instantiating the
observers, before migrating the database.&lt;/p&gt;
&lt;p&gt;Under ruby 1.9.1-p378, this line and Array.flatten in general
call to_ary when available on each array element, but avoid
missing_method.&lt;br&gt;
Under ruby 1.9.2-p0, missing_method is called on elements that
don't have to_ary.&lt;/p&gt;
&lt;p&gt;Calls to missing_method on observed classes inheriting
ActiveRecord::Base generate SQL errors if the relations do not yet
exist.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using rails 2.3.8.

After upgrading from ruby 1.9.1 to ruby 1.9.2-p0, rake db:migrate began failing on an empty database.

The culprit is ruby 1.9.2-p0's Array.flatten in ActiveRecord::Observer::observed_classes.
activerecord-2.3.8/lib/active_record/observer.rb:183:  Set.new([self.class.observed_class].compact.flatten)

rake db:migrate loads the environment, instantiating the observers, before migrating the database.

Under ruby 1.9.1-p378, this line and Array.flatten in general call to_ary when available on each array element, but avoid missing_method.
Under ruby 1.9.2-p0, missing_method is called on elements that don't have to_ary.

Calls to missing_method on observed classes inheriting ActiveRecord::Base generate SQL errors if the relations do not yet exist.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using rails 2.3.8.&lt;/p&gt;
&lt;p&gt;After upgrading from ruby 1.9.1 to ruby 1.9.2-p0, rake
db:migrate began failing on an empty database.&lt;/p&gt;
&lt;p&gt;The culprit is ruby 1.9.2-p0's Array.flatten in
ActiveRecord::Observer::observed_classes.&lt;br&gt;
activerecord-2.3.8/lib/active_record/observer.rb:183:
Set.new([self.class.observed_class].compact.flatten)&lt;/p&gt;
&lt;p&gt;rake db:migrate loads the environment, instantiating the
observers, before migrating the database.&lt;/p&gt;
&lt;p&gt;Under ruby 1.9.1-p378, this line and Array.flatten in general
call to_ary when available on each array element, but avoid
missing_method.&lt;br&gt;
Under ruby 1.9.2-p0, missing_method is called on elements that
don't have to_ary.&lt;/p&gt;
&lt;p&gt;Calls to missing_method on observed classes inheriting
ActiveRecord::Base generate SQL errors if the relations do not yet
exist.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-29T21:57:16+01:00</created-at>
      <creator-id type="integer">113604</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5489</number>
      <permalink>activerecord-observer-calls-method_missing-with-ruby-192-p0-rake-dbmigratereset-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;bugs activerecord ruby-1.9.2&quot;</tag>
      <title>ActiveRecord Observer calls method_missing with ruby 1.9.2-p0, rake db:migrate:reset fails</title>
      <updated-at type="datetime">2010-08-30T16:18:45+01:00</updated-at>
      <user-id type="integer">113604</user-id>
      <version type="integer">1</version>
      <user-name>Stuart Zilm</user-name>
      <creator-name>Stuart Zilm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Added a patch for a horrible workaround.  This is not the correct solution to this issue and I fear regressions as a result.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Added a patch for a horrible workaround. This is not the correct
solution to this issue and I fear regressions as a result.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T16:17:42+01:00</created-at>
      <creator-id type="integer">113604</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;bugs activerecord ruby-1.9.2\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5489</number>
      <permalink>activerecord-observer-calls-method_missing-with-ruby-192-p0-rake-dbmigratereset-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugs patch &quot;rails 2.3.8&quot; ruby1.9.2 workaround</tag>
      <title>ActiveRecord Observer calls method_missing with ruby 1.9.2-p0, rake db:migrate:reset fails</title>
      <updated-at type="datetime">2010-08-30T16:17:47+01:00</updated-at>
      <user-id type="integer">113604</user-id>
      <version type="integer">2</version>
      <user-name>Stuart Zilm</user-name>
      <creator-name>Stuart Zilm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Otherwise, the jewelry would be faded. Third, ladies had better go to jewelry shop to check and clean at least once a year. http://www.tiffanyjewellerypalace.com/
 Fourth, put away the diamond jewelry well. Diamond jewelry should be separated from other decorations, for other decorations may cut the diamond.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Otherwise, the jewelry would be faded. Third, ladies had better
go to jewelry shop to check and clean at least once a year.
&lt;a href=&quot;http://www.tiffanyjewellerypalace.com/&quot;&gt;http://www.tiffanyjewellerypalace.com/&lt;/a&gt;&lt;br&gt;
Fourth, put away the diamond jewelry well. Diamond jewelry should
be separated from other decorations, for other decorations may cut
the diamond.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-18T08:43:26+00:00</created-at>
      <creator-id type="integer">113604</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5489</number>
      <permalink>activerecord-observer-calls-method_missing-with-ruby-192-p0-rake-dbmigratereset-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugs patch &quot;rails 2.3.8&quot; ruby1.9.2 workaround</tag>
      <title>ActiveRecord Observer calls method_missing with ruby 1.9.2-p0, rake db:migrate:reset fails</title>
      <updated-at type="datetime">2010-11-20T16:10:07+00:00</updated-at>
      <user-id type="integer">125680</user-id>
      <version type="integer">3</version>
      <user-name>lery</user-name>
      <creator-name>Stuart Zilm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-21T00:00:06+00:00</created-at>
      <creator-id type="integer">113604</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: activerecord bugs patch &quot;rails 2.3.8&quot; ruby1.9.2 workaround
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5489</number>
      <permalink>activerecord-observer-calls-method_missing-with-ruby-192-p0-rake-dbmigratereset-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bugs patch &quot;rails 238&quot; ruby192 workaround</tag>
      <title>ActiveRecord Observer calls method_missing with ruby 1.9.2-p0, rake db:migrate:reset fails</title>
      <updated-at type="datetime">2011-02-21T00:00:10+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Stuart Zilm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5489</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-21T00:00:07+00:00</created-at>
      <creator-id type="integer">113604</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5489</number>
      <permalink>activerecord-observer-calls-method_missing-with-ruby-192-p0-rake-dbmigratereset-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bugs patch &quot;rails 238&quot; ruby192 workaround</tag>
      <title>ActiveRecord Observer calls method_missing with ruby 1.9.2-p0, rake db:migrate:reset fails</title>
      <updated-at type="datetime">2011-02-21T00:00:13+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">5</version>
      <user-name>rails</user-name>
      <creator-name>Stuart Zilm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5489</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>53a2f5d4a01e34b8f505878742131fe403551ffa</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-30T16:17:43+01:00</created-at>
      <filename>rails-5489-workaround.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">650692</id>
      <size type="integer">1188</size>
      <uploader-id type="integer">113604</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/650692/rails-5489-workaround.patch</url>
    </attachment>
  </attachments>
</ticket>
