<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-18T13:12:45+00:00</created-at>
  <creator-id type="integer">14714</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3738</number>
  <permalink>breaking-change-in-requestpath_parameters</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>action_pack rails3</tag>
  <title>Breaking change in request.path_parameters</title>
  <updated-at type="datetime">2010-08-26T10:18:20+01:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">4</version>
  <user-name>Andrew White</user-name>
  <creator-name>Sam Saffron</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3738</url>
  <priority-name>Low</priority-name>
  <original-body>In rails 2.3.5 request.path_parameters goes from string to string eg: {&quot;action&quot; =&gt; &quot;foo&quot;, &quot;controller&quot; =&gt; &quot;bar&quot;} 

In rails 3 request.path_parameters goes from symbol to string eg: {:action =&gt; &quot;foo&quot;, :controller =&gt; &quot;bar&quot;} 

Even though its more efficient this change regresses some places the depend on a parity between path_parameters and params since params still goes from string to string. 

There should be parity here or it will cause confusion.</original-body>
  <latest-body>In rails 2.3.5 request.path_parameters goes from string to string eg: {&quot;action&quot; =&gt; &quot;foo&quot;, &quot;controller&quot; =&gt; &quot;bar&quot;} 

In rails 3 request.path_parameters goes from symbol to string eg: {:action =&gt; &quot;foo&quot;, :controller =&gt; &quot;bar&quot;} 

Even though its more efficient this change regresses some places the depend on a parity between path_parameters and params since params still goes from string to string. 

There should be parity here or it will cause confusion.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In rails 2.3.5 request.path_parameters goes from string to
string eg: {&quot;action&quot; =&amp;gt; &quot;foo&quot;, &quot;controller&quot; =&amp;gt; &quot;bar&quot;}&lt;/p&gt;
&lt;p&gt;In rails 3 request.path_parameters goes from symbol to string
eg: {:action =&amp;gt; &quot;foo&quot;, :controller =&amp;gt; &quot;bar&quot;}&lt;/p&gt;
&lt;p&gt;Even though its more efficient this change regresses some places
the depend on a parity between path_parameters and params since
params still goes from string to string.&lt;/p&gt;
&lt;p&gt;There should be parity here or it will cause confusion.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In rails 2.3.5 request.path_parameters goes from string to string eg: {&quot;action&quot; =&gt; &quot;foo&quot;, &quot;controller&quot; =&gt; &quot;bar&quot;} 

In rails 3 request.path_parameters goes from symbol to string eg: {:action =&gt; &quot;foo&quot;, :controller =&gt; &quot;bar&quot;} 

Even though its more efficient this change regresses some places the depend on a parity between path_parameters and params since params still goes from string to string. 

There should be parity here or it will cause confusion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In rails 2.3.5 request.path_parameters goes from string to
string eg: {&quot;action&quot; =&amp;gt; &quot;foo&quot;, &quot;controller&quot; =&amp;gt; &quot;bar&quot;}&lt;/p&gt;
&lt;p&gt;In rails 3 request.path_parameters goes from symbol to string
eg: {:action =&amp;gt; &quot;foo&quot;, :controller =&amp;gt; &quot;bar&quot;}&lt;/p&gt;
&lt;p&gt;Even though its more efficient this change regresses some places
the depend on a parity between path_parameters and params since
params still goes from string to string.&lt;/p&gt;
&lt;p&gt;There should be parity here or it will cause confusion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-18T13:12:45+00:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3738</number>
      <permalink>breaking-change-in-requestpath_parameters</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_pack rails3</tag>
      <title>Breaking change in request.path_parameters</title>
      <updated-at type="datetime">2010-01-18T13:12:47+00:00</updated-at>
      <user-id type="integer">14714</user-id>
      <version type="integer">1</version>
      <user-name>Sam Saffron</user-name>
      <creator-name>Sam Saffron</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3738</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>request.path_parameters is a `HashWithIndifferentAccess` object, as is `params`. There is no disparity.</body>
      <body-html>&lt;div&gt;&lt;p&gt;request.path_parameters is a
&lt;code&gt;HashWithIndifferentAccess&lt;/code&gt; object, as is
&lt;code&gt;params&lt;/code&gt;. There is no disparity.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-12T03:24:09+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3738</number>
      <permalink>breaking-change-in-requestpath_parameters</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>action_pack rails3</tag>
      <title>Breaking change in request.path_parameters</title>
      <updated-at type="datetime">2010-06-12T03:24:14+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Sam Saffron</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3738</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just tested that on RC2 and request.path_parameters is definitely just a Hash (not HashWithIndifferentAccess) with symbols as keys.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just tested that on RC2 and request.path_parameters is
definitely just a Hash (not HashWithIndifferentAccess) with symbols
as keys.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-26T08:49:30+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3738</number>
      <permalink>breaking-change-in-requestpath_parameters</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>action_pack rails3</tag>
      <title>Breaking change in request.path_parameters</title>
      <updated-at type="datetime">2010-08-26T08:49:32+01:00</updated-at>
      <user-id type="integer">43210</user-id>
      <version type="integer">3</version>
      <user-name>Evgeniy Dolzhenko</user-name>
      <creator-name>Sam Saffron</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3738</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm pretty sure that this is intentional as there is symbolized_path_parameters. I suspect the change came about because path_parameters is stored in the rack environment hash.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm pretty sure that this is intentional as there is
symbolized_path_parameters. I suspect the change came about because
path_parameters is stored in the rack environment hash.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-26T10:18:17+01:00</created-at>
      <creator-id type="integer">14714</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3738</number>
      <permalink>breaking-change-in-requestpath_parameters</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>action_pack rails3</tag>
      <title>Breaking change in request.path_parameters</title>
      <updated-at type="datetime">2010-08-26T10:18:20+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Sam Saffron</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3738</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
