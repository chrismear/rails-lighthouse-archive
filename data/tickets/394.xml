<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-11T20:42:41+01:00</created-at>
  <creator-id type="integer">10926</creator-id>
  <milestone-due-on type="datetime">2009-03-18T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">9901</milestone-id>
  <number type="integer">394</number>
  <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
  <priority type="integer">11922</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
  <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
  <updated-at type="datetime">2008-11-20T17:02:09+00:00</updated-at>
  <user-id type="integer">18346</user-id>
  <version type="integer">7</version>
  <user-name>Brent Miller</user-name>
  <creator-name>Antonio Cangiano</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
  <milestone-title>2.1.1</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Preloading has_and_belongs_to_many associations generates non-standard SQL which breaks standard-compliant databases like DB2 and Oracle.

Example:

class Project &lt; ActiveRecord::Base
  has_and_belongs_to_many :developers
end

class Developer &lt; ActiveRecord::Base
  has_and_belongs_to_many :projects
end

p Project.find(:all, :include =&gt; :developers)

The previous code generates queries along the lines of:

SELECT developers.*, t0.project_id as _parent_record_id FROM developers INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id WHERE (t0.project_id IN (1,2))

An SQL identifier cannot begin with an underscore, and this is true for all three versions of the standard (92, 99 and 2003). You can verify the non-conformity of the generated SQL through this validator: http://developer.mimer.com/validator/parser200x/index.tml#parser

In the attached patch, I renamed _parent_record_id with the_parent_record_id.

Please note that no further tests are required given that the test cases in cases/associations_test.rb already cover this specific issue.</original-body>
  <latest-body>Preloading has_and_belongs_to_many associations generates non-standard SQL which breaks standard-compliant databases like DB2 and Oracle.

Example:

class Project &lt; ActiveRecord::Base
  has_and_belongs_to_many :developers
end

class Developer &lt; ActiveRecord::Base
  has_and_belongs_to_many :projects
end

p Project.find(:all, :include =&gt; :developers)

The previous code generates queries along the lines of:

SELECT developers.*, t0.project_id as _parent_record_id FROM developers INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id WHERE (t0.project_id IN (1,2))

An SQL identifier cannot begin with an underscore, and this is true for all three versions of the standard (92, 99 and 2003). You can verify the non-conformity of the generated SQL through this validator: http://developer.mimer.com/validator/parser200x/index.tml#parser

In the attached patch, I renamed _parent_record_id with the_parent_record_id.

Please note that no further tests are required given that the test cases in cases/associations_test.rb already cover this specific issue.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Preloading has_and_belongs_to_many associations generates non-standard SQL which breaks standard-compliant databases like DB2 and Oracle.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;&lt;p&gt;
class Project &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_and_belongs_to_many :developers
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Developer &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_and_belongs_to_many :projects
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
p Project.find(:all, :include =&gt; :developers)
&lt;/p&gt;&lt;p&gt;
The previous code generates queries along the lines of:
&lt;/p&gt;&lt;p&gt;
SELECT developers.*, t0.project_id as _parent_record_id FROM developers INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id WHERE (t0.project_id IN (1,2))
&lt;/p&gt;&lt;p&gt;
An SQL identifier cannot begin with an underscore, and this is true for all three versions of the standard (92, 99 and 2003). You can verify the non-conformity of the generated SQL through this validator: &lt;a href=&quot;http://developer.mimer.com/validator/parser200x/index.tml#parser&quot;&gt;http://developer.mimer.com/valid...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
In the attached patch, I renamed _parent_record_id with the_parent_record_id.
&lt;/p&gt;&lt;p&gt;
Please note that no further tests are required given that the test cases in cases/associations_test.rb already cover this specific issue.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Preloading has_and_belongs_to_many associations generates non-standard SQL which breaks standard-compliant databases like DB2 and Oracle.

Example:

class Project &lt; ActiveRecord::Base
  has_and_belongs_to_many :developers
end

class Developer &lt; ActiveRecord::Base
  has_and_belongs_to_many :projects
end

p Project.find(:all, :include =&gt; :developers)

The previous code generates queries along the lines of:

SELECT developers.*, t0.project_id as _parent_record_id FROM developers INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id WHERE (t0.project_id IN (1,2))

An SQL identifier cannot begin with an underscore, and this is true for all three versions of the standard (92, 99 and 2003). You can verify the non-conformity of the generated SQL through this validator: http://developer.mimer.com/validator/parser200x/index.tml#parser

In the attached patch, I renamed _parent_record_id with the_parent_record_id.

Please note that no further tests are required given that the test cases in cases/associations_test.rb already cover this specific issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Preloading has_and_belongs_to_many associations generates non-standard SQL which breaks standard-compliant databases like DB2 and Oracle.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;&lt;p&gt;
class Project &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_and_belongs_to_many :developers
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Developer &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_and_belongs_to_many :projects
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
p Project.find(:all, :include =&gt; :developers)
&lt;/p&gt;&lt;p&gt;
The previous code generates queries along the lines of:
&lt;/p&gt;&lt;p&gt;
SELECT developers.*, t0.project_id as _parent_record_id FROM developers INNER JOIN developers_projects as t0 ON developers.id = t0.developer_id WHERE (t0.project_id IN (1,2))
&lt;/p&gt;&lt;p&gt;
An SQL identifier cannot begin with an underscore, and this is true for all three versions of the standard (92, 99 and 2003). You can verify the non-conformity of the generated SQL through this validator: &lt;a href=&quot;http://developer.mimer.com/validator/parser200x/index.tml#parser&quot;&gt;http://developer.mimer.com/valid...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
In the attached patch, I renamed _parent_record_id with the_parent_record_id.
&lt;/p&gt;&lt;p&gt;
Please note that no further tests are required given that the test cases in cases/associations_test.rb already cover this specific issue.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-11T20:42:41+01:00</created-at>
      <creator-id type="integer">10926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">394</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-06-11T20:42:41+01:00</updated-at>
      <user-id type="integer">10926</user-id>
      <version type="integer">1</version>
      <user-name>Antonio Cangiano</user-name>
      <creator-name>Antonio Cangiano</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-12T01:28:13+01:00</created-at>
      <creator-id type="integer">10926</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">394</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-06-12T01:28:13+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Antonio Cangiano</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [4689496b525526a776004c4986d98b0ce62309d5]) Fixed non-standard SQL generated by preloading has_and_belongs_to_many association.  [#394 state:resolved]
http://github.com/rails/rails/commit/4689496b525526a776004c4986d98b0ce62309d5</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [4689496b525526a776004c4986d98b0ce62309d5]) Fixed non-standard SQL generated by preloading has_and_belongs_to_many association.  [#394 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/4689496b525526a776004c4986d98b0ce62309d5&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-12T01:36:38+01:00</created-at>
      <creator-id type="integer">10926</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">394</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-06-12T01:36:38+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Antonio Cangiano</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I manually patched my source with your fix and still got an
error. I am running Oracle 9.2. The second portion of the
above example 'as t0' was still causing an error. Removing the
'as' fixed the problem.

Regards,
Don McClean</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I manually patched my source with your fix and still got an
&lt;/p&gt;&lt;p&gt;
error. I am running Oracle 9.2. The second portion of the
&lt;/p&gt;&lt;p&gt;
above example 'as t0' was still causing an error. Removing the
&lt;/p&gt;&lt;p&gt;
'as' fixed the problem.
&lt;/p&gt;&lt;p&gt;
Regards,
&lt;/p&gt;&lt;p&gt;
Don McClean
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-27T00:30:41+01:00</created-at>
      <creator-id type="integer">10926</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">394</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-07-27T00:30:41+01:00</updated-at>
      <user-id type="integer">27274</user-id>
      <version type="integer">4</version>
      <user-name>Don McClean</user-name>
      <creator-name>Antonio Cangiano</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Don, this must be an Oracle peculiarity. Using the &quot;as t0&quot; is standard SQL. It's OK to omit it though, if it helps Oracle, because omitting it respects the standard too</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Don, this must be an Oracle peculiarity. Using the &quot;as t0&quot; is standard SQL. It's OK to omit it though, if it helps Oracle, because omitting it respects the standard too
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-28T01:18:40+01:00</created-at>
      <creator-id type="integer">10926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">394</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-07-28T01:18:40+01:00</updated-at>
      <user-id type="integer">10926</user-id>
      <version type="integer">5</version>
      <user-name>Antonio Cangiano</user-name>
      <creator-name>Antonio Cangiano</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Antonio,
  Since removing the 'as' still would be standard SQL, it
would be appreciated if you could remove it. 

Thanks and Regards,
Don McClean</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Antonio,
&lt;/p&gt;&lt;p&gt;
Since removing the 'as' still would be standard SQL, it
&lt;/p&gt;&lt;p&gt;
would be appreciated if you could remove it.
&lt;/p&gt;&lt;p&gt;
Thanks and Regards,
&lt;/p&gt;&lt;p&gt;
Don McClean
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-30T15:05:13+01:00</created-at>
      <creator-id type="integer">10926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">394</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-07-30T15:05:13+01:00</updated-at>
      <user-id type="integer">27274</user-id>
      <version type="integer">6</version>
      <user-name>Don McClean</user-name>
      <creator-name>Antonio Cangiano</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Since this ticket seems to be closed, the &quot;as&quot; issue is being addressed in ticket #1405</body>
      <body-html>&lt;div&gt;&lt;p&gt;Since this ticket seems to be closed, the &quot;as&quot; issue is being
addressed in ticket &lt;a href=&quot;/projects/8994/tickets/1405&quot; title=&quot;Ticket #1405&quot;&gt;#1405&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-20T17:02:04+00:00</created-at>
      <creator-id type="integer">10926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">394</number>
      <permalink>patch-fixed-non-standard-sql-generated-by-preloading-has_and_belongs_to_many-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug has_and_belongs_to_many patch standard-sql</tag>
      <title>[PATCH] Fixed non-standard SQL generated by preloading has_and_belongs_to_many associations</title>
      <updated-at type="datetime">2008-11-20T17:02:09+00:00</updated-at>
      <user-id type="integer">18346</user-id>
      <version type="integer">7</version>
      <user-name>Brent Miller</user-name>
      <creator-name>Antonio Cangiano</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/394</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>34f001be7b554c1a0c83b019a41330850ec276c9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-11T20:42:41+01:00</created-at>
      <filename>association_preloading.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">26975</id>
      <size type="integer">1664</size>
      <uploader-id type="integer">10926</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/26975/association_preloading.diff</url>
    </attachment>
  </attachments>
</ticket>
