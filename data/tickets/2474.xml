<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-10T10:12:05+01:00</created-at>
  <creator-id type="integer">53678</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2474</number>
  <permalink>resetting-primary_key-in-has-one-association</permalink>
  <priority type="integer">1623</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>active_record associations autosave foreign_key</tag>
  <title>Resetting primary_key in has one association</title>
  <updated-at type="datetime">2009-05-21T16:37:37+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">3</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Eugene Hlyzov</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2474</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I've defined following association in one of my models
@@@ ruby
has_one :sequence, :primary_key =&gt; :accession, :foreign_key =&gt; :accession
@@@

When I save the model sequence accession becomes equal to model ID. 
I think that problems located in AutosaveAssociation#save_has_one_association in following line:
@@@ ruby
   association[reflection.primary_key_name] = id
@@@
which is triggered when 
@@@ ruby
 association[reflection.primary_key_name] != id
@@@
so it doesn't know about :foreign_key params...
I fixed it in the following way
@@@ ruby
    def save_has_one_association(reflection)
      if (association = association_instance_get(reflection.name)) &amp;&amp; !association.target.nil?
        if reflection.options[:autosave] &amp;&amp; association.marked_for_destruction?
          association.destroy
        elsif new_record? || association.new_record? || association[reflection.primary_key_name] != self[reflection.options[:foreign_key]] || reflection.options[:autosave]
          association[reflection.primary_key_name] = self[reflection.options[:foreign_key]]
          association.save(false)
        end
      end
    end
@@@</original-body>
  <latest-body>I've defined following association in one of my models
@@@ ruby
has_one :sequence, :primary_key =&gt; :accession, :foreign_key =&gt; :accession
@@@

When I save the model sequence accession becomes equal to model ID. 
I think that problems located in AutosaveAssociation#save_has_one_association in following line:
@@@ ruby
   association[reflection.primary_key_name] = id
@@@
which is triggered when 
@@@ ruby
 association[reflection.primary_key_name] != id
@@@
so it doesn't know about :foreign_key params...
I fixed it in the following way
@@@ ruby
    def save_has_one_association(reflection)
      if (association = association_instance_get(reflection.name)) &amp;&amp; !association.target.nil?
        if reflection.options[:autosave] &amp;&amp; association.marked_for_destruction?
          association.destroy
        elsif new_record? || association.new_record? || association[reflection.primary_key_name] != self[reflection.options[:foreign_key]] || reflection.options[:autosave]
          association[reflection.primary_key_name] = self[reflection.options[:foreign_key]]
          association.save(false)
        end
      end
    end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've defined following association in one of my models&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
has_one :sequence, :primary_key =&amp;gt; :accession, :foreign_key =&amp;gt; :accession
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When I save the model sequence accession becomes equal to model
ID. I think that problems located in
AutosaveAssociation#save_has_one_association in following line:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
   association[reflection.primary_key_name] = id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which is triggered when&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
 association[reflection.primary_key_name] != id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so it doesn't know about :foreign_key params... I fixed it in
the following way&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
    def save_has_one_association(reflection)
      if (association = association_instance_get(reflection.name)) &amp;amp;&amp;amp; !association.target.nil?
        if reflection.options[:autosave] &amp;amp;&amp;amp; association.marked_for_destruction?
          association.destroy
        elsif new_record? || association.new_record? || association[reflection.primary_key_name] != self[reflection.options[:foreign_key]] || reflection.options[:autosave]
          association[reflection.primary_key_name] = self[reflection.options[:foreign_key]]
          association.save(false)
        end
      end
    end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've defined following association in one of my models
@@@ ruby
has_one :sequence, :primary_key =&gt; :accession, :foreign_key =&gt; :accession
@@@

When I save the model sequence accession becomes equal to model ID. 
I think that problems located in AutosaveAssociation#save_has_one_association in following line:
@@@ ruby
   association[reflection.primary_key_name] = id
@@@
which is triggered when 
@@@ ruby
 association[reflection.primary_key_name] != id
@@@
so it doesn't know about :foreign_key params...
I fixed it in the following way
@@@ ruby
    def save_has_one_association(reflection)
      if (association = association_instance_get(reflection.name)) &amp;&amp; !association.target.nil?
        if reflection.options[:autosave] &amp;&amp; association.marked_for_destruction?
          association.destroy
        elsif new_record? || association.new_record? || association[reflection.primary_key_name] != self[reflection.options[:foreign_key]] || reflection.options[:autosave]
          association[reflection.primary_key_name] = self[reflection.options[:foreign_key]]
          association.save(false)
        end
      end
    end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've defined following association in one of my models&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
has_one :sequence, :primary_key =&amp;gt; :accession, :foreign_key =&amp;gt; :accession
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When I save the model sequence accession becomes equal to model
ID. I think that problems located in
AutosaveAssociation#save_has_one_association in following line:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
   association[reflection.primary_key_name] = id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which is triggered when&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
 association[reflection.primary_key_name] != id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so it doesn't know about :foreign_key params... I fixed it in
the following way&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
    def save_has_one_association(reflection)
      if (association = association_instance_get(reflection.name)) &amp;amp;&amp;amp; !association.target.nil?
        if reflection.options[:autosave] &amp;amp;&amp;amp; association.marked_for_destruction?
          association.destroy
        elsif new_record? || association.new_record? || association[reflection.primary_key_name] != self[reflection.options[:foreign_key]] || reflection.options[:autosave]
          association[reflection.primary_key_name] = self[reflection.options[:foreign_key]]
          association.save(false)
        end
      end
    end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-10T10:12:05+01:00</created-at>
      <creator-id type="integer">53678</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2474</number>
      <permalink>resetting-primary_key-in-has-one-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record associations autosave foreign_key</tag>
      <title>Resetting primary_key in has one association</title>
      <updated-at type="datetime">2009-04-10T10:12:08+01:00</updated-at>
      <user-id type="integer">53678</user-id>
      <version type="integer">1</version>
      <user-name>Eugene Hlyzov</user-name>
      <creator-name>Eugene Hlyzov</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2474</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>#1756</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/1756&quot; title=
&quot;Ticket #1756&quot;&gt;#1756&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-21T16:20:20+01:00</created-at>
      <creator-id type="integer">53678</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2474</number>
      <permalink>resetting-primary_key-in-has-one-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record associations autosave foreign_key</tag>
      <title>Resetting primary_key in has one association</title>
      <updated-at type="datetime">2009-05-21T16:20:23+01:00</updated-at>
      <user-id type="integer">43474</user-id>
      <version type="integer">2</version>
      <user-name>gbp</user-name>
      <creator-name>Eugene Hlyzov</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2474</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-21T16:37:32+01:00</created-at>
      <creator-id type="integer">53678</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2474</number>
      <permalink>resetting-primary_key-in-has-one-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>active_record associations autosave foreign_key</tag>
      <title>Resetting primary_key in has one association</title>
      <updated-at type="datetime">2009-05-21T16:37:37+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Eugene Hlyzov</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2474</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
