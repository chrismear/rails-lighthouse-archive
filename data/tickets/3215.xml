<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-16T09:41:26+01:00</created-at>
  <creator-id type="integer">57676</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3215</number>
  <permalink>activeresourcehttpmockrespond_to-should-not-reset-by-default</permalink>
  <priority type="integer">145278</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>cucumber http_mock reset</tag>
  <title>ActiveResource::HttpMock.respond_to should not reset! by default</title>
  <updated-at type="datetime">2010-10-06T06:43:40+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">2</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>johnf</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3215</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm using cucumber for testing and using ActiveResource for alot of the backends.

So I might have

Scenario: List a clients Services
  Given the client &quot;inodes&quot;
  And the service &quot;webhosting&quot; owned by &quot;inodes&quot;

client and service are both ActiveResource models which I need to mock. So I need to call ActiveResource::HttpMock.respond_to twice. Once in the client step and again in the service step.

This doesn't work though since the very first line of respond_to is reset! which resets all the prior entries.

Maybe we need an add_respond_to or move the reset all together and have it called during tear down

Or maybe some other way I haven't thought of</original-body>
  <latest-body>I'm using cucumber for testing and using ActiveResource for alot of the backends.

So I might have

Scenario: List a clients Services
  Given the client &quot;inodes&quot;
  And the service &quot;webhosting&quot; owned by &quot;inodes&quot;

client and service are both ActiveResource models which I need to mock. So I need to call ActiveResource::HttpMock.respond_to twice. Once in the client step and again in the service step.

This doesn't work though since the very first line of respond_to is reset! which resets all the prior entries.

Maybe we need an add_respond_to or move the reset all together and have it called during tear down

Or maybe some other way I haven't thought of</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm using cucumber for testing and using ActiveResource for alot
of the backends.&lt;/p&gt;
&lt;p&gt;So I might have&lt;/p&gt;
&lt;p&gt;Scenario: List a clients Services&lt;br&gt;
Given the client &quot;inodes&quot; And the service &quot;webhosting&quot; owned by
&quot;inodes&quot;&lt;/p&gt;
&lt;p&gt;client and service are both ActiveResource models which I need
to mock. So I need to call ActiveResource::HttpMock.respond_to
twice. Once in the client step and again in the service step.&lt;/p&gt;
&lt;p&gt;This doesn't work though since the very first line of respond_to
is reset! which resets all the prior entries.&lt;/p&gt;
&lt;p&gt;Maybe we need an add_respond_to or move the reset all together
and have it called during tear down&lt;/p&gt;
&lt;p&gt;Or maybe some other way I haven't thought of&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm using cucumber for testing and using ActiveResource for alot of the backends.

So I might have

Scenario: List a clients Services
  Given the client &quot;inodes&quot;
  And the service &quot;webhosting&quot; owned by &quot;inodes&quot;

client and service are both ActiveResource models which I need to mock. So I need to call ActiveResource::HttpMock.respond_to twice. Once in the client step and again in the service step.

This doesn't work though since the very first line of respond_to is reset! which resets all the prior entries.

Maybe we need an add_respond_to or move the reset all together and have it called during tear down

Or maybe some other way I haven't thought of</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using cucumber for testing and using ActiveResource for alot
of the backends.&lt;/p&gt;
&lt;p&gt;So I might have&lt;/p&gt;
&lt;p&gt;Scenario: List a clients Services&lt;br&gt;
Given the client &quot;inodes&quot; And the service &quot;webhosting&quot; owned by
&quot;inodes&quot;&lt;/p&gt;
&lt;p&gt;client and service are both ActiveResource models which I need
to mock. So I need to call ActiveResource::HttpMock.respond_to
twice. Once in the client step and again in the service step.&lt;/p&gt;
&lt;p&gt;This doesn't work though since the very first line of respond_to
is reset! which resets all the prior entries.&lt;/p&gt;
&lt;p&gt;Maybe we need an add_respond_to or move the reset all together
and have it called during tear down&lt;/p&gt;
&lt;p&gt;Or maybe some other way I haven't thought of&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-16T09:41:26+01:00</created-at>
      <creator-id type="integer">57676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3215</number>
      <permalink>activeresourcehttpmockrespond_to-should-not-reset-by-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>cucumber http_mock reset</tag>
      <title>ActiveResource::HttpMock.respond_to should not reset! by default</title>
      <updated-at type="datetime">2009-09-16T09:41:31+01:00</updated-at>
      <user-id type="integer">57676</user-id>
      <version type="integer">1</version>
      <user-name>johnf</user-name>
      <creator-name>johnf</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3215</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:43:38+01:00</created-at>
      <creator-id type="integer">57676</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3215</number>
      <permalink>activeresourcehttpmockrespond_to-should-not-reset-by-default</permalink>
      <priority type="integer">145278</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>cucumber http_mock reset</tag>
      <title>ActiveResource::HttpMock.respond_to should not reset! by default</title>
      <updated-at type="datetime">2010-10-06T06:43:40+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>johnf</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3215</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
