<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-17T11:36:48+01:00</created-at>
  <creator-id type="integer">71516</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">82855</milestone-id>
  <number type="integer">4887</number>
  <permalink>has_many-through-belongs_to-association-bug</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord associations patch</tag>
  <title>has_many through belongs_to association bug</title>
  <updated-at type="datetime">2010-12-20T20:14:28+00:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">12</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>Bogdan Gusiev</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
  <milestone-title>2.3.10</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>I am finding the bug in has_many through belongs_to association:

    class Post &lt; AR::Base
      belongs_to :author
      has_many :favorites, :through =&gt; :author
    end

Let's say that our app allows anonymous posts. In this case author_favorites association should return empty array for anonymous posts:

    post = Post.create!(:title =&gt; 'title', :body =&gt; 'body')
    assert_equal post.favorites.size, 0

Second line throws an exception:


    ActiveRecord::StatementInvalid: PGError: ERROR:  syntax error at or near &quot;)&quot;
    LINE 1: ...ites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
                                                                         ^
    : SELECT     COUNT(*) AS count_id FROM       &quot;author_favorites&quot; INNER JOIN &quot;authors&quot; ON &quot;author_favorites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `log'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute_without_query_record'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/test/cases/helper.rb:40:in `execute'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:174:in `execute_simple_calculation'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:161:in `perform_calculation'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:128:in `calculate'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:45:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `__send__'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:1167:in `with_scope'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `send'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/has_many_through_association.rb:32:in `size'
        ./test/cases/associations/has_many_through_associations_test.rb:368:in `test_has_many_association_through_a_belongs_to_association_if_belongs_to_is_nil'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/callbacks.rb:417:in `_run_setup_callbacks'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run'

It tries to build a join through unexisted relation.


Thanks,
Bogdan.</original-body>
  <latest-body>I am finding the bug in has_many through belongs_to association:

    class Post &lt; AR::Base
      belongs_to :author
      has_many :favorites, :through =&gt; :author
    end

Let's say that our app allows anonymous posts. In this case author_favorites association should return empty array for anonymous posts:

    post = Post.create!(:title =&gt; 'title', :body =&gt; 'body')
    assert_equal post.favorites.size, 0

Second line throws an exception:


    ActiveRecord::StatementInvalid: PGError: ERROR:  syntax error at or near &quot;)&quot;
    LINE 1: ...ites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
                                                                         ^
    : SELECT     COUNT(*) AS count_id FROM       &quot;author_favorites&quot; INNER JOIN &quot;authors&quot; ON &quot;author_favorites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `log'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute_without_query_record'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/test/cases/helper.rb:40:in `execute'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:174:in `execute_simple_calculation'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:161:in `perform_calculation'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:128:in `calculate'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:45:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `__send__'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:1167:in `with_scope'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `send'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/has_many_through_association.rb:32:in `size'
        ./test/cases/associations/has_many_through_associations_test.rb:368:in `test_has_many_association_through_a_belongs_to_association_if_belongs_to_is_nil'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/callbacks.rb:417:in `_run_setup_callbacks'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run'

It tries to build a join through unexisted relation.


Thanks,
Bogdan.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I am finding the bug in has_many through belongs_to
association:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post &amp;lt; AR::Base
  belongs_to :author
  has_many :favorites, :through =&amp;gt; :author
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's say that our app allows anonymous posts. In this case
author_favorites association should return empty array for
anonymous posts:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;post = Post.create!(:title =&amp;gt; 'title', :body =&amp;gt; 'body')
assert_equal post.favorites.size, 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Second line throws an exception:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR:  syntax error at or near &quot;)&quot;
LINE 1: ...ites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
                                                                     ^
: SELECT     COUNT(*) AS count_id FROM       &quot;author_favorites&quot; INNER JOIN &quot;authors&quot; ON &quot;author_favorites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `log'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute_without_query_record'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/test/cases/helper.rb:40:in `execute'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:174:in `execute_simple_calculation'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:161:in `perform_calculation'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:128:in `calculate'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:45:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `__send__'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:1167:in `with_scope'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `send'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/has_many_through_association.rb:32:in `size'
    ./test/cases/associations/has_many_through_associations_test.rb:368:in `test_has_many_association_through_a_belongs_to_association_if_belongs_to_is_nil'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/callbacks.rb:417:in `_run_setup_callbacks'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It tries to build a join through unexisted relation.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Bogdan.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am finding the bug in has_many through belongs_to association:

    class Post &lt; AR::Base
      belongs_to :author
      has_many :favorites, :through =&gt; :author
    end

Let's say that our app allows anonymous posts. In this case author_favorites association should return empty array for anonymous posts:

    post = Post.create!(:title =&gt; 'title', :body =&gt; 'body')
    assert_equal post.favorites.size, 0

Second line throws an exception:


    ActiveRecord::StatementInvalid: PGError: ERROR:  syntax error at or near &quot;)&quot;
    LINE 1: ...ites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
                                                                         ^
    : SELECT     COUNT(*) AS count_id FROM       &quot;author_favorites&quot; INNER JOIN &quot;authors&quot; ON &quot;author_favorites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `log'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute_without_query_record'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/test/cases/helper.rb:40:in `execute'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:174:in `execute_simple_calculation'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:161:in `perform_calculation'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:128:in `calculate'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:45:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `__send__'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:1167:in `with_scope'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `send'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
        /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/has_many_through_association.rb:32:in `size'
        ./test/cases/associations/has_many_through_associations_test.rb:368:in `test_has_many_association_through_a_belongs_to_association_if_belongs_to_is_nil'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/callbacks.rb:417:in `_run_setup_callbacks'
        /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run'

It tries to build a join through unexisted relation.


Thanks,
Bogdan.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am finding the bug in has_many through belongs_to
association:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post &amp;lt; AR::Base
  belongs_to :author
  has_many :favorites, :through =&amp;gt; :author
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's say that our app allows anonymous posts. In this case
author_favorites association should return empty array for
anonymous posts:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;post = Post.create!(:title =&amp;gt; 'title', :body =&amp;gt; 'body')
assert_equal post.favorites.size, 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Second line throws an exception:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR:  syntax error at or near &quot;)&quot;
LINE 1: ...ites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
                                                                     ^
: SELECT     COUNT(*) AS count_id FROM       &quot;author_favorites&quot; INNER JOIN &quot;authors&quot; ON &quot;author_favorites&quot;.author_id = &quot;authors&quot;.id WHERE     ((&quot;authors&quot;.id = ))
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:210:in `log'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:464:in `execute_without_query_record'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/test/cases/helper.rb:40:in `execute'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:954:in `select_raw'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:941:in `select'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in `select_one'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in `select_value'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:174:in `execute_simple_calculation'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:161:in `perform_calculation'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:128:in `calculate'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/relation/calculations.rb:45:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `__send__'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:406:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/base.rb:1167:in `with_scope'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `send'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/association_collection.rb:195:in `count'
    /home/bogdan/makabu/opensource/ruby/rails/activerecord/lib/active_record/associations/has_many_through_association.rb:32:in `size'
    ./test/cases/associations/has_many_through_associations_test.rb:368:in `test_has_many_association_through_a_belongs_to_association_if_belongs_to_is_nil'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/callbacks.rb:417:in `_run_setup_callbacks'
    /home/bogdan/makabu/opensource/ruby/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It tries to build a join through unexisted relation.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Bogdan.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-17T11:36:48+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord associations&quot;</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-06-17T11:36:51+01:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">1</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is my patch. Hopefully won't cause any side effects.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is my patch. Hopefully won't cause any side effects.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-17T11:42:01+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord &quot;activerecord associations&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-06-17T11:42:03+01:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">2</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-17T15:42:38+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-06-17T15:42:46+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">3</version>
      <user-name>DHH</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Someone else has reported this on #4977. Definitely need to fix this before final release. Should return an empty array if the belongs_to association is nil.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Someone else has reported this on &lt;a href=
&quot;/projects/8994/tickets/4977&quot; title=&quot;Ticket #4977&quot;&gt;#4977&lt;/a&gt;.
Definitely need to fix this before final release. Should return an
empty array if the belongs_to association is nil.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-26T13:47:55+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 1366
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-06-26T13:48:03+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey Andrew,

Thanks for taking care about this.

I have fixed the bug by redefining costruct_scope method and return &quot;empty&quot; scope in case of nil association.
{:find =&gt; {:conditions =&gt; &quot;1!=1&quot;}}
seems the only one way of creating an always empty scope that works on MySQL, sqlite and postgres.

Here is my updated patch where tests are in the right place.

Thanks,
Bogdan.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Andrew,&lt;/p&gt;
&lt;p&gt;Thanks for taking care about this.&lt;/p&gt;
&lt;p&gt;I have fixed the bug by redefining costruct_scope method and
return &quot;empty&quot; scope in case of nil association.&lt;br&gt;
{:find =&amp;gt; {:conditions =&amp;gt; &quot;1!=1&quot;}} seems the only one way of
creating an always empty scope that works on MySQL, sqlite and
postgres.&lt;/p&gt;
&lt;p&gt;Here is my updated patch where tests are in the right place.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Bogdan.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-26T19:29:48+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-06-26T19:30:07+01:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">5</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I can't reproduce this - can you post a sample application where this fails? I added the test case from your first patch and it passed. Funny thing is there seems to be a test already there for it anyway: 

http://github.com/rails/rails/commit/95e1cf4812d4b964d7ab0fdf4bfa31177d27909c</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can't reproduce this - can you post a sample application where
this fails? I added the test case from your first patch and it
passed. Funny thing is there seems to be a test already there for
it anyway:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/95e1cf4812d4b964d7ab0fdf4bfa31177d27909c&quot;&gt;
http://github.com/rails/rails/commit/95e1cf4812d4b964d7ab0fdf4bfa31...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-23T13:21:24+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
:priority: 1
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-08-23T13:21:27+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">6</version>
      <user-name>Andrew White</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/27625)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/27625&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-30T04:10:33+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-08-30T04:10:33+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Hi Andrew,

That bug is truly fixed. 
Seems there was more general change that fixed this bug in recent patches.

I can&#180;t reproduce it in Rails 3.0 but it is in 2.3.5.
So, you may close it at least for v3.0.

Thanks,
Bogdan.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Andrew,&lt;/p&gt;
&lt;p&gt;That bug is truly fixed.&lt;br&gt;
Seems there was more general change that fixed this bug in recent
patches.&lt;/p&gt;
&lt;p&gt;I can&amp;acute;t reproduce it in Rails 3.0 but it is in 2.3.5.&lt;br&gt;
So, you may close it at least for v3.0.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Bogdan.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T19:14:00+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-08-31T19:14:03+01:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">8</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T22:21:20+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
:milestone: 82861
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord &quot;activerecord associations&quot; patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-08-31T22:21:22+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">9</version>
      <user-name>Andrew White</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T05:21:21+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord &quot;activerecord associations&quot; patch
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-10-07T05:21:21+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">10</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Reporter has indicated that this is no longer an issue in Rails 3, which is the current stable, so can this be closed please?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Reporter has indicated that this is no longer an issue in Rails
3, which is the current stable, so can this be closed please?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-12T11:26:04+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 7697
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-12-12T11:26:35+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">11</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-20T20:13:59+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">82855</milestone-id>
      <number type="integer">4887</number>
      <permalink>has_many-through-belongs_to-association-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord associations patch</tag>
      <title>has_many through belongs_to association bug</title>
      <updated-at type="datetime">2010-12-20T20:14:28+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">12</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4887</url>
      <milestone-title>2.3.10</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>27a8753fe805be44073d932befe4ee30226e4e3a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-17T11:42:01+01:00</created-at>
      <filename>has_many_through_belongs_to_bugfix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">563125</id>
      <size type="integer">2155</size>
      <uploader-id type="integer">71516</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/563125/has_many_through_belongs_to_bugfix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>798bad12ba8a103bbe8cc487987ca4adc89a1131</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-26T19:29:48+01:00</created-at>
      <filename>has_many_through_belongs_to_bugfix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">577625</id>
      <size type="integer">2335</size>
      <uploader-id type="integer">71516</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/577625/has_many_through_belongs_to_bugfix.diff</url>
    </attachment>
  </attachments>
</ticket>
