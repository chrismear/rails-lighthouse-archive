diff -r 9a2d234c6fb8 htdocs/vendor/rails/activerecord/lib/active_record/nested_attributes.rb
--- a/htdocs/vendor/rails/activerecord/lib/active_record/nested_attributes.rb	Fri Jun 11 14:09:14 2010 -0400
+++ b/htdocs/vendor/rails/activerecord/lib/active_record/nested_attributes.rb	Fri Jun 11 16:07:29 2010 -0400
@@ -286,7 +286,8 @@
         assign_to_or_mark_for_destruction(record, attributes, options[:allow_destroy])
 
       elsif attributes['id']
-        raise_nested_attributes_record_not_found(association_name, attributes['id'])
+        new_record = self.class.reflections[association_name].klass.new
+        assign_to_or_mark_for_destruction(new_record, attributes, options[:allow_destroy])
 
       elsif !reject_new_record?(association_name, attributes)
         method = "build_#{association_name}"
@@ -356,6 +357,12 @@
           unless reject_new_record?(association_name, attributes)
             association.build(attributes.except(*UNASSIGNABLE_KEYS))
           end
+
+        elsif existing_records.count == 0 #Existing record but not yet associated
+          new_record = self.class.reflections[association_name].klass.new
+          association.send(:add_record_to_target_with_callbacks, new_record) unless association.loaded?
+          assign_to_or_mark_for_destruction(new_record, attributes, options[:allow_destroy])
+
         elsif existing_record = existing_records.detect { |record| record.id.to_s == attributes['id'].to_s }
           association.send(:add_record_to_target_with_callbacks, existing_record) unless association.loaded?
           assign_to_or_mark_for_destruction(existing_record, attributes, options[:allow_destroy])
