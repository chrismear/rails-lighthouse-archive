<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-17T14:36:57+01:00</created-at>
  <creator-id type="integer">7315</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5139</number>
  <permalink>remove-new_record-requirement-from-activerecordbase</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Remove !new_record? requirement from ActiveRecord::Base#==</title>
  <updated-at type="datetime">2011-02-02T17:12:03+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>David Chelimsky</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5139</url>
  <priority-name nil="true"></priority-name>
  <original-body>@@@
class Thing &lt; ActiveRecord::Base; end

assert_equal Thing.new, Thing.new

# fails with 
#   &lt;#&lt;Thing id: nil, created_at: nil, updated_at: nil&gt;&gt; expected but was
#   &lt;#&lt;Thing id: nil, created_at: nil, updated_at: nil&gt;&gt;.
@@@

This fails because AR::Base includes `!comparison_object.new_record?` in its definition of `==(comparison_object)`: http://github.com/rails/rails/blob/c6e20586372743ce200449bf0ac21aed04c6b81e/activerecord/lib/active_record/base.rb#L1539

This often leads to confusion when trying to test things that involve new records. I brought this up with Jeremy a year or two ago and if memory serves he agreed that removing that requirement would make testing easier but that there were reasons not to do so.

One was the notion of entity, and the idea that an identity-less object is not an entity (although, ironically, if you remove the &quot;id&quot; from &quot;identity&quot;,  you're left with &quot;entity&quot; :) )

The more pragmatic argument was that if new records were considered equivalent (assuming the other attributes were equal), it would be hard to know how this would impact code in the wild.

I'm bringing this up now in the hopes that we can have a brief discussion of this again before Rails 3 is released. This is the perfect opportunity to take the risk, as all eyes are on upgrade process and documentation.

Thoughts?</original-body>
  <latest-body>@@@
class Thing &lt; ActiveRecord::Base; end

assert_equal Thing.new, Thing.new

# fails with 
#   &lt;#&lt;Thing id: nil, created_at: nil, updated_at: nil&gt;&gt; expected but was
#   &lt;#&lt;Thing id: nil, created_at: nil, updated_at: nil&gt;&gt;.
@@@

This fails because AR::Base includes `!comparison_object.new_record?` in its definition of `==(comparison_object)`: http://github.com/rails/rails/blob/c6e20586372743ce200449bf0ac21aed04c6b81e/activerecord/lib/active_record/base.rb#L1539

This often leads to confusion when trying to test things that involve new records. I brought this up with Jeremy a year or two ago and if memory serves he agreed that removing that requirement would make testing easier but that there were reasons not to do so.

One was the notion of entity, and the idea that an identity-less object is not an entity (although, ironically, if you remove the &quot;id&quot; from &quot;identity&quot;,  you're left with &quot;entity&quot; :) )

The more pragmatic argument was that if new records were considered equivalent (assuming the other attributes were equal), it would be hard to know how this would impact code in the wild.

I'm bringing this up now in the hopes that we can have a brief discussion of this again before Rails 3 is released. This is the perfect opportunity to take the risk, as all eyes are on upgrade process and documentation.

Thoughts?</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;class Thing &amp;lt; ActiveRecord::Base; end

assert_equal Thing.new, Thing.new

# fails with 
#   &amp;lt;#&amp;lt;Thing id: nil, created_at: nil, updated_at: nil&amp;gt;&amp;gt; expected but was
#   &amp;lt;#&amp;lt;Thing id: nil, created_at: nil, updated_at: nil&amp;gt;&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This fails because AR::Base includes
&lt;code&gt;!comparison_object.new_record?&lt;/code&gt; in its definition of
&lt;code&gt;==(comparison_object)&lt;/code&gt;: &lt;a href=
&quot;http://github.com/rails/rails/blob/c6e20586372743ce200449bf0ac21aed04c6b81e/activerecord/lib/active_record/base.rb#L1539&quot;&gt;
http://github.com/rails/rails/blob/c6e20586372743ce200449bf0ac21aed...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This often leads to confusion when trying to test things that
involve new records. I brought this up with Jeremy a year or two
ago and if memory serves he agreed that removing that requirement
would make testing easier but that there were reasons not to do
so.&lt;/p&gt;
&lt;p&gt;One was the notion of entity, and the idea that an identity-less
object is not an entity (although, ironically, if you remove the
&quot;id&quot; from &quot;identity&quot;, you're left with &quot;entity&quot; :) )&lt;/p&gt;
&lt;p&gt;The more pragmatic argument was that if new records were
considered equivalent (assuming the other attributes were equal),
it would be hard to know how this would impact code in the
wild.&lt;/p&gt;
&lt;p&gt;I'm bringing this up now in the hopes that we can have a brief
discussion of this again before Rails 3 is released. This is the
perfect opportunity to take the risk, as all eyes are on upgrade
process and documentation.&lt;/p&gt;
&lt;p&gt;Thoughts?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
class Thing &lt; ActiveRecord::Base; end

assert_equal Thing.new, Thing.new

# fails with 
#   &lt;#&lt;Thing id: nil, created_at: nil, updated_at: nil&gt;&gt; expected but was
#   &lt;#&lt;Thing id: nil, created_at: nil, updated_at: nil&gt;&gt;.
@@@

This fails because AR::Base includes `!comparison_object.new_record?` in its definition of `==(comparison_object)`: http://github.com/rails/rails/blob/c6e20586372743ce200449bf0ac21aed04c6b81e/activerecord/lib/active_record/base.rb#L1539

This often leads to confusion when trying to test things that involve new records. I brought this up with Jeremy a year or two ago and if memory serves he agreed that removing that requirement would make testing easier but that there were reasons not to do so.

One was the notion of entity, and the idea that an identity-less object is not an entity (although, ironically, if you remove the &quot;id&quot; from &quot;identity&quot;,  you're left with &quot;entity&quot; :) )

The more pragmatic argument was that if new records were considered equivalent (assuming the other attributes were equal), it would be hard to know how this would impact code in the wild.

I'm bringing this up now in the hopes that we can have a brief discussion of this again before Rails 3 is released. This is the perfect opportunity to take the risk, as all eyes are on upgrade process and documentation.

Thoughts?</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;class Thing &amp;lt; ActiveRecord::Base; end

assert_equal Thing.new, Thing.new

# fails with 
#   &amp;lt;#&amp;lt;Thing id: nil, created_at: nil, updated_at: nil&amp;gt;&amp;gt; expected but was
#   &amp;lt;#&amp;lt;Thing id: nil, created_at: nil, updated_at: nil&amp;gt;&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This fails because AR::Base includes
&lt;code&gt;!comparison_object.new_record?&lt;/code&gt; in its definition of
&lt;code&gt;==(comparison_object)&lt;/code&gt;: &lt;a href=
&quot;http://github.com/rails/rails/blob/c6e20586372743ce200449bf0ac21aed04c6b81e/activerecord/lib/active_record/base.rb#L1539&quot;&gt;
http://github.com/rails/rails/blob/c6e20586372743ce200449bf0ac21aed...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This often leads to confusion when trying to test things that
involve new records. I brought this up with Jeremy a year or two
ago and if memory serves he agreed that removing that requirement
would make testing easier but that there were reasons not to do
so.&lt;/p&gt;
&lt;p&gt;One was the notion of entity, and the idea that an identity-less
object is not an entity (although, ironically, if you remove the
&quot;id&quot; from &quot;identity&quot;, you're left with &quot;entity&quot; :) )&lt;/p&gt;
&lt;p&gt;The more pragmatic argument was that if new records were
considered equivalent (assuming the other attributes were equal),
it would be hard to know how this would impact code in the
wild.&lt;/p&gt;
&lt;p&gt;I'm bringing this up now in the hopes that we can have a brief
discussion of this again before Rails 3 is released. This is the
perfect opportunity to take the risk, as all eyes are on upgrade
process and documentation.&lt;/p&gt;
&lt;p&gt;Thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T14:36:57+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5139</number>
      <permalink>remove-new_record-requirement-from-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Remove !new_record? requirement from ActiveRecord::Base#==</title>
      <updated-at type="datetime">2010-07-17T14:37:00+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">1</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5139</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T14:37:11+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5139</number>
      <permalink>remove-new_record-requirement-from-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Remove !new_record? requirement from ActiveRecord::Base#==</title>
      <updated-at type="datetime">2010-07-17T14:37:16+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">2</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5139</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T14:37:21+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 85
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5139</number>
      <permalink>remove-new_record-requirement-from-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Remove !new_record? requirement from ActiveRecord::Base#==</title>
      <updated-at type="datetime">2010-07-17T14:37:26+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">3</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5139</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T14:37:28+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 12714
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5139</number>
      <permalink>remove-new_record-requirement-from-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Remove !new_record? requirement from ActiveRecord::Base#==</title>
      <updated-at type="datetime">2010-07-17T14:37:31+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">4</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5139</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:35:50+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5139</number>
      <permalink>remove-new_record-requirement-from-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Remove !new_record? requirement from ActiveRecord::Base#==</title>
      <updated-at type="datetime">2011-02-02T17:11:50+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5139</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:35:51+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5139</number>
      <permalink>remove-new_record-requirement-from-activerecordbase</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Remove !new_record? requirement from ActiveRecord::Base#==</title>
      <updated-at type="datetime">2011-02-02T17:12:03+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>David Chelimsky</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5139</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
