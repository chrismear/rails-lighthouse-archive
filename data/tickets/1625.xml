<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-24T01:40:01+00:00</created-at>
  <creator-id type="integer">4542</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1625</number>
  <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
  <priority type="integer">964</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord errors patch xml</tag>
  <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
  <updated-at type="datetime">2011-02-02T19:11:23+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">16</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Scott Becker</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I needed to return validation errors to an external program via web service so that it could allow a user to fix them. 

The standard errors.to_xml method only returns errors as full with underscores converted to spaces, so there is no way for a program to distinguish the attribute name from the error message.

This simple patch adds an :extended option to the to_xml method on the Errors class, which will break out errors into separate &quot;attribute&quot; and &quot;message&quot; tags for easier parsing by external programs. By default this is set to false so existing code continues to work.

Example usage:

{{{
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml(:extended =&gt; true)
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;is too short (minimum is 5 characters)&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;address&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#     &lt;/errors&gt;
}}}

And the existing, standard output, which still works:

{{{
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;Name is too short (minimum is 5 characters)&lt;/error&gt;
#       &lt;error&gt;Name can't be blank&lt;/error&gt;
#       &lt;error&gt;Address can't be blank&lt;/error&gt;
#     &lt;/errors&gt;
}}}</original-body>
  <latest-body>I needed to return validation errors to an external program via web service so that it could allow a user to fix them. 

The standard errors.to_xml method only returns errors as full with underscores converted to spaces, so there is no way for a program to distinguish the attribute name from the error message.

This simple patch adds an :extended option to the to_xml method on the Errors class, which will break out errors into separate &quot;attribute&quot; and &quot;message&quot; tags for easier parsing by external programs. By default this is set to false so existing code continues to work.

Example usage:

{{{
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml(:extended =&gt; true)
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;is too short (minimum is 5 characters)&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;address&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#     &lt;/errors&gt;
}}}

And the existing, standard output, which still works:

{{{
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;Name is too short (minimum is 5 characters)&lt;/error&gt;
#       &lt;error&gt;Name can't be blank&lt;/error&gt;
#       &lt;error&gt;Address can't be blank&lt;/error&gt;
#     &lt;/errors&gt;
}}}</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I needed to return validation errors to an external program via
web service so that it could allow a user to fix them.&lt;/p&gt;
&lt;p&gt;The standard errors.to_xml method only returns errors as full
with underscores converted to spaces, so there is no way for a
program to distinguish the attribute name from the error
message.&lt;/p&gt;
&lt;p&gt;This simple patch adds an :extended option to the to_xml method
on the Errors class, which will break out errors into separate
&quot;attribute&quot; and &quot;message&quot; tags for easier parsing by external
programs. By default this is set to false so existing code
continues to work.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;p&gt;{{{ company = Company.create(:address =&amp;gt; '123 First St.')
company.errors.to_xml(:extended =&amp;gt; true)&lt;/p&gt;
&lt;h1&gt;=&amp;gt; &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/h1&gt;
&lt;p&gt;#&lt;br&gt;
#&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;name&lt;/h1&gt;
&lt;h1&gt;is too short (minimum is 5 characters)&lt;/h1&gt;
&lt;p&gt;#&lt;br&gt;
#&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;name&lt;/h1&gt;
&lt;h1&gt;can't be blank&lt;/h1&gt;
&lt;p&gt;#&lt;br&gt;
#&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;address&lt;/h1&gt;
&lt;h1&gt;can't be blank&lt;/h1&gt;
&lt;p&gt;#&lt;br&gt;
#&lt;br&gt;
}}}&lt;/p&gt;
&lt;p&gt;And the existing, standard output, which still works:&lt;/p&gt;
&lt;p&gt;{{{ company = Company.create(:address =&amp;gt; '123 First St.')
company.errors.to_xml&lt;/p&gt;
&lt;h1&gt;=&amp;gt; &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/h1&gt;
&lt;p&gt;#&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;Name is too short (minimum is 5 characters)&lt;/h1&gt;
&lt;h1&gt;Name can't be blank&lt;/h1&gt;
&lt;h1&gt;Address can't be blank&lt;/h1&gt;
&lt;p&gt;#&lt;br&gt;
}}}&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I needed to return validation errors to an external program via web service so that it could allow a user to fix them. 

The standard errors.to_xml method only returns errors as full with underscores converted to spaces, so there is no way for a program to distinguish the attribute name from the error message.

This simple patch adds an :extended option to the to_xml method on the Errors class, which will break out errors into separate &quot;attribute&quot; and &quot;message&quot; tags for easier parsing by external programs. By default this is set to false so existing code continues to work.

Example usage:

{{{
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml(:extended =&gt; true)
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;is too short (minimum is 5 characters)&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;address&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#     &lt;/errors&gt;
}}}

And the existing, standard output, which still works:

{{{
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;Name is too short (minimum is 5 characters)&lt;/error&gt;
#       &lt;error&gt;Name can't be blank&lt;/error&gt;
#       &lt;error&gt;Address can't be blank&lt;/error&gt;
#     &lt;/errors&gt;
}}}</body>
      <body-html>&lt;div&gt;&lt;p&gt;I needed to return validation errors to an external program via
web service so that it could allow a user to fix them.&lt;/p&gt;
&lt;p&gt;The standard errors.to_xml method only returns errors as full
with underscores converted to spaces, so there is no way for a
program to distinguish the attribute name from the error
message.&lt;/p&gt;
&lt;p&gt;This simple patch adds an :extended option to the to_xml method
on the Errors class, which will break out errors into separate
&quot;attribute&quot; and &quot;message&quot; tags for easier parsing by external
programs. By default this is set to false so existing code
continues to work.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;p&gt;{{{ company = Company.create(:address =&amp;gt; '123 First St.')
company.errors.to_xml(:extended =&amp;gt; true)&lt;/p&gt;
&lt;h1&gt;=&amp;gt; &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/h1&gt;
&lt;h1&gt;name&lt;/h1&gt;
&lt;h1&gt;is too short (minimum is 5 characters)&lt;/h1&gt;
&lt;h1&gt;name&lt;/h1&gt;
&lt;h1&gt;can't be blank&lt;/h1&gt;
&lt;h1&gt;address&lt;/h1&gt;
&lt;h1&gt;can't be blank&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;And the existing, standard output, which still works:&lt;/p&gt;
&lt;p&gt;{{{ company = Company.create(:address =&amp;gt; '123 First St.')
company.errors.to_xml&lt;/p&gt;
&lt;h1&gt;=&amp;gt; &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/h1&gt;
&lt;h1&gt;Name is too short (minimum is 5 characters)&lt;/h1&gt;
&lt;h1&gt;Name can't be blank&lt;/h1&gt;
&lt;h1&gt;Address can't be blank&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-24T01:40:01+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2008-12-24T01:40:03+00:00</updated-at>
      <user-id type="integer">4542</user-id>
      <version type="integer">1</version>
      <user-name>Scott Becker</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Those examples didn't format right. Let me try that again.

Example usage:

@@@ ruby
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml(:extended =&gt; true)
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;is too short (minimum is 5 characters)&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;name&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#       &lt;error&gt;
#         &lt;attribute&gt;address&lt;/attribute&gt;
#         &lt;message&gt;can't be blank&lt;/message&gt;
#       &lt;/error&gt;
#     &lt;/errors&gt;
@@@

And the existing, standard output, which still works:

@@@ ruby
company = Company.create(:address =&gt; '123 First St.')
company.errors.to_xml
# =&gt;  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
#     &lt;errors&gt;
#       &lt;error&gt;Name is too short (minimum is 5 characters)&lt;/error&gt;
#       &lt;error&gt;Name can't be blank&lt;/error&gt;
#       &lt;error&gt;Address can't be blank&lt;/error&gt;
#     &lt;/errors&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Those examples didn't format right. Let me try that again.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
company = Company.create(:address =&amp;gt; '123 First St.')
company.errors.to_xml(:extended =&amp;gt; true)
# =&amp;gt;  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
#     &amp;lt;errors&amp;gt;
#       &amp;lt;error&amp;gt;
#         &amp;lt;attribute&amp;gt;name&amp;lt;/attribute&amp;gt;
#         &amp;lt;message&amp;gt;is too short (minimum is 5 characters)&amp;lt;/message&amp;gt;
#       &amp;lt;/error&amp;gt;
#       &amp;lt;error&amp;gt;
#         &amp;lt;attribute&amp;gt;name&amp;lt;/attribute&amp;gt;
#         &amp;lt;message&amp;gt;can't be blank&amp;lt;/message&amp;gt;
#       &amp;lt;/error&amp;gt;
#       &amp;lt;error&amp;gt;
#         &amp;lt;attribute&amp;gt;address&amp;lt;/attribute&amp;gt;
#         &amp;lt;message&amp;gt;can't be blank&amp;lt;/message&amp;gt;
#       &amp;lt;/error&amp;gt;
#     &amp;lt;/errors&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the existing, standard output, which still works:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
company = Company.create(:address =&amp;gt; '123 First St.')
company.errors.to_xml
# =&amp;gt;  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
#     &amp;lt;errors&amp;gt;
#       &amp;lt;error&amp;gt;Name is too short (minimum is 5 characters)&amp;lt;/error&amp;gt;
#       &amp;lt;error&amp;gt;Name can't be blank&amp;lt;/error&amp;gt;
#       &amp;lt;error&amp;gt;Address can't be blank&amp;lt;/error&amp;gt;
#     &amp;lt;/errors&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-24T01:45:50+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2008-12-24T01:45:51+00:00</updated-at>
      <user-id type="integer">4542</user-id>
      <version type="integer">2</version>
      <user-name>Scott Becker</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>In my opinion, &quot;extended&quot; isn't a particularly descriptive option name for this behavior.  Something like &quot;include_error_components&quot; or &quot;skip_message_agglomeration&quot; would be more appropriate. I'm sure someone can come up with something less verbose but equally description.

Also, what is the expected behavior for errors added to base?</body>
      <body-html>&lt;div&gt;&lt;p&gt;In my opinion, &quot;extended&quot; isn't a particularly descriptive
option name for this behavior. Something like
&quot;include_error_components&quot; or &quot;skip_message_agglomeration&quot; would be
more appropriate. I'm sure someone can come up with something less
verbose but equally description.&lt;/p&gt;
&lt;p&gt;Also, what is the expected behavior for errors added to
base?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-24T15:10:21+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2008-12-24T15:10:25+00:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">3</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Errors added to base would work the same way:

@@@ ruby
&gt;&gt; d = Dataset.new
=&gt; #&lt;Dataset id: nil, ...&gt;
&gt;&gt; d.errors.add_to_base(&quot;is invalid&quot;)
=&gt; [&quot;is invalid&quot;]
&gt;&gt; puts d.errors.to_xml(:extended =&gt; true)
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;errors&gt;
  &lt;error&gt;
    &lt;attribute&gt;base&lt;/attribute&gt;
    &lt;message&gt;is invalid&lt;/message&gt;
  &lt;/error&gt;
&lt;/errors&gt;
@@@

I think that is appropriate, it's how it works with to_json as well. 

@@@ ruby
d.errors.to_json
@@@

@@@ javascript
[[&quot;base&quot;, &quot;is invalid&quot;]]
@@@

In my opinion, it should be broken out by default with XML as well, since its intended to be parsed by other programs. But since it worked the other way be default before, I felt it should continue to work that way so as not to break other programs depending on that behavior.

I don't care what the option is called, but &quot;extended&quot; was the least verbose, yet still descriptive thing I came up with.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Errors added to base would work the same way:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
&amp;gt;&amp;gt; d = Dataset.new
=&amp;gt; #&amp;lt;Dataset id: nil, ...&amp;gt;
&amp;gt;&amp;gt; d.errors.add_to_base(&amp;quot;is invalid&amp;quot;)
=&amp;gt; [&amp;quot;is invalid&amp;quot;]
&amp;gt;&amp;gt; puts d.errors.to_xml(:extended =&amp;gt; true)
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;errors&amp;gt;
  &amp;lt;error&amp;gt;
    &amp;lt;attribute&amp;gt;base&amp;lt;/attribute&amp;gt;
    &amp;lt;message&amp;gt;is invalid&amp;lt;/message&amp;gt;
  &amp;lt;/error&amp;gt;
&amp;lt;/errors&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think that is appropriate, it's how it works with to_json as
well.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
d.errors.to_json
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
[[&amp;quot;base&amp;quot;, &amp;quot;is invalid&amp;quot;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In my opinion, it should be broken out by default with XML as
well, since its intended to be parsed by other programs. But since
it worked the other way be default before, I felt it should
continue to work that way so as not to break other programs
depending on that behavior.&lt;/p&gt;
&lt;p&gt;I don't care what the option is called, but &quot;extended&quot; was the
least verbose, yet still descriptive thing I came up with.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-24T20:15:00+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2008-12-24T20:15:05+00:00</updated-at>
      <user-id type="integer">4542</user-id>
      <version type="integer">4</version>
      <user-name>Scott Becker</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I should have been more clear.  When I wrote &quot;what is the expected behavior for&quot; I meant &quot;there is no test for.&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I should have been more clear. When I wrote &quot;what is the
expected behavior for&quot; I meant &quot;there is no test for.&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-25T15:45:44+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2008-12-25T15:45:45+00:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">5</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I like this idea.  However, I might suggest that the &lt;message&gt; content be the same as it was before in the &lt;error&gt; field.  For example, instead of:

@@@ xml
  &lt;attribute&gt;name&lt;/attribute&gt;
  &lt;message&gt;is too short (minimum is 5 characters)&lt;/message&gt;
@@@

I think it should be:

@@@ xml
  &lt;attribute&gt;name&lt;/attribute&gt;
  &lt;message&gt;Name is too short (minimum is 5 characters)&lt;/message&gt;
@@@

What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I like this idea. However, I might suggest that the content be
the same as it was before in the field. For example, instead
of:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;
  &amp;lt;attribute&amp;gt;name&amp;lt;/attribute&amp;gt;
  &amp;lt;message&amp;gt;is too short (minimum is 5 characters)&amp;lt;/message&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think it should be:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;
  &amp;lt;attribute&amp;gt;name&amp;lt;/attribute&amp;gt;
  &amp;lt;message&amp;gt;Name is too short (minimum is 5 characters)&amp;lt;/message&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-05T20:16:08+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2009-01-05T20:16:12+00:00</updated-at>
      <user-id type="integer">17710</user-id>
      <version type="integer">6</version>
      <user-name>Jeff Cohen</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Adam Milligan - 

I will add another patch including tests verifying the expected behavior for serializing errors added to base later today.

Jeff Cohen -

That would make it function differently than JSON serialization, which is more flexible, in my opinion. Let me explain:

@@@ ruby
company = Company.new
company.errors.add(&quot;name&quot;, &quot;is invalid&quot;)
company.errors.to_json

# =&gt; [[&quot;name&quot;, &quot;is invalid&quot;]]
@@@

As you can see, with &quot;to_json&quot;, the attribute and message are broken out separately and not repeated.

I think that the XML errors serialization should have the ability to work the same way. If I want to include the name in the message, I can add that back in later. If its already included in the message, there is no way to easy way to remove it if it has been humanized - with underscores converted to spaces. This can become an issue if you want the message by itself, or if your form field label differs from the database field name.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adam Milligan -&lt;/p&gt;
&lt;p&gt;I will add another patch including tests verifying the expected
behavior for serializing errors added to base later today.&lt;/p&gt;
&lt;p&gt;Jeff Cohen -&lt;/p&gt;
&lt;p&gt;That would make it function differently than JSON serialization,
which is more flexible, in my opinion. Let me explain:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
company = Company.new
company.errors.add(&amp;quot;name&amp;quot;, &amp;quot;is invalid&amp;quot;)
company.errors.to_json

# =&amp;gt; [[&amp;quot;name&amp;quot;, &amp;quot;is invalid&amp;quot;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, with &quot;to_json&quot;, the attribute and message are
broken out separately and not repeated.&lt;/p&gt;
&lt;p&gt;I think that the XML errors serialization should have the
ability to work the same way. If I want to include the name in the
message, I can add that back in later. If its already included in
the message, there is no way to easy way to remove it if it has
been humanized - with underscores converted to spaces. This can
become an issue if you want the message by itself, or if your form
field label differs from the database field name.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-05T22:22:59+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2009-01-05T22:23:04+00:00</updated-at>
      <user-id type="integer">4542</user-id>
      <version type="integer">7</version>
      <user-name>Scott Becker</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here is a new patch adding additional tests verifying the expected behavior for serializing errors added to base, as per Adam Milligan's suggestion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is a new patch adding additional tests verifying the
expected behavior for serializing errors added to base, as per Adam
Milligan's suggestion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-06T02:10:11+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2009-01-06T02:10:15+00:00</updated-at>
      <user-id type="integer">4542</user-id>
      <version type="integer">8</version>
      <user-name>Scott Becker</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Oops, my name and email weren't set correctly in the second commit of that last patch. Here's an updated one with correct contact info.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, my name and email weren't set correctly in the second
commit of that last patch. Here's an updated one with correct
contact info.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-06T02:23:28+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2009-01-06T02:23:32+00:00</updated-at>
      <user-id type="integer">4542</user-id>
      <version type="integer">9</version>
      <user-name>Scott Becker</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-07T10:57:28+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2009-03-07T10:57:30+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">10</version>
      <user-name>Pratik</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Whatever happened to this ticket/issue?  I don't see an update and the behavior in ActiveRecord still looks to be the same.  It really should be specifying which fields the errors occurred on when you call errors.to_xml</body>
      <body-html>&lt;div&gt;&lt;p&gt;Whatever happened to this ticket/issue? I don't see an update
and the behavior in ActiveRecord still looks to be the same. It
really should be specifying which fields the errors occurred on
when you call errors.to_xml&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-14T19:27:15+01:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2010-04-14T19:27:18+01:00</updated-at>
      <user-id type="integer">63715</user-id>
      <version type="integer">11</version>
      <user-name>nbenes</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I would prefer it this way:

@@@ xml
&lt;errors&gt;
  &lt;error on=&quot;title&quot;&gt;Title can't be blank&lt;/error&gt;
  &lt;error on=&quot;username&quot;&gt;Username is already taken&lt;/error&gt;
&lt;/errors&gt;
@@@

So only an XML attribute (&quot;on&quot;) is added for the Error attribute, which is backwards compatible.

Cool would also be some parsable information for the &quot;type&quot; of error, so the consumer of the returned XML would be able to replace the full message with a custom (eg. localized) one:

@@@ xml
&lt;errors&gt;
  &lt;error on=&quot;title&quot; type=&quot;blank&quot;&gt;Title can't be blank&lt;/error&gt;
  &lt;error on=&quot;username&quot; type=&quot;taken&quot;&gt;Username is already taken&lt;/error&gt;
  &lt;error on=&quot;username&quot; type=&quot;invalid&quot;&gt;Username has an invalid format&lt;/error&gt;
  &lt;error on=&quot;password&quot; type=&quot;too_short&quot;&gt;Password is too short (at least 6 characters)&lt;/error&gt;
&lt;/errors&gt;
@@@

I have already monkey-patched the Error class in one of my apps to produce such output. Anyone interested?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would prefer it this way:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;errors&amp;gt;
  &amp;lt;error on=&quot;title&quot;&amp;gt;Title can't be blank&amp;lt;/error&amp;gt;
  &amp;lt;error on=&quot;username&quot;&amp;gt;Username is already taken&amp;lt;/error&amp;gt;
&amp;lt;/errors&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So only an XML attribute (&quot;on&quot;) is added for the Error
attribute, which is backwards compatible.&lt;/p&gt;
&lt;p&gt;Cool would also be some parsable information for the &quot;type&quot; of
error, so the consumer of the returned XML would be able to replace
the full message with a custom (eg. localized) one:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;errors&amp;gt;
  &amp;lt;error on=&quot;title&quot; type=&quot;blank&quot;&amp;gt;Title can't be blank&amp;lt;/error&amp;gt;
  &amp;lt;error on=&quot;username&quot; type=&quot;taken&quot;&amp;gt;Username is already taken&amp;lt;/error&amp;gt;
  &amp;lt;error on=&quot;username&quot; type=&quot;invalid&quot;&amp;gt;Username has an invalid format&amp;lt;/error&amp;gt;
  &amp;lt;error on=&quot;password&quot; type=&quot;too_short&quot;&amp;gt;Password is too short (at least 6 characters)&amp;lt;/error&amp;gt;
&amp;lt;/errors&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have already monkey-patched the Error class in one of my apps
to produce such output. Anyone interested?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-14T19:44:27+01:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2010-04-14T19:44:29+01:00</updated-at>
      <user-id type="integer">36086</user-id>
      <version type="integer">12</version>
      <user-name>Martin Andert</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I still think the originally proposed format with the field name and message broken out provides the best flexibility, and maps one-to-one with the JSON error output. If the name is included in the message, there is no way to easy programmatic way to remove it, since it has been humanized with underscores converted to spaces. This is an issue if you want the message by itself, or if your form field label differs from the database field name.

@@@
&lt;errors&gt;
  &lt;error&gt;
    &lt;attribute&gt;name&lt;/attribute&gt;
    &lt;message&gt;is too short (minimum is 5 characters)&lt;/message&gt;
  &lt;/error&gt;
  &lt;error&gt;
    &lt;attribute&gt;name&lt;/attribute&gt;
    &lt;message&gt;can't be blank&lt;/message&gt;
  &lt;/error&gt;
&lt;errors&gt;
@@@

vs JSON:

@@@
[
  [&quot;name&quot;, &quot;is too short (minimum is 5 characters)&quot;],
  [&quot;name&quot;, &quot;can't be blank&quot;]
]
@@@

+1 on this. I would love to see this committed within the Rails 3.0 release timeframe.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I still think the originally proposed format with the field name
and message broken out provides the best flexibility, and maps
one-to-one with the JSON error output. If the name is included in
the message, there is no way to easy programmatic way to remove it,
since it has been humanized with underscores converted to spaces.
This is an issue if you want the message by itself, or if your form
field label differs from the database field name.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;errors&amp;gt;
  &amp;lt;error&amp;gt;
    &amp;lt;attribute&amp;gt;name&amp;lt;/attribute&amp;gt;
    &amp;lt;message&amp;gt;is too short (minimum is 5 characters)&amp;lt;/message&amp;gt;
  &amp;lt;/error&amp;gt;
  &amp;lt;error&amp;gt;
    &amp;lt;attribute&amp;gt;name&amp;lt;/attribute&amp;gt;
    &amp;lt;message&amp;gt;can't be blank&amp;lt;/message&amp;gt;
  &amp;lt;/error&amp;gt;
&amp;lt;errors&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;vs JSON:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[
  [&quot;name&quot;, &quot;is too short (minimum is 5 characters)&quot;],
  [&quot;name&quot;, &quot;can't be blank&quot;]
]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;+1 on this. I would love to see this committed within the Rails
3.0 release timeframe.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-14T21:28:52+01:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2010-04-14T21:34:47+01:00</updated-at>
      <user-id type="integer">4542</user-id>
      <version type="integer">13</version>
      <user-name>Scott Becker</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:37+01:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2010-05-04T18:48:37+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">14</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:03:57+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">964</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2011-02-02T19:11:23+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">15</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:03:59+00:00</created-at>
      <creator-id type="integer">4542</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1625</number>
      <permalink>allow-active-record-errors-to_xml-to-return-separate-tags-for-attribute-and-message</permalink>
      <priority type="integer">964</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord errors patch xml</tag>
      <title>Allow active record errors to_xml to return separate tags for attribute and message</title>
      <updated-at type="datetime">2011-02-02T19:10:18+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">16</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Scott Becker</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1625</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a06ea239a1519800c15af954c88bd57b56dc38aa</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-24T01:40:01+00:00</created-at>
      <filename>extended-xml-errors.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">73708</id>
      <size type="integer">3443</size>
      <uploader-id type="integer">4542</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/73708/extended-xml-errors.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>71fcaf48a27b89a2dd515e7682c96bb8621dc796</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-06T02:10:11+00:00</created-at>
      <filename>extended-xml-errors-with-more-tests.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">75591</id>
      <size type="integer">5300</size>
      <uploader-id type="integer">4542</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/75591/extended-xml-errors-with-more-tests.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>651e19243c2f56e34d26755d9e3f3115ab984a29</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-06T02:23:28+00:00</created-at>
      <filename>extended-xml-errors-with-more-tests2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">75594</id>
      <size type="integer">5283</size>
      <uploader-id type="integer">4542</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/75594/extended-xml-errors-with-more-tests2.diff</url>
    </attachment>
  </attachments>
</ticket>
