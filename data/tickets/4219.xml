<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-14T07:28:40+00:00</created-at>
  <creator-id type="integer">7697</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4219</number>
  <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>3.0 activerecord patch schema</tag>
  <title>Add column and index query methods to ActiveRecord::Schema</title>
  <updated-at type="datetime">2011-02-14T07:28:40+00:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">5</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Andrew White</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>The attached patch adds two methods to the ActiveRecord::Schema format - `column_exists?` and `index_exists?`

The use case for this feature is to make it easier for plugin/engine developers to create migrations that can cope with a database in an indeterminate state. e.g:

@@@ ruby
class MyEngineCreateUsers &lt; ActiveRecord::Migration
  def self.up
    if table_exists?(:users)
      # Traditional style
      add_column(:users, :remember_token, :string, :limit =&gt; 128) unless column_exists?(:users, :remember_token)
      add_index(:users, :remember_token) unless index_exists?(:users, :remember_token)

      # Sexy style
      change_table(:users) do |t|
        t.string(:confirmation_token, :limit =&gt; 128) unless t.column_exists?(:confirmation_token)
        t.boolean(:email_confirmed, :default =&gt; false, :null =&gt; false) unless t.column_exists?(:email_confirmed)
        t.index([:id, :confirmation_token]) unless t.index_exists?([:id, :confirmation_token])
      end
    else
      create_table(:users) do |t|
        t.string   :email
        t.string   :encrypted_password, :limit =&gt; 128
        t.string   :salt,               :limit =&gt; 128
        t.string   :confirmation_token, :limit =&gt; 128
        t.string   :remember_token,     :limit =&gt; 128
        t.boolean  :email_confirmed, :default =&gt; false, :null =&gt; false
        t.timestamps
      end

      add_index :users, [:id, :confirmation_token]
      add_index :users, :email
      add_index :users, :remember_token
    end
  end

  def self.down
    drop_table :users
  end
end
@@@</original-body>
  <latest-body>The attached patch adds two methods to the ActiveRecord::Schema format - `column_exists?` and `index_exists?`

The use case for this feature is to make it easier for plugin/engine developers to create migrations that can cope with a database in an indeterminate state. e.g:

@@@ ruby
class MyEngineCreateUsers &lt; ActiveRecord::Migration
  def self.up
    if table_exists?(:users)
      # Traditional style
      add_column(:users, :remember_token, :string, :limit =&gt; 128) unless column_exists?(:users, :remember_token)
      add_index(:users, :remember_token) unless index_exists?(:users, :remember_token)

      # Sexy style
      change_table(:users) do |t|
        t.string(:confirmation_token, :limit =&gt; 128) unless t.column_exists?(:confirmation_token)
        t.boolean(:email_confirmed, :default =&gt; false, :null =&gt; false) unless t.column_exists?(:email_confirmed)
        t.index([:id, :confirmation_token]) unless t.index_exists?([:id, :confirmation_token])
      end
    else
      create_table(:users) do |t|
        t.string   :email
        t.string   :encrypted_password, :limit =&gt; 128
        t.string   :salt,               :limit =&gt; 128
        t.string   :confirmation_token, :limit =&gt; 128
        t.string   :remember_token,     :limit =&gt; 128
        t.boolean  :email_confirmed, :default =&gt; false, :null =&gt; false
        t.timestamps
      end

      add_index :users, [:id, :confirmation_token]
      add_index :users, :email
      add_index :users, :remember_token
    end
  end

  def self.down
    drop_table :users
  end
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The attached patch adds two methods to the ActiveRecord::Schema
format - &lt;code&gt;column_exists?&lt;/code&gt; and
&lt;code&gt;index_exists?&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The use case for this feature is to make it easier for
plugin/engine developers to create migrations that can cope with a
database in an indeterminate state. e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class MyEngineCreateUsers &amp;lt; ActiveRecord::Migration
  def self.up
    if table_exists?(:users)
      # Traditional style
      add_column(:users, :remember_token, :string, :limit =&amp;gt; 128) unless column_exists?(:users, :remember_token)
      add_index(:users, :remember_token) unless index_exists?(:users, :remember_token)

      # Sexy style
      change_table(:users) do |t|
        t.string(:confirmation_token, :limit =&amp;gt; 128) unless t.column_exists?(:confirmation_token)
        t.boolean(:email_confirmed, :default =&amp;gt; false, :null =&amp;gt; false) unless t.column_exists?(:email_confirmed)
        t.index([:id, :confirmation_token]) unless t.index_exists?([:id, :confirmation_token])
      end
    else
      create_table(:users) do |t|
        t.string   :email
        t.string   :encrypted_password, :limit =&amp;gt; 128
        t.string   :salt,               :limit =&amp;gt; 128
        t.string   :confirmation_token, :limit =&amp;gt; 128
        t.string   :remember_token,     :limit =&amp;gt; 128
        t.boolean  :email_confirmed, :default =&amp;gt; false, :null =&amp;gt; false
        t.timestamps
      end

      add_index :users, [:id, :confirmation_token]
      add_index :users, :email
      add_index :users, :remember_token
    end
  end

  def self.down
    drop_table :users
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The attached patch adds two methods to the ActiveRecord::Schema format - `column_exists?` and `index_exists?`

The use case for this feature is to make it easier for plugin/engine developers to create migrations that can cope with a database in an indeterminate state. e.g:

@@@ ruby
class MyEngineCreateUsers &lt; ActiveRecord::Migration
  def self.up
    if table_exists?(:users)
      # Traditional style
      add_column(:users, :remember_token, :string, :limit =&gt; 128) unless column_exists?(:users, :remember_token)
      add_index(:users, :remember_token) unless index_exists?(:users, :remember_token)

      # Sexy style
      change_table(:users) do |t|
        t.string(:confirmation_token, :limit =&gt; 128) unless t.column_exists?(:confirmation_token)
        t.boolean(:email_confirmed, :default =&gt; false, :null =&gt; false) unless t.column_exists?(:email_confirmed)
        t.index([:id, :confirmation_token]) unless t.index_exists?([:id, :confirmation_token])
      end
    else
      create_table(:users) do |t|
        t.string   :email
        t.string   :encrypted_password, :limit =&gt; 128
        t.string   :salt,               :limit =&gt; 128
        t.string   :confirmation_token, :limit =&gt; 128
        t.string   :remember_token,     :limit =&gt; 128
        t.boolean  :email_confirmed, :default =&gt; false, :null =&gt; false
        t.timestamps
      end

      add_index :users, [:id, :confirmation_token]
      add_index :users, :email
      add_index :users, :remember_token
    end
  end

  def self.down
    drop_table :users
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The attached patch adds two methods to the ActiveRecord::Schema
format - &lt;code&gt;column_exists?&lt;/code&gt; and
&lt;code&gt;index_exists?&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The use case for this feature is to make it easier for
plugin/engine developers to create migrations that can cope with a
database in an indeterminate state. e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class MyEngineCreateUsers &amp;lt; ActiveRecord::Migration
  def self.up
    if table_exists?(:users)
      # Traditional style
      add_column(:users, :remember_token, :string, :limit =&amp;gt; 128) unless column_exists?(:users, :remember_token)
      add_index(:users, :remember_token) unless index_exists?(:users, :remember_token)

      # Sexy style
      change_table(:users) do |t|
        t.string(:confirmation_token, :limit =&amp;gt; 128) unless t.column_exists?(:confirmation_token)
        t.boolean(:email_confirmed, :default =&amp;gt; false, :null =&amp;gt; false) unless t.column_exists?(:email_confirmed)
        t.index([:id, :confirmation_token]) unless t.index_exists?([:id, :confirmation_token])
      end
    else
      create_table(:users) do |t|
        t.string   :email
        t.string   :encrypted_password, :limit =&amp;gt; 128
        t.string   :salt,               :limit =&amp;gt; 128
        t.string   :confirmation_token, :limit =&amp;gt; 128
        t.string   :remember_token,     :limit =&amp;gt; 128
        t.boolean  :email_confirmed, :default =&amp;gt; false, :null =&amp;gt; false
        t.timestamps
      end

      add_index :users, [:id, :confirmation_token]
      add_index :users, :email
      add_index :users, :remember_token
    end
  end

  def self.down
    drop_table :users
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-18T17:21:10+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4219</number>
      <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord patch schema</tag>
      <title>Add column and index query methods to ActiveRecord::Schema</title>
      <updated-at type="datetime">2010-03-18T17:21:13+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">1</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Updated patch.

I've had to rename the index_exists? method from #3452 as it clashed with this patch. The index_exists? from #3452 only supports checking by index name and is a support method whereas my index_exists? is more for using within migrations.

I did a quick survey of all of the AR adapters I could find and all of the ones for SQL databases define an indexes method. The only ones that didn't were for NoSQL databases or even more esoteric situations like a null/no-op database for testing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch.&lt;/p&gt;
&lt;p&gt;I've had to rename the index_exists? method from &lt;a href=
&quot;/projects/8994/tickets/3452&quot; title=&quot;Ticket #3452&quot;&gt;#3452&lt;/a&gt; as it
clashed with this patch. The index_exists? from &lt;a href=
&quot;/projects/8994/tickets/3452&quot; title=&quot;Ticket #3452&quot;&gt;#3452&lt;/a&gt; only
supports checking by index name and is a support method whereas my
index_exists? is more for using within migrations.&lt;/p&gt;
&lt;p&gt;I did a quick survey of all of the AR adapters I could find and
all of the ones for SQL databases define an indexes method. The
only ones that didn't were for NoSQL databases or even more
esoteric situations like a null/no-op database for testing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-09T11:49:37+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4219</number>
      <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord patch schema</tag>
      <title>Add column and index query methods to ActiveRecord::Schema</title>
      <updated-at type="datetime">2010-06-09T11:49:49+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>New rebased patch: http://gist.github.com/raw/453112/0fa1e1f05faf888e0b31c0055fb3799d358fab06/0003-add-column-and-index-query-methods.diff</body>
      <body-html>&lt;div&gt;&lt;p&gt;New rebased patch: &lt;a href=
&quot;http://gist.github.com/raw/453112/0fa1e1f05faf888e0b31c0055fb3799d358fab06/0003-add-column-and-index-query-methods.diff&quot;&gt;
http://gist.github.com/raw/453112/0fa1e1f05faf888e0b31c0055fb3799d3...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T17:53:55+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4219</number>
      <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.0 activerecord patch schema</tag>
      <title>Add column and index query methods to ActiveRecord::Schema</title>
      <updated-at type="datetime">2010-06-25T17:54:02+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [11ff3da5f4fe71a8d93180ab9fa69c6190a2e26e]) Add column and index query methods to ActiveRecord::Schema

[#4219 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/11ff3da5f4fe71a8d93180ab9fa69c6190a2e26e</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/11ff3da5f4fe71a8d93180ab9fa69c6190a2e26e&quot;
title=
&quot;Changeset [11ff3da5f4fe71a8d93180ab9fa69c6190a2e26e]&quot;&gt;[11ff3da5f4fe71a8d93180ab9fa69c6190a2e26e]&lt;/a&gt;)
Add column and index query methods to ActiveRecord::Schema&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4219&quot; title=
&quot;Ticket #4219&quot;&gt;#4219&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/11ff3da5f4fe71a8d93180ab9fa69c6190a2e26e&quot;&gt;
http://github.com/rails/rails/commit/11ff3da5f4fe71a8d93180ab9fa69c...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-26T00:09:19+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4219</number>
      <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 activerecord patch schema</tag>
      <title>Add column and index query methods to ActiveRecord::Schema</title>
      <updated-at type="datetime">2010-06-26T00:09:23+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:48+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4219</number>
      <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 activerecord patch schema</tag>
      <title>Add column and index query methods to ActiveRecord::Schema</title>
      <updated-at type="datetime">2010-10-15T23:01:48+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>thank you very much......&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/&quot;&gt;&#1605;&#1606;&#1578;&#1583;&#1610;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&#1605;&#1603;&#1610;&#1575;&#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1575;&#1586;&#1610;&#1575;&#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&#1601;&#1587;&#1575;&#1578;&#1610;&#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&#1585;&#1587;&#1575;&#1574;&#1604; 
- &#1605;&#1587;&#1580;&#1575;&#1578; - &#1608;&#1587;&#1575;&#1574;&#1591;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&#1578;&#1608;&#1576;&#1610;&#1603;&#1575;&#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&#1608;&#1592;&#1575;&#1574;&#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&#1576;&#1585;&#1608;&#1603;&#1587;&#1610;&lt;/a&gt; &lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt;&lt;a href=&quot;http://forum.line-sport.tv/&quot;&gt;&#1604;&#1575;&#1610;&#1606; &#1587;&#1576;&#1608;&#1585;&#1578;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;thank you very much......&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/&quot;&gt;&amp;#1605;&amp;#1606;&amp;#1578;&amp;#1583;&amp;#1610;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f86.html&quot;&gt;&amp;#1605;&amp;#1603;&amp;#1610;&amp;#1575;&amp;#1580;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1575;&amp;#1586;&amp;#1610;&amp;#1575;&amp;#1569;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f84.html&quot;&gt;&amp;#1601;&amp;#1587;&amp;#1575;&amp;#1578;&amp;#1610;&amp;#1606;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f17.html&quot;&gt;&amp;#1585;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1604;&lt;br&gt;
- &amp;#1605;&amp;#1587;&amp;#1580;&amp;#1575;&amp;#1578; -
&amp;#1608;&amp;#1587;&amp;#1575;&amp;#1574;&amp;#1591;&lt;/a&gt;&lt;span class=
&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=
&quot;http://www.tran33m.com/vb/f18.html&quot;&gt;&amp;#1578;&amp;#1608;&amp;#1576;&amp;#1610;&amp;#1603;&amp;#1575;&amp;#1578;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;&amp;#1608;&amp;#1592;&amp;#1575;&amp;#1574;&amp;#1601;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.tran33m.com/vb/f76.html&quot;&gt;jobs&lt;/a&gt;
&lt;a href=
&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;&amp;#1576;&amp;#1585;&amp;#1608;&amp;#1603;&amp;#1587;&amp;#1610;&lt;/a&gt;
&lt;a href=&quot;http://www.tran33m.com/vb/t31874.html&quot;&gt;proxy&lt;/a&gt;&lt;a href=
&quot;http://forum.line-sport.tv/&quot;&gt;&amp;#1604;&amp;#1575;&amp;#1610;&amp;#1606;
&amp;#1587;&amp;#1576;&amp;#1608;&amp;#1585;&amp;#1578;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-08T11:14:42+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4219</number>
      <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 activerecord patch schema</tag>
      <title>Add column and index query methods to ActiveRecord::Schema</title>
      <updated-at type="datetime">2011-02-08T12:16:02+00:00</updated-at>
      <user-id type="integer">136126</user-id>
      <version type="integer">6</version>
      <user-name>alasiri1</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;You possibly can develop your very own offering of Pandora earrings together along with take advantage&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora NZ&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt; of the solution appreciate involving anyone adjoining everyone &lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/pandora-bracelets-c-3.html&quot;&gt;&lt;em&gt;Pandoras Bracelets&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;with each situation. pandora earrings good discounts is often created away from numerous attractiveness chili. &lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/pandora-charms-c-9.html&quot;&gt;&lt;em&gt;Pandora&#160;Charms&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;A majority of these falls are available with disparate topics as an example people today related to communication, &lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;pandora ireland&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;foodstuffs, pets or anything else and also you can come up the actual one which in which appeals for you&lt;strong&gt;&lt;a href=&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora NZ&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;You
possibly can develop your very own offering of Pandora earrings
together along with take advantage&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora
NZ&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt; of the solution appreciate involving anyone
adjoining everyone &lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/pandora-bracelets-c-3.html&quot;&gt;&lt;em&gt;
Pandoras Bracelets&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;with each situation. pandora
earrings good discounts is often created away from numerous
attractiveness chili. &lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/pandora-charms-c-9.html&quot;&gt;&lt;em&gt;
Pandora&amp;nbsp;Charms&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;A majority of these falls are
available with disparate topics as an example people today related
to communication, &lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;pandora
ireland&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;foodstuffs, pets or anything else and also
you can come up the actual one which in which appeals for
you&lt;strong&gt;&lt;a href=
&quot;http://www.onlinepandorajewellery.com/&quot;&gt;&lt;em&gt;Pandora
NZ&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T06:03:21+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4219</number>
      <permalink>add-column-and-index-query-methods-to-activerecordschema</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 activerecord patch schema</tag>
      <title>Add column and index query methods to ActiveRecord::Schema</title>
      <updated-at type="datetime">2011-02-14T07:28:40+00:00</updated-at>
      <user-id type="integer">136876</user-id>
      <version type="integer">7</version>
      <user-name>pandora jewellry</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4219</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bb3876927cf92d22dba014283969572ab084c472</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-03-18T17:21:11+00:00</created-at>
      <filename>0001-add-column-and-index-query-methods.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">451421</id>
      <size type="integer">9323</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/451421/0001-add-column-and-index-query-methods.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>86e87f612d9cedc6cc2286165ddc7f1d310b8541</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-09T11:49:37+01:00</created-at>
      <filename>0002-add-column-and-index-query-methods.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">552115</id>
      <size type="integer">13796</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/552115/0002-add-column-and-index-query-methods.diff</url>
    </attachment>
  </attachments>
</ticket>
