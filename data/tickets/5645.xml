<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:56:22+01:00</created-at>
  <creator-id type="integer">101578</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5645</number>
  <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
  <updated-at type="datetime">2010-10-02T10:56:22+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">8</version>
  <user-name>Repository</user-name>
  <creator-name>Tim Connor</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
  <priority-name>Low</priority-name>
  <original-body>If add_index is called with a name that is too long, the migration appears to be successful but the index is not created.

The error is very easy to reproduce.  Create a new rails project, then run the following migration.  After execution the table will be created but the index will not.

@@@
class TestOfAddIndex &lt; ActiveRecord::Migration
  def self.up
    create_table :blah do |t|
      t.string :name
    end
    add_index :blah, [:name], :name =&gt; &quot;a really long name that is too long for the database to handle and should cause an error&quot;
  end
  def self.down
  end
end
@@@

The output of the migration is:

@@@
$ rake db:migrate
(in /Volumes/projects/rails/add_index_test)
==  TestOfAddIndex: migrating =================================================
-- create_table(:blah)
   -&gt; 0.0016s
-- add_index(:blah, [:name], {:name=&gt;&quot;a really long name that is too long for the database to handle and should cause an error&quot;})
   -&gt; 0.0002s
==  TestOfAddIndex: migrated (0.0020s) ========================================
@@@

And the resulting schema.rb is:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100917024939) do
  create_table &quot;blah&quot;, :force =&gt; true do |t|
    t.string &quot;name&quot;
  end
end
@@@

I have attached a patch that will fix the problem.</original-body>
  <latest-body>If add_index is called with a name that is too long, the migration appears to be successful but the index is not created.

The error is very easy to reproduce.  Create a new rails project, then run the following migration.  After execution the table will be created but the index will not.

@@@
class TestOfAddIndex &lt; ActiveRecord::Migration
  def self.up
    create_table :blah do |t|
      t.string :name
    end
    add_index :blah, [:name], :name =&gt; &quot;a really long name that is too long for the database to handle and should cause an error&quot;
  end
  def self.down
  end
end
@@@

The output of the migration is:

@@@
$ rake db:migrate
(in /Volumes/projects/rails/add_index_test)
==  TestOfAddIndex: migrating =================================================
-- create_table(:blah)
   -&gt; 0.0016s
-- add_index(:blah, [:name], {:name=&gt;&quot;a really long name that is too long for the database to handle and should cause an error&quot;})
   -&gt; 0.0002s
==  TestOfAddIndex: migrated (0.0020s) ========================================
@@@

And the resulting schema.rb is:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100917024939) do
  create_table &quot;blah&quot;, :force =&gt; true do |t|
    t.string &quot;name&quot;
  end
end
@@@

I have attached a patch that will fix the problem.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If add_index is called with a name that is too long, the
migration appears to be successful but the index is not
created.&lt;/p&gt;
&lt;p&gt;The error is very easy to reproduce. Create a new rails project,
then run the following migration. After execution the table will be
created but the index will not.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class TestOfAddIndex &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :blah do |t|
      t.string :name
    end
    add_index :blah, [:name], :name =&amp;gt; &quot;a really long name that is too long for the database to handle and should cause an error&quot;
  end
  def self.down
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The output of the migration is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rake db:migrate
(in /Volumes/projects/rails/add_index_test)
==  TestOfAddIndex: migrating =================================================
-- create_table(:blah)
   -&amp;gt; 0.0016s
-- add_index(:blah, [:name], {:name=&amp;gt;&quot;a really long name that is too long for the database to handle and should cause an error&quot;})
   -&amp;gt; 0.0002s
==  TestOfAddIndex: migrated (0.0020s) ========================================&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And the resulting schema.rb is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100917024939) do
  create_table &quot;blah&quot;, :force =&amp;gt; true do |t|
    t.string &quot;name&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have attached a patch that will fix the problem.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If add_index is called with a name that is too long, the migration appears to be successful but the index is not created.

The error is very easy to reproduce.  Create a new rails project, then run the following migration.  After execution the table will be created but the index will not.

@@@
class TestOfAddIndex &lt; ActiveRecord::Migration
  def self.up
    create_table :blah do |t|
      t.string :name
    end
    add_index :blah, [:name], :name =&gt; &quot;a really long name that is too long for the database to handle and should cause an error&quot;
  end
  def self.down
  end
end
@@@

The output of the migration is:

@@@
$ rake db:migrate
(in /Volumes/projects/rails/add_index_test)
==  TestOfAddIndex: migrating =================================================
-- create_table(:blah)
   -&gt; 0.0016s
-- add_index(:blah, [:name], {:name=&gt;&quot;a really long name that is too long for the database to handle and should cause an error&quot;})
   -&gt; 0.0002s
==  TestOfAddIndex: migrated (0.0020s) ========================================
@@@

And the resulting schema.rb is:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100917024939) do
  create_table &quot;blah&quot;, :force =&gt; true do |t|
    t.string &quot;name&quot;
  end
end
@@@

I have attached a patch that will fix the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If add_index is called with a name that is too long, the
migration appears to be successful but the index is not
created.&lt;/p&gt;
&lt;p&gt;The error is very easy to reproduce. Create a new rails project,
then run the following migration. After execution the table will be
created but the index will not.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class TestOfAddIndex &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :blah do |t|
      t.string :name
    end
    add_index :blah, [:name], :name =&amp;gt; &quot;a really long name that is too long for the database to handle and should cause an error&quot;
  end
  def self.down
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The output of the migration is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rake db:migrate
(in /Volumes/projects/rails/add_index_test)
==  TestOfAddIndex: migrating =================================================
-- create_table(:blah)
   -&amp;gt; 0.0016s
-- add_index(:blah, [:name], {:name=&amp;gt;&quot;a really long name that is too long for the database to handle and should cause an error&quot;})
   -&amp;gt; 0.0002s
==  TestOfAddIndex: migrated (0.0020s) ========================================&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And the resulting schema.rb is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100917024939) do
  create_table &quot;blah&quot;, :force =&amp;gt; true do |t|
    t.string &quot;name&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have attached a patch that will fix the problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-17T04:08:15+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-17T04:08:19+01:00</updated-at>
      <user-id type="integer">101578</user-id>
      <version type="integer">1</version>
      <user-name>Tim Connor</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue also applies to index names automatically generated by rails, eg

@@@
add_index :users, [:long_column_name, :other_long_column_name, :third_long_column_name], :unique =&gt; true
@@@

will appear to work but the index will not be created as the generated name was too long</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue also applies to index names automatically generated
by rails, eg&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;add_index :users, [:long_column_name, :other_long_column_name, :third_long_column_name], :unique =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will appear to work but the index will not be created as the
generated name was too long&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-17T04:14:47+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-17T04:14:48+01:00</updated-at>
      <user-id type="integer">101578</user-id>
      <version type="integer">2</version>
      <user-name>Tim Connor</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for you contribution. 

Unfortunately, your patch actually breaks a couple of tests. I recommend that you check out those tests and try to resolve them.

@@@ text
  1) Failure:
test_add_index_length_limit(MigrationTest) [test/cases/migration_test.rb:130]:
Exception raised:
&lt;#&lt;ArgumentError: Index name 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' on table 'people' is too long; the limit is 64 characters&gt;&gt;.

  2) Failure:
test_double_add_index(MigrationTest) [test/cases/migration_test.rb:157]:
Exception raised:
&lt;#&lt;ArgumentError: Index name 'some_idx' on table 'people' already exists&gt;&gt;.

126 tests, 343 assertions, 2 failures, 0 errors, 0 skips

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for you contribution.&lt;/p&gt;
&lt;p&gt;Unfortunately, your patch actually breaks a couple of tests. I
recommend that you check out those tests and try to resolve
them.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;text&quot;&gt;  1) Failure:
test_add_index_length_limit(MigrationTest) [test/cases/migration_test.rb:130]:
Exception raised:
&amp;lt;#&amp;lt;ArgumentError: Index name 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' on table 'people' is too long; the limit is 64 characters&amp;gt;&amp;gt;.

  2) Failure:
test_double_add_index(MigrationTest) [test/cases/migration_test.rb:157]:
Exception raised:
&amp;lt;#&amp;lt;ArgumentError: Index name 'some_idx' on table 'people' already exists&amp;gt;&amp;gt;.

126 tests, 343 assertions, 2 failures, 0 errors, 0 skips&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-17T04:48:43+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-17T04:48:46+01:00</updated-at>
      <user-id type="integer">44801</user-id>
      <version type="integer">3</version>
      <user-name>Lake</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached is a second patch which fixes a further issue with remove_index and updates the unit tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a second patch which fixes a further issue with
remove_index and updates the unit tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-17T05:38:12+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-17T05:38:14+01:00</updated-at>
      <user-id type="integer">101578</user-id>
      <version type="integer">4</version>
      <user-name>Tim Connor</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Great! With your patches combined, the tests pass.

+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great! With your patches combined, the tests pass.&lt;/p&gt;
&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-18T01:51:17+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-18T01:51:19+01:00</updated-at>
      <user-id type="integer">44801</user-id>
      <version type="integer">5</version>
      <user-name>Lake</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-18T02:49:38+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-18T02:49:40+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">6</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [37de59eacf8f6478e866309615af7381d41a5a14]) Fix issue with remove_index and add unit test [#5645 state:resolved]
http://github.com/rails/rails/commit/37de59eacf8f6478e866309615af7381d41a5a14</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/37de59eacf8f6478e866309615af7381d41a5a14&quot;
title=
&quot;Changeset [37de59eacf8f6478e866309615af7381d41a5a14]&quot;&gt;[37de59eacf8f6478e866309615af7381d41a5a14]&lt;/a&gt;)
Fix issue with remove_index and add unit test [&lt;a href=
&quot;/projects/8994/tickets/5645&quot; title=&quot;Ticket #5645&quot;&gt;#5645&lt;/a&gt;
state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/37de59eacf8f6478e866309615af7381d41a5a14&quot;&gt;
http://github.com/rails/rails/commit/37de59eacf8f6478e866309615af73...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-18T19:50:27+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-18T19:50:28+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [d3ffea25b2b762ff7af5172e7d501684a8b1ef96]) Fix issue with remove_index and add unit test [#5645 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/d3ffea25b2b762ff7af5172e7d501684a8b1ef96</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/d3ffea25b2b762ff7af5172e7d501684a8b1ef96&quot;
title=
&quot;Changeset [d3ffea25b2b762ff7af5172e7d501684a8b1ef96]&quot;&gt;[d3ffea25b2b762ff7af5172e7d501684a8b1ef96]&lt;/a&gt;)
Fix issue with remove_index and add unit test [&lt;a href=
&quot;/projects/8994/tickets/5645&quot; title=&quot;Ticket #5645&quot;&gt;#5645&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/d3ffea25b2b762ff7af5172e7d501684a8b1ef96&quot;&gt;
http://github.com/rails/rails/commit/d3ffea25b2b762ff7af5172e7d5016...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-27T14:00:39+01:00</created-at>
      <creator-id type="integer">101578</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5645</number>
      <permalink>rails-300-add_index-fails-silently-on-invalid-index-names</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.0 add_index fails silently on invalid index names</title>
      <updated-at type="datetime">2010-09-27T14:00:41+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Tim Connor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5645</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0c733008065de2d775b2a0d55255c8fbf067186a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-17T04:08:15+01:00</created-at>
      <filename>0001-raise-errors-when-index-creation-fails.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">678009</id>
      <size type="integer">1538</size>
      <uploader-id type="integer">101578</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/678009/0001-raise-errors-when-index-creation-fails.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>9647d1daf7f2e170f6c4a48e08b0ff1c2c14d815</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-17T05:38:12+01:00</created-at>
      <filename>0002-fix-issue-with-remove_index-and-add-unit-test.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">678038</id>
      <size type="integer">3211</size>
      <uploader-id type="integer">101578</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/678038/0002-fix-issue-with-remove_index-and-add-unit-test.patch</url>
    </attachment>
  </attachments>
</ticket>
