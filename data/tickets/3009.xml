<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-08T19:00:00+01:00</created-at>
  <creator-id type="integer">65633</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3009</number>
  <permalink>bug-in-rails-or-bug-in-the-model</permalink>
  <priority type="integer">130641</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Bug in rails? Or bug in the model?</title>
  <updated-at type="datetime">2009-08-10T08:34:15+01:00</updated-at>
  <user-id type="integer">22589</user-id>
  <version type="integer">2</version>
  <user-name>Matt Jones</user-name>
  <creator-name>Manoj</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3009</url>
  <priority-name nil="true"></priority-name>
  <original-body>The following are the models in play.

class TestEntity &lt; ActiveRecord::Base
  belongs_to :node
end

class Node &lt; ActiveRecord::Base
  belongs_to :test_group
  belongs_to :build
  has_many   :test_entities
  has_many   :networks
  has_many   :attachments
end

class Build &lt; ActiveRecord::Base
  has_many :nodes
end

Referring to build from a test_entity via node fails. Instead of a build object, an empty node object is returned.

&gt;&gt; te = TestEntity.find(1)
=&gt; #&lt;TestEntity id: 1, node_id: 1, node_type: &quot;MDS&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;

&gt;&gt; te.node
=&gt; #&lt;Node id: 1, node_name: &quot;lin3&quot;, architecture: &quot;i686&quot;, mem_size: 2048, build_id: 1, test_group_id: 1, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;

&gt;&gt; te.node.build
=&gt; #&lt;Node id: nil, node_name: nil, architecture: nil, mem_size: nil, build_id: nil, test_group_id: nil, created_at: nil, updated_at: nil&gt;

Querying for the build with the build_id succeeds.
&gt;&gt; build = Build.find(te.node.build_id)
=&gt; #&lt;Build id: 1, lbats_build_id: nil, lbats_build_name: nil, architecture: &quot;i686&quot;, os: &quot;GNU/Linux&quot;, os_distribution: &quot;redhat&quot;, kernel_version: &quot;2.6.18-128.1.1-prep&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;</original-body>
  <latest-body>The following are the models in play.

class TestEntity &lt; ActiveRecord::Base
  belongs_to :node
end

class Node &lt; ActiveRecord::Base
  belongs_to :test_group
  belongs_to :build
  has_many   :test_entities
  has_many   :networks
  has_many   :attachments
end

class Build &lt; ActiveRecord::Base
  has_many :nodes
end

Referring to build from a test_entity via node fails. Instead of a build object, an empty node object is returned.

&gt;&gt; te = TestEntity.find(1)
=&gt; #&lt;TestEntity id: 1, node_id: 1, node_type: &quot;MDS&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;

&gt;&gt; te.node
=&gt; #&lt;Node id: 1, node_name: &quot;lin3&quot;, architecture: &quot;i686&quot;, mem_size: 2048, build_id: 1, test_group_id: 1, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;

&gt;&gt; te.node.build
=&gt; #&lt;Node id: nil, node_name: nil, architecture: nil, mem_size: nil, build_id: nil, test_group_id: nil, created_at: nil, updated_at: nil&gt;

Querying for the build with the build_id succeeds.
&gt;&gt; build = Build.find(te.node.build_id)
=&gt; #&lt;Build id: 1, lbats_build_id: nil, lbats_build_name: nil, architecture: &quot;i686&quot;, os: &quot;GNU/Linux&quot;, os_distribution: &quot;redhat&quot;, kernel_version: &quot;2.6.18-128.1.1-prep&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The following are the models in play.&lt;/p&gt;
&lt;p&gt;class TestEntity &amp;lt; ActiveRecord::Base belongs_to :node
end&lt;/p&gt;
&lt;p&gt;class Node &amp;lt; ActiveRecord::Base belongs_to :test_group
belongs_to :build has_many :test_entities has_many :networks
has_many :attachments end&lt;/p&gt;
&lt;p&gt;class Build &amp;lt; ActiveRecord::Base has_many :nodes end&lt;/p&gt;
&lt;p&gt;Referring to build from a test_entity via node fails. Instead of
a build object, an empty node object is returned.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;te = TestEntity.find(1) =&amp;gt; #&lt;/p&gt;
&lt;p&gt;te.node =&amp;gt; #&lt;/p&gt;
&lt;p&gt;te.node.build =&amp;gt; #&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Querying for the build with the build_id succeeds.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;build = Build.find(te.node.build_id) =&amp;gt; #&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The following are the models in play.
@@@
class TestEntity &lt; ActiveRecord::Base
  belongs_to :node
end

class Node &lt; ActiveRecord::Base
  belongs_to :test_group
  belongs_to :build
  has_many   :test_entities
  has_many   :networks
  has_many   :attachments
end

class Build &lt; ActiveRecord::Base
  has_many :nodes
end
@@@

Referring to build from a test_entity via node fails. Instead of a build object, an empty node object is returned.
@@@
&gt;&gt; te = TestEntity.find(1)
=&gt; #&lt;TestEntity id: 1, node_id: 1, node_type: &quot;MDS&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;

&gt;&gt; te.node
=&gt; #&lt;Node id: 1, node_name: &quot;lin3&quot;, architecture: &quot;i686&quot;, mem_size: 2048, build_id: 1, test_group_id: 1, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;

&gt;&gt; te.node.build
=&gt; #&lt;Node id: nil, node_name: nil, architecture: nil, mem_size: nil, build_id: nil, test_group_id: nil, created_at: nil, updated_at: nil&gt;
@@@
Querying for the build with the build_id succeeds.
@@@
&gt;&gt; build = Build.find(te.node.build_id)
=&gt; #&lt;Build id: 1, lbats_build_id: nil, lbats_build_name: nil, architecture: &quot;i686&quot;, os: &quot;GNU/Linux&quot;, os_distribution: &quot;redhat&quot;, kernel_version: &quot;2.6.18-128.1.1-prep&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The following are the models in play.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class TestEntity &amp;lt; ActiveRecord::Base
  belongs_to :node
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
class Node &amp;lt; ActiveRecord::Base
  belongs_to :test_group
  belongs_to :build
  has_many   :test_entities
  has_many   :networks
  has_many   :attachments
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
class Build &amp;lt; ActiveRecord::Base
  has_many :nodes
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Referring to build from a test_entity via node fails. Instead of
a build object, an empty node object is returned.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; te = TestEntity.find(1)
=&amp;gt; #&amp;lt;TestEntity id: 1, node_id: 1, node_type: &quot;MDS&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&amp;gt;&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
&amp;gt;&amp;gt; te.node
=&amp;gt; #&amp;lt;Node id: 1, node_name: &quot;lin3&quot;, architecture: &quot;i686&quot;, mem_size: 2048, build_id: 1, test_group_id: 1, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&amp;gt;&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
&amp;gt;&amp;gt; te.node.build
=&amp;gt; #&amp;lt;Node id: nil, node_name: nil, architecture: nil, mem_size: nil, build_id: nil, test_group_id: nil, created_at: nil, updated_at: nil&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
Querying for the build with the build_id succeeds.&lt;br&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; build = Build.find(te.node.build_id)
=&amp;gt; #&amp;lt;Build id: 1, lbats_build_id: nil, lbats_build_name: nil, architecture: &quot;i686&quot;, os: &quot;GNU/Linux&quot;, os_distribution: &quot;redhat&quot;, kernel_version: &quot;2.6.18-128.1.1-prep&quot;, created_at: &quot;2009-08-07 00:18:19&quot;, updated_at: &quot;2009-08-07 00:18:19&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T19:00:00+01:00</created-at>
      <creator-id type="integer">65633</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3009</number>
      <permalink>bug-in-rails-or-bug-in-the-model</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Bug in rails? Or bug in the model?</title>
      <updated-at type="datetime">2009-08-08T19:02:00+01:00</updated-at>
      <user-id type="integer">65633</user-id>
      <version type="integer">1</version>
      <user-name>Manoj</user-name>
      <creator-name>Manoj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3009</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Naming models after ActiveRecord methods will cause *serious* problems, such as this one. 'te.node.build' is calling the build method on te's node association, not doing what you want. The only workaround is, as the old joke goes, to &quot;stop doing that&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Naming models after ActiveRecord methods will cause
&lt;em&gt;serious&lt;/em&gt; problems, such as this one. 'te.node.build' is
calling the build method on te's node association, not doing what
you want. The only workaround is, as the old joke goes, to &quot;stop
doing that&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-10T08:34:12+01:00</created-at>
      <creator-id type="integer">65633</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3009</number>
      <permalink>bug-in-rails-or-bug-in-the-model</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Bug in rails? Or bug in the model?</title>
      <updated-at type="datetime">2009-08-10T08:34:15+01:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">2</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Manoj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3009</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
