<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-22T18:33:34+00:00</created-at>
  <creator-id type="integer">45477</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6461</number>
  <permalink>find_or_create_by-behaves-incorrectly-when-used-with-multiple-attributes-through-has_many-association</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>activerecord &quot;bug activerecord find_or_create_by&quot; find_or_create find_or_create_by</tag>
  <title>find_or_create_by behaves incorrectly when used with multiple attributes through has_many association</title>
  <updated-at type="datetime">2011-02-22T18:37:39+00:00</updated-at>
  <user-id type="integer">45477</user-id>
  <version type="integer">1</version>
  <user-name>Aaron Gough</user-name>
  <creator-name>Aaron Gough</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6461</url>
  <priority-name nil="true"></priority-name>
  <original-body>When using a find_or_create_by method with multiple attributes through an association, the hash of attributes is incorrectly assigned to the attribute you are finding on:

@@@
ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test1&quot;, :attribute_2 =&gt; &quot;test2&quot;)

#=&gt; #&lt;ChildModel id: 1, attribute_1: {:attribute_1=&gt;&quot;test1&quot;, :attribute_2=&gt;&quot;test2&quot;}, attribute_2: nil, parent_model_id: 1, created_at: &quot;2011-02-22 17:54:33&quot;, updated_at: &quot;2011-02-22 17:54:33&quot;&gt;
@@@

The same find_or_create_by method works correctly when not going through the association:

    ChildModel.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test3&quot;, :attribute_2 =&gt; &quot;test5&quot;)

    #=&gt; #&lt;ChildModel id: 2, attribute_1: &quot;test3&quot;, attribute_2: &quot;test5&quot;, parent_model_id: nil, created_at: &quot;2011-02-22 17:57:36&quot;, updated_at: &quot;2011-02-22 17:57:36&quot;&gt;


**Steps to reproduce:**

    &gt; rails _2.3.11_ test
    &gt; cd test
    &gt; script/generate model ParentModel
    &gt; script/generate model ChildModel attribute_1:string attribute_2:string parent_model:references
    &gt; rake db:create
    &gt; rake db:migrate



@@@ ruby
# app/models/parent_model.rb
class ParentModel &lt; ActiveRecord::Base
  has_many :child_models
end
@@@


@@@ ruby
# app/models/child_model.rb
class ChildModel &lt; ActiveRecord::Base
  belongs_to :parent_model
end
@@@

Then run the following:
@@@
&gt; script/console
ruby-1.8.7-p330&gt; ParentModel.create
ruby-1.8.7-p330&gt; ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test1&quot;, :attribute_2 =&gt; &quot;test2&quot;)
@@@

I have confirmed that this behaviour was not happening in Rails 2.3.4, but I haven't narrowed down the version more than that yet...</original-body>
  <latest-body>When using a find_or_create_by method with multiple attributes through an association, the hash of attributes is incorrectly assigned to the attribute you are finding on:

@@@
ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test1&quot;, :attribute_2 =&gt; &quot;test2&quot;)

#=&gt; #&lt;ChildModel id: 1, attribute_1: {:attribute_1=&gt;&quot;test1&quot;, :attribute_2=&gt;&quot;test2&quot;}, attribute_2: nil, parent_model_id: 1, created_at: &quot;2011-02-22 17:54:33&quot;, updated_at: &quot;2011-02-22 17:54:33&quot;&gt;
@@@

The same find_or_create_by method works correctly when not going through the association:

    ChildModel.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test3&quot;, :attribute_2 =&gt; &quot;test5&quot;)

    #=&gt; #&lt;ChildModel id: 2, attribute_1: &quot;test3&quot;, attribute_2: &quot;test5&quot;, parent_model_id: nil, created_at: &quot;2011-02-22 17:57:36&quot;, updated_at: &quot;2011-02-22 17:57:36&quot;&gt;


**Steps to reproduce:**

    &gt; rails _2.3.11_ test
    &gt; cd test
    &gt; script/generate model ParentModel
    &gt; script/generate model ChildModel attribute_1:string attribute_2:string parent_model:references
    &gt; rake db:create
    &gt; rake db:migrate



@@@ ruby
# app/models/parent_model.rb
class ParentModel &lt; ActiveRecord::Base
  has_many :child_models
end
@@@


@@@ ruby
# app/models/child_model.rb
class ChildModel &lt; ActiveRecord::Base
  belongs_to :parent_model
end
@@@

Then run the following:
@@@
&gt; script/console
ruby-1.8.7-p330&gt; ParentModel.create
ruby-1.8.7-p330&gt; ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test1&quot;, :attribute_2 =&gt; &quot;test2&quot;)
@@@

I have confirmed that this behaviour was not happening in Rails 2.3.4, but I haven't narrowed down the version more than that yet...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When using a find_or_create_by method with multiple attributes
through an association, the hash of attributes is incorrectly
assigned to the attribute you are finding on:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&amp;gt; &quot;test1&quot;, :attribute_2 =&amp;gt; &quot;test2&quot;)

#=&amp;gt; #&amp;lt;ChildModel id: 1, attribute_1: {:attribute_1=&amp;gt;&quot;test1&quot;, :attribute_2=&amp;gt;&quot;test2&quot;}, attribute_2: nil, parent_model_id: 1, created_at: &quot;2011-02-22 17:54:33&quot;, updated_at: &quot;2011-02-22 17:54:33&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The same find_or_create_by method works correctly when not going
through the association:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ChildModel.find_or_create_by_attribute_1(:attribute_1 =&amp;gt; &quot;test3&quot;, :attribute_2 =&amp;gt; &quot;test5&quot;)

#=&amp;gt; #&amp;lt;ChildModel id: 2, attribute_1: &quot;test3&quot;, attribute_2: &quot;test5&quot;, parent_model_id: nil, created_at: &quot;2011-02-22 17:57:36&quot;, updated_at: &quot;2011-02-22 17:57:36&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Steps to reproduce:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; rails _2.3.11_ test
&amp;gt; cd test
&amp;gt; script/generate model ParentModel
&amp;gt; script/generate model ChildModel attribute_1:string attribute_2:string parent_model:references
&amp;gt; rake db:create
&amp;gt; rake db:migrate&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# app/models/parent_model.rb
class ParentModel &amp;lt; ActiveRecord::Base
  has_many :child_models
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# app/models/child_model.rb
class ChildModel &amp;lt; ActiveRecord::Base
  belongs_to :parent_model
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then run the following:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; script/console
ruby-1.8.7-p330&amp;gt; ParentModel.create
ruby-1.8.7-p330&amp;gt; ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&amp;gt; &quot;test1&quot;, :attribute_2 =&amp;gt; &quot;test2&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have confirmed that this behaviour was not happening in Rails
2.3.4, but I haven't narrowed down the version more than that
yet...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using a find_or_create_by method with multiple attributes through an association, the hash of attributes is incorrectly assigned to the attribute you are finding on:

@@@
ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test1&quot;, :attribute_2 =&gt; &quot;test2&quot;)

#=&gt; #&lt;ChildModel id: 1, attribute_1: {:attribute_1=&gt;&quot;test1&quot;, :attribute_2=&gt;&quot;test2&quot;}, attribute_2: nil, parent_model_id: 1, created_at: &quot;2011-02-22 17:54:33&quot;, updated_at: &quot;2011-02-22 17:54:33&quot;&gt;
@@@

The same find_or_create_by method works correctly when not going through the association:

    ChildModel.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test3&quot;, :attribute_2 =&gt; &quot;test5&quot;)

    #=&gt; #&lt;ChildModel id: 2, attribute_1: &quot;test3&quot;, attribute_2: &quot;test5&quot;, parent_model_id: nil, created_at: &quot;2011-02-22 17:57:36&quot;, updated_at: &quot;2011-02-22 17:57:36&quot;&gt;


**Steps to reproduce:**

    &gt; rails _2.3.11_ test
    &gt; cd test
    &gt; script/generate model ParentModel
    &gt; script/generate model ChildModel attribute_1:string attribute_2:string parent_model:references
    &gt; rake db:create
    &gt; rake db:migrate



@@@ ruby
# app/models/parent_model.rb
class ParentModel &lt; ActiveRecord::Base
  has_many :child_models
end
@@@


@@@ ruby
# app/models/child_model.rb
class ChildModel &lt; ActiveRecord::Base
  belongs_to :parent_model
end
@@@

Then run the following:
@@@
&gt; script/console
ruby-1.8.7-p330&gt; ParentModel.create
ruby-1.8.7-p330&gt; ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&gt; &quot;test1&quot;, :attribute_2 =&gt; &quot;test2&quot;)
@@@

I have confirmed that this behaviour was not happening in Rails 2.3.4, but I haven't narrowed down the version more than that yet...</body>
      <body-html>&lt;div&gt;&lt;p&gt;When using a find_or_create_by method with multiple attributes
through an association, the hash of attributes is incorrectly
assigned to the attribute you are finding on:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&amp;gt; &quot;test1&quot;, :attribute_2 =&amp;gt; &quot;test2&quot;)

#=&amp;gt; #&amp;lt;ChildModel id: 1, attribute_1: {:attribute_1=&amp;gt;&quot;test1&quot;, :attribute_2=&amp;gt;&quot;test2&quot;}, attribute_2: nil, parent_model_id: 1, created_at: &quot;2011-02-22 17:54:33&quot;, updated_at: &quot;2011-02-22 17:54:33&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The same find_or_create_by method works correctly when not going
through the association:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ChildModel.find_or_create_by_attribute_1(:attribute_1 =&amp;gt; &quot;test3&quot;, :attribute_2 =&amp;gt; &quot;test5&quot;)

#=&amp;gt; #&amp;lt;ChildModel id: 2, attribute_1: &quot;test3&quot;, attribute_2: &quot;test5&quot;, parent_model_id: nil, created_at: &quot;2011-02-22 17:57:36&quot;, updated_at: &quot;2011-02-22 17:57:36&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Steps to reproduce:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; rails _2.3.11_ test
&amp;gt; cd test
&amp;gt; script/generate model ParentModel
&amp;gt; script/generate model ChildModel attribute_1:string attribute_2:string parent_model:references
&amp;gt; rake db:create
&amp;gt; rake db:migrate&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# app/models/parent_model.rb
class ParentModel &amp;lt; ActiveRecord::Base
  has_many :child_models
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# app/models/child_model.rb
class ChildModel &amp;lt; ActiveRecord::Base
  belongs_to :parent_model
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then run the following:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; script/console
ruby-1.8.7-p330&amp;gt; ParentModel.create
ruby-1.8.7-p330&amp;gt; ParentModel.first.child_models.find_or_create_by_attribute_1(:attribute_1 =&amp;gt; &quot;test1&quot;, :attribute_2 =&amp;gt; &quot;test2&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have confirmed that this behaviour was not happening in Rails
2.3.4, but I haven't narrowed down the version more than that
yet...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-22T18:33:34+00:00</created-at>
      <creator-id type="integer">45477</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6461</number>
      <permalink>find_or_create_by-behaves-incorrectly-when-used-with-multiple-attributes-through-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;bug activerecord find_or_create_by&quot; find_or_create find_or_create_by</tag>
      <title>find_or_create_by behaves incorrectly when used with multiple attributes through has_many association</title>
      <updated-at type="datetime">2011-02-22T18:37:39+00:00</updated-at>
      <user-id type="integer">45477</user-id>
      <version type="integer">1</version>
      <user-name>Aaron Gough</user-name>
      <creator-name>Aaron Gough</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6461</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
