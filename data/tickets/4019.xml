<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-21T12:50:52+00:00</created-at>
  <creator-id type="integer">55442</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4019</number>
  <permalink>assert_recognizes-ignores-extras-parameter</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>assert_recognizes testing</tag>
  <title>assert_recognizes ignores extras parameter</title>
  <updated-at type="datetime">2011-02-02T18:38:06+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jarl Friis</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4019</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi.

I am using the extras hash parameter in assert_recognizes. The documentation shows
`assert_recognizes(expected_options, path, extras={}, message=nil)`

I have something similar to the documentation:
    assert_recognizes {:controller =&gt; 'items', :action =&gt; 'list', :id =&gt; '1',
                       :view =&gt; 'print'}, 'items/list/1', { :view =&gt; &quot;print&quot; }
this works fine, the test passes, however it passes unconditionally. If I write like this
    assert_recognizes {:controller =&gt; 'items', :action =&gt; 'list', :id =&gt; '1',
                       :view =&gt; 'BULLSHIT'}, 'items/list/1', { :view =&gt; &quot;print&quot; }
The test **also** passes, which worries me a lot, I would expect it to fail.

To me it looks like a bug in assert_recognizes, it ignores the additional 'view' option value in the extras hash parameter.</original-body>
  <latest-body>Hi.

I am using the extras hash parameter in assert_recognizes. The documentation shows
`assert_recognizes(expected_options, path, extras={}, message=nil)`

I have something similar to the documentation:
    assert_recognizes {:controller =&gt; 'items', :action =&gt; 'list', :id =&gt; '1',
                       :view =&gt; 'print'}, 'items/list/1', { :view =&gt; &quot;print&quot; }
this works fine, the test passes, however it passes unconditionally. If I write like this
    assert_recognizes {:controller =&gt; 'items', :action =&gt; 'list', :id =&gt; '1',
                       :view =&gt; 'BULLSHIT'}, 'items/list/1', { :view =&gt; &quot;print&quot; }
The test **also** passes, which worries me a lot, I would expect it to fail.

To me it looks like a bug in assert_recognizes, it ignores the additional 'view' option value in the extras hash parameter.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi.&lt;/p&gt;
&lt;p&gt;I am using the extras hash parameter in assert_recognizes. The
documentation shows&lt;br&gt;
&lt;code&gt;assert_recognizes(expected_options, path, extras={},
message=nil)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I have something similar to the documentation:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;assert_recognizes {:controller =&amp;gt; 'items', :action =&amp;gt; 'list', :id =&amp;gt; '1',
                   :view =&amp;gt; 'print'}, 'items/list/1', { :view =&amp;gt; &quot;print&quot; }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this works fine, the test passes, however it passes
unconditionally. If I write like this&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;assert_recognizes {:controller =&amp;gt; 'items', :action =&amp;gt; 'list', :id =&amp;gt; '1',
                   :view =&amp;gt; 'BULLSHIT'}, 'items/list/1', { :view =&amp;gt; &quot;print&quot; }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The test &lt;strong&gt;also&lt;/strong&gt; passes, which worries me a lot, I
would expect it to fail.&lt;/p&gt;
&lt;p&gt;To me it looks like a bug in assert_recognizes, it ignores the
additional 'view' option value in the extras hash parameter.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi.

I am using the extras hash parameter in assert_recognizes. The documentation shows
`assert_recognizes(expected_options, path, extras={}, message=nil)`

I have something similar to the documentation:
    assert_recognizes {:controller =&gt; 'items', :action =&gt; 'list', :id =&gt; '1',
                       :view =&gt; 'print'}, 'items/list/1', { :view =&gt; &quot;print&quot; }
this works fine, the test passes, however it passes unconditionally. If I write like this
    assert_recognizes {:controller =&gt; 'items', :action =&gt; 'list', :id =&gt; '1',
                       :view =&gt; 'BULLSHIT'}, 'items/list/1', { :view =&gt; &quot;print&quot; }
The test **also** passes, which worries me a lot, I would expect it to fail.

To me it looks like a bug in assert_recognizes, it ignores the additional 'view' option value in the extras hash parameter.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi.&lt;/p&gt;
&lt;p&gt;I am using the extras hash parameter in assert_recognizes. The
documentation shows&lt;br&gt;
&lt;code&gt;assert_recognizes(expected_options, path, extras={},
message=nil)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I have something similar to the documentation:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;assert_recognizes {:controller =&amp;gt; 'items', :action =&amp;gt; 'list', :id =&amp;gt; '1',
                   :view =&amp;gt; 'print'}, 'items/list/1', { :view =&amp;gt; &quot;print&quot; }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this works fine, the test passes, however it passes
unconditionally. If I write like this&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;assert_recognizes {:controller =&amp;gt; 'items', :action =&amp;gt; 'list', :id =&amp;gt; '1',
                   :view =&amp;gt; 'BULLSHIT'}, 'items/list/1', { :view =&amp;gt; &quot;print&quot; }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The test &lt;strong&gt;also&lt;/strong&gt; passes, which worries me a lot, I
would expect it to fail.&lt;/p&gt;
&lt;p&gt;To me it looks like a bug in assert_recognizes, it ignores the
additional 'view' option value in the extras hash parameter.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-21T12:50:52+00:00</created-at>
      <creator-id type="integer">55442</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4019</number>
      <permalink>assert_recognizes-ignores-extras-parameter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>assert_recognizes testing</tag>
      <title>assert_recognizes ignores extras parameter</title>
      <updated-at type="datetime">2010-02-21T12:50:54+00:00</updated-at>
      <user-id type="integer">55442</user-id>
      <version type="integer">1</version>
      <user-name>Jarl Friis</user-name>
      <creator-name>Jarl Friis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4019</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:54:49+00:00</created-at>
      <creator-id type="integer">55442</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4019</number>
      <permalink>assert_recognizes-ignores-extras-parameter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>assert_recognizes testing</tag>
      <title>assert_recognizes ignores extras parameter</title>
      <updated-at type="datetime">2011-02-02T18:37:52+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jarl Friis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4019</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:54:51+00:00</created-at>
      <creator-id type="integer">55442</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4019</number>
      <permalink>assert_recognizes-ignores-extras-parameter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>assert_recognizes testing</tag>
      <title>assert_recognizes ignores extras parameter</title>
      <updated-at type="datetime">2011-02-02T18:38:06+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jarl Friis</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4019</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
