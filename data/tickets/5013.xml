<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-30T15:28:55+01:00</created-at>
  <creator-id type="integer">21653</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5013</number>
  <permalink>clean-try-syntax</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>active_support core_ext documentation patch rails3</tag>
  <title>Clean try syntax</title>
  <updated-at type="datetime">2010-07-11T05:46:18+01:00</updated-at>
  <user-id type="integer">21653</user-id>
  <version type="integer">13</version>
  <user-name>Amos King</user-name>
  <creator-name>Amos King</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
  <priority-name>Low</priority-name>
  <original-body>The syntax for try is really ugly with array/hash access. ie. list.try(:[],4)

I would really like to see try return a proxy object when the original object is a NilObject.  This would allow try to be used like:

list.try[2]

other methods can be called right off of try:

list.try.size</original-body>
  <latest-body>The syntax for try is really ugly with array/hash access. ie. list.try(:[],4)

I would really like to see try return a proxy object when the original object is a NilObject.  This would allow try to be used like:

list.try[2]

other methods can be called right off of try:

list.try.size</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The syntax for try is really ugly with array/hash access. ie.
list.try(:[],4)&lt;/p&gt;
&lt;p&gt;I would really like to see try return a proxy object when the
original object is a NilObject. This would allow try to be used
like:&lt;/p&gt;
&lt;p&gt;list.try[2]&lt;/p&gt;
&lt;p&gt;other methods can be called right off of try:&lt;/p&gt;
&lt;p&gt;list.try.size&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The syntax for try is really ugly with array/hash access. ie. list.try(:[],4)

I would really like to see try return a proxy object when the original object is a NilObject.  This would allow try to be used like:

list.try[2]

other methods can be called right off of try:

list.try.size</body>
      <body-html>&lt;div&gt;&lt;p&gt;The syntax for try is really ugly with array/hash access. ie.
list.try(:[],4)&lt;/p&gt;
&lt;p&gt;I would really like to see try return a proxy object when the
original object is a NilObject. This would allow try to be used
like:&lt;/p&gt;
&lt;p&gt;list.try[2]&lt;/p&gt;
&lt;p&gt;other methods can be called right off of try:&lt;/p&gt;
&lt;p&gt;list.try.size&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T05:35:56+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T05:35:58+01:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">1</version>
      <user-name>Amos King</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>here is a patch, and it keeps backwards compatibility.</body>
      <body-html>&lt;div&gt;&lt;p&gt;here is a patch, and it keeps backwards compatibility.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T05:41:54+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_support core_ext rails3
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T05:42:05+01:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">2</version>
      <user-name>Amos King</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I also updated the documentation in the same patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I also updated the documentation in the same patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T05:44:52+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_support core_ext patch rails3
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T05:44:57+01:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">3</version>
      <user-name>Amos King</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for the patch, but the syntax something.try[2] is not obvious (for me). try(:[], 2) is simpler with no extra tricks in the implementation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for the patch, but the syntax something.try[2] is not
obvious (for me). try(:[], 2) is simpler with no extra tricks in
the implementation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T12:18:45+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T12:18:51+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">4</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This patch supports both syntaxes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch supports both syntaxes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T13:06:51+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T13:06:57+01:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">5</version>
      <user-name>Amos King</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yes, but I don't see a reason to support a more complex syntax to be used rather rarely (in :[] cases).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, but I don't see a reason to support a more complex syntax
to be used rather rarely (in :[] cases).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T13:11:26+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T15:29:49+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">6</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

Are you really going to disregard this patch because the syntax &quot;is not obvious&quot; for you?

I've worked with 5 or 6 people at my company on a rails project that I'm part time on and I've shown at least 4 of them the try(:[], 4) syntax.  They've all pretty much said afterward that they would have never even thought to use 'try' that way.

something.try[2] makes a lot more sense to me than something.try(:[],2), one says here try this on my object the other says here is a method and some params try them on my object.

&quot;Yes, but I don't see a reason to support a more complex syntax which is used rather rarely.&quot;
Is the patch really introducing a more complex syntax?
try[2] vs try(:[], 2)</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;Are you really going to disregard this patch because the syntax
&quot;is not obvious&quot; for you?&lt;/p&gt;
&lt;p&gt;I've worked with 5 or 6 people at my company on a rails project
that I'm part time on and I've shown at least 4 of them the
try(:[], 4) syntax. They've all pretty much said afterward that
they would have never even thought to use 'try' that way.&lt;/p&gt;
&lt;p&gt;something.try[2] makes a lot more sense to me than
something.try(:[],2), one says here try this on my object the other
says here is a method and some params try them on my object.&lt;/p&gt;
&lt;p&gt;&quot;Yes, but I don't see a reason to support a more complex syntax
which is used rather rarely.&quot; Is the patch really introducing a
more complex syntax?&lt;br&gt;
try[2] vs try(:[], 2)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T14:54:32+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T14:55:26+01:00</updated-at>
      <user-id type="integer">35581</user-id>
      <version type="integer">7</version>
      <user-name>yairgo</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Why not support both syntaxes for a little while, and see where the community goes with it.  Then we can deprecate one, or maybe decide to keep both?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Why not support both syntaxes for a little while, and see where
the community goes with it. Then we can deprecate one, or maybe
decide to keep both?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T15:00:16+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T15:00:19+01:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">8</version>
      <user-name>Amos King</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry, when I said &quot;complex&quot;, I was referring about the implementation required to support such syntax and difficulty to understand what is going on:

@@@ ruby
  self.try(:[], 2) #=&gt; is a method that sends the given method unless self is nil
  self.try[2]      #=&gt; is a method that returns self if not nil, else a proxy that discards any call
@@@

A proxy just adds complexity:

@@@ ruby
  object.try(:freeze) #=&gt; return nil if object nil
  object.try.freeze   #=&gt; freezes the proxy and returns the proxy if object nil
@@@
  
Another possible failure is with to_json:

@@@ ruby
  require 'json'       #=&gt; Ruby 1.9.2
  nil.to_json          #=&gt; &quot;null&quot;
  object.try(:to_json) #=&gt; nil
  object.try.to_json   #=&gt; &quot;#&lt;Try:0x00000101826fe8&gt;&quot;
@@@

There are *several* other cases where returning a proxy might have a surprising behavior. Note that this is nothing new, we had this discussion a long time ago because there were solutions like andand which had a similar approach to try+proxy and we voted to be explicit with try, since it has no special cases or caveats.

*Edited to add proper formatting to block codes.*</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, when I said &quot;complex&quot;, I was referring about the
implementation required to support such syntax and difficulty to
understand what is going on:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  self.try(:[], 2) #=&amp;gt; is a method that sends the given method unless self is nil
  self.try[2]      #=&amp;gt; is a method that returns self if not nil, else a proxy that discards any call&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A proxy just adds complexity:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  object.try(:freeze) #=&amp;gt; return nil if object nil
  object.try.freeze   #=&amp;gt; freezes the proxy and returns the proxy if object nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Another possible failure is with to_json:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  require 'json'       #=&amp;gt; Ruby 1.9.2
  nil.to_json          #=&amp;gt; &quot;null&quot;
  object.try(:to_json) #=&amp;gt; nil
  object.try.to_json   #=&amp;gt; &quot;#&amp;lt;Try:0x00000101826fe8&amp;gt;&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There are &lt;em&gt;several&lt;/em&gt; other cases where returning a proxy
might have a surprising behavior. Note that this is nothing new, we
had this discussion a long time ago because there were solutions
like andand which had a similar approach to try+proxy and we voted
to be explicit with try, since it has no special cases or
caveats.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edited to add proper formatting to block codes.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T15:28:55+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T15:38:26+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">9</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What if the implementation used BasicObject if the implementation is Ruby 1.9?  I'm not in a place where I can test that right now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What if the implementation used BasicObject if the
implementation is Ruby 1.9? I'm not in a place where I can test
that right now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T16:03:24+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T16:03:33+01:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">10</version>
      <user-name>Amos King</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>We could consider that in the future when we drop support for Ruby 1.8.x, but not right now because the implementation would behave considerably different depending on the Ruby version (something that ActiveSupport tries to minimize).</body>
      <body-html>&lt;div&gt;&lt;p&gt;We could consider that in the future when we drop support for
Ruby 1.8.x, but not right now because the implementation would
behave considerably different depending on the Ruby version
(something that ActiveSupport tries to minimize).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T16:11:50+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T16:12:27+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">11</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I agree `maybe_hash_maybe_nil.try(:[], key)` is ugly. But the proxy approach is error-prone and less obvious.

A third way is to use `instance_eval`: `list.try { self[2] }` or `object.try { to_json }`. That's clear, but line-noisey.

I think the simplest choice is to use `try` for simple cases and simply do not use it for the few ugly cases.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree &lt;code&gt;maybe_hash_maybe_nil.try(:[], key)&lt;/code&gt; is ugly.
But the proxy approach is error-prone and less obvious.&lt;/p&gt;
&lt;p&gt;A third way is to use &lt;code&gt;instance_eval&lt;/code&gt;: &lt;code&gt;list.try
{ self[2] }&lt;/code&gt; or &lt;code&gt;object.try { to_json }&lt;/code&gt;. That's
clear, but line-noisey.&lt;/p&gt;
&lt;p&gt;I think the simplest choice is to use &lt;code&gt;try&lt;/code&gt; for
simple cases and simply do not use it for the few ugly cases.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-30T17:15:13+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-06-30T17:15:17+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">12</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>irb(main):003:0&gt; require 'json'
=&gt; true
irb(main):005:0&gt;   Try = Class.new(BasicObject) { def method_missing(*) nil; end }
=&gt; Try
irb(main):006:0&gt; Try.new.to_json
=&gt; nil

This was with 1.9, and with 1.8.7 it did the same thing.

I'm not sure how you got the Try object with the to_json call.</body>
      <body-html>&lt;div&gt;&lt;p&gt;irb(main):003:0&amp;gt; require 'json'&lt;br&gt;
=&amp;gt; true irb(main):005:0&amp;gt; Try = Class.new(BasicObject) { def
method_missing(*) nil; end }&lt;br&gt;
=&amp;gt; Try irb(main):006:0&amp;gt; Try.new.to_json&lt;br&gt;
=&amp;gt; nil&lt;/p&gt;
&lt;p&gt;This was with 1.9, and with 1.8.7 it did the same thing.&lt;/p&gt;
&lt;p&gt;I'm not sure how you got the Try object with the to_json
call.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-11T05:46:14+01:00</created-at>
      <creator-id type="integer">21653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5013</number>
      <permalink>clean-try-syntax</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext documentation patch rails3</tag>
      <title>Clean try syntax</title>
      <updated-at type="datetime">2010-07-11T05:46:18+01:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">13</version>
      <user-name>Amos King</user-name>
      <creator-name>Amos King</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5013</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4a6f37e766d73024deb111eda58c6752dd0576eb</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-30T05:41:54+01:00</created-at>
      <filename>try_proxy.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">581354</id>
      <size type="integer">4135</size>
      <uploader-id type="integer">21653</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/581354/try_proxy.diff</url>
    </attachment>
  </attachments>
</ticket>
