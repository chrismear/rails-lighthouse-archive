<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">5</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-04-09T23:41:50+01:00</created-at>
  <creator-id type="integer">20511</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4391</number>
  <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>url_for doesn't like HashWithIndifferentAccess</title>
  <updated-at type="datetime">2011-04-09T23:41:50+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">29</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>jay</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>url_for doesn't seem to like ActiveSupport::HashWithIndifferentAccess. When used in a view via, say, link_to, the URL produced doesn't seem to be correct, or at least what you'd expect. This is noticeable when trying to replicate the old overwrite_params functionality by using the params Hash and Hash#merge, as params is a HWIA.

For instance, given a set of params where :controller is 'hello' and :action is 'world', then using Hash#merge to overwrite these like so:

@@@ ruby
url_for(params.merge(:controller =&gt; 'foo', :action =&gt; 'bar'))
@@@

You end up with a URL that looks like

@@@
http://example.com/hello/world?action=bar&amp;controller=foo
@@@

whereas you'd probably be expecting

@@@
http://example.com/foo/bar
@@@

The following however produces the desired results:

@@@ ruby
url_for(params.merge(:controller =&gt; 'foo', :action =&gt; 'bar').to_hash.symbolize_keys)
@@@

Stringifying the keys does not produce the desired effect, however.

The attached patch appears to work and doesn't break any existing tests in ActionPack, but being as I'm not really familiar with the Rails 3 code yet compared to 2.x I hope that someone could run with it and create a proper patch, assuming that this is indeed a bug...</original-body>
  <latest-body>url_for doesn't seem to like ActiveSupport::HashWithIndifferentAccess. When used in a view via, say, link_to, the URL produced doesn't seem to be correct, or at least what you'd expect. This is noticeable when trying to replicate the old overwrite_params functionality by using the params Hash and Hash#merge, as params is a HWIA.

For instance, given a set of params where :controller is 'hello' and :action is 'world', then using Hash#merge to overwrite these like so:

@@@ ruby
url_for(params.merge(:controller =&gt; 'foo', :action =&gt; 'bar'))
@@@

You end up with a URL that looks like

@@@
http://example.com/hello/world?action=bar&amp;controller=foo
@@@

whereas you'd probably be expecting

@@@
http://example.com/foo/bar
@@@

The following however produces the desired results:

@@@ ruby
url_for(params.merge(:controller =&gt; 'foo', :action =&gt; 'bar').to_hash.symbolize_keys)
@@@

Stringifying the keys does not produce the desired effect, however.

The attached patch appears to work and doesn't break any existing tests in ActionPack, but being as I'm not really familiar with the Rails 3 code yet compared to 2.x I hope that someone could run with it and create a proper patch, assuming that this is indeed a bug...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;url_for doesn't seem to like
ActiveSupport::HashWithIndifferentAccess. When used in a view via,
say, link_to, the URL produced doesn't seem to be correct, or at
least what you'd expect. This is noticeable when trying to
replicate the old overwrite_params functionality by using the
params Hash and Hash#merge, as params is a HWIA.&lt;/p&gt;
&lt;p&gt;For instance, given a set of params where :controller is 'hello'
and :action is 'world', then using Hash#merge to overwrite these
like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;url_for(params.merge(:controller =&amp;gt; 'foo', :action =&amp;gt; 'bar'))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You end up with a URL that looks like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http://example.com/hello/world?action=bar&amp;amp;controller=foo&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;whereas you'd probably be expecting&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http://example.com/foo/bar&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The following however produces the desired results:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;url_for(params.merge(:controller =&amp;gt; 'foo', :action =&amp;gt; 'bar').to_hash.symbolize_keys)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Stringifying the keys does not produce the desired effect,
however.&lt;/p&gt;
&lt;p&gt;The attached patch appears to work and doesn't break any
existing tests in ActionPack, but being as I'm not really familiar
with the Rails 3 code yet compared to 2.x I hope that someone could
run with it and create a proper patch, assuming that this is indeed
a bug...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>url_for doesn't seem to like ActiveSupport::HashWithIndifferentAccess. When used in a view via, say, link_to, the URL produced doesn't seem to be correct, or at least what you'd expect. This is noticeable when trying to replicate the old overwrite_params functionality by using the params Hash and Hash#merge, as params is a HWIA.

For instance, given a set of params where :controller is 'hello' and :action is 'world', then using Hash#merge to overwrite these like so:

@@@ ruby
url_for(params.merge(:controller =&gt; 'foo', :action =&gt; 'bar'))
@@@

You end up with a URL that looks like

@@@
http://example.com/hello/world?action=bar&amp;controller=foo
@@@

whereas you'd probably be expecting

@@@
http://example.com/foo/bar
@@@

The following however produces the desired results:

@@@ ruby
url_for(params.merge(:controller =&gt; 'foo', :action =&gt; 'bar').to_hash.symbolize_keys)
@@@

Stringifying the keys does not produce the desired effect, however.

The attached patch appears to work and doesn't break any existing tests in ActionPack, but being as I'm not really familiar with the Rails 3 code yet compared to 2.x I hope that someone could run with it and create a proper patch, assuming that this is indeed a bug...</body>
      <body-html>&lt;div&gt;&lt;p&gt;url_for doesn't seem to like
ActiveSupport::HashWithIndifferentAccess. When used in a view via,
say, link_to, the URL produced doesn't seem to be correct, or at
least what you'd expect. This is noticeable when trying to
replicate the old overwrite_params functionality by using the
params Hash and Hash#merge, as params is a HWIA.&lt;/p&gt;
&lt;p&gt;For instance, given a set of params where :controller is 'hello'
and :action is 'world', then using Hash#merge to overwrite these
like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;url_for(params.merge(:controller =&amp;gt; 'foo', :action =&amp;gt; 'bar'))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You end up with a URL that looks like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http://example.com/hello/world?action=bar&amp;amp;controller=foo&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;whereas you'd probably be expecting&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http://example.com/foo/bar&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The following however produces the desired results:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;url_for(params.merge(:controller =&amp;gt; 'foo', :action =&amp;gt; 'bar').to_hash.symbolize_keys)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Stringifying the keys does not produce the desired effect,
however.&lt;/p&gt;
&lt;p&gt;The attached patch appears to work and doesn't break any
existing tests in ActionPack, but being as I'm not really familiar
with the Rails 3 code yet compared to 2.x I hope that someone could
run with it and create a proper patch, assuming that this is indeed
a bug...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-14T06:38:03+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-14T06:38:04+01:00</updated-at>
      <user-id type="integer">20511</user-id>
      <version type="integer">1</version>
      <user-name>jay</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

I'm currently using symbolize_keys to skip this problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;I'm currently using symbolize_keys to skip this problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T08:21:38+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-16T08:21:40+01:00</updated-at>
      <user-id type="integer">821</user-id>
      <version type="integer">2</version>
      <user-name>Francesc Esplugas</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Protip: you're going to need some tests to show exactly what it fixes.

But other than that, it does indeed work and fix a few other bugs that people have been experiencing - like the following: https://rails.lighthouseapp.com/projects/8994/tickets/4419-current_page-in-a-partial-template-does-not-work#ticket-4419-3

Add a few test cases and then it'll get accepted.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Protip: you're going to need some tests to show exactly what it
fixes.&lt;/p&gt;
&lt;p&gt;But other than that, it does indeed work and fix a few other
bugs that people have been experiencing - like the following:
&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4419-current_page-in-a-partial-template-does-not-work#ticket-4419-3&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/4419-current_...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add a few test cases and then it'll get accepted.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T22:47:58+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-16T22:48:01+01:00</updated-at>
      <user-id type="integer">40660</user-id>
      <version type="integer">3</version>
      <user-name>Lenary</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T23:35:07+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hashwithindifferentaccess url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-16T23:35:10+01:00</updated-at>
      <user-id type="integer">40660</user-id>
      <version type="integer">4</version>
      <user-name>Lenary</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'll take more of a look at this tomorrow, and can guide you a little if you want it. Sorry for being condescending earlier.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll take more of a look at this tomorrow, and can guide you a
little if you want it. Sorry for being condescending earlier.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-17T00:12:47+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hashwithindifferentaccess url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-17T00:12:49+01:00</updated-at>
      <user-id type="integer">40660</user-id>
      <version type="integer">5</version>
      <user-name>Lenary</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>No prob. If there's any tests that need writing I can give it a shot... I just figured that this patch, although working, probably wasn't the best way of doing things as it seems to duplicate code by calling doing to_hash.symbolize_keys in two different places. I was just kind of hoping that someone more familiar with the code would know of a better fix, but if this patch is acceptable then all the better. I can write a few tests if it will help, although I don't really know how extensive the coverage should be if this patch affects other tickets.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No prob. If there's any tests that need writing I can give it a
shot... I just figured that this patch, although working, probably
wasn't the best way of doing things as it seems to duplicate code
by calling doing to_hash.symbolize_keys in two different places. I
was just kind of hoping that someone more familiar with the code
would know of a better fix, but if this patch is acceptable then
all the better. I can write a few tests if it will help, although I
don't really know how extensive the coverage should be if this
patch affects other tickets.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T00:26:20+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hashwithindifferentaccess url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T00:26:23+01:00</updated-at>
      <user-id type="integer">20511</user-id>
      <version type="integer">6</version>
      <user-name>jay</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Lenary, did you take a look at this ticket yet? What did you think of it?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Lenary, did you take a look at this ticket yet? What did you
think of it?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T01:40:42+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hashwithindifferentaccess url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T01:40:45+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">7</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It was not clear to me if this problem is only in rails3 branch or in 2-3-stable branch too. It turns out that 2-3-stable branch works only. This is an issue only with rails3 branch. Adding this comment so that it to clear to others who look at this ticket. 

Someone should put right tag. There are so many of them related to rails3 that I am not sure which one I should apply.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It was not clear to me if this problem is only in rails3 branch
or in 2-3-stable branch too. It turns out that 2-3-stable branch
works only. This is an issue only with rails3 branch. Adding this
comment so that it to clear to others who look at this ticket.&lt;/p&gt;
&lt;p&gt;Someone should put right tag. There are so many of them related
to rails3 that I am not sure which one I should apply.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T04:11:07+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hashwithindifferentaccess url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T04:11:10+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T04:28:41+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: hashwithindifferentaccess url_for
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hashwithindifferentaccess rails3 url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T04:28:44+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">9</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Patch with tests</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch with tests&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T05:35:36+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: hashwithindifferentaccess rails3 url_for
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T05:35:40+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This patch still doesn't feel right IMHO. using hashwithindifferent access should mean that we don't get these issues and don't have to call @to_hash.symbolize_keys@ on the hash to get this to work. I'm going to have a much closer look later today 

Can we not apply this patch until then. This to me kind-of feels like were barking up the wrong tree, but I need time to look at it properly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch still doesn't feel right IMHO. using
hashwithindifferent access should mean that we don't get these
issues and don't have to call &lt;code&gt;to_hash.symbolize_keys&lt;/code&gt;
on the hash to get this to work. I'm going to have a much closer
look later today&lt;/p&gt;
&lt;p&gt;Can we not apply this patch until then. This to me kind-of feels
like were barking up the wrong tree, but I need time to look at it
properly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T06:41:40+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T06:41:42+01:00</updated-at>
      <user-id type="integer">40660</user-id>
      <version type="integer">11</version>
      <user-name>Lenary</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">52142</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>A couple of things I've noticed:

- Using Strings as options keys to url_for seems to be hit and miss. For instance, if I put the following in a view:

@@@
&lt;%= url_for('controller' =&gt; 'c', 'action' =&gt; 'a' %&gt;
@@@

Produces '/c/a' as expected. However, doing the same thing in a controller produces http://example.com/?action=a&amp;controller=c.

- The following results in an ActionController::RoutingError exception when done in an irb console:

@@@
irb(main):001:0&gt; app.url_for('controller' =&gt; 'c', 'action' =&gt; 'a')
ActionController::RoutingError: No route matches {&quot;action&quot;=&gt;&quot;a&quot;, &quot;controller&quot;=&gt;&quot;c&quot;}
@@@

This while using a very simple routes.rb set up that should produce a valid route:

@@@
TestApp::Application.routes.draw do
  match ':controller(/:action(/:id(.:format)))' =&gt; '#index'
end
@@@

The same route works for the example in the view, however.

- In all cases, using Symbols instead of Strings for keys produces the expected results.

- HashWithIndifferentAccess appears to always output its keys as Strings, i.e. when using the hash as an Enumerable or calling #keys or whatever.

So it appears the problem isn't necessarily with HWIA, but rather with using Strings as keys versus Symbols, at least in some cases...?</body>
      <body-html>&lt;div&gt;&lt;p&gt;A couple of things I've noticed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using Strings as options keys to url_for seems to be hit and
miss. For instance, if I put the following in a view:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= url_for('controller' =&amp;gt; 'c', 'action' =&amp;gt; 'a' %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Produces '/c/a' as expected. However, doing the same thing in a
controller produces &lt;a href=
&quot;http://example.com/?action=a&amp;amp;controller=c&quot;&gt;http://example.com/?action=a&amp;amp;amp;controller=c&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The following results in an ActionController::RoutingError
exception when done in an irb console:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;irb(main):001:0&amp;gt; app.url_for('controller' =&amp;gt; 'c', 'action' =&amp;gt; 'a')
ActionController::RoutingError: No route matches {&quot;action&quot;=&amp;gt;&quot;a&quot;, &quot;controller&quot;=&amp;gt;&quot;c&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This while using a very simple routes.rb set up that should
produce a valid route:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;TestApp::Application.routes.draw do
  match ':controller(/:action(/:id(.:format)))' =&amp;gt; '#index'
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The same route works for the example in the view, however.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In all cases, using Symbols instead of Strings for keys produces
the expected results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashWithIndifferentAccess appears to always output its keys as
Strings, i.e. when using the hash as an Enumerable or calling #keys
or whatever.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So it appears the problem isn't necessarily with HWIA, but
rather with using Strings as keys versus Symbols, at least in some
cases...?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T07:13:15+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 6601
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T07:13:19+01:00</updated-at>
      <user-id type="integer">20511</user-id>
      <version type="integer">12</version>
      <user-name>jay</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Cezary Baginski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Oh my, sorry for reassigning the person responsible, that was a slip of the mouse apparently...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh my, sorry for reassigning the person responsible, that was a
slip of the mouse apparently...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T07:13:58+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 52142
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T07:13:59+01:00</updated-at>
      <user-id type="integer">20511</user-id>
      <version type="integer">13</version>
      <user-name>jay</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Jay, thanks for all the legwork. I'll take a proper look over what's happening and propose a few solutions in this thread later today.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jay, thanks for all the legwork. I'll take a proper look over
what's happening and propose a few solutions in this thread later
today.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T07:21:30+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T07:21:33+01:00</updated-at>
      <user-id type="integer">40660</user-id>
      <version type="integer">14</version>
      <user-name>Lenary</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I think this is a better way to solve it.
symbolize_keys on hash with indifferent access for me should return a hash with symbolized keys.

Deeper on the framework things doesn't expect a HWIA so we need to convert on the helper and that's what symbolize_keys should do</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this is a better way to solve it.&lt;br&gt;
symbolize_keys on hash with indifferent access for me should return
a hash with symbolized keys.&lt;/p&gt;
&lt;p&gt;Deeper on the framework things doesn't expect a HWIA so we need
to convert on the helper and that's what symbolize_keys should
do&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T15:59:35+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T15:59:39+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">15</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Yeah, this appears to be the behaviour in 2.3. In 2.3, calling symbolize_keys or stringify_keys returns an actual Hash with the appropriate keys, whereas in 3.0 they return a HWIA:

@@@
# in 2.3:
&gt;&gt; HashWithIndifferentAccess.new({ :one =&gt; :two }).stringify_keys.class
=&gt; Hash
&gt;&gt; HashWithIndifferentAccess.new({ :one =&gt; :two }).symbolize_keys.class
=&gt; Hash

# in 3:
irb(main):005:0&gt; HashWithIndifferentAccess.new({ :one =&gt; :two }).stringify_keys.class
=&gt; ActiveSupport::HashWithIndifferentAccess
irb(main):006:0&gt; HashWithIndifferentAccess.new({ :one =&gt; :two }).symbolize_keys.class
=&gt; ActiveSupport::HashWithIndifferentAccess
@@@

That being the case and if symbolize_keys is to return a Hash with symbolized keys, then I suppose stringify_keys should also return a Hash with stringified keys, yeah?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, this appears to be the behaviour in 2.3. In 2.3, calling
symbolize_keys or stringify_keys returns an actual Hash with the
appropriate keys, whereas in 3.0 they return a HWIA:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# in 2.3:
&amp;gt;&amp;gt; HashWithIndifferentAccess.new({ :one =&amp;gt; :two }).stringify_keys.class
=&amp;gt; Hash
&amp;gt;&amp;gt; HashWithIndifferentAccess.new({ :one =&amp;gt; :two }).symbolize_keys.class
=&amp;gt; Hash

# in 3:
irb(main):005:0&amp;gt; HashWithIndifferentAccess.new({ :one =&amp;gt; :two }).stringify_keys.class
=&amp;gt; ActiveSupport::HashWithIndifferentAccess
irb(main):006:0&amp;gt; HashWithIndifferentAccess.new({ :one =&amp;gt; :two }).symbolize_keys.class
=&amp;gt; ActiveSupport::HashWithIndifferentAccess&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That being the case and if symbolize_keys is to return a Hash
with symbolized keys, then I suppose stringify_keys should also
return a Hash with stringified keys, yeah?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T16:18:31+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T16:18:34+01:00</updated-at>
      <user-id type="integer">20511</user-id>
      <version type="integer">16</version>
      <user-name>jay</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I've added a test for the symbolize_keys method and re upload the patch.
Now looks good.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've added a test for the symbolize_keys method and re upload
the patch.&lt;br&gt;
Now looks good.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T17:13:07+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T17:13:11+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">17</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>For me HashWithIndifferentAccess.new({ :one =&gt; :two }).stringify_keys.class should return ActiveSupport::HashWithIndifferentAccess
 but we need to do the same on both versions i think.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For me HashWithIndifferentAccess.new({ :one =&amp;gt; :two
}).stringify_keys.class should return
ActiveSupport::HashWithIndifferentAccess&lt;br&gt;
but we need to do the same on both versions i think.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T17:26:01+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T17:26:05+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">18</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T17:26:11+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 6601
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T17:26:16+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">19</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I am just about to take a good look at this now. Sorry i haven't got around to it earlier.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am just about to take a good look at this now. Sorry i haven't
got around to it earlier.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T20:25:24+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T20:25:25+01:00</updated-at>
      <user-id type="integer">40660</user-id>
      <version type="integer">20</version>
      <user-name>Lenary</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I am no clearer on what is going on with this. I took a look at some raw output from url_for, and got some of the way with that, but then got to where you had all got to.

I have now tried santiago's patch, and it hasn't really worked for me (still getting controller and action params in querystring when in controller). is the latest one ( https://rails.lighthouseapp.com/projects/8994/tickets/4391/a/491493/url_for.patch ) the entire patch, or do i have to apply more than that?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am no clearer on what is going on with this. I took a look at
some raw output from url_for, and got some of the way with that,
but then got to where you had all got to.&lt;/p&gt;
&lt;p&gt;I have now tried santiago's patch, and it hasn't really worked
for me (still getting controller and action params in querystring
when in controller). is the latest one ( &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4391/a/491493/url_for.patch&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/4391/a/491493...&lt;/a&gt;
) the entire patch, or do i have to apply more than that?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T22:54:29+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-21T22:54:33+01:00</updated-at>
      <user-id type="integer">40660</user-id>
      <version type="integer">21</version>
      <user-name>Lenary</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3&quot;&gt;
http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-22T01:20:23+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-22T01:50:24+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">22</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3]) url_for now works with HashWithIndifferentAccess ht jay [#4391 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3&quot;
title=
&quot;Changeset [5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3]&quot;&gt;[5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3]&lt;/a&gt;)
url_for now works with HashWithIndifferentAccess ht jay [&lt;a href=
&quot;/projects/8994/tickets/4391&quot; title=&quot;Ticket #4391&quot;&gt;#4391&lt;/a&gt;
state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3&quot;&gt;
http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-22T01:54:34+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-22T01:54:36+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">23</version>
      <user-name>Repository</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>The applied patch in http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3 is partially there, but `url_for` still fails with stringified keys in a controller.

I think that `ActionDispatch::Routing::Generator#normalize_options!` and `#normalize_controller_action_id!` are be the culprits. They both assume symbolized keys when they do their options merging, and end up creating options Hashes that sort of duplicate their entries because of it. In the cases where HWIAs are used this merging obviously goes a lot smoother, but in the case of regular Hashes with stringified keys things start to go awry.

For instance, in the controller given following:

@@@
url_for('controller' =&gt; 'c', 'action' =&gt; 'a')
@@@

This will pass a Hash with stringified keys to `ActionDispatch::Routing::RouteSet.url_for`. When `normalize_options!` gets a hold of it, it won't do much of anything because it specifically looks for symbolized keys and we aren't dealing with a HWIA at all.

In my set up, I'm calling `url_for` from `MainController#index`. `normalize_controller_action_id!` tries to combine the original options Hash with `@recall`, which is now set to `{:controller =&gt; 'main', :action =&gt; 'index'}`, thus using symbolized keys. The `use_recall_for` method uses Symbols to try and fill in any missing parameters, but it ends up duplicating the parameters since we're not using a HWIA. The options Hash now looks like the following:

@@@
{:controller=&gt;&quot;main&quot;, &quot;action&quot;=&gt;&quot;a&quot;, :action=&gt;&quot;index&quot;, &quot;controller&quot;=&gt;&quot;c&quot;}
@@@

This later causes all sorts of problems when other methods like `handle_nil_action!` try to delete entries from the options Hash because while they may delete `:action` they'll be leaving behind `'action'`. Eventually these duplicate keys seem to cause problems later on down the line in rack-mount and the like.

Part of the reason `url_for` is working with both stringified keys in views is because the keys are being symbolized long before they ever make it to `normalize_options!` and the like, whereas in ActionDispatch they are still being untouched, and thus you could slip HWIAs or Hashes with stringified keys in there. My original assumption that only HWIAs were causing the problem then is a little off -- it's actually more of a case of stringified keys.

Anyways, that's what I've managed to figure out. So, that being the case, another quick patch seems to be needed -- the controller version of `url_for` needs to make sure that it's passing along a symbolized Hash.

I've attached a patch with a couple of tests and it seems to be working now for me. Note that in this case I don't believe we'd need to call `to_hash` as we're actually calling `symbolize_keys` on `url_options` after the merging, and `url_options` is already a Hash.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The applied patch in &lt;a href=
&quot;http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd8fdd6da4d3&quot;&gt;
http://github.com/rails/rails/commit/5c9c30ac65d25bd5a83d773739c2cd...&lt;/a&gt;
is partially there, but &lt;code&gt;url_for&lt;/code&gt; still fails with
stringified keys in a controller.&lt;/p&gt;
&lt;p&gt;I think that
&lt;code&gt;ActionDispatch::Routing::Generator#normalize_options!&lt;/code&gt;
and &lt;code&gt;#normalize_controller_action_id!&lt;/code&gt; are be the
culprits. They both assume symbolized keys when they do their
options merging, and end up creating options Hashes that sort of
duplicate their entries because of it. In the cases where HWIAs are
used this merging obviously goes a lot smoother, but in the case of
regular Hashes with stringified keys things start to go awry.&lt;/p&gt;
&lt;p&gt;For instance, in the controller given following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;url_for('controller' =&amp;gt; 'c', 'action' =&amp;gt; 'a')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will pass a Hash with stringified keys to
&lt;code&gt;ActionDispatch::Routing::RouteSet.url_for&lt;/code&gt;. When
&lt;code&gt;normalize_options!&lt;/code&gt; gets a hold of it, it won't do much
of anything because it specifically looks for symbolized keys and
we aren't dealing with a HWIA at all.&lt;/p&gt;
&lt;p&gt;In my set up, I'm calling &lt;code&gt;url_for&lt;/code&gt; from
&lt;code&gt;MainController#index&lt;/code&gt;.
&lt;code&gt;normalize_controller_action_id!&lt;/code&gt; tries to combine the
original options Hash with &lt;code&gt;@recall&lt;/code&gt;, which is now set
to &lt;code&gt;{:controller =&amp;gt; 'main', :action =&amp;gt; 'index'}&lt;/code&gt;,
thus using symbolized keys. The &lt;code&gt;use_recall_for&lt;/code&gt; method
uses Symbols to try and fill in any missing parameters, but it ends
up duplicating the parameters since we're not using a HWIA. The
options Hash now looks like the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{:controller=&amp;gt;&quot;main&quot;, &quot;action&quot;=&amp;gt;&quot;a&quot;, :action=&amp;gt;&quot;index&quot;, &quot;controller&quot;=&amp;gt;&quot;c&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This later causes all sorts of problems when other methods like
&lt;code&gt;handle_nil_action!&lt;/code&gt; try to delete entries from the
options Hash because while they may delete &lt;code&gt;:action&lt;/code&gt;
they'll be leaving behind &lt;code&gt;'action'&lt;/code&gt;. Eventually these
duplicate keys seem to cause problems later on down the line in
rack-mount and the like.&lt;/p&gt;
&lt;p&gt;Part of the reason &lt;code&gt;url_for&lt;/code&gt; is working with both
stringified keys in views is because the keys are being symbolized
long before they ever make it to &lt;code&gt;normalize_options!&lt;/code&gt;
and the like, whereas in ActionDispatch they are still being
untouched, and thus you could slip HWIAs or Hashes with stringified
keys in there. My original assumption that only HWIAs were causing
the problem then is a little off -- it's actually more of a case of
stringified keys.&lt;/p&gt;
&lt;p&gt;Anyways, that's what I've managed to figure out. So, that being
the case, another quick patch seems to be needed -- the controller
version of &lt;code&gt;url_for&lt;/code&gt; needs to make sure that it's
passing along a symbolized Hash.&lt;/p&gt;
&lt;p&gt;I've attached a patch with a couple of tests and it seems to be
working now for me. Note that in this case I don't believe we'd
need to call &lt;code&gt;to_hash&lt;/code&gt; as we're actually calling
&lt;code&gt;symbolize_keys&lt;/code&gt; on &lt;code&gt;url_options&lt;/code&gt; after the
merging, and &lt;code&gt;url_options&lt;/code&gt; is already a Hash.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-22T02:46:01+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-22T02:46:06+01:00</updated-at>
      <user-id type="integer">20511</user-id>
      <version type="integer">24</version>
      <user-name>jay</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>(from [275e839b8dfa3cf2bdedf1b31302dec20ac96a46]) Ensure that url_for uses symbolized keys in the controller. [#4391]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/275e839b8dfa3cf2bdedf1b31302dec20ac96a46</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/275e839b8dfa3cf2bdedf1b31302dec20ac96a46&quot;
title=
&quot;Changeset [275e839b8dfa3cf2bdedf1b31302dec20ac96a46]&quot;&gt;[275e839b8dfa3cf2bdedf1b31302dec20ac96a46]&lt;/a&gt;)
Ensure that url_for uses symbolized keys in the controller.
[&lt;a href=&quot;/projects/8994/tickets/4391&quot; title=
&quot;Ticket #4391&quot;&gt;#4391&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/275e839b8dfa3cf2bdedf1b31302dec20ac96a46&quot;&gt;
http://github.com/rails/rails/commit/275e839b8dfa3cf2bdedf1b31302de...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-22T15:48:09+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-22T15:48:11+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">25</version>
      <user-name>Repository</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>We have fixed this issue in another way now commits here http://github.com/rails/rails/compare/275e839...ebf9820</body>
      <body-html>&lt;div&gt;&lt;p&gt;We have fixed this issue in another way now commits here
&lt;a href=&quot;http://github.com/rails/rails/compare/275e839...ebf9820&quot;&gt;http://github.com/rails/rails/compare/275e839...ebf9820&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-22T17:47:01+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>hashwithindifferentaccess patch url_for</tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-04-22T17:47:04+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">26</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:54:42+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: hashwithindifferentaccess patch url_for
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-10-09T21:54:48+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">28</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:51+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-10-15T23:01:51+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">29</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>This &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra footwear&lt;/a&gt;&lt;/strong&gt; is called a modern vintage and has been since their   introduction in 2003 where they began in Europe. Every &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; has some type of   ornament, adornment or hardware and is comprised of aged leather that is bought   from around the world. These &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra uk&lt;/a&gt;&lt;/strong&gt; are culturally engaging and allow for the woman   wearing them to be enveloped in luxury.With new cuts and styles and hand stitched shoes, these &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;, heels or flats will make every foot look like it stepped out of vintage Hollywood. This   &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland shoes&lt;/a&gt;&lt;/strong&gt; have been worn and coveted by many of the most famous females in   recent history. One such &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach outlet&lt;/a&gt;&lt;/strong&gt;, Jennifer Aniston, wears them in public and at   home.This company makes many different unique styles of &lt;strong&gt;&lt;strong&gt;&lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;bags outlet&lt;/strong&gt;&lt;/a&gt; from ankle booties   to sandals, pumps, &lt;strong&gt;&lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets online&lt;/strong&gt;&lt;/a&gt;, platforms and wedges. One &lt;strong&gt;&lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bag&lt;/strong&gt;&lt;/a&gt; in particular is ideal   for the gothic style sense; it is patent leather and laces up the front of the   shaft. There are also zippers on each side, and this shoe offers a flat heel of   a half inch.Another great &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets sale&lt;/strong&gt;&lt;/a&gt; is featured in People's Style Watch and is called a   platform bootie. This &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;&lt;strong&gt;ture religion jeans&lt;/strong&gt;&lt;/a&gt; has a raised panel in front of the ankle as well as   a heel that measures 4.5 inches. The front offers a leather bandage appearance   and is considered high fashion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra
footwear&lt;/a&gt;&lt;/strong&gt; is called a modern vintage and has been since
their introduction in 2003 where they began in Europe. Every
&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt;
has some type of ornament, adornment or hardware and is comprised
of aged leather that is bought from around the world. These
&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra uk&lt;/a&gt;&lt;/strong&gt; are
culturally engaging and allow for the woman wearing them to be
enveloped in luxury.With new cuts and styles and hand stitched
shoes, these &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;,
heels or flats will make every foot look like it stepped out of
vintage Hollywood. This &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland shoes&lt;/a&gt;&lt;/strong&gt;
have been worn and coveted by many of the most famous females in
recent history. One such &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach outlet&lt;/a&gt;&lt;/strong&gt;, Jennifer
Aniston, wears them in public and at home.This company makes many
different unique styles of &lt;strong&gt;&lt;strong&gt;&lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;bags
outlet&lt;/strong&gt;&lt;/a&gt; from ankle booties to sandals, pumps,
&lt;strong&gt;&lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets
online&lt;/strong&gt;&lt;/a&gt;, platforms and wedges. One &lt;strong&gt;&lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton
bag&lt;/strong&gt;&lt;/a&gt; in particular is ideal for the gothic style sense;
it is patent leather and laces up the front of the shaft. There are
also zippers on each side, and this shoe offers a flat heel of a
half inch.Another great &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets
sale&lt;/strong&gt;&lt;/a&gt; is featured in People's Style Watch and is called
a platform bootie. This &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;&lt;strong&gt;ture religion
jeans&lt;/strong&gt;&lt;/a&gt; has a raised panel in front of the ankle as well
as a heel that measures 4.5 inches. The front offers a leather
bandage appearance and is considered high
fashion.&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-06T08:16:56+00:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2010-11-08T23:12:00+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">30</version>
      <user-name>jim123456</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>student of the well-known big &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt;  words, there are two situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers shoes&lt;/a&gt;  particularly good in all aspects and all  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good students are particularly bad bad student. However,  &lt;a href=&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not a particularly good good student nor is it particularly  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student. However, more often, he can show himself, for &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt;  example, what show what activities and the like, especially &lt;a href=&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap Vibram Fivefingers Women Shoes&lt;/a&gt;  basketball</body>
      <body-html>&lt;div&gt;&lt;p&gt;student of the well-known big &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt; words, there are two
situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers
shoes&lt;/a&gt; particularly good in all aspects and all &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good
students are particularly bad bad student. However, &lt;a href=
&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men
Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not
a particularly good good student nor is it particularly &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student.
However, more often, he can show himself, for &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt; example, what
show what activities and the like, especially &lt;a href=
&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap
Vibram Fivefingers Women Shoes&lt;/a&gt; basketball&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-28T08:18:28+00:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2011-01-28T08:44:30+00:00</updated-at>
      <user-id type="integer">134634</user-id>
      <version type="integer">31</version>
      <user-name>songqiudong</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T06:54:09+00:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2011-02-16T07:20:08+00:00</updated-at>
      <user-id type="integer">137258</user-id>
      <version type="integer">32</version>
      <user-name>fgfhnmn</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:48:39+00:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2011-02-19T09:28:20+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">33</version>
      <user-name>mklo</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Our online shop can meet all the demands.It is the best source of buying Cheap 
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you will come across unbelievable surprise. We have a big variety of jersey on sale in different styles and colors.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Our online shop can meet all the demands.It is the best source
of buying Cheap&lt;br&gt;
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you
will come across unbelievable surprise. We have a big variety of
jersey on sale in different styles and colors.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-09T03:25:18+01:00</created-at>
      <creator-id type="integer">20511</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4391</number>
      <permalink>url_for-doesnt-like-hashwithindifferentaccess</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>url_for doesn't like HashWithIndifferentAccess</title>
      <updated-at type="datetime">2011-04-09T23:41:50+01:00</updated-at>
      <user-id type="integer">144925</user-id>
      <version type="integer">34</version>
      <user-name>jerseysforsales</user-name>
      <creator-name>jay</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4391</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f0d208f326863edf125852a24d85bea78c9242d4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-14T06:38:03+01:00</created-at>
      <filename>0001-convert-hashwithindifferentaccess-options-to-regular.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">481621</id>
      <size type="integer">1692</size>
      <uploader-id type="integer">20511</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/481621/0001-convert-hashwithindifferentaccess-options-to-regular.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>4cd76c1c5a5fa2bfc763c3f465e3b398d72da598</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-21T05:35:36+01:00</created-at>
      <filename>url_for.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">490780</id>
      <size type="integer">2431</size>
      <uploader-id type="integer">40272</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/490780/url_for.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>29298b3767caaebdae55b8b564bb6c532a12f81e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-21T15:59:35+01:00</created-at>
      <filename>url_for.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">491374</id>
      <size type="integer">2371</size>
      <uploader-id type="integer">40272</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/491374/url_for.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>f582fc51941ba9d93a608aed4759cdee3e88eda0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-21T17:13:07+01:00</created-at>
      <filename>url_for.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">491493</id>
      <size type="integer">3522</size>
      <uploader-id type="integer">40272</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/491493/url_for.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>3b7f82826aa533226e8e4a57b4363fa9d92f35a0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-22T02:46:01+01:00</created-at>
      <filename>0001-ensure-that-url_for-uses-symbolized-keys-in-the-cont.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">492360</id>
      <size type="integer">2002</size>
      <uploader-id type="integer">20511</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/492360/0001-ensure-that-url_for-uses-symbolized-keys-in-the-cont.patch</url>
    </attachment>
  </attachments>
</ticket>
