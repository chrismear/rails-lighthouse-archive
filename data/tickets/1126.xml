<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">83</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-27T19:10:32+01:00</created-at>
  <creator-id type="integer">33219</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1126</number>
  <permalink>array-to_xml-fix</permalink>
  <priority type="integer">38</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bug core_ext patch</tag>
  <title>Array to_xml fix</title>
  <updated-at type="datetime">2008-10-31T17:42:33+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>Rudolf Gavlas</creator-name>
  <assigned-user-name>DHH</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1126</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body># Short description: #
See the patch, the hash passed as argument to recursing `to_xml` method is pointing to the same structure as the original `opts` hash.

`$ rails -v
Rails 2.0.2
$ ruby -v
ruby 1.8.6 (2007-03-13 patchlevel 0) [i386-netbsdelf]`

(rails console)
before the patch:

`&gt;&gt; print [[], []].to_xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;arrays type=&quot;array&quot;&gt;
  &lt;array type=&quot;array&quot;/&gt;
  &lt;nil-classes type=&quot;array&quot;/&gt;
&lt;/arrays&gt;
=&gt; nil`

after the patch:

`&gt;&gt; print [[],[]].to_xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;arrays type=&quot;array&quot;&gt;
  &lt;array type=&quot;array&quot;/&gt;
  &lt;array type=&quot;array&quot;/&gt;
&lt;/arrays&gt;
=&gt; nil`


# Explanation: #
After the `merge!` method on line:

`each { |e| e.to_xml(opts.merge({ :skip_instruct =&gt; true })) }`

the hash passed to next iteration of `to_xml` method is pointing to the same structure as the forcibly merged `opts` hash. [1] Then after:

`root     = options.delete(:root).to_s`

this parameter is deleted from the original `opts` hash too and to the next iteration are going wrong `opts`.

As there is no need to use `merge!` here because simple `merge` returns the same, and we repeat the merging in each iteration (no need to forcibly change the original hash), I propose this patch.

[1]
It is the same as in this example:
`$ irb
irb(main):001:0&gt; a = {'a' =&gt; 1, 'b' =&gt; 2}
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2}
irb(main):002:0&gt; b = {'b' =&gt; 3, 'c' =&gt; 4}
=&gt; {&quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):003:0&gt; c = a.merge!(b)
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):004:0&gt; a
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):005:0&gt; c
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):006:0&gt; c.delete('c')
=&gt; 4
irb(main):007:0&gt; a
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3}
irb(main):008:0&gt; c
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3}`</original-body>
  <latest-body># Short description: #
See the patch, the hash passed as argument to recursing `to_xml` method is pointing to the same structure as the original `opts` hash.

`$ rails -v
Rails 2.0.2
$ ruby -v
ruby 1.8.6 (2007-03-13 patchlevel 0) [i386-netbsdelf]`

(rails console)
before the patch:

`&gt;&gt; print [[], []].to_xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;arrays type=&quot;array&quot;&gt;
  &lt;array type=&quot;array&quot;/&gt;
  &lt;nil-classes type=&quot;array&quot;/&gt;
&lt;/arrays&gt;
=&gt; nil`

after the patch:

`&gt;&gt; print [[],[]].to_xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;arrays type=&quot;array&quot;&gt;
  &lt;array type=&quot;array&quot;/&gt;
  &lt;array type=&quot;array&quot;/&gt;
&lt;/arrays&gt;
=&gt; nil`


# Explanation: #
After the `merge!` method on line:

`each { |e| e.to_xml(opts.merge({ :skip_instruct =&gt; true })) }`

the hash passed to next iteration of `to_xml` method is pointing to the same structure as the forcibly merged `opts` hash. [1] Then after:

`root     = options.delete(:root).to_s`

this parameter is deleted from the original `opts` hash too and to the next iteration are going wrong `opts`.

As there is no need to use `merge!` here because simple `merge` returns the same, and we repeat the merging in each iteration (no need to forcibly change the original hash), I propose this patch.

[1]
It is the same as in this example:
`$ irb
irb(main):001:0&gt; a = {'a' =&gt; 1, 'b' =&gt; 2}
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2}
irb(main):002:0&gt; b = {'b' =&gt; 3, 'c' =&gt; 4}
=&gt; {&quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):003:0&gt; c = a.merge!(b)
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):004:0&gt; a
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):005:0&gt; c
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):006:0&gt; c.delete('c')
=&gt; 4
irb(main):007:0&gt; a
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3}
irb(main):008:0&gt; c
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3}`</latest-body>
  <original-body-html>&lt;div&gt;&lt;h1&gt;Short description:&lt;/h1&gt;
&lt;p&gt;See the patch, the hash passed as argument to recursing
&lt;code&gt;to_xml&lt;/code&gt; method is pointing to the same structure as the
original &lt;code&gt;opts&lt;/code&gt; hash.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ rails -v Rails 2.0.2 $ ruby -v ruby 1.8.6 (2007-03-13
patchlevel 0) [i386-netbsdelf]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(rails console) before the patch:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt; print [[], []].to_xml &amp;lt;?xml version=&quot;1.0&quot;
encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; nil&lt;/p&gt;
&lt;p&gt;after the patch:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt; print [[],[]].to_xml &amp;lt;?xml version=&quot;1.0&quot;
encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; nil&lt;/p&gt;
&lt;h1&gt;Explanation:&lt;/h1&gt;
&lt;p&gt;After the &lt;code&gt;merge!&lt;/code&gt; method on line:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;each { |e| e.to_xml(opts.merge({ :skip_instruct =&amp;gt; true
})) }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the hash passed to next iteration of &lt;code&gt;to_xml&lt;/code&gt; method
is pointing to the same structure as the forcibly merged
&lt;code&gt;opts&lt;/code&gt; hash. &lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; Then after:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;root = options.delete(:root).to_s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;this parameter is deleted from the original &lt;code&gt;opts&lt;/code&gt;
hash too and to the next iteration are going wrong
&lt;code&gt;opts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As there is no need to use &lt;code&gt;merge!&lt;/code&gt; here because
simple &lt;code&gt;merge&lt;/code&gt; returns the same, and we repeat the
merging in each iteration (no need to forcibly change the original
hash), I propose this patch.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; It is the same as in this example: &lt;code&gt;$
irb irb(main):001:0&amp;gt; a = {'a' =&amp;gt; 1, 'b' =&amp;gt; 2} =&amp;gt;
{&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;2} irb(main):002:0&amp;gt; b = {'b' =&amp;gt; 3, 'c'
=&amp;gt; 4} =&amp;gt; {&quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4} irb(main):003:0&amp;gt; c =
a.merge!(b) =&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4}
irb(main):004:0&amp;gt; a =&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4}
irb(main):005:0&amp;gt; c =&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4}
irb(main):006:0&amp;gt; c.delete('c') =&amp;gt; 4 irb(main):007:0&amp;gt; a
=&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3} irb(main):008:0&amp;gt; c =&amp;gt;
{&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3}&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body># Short description: #
See the patch, the hash passed as argument to recursing `to_xml` method is pointing to the same structure as the original `opts` hash.

`$ rails -v
Rails 2.0.2
$ ruby -v
ruby 1.8.6 (2007-03-13 patchlevel 0) [i386-netbsdelf]`

(rails console)
before the patch:

`&gt;&gt; print [[], []].to_xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;arrays type=&quot;array&quot;&gt;
  &lt;array type=&quot;array&quot;/&gt;
  &lt;nil-classes type=&quot;array&quot;/&gt;
&lt;/arrays&gt;
=&gt; nil`

after the patch:

`&gt;&gt; print [[],[]].to_xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;arrays type=&quot;array&quot;&gt;
  &lt;array type=&quot;array&quot;/&gt;
  &lt;array type=&quot;array&quot;/&gt;
&lt;/arrays&gt;
=&gt; nil`


# Explanation: #
After the `merge!` method on line:

`each { |e| e.to_xml(opts.merge({ :skip_instruct =&gt; true })) }`

the hash passed to next iteration of `to_xml` method is pointing to the same structure as the forcibly merged `opts` hash. [1] Then after:

`root     = options.delete(:root).to_s`

this parameter is deleted from the original `opts` hash too and to the next iteration are going wrong `opts`.

As there is no need to use `merge!` here because simple `merge` returns the same, and we repeat the merging in each iteration (no need to forcibly change the original hash), I propose this patch.

[1]
It is the same as in this example:
`$ irb
irb(main):001:0&gt; a = {'a' =&gt; 1, 'b' =&gt; 2}
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2}
irb(main):002:0&gt; b = {'b' =&gt; 3, 'c' =&gt; 4}
=&gt; {&quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):003:0&gt; c = a.merge!(b)
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):004:0&gt; a
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):005:0&gt; c
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;4}
irb(main):006:0&gt; c.delete('c')
=&gt; 4
irb(main):007:0&gt; a
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3}
irb(main):008:0&gt; c
=&gt; {&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;3}`</body>
      <body-html>&lt;div&gt;&lt;h1&gt;Short description:&lt;/h1&gt;
&lt;p&gt;See the patch, the hash passed as argument to recursing
&lt;code&gt;to_xml&lt;/code&gt; method is pointing to the same structure as the
original &lt;code&gt;opts&lt;/code&gt; hash.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ rails -v Rails 2.0.2 $ ruby -v ruby 1.8.6 (2007-03-13
patchlevel 0) [i386-netbsdelf]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(rails console) before the patch:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt; print [[], []].to_xml &amp;lt;?xml version=&quot;1.0&quot;
encoding=&quot;UTF-8&quot;?&amp;gt; &amp;lt;arrays type=&quot;array&quot;&amp;gt; &amp;lt;array
type=&quot;array&quot;/&amp;gt; &amp;lt;nil-classes type=&quot;array&quot;/&amp;gt; &amp;lt;/arrays&amp;gt;
=&amp;gt; nil&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;after the patch:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt; print [[],[]].to_xml &amp;lt;?xml version=&quot;1.0&quot;
encoding=&quot;UTF-8&quot;?&amp;gt; &amp;lt;arrays type=&quot;array&quot;&amp;gt; &amp;lt;array
type=&quot;array&quot;/&amp;gt; &amp;lt;array type=&quot;array&quot;/&amp;gt; &amp;lt;/arrays&amp;gt; =&amp;gt;
nil&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Explanation:&lt;/h1&gt;
&lt;p&gt;After the &lt;code&gt;merge!&lt;/code&gt; method on line:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;each { |e| e.to_xml(opts.merge({ :skip_instruct =&amp;gt; true
})) }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;the hash passed to next iteration of &lt;code&gt;to_xml&lt;/code&gt; method
is pointing to the same structure as the forcibly merged
&lt;code&gt;opts&lt;/code&gt; hash. &lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; Then after:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;root = options.delete(:root).to_s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;this parameter is deleted from the original &lt;code&gt;opts&lt;/code&gt;
hash too and to the next iteration are going wrong
&lt;code&gt;opts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As there is no need to use &lt;code&gt;merge!&lt;/code&gt; here because
simple &lt;code&gt;merge&lt;/code&gt; returns the same, and we repeat the
merging in each iteration (no need to forcibly change the original
hash), I propose this patch.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; It is the same as in this example: &lt;code&gt;$
irb irb(main):001:0&amp;gt; a = {'a' =&amp;gt; 1, 'b' =&amp;gt; 2} =&amp;gt;
{&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;2} irb(main):002:0&amp;gt; b = {'b' =&amp;gt; 3, 'c'
=&amp;gt; 4} =&amp;gt; {&quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4} irb(main):003:0&amp;gt; c =
a.merge!(b) =&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4}
irb(main):004:0&amp;gt; a =&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4}
irb(main):005:0&amp;gt; c =&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3, &quot;c&quot;=&amp;gt;4}
irb(main):006:0&amp;gt; c.delete('c') =&amp;gt; 4 irb(main):007:0&amp;gt; a
=&amp;gt; {&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3} irb(main):008:0&amp;gt; c =&amp;gt;
{&quot;a&quot;=&amp;gt;1, &quot;b&quot;=&amp;gt;3}&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-27T19:10:32+01:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1126</number>
      <permalink>array-to_xml-fix</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug core_ext patch</tag>
      <title>Array to_xml fix</title>
      <updated-at type="datetime">2008-09-27T19:10:35+01:00</updated-at>
      <user-id type="integer">33219</user-id>
      <version type="integer">1</version>
      <user-name>Rudolf Gavlas</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1126</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [e466ae13e9b6d901e3e39bb9ceeafd83e266ce81]) Fixed the option merging in Array#to_xml [#1126 state:resolved]
http://github.com/rails/rails/commit/e466ae13e9b6d901e3e39bb9ceeafd83e266ce81</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [e466ae13e9b6d901e3e39bb9ceeafd83e266ce81]) Fixed the
option merging in Array#to_xml [&lt;a href=&quot;/projects/8994/tickets/1126&quot; title=&quot;Ticket #1126&quot;&gt;#1126&lt;/a&gt;
state:resolved] &lt;a href=&quot;http://github.com/rails/rails/commit/e466ae13e9b6d901e3e39bb9ceeafd83e266ce81&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-31T17:42:29+00:00</created-at>
      <creator-id type="integer">33219</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1126</number>
      <permalink>array-to_xml-fix</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug core_ext patch</tag>
      <title>Array to_xml fix</title>
      <updated-at type="datetime">2008-10-31T17:42:33+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Rudolf Gavlas</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1126</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d39d8fdb80b6e0ce16d6a1ff7363c27ed766b945</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-27T19:10:32+01:00</created-at>
      <filename>arraytoxml.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">49136</id>
      <size type="integer">638</size>
      <uploader-id type="integer">33219</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/49136/arraytoxml.diff</url>
    </attachment>
  </attachments>
</ticket>
