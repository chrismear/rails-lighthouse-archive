<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">83</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-15T17:14:10+01:00</created-at>
  <creator-id type="integer">10285</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1219</number>
  <permalink>new_record-not-set-when-using-joins</permalink>
  <priority type="integer">626</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord create patch tiny</tag>
  <title>new_record? returns nil on records retrieved from database</title>
  <updated-at type="datetime">2008-12-27T13:36:33+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">9</version>
  <user-name>Repository</user-name>
  <creator-name>Steve Martocci</creator-name>
  <assigned-user-name>DHH</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I am using a right join to ensure that I always pull back a set of objects via an association even if they haven't been created yet.  They have some fields filled in by the join but the ids are blank.  When I go to save the object it attempts to do an update instead of a save.  

This is because @new_record is not being set, in fact a new_record? returns nil instead of true or false.  I added this to my model to ensure a true if it is not set.  


def new_record?
  super || true
end


I do not think new_record should be able to return nil, it should return true if @new_record is not set.  The alternative is to properly set @new_record to true in this case</original-body>
  <latest-body>I am using a right join to ensure that I always pull back a set of objects via an association even if they haven't been created yet.  They have some fields filled in by the join but the ids are blank.  When I go to save the object it attempts to do an update instead of a save.  

This is because @new_record is not being set, in fact a new_record? returns nil instead of true or false.  I added this to my model to ensure a true if it is not set.  


def new_record?
  super || true
end


I do not think new_record should be able to return nil, it should return true if @new_record is not set.  The alternative is to properly set @new_record to true in this case</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I am using a right join to ensure that I always pull back a set
of objects via an association even if they haven't been created
yet. They have some fields filled in by the join but the ids are
blank. When I go to save the object it attempts to do an update
instead of a save.&lt;/p&gt;
&lt;p&gt;This is because @new_record is not being set, in fact a
new_record? returns nil instead of true or false. I added this to
my model to ensure a true if it is not set.&lt;/p&gt;
&lt;p&gt;def new_record? super || true end&lt;/p&gt;
&lt;p&gt;I do not think new_record should be able to return nil, it
should return true if @new_record is not set. The alternative is to
properly set @new_record to true in this case&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am using a right join to ensure that I always pull back a set of objects via an association even if they haven't been created yet.  They have some fields filled in by the join but the ids are blank.  When I go to save the object it attempts to do an update instead of a save.  

This is because @new_record is not being set, in fact a new_record? returns nil instead of true or false.  I added this to my model to ensure a true if it is not set.  


def new_record?
  super || true
end


I do not think new_record should be able to return nil, it should return true if @new_record is not set.  The alternative is to properly set @new_record to true in this case</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am using a right join to ensure that I always pull back a set
of objects via an association even if they haven't been created
yet. They have some fields filled in by the join but the ids are
blank. When I go to save the object it attempts to do an update
instead of a save.&lt;/p&gt;
&lt;p&gt;This is because @new_record is not being set, in fact a
new_record? returns nil instead of true or false. I added this to
my model to ensure a true if it is not set.&lt;/p&gt;
&lt;p&gt;def new_record? super || true end&lt;/p&gt;
&lt;p&gt;I do not think new_record should be able to return nil, it
should return true if @new_record is not set. The alternative is to
properly set @new_record to true in this case&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-15T17:14:10+01:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create joins</tag>
      <title>new_record? not set when using joins</title>
      <updated-at type="datetime">2008-10-15T17:14:14+01:00</updated-at>
      <user-id type="integer">10285</user-id>
      <version type="integer">1</version>
      <user-name>Steve Martocci</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>actually this is a better solution as the other one will return true on falses not just nils

def new_record?
    (answer = super).nil? ? true : answer
  end</body>
      <body-html>&lt;div&gt;&lt;p&gt;actually this is a better solution as the other one will return
true on falses not just nils&lt;/p&gt;
&lt;p&gt;def new_record?&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;(answer = super).nil? ? true : answer
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-17T16:41:55+01:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create joins</tag>
      <title>new_record? not set when using joins</title>
      <updated-at type="datetime">2008-10-17T16:42:00+01:00</updated-at>
      <user-id type="integer">10285</user-id>
      <version type="integer">2</version>
      <user-name>Steve Martocci</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm seeing `model.new_record? == nil` for an AR object I got with a simple `find(id)`.  I'm not sure if it's related.  It's certainly worrying, since it means that the object isn't `==` to other objects with the same `id` and `new_record == false`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm seeing &lt;code&gt;model.new_record? == nil&lt;/code&gt; for an AR
object I got with a simple &lt;code&gt;find(id)&lt;/code&gt;. I'm not sure if
it's related. It's certainly worrying, since it means that the
object isn't &lt;code&gt;==&lt;/code&gt; to other objects with the same
&lt;code&gt;id&lt;/code&gt; and &lt;code&gt;new_record == false&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-20T16:20:27+01:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create joins</tag>
      <title>new_record? not set when using joins</title>
      <updated-at type="datetime">2008-10-20T16:20:29+01:00</updated-at>
      <user-id type="integer">25022</user-id>
      <version type="integer">3</version>
      <user-name>Peter Jaros</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I noticed that too, it actually causes my change not to work....

I overrode new_method? in the model I was doing joins on to just use this

#hack to fix active record not populating this value from joins
  def new_record?
     id.nil? ? true : false
  end

and it works for my one specific case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I noticed that too, it actually causes my change not to
work....&lt;/p&gt;
&lt;p&gt;I overrode new_method? in the model I was doing joins on to just
use this&lt;/p&gt;
&lt;h1&gt;hack to fix active record not populating this value from
joins&lt;/h1&gt;
&lt;p&gt;def new_record?&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; id.nil? ? true : false
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;and it works for my one specific case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-20T16:33:45+01:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create joins</tag>
      <title>new_record? not set when using joins</title>
      <updated-at type="datetime">2008-10-20T16:33:52+01:00</updated-at>
      <user-id type="integer">10285</user-id>
      <version type="integer">4</version>
      <user-name>Steve Martocci</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This bit me as well. After discussing with Steve it seems that 'new_record?' only works as expected with records which have just been instantiated. If you retrieve a record via 'find', calling 'new_record?' on that object will always return nil.

Not sure if this is a bug or just an unfortunate side effect of ActiveRecord, but it does seem to violate the principle of least surprise.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This bit me as well. After discussing with Steve it seems that
'new_record?' only works as expected with records which have just
been instantiated. If you retrieve a record via 'find', calling
'new_record?' on that object will always return nil.&lt;/p&gt;
&lt;p&gt;Not sure if this is a bug or just an unfortunate side effect of
ActiveRecord, but it does seem to violate the principle of least
surprise.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-22T21:39:25+01:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create joins</tag>
      <title>new_record? not set when using joins</title>
      <updated-at type="datetime">2008-10-22T21:39:31+01:00</updated-at>
      <user-id type="integer">10290</user-id>
      <version type="integer">5</version>
      <user-name>Lar Van Der Jagt</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-22T21:42:31+01:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- 
:title: new_record? not set when using joins
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create joins</tag>
      <title>new_record? returns nil on records retrieved from database</title>
      <updated-at type="datetime">2008-10-22T21:42:34+01:00</updated-at>
      <user-id type="integer">10290</user-id>
      <version type="integer">6</version>
      <user-name>Lar Van Der Jagt</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch attached, I believe that it should return false on existing records as well, unless we have a good reason not to</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch attached, I believe that it should return false on
existing records as well, unless we have a good reason not to&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-27T13:28:26+00:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord create joins
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create patch tiny</tag>
      <title>new_record? returns nil on records retrieved from database</title>
      <updated-at type="datetime">2008-12-27T13:28:29+00:00</updated-at>
      <user-id type="integer">11102</user-id>
      <version type="integer">7</version>
      <user-name>Yaroslav Markin</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-27T13:31:28+00:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord create patch tiny</tag>
      <title>new_record? returns nil on records retrieved from database</title>
      <updated-at type="datetime">2008-12-27T13:31:33+00:00</updated-at>
      <user-id type="integer">11102</user-id>
      <version type="integer">8</version>
      <user-name>Yaroslav Markin</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [6e98adfc8e19a39fa45d4acd94145d318d151964]) ActiveRecord::Base#new_record? now returns false for existing records (was nil) [#1219 state:committed]

Signed-off-by: David Heinemeier Hansson &lt;david@loudthinking.com&gt;
http://github.com/rails/rails/commit/6e98adfc8e19a39fa45d4acd94145d318d151964</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [6e98adfc8e19a39fa45d4acd94145d318d151964])
ActiveRecord::Base#new_record? now returns false for existing
records (was nil) [&lt;a href=&quot;/projects/8994/tickets/1219&quot; title=&quot;Ticket #1219&quot;&gt;#1219&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: David Heinemeier Hansson &lt;a href=&quot;mailto:david@loudthinking.com&quot;&gt;david@loudthinking.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/6e98adfc8e19a39fa45d4acd94145d318d151964&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-27T13:36:32+00:00</created-at>
      <creator-id type="integer">10285</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1219</number>
      <permalink>new_record-not-set-when-using-joins</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord create patch tiny</tag>
      <title>new_record? returns nil on records retrieved from database</title>
      <updated-at type="datetime">2008-12-27T13:36:33+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>Steve Martocci</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1219</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0043e4a06ebb7d645f704551e6812744597d67fb</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-27T13:28:26+00:00</created-at>
      <filename>0001-ActiveRecord-Base-new_record-now-returns-false-for.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74041</id>
      <size type="integer">1689</size>
      <uploader-id type="integer">11102</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74041/0001-ActiveRecord-Base-new_record-now-returns-false-for.patch</url>
    </attachment>
  </attachments>
</ticket>
