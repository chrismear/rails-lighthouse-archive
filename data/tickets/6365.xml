<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40272</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-03T02:59:26+00:00</created-at>
  <creator-id type="integer">15346</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">6365</number>
  <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
  <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
  <updated-at type="datetime">2011-02-03T22:16:28+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">11</version>
  <user-name>Repository</user-name>
  <creator-name>Ken Collins</creator-name>
  <assigned-user-name>Santiago Pastorino</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Some databases return integer values for AVG. Allow that value to pass through vs raising an Fixnum#to_d no method error.</original-body>
  <latest-body>Some databases return integer values for AVG. Allow that value to pass through vs raising an Fixnum#to_d no method error.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Some databases return integer values for AVG. Allow that value
to pass through vs raising an Fixnum#to_d no method error.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Some databases return integer values for AVG. Allow that value to pass through vs raising an Fixnum#to_d no method error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Some databases return integer values for AVG. Allow that value
to pass through vs raising an Fixnum#to_d no method error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T02:59:26+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T02:59:27+00:00</updated-at>
      <user-id type="integer">15346</user-id>
      <version type="integer">1</version>
      <user-name>Ken Collins</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>hey Ken, can you provide more info about which databases return integer values for AVG?.
Also your patch have no test and you could do ...

value.respond_to? :to_d ? value.to_d : value</body>
      <body-html>&lt;div&gt;&lt;p&gt;hey Ken, can you provide more info about which databases return
integer values for AVG?.&lt;br&gt;
Also your patch have no test and you could do ...&lt;/p&gt;
&lt;p&gt;value.respond_to? :to_d ? value.to_d : value&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T17:30:18+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T17:30:27+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Specifically SQL Server. Details on return type here.
http://msdn.microsoft.com/en-us/library/ms177677.aspx

Re the code style, I do like your line better and tend to do that more often, but working so much in ARel lately, I started using the Constant===. Maybe for speed? I dunno. I'm fine either way and actually like the concise respond_to? better. 

Re the tests, I have done short patches like these before since a test would have been deep implementation mock. I can easily do one for regression purposes and would prefer on if that is what you prefer too?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Specifically SQL Server. Details on return type here.&lt;br&gt;
&lt;a href=
&quot;http://msdn.microsoft.com/en-us/library/ms177677.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/ms177677.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Re the code style, I do like your line better and tend to do
that more often, but working so much in ARel lately, I started
using the Constant===. Maybe for speed? I dunno. I'm fine either
way and actually like the concise respond_to? better.&lt;/p&gt;
&lt;p&gt;Re the tests, I have done short patches like these before since
a test would have been deep implementation mock. I can easily do
one for regression purposes and would prefer on if that is what you
prefer too?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T18:58:41+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T18:58:50+00:00</updated-at>
      <user-id type="integer">15346</user-id>
      <version type="integer">3</version>
      <user-name>Ken Collins</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok please provide a test case and use the respond_to? and I will push the patch ;).
Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok please provide a test case and use the respond_to? and I will
push the patch ;).&lt;br&gt;
Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T19:25:16+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T19:25:23+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Trying this right now. Just got to figure out the right stub point. For instance.

    def test_should_return_integer_average_if_db_returns_such
      Account.connection.stubs :execute =&gt; [{'avg_id' =&gt; 3}]
      value = Account.average(:id)
      assert_equal 3, value
    end

This works with sqlite3 but not mysql. Will come up with something shortly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Trying this right now. Just got to figure out the right stub
point. For instance.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_should_return_integer_average_if_db_returns_such
  Account.connection.stubs :execute =&amp;gt; [{'avg_id' =&amp;gt; 3}]
  value = Account.average(:id)
  assert_equal 3, value
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This works with sqlite3 but not mysql. Will come up with
something shortly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T19:49:49+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T19:49:58+00:00</updated-at>
      <user-id type="integer">15346</user-id>
      <version type="integer">5</version>
      <user-name>Ken Collins</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK, uploaded a new patch. Test added, used the respond_to? method. All tests passed in mysql/postgresql/sqlite.

Also, will this make it into the v3.0.4 release?</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, uploaded a new patch. Test added, used the respond_to?
method. All tests passed in mysql/postgresql/sqlite.&lt;/p&gt;
&lt;p&gt;Also, will this make it into the v3.0.4 release?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T20:15:30+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T20:15:42+00:00</updated-at>
      <user-id type="integer">15346</user-id>
      <version type="integer">6</version>
      <user-name>Ken Collins</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ken please avoid stubs you can find lot of examples in ActiveRecord tests about how things are tested.
Also you have removed the try, are you sure that this is right? what happens if value is nil?.
Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ken please avoid stubs you can find lot of examples in
ActiveRecord tests about how things are tested.&lt;br&gt;
Also you have removed the try, are you sure that this is right?
what happens if value is nil?.&lt;br&gt;
Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T21:03:52+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T21:04:00+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I had a test that directly tested the method but that it would have been discouraged. It looked something like this.

    expected_value = 3
    column = Account.columns_hash['id']
    returned_value = Account.send :type_cast_calculated_value, expected_value, column, 'average'
    assert_equal expected_value, returned_value

Re the nil. To my knowledge there is no NilClass#to_d method. The same thing would happen as before. And lastly, nil would be an expected result from a simple function where there is 0 rows.

How should I proceed?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had a test that directly tested the method but that it would
have been discouraged. It looked something like this.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;expected_value = 3
column = Account.columns_hash['id']
returned_value = Account.send :type_cast_calculated_value, expected_value, column, 'average'
assert_equal expected_value, returned_value&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Re the nil. To my knowledge there is no NilClass#to_d method.
The same thing would happen as before. And lastly, nil would be an
expected result from a simple function where there is 0 rows.&lt;/p&gt;
&lt;p&gt;How should I proceed?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T21:12:28+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T21:12:38+00:00</updated-at>
      <user-id type="integer">15346</user-id>
      <version type="integer">8</version>
      <user-name>Ken Collins</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>FYI, this test is below mine and is even visible in the patch. It outlines the nil question of yours.

    def test_should_return_nil_as_average
      assert_nil NumericData.average(:bank_balance)
    end

I am still working on coming up with a test style that is acceptable. Typically I feel dirty doing these types of test due to their coupling to the low level internals. They are tricky to get right and any feedback would be appreciated. So no database in the blessed 3 are going to return an integer, the stub seemed appropriate and allowed the test to stay high level. Testing the private method directly seems wrong too. Thoughts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;FYI, this test is below mine and is even visible in the patch.
It outlines the nil question of yours.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_should_return_nil_as_average
  assert_nil NumericData.average(:bank_balance)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I am still working on coming up with a test style that is
acceptable. Typically I feel dirty doing these types of test due to
their coupling to the low level internals. They are tricky to get
right and any feedback would be appreciated. So no database in the
blessed 3 are going to return an integer, the stub seemed
appropriate and allowed the test to stay high level. Testing the
private method directly seems wrong too. Thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T21:35:24+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T21:35:31+00:00</updated-at>
      <user-id type="integer">15346</user-id>
      <version type="integer">9</version>
      <user-name>Ken Collins</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [95d5d9b6c48c08f1fba0c77ecbc97b62b2603824]) The type_cast_calculated_value method will trust DB types before casting to a BigDecimal.

[#6365 state:committed]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/95d5d9b6c48c08f1fba0c77ecbc97b62b2603824</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/95d5d9b6c48c08f1fba0c77ecbc97b62b2603824&quot;
title=
&quot;Changeset [95d5d9b6c48c08f1fba0c77ecbc97b62b2603824]&quot;&gt;[95d5d9b6c48c08f1fba0c77ecbc97b62b2603824]&lt;/a&gt;)
The type_cast_calculated_value method will trust DB types before
casting to a BigDecimal.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/6365&quot; title=
&quot;Ticket #6365&quot;&gt;#6365&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino &lt;a href=
&quot;mailto:santiago@wyeworks.com&quot;&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/95d5d9b6c48c08f1fba0c77ecbc97b62b2603824&quot;&gt;
https://github.com/rails/rails/commit/95d5d9b6c48c08f1fba0c77ecbc97...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-03T22:03:01+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T22:03:10+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">10</version>
      <user-name>Repository</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [068527baaf9a49862281c4357296262ae73542d0]) The type_cast_calculated_value method will trust DB types before casting to a BigDecimal.

[#6365 state:committed]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/068527baaf9a49862281c4357296262ae73542d0</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/068527baaf9a49862281c4357296262ae73542d0&quot;
title=
&quot;Changeset [068527baaf9a49862281c4357296262ae73542d0]&quot;&gt;[068527baaf9a49862281c4357296262ae73542d0]&lt;/a&gt;)
The type_cast_calculated_value method will trust DB types before
casting to a BigDecimal.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/6365&quot; title=
&quot;Ticket #6365&quot;&gt;#6365&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino &lt;a href=
&quot;mailto:santiago@wyeworks.com&quot;&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/068527baaf9a49862281c4357296262ae73542d0&quot;&gt;
https://github.com/rails/rails/commit/068527baaf9a49862281c43572962...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-03T22:16:19+00:00</created-at>
      <creator-id type="integer">15346</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6365</number>
      <permalink>the-type_cast_calculated_value-method-will-trust-db-types-before-casting-floatstring-to-a-bigdecimal</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>&quot;activerecord 3.0.4rc1 patch&quot;</tag>
      <title>The type_cast_calculated_value method will trust DB types before casting Float/String to a BigDecimal</title>
      <updated-at type="datetime">2011-02-03T22:16:28+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">11</version>
      <user-name>Repository</user-name>
      <creator-name>Ken Collins</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6365</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c6c6c5ee07ad44d315de76ca1f2c8221c4372275</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-03T20:15:30+00:00</created-at>
      <filename>type_cast_calculated_value.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">894509</id>
      <size type="integer">1722</size>
      <uploader-id type="integer">15346</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/894509/type_cast_calculated_value.diff</url>
    </attachment>
  </attachments>
</ticket>
