From ae994b5311fd5f956d45e3a8b788e0617bbd9b05 Mon Sep 17 00:00:00 2001
From: Josef Reidinger <jreidinger@suse.cz>
Date: Tue, 27 Jul 2010 09:55:33 +0200
Subject: [PATCH] fix loading of different elements in array then int and string

---
 activeresource/lib/active_resource/base.rb  |    6 +++---
 activeresource/test/cases/base/load_test.rb |   12 ++++++++++++
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/activeresource/lib/active_resource/base.rb b/activeresource/lib/active_resource/base.rb
index 72ad2f5..6242072 100644
--- a/activeresource/lib/active_resource/base.rb
+++ b/activeresource/lib/active_resource/base.rb
@@ -1222,10 +1222,10 @@ module ActiveResource
             when Array
               resource = find_or_create_resource_for_collection(key)
               value.map do |attrs|
-                if attrs.is_a?(String) || attrs.is_a?(Numeric)
-                  attrs.duplicable? ? attrs.dup : attrs
-                else
+                if attrs.is_a?(Hash)
                   resource.new(attrs)
+                else
+                  attrs.duplicable? ? attrs.dup : attrs
                 end
               end
             when Hash
diff --git a/activeresource/test/cases/base/load_test.rb b/activeresource/test/cases/base/load_test.rb
index 7745a94..228dc36 100644
--- a/activeresource/test/cases/base/load_test.rb
+++ b/activeresource/test/cases/base/load_test.rb
@@ -47,6 +47,8 @@ class BaseLoadTest < Test::Unit::TestCase
           { :id => 1, :name => 'Willamette' },
           { :id => 2, :name => 'Columbia', :rafted_by => @matz }],
         :postal_codes => [ 97018, 1234567890 ],
+        :dates => [ Time.now ],
+        :votes => [ true, false, true ],
         :places => [ "Columbia City", "Unknown" ]}}}
 
     @person = Person.new
@@ -149,6 +151,16 @@ class BaseLoadTest < Test::Unit::TestCase
     assert_kind_of Array, places
     assert_kind_of String, places.first
     assert_equal @deep[:street][:state][:places].first, places.first
+
+    dates = state.dates
+    assert_kind_of Array, dates
+    assert_kind_of Time, dates.first
+    assert_equal @deep[:street][:state][:dates].first, dates.first
+
+    votes = state.votes
+    assert_kind_of Array, votes
+    assert_kind_of TrueClass, votes.first
+    assert_equal @deep[:street][:state][:votes].first, votes.first
   end
 
   def test_nested_collections_within_the_same_namespace
-- 
1.7.1

