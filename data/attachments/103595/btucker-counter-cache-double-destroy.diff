From ce4db203c6d6fefbd2b8863abaf7014a449a409f Mon Sep 17 00:00:00 2001
From: Ben Tucker <ben@btucker.net>
Date: Mon, 23 Mar 2009 20:27:51 -0400
Subject: [PATCH] adding check that object still exists in database prior to decrementing counter

---
 activerecord/lib/active_record/associations.rb     |    4 +++-
 .../associations/belongs_to_associations_test.rb   |   20 ++++++++++++++++++++
 2 files changed, 23 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index 6d25b36..fddefbe 100755
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1015,7 +1015,9 @@ module ActiveRecord
           method_name = "belongs_to_counter_cache_before_destroy_for_#{reflection.name}".to_sym
           define_method(method_name) do
             association = send(reflection.name)
-            association.class.decrement_counter(cache_column, send(reflection.primary_key_name)) unless association.nil?
+            if association and self.class.exists?(self.id)
+              association.class.decrement_counter(cache_column, send(reflection.primary_key_name)) 
+            end
           end
           before_destroy method_name
 
diff --git a/activerecord/test/cases/associations/belongs_to_associations_test.rb b/activerecord/test/cases/associations/belongs_to_associations_test.rb
index 13a78a1..03da652 100644
--- a/activerecord/test/cases/associations/belongs_to_associations_test.rb
+++ b/activerecord/test/cases/associations/belongs_to_associations_test.rb
@@ -251,6 +251,26 @@ class BelongsToAssociationsTest < ActiveRecord::TestCase
     assert_equal 15, topic.replies.size
   end
 
+  def test_counter_cache_double_destroy
+    topic = Topic.create :title => "Zoom-zoom-zoom"
+
+    5.times do
+      topic.replies.create(:title => "re: zoom", :content => "speedy quick!")
+    end
+
+    assert_equal 5, topic.reload[:replies_count]
+    assert_equal 5, topic.replies.size
+
+    reply = topic.replies.first
+
+    reply.destroy
+    assert_equal 4, topic.reload[:replies_count]
+
+    reply.destroy
+    assert_equal 4, topic.reload[:replies_count]
+    assert_equal 4, topic.replies.size
+  end
+
   def test_custom_counter_cache
     reply = Reply.create(:title => "re: zoom", :content => "speedy quick!")
     assert_equal 0, reply[:replies_count]
-- 
1.5.3.7

