<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-10T06:31:11+01:00</created-at>
  <creator-id type="integer">110865</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5342</number>
  <permalink>rails-300rc-does-not-allow-config-instance-variable-in-controllers</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>actioncontroller config rails3.0rc</tag>
  <title>Rails 3.0.0rc does not allow @config instance variable in controllers</title>
  <updated-at type="datetime">2010-08-11T14:27:22+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>Thomas Kadauke</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5342</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a class that stores user configuration in my Rails app. While porting to Rails 3, I got a strange error. I was able to isolate the problem. Steps to reproduce:

- Generate a fresh rails app (3.0.0rc)

- Add a model configuration.rb (not ActiveRecord!):

@@@
  class Configuration
  end
@@@

- Add a controller settings_controller.rb:

@@@
  class SettingsController &lt; ApplicationController
    def index
      @config = Configuration.new
    end
  end
@@@

- Add an empty view index.html.erb

- Add settings to routes.rb:

@@@
  resources :settings
@@@

- Add this simple test:

@@@
  require 'test_helper'

  class SettingsControllerTest &lt; ActionController::TestCase
    test &quot;boom&quot; do
      get :index
    end
  end
@@@

When run, the test outputs the following error (see below for the full backtrace):

@@@
  1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&lt;Configuration:0x2878258&gt;
  method test_boom in settings_controller_test.rb at line 6
@@@

When I change the name of the instance variable, everything works fine. From a developer's perspective, if @config is not allowed as an instance variable name in controllers, there should be at least a warning. On the other hand, reserving very common instance variable names such as @config seems a bit too restrictive and should at least be well documented.

I also noticed that the constant name ::Config seems to be reserved by Rails 3.0.0rc; I think the same applies here.

If desired, I can push my test application to github, just let me know.

Here's the full backtrace:

@@@
    1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&lt;Configuration:0x2870ecc&gt;
  method protected_instance_variables in activesupport (3.0.0.rc) lib/active_support/configurable.rb at line 22
  method view_assigns in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 130
  method view_context in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 86
  method _render_template in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 114
  method render_to_body in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 108
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/renderers.rb at line 47
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/compatibility.rb at line 55
  method render_to_string in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 101
  method render in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 92
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 17
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method realtime in benchmark.rb at line 308
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method cleanup_view_runtime in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 78
  method cleanup_view_runtime in activerecord (3.0.0.rc) lib/active_record/railties/controller_runtime.rb at line 15
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 39
  method default_render in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 10
  method send_action in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 5
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 136
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 11
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 18
  method _run__987036831__process_action__199225275__callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 429
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method _run_process_action_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method run_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 17
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 30
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications/instrumenter.rb at line 21
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 29
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rescue.rb at line 17
  method process in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 105
  method process in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 40
  method process_with_new_base_test in actionpack (3.0.0.rc) lib/action_controller/metal/testing.rb at line 12
  method process in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 404
  method get in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 342
  method test_boom in settings_controller_test.rb at line 6
  method __send__ in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method _run_setup_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 428
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 65
@@@</original-body>
  <latest-body>I have a class that stores user configuration in my Rails app. While porting to Rails 3, I got a strange error. I was able to isolate the problem. Steps to reproduce:

- Generate a fresh rails app (3.0.0rc)

- Add a model configuration.rb (not ActiveRecord!):

@@@
  class Configuration
  end
@@@

- Add a controller settings_controller.rb:

@@@
  class SettingsController &lt; ApplicationController
    def index
      @config = Configuration.new
    end
  end
@@@

- Add an empty view index.html.erb

- Add settings to routes.rb:

@@@
  resources :settings
@@@

- Add this simple test:

@@@
  require 'test_helper'

  class SettingsControllerTest &lt; ActionController::TestCase
    test &quot;boom&quot; do
      get :index
    end
  end
@@@

When run, the test outputs the following error (see below for the full backtrace):

@@@
  1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&lt;Configuration:0x2878258&gt;
  method test_boom in settings_controller_test.rb at line 6
@@@

When I change the name of the instance variable, everything works fine. From a developer's perspective, if @config is not allowed as an instance variable name in controllers, there should be at least a warning. On the other hand, reserving very common instance variable names such as @config seems a bit too restrictive and should at least be well documented.

I also noticed that the constant name ::Config seems to be reserved by Rails 3.0.0rc; I think the same applies here.

If desired, I can push my test application to github, just let me know.

Here's the full backtrace:

@@@
    1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&lt;Configuration:0x2870ecc&gt;
  method protected_instance_variables in activesupport (3.0.0.rc) lib/active_support/configurable.rb at line 22
  method view_assigns in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 130
  method view_context in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 86
  method _render_template in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 114
  method render_to_body in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 108
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/renderers.rb at line 47
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/compatibility.rb at line 55
  method render_to_string in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 101
  method render in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 92
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 17
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method realtime in benchmark.rb at line 308
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method cleanup_view_runtime in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 78
  method cleanup_view_runtime in activerecord (3.0.0.rc) lib/active_record/railties/controller_runtime.rb at line 15
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 39
  method default_render in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 10
  method send_action in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 5
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 136
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 11
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 18
  method _run__987036831__process_action__199225275__callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 429
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method _run_process_action_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method run_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 17
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 30
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications/instrumenter.rb at line 21
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 29
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rescue.rb at line 17
  method process in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 105
  method process in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 40
  method process_with_new_base_test in actionpack (3.0.0.rc) lib/action_controller/metal/testing.rb at line 12
  method process in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 404
  method get in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 342
  method test_boom in settings_controller_test.rb at line 6
  method __send__ in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method _run_setup_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 428
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 65
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a class that stores user configuration in my Rails app.
While porting to Rails 3, I got a strange error. I was able to
isolate the problem. Steps to reproduce:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Generate a fresh rails app (3.0.0rc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a model configuration.rb (not ActiveRecord!):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  class Configuration
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Add a controller settings_controller.rb:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  class SettingsController &amp;lt; ApplicationController
    def index
      @config = Configuration.new
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add an empty view index.html.erb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add settings to routes.rb:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  resources :settings&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Add this simple test:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  require 'test_helper'

  class SettingsControllerTest &amp;lt; ActionController::TestCase
    test &quot;boom&quot; do
      get :index
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When run, the test outputs the following error (see below for
the full backtrace):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&amp;lt;Configuration:0x2878258&amp;gt;
  method test_boom in settings_controller_test.rb at line 6&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I change the name of the instance variable, everything
works fine. From a developer's perspective, if @config is not
allowed as an instance variable name in controllers, there should
be at least a warning. On the other hand, reserving very common
instance variable names such as @config seems a bit too restrictive
and should at least be well documented.&lt;/p&gt;
&lt;p&gt;I also noticed that the constant name ::Config seems to be
reserved by Rails 3.0.0rc; I think the same applies here.&lt;/p&gt;
&lt;p&gt;If desired, I can push my test application to github, just let
me know.&lt;/p&gt;
&lt;p&gt;Here's the full backtrace:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&amp;lt;Configuration:0x2870ecc&amp;gt;
  method protected_instance_variables in activesupport (3.0.0.rc) lib/active_support/configurable.rb at line 22
  method view_assigns in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 130
  method view_context in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 86
  method _render_template in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 114
  method render_to_body in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 108
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/renderers.rb at line 47
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/compatibility.rb at line 55
  method render_to_string in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 101
  method render in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 92
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 17
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method realtime in benchmark.rb at line 308
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method cleanup_view_runtime in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 78
  method cleanup_view_runtime in activerecord (3.0.0.rc) lib/active_record/railties/controller_runtime.rb at line 15
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 39
  method default_render in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 10
  method send_action in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 5
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 136
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 11
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 18
  method _run__987036831__process_action__199225275__callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 429
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method _run_process_action_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method run_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 17
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 30
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications/instrumenter.rb at line 21
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 29
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rescue.rb at line 17
  method process in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 105
  method process in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 40
  method process_with_new_base_test in actionpack (3.0.0.rc) lib/action_controller/metal/testing.rb at line 12
  method process in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 404
  method get in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 342
  method test_boom in settings_controller_test.rb at line 6
  method __send__ in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method _run_setup_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 428
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 65&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a class that stores user configuration in my Rails app. While porting to Rails 3, I got a strange error. I was able to isolate the problem. Steps to reproduce:

- Generate a fresh rails app (3.0.0rc)

- Add a model configuration.rb (not ActiveRecord!):

@@@
  class Configuration
  end
@@@

- Add a controller settings_controller.rb:

@@@
  class SettingsController &lt; ApplicationController
    def index
      @config = Configuration.new
    end
  end
@@@

- Add an empty view index.html.erb

- Add settings to routes.rb:

@@@
  resources :settings
@@@

- Add this simple test:

@@@
  require 'test_helper'

  class SettingsControllerTest &lt; ActionController::TestCase
    test &quot;boom&quot; do
      get :index
    end
  end
@@@

When run, the test outputs the following error (see below for the full backtrace):

@@@
  1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&lt;Configuration:0x2878258&gt;
  method test_boom in settings_controller_test.rb at line 6
@@@

When I change the name of the instance variable, everything works fine. From a developer's perspective, if @config is not allowed as an instance variable name in controllers, there should be at least a warning. On the other hand, reserving very common instance variable names such as @config seems a bit too restrictive and should at least be well documented.

I also noticed that the constant name ::Config seems to be reserved by Rails 3.0.0rc; I think the same applies here.

If desired, I can push my test application to github, just let me know.

Here's the full backtrace:

@@@
    1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&lt;Configuration:0x2870ecc&gt;
  method protected_instance_variables in activesupport (3.0.0.rc) lib/active_support/configurable.rb at line 22
  method view_assigns in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 130
  method view_context in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 86
  method _render_template in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 114
  method render_to_body in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 108
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/renderers.rb at line 47
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/compatibility.rb at line 55
  method render_to_string in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 101
  method render in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 92
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 17
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method realtime in benchmark.rb at line 308
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method cleanup_view_runtime in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 78
  method cleanup_view_runtime in activerecord (3.0.0.rc) lib/active_record/railties/controller_runtime.rb at line 15
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 39
  method default_render in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 10
  method send_action in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 5
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 136
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 11
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 18
  method _run__987036831__process_action__199225275__callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 429
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method _run_process_action_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method run_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 17
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 30
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications/instrumenter.rb at line 21
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 29
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rescue.rb at line 17
  method process in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 105
  method process in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 40
  method process_with_new_base_test in actionpack (3.0.0.rc) lib/action_controller/metal/testing.rb at line 12
  method process in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 404
  method get in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 342
  method test_boom in settings_controller_test.rb at line 6
  method __send__ in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method _run_setup_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 428
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 65
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a class that stores user configuration in my Rails app.
While porting to Rails 3, I got a strange error. I was able to
isolate the problem. Steps to reproduce:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Generate a fresh rails app (3.0.0rc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a model configuration.rb (not ActiveRecord!):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  class Configuration
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Add a controller settings_controller.rb:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  class SettingsController &amp;lt; ApplicationController
    def index
      @config = Configuration.new
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add an empty view index.html.erb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add settings to routes.rb:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  resources :settings&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Add this simple test:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;  require 'test_helper'

  class SettingsControllerTest &amp;lt; ActionController::TestCase
    test &quot;boom&quot; do
      get :index
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When run, the test outputs the following error (see below for
the full backtrace):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&amp;lt;Configuration:0x2878258&amp;gt;
  method test_boom in settings_controller_test.rb at line 6&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I change the name of the instance variable, everything
works fine. From a developer's perspective, if @config is not
allowed as an instance variable name in controllers, there should
be at least a warning. On the other hand, reserving very common
instance variable names such as @config seems a bit too restrictive
and should at least be well documented.&lt;/p&gt;
&lt;p&gt;I also noticed that the constant name ::Config seems to be
reserved by Rails 3.0.0rc; I think the same applies here.&lt;/p&gt;
&lt;p&gt;If desired, I can push my test application to github, just let
me know.&lt;/p&gt;
&lt;p&gt;Here's the full backtrace:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    1) Error:
  test_boom(SettingsControllerTest):
  NoMethodError: undefined method `protected_instance_variables' for #&amp;lt;Configuration:0x2870ecc&amp;gt;
  method protected_instance_variables in activesupport (3.0.0.rc) lib/active_support/configurable.rb at line 22
  method view_assigns in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 130
  method view_context in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 86
  method _render_template in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 114
  method render_to_body in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 108
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/renderers.rb at line 47
  method render_to_body in actionpack (3.0.0.rc) lib/action_controller/metal/compatibility.rb at line 55
  method render_to_string in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 101
  method render in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 92
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 17
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method realtime in benchmark.rb at line 308
  method ms in activesupport (3.0.0.rc) lib/active_support/core_ext/benchmark.rb at line 5
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 40
  method cleanup_view_runtime in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 78
  method cleanup_view_runtime in activerecord (3.0.0.rc) lib/active_record/railties/controller_runtime.rb at line 15
  method render in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 39
  method default_render in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 10
  method send_action in actionpack (3.0.0.rc) lib/action_controller/metal/implicit_render.rb at line 5
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 136
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rendering.rb at line 11
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 18
  method _run__987036831__process_action__199225275__callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 429
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method _run_process_action_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 404
  method send in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method run_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 93
  method process_action in actionpack (3.0.0.rc) lib/abstract_controller/callbacks.rb at line 17
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 30
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications/instrumenter.rb at line 21
  method instrument in activesupport (3.0.0.rc) lib/active_support/notifications.rb at line 52
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/instrumentation.rb at line 29
  method process_action in actionpack (3.0.0.rc) lib/action_controller/metal/rescue.rb at line 17
  method process in actionpack (3.0.0.rc) lib/abstract_controller/base.rb at line 105
  method process in actionpack (3.0.0.rc) lib/abstract_controller/rendering.rb at line 40
  method process_with_new_base_test in actionpack (3.0.0.rc) lib/action_controller/metal/testing.rb at line 12
  method process in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 404
  method get in actionpack (3.0.0.rc) lib/action_controller/test_case.rb at line 342
  method test_boom in settings_controller_test.rb at line 6
  method __send__ in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 67
  method _run_setup_callbacks in activesupport (3.0.0.rc) lib/active_support/callbacks.rb at line 428
  method run in activesupport (3.0.0.rc) lib/active_support/testing/setup_and_teardown.rb at line 65&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-09T23:13:42+01:00</created-at>
      <creator-id type="integer">110865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5342</number>
      <permalink>rails-300rc-does-not-allow-config-instance-variable-in-controllers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actioncontroller config rails3.0rc</tag>
      <title>Rails 3.0.0rc does not allow @config instance variable in controllers</title>
      <updated-at type="datetime">2010-08-09T23:13:43+01:00</updated-at>
      <user-id type="integer">110865</user-id>
      <version type="integer">1</version>
      <user-name>Thomas Kadauke</user-name>
      <creator-name>Thomas Kadauke</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5342</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It is well [documented in the wiki](wiki.rubyonrails.org/rails/pages/reservedwords). `config` is off limits.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It is well &lt;a href=
&quot;wiki.rubyonrails.org/rails/pages/reservedwords&quot;&gt;documented in the
wiki&lt;/a&gt;. &lt;code&gt;config&lt;/code&gt; is off limits.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T14:35:35+01:00</created-at>
      <creator-id type="integer">110865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5342</number>
      <permalink>rails-300rc-does-not-allow-config-instance-variable-in-controllers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actioncontroller config rails3.0rc</tag>
      <title>Rails 3.0.0rc does not allow @config instance variable in controllers</title>
      <updated-at type="datetime">2010-08-10T14:35:40+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">2</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Thomas Kadauke</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5342</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Link was missing the http. Correct link: http://wiki.rubyonrails.org/rails/pages/reservedwords</body>
      <body-html>&lt;div&gt;&lt;p&gt;Link was missing the http. Correct link: &lt;a href=
&quot;http://wiki.rubyonrails.org/rails/pages/reservedwords&quot;&gt;http://wiki.rubyonrails.org/rails/pages/reservedwords&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T16:34:32+01:00</created-at>
      <creator-id type="integer">110865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5342</number>
      <permalink>rails-300rc-does-not-allow-config-instance-variable-in-controllers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actioncontroller config rails3.0rc</tag>
      <title>Rails 3.0.0rc does not allow @config instance variable in controllers</title>
      <updated-at type="datetime">2010-08-10T16:34:33+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">3</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Thomas Kadauke</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5342</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [25f1e015c0a89a11a679cda6e2fab70b54612f65]) Ensure @config is not a reserved instance variable in controllers. [#5342 state:resolved]
http://github.com/rails/rails/commit/25f1e015c0a89a11a679cda6e2fab70b54612f65</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/25f1e015c0a89a11a679cda6e2fab70b54612f65&quot;
title=
&quot;Changeset [25f1e015c0a89a11a679cda6e2fab70b54612f65]&quot;&gt;[25f1e015c0a89a11a679cda6e2fab70b54612f65]&lt;/a&gt;)
Ensure @config is not a reserved instance variable in controllers.
[&lt;a href=&quot;/projects/8994/tickets/5342&quot; title=
&quot;Ticket #5342&quot;&gt;#5342&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/25f1e015c0a89a11a679cda6e2fab70b54612f65&quot;&gt;
http://github.com/rails/rails/commit/25f1e015c0a89a11a679cda6e2fab7...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-11T14:26:39+01:00</created-at>
      <creator-id type="integer">110865</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5342</number>
      <permalink>rails-300rc-does-not-allow-config-instance-variable-in-controllers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actioncontroller config rails3.0rc</tag>
      <title>Rails 3.0.0rc does not allow @config instance variable in controllers</title>
      <updated-at type="datetime">2010-08-11T14:26:40+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Thomas Kadauke</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5342</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [e1b85c3bda78b887cb279b1c4092504feeacf6e4]) Ensure @config is not a reserved instance variable in controllers. [#5342 state:resolved]
http://github.com/rails/rails/commit/e1b85c3bda78b887cb279b1c4092504feeacf6e4</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/e1b85c3bda78b887cb279b1c4092504feeacf6e4&quot;
title=
&quot;Changeset [e1b85c3bda78b887cb279b1c4092504feeacf6e4]&quot;&gt;[e1b85c3bda78b887cb279b1c4092504feeacf6e4]&lt;/a&gt;)
Ensure @config is not a reserved instance variable in controllers.
[&lt;a href=&quot;/projects/8994/tickets/5342&quot; title=
&quot;Ticket #5342&quot;&gt;#5342&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/e1b85c3bda78b887cb279b1c4092504feeacf6e4&quot;&gt;
http://github.com/rails/rails/commit/e1b85c3bda78b887cb279b1c409250...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-11T14:27:21+01:00</created-at>
      <creator-id type="integer">110865</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5342</number>
      <permalink>rails-300rc-does-not-allow-config-instance-variable-in-controllers</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>actioncontroller config rails3.0rc</tag>
      <title>Rails 3.0.0rc does not allow @config instance variable in controllers</title>
      <updated-at type="datetime">2010-08-11T14:27:22+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Thomas Kadauke</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5342</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
