From f262b473974e20f01b3743cd66f453a573e5adcf Mon Sep 17 00:00:00 2001
From: Robert Pankowecki (Gavdi) <rpa@gavdi.com>
Date: Thu, 15 Jul 2010 22:16:59 +0200
Subject: [PATCH] test and fix collection_singular_ids= with string primary keys [#5125 state:resolved]

---
 activerecord/lib/active_record/associations.rb     |    2 +-
 .../has_many_through_associations_test.rb          |   26 +++++++++++++++++++-
 activerecord/test/fixtures/subscriptions.yml       |    2 +-
 activerecord/test/models/book.rb                   |    3 ++
 4 files changed, 30 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index 9fe8d54..7c6ddc5 100644
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1438,7 +1438,7 @@ module ActiveRecord
             end
 
             define_method("#{reflection.name.to_s.singularize}_ids=") do |new_value|
-              ids = (new_value || []).reject { |nid| nid.blank? }.map(&:to_i)
+              ids = (new_value || []).reject { |nid| nid.blank? }
               send("#{reflection.name}=", reflection.klass.find(ids).index_by(&:id).values_at(*ids))
             end
           end
diff --git a/activerecord/test/cases/associations/has_many_through_associations_test.rb b/activerecord/test/cases/associations/has_many_through_associations_test.rb
index e4dd810..ee3e31d 100644
--- a/activerecord/test/cases/associations/has_many_through_associations_test.rb
+++ b/activerecord/test/cases/associations/has_many_through_associations_test.rb
@@ -14,9 +14,15 @@ require 'models/toy'
 require 'models/contract'
 require 'models/company'
 require 'models/developer'
+require 'models/subscriber'
+require 'models/book'
+require 'models/subscription'
+
 
 class HasManyThroughAssociationsTest < ActiveRecord::TestCase
-  fixtures :posts, :readers, :people, :comments, :authors, :owners, :pets, :toys, :jobs, :references, :companies
+  fixtures :posts, :readers, :people, :comments, :authors, 
+           :owners, :pets, :toys, :jobs, :references, :companies,
+           :subscribers, :books, :subscriptions
 
   # Dummies to force column loads so query counts are clean.
   def setup
@@ -383,4 +389,22 @@ class HasManyThroughAssociationsTest < ActiveRecord::TestCase
       lambda { authors(:david).very_special_comments.delete(authors(:david).very_special_comments.first) },
     ].each {|block| assert_raise(ActiveRecord::HasManyThroughCantAssociateThroughHasOneOrManyReflection, &block) }
   end
+
+  def test_collection_singular_ids_getter_with_string_primary_keys
+    book = books(:awdr)
+    assert_equal 2, book.subscriber_ids.size
+    assert_equal [subscribers(:first).nick, subscribers(:second).nick].sort, book.subscriber_ids.sort
+  end
+
+  def test_collection_singular_ids_setter_with_string_primary_keys
+    assert_nothing_raised do
+      book = books(:awdr)
+      book.subscriber_ids = [subscribers(:second).nick]
+      assert_equal [subscribers(:second)], book.subscribers(true)
+
+      book.subscriber_ids = []
+      assert_equal [], book.subscribers(true)
+    end
+  end
+
 end
diff --git a/activerecord/test/fixtures/subscriptions.yml b/activerecord/test/fixtures/subscriptions.yml
index 371bfd3..5a93c12 100644
--- a/activerecord/test/fixtures/subscriptions.yml
+++ b/activerecord/test/fixtures/subscriptions.yml
@@ -9,4 +9,4 @@ webster_rfr:
 alterself_awdr:
   id: 3
   subscriber_id: alterself
-  book_id: 3
\ No newline at end of file
+  book_id: 1
diff --git a/activerecord/test/models/book.rb b/activerecord/test/models/book.rb
index cfd07ab..efefed9 100644
--- a/activerecord/test/models/book.rb
+++ b/activerecord/test/models/book.rb
@@ -1,4 +1,7 @@
 class Book < ActiveRecord::Base
   has_many :citations, :foreign_key => 'book1_id'
   has_many :references, :through => :citations, :source => :reference_of, :uniq => true
+  
+  has_many :subscriptions
+  has_many :subscribers, :through => :subscriptions
 end
-- 
1.7.0.4

