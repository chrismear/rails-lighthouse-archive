<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-02T23:19:25+01:00</created-at>
  <creator-id type="integer">62897</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5278</number>
  <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;http accepts mime action_dispatch&quot;</tag>
  <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
  <updated-at type="datetime">2010-12-05T18:39:57+00:00</updated-at>
  <user-id type="integer">62897</user-id>
  <version type="integer">15</version>
  <user-name>Erik Hetzner</user-name>
  <creator-name>Erik Hetzner</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>If a client supplies an &quot;`Accept: text/html,*/*`&quot; header, this should be equivalent to &quot;`Accept: */*,text/html`&quot;. In the patch to add a (failing) test attached, this is not the case.

Example:

@@@
class AdvancedController &lt; ActionController::Base
  def xml_only
    respond_to do |format|
      format.xml do
        render :content_type =&gt; 'application/xml', 
               :text =&gt; &quot;invalid xml&quot; and return
      end
    end
  end
end
@@@

If a client requests this with &quot;`Accept: */*, text/html`&quot;, the format.xml block is used, but if the client requests &quot;`Accept: text/html,*/*`&quot;, it is not.

My apologies that I cannot currently supply a fix. Thank you!</original-body>
  <latest-body>If a client supplies an &quot;`Accept: text/html,*/*`&quot; header, this should be equivalent to &quot;`Accept: */*,text/html`&quot;. In the patch to add a (failing) test attached, this is not the case.

Example:

@@@
class AdvancedController &lt; ActionController::Base
  def xml_only
    respond_to do |format|
      format.xml do
        render :content_type =&gt; 'application/xml', 
               :text =&gt; &quot;invalid xml&quot; and return
      end
    end
  end
end
@@@

If a client requests this with &quot;`Accept: */*, text/html`&quot;, the format.xml block is used, but if the client requests &quot;`Accept: text/html,*/*`&quot;, it is not.

My apologies that I cannot currently supply a fix. Thank you!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If a client supplies an &quot;&lt;code&gt;Accept: text/html,*/*&lt;/code&gt;&quot;
header, this should be equivalent to &quot;&lt;code&gt;Accept:
*/*,text/html&lt;/code&gt;&quot;. In the patch to add a (failing) test
attached, this is not the case.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class AdvancedController &amp;lt; ActionController::Base
  def xml_only
    respond_to do |format|
      format.xml do
        render :content_type =&amp;gt; 'application/xml', 
               :text =&amp;gt; &quot;invalid xml&quot; and return
      end
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If a client requests this with &quot;&lt;code&gt;Accept: */*,
text/html&lt;/code&gt;&quot;, the format.xml block is used, but if the client
requests &quot;&lt;code&gt;Accept: text/html,*/*&lt;/code&gt;&quot;, it is not.&lt;/p&gt;
&lt;p&gt;My apologies that I cannot currently supply a fix. Thank
you!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If a client supplies an &quot;`Accept: text/html,*/*`&quot; header, this should be equivalent to &quot;`Accept: */*,text/html`&quot;. In the patch to add a (failing) test attached, this is not the case.

Example:

@@@
class AdvancedController &lt; ActionController::Base
  def xml_only
    respond_to do |format|
      format.xml do
        render :content_type =&gt; 'application/xml', 
               :text =&gt; &quot;invalid xml&quot; and return
      end
    end
  end
end
@@@

If a client requests this with &quot;`Accept: */*, text/html`&quot;, the format.xml block is used, but if the client requests &quot;`Accept: text/html,*/*`&quot;, it is not.

My apologies that I cannot currently supply a fix. Thank you!</body>
      <body-html>&lt;div&gt;&lt;p&gt;If a client supplies an &quot;&lt;code&gt;Accept: text/html,*/*&lt;/code&gt;&quot;
header, this should be equivalent to &quot;&lt;code&gt;Accept:
*/*,text/html&lt;/code&gt;&quot;. In the patch to add a (failing) test
attached, this is not the case.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class AdvancedController &amp;lt; ActionController::Base
  def xml_only
    respond_to do |format|
      format.xml do
        render :content_type =&amp;gt; 'application/xml', 
               :text =&amp;gt; &quot;invalid xml&quot; and return
      end
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If a client requests this with &quot;&lt;code&gt;Accept: */*,
text/html&lt;/code&gt;&quot;, the format.xml block is used, but if the client
requests &quot;&lt;code&gt;Accept: text/html,*/*&lt;/code&gt;&quot;, it is not.&lt;/p&gt;
&lt;p&gt;My apologies that I cannot currently supply a fix. Thank
you!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-02T23:19:25+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-08-04T00:29:55+01:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">1</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It seems that this is as planned.  See the post at http://geminstallthat.wordpress.com/2008/05/14/ie6-accept-header-is-faulty/
There is a regex in actionpack/lib/action_dispatch/http/mime_negotiation.rb that checks for this (line 51):
@@@
 xhr? || (accept &amp;&amp; accept !~ /,\s*\*\/\*/)
@@@

Although the HTTP 1.1 spec (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) says it is allowed, the patch is in place for IE6. Thoughts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems that this is as planned. See the post at &lt;a href=
&quot;http://geminstallthat.wordpress.com/2008/05/14/ie6-accept-header-is-faulty/&quot;&gt;
http://geminstallthat.wordpress.com/2008/05/14/ie6-accept-header-is...&lt;/a&gt;&lt;br&gt;
There is a regex in
actionpack/lib/action_dispatch/http/mime_negotiation.rb that checks
for this (line 51):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; xhr? || (accept &amp;amp;&amp;amp; accept !~ /,\s**\/*/)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Although the HTTP 1.1 spec (&lt;a href=
&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&quot;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&lt;/a&gt;)
says it is allowed, the patch is in place for IE6. Thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-03T00:26:04+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-08-03T00:26:08+01:00</updated-at>
      <user-id type="integer">94849</user-id>
      <version type="integer">2</version>
      <user-name>trevmex</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for adding the appropriate tags; I wasn't sure which to add.

I don't have a lot of experience with the latest Rails, so take what I have to say with a grain of salt.

While IE's Accept header is a little strange, it is basically equivalent to &quot;*/*&quot;, which is not a ridiculous header to send if your client really can accept most formats.

In this case it is the server's responsibility to choose the preferred format to return to the client. Since format.html is the first in the respond_to block, shouldn't it have higher priority than a format.any catch-all response?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for adding the appropriate tags; I wasn't sure which to
add.&lt;/p&gt;
&lt;p&gt;I don't have a lot of experience with the latest Rails, so take
what I have to say with a grain of salt.&lt;/p&gt;
&lt;p&gt;While IE's Accept header is a little strange, it is basically
equivalent to &quot;&lt;em&gt;/&lt;/em&gt;&quot;, which is not a ridiculous header to
send if your client really can accept most formats.&lt;/p&gt;
&lt;p&gt;In this case it is the server's responsibility to choose the
preferred format to return to the client. Since format.html is the
first in the respond_to block, shouldn't it have higher priority
than a format.any catch-all response?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-03T01:15:52+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-08-03T01:15:57+01:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">3</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Above, third paragraph should be:

&gt; While IE's Accept header is a little strange, it is basically equivalent to &quot;`*/*`&quot;, which is not a ridiculous header
&gt; to send if your client really can accept most formats.

Markdown stole my `*`s.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Above, third paragraph should be:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While IE's Accept header is a little strange, it is basically
equivalent to &quot;&lt;code&gt;*/*&lt;/code&gt;&quot;, which is not a ridiculous header
to send if your client really can accept most formats.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Markdown stole my &lt;code&gt;*&lt;/code&gt;s.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T00:31:32+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-08-04T00:31:33+01:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">4</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>As background, I encountered this bug when attempting to create &amp; view a resource that only had an Atom representation:

@@@
def recent
  respond_to do |format|
    format.atom do
      render :content_type =&gt; 'application/atom+xml', 
             :text =&gt; &quot;invalid atom&quot; and return
    end
  end
end
@@@

Which does not work as expected (by displaying an atom feed) with a Firefox Accept header: `text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8`, but instead returns a 406 Not Acceptable. So this bug has potential real world impact.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As background, I encountered this bug when attempting to create
&amp;amp; view a resource that only had an Atom representation:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def recent
  respond_to do |format|
    format.atom do
      render :content_type =&amp;gt; 'application/atom+xml', 
             :text =&amp;gt; &quot;invalid atom&quot; and return
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which does not work as expected (by displaying an atom feed)
with a Firefox Accept header:
&lt;code&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/code&gt;,
but instead returns a 406 Not Acceptable. So this bug has potential
real world impact.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-04T00:43:02+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-08-04T00:43:04+01:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">5</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Any updates here?

Also Erik can you make that failing test patch according to http://rails.lighthouseapp.com/projects/8994/sending-patches so that you get credit for commit.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Any updates here?&lt;/p&gt;
&lt;p&gt;Also Erik can you make that failing test patch according to
&lt;a href=
&quot;http://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;http://rails.lighthouseapp.com/projects/8994/sending-patches&lt;/a&gt;
so that you get credit for commit.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T06:15:16+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-10-07T06:15:19+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">6</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Rohit,

Here you go; hope I did things right.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Rohit,&lt;/p&gt;
&lt;p&gt;Here you go; hope I did things right.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T01:21:42+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-10-09T01:21:44+01:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">7</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T01:32:41+01:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-10-09T01:32:43+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">8</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-07T12:31:07+00:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 40272
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-11-07T12:31:11+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>We have changed this behavior on master. Please read: http://www.neeraj.name/2010/11/23/mime-type-resolution-in-rails.html for more information.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We have changed this behavior on master. Please read: &lt;a href=
&quot;http://www.neeraj.name/2010/11/23/mime-type-resolution-in-rails.html&quot;&gt;
http://www.neeraj.name/2010/11/23/mime-type-resolution-in-rails.html&lt;/a&gt;
for more information.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-04T17:48:54+00:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-12-04T17:49:09+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Thanks!

A quick read of that blog post reveals:

&gt; I am going to assume that in this case HTTP_ACCEPT sent by browser looks really simple like this
&gt;  text/javascript, text/html, text/plain

[...]

&gt; So browser is saying that I prefer documents in following order
&gt;  js
&gt;  html
&gt;  plain

This is not correct, as this bug report states. Order does not matter in an accept header, only q values matter in deciding which the client prefers. I don't know if the implementation is effected, but the blog post should probably be corrected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks!&lt;/p&gt;
&lt;p&gt;A quick read of that blog post reveals:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am going to assume that in this case HTTP_ACCEPT sent by
browser looks really simple like this text/javascript, text/html,
text/plain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[...]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So browser is saying that I prefer documents in following order
js html plain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is not correct, as this bug report states. Order does not
matter in an accept header, only q values matter in deciding which
the client prefers. I don't know if the implementation is effected,
but the blog post should probably be corrected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-04T18:10:29+00:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-12-04T18:10:44+00:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">11</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>rails currently does take q value into account.

However if there is no q value specified then what. In that case rails gives preference to the ones specified earlier in the HTTP_ACCEPT value.

Hope that clears your question.</body>
      <body-html>&lt;div&gt;&lt;p&gt;rails currently does take q value into account.&lt;/p&gt;
&lt;p&gt;However if there is no q value specified then what. In that case
rails gives preference to the ones specified earlier in the
HTTP_ACCEPT value.&lt;/p&gt;
&lt;p&gt;Hope that clears your question.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-04T18:22:07+00:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-12-04T18:22:25+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">12</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Hi Neeraj,

Of course rails is free to return whatever it wants from the set of possible values supplied by the accept header, if they have equal q values.

But the client has not preferred, in the above example, javascript over html. If rails returns javascript, it is because rails prefers it, not the client.

As an application author I would like to be able to specify in some way that I would rather return HTML than, say, javascript, or the other way round, if the client has not specified a preference. And the order of the accept header does not specify a preference.

In any case, thank you for working on this!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Neeraj,&lt;/p&gt;
&lt;p&gt;Of course rails is free to return whatever it wants from the set
of possible values supplied by the accept header, if they have
equal q values.&lt;/p&gt;
&lt;p&gt;But the client has not preferred, in the above example,
javascript over html. If rails returns javascript, it is because
rails prefers it, not the client.&lt;/p&gt;
&lt;p&gt;As an application author I would like to be able to specify in
some way that I would rather return HTML than, say, javascript, or
the other way round, if the client has not specified a preference.
And the order of the accept header does not specify a
preference.&lt;/p&gt;
&lt;p&gt;In any case, thank you for working on this!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-04T21:26:08+00:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-12-04T21:26:27+00:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">13</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Exactly Erik, I believe this scenario is fixed in Rails master. The blog post explains why and how it is fixed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Exactly Erik, I believe this scenario is fixed in Rails master.
The blog post explains why and how it is fixed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-04T21:32:11+00:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-12-04T21:32:29+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">14</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Maybe we can start over. I posted a comment on the blog post. Quotations are from the blog post.

&gt; For all documents that have same q value give high priority to the one that came first in the list.

An HTTP client does not mean to prioritize mime types by their ordering in the accept header; nothing in the spec says that order matters.

&gt; So browser is saying that I prefer documents in following order

&gt; &gt; js
&gt; &gt; html
&gt; &gt; plain

Again, the client is not saying that it prefers documents in any order; js, html &amp; plain have the same q value; order does not matter.

Now, rails can do whatever it wants with these headers, as long as it honors q values. But order of accept headers is basically random,
and using it to make decisions will, in my opinion, lead to strange errors.

Here is a real world problem with this.

&quot;Accept: */*&quot; is treated differently from &quot;Accept: text/xml, text/html&quot; in terms of which respond_to block is used. In other words, if the respond_to block contains:

  format.xml { ... }
  format.html { ... }

If the client uses &quot;Accept: */*&quot;, the html block will be used. If the client uses
&quot;Accept: text/xml, text/html&quot;, the xml block will be used. This would be suprising to the application author, as well as the client.

I know that there are real world problems with bad accept headers being sent by the client, but I don't see how this solution solves those problems.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Maybe we can start over. I posted a comment on the blog post.
Quotations are from the blog post.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For all documents that have same q value give high priority to
the one that came first in the list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;An HTTP client does not mean to prioritize mime types by their
ordering in the accept header; nothing in the spec says that order
matters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So browser is saying that I prefer documents in following
order&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;js html plain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again, the client is not saying that it prefers documents in any
order; js, html &amp;amp; plain have the same q value; order does not
matter.&lt;/p&gt;
&lt;p&gt;Now, rails can do whatever it wants with these headers, as long
as it honors q values. But order of accept headers is basically
random,&lt;br&gt;
and using it to make decisions will, in my opinion, lead to strange
errors.&lt;/p&gt;
&lt;p&gt;Here is a real world problem with this.&lt;/p&gt;
&lt;p&gt;&quot;Accept: &lt;em&gt;/&lt;/em&gt;&quot; is treated differently from &quot;Accept:
text/xml, text/html&quot; in terms of which respond_to block is used. In
other words, if the respond_to block contains:&lt;/p&gt;
&lt;p&gt;format.xml { ... } format.html { ... }&lt;/p&gt;
&lt;p&gt;If the client uses &quot;Accept: &lt;em&gt;/&lt;/em&gt;&quot;, the html block will be
used. If the client uses&lt;br&gt;
&quot;Accept: text/xml, text/html&quot;, the xml block will be used. This
would be suprising to the application author, as well as the
client.&lt;/p&gt;
&lt;p&gt;I know that there are real world problems with bad accept
headers being sent by the client, but I don't see how this solution
solves those problems.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-05T18:39:40+00:00</created-at>
      <creator-id type="integer">62897</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5278</number>
      <permalink>order-of-an-accept-header-should-not-matter-to-respond_to-rails-300rc</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;http accepts mime action_dispatch&quot;</tag>
      <title>Order of an accept header should not matter to respond_to (Rails 3.0.0.rc)</title>
      <updated-at type="datetime">2010-12-05T18:39:57+00:00</updated-at>
      <user-id type="integer">62897</user-id>
      <version type="integer">15</version>
      <user-name>Erik Hetzner</user-name>
      <creator-name>Erik Hetzner</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5278</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2b88a099bdaa59efc4a6e25c099a28f98ec7d259</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-02T23:19:25+01:00</created-at>
      <filename>accept_header_order_test.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">612320</id>
      <size type="integer">1717</size>
      <uploader-id type="integer">62897</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/612320/accept_header_order_test.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>f070169d2f52394ab53f9d0c674c4e803fe6080f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-09T01:21:42+01:00</created-at>
      <filename>accept_header_order_test_2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">712149</id>
      <size type="integer">2074</size>
      <uploader-id type="integer">62897</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/712149/accept_header_order_test_2.diff</url>
    </attachment>
  </attachments>
</ticket>
