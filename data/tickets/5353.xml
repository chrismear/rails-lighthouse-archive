<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:13+00:00</created-at>
  <creator-id type="integer">111040</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5353</number>
  <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord associations rails3rc tests</tag>
  <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
  <updated-at type="datetime">2011-02-17T06:48:13+00:00</updated-at>
  <user-id type="integer">111040</user-id>
  <version type="integer">10</version>
  <user-name>Brian Underwood</user-name>
  <creator-name>Brian Underwood</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
  <priority-name>Low</priority-name>
  <original-body>I have two basic models (sample Rails app with a failing test attached):

@@@ ruby
class Bar &lt; ActiveRecord::Base
  default_scope select('id')
  has_many :bazs
end
@@@


@@@ ruby
class Baz &lt; ActiveRecord::Base
  belongs_to :bar
end
@@@

When I try to refer to a &quot;bar&quot; object on a &quot;Baz&quot; object, I get an error (Either a PGError or SQLite3::SQLException in the case of my sample app).  This seems to do with having a default_scope with a select() scoping on the targetted object.

When I go to belongs_to_association.rb and comment out the following line in BelongsToAssociation#find_target it seems to work fine:

@@@ ruby
            :select     =&gt; @reflection.options[:select],
@@@

That's obviously not a solution, but it might narrow down the search for the issue.

I'm using:
ruby 1.8.7 (2010-06-23 patchlevel 299) [i686-darwin10.4.0]
Rails 3.0.0.rc</original-body>
  <latest-body>I have two basic models (sample Rails app with a failing test attached):

@@@ ruby
class Bar &lt; ActiveRecord::Base
  default_scope select('id')
  has_many :bazs
end
@@@


@@@ ruby
class Baz &lt; ActiveRecord::Base
  belongs_to :bar
end
@@@

When I try to refer to a &quot;bar&quot; object on a &quot;Baz&quot; object, I get an error (Either a PGError or SQLite3::SQLException in the case of my sample app).  This seems to do with having a default_scope with a select() scoping on the targetted object.

When I go to belongs_to_association.rb and comment out the following line in BelongsToAssociation#find_target it seems to work fine:

@@@ ruby
            :select     =&gt; @reflection.options[:select],
@@@

That's obviously not a solution, but it might narrow down the search for the issue.

I'm using:
ruby 1.8.7 (2010-06-23 patchlevel 299) [i686-darwin10.4.0]
Rails 3.0.0.rc</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have two basic models (sample Rails app with a failing test
attached):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Bar &amp;lt; ActiveRecord::Base
  default_scope select('id')
  has_many :bazs
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Baz &amp;lt; ActiveRecord::Base
  belongs_to :bar
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I try to refer to a &quot;bar&quot; object on a &quot;Baz&quot; object, I get
an error (Either a PGError or SQLite3::SQLException in the case of
my sample app). This seems to do with having a default_scope with a
select() scoping on the targetted object.&lt;/p&gt;
&lt;p&gt;When I go to belongs_to_association.rb and comment out the
following line in BelongsToAssociation#find_target it seems to work
fine:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;            :select     =&amp;gt; @reflection.options[:select],&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's obviously not a solution, but it might narrow down the
search for the issue.&lt;/p&gt;
&lt;p&gt;I'm using:&lt;br&gt;
ruby 1.8.7 (2010-06-23 patchlevel 299) [i686-darwin10.4.0]&lt;br&gt;
Rails 3.0.0.rc&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have two basic models (sample Rails app with a failing test attached):

@@@ ruby
class Bar &lt; ActiveRecord::Base
  default_scope select('id')
  has_many :bazs
end
@@@


@@@ ruby
class Baz &lt; ActiveRecord::Base
  belongs_to :bar
end
@@@

When I try to refer to a &quot;bar&quot; object on a &quot;Baz&quot; object, I get an error (Either a PGError or SQLite3::SQLException in the case of my sample app).  This seems to do with having a default_scope with a select() scoping on the targetted object.

When I go to belongs_to_association.rb and comment out the following line in BelongsToAssociation#find_target it seems to work fine:

@@@ ruby
            :select     =&gt; @reflection.options[:select],
@@@

That's obviously not a solution, but it might narrow down the search for the issue.

I'm using:
ruby 1.8.7 (2010-06-23 patchlevel 299) [i686-darwin10.4.0]
Rails 3.0.0.rc</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have two basic models (sample Rails app with a failing test
attached):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Bar &amp;lt; ActiveRecord::Base
  default_scope select('id')
  has_many :bazs
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Baz &amp;lt; ActiveRecord::Base
  belongs_to :bar
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I try to refer to a &quot;bar&quot; object on a &quot;Baz&quot; object, I get
an error (Either a PGError or SQLite3::SQLException in the case of
my sample app). This seems to do with having a default_scope with a
select() scoping on the targetted object.&lt;/p&gt;
&lt;p&gt;When I go to belongs_to_association.rb and comment out the
following line in BelongsToAssociation#find_target it seems to work
fine:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;            :select     =&amp;gt; @reflection.options[:select],&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's obviously not a solution, but it might narrow down the
search for the issue.&lt;/p&gt;
&lt;p&gt;I'm using:&lt;br&gt;
ruby 1.8.7 (2010-06-23 patchlevel 299) [i686-darwin10.4.0]&lt;br&gt;
Rails 3.0.0.rc&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T21:21:52+01:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord associations&quot; rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2010-08-10T21:21:54+01:00</updated-at>
      <user-id type="integer">111040</user-id>
      <version type="integer">1</version>
      <user-name>Brian Underwood</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Try using rails 1.9.2. Rails 3 is not compatible with 1.8 AFAIK.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Try using rails 1.9.2. Rails 3 is not compatible with 1.8
AFAIK.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T01:14:11+01:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord associations&quot; rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2010-08-11T01:14:13+01:00</updated-at>
      <user-id type="integer">106668</user-id>
      <version type="integer">2</version>
      <user-name>Henrik Hodne</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>http://edgeguides.rubyonrails.org/3_0_release_notes.html?utm_source=twitterfeed&amp;utm_medium=twitter#rails-3-requires-at-least-ruby-187

&quot;Rails 3.0 requires Ruby 1.8.7 or higher. Support for all of the previous Ruby versions has been dropped officially and you should upgrade as early as possible. Rails 3.0 is also compatible with Ruby 1.9.2.&quot;


http://paulbarry.com/articles/2009/09/14/why-rails-3-will-require-ruby-1-8-7</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://edgeguides.rubyonrails.org/3_0_release_notes.html?utm_source=twitterfeed&amp;amp;utm_medium=twitter#rails-3-requires-at-least-ruby-187&quot;&gt;
http://edgeguides.rubyonrails.org/3_0_release_notes.html?utm_source...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&quot;Rails 3.0 requires Ruby 1.8.7 or higher. Support for all of the
previous Ruby versions has been dropped officially and you should
upgrade as early as possible. Rails 3.0 is also compatible with
Ruby 1.9.2.&quot;&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://paulbarry.com/articles/2009/09/14/why-rails-3-will-require-ruby-1-8-7&quot;&gt;
http://paulbarry.com/articles/2009/09/14/why-rails-3-will-require-r...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T13:30:28+01:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord associations&quot; rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2010-08-11T13:30:31+01:00</updated-at>
      <user-id type="integer">111040</user-id>
      <version type="integer">3</version>
      <user-name>Brian Underwood</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T05:21:21+01:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord associations\&quot; rails3rc tests&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2010-10-07T05:21:21+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">4</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If you want this fixed, pretty much the only way to go is providing a patch with a fix yourself or at least one with a failing test case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you want this fixed, pretty much the only way to go is
providing a patch with a fix yourself or at least one with a
failing test case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T21:20:38+01:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2010-10-07T21:20:40+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">5</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry for not getting back on this sooner, but it seems to be working fine in 3.0.0 (though I just upgraded to 3.0.1 as well ;).  I believe I was on a RC when seeing this bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for not getting back on this sooner, but it seems to be
working fine in 3.0.0 (though I just upgraded to 3.0.1 as well ;).
I believe I was on a RC when seeing this bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-18T15:03:36+01:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2010-10-18T15:03:38+01:00</updated-at>
      <user-id type="integer">111040</user-id>
      <version type="integer">6</version>
      <user-name>Brian Underwood</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry for not getting back on this sooner, but it seems to be working fine in 3.0.0 (though I just upgraded to 3.0.1 as well ;). I believe I was on a RC when seeing this bug.When I try to refer to a &quot;bar&quot; object on a &quot;&lt;a href=&quot;http://www.weddinginthebox.com/blog/pleated-wedding-dress.html&quot;&gt;pleated wedding dresses&lt;/a&gt;&quot; object, I get an error (Either a PGError or SQLite3::SQLException in the case of my sample app). This seems to do with having a default_scope with a select() scoping on the targetted object.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for not getting back on this sooner, but it seems to be
working fine in 3.0.0 (though I just upgraded to 3.0.1 as well ;).
I believe I was on a RC when seeing this bug.When I try to refer to
a &quot;bar&quot; object on a &quot;&lt;a href=
&quot;http://www.weddinginthebox.com/blog/pleated-wedding-dress.html&quot;&gt;pleated
wedding dresses&lt;/a&gt;&quot; object, I get an error (Either a PGError or
SQLite3::SQLException in the case of my sample app). This seems to
do with having a default_scope with a select() scoping on the
targetted object.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T06:17:07+01:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2010-10-19T17:52:53+01:00</updated-at>
      <user-id type="integer">120610</user-id>
      <version type="integer">7</version>
      <user-name>koukou</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:29:08+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2011-02-02T16:36:38+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:29:10+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2011-02-02T16:36:49+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Feel free to close this ticket.  I believe it was resolved by #5845

Also, you might be able to close #1860 as well, I believe it's the same issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Feel free to close this ticket. I believe it was resolved by
&lt;a href=&quot;/projects/8994/tickets/5845&quot; title=
&quot;Ticket #5845&quot;&gt;#5845&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, you might be able to close &lt;a href=
&quot;/projects/8994/tickets/1860&quot; title=&quot;Ticket #1860&quot;&gt;#1860&lt;/a&gt; as
well, I believe it's the same issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-07T16:38:03+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2011-02-07T16:38:11+00:00</updated-at>
      <user-id type="integer">111040</user-id>
      <version type="integer">10</version>
      <user-name>Brian Underwood</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:14:27+00:00</created-at>
      <creator-id type="integer">111040</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5353</number>
      <permalink>activerecord-adds-comma-to-querys-column-list-when-referring-to-a-model-with-a-default_scope-select</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord associations rails3rc tests</tag>
      <title>ActiveRecord adds comma to query's column list when referring to a model with a default_scope select()</title>
      <updated-at type="datetime">2011-02-17T06:48:13+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">11</version>
      <user-name>gfh</user-name>
      <creator-name>Brian Underwood</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5353</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a8a6bc22e0d93a7ab772d3958d34775796210bb4</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2010-08-10T21:21:52+01:00</created-at>
      <filename>bug_sample_app.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">622665</id>
      <size type="integer">108741</size>
      <uploader-id type="integer">111040</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/622665/bug_sample_app.zip</url>
    </attachment>
  </attachments>
</ticket>
