<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-19T07:06:46+01:00</created-at>
  <creator-id type="integer">22459</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">713</number>
  <permalink>new-inflectors-actionize-and-parameterize</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>New Inflectors: Actionize and Parameterize</title>
  <updated-at type="datetime">2010-11-08T08:52:40+00:00</updated-at>
  <user-id type="integer">94458</user-id>
  <version type="integer">18</version>
  <user-name>Jeff Kreeftmeijer</user-name>
  <creator-name>Matt Darby</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
  <milestone-title>2.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>I've attached a patch that introduces two new Inflectors: Actionize and Parameterize. Each method is tested and documented.

h3. Actionize

Transforms a string in titleize() form to a string suitable for a action name
@@@@ ruby
  &quot;Expense Report&quot;.actionize         # =&gt; &quot;expense_report&quot;
  &quot;My Totally Cool Action&quot;.actionize # =&gt; &quot;my_totally_cool_action&quot;
   
  @reports = ['Expense Report', 'Employee Hours']
  @reports.each do |report_name|
    link_to(report_name, &quot;/reports/#{report_name.actionize}&quot;)
  end
  # =&gt; &quot;&lt;a href = '/reports/expense_report'&gt;Expense Report&lt;/a&gt;
        &lt;a href = '/reports/employee_hours'&gt;Employee Hours&lt;/a&gt;&quot;
@@@@

h3. Parameterize

@@@@ ruby
Replaces special characters in a string so that it may be used as part of a 'pretty' URL.

==== Examples

  class Person
    def to_param
      &quot;#{self.id}-#{self.name.parameterize}&quot;
    end
  end

  @person = Person.find(1)
  # =&gt; #&lt;Person id: 1, name: &quot;Donald E. Knuth&quot;&gt;

  &lt;%= link_to(@person.name, person_path %&gt;
  # =&gt; &lt;a href=&quot;/person/1-Donald_E_Knuth&quot;&gt;Login&lt;/a&gt;
@@@@</original-body>
  <latest-body>I've attached a patch that introduces two new Inflectors: Actionize and Parameterize. Each method is tested and documented.

h3. Actionize

Transforms a string in titleize() form to a string suitable for a action name
@@@@ ruby
  &quot;Expense Report&quot;.actionize         # =&gt; &quot;expense_report&quot;
  &quot;My Totally Cool Action&quot;.actionize # =&gt; &quot;my_totally_cool_action&quot;
   
  @reports = ['Expense Report', 'Employee Hours']
  @reports.each do |report_name|
    link_to(report_name, &quot;/reports/#{report_name.actionize}&quot;)
  end
  # =&gt; &quot;&lt;a href = '/reports/expense_report'&gt;Expense Report&lt;/a&gt;
        &lt;a href = '/reports/employee_hours'&gt;Employee Hours&lt;/a&gt;&quot;
@@@@

h3. Parameterize

@@@@ ruby
Replaces special characters in a string so that it may be used as part of a 'pretty' URL.

==== Examples

  class Person
    def to_param
      &quot;#{self.id}-#{self.name.parameterize}&quot;
    end
  end

  @person = Person.find(1)
  # =&gt; #&lt;Person id: 1, name: &quot;Donald E. Knuth&quot;&gt;

  &lt;%= link_to(@person.name, person_path %&gt;
  # =&gt; &lt;a href=&quot;/person/1-Donald_E_Knuth&quot;&gt;Login&lt;/a&gt;
@@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I've attached a patch that introduces two new Inflectors: Actionize and Parameterize. Each method is tested and documented.
&lt;/p&gt;
&lt;h3&gt;
Actionize
&lt;/h3&gt;
&lt;p&gt;
Transforms a string in titleize() form to a string suitable for a action name
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot; ruby&quot;&gt;  &amp;quot;Expense Report&amp;quot;.actionize         # =&amp;gt; &amp;quot;expense_report&amp;quot;
  &amp;quot;My Totally Cool Action&amp;quot;.actionize # =&amp;gt; &amp;quot;my_totally_cool_action&amp;quot;
   
  @reports = ['Expense Report', 'Employee Hours']
  @reports.each do |report_name|
    link_to(report_name, &amp;quot;/reports/#{report_name.actionize}&amp;quot;)
  end
  # =&amp;gt; &amp;quot;&amp;lt;a href = '/reports/expense_report'&amp;gt;Expense Report&amp;lt;/a&amp;gt;
        &amp;lt;a href = '/reports/employee_hours'&amp;gt;Employee Hours&amp;lt;/a&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;
Parameterize
&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot; ruby&quot;&gt;Replaces special characters in a string so that it may be used as part of a 'pretty' URL.

==== Examples

  class Person
    def to_param
      &amp;quot;#{self.id}-#{self.name.parameterize}&amp;quot;
    end
  end

  @person = Person.find(1)
  # =&amp;gt; #&amp;lt;Person id: 1, name: &amp;quot;Donald E. Knuth&amp;quot;&amp;gt;

  &amp;lt;%= link_to(@person.name, person_path %&amp;gt;
  # =&amp;gt; &amp;lt;a href=&amp;quot;/person/1-Donald_E_Knuth&amp;quot;&amp;gt;Login&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've attached a patch that introduces two new Inflectors: Actionize and Parameterize. Each method is tested and documented.

h3. Actionize

Transforms a string in titleize() form to a string suitable for a action name
@@@@ ruby
  &quot;Expense Report&quot;.actionize         # =&gt; &quot;expense_report&quot;
  &quot;My Totally Cool Action&quot;.actionize # =&gt; &quot;my_totally_cool_action&quot;
   
  @reports = ['Expense Report', 'Employee Hours']
  @reports.each do |report_name|
    link_to(report_name, &quot;/reports/#{report_name.actionize}&quot;)
  end
  # =&gt; &quot;&lt;a href = '/reports/expense_report'&gt;Expense Report&lt;/a&gt;
        &lt;a href = '/reports/employee_hours'&gt;Employee Hours&lt;/a&gt;&quot;
@@@@

h3. Parameterize

@@@@ ruby
Replaces special characters in a string so that it may be used as part of a 'pretty' URL.

==== Examples

  class Person
    def to_param
      &quot;#{self.id}-#{self.name.parameterize}&quot;
    end
  end

  @person = Person.find(1)
  # =&gt; #&lt;Person id: 1, name: &quot;Donald E. Knuth&quot;&gt;

  &lt;%= link_to(@person.name, person_path %&gt;
  # =&gt; &lt;a href=&quot;/person/1-Donald_E_Knuth&quot;&gt;Login&lt;/a&gt;
@@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've attached a patch that introduces two new Inflectors: Actionize and Parameterize. Each method is tested and documented.
&lt;/p&gt;
&lt;h3&gt;
Actionize
&lt;/h3&gt;
&lt;p&gt;
Transforms a string in titleize() form to a string suitable for a action name
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot; ruby&quot;&gt;  &amp;quot;Expense Report&amp;quot;.actionize         # =&amp;gt; &amp;quot;expense_report&amp;quot;
  &amp;quot;My Totally Cool Action&amp;quot;.actionize # =&amp;gt; &amp;quot;my_totally_cool_action&amp;quot;
   
  @reports = ['Expense Report', 'Employee Hours']
  @reports.each do |report_name|
    link_to(report_name, &amp;quot;/reports/#{report_name.actionize}&amp;quot;)
  end
  # =&amp;gt; &amp;quot;&amp;lt;a href = '/reports/expense_report'&amp;gt;Expense Report&amp;lt;/a&amp;gt;
        &amp;lt;a href = '/reports/employee_hours'&amp;gt;Employee Hours&amp;lt;/a&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;
Parameterize
&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot; ruby&quot;&gt;Replaces special characters in a string so that it may be used as part of a 'pretty' URL.

==== Examples

  class Person
    def to_param
      &amp;quot;#{self.id}-#{self.name.parameterize}&amp;quot;
    end
  end

  @person = Person.find(1)
  # =&amp;gt; #&amp;lt;Person id: 1, name: &amp;quot;Donald E. Knuth&amp;quot;&amp;gt;

  &amp;lt;%= link_to(@person.name, person_path %&amp;gt;
  # =&amp;gt; &amp;lt;a href=&amp;quot;/person/1-Donald_E_Knuth&amp;quot;&amp;gt;Login&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-27T15:39:02+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-27T15:39:02+01:00</updated-at>
      <user-id type="integer">22459</user-id>
      <version type="integer">1</version>
      <user-name>Matt Darby</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>#actionize seems useful, if only to have a more readable method for using existing functionality.

i guess i could say the same about #parameterize, except that its function is to make a string url-safe, in a very generic way, and there are already methods (with appropriate naming, this time) which do that, right? 

http://api.rubyonrails.org/classes/ActiveSupport/CoreExtensions/String/Inflections.html#M000481

ActiveSupport::CoreExtensions::String::Inflections::underscore()

is the same thing, I take it?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
#actionize seems useful, if only to have a more readable method for using existing functionality.
&lt;/p&gt;&lt;p&gt;
i guess i could say the same about #parameterize, except that its function is to make a string url-safe, in a very generic way, and there are already methods (with appropriate naming, this time) which do that, right?
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://api.rubyonrails.org/classes/ActiveSupport/CoreExtensions/String/Inflections.html#M000481&quot;&gt;http://api.rubyonrails.org/class...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
ActiveSupport::CoreExtensions::String::Inflections::underscore()
&lt;/p&gt;&lt;p&gt;
is the same thing, I take it?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-27T18:03:29+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-27T18:03:29+01:00</updated-at>
      <user-id type="integer">10244</user-id>
      <version type="integer">2</version>
      <user-name>James Cropcho</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>#underscore and #parameterize differ in how they handle spaces and special characters.

@@@@ ruby
&gt;&gt; &quot;Donald E. Knuth&quot;.underscore
=&gt; &quot;donald e. knuth&quot;
&gt;&gt; &quot;Donald E. Knuth&quot;.parameterize
=&gt; &quot;Donald_E_Knuth&quot;
@@@@

It seems that #underscore expects a camelcased string, not a more human-readable one.

#actionize is like #tableize, but it replaces spaces with underscores (by default), and doesn't pluralize the output.

@@@@ ruby
&gt;&gt; &quot;Expense Report&quot;.tableize
=&gt; &quot;expense reports&quot;
&gt;&gt; &quot;Expense Report&quot;.actionize
=&gt; &quot;expense_report&quot;
@@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
#underscore and #parameterize differ in how they handle spaces and special characters.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot; ruby&quot;&gt;&amp;gt;&amp;gt; &amp;quot;Donald E. Knuth&amp;quot;.underscore
=&amp;gt; &amp;quot;donald e. knuth&amp;quot;
&amp;gt;&amp;gt; &amp;quot;Donald E. Knuth&amp;quot;.parameterize
=&amp;gt; &amp;quot;Donald_E_Knuth&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
It seems that #underscore expects a camelcased string, not a more human-readable one.
&lt;/p&gt;&lt;p&gt;
#actionize is like #tableize, but it replaces spaces with underscores (by default), and doesn't pluralize the output.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot; ruby&quot;&gt;&amp;gt;&amp;gt; &amp;quot;Expense Report&amp;quot;.tableize
=&amp;gt; &amp;quot;expense reports&amp;quot;
&amp;gt;&amp;gt; &amp;quot;Expense Report&amp;quot;.actionize
=&amp;gt; &amp;quot;expense_report&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-27T18:46:22+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-27T18:46:22+01:00</updated-at>
      <user-id type="integer">22459</user-id>
      <version type="integer">3</version>
      <user-name>Matt Darby</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-27T18:48:58+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-27T18:48:58+01:00</updated-at>
      <user-id type="integer">10244</user-id>
      <version type="integer">4</version>
      <user-name>James Cropcho</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>i guess it looks like the functionality doesn't exist, esp not under the proper naming per its usage. also, it seems genuinely useful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
i guess it looks like the functionality doesn't exist, esp not under the proper naming per its usage. also, it seems genuinely useful.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-27T18:49:54+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-27T18:49:54+01:00</updated-at>
      <user-id type="integer">10244</user-id>
      <version type="integer">5</version>
      <user-name>James Cropcho</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>actionize seems like a reasonable additional, although I haven't ever needed any funtionality similar to this.
parameterize is a case by itself. There's lots of plugins out there that provide functionality to create URL friendly permalinks such as Rick's permalink_fu. If you have something like the parameterize functionality, you most definitely also have a permalink column in your model which defies the purpose of the method.

Another thing to consider is that it doesn't play well with Rails' recent i18n efforts. In non-English speaking countries, it's likely that people's, places' etc. names include non-standard letters. 
Take Tarmo T&#228;nav (sorry for using your name here ;-)) for example. With your Regexp, if we parameterized Tarmo, this would be something like 1-Tarmo_T_nav - which is almost certainly not what you'd want (and definitely not what Tarmo would want).
To give you an idea what a German version of parameterize would look like, I've uploaded my current permalink creation method. Find it &quot;here&quot;:http://gist.github.com/2843. Oh, and by the way: When I wrote this code I was pretty new to Ruby and didn't know that Arrays are valid Hash keys - that's why it was inverted! ;-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
actionize seems like a reasonable additional, although I haven't ever needed any funtionality similar to this.
&lt;/p&gt;&lt;p&gt;
parameterize is a case by itself. There's lots of plugins out there that provide functionality to create URL friendly permalinks such as Rick's permalink_fu. If you have something like the parameterize functionality, you most definitely also have a permalink column in your model which defies the purpose of the method.
&lt;/p&gt;&lt;p&gt;
Another thing to consider is that it doesn't play well with Rails' recent i18n efforts. In non-English speaking countries, it's likely that people's, places' etc. names include non-standard letters.
&lt;/p&gt;&lt;p&gt;
Take Tarmo T&#228;nav (sorry for using your name here ;-)) for example. With your Regexp, if we parameterized Tarmo, this would be something like 1-Tarmo_T_nav - which is almost certainly not what you'd want (and definitely not what Tarmo would want).
&lt;/p&gt;&lt;p&gt;
To give you an idea what a German version of parameterize would look like, I've uploaded my current permalink creation method. Find it &lt;a href=&quot;http://gist.github.com/2843&quot;&gt;here&lt;/a&gt;. Oh, and by the way: When I wrote this code I was pretty new to Ruby and didn't know that Arrays are valid Hash keys - that's why it was inverted! ;-)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-28T06:46:18+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-28T06:46:18+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">6</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I usually use

&lt;pre&gt;
      t = Iconv.new(&quot;ASCII//TRANSLIT&quot;, &quot;utf-8&quot;).iconv(text)
      t = t.downcase.strip.gsub(/[^-_\s[:alnum:]]/, '').squeeze(' ').tr(' ', '-')
      (t.blank?) ? '-' : t
&lt;/pre&gt;

for permalinks, can be optimized though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I usually use
&lt;/p&gt;&lt;p&gt;
&lt;pre&gt;
&lt;/p&gt;&lt;p&gt;
t = Iconv.new(&quot;ASCII//TRANSLIT&quot;, &quot;utf-8&quot;).iconv(text)
&lt;/p&gt;&lt;p&gt;
t = t.downcase.strip.gsub(/[^-_\s[:alnum:]]/, '').squeeze(' ').tr(' ', '-')
&lt;/p&gt;&lt;p&gt;
(t.blank?) ? '-' : t
&lt;/p&gt;&lt;p&gt;
&lt;/pre&gt;
&lt;/p&gt;&lt;p&gt;
for permalinks, can be optimized though.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-28T09:55:59+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-28T09:55:59+01:00</updated-at>
      <user-id type="integer">1075</user-id>
      <version type="integer">7</version>
      <user-name>Claudio Poli</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Clemens

Actually, I don't use permalinks in this application. I simply override #to_param to make the link a little more helpful to the end user and for cheap SEO.

You make a good point about #parameterize's anglo-centric-ness. I'm going to look at what kain posted and see if that will fill in the gaps.

As for #actionize; it's really nice for DRYing up cases such as the 'report' example I listed earlier. At any rate it seems as though it would be a natural add to Inflector as the functionality doesn't exist.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
@Clemens
&lt;/p&gt;&lt;p&gt;
Actually, I don't use permalinks in this application. I simply override #to_param to make the link a little more helpful to the end user and for cheap SEO.
&lt;/p&gt;&lt;p&gt;
You make a good point about #parameterize's anglo-centric-ness. I'm going to look at what kain posted and see if that will fill in the gaps.
&lt;/p&gt;&lt;p&gt;
As for #actionize; it's really nice for DRYing up cases such as the 'report' example I listed earlier. At any rate it seems as though it would be a natural add to Inflector as the functionality doesn't exist.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-28T12:53:49+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-07-28T12:53:49+01:00</updated-at>
      <user-id type="integer">22459</user-id>
      <version type="integer">8</version>
      <user-name>Matt Darby</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Iconv behaves differently in different platforms. Ping Xavier Noria and he'll explain.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Iconv behaves differently in different platforms. Ping Xavier Noria and he'll explain.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-04T21:28:53+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-08-04T21:28:53+01:00</updated-at>
      <user-id type="integer">975</user-id>
      <version type="integer">9</version>
      <user-name>Damian Janowski</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I like parameterize and have used that in quite a few cases. I don't think the anglo approach is that big of a deal, especially not since it's usually a good idea to keep those parts of the URL ascii anyway. I've changed a few defaults, though.

I don't really see the general use of actionize, though. That seems pretty specific to your app.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I like parameterize and have used that in quite a few cases. I
don't think the anglo approach is that big of a deal, especially
not since it's usually a good idea to keep those parts of the URL
ascii anyway. I've changed a few defaults, though.&lt;/p&gt;
&lt;p&gt;I don't really see the general use of actionize, though. That
seems pretty specific to your app.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-10T06:29:12+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-09-10T06:29:50+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">10</version>
      <user-name>DHH</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@DHH: The point of using Iconv is not to have UTF8 URLs, but rather to &quot;translate&quot; special characters to their ASCII &quot;equivalents&quot; where possible.

With the original patch:

@@@
&quot;Malm&#246;&quot;.parameterize
=&gt; &quot;malm&quot;
@@@

With Iconv:

@@@
&quot;Malm&#246;&quot;.parameterize
=&gt; &quot;malmo&quot;
@@@

I think this is very basic and should be provided out of the box. Or, at least, provide a L18N-aware extension point.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@DHH: The point of using Iconv is not to have UTF8 URLs, but
rather to &quot;translate&quot; special characters to their ASCII
&quot;equivalents&quot; where possible.&lt;/p&gt;
&lt;p&gt;With the original patch:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;quot;Malm&#246;&amp;quot;.parameterize
=&amp;gt; &amp;quot;malm&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With Iconv:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;quot;Malm&#246;&amp;quot;.parameterize
=&amp;gt; &amp;quot;malmo&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think this is very basic and should be provided out of the
box. Or, at least, provide a L18N-aware extension point.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-10T13:24:04+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-09-10T13:24:09+01:00</updated-at>
      <user-id type="integer">975</user-id>
      <version type="integer">11</version>
      <user-name>Damian Janowski</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I second Damian. Discovered this only afterwrds in Github commits feed.

I think the &quot;dumb&quot; transliteration like Malm&#246; =&gt;&#160;&quot;malm-&quot; really is not a practice to be encouraged by Rails. (See dropping of letters on just about any Rails-based website, be it WWR, Slideshare, etc.)

I have commented on the [commit page](http://github.com/rails/rails/commit/b8e8be83e952163e225f9b38bd7251cba9c44f38#comments)

In Czech context (accented latin characters) we mainly use this solution from [Adam Ciganek](http://workingwithrails.com/person/12298-adam-cig-nek) :

&lt;pre&gt;
string.chars.normalize(:kd).to_s.gsub(/[^\x00-\x7F]/, '')
&lt;/pre&gt;

Although the Iconv way is much more robust.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I second Damian. Discovered this only afterwrds in Github
commits feed.&lt;/p&gt;
&lt;p&gt;I think the &quot;dumb&quot; transliteration like Malm&amp;ouml;
=&amp;gt;&amp;nbsp;&quot;malm-&quot; really is not a practice to be encouraged by
Rails. (See dropping of letters on just about any Rails-based
website, be it WWR, Slideshare, etc.)&lt;/p&gt;
&lt;p&gt;I have commented on the &lt;a href=&quot;http://github.com/rails/rails/commit/b8e8be83e952163e225f9b38bd7251cba9c44f38#comments&quot;&gt;
commit page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In Czech context (accented latin characters) we mainly use this
solution from &lt;a href=&quot;http://workingwithrails.com/person/12298-adam-cig-nek&quot;&gt;Adam
Ciganek&lt;/a&gt; :&lt;/p&gt;
&lt;pre&gt;
string.chars.normalize(:kd).to_s.gsub(/[^\x00-\x7F]/, '')
&lt;/pre&gt;
&lt;p&gt;Although the Iconv way is much more robust.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-10T16:35:33+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2008-09-10T16:35:39+01:00</updated-at>
      <user-id type="integer">16364</user-id>
      <version type="integer">12</version>
      <user-name>Karel Mina&#345;&#237;k</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>gift, &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/collection/tissot-pr50.html&quot;&gt;Tissot PR50&lt;/a&gt;&lt;/b&gt; for a friend, or &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/girard-perragaux-sport-classique-18kt-rose-gold-brown-leather-mens-watch-80210-0-52-8118-6831.html&quot;&gt;Girard Perragaux Sport Classique 18kt Rose Gold Brown Leather Mens 80210.0.52.8118&lt;/a&gt;&lt;/b&gt; for yourself. You deserve &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/jaeger-lecoultre-ideale-quartz-ladies-watch-q4608571-5855.html&quot;&gt;Jaeger-LeCoultre Ideale Quartz Ladies Q4608571&lt;/a&gt;&lt;/b&gt; designer quality at an &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;fake rolex watch&lt;/a&gt;&lt;/b&gt; affordable price.Everyone k &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/panerai-luminor-marina-logo-mens-watch-pam00005-1702.html&quot;&gt;Panerai Luminor Marina Logo Mens PAM00005&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/collection/gucci-116-signoria.html&quot;&gt;Gucci 116 Signoria&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com/watches/breguet-heritage-mens-watch-3670bb-12-984-2055.html&quot;&gt;Breguet Heritage Mens 3670BB.12.984&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;cheap rolex watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;swiss rolex watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;gift, &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/collection/tissot-pr50.html&quot;&gt;Tissot
PR50&lt;/a&gt;&lt;/b&gt; for a friend, or &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/girard-perragaux-sport-classique-18kt-rose-gold-brown-leather-mens-watch-80210-0-52-8118-6831.html&quot;&gt;
Girard Perragaux Sport Classique 18kt Rose Gold Brown Leather Mens
80210.0.52.8118&lt;/a&gt;&lt;/b&gt; for yourself. You deserve &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/jaeger-lecoultre-ideale-quartz-ladies-watch-q4608571-5855.html&quot;&gt;
Jaeger-LeCoultre Ideale Quartz Ladies Q4608571&lt;/a&gt;&lt;/b&gt; designer
quality at an &lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;fake
rolex watch&lt;/a&gt;&lt;/b&gt; affordable price.Everyone k &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/panerai-luminor-marina-logo-mens-watch-pam00005-1702.html&quot;&gt;
Panerai Luminor Marina Logo Mens PAM00005&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/collection/gucci-116-signoria.html&quot;&gt;
Gucci 116 Signoria&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com/watches/breguet-heritage-mens-watch-3670bb-12-984-2055.html&quot;&gt;
Breguet Heritage Mens 3670BB.12.984&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.watchesreplication.com&quot;&gt;cheap rolex watches&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.watchesreplication.com&quot;&gt;swiss rolex
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T06:26:47+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">181</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activesupport inflector patch</tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2010-07-19T07:06:46+01:00</updated-at>
      <user-id type="integer">107771</user-id>
      <version type="integer">13</version>
      <user-name>zhuzhu</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-12T09:03:10+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:tag: activesupport inflector patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2010-10-12T09:06:00+01:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">15</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-12T10:13:41+01:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2010-10-12T10:13:45+01:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">16</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T08:52:35+00:00</created-at>
      <creator-id type="integer">22459</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">713</number>
      <permalink>new-inflectors-actionize-and-parameterize</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>New Inflectors: Actionize and Parameterize</title>
      <updated-at type="datetime">2010-11-08T08:52:40+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">18</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Matt Darby</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4e90149fddde0918b17dd9101f09460e18632e1a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-27T15:39:02+01:00</created-at>
      <filename>actionize_parameterize.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">35156</id>
      <size type="integer">5278</size>
      <uploader-id type="integer">22459</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/35156/actionize_parameterize.diff</url>
    </attachment>
  </attachments>
</ticket>
