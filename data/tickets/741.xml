<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-01T17:12:00+01:00</created-at>
  <creator-id type="integer">16635</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">741</number>
  <permalink>parse_formatted_request_parameters-does-not-respect-parameters-format</permalink>
  <priority type="integer">204</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2.1 actionpack bug controller format param_parser rest</tag>
  <title> parse_formatted_request_parameters does not respect parameters[:format]</title>
  <updated-at type="datetime">2008-11-22T19:52:02+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Brad Gessler</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/741</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have been working on a project where I need to parse various flavors of XML that are POSTed from various SMS message aggregators into request_parameters. I tried to take advantage of the built in ActionController::Base.param_parsers but ran into some serious problems.

Since I can't control the aggregators' HTTP Content-Type headers to resolve the Mime::Type, I need to rely on the ':format' idiom in Rails routes. So instead of an HTTP POST to '/sms_messages.xml' I POST to '/sms_messages.clickatell'. Unfortunately the format parameter isn't parsed out of the request until after the param_parser is selected:

http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/request.rb#L403

It appears that the content_type variable can only resolved from the Content-Type header at this point and not from params[:format] (or any other parameters for this matter). I need rails to respect the format of the request over the Content-Type header on a POST or PUT.</original-body>
  <latest-body>I have been working on a project where I need to parse various flavors of XML that are POSTed from various SMS message aggregators into request_parameters. I tried to take advantage of the built in ActionController::Base.param_parsers but ran into some serious problems.

Since I can't control the aggregators' HTTP Content-Type headers to resolve the Mime::Type, I need to rely on the ':format' idiom in Rails routes. So instead of an HTTP POST to '/sms_messages.xml' I POST to '/sms_messages.clickatell'. Unfortunately the format parameter isn't parsed out of the request until after the param_parser is selected:

http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/request.rb#L403

It appears that the content_type variable can only resolved from the Content-Type header at this point and not from params[:format] (or any other parameters for this matter). I need rails to respect the format of the request over the Content-Type header on a POST or PUT.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I have been working on a project where I need to parse various flavors of XML that are POSTed from various SMS message aggregators into request_parameters. I tried to take advantage of the built in ActionController::Base.param_parsers but ran into some serious problems.
&lt;/p&gt;&lt;p&gt;
Since I can't control the aggregators' HTTP Content-Type headers to resolve the Mime::Type, I need to rely on the ':format' idiom in Rails routes. So instead of an HTTP POST to '/sms_messages.xml' I POST to '/sms_messages.clickatell'. Unfortunately the format parameter isn't parsed out of the request until after the param_parser is selected:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/request.rb#L403&quot;&gt;http://github.com/rails/rails/tr...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
It appears that the content_type variable can only resolved from the Content-Type header at this point and not from params[:format] (or any other parameters for this matter). I need rails to respect the format of the request over the Content-Type header on a POST or PUT.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have been working on a project where I need to parse various flavors of XML that are POSTed from various SMS message aggregators into request_parameters. I tried to take advantage of the built in ActionController::Base.param_parsers but ran into some serious problems.

Since I can't control the aggregators' HTTP Content-Type headers to resolve the Mime::Type, I need to rely on the ':format' idiom in Rails routes. So instead of an HTTP POST to '/sms_messages.xml' I POST to '/sms_messages.clickatell'. Unfortunately the format parameter isn't parsed out of the request until after the param_parser is selected:

http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/request.rb#L403

It appears that the content_type variable can only resolved from the Content-Type header at this point and not from params[:format] (or any other parameters for this matter). I need rails to respect the format of the request over the Content-Type header on a POST or PUT.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I have been working on a project where I need to parse various flavors of XML that are POSTed from various SMS message aggregators into request_parameters. I tried to take advantage of the built in ActionController::Base.param_parsers but ran into some serious problems.
&lt;/p&gt;&lt;p&gt;
Since I can't control the aggregators' HTTP Content-Type headers to resolve the Mime::Type, I need to rely on the ':format' idiom in Rails routes. So instead of an HTTP POST to '/sms_messages.xml' I POST to '/sms_messages.clickatell'. Unfortunately the format parameter isn't parsed out of the request until after the param_parser is selected:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/tree/master/actionpack/lib/action_controller/request.rb#L403&quot;&gt;http://github.com/rails/rails/tr...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
It appears that the content_type variable can only resolved from the Content-Type header at this point and not from params[:format] (or any other parameters for this matter). I need rails to respect the format of the request over the Content-Type header on a POST or PUT.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-01T17:12:00+01:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">741</number>
      <permalink>parse_formatted_request_parameters-does-not-respect-parameters-format</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 actionpack bug controller format param_parser rest</tag>
      <title> parse_formatted_request_parameters does not respect parameters[:format]</title>
      <updated-at type="datetime">2008-08-01T17:12:00+01:00</updated-at>
      <user-id type="integer">16635</user-id>
      <version type="integer">1</version>
      <user-name>Brad Gessler</user-name>
      <creator-name>Brad Gessler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/741</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Staling out, please let me know if its still an issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Staling out, please let me know if its still an issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T19:52:00+00:00</created-at>
      <creator-id type="integer">16635</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">741</number>
      <permalink>parse_formatted_request_parameters-does-not-respect-parameters-format</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.1 actionpack bug controller format param_parser rest</tag>
      <title> parse_formatted_request_parameters does not respect parameters[:format]</title>
      <updated-at type="datetime">2008-11-22T19:52:02+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Brad Gessler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/741</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
