<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-10T06:31:20+01:00</created-at>
  <creator-id type="integer">29</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5345</number>
  <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>ActiveRecord ignoring set_table_name on save</title>
  <updated-at type="datetime">2010-08-14T04:59:07+01:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">7</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Nicholas Faiz</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
  <priority-name>Low</priority-name>
  <original-body>I've found this on Rails 3.0.0.rc

AR seems to be ignoring the table name set on the model when saving:

@@@
Loading development environment (Rails 3.0.0.rc)
ruby-1.8.7-p299 &gt; Inkling::User.table_name
 =&gt; &quot;inkling_users&quot; 
ruby-1.8.7-p299 &gt; u=Inkling::User.new(:login =&gt; &quot;foo&quot;, :email =&gt; &quot;foo@foo.com&quot;, :password =&gt; &quot;test&quot;, :confirmation_password =&gt; &quot;test&quot;)
 =&gt; #&lt;Inkling::User id: nil, login: &quot;foo&quot;, email: &quot;foo@foo.com&quot;, role_id: nil, display_name: nil, given_name: nil, family_name: nil, crypted_password: nil, salt: nil, last_seen: nil, ip: nil, created_at: nil, updated_at: nil&gt; 
ruby-1.8.7-p299 &gt; u.save
ActiveRecord::StatementInvalid: PGError: ERROR:  relation &quot;users&quot; does not exist
LINE 4:              WHERE a.attrelid = '&quot;users&quot;'::regclass
                                        ^
:             SELECT a.attname, format_type(a.atttypid, a.atttypmod), d.adsrc, a.attnotnull
              FROM pg_attribute a LEFT JOIN pg_attrdef d
                ON a.attrelid = d.adrelid AND a.attnum = d.adnum
             WHERE a.attrelid = '&quot;users&quot;'::regclass
               AND a.attnum &gt; 0 AND NOT a.attisdropped
             ORDER BY a.attnum
@@@</original-body>
  <latest-body>I've found this on Rails 3.0.0.rc

AR seems to be ignoring the table name set on the model when saving:

@@@
Loading development environment (Rails 3.0.0.rc)
ruby-1.8.7-p299 &gt; Inkling::User.table_name
 =&gt; &quot;inkling_users&quot; 
ruby-1.8.7-p299 &gt; u=Inkling::User.new(:login =&gt; &quot;foo&quot;, :email =&gt; &quot;foo@foo.com&quot;, :password =&gt; &quot;test&quot;, :confirmation_password =&gt; &quot;test&quot;)
 =&gt; #&lt;Inkling::User id: nil, login: &quot;foo&quot;, email: &quot;foo@foo.com&quot;, role_id: nil, display_name: nil, given_name: nil, family_name: nil, crypted_password: nil, salt: nil, last_seen: nil, ip: nil, created_at: nil, updated_at: nil&gt; 
ruby-1.8.7-p299 &gt; u.save
ActiveRecord::StatementInvalid: PGError: ERROR:  relation &quot;users&quot; does not exist
LINE 4:              WHERE a.attrelid = '&quot;users&quot;'::regclass
                                        ^
:             SELECT a.attname, format_type(a.atttypid, a.atttypmod), d.adsrc, a.attnotnull
              FROM pg_attribute a LEFT JOIN pg_attrdef d
                ON a.attrelid = d.adrelid AND a.attnum = d.adnum
             WHERE a.attrelid = '&quot;users&quot;'::regclass
               AND a.attnum &gt; 0 AND NOT a.attisdropped
             ORDER BY a.attnum
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've found this on Rails 3.0.0.rc&lt;/p&gt;
&lt;p&gt;AR seems to be ignoring the table name set on the model when
saving:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 3.0.0.rc)
ruby-1.8.7-p299 &amp;gt; Inkling::User.table_name
 =&amp;gt; &quot;inkling_users&quot; 
ruby-1.8.7-p299 &amp;gt; u=Inkling::User.new(:login =&amp;gt; &quot;foo&quot;, :email =&amp;gt; &quot;foo@foo.com&quot;, :password =&amp;gt; &quot;test&quot;, :confirmation_password =&amp;gt; &quot;test&quot;)
 =&amp;gt; #&amp;lt;Inkling::User id: nil, login: &quot;foo&quot;, email: &quot;foo@foo.com&quot;, role_id: nil, display_name: nil, given_name: nil, family_name: nil, crypted_password: nil, salt: nil, last_seen: nil, ip: nil, created_at: nil, updated_at: nil&amp;gt; 
ruby-1.8.7-p299 &amp;gt; u.save
ActiveRecord::StatementInvalid: PGError: ERROR:  relation &quot;users&quot; does not exist
LINE 4:              WHERE a.attrelid = '&quot;users&quot;'::regclass
                                        ^
:             SELECT a.attname, format_type(a.atttypid, a.atttypmod), d.adsrc, a.attnotnull
              FROM pg_attribute a LEFT JOIN pg_attrdef d
                ON a.attrelid = d.adrelid AND a.attnum = d.adnum
             WHERE a.attrelid = '&quot;users&quot;'::regclass
               AND a.attnum &amp;gt; 0 AND NOT a.attisdropped
             ORDER BY a.attnum&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've found this on Rails 3.0.0.rc

AR seems to be ignoring the table name set on the model when saving:

@@@
Loading development environment (Rails 3.0.0.rc)
ruby-1.8.7-p299 &gt; Inkling::User.table_name
 =&gt; &quot;inkling_users&quot; 
ruby-1.8.7-p299 &gt; u=Inkling::User.new(:login =&gt; &quot;foo&quot;, :email =&gt; &quot;foo@foo.com&quot;, :password =&gt; &quot;test&quot;, :confirmation_password =&gt; &quot;test&quot;)
 =&gt; #&lt;Inkling::User id: nil, login: &quot;foo&quot;, email: &quot;foo@foo.com&quot;, role_id: nil, display_name: nil, given_name: nil, family_name: nil, crypted_password: nil, salt: nil, last_seen: nil, ip: nil, created_at: nil, updated_at: nil&gt; 
ruby-1.8.7-p299 &gt; u.save
ActiveRecord::StatementInvalid: PGError: ERROR:  relation &quot;users&quot; does not exist
LINE 4:              WHERE a.attrelid = '&quot;users&quot;'::regclass
                                        ^
:             SELECT a.attname, format_type(a.atttypid, a.atttypmod), d.adsrc, a.attnotnull
              FROM pg_attribute a LEFT JOIN pg_attrdef d
                ON a.attrelid = d.adrelid AND a.attnum = d.adnum
             WHERE a.attrelid = '&quot;users&quot;'::regclass
               AND a.attnum &gt; 0 AND NOT a.attisdropped
             ORDER BY a.attnum
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've found this on Rails 3.0.0.rc&lt;/p&gt;
&lt;p&gt;AR seems to be ignoring the table name set on the model when
saving:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 3.0.0.rc)
ruby-1.8.7-p299 &amp;gt; Inkling::User.table_name
 =&amp;gt; &quot;inkling_users&quot; 
ruby-1.8.7-p299 &amp;gt; u=Inkling::User.new(:login =&amp;gt; &quot;foo&quot;, :email =&amp;gt; &quot;foo@foo.com&quot;, :password =&amp;gt; &quot;test&quot;, :confirmation_password =&amp;gt; &quot;test&quot;)
 =&amp;gt; #&amp;lt;Inkling::User id: nil, login: &quot;foo&quot;, email: &quot;foo@foo.com&quot;, role_id: nil, display_name: nil, given_name: nil, family_name: nil, crypted_password: nil, salt: nil, last_seen: nil, ip: nil, created_at: nil, updated_at: nil&amp;gt; 
ruby-1.8.7-p299 &amp;gt; u.save
ActiveRecord::StatementInvalid: PGError: ERROR:  relation &quot;users&quot; does not exist
LINE 4:              WHERE a.attrelid = '&quot;users&quot;'::regclass
                                        ^
:             SELECT a.attname, format_type(a.atttypid, a.atttypmod), d.adsrc, a.attnotnull
              FROM pg_attribute a LEFT JOIN pg_attrdef d
                ON a.attrelid = d.adrelid AND a.attnum = d.adnum
             WHERE a.attrelid = '&quot;users&quot;'::regclass
               AND a.attnum &amp;gt; 0 AND NOT a.attisdropped
             ORDER BY a.attnum&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T04:08:42+01:00</created-at>
      <creator-id type="integer">29</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5345</number>
      <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord ignoring set_table_name on save</title>
      <updated-at type="datetime">2010-08-10T04:08:43+01:00</updated-at>
      <user-id type="integer">29</user-id>
      <version type="integer">1</version>
      <user-name>Nicholas Faiz</user-name>
      <creator-name>Nicholas Faiz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>i cant confirm this.

could you provide more details? maybe the code of your model?</body>
      <body-html>&lt;div&gt;&lt;p&gt;i cant confirm this.&lt;/p&gt;
&lt;p&gt;could you provide more details? maybe the code of your
model?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T17:00:23+01:00</created-at>
      <creator-id type="integer">29</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5345</number>
      <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord ignoring set_table_name on save</title>
      <updated-at type="datetime">2010-08-11T17:00:25+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">2</version>
      <user-name>Kane</user-name>
      <creator-name>Nicholas Faiz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T17:01:16+01:00</created-at>
      <creator-id type="integer">29</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5345</number>
      <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag nil="true"></tag>
      <title>ActiveRecord ignoring set_table_name on save</title>
      <updated-at type="datetime">2010-08-12T17:01:17+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Nicholas Faiz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've created a demo app for the problem here: http://github.com/biv/r3-bug-in-table-name . Apologies, I should have put more information on the ticket originally - I was rushed at the time.

Note, I'm running this using Postgresql 9.0 beta and using ruby 1.8.7.

The problem occurs when using inheritance on models. In this case a Mob::User &lt; ActiveRecordBase exists in lib/mob. The model foo.rb extends it and sets a table name. When saving a foo the validation sequence is triggered. The validation in Mob::User looks for a table name 'users', despite a Foo being created (with a table name of 'other_foos').

Let me know if you need any further info..</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've created a demo app for the problem here: &lt;a href=
&quot;http://github.com/biv/r3-bug-in-table-name&quot;&gt;http://github.com/biv/r3-bug-in-table-name&lt;/a&gt;
. Apologies, I should have put more information on the ticket
originally - I was rushed at the time.&lt;/p&gt;
&lt;p&gt;Note, I'm running this using Postgresql 9.0 beta and using ruby
1.8.7.&lt;/p&gt;
&lt;p&gt;The problem occurs when using inheritance on models. In this
case a Mob::User &amp;lt; ActiveRecordBase exists in lib/mob. The model
foo.rb extends it and sets a table name. When saving a foo the
validation sequence is triggered. The validation in Mob::User looks
for a table name 'users', despite a Foo being created (with a table
name of 'other_foos').&lt;/p&gt;
&lt;p&gt;Let me know if you need any further info..&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-13T03:46:20+01:00</created-at>
      <creator-id type="integer">29</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5345</number>
      <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag nil="true"></tag>
      <title>ActiveRecord ignoring set_table_name on save</title>
      <updated-at type="datetime">2010-08-13T03:46:22+01:00</updated-at>
      <user-id type="integer">29</user-id>
      <version type="integer">4</version>
      <user-name>Nicholas Faiz</user-name>
      <creator-name>Nicholas Faiz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Im not quite sure that this worked in any previous versions. 
normally AR assumes STI if you inherit from another model.
if you dont want that you could declare the parent model as abstract.

@@@ ruby
 class MyModel &lt; ActiveRecord::Base
   self.abstract_class = true
 end
@@@

Rails cant do MTI.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Im not quite sure that this worked in any previous versions.&lt;br&gt;
normally AR assumes STI if you inherit from another model.&lt;br&gt;
if you dont want that you could declare the parent model as
abstract.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt; class MyModel &amp;lt; ActiveRecord::Base
   self.abstract_class = true
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Rails cant do MTI.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-13T17:23:42+01:00</created-at>
      <creator-id type="integer">29</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5345</number>
      <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag nil="true"></tag>
      <title>ActiveRecord ignoring set_table_name on save</title>
      <updated-at type="datetime">2010-08-13T17:23:45+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">5</version>
      <user-name>Kane</user-name>
      <creator-name>Nicholas Faiz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks. It did work without setting abstract_class in Rails 2.2.2 (have a working app which uses this lib there). But the abstract_class property fixes it. Should have thought to try that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks. It did work without setting abstract_class in Rails
2.2.2 (have a working app which uses this lib there). But the
abstract_class property fixes it. Should have thought to try
that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-14T03:16:53+01:00</created-at>
      <creator-id type="integer">29</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5345</number>
      <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag nil="true"></tag>
      <title>ActiveRecord ignoring set_table_name on save</title>
      <updated-at type="datetime">2010-08-14T03:16:56+01:00</updated-at>
      <user-id type="integer">29</user-id>
      <version type="integer">6</version>
      <user-name>Nicholas Faiz</user-name>
      <creator-name>Nicholas Faiz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-14T04:59:03+01:00</created-at>
      <creator-id type="integer">29</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5345</number>
      <permalink>activerecord-ignoring-set_table_name-on-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>ActiveRecord ignoring set_table_name on save</title>
      <updated-at type="datetime">2010-08-14T04:59:07+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Nicholas Faiz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5345</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
