<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-14T17:05:21+01:00</created-at>
  <creator-id type="integer">22258</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">831</number>
  <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
  <priority type="integer">19</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.1 activerecord bug edge patch tests</tag>
  <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
  <updated-at type="datetime">2008-11-05T20:44:05+00:00</updated-at>
  <user-id type="integer">36587</user-id>
  <version type="integer">15</version>
  <user-name>Michael Simons</user-name>
  <creator-name>Mike Champion</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
  <priority-name nil="true"></priority-name>
  <original-body>Ruby 1.8.7 introduces several new methods including Array.count (through Enumerable). This appears to break using the count method on HABTM relationships, although not has_many relationships. 

I have a test rails app that I have tested with ruby 1.8.7p22 against Rails 2.1 and edge Rails. 

The models are:

@@@
class Author &lt; AR::Base
  has_and_belongs_to_many :posts
end

class Post &lt; AR::Base
  has_and_belongs_to_many :authors
end

@@@

In the unit test, there is:

@@@
# This author has 2 posts
mike = authors(:mike)

# Appears to be correct, but looking at logs it is not
# doing a &quot;count(*)&quot; but instead is doing full &quot;select (*)&quot; via 
# Array.count
assert_equal 2, mike.posts.count

# This generates:
# ArgumentError: wrong number of arguments (2 for 1)
# because it calls Array.count instead of AR calculations.
assert_equal 2, mike.posts(true).count(:all, :conditions =&gt; [&quot;posts.created_at &lt; ?&quot;, Time.utc('2020')])

@@@

I haven't dug into the Rails sources much to see why this is only happening for HABTM associations, but was wondering if others had encountered this and hopefully had a fix.</original-body>
  <latest-body>Ruby 1.8.7 introduces several new methods including Array.count (through Enumerable). This appears to break using the count method on HABTM relationships, although not has_many relationships. 

I have a test rails app that I have tested with ruby 1.8.7p22 against Rails 2.1 and edge Rails. 

The models are:

@@@
class Author &lt; AR::Base
  has_and_belongs_to_many :posts
end

class Post &lt; AR::Base
  has_and_belongs_to_many :authors
end

@@@

In the unit test, there is:

@@@
# This author has 2 posts
mike = authors(:mike)

# Appears to be correct, but looking at logs it is not
# doing a &quot;count(*)&quot; but instead is doing full &quot;select (*)&quot; via 
# Array.count
assert_equal 2, mike.posts.count

# This generates:
# ArgumentError: wrong number of arguments (2 for 1)
# because it calls Array.count instead of AR calculations.
assert_equal 2, mike.posts(true).count(:all, :conditions =&gt; [&quot;posts.created_at &lt; ?&quot;, Time.utc('2020')])

@@@

I haven't dug into the Rails sources much to see why this is only happening for HABTM associations, but was wondering if others had encountered this and hopefully had a fix.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Ruby 1.8.7 introduces several new methods including Array.count (through Enumerable). This appears to break using the count method on HABTM relationships, although not has_many relationships.&lt;/p&gt;

&lt;p&gt;I have a test rails app that I have tested with ruby 1.8.7p22 against Rails 2.1 and edge Rails.&lt;/p&gt;

&lt;p&gt;The models are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
class Author &amp;lt; AR::Base
  has_and_belongs_to_many :posts
end

class Post &amp;lt; AR::Base
  has_and_belongs_to_many :authors
end

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the unit test, there is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
# This author has 2 posts
mike = authors(:mike)

# Appears to be correct, but looking at logs it is not
# doing a &amp;quot;count(*)&amp;quot; but instead is doing full &amp;quot;select (*)&amp;quot; via
# Array.count
assert_equal 2, mike.posts.count

# This generates:
# ArgumentError: wrong number of arguments (2 for 1)
# because it calls Array.count instead of AR calculations.
assert_equal 2, mike.posts(true).count(:all, :conditions =&amp;gt; [&amp;quot;posts.created_at &amp;lt; ?&amp;quot;, Time.utc('2020')])

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I haven't dug into the Rails sources much to see why this is only happening for HABTM associations, but was wondering if others had encountered this and hopefully had a fix.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ruby 1.8.7 introduces several new methods including Array.count (through Enumerable). This appears to break using the count method on HABTM relationships, although not has_many relationships. 

I have a test rails app that I have tested with ruby 1.8.7p22 against Rails 2.1 and edge Rails. Both exhibit this problem.

The models are:
@@@
class Author &lt; AR::Base
  has_and_belongs_to_many :posts
end

class Post &lt; AR::Base
  has_and_belongs_to_many :authors
end

@@@
In the unit test, there is:

@@@
# This author has 2 posts
mike = authors(:mike)

# Appears to be correct, but looking at logs it is not
# doing a &quot;count(*)&quot; but instead is doing full &quot;select (*)&quot; via 
# Array.count
assert_equal 2, mike.posts.count

# This generates:
# ArgumentError: wrong number of arguments (2 for 1)
# because it calls Array.count instead of AR calculations.
assert_equal 2, mike.posts(true).count(:all, :conditions =&gt; [&quot;posts.created_at &lt; ?&quot;, Time.utc('2020')])
@@@

I haven't dug into the Rails sources much to see why this is only happening for HABTM associations, but was wondering if others had encountered this and hopefully had a fix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ruby 1.8.7 introduces several new methods including Array.count (through Enumerable). This appears to break using the count method on HABTM relationships, although not has_many relationships.&lt;/p&gt;

&lt;p&gt;I have a test rails app that I have tested with ruby 1.8.7p22 against Rails 2.1 and edge Rails. Both exhibit this problem.&lt;/p&gt;

&lt;p&gt;The models are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
class Author &amp;lt; AR::Base
  has_and_belongs_to_many :posts
end

class Post &amp;lt; AR::Base
  has_and_belongs_to_many :authors
end

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the unit test, there is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
# This author has 2 posts
mike = authors(:mike)

# Appears to be correct, but looking at logs it is not
# doing a &amp;quot;count(*)&amp;quot; but instead is doing full &amp;quot;select (*)&amp;quot; via
# Array.count
assert_equal 2, mike.posts.count

# This generates:
# ArgumentError: wrong number of arguments (2 for 1)
# because it calls Array.count instead of AR calculations.
assert_equal 2, mike.posts(true).count(:all, :conditions =&amp;gt; [&amp;quot;posts.created_at &amp;lt; ?&amp;quot;, Time.utc('2020')])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I haven't dug into the Rails sources much to see why this is only happening for HABTM associations, but was wondering if others had encountered this and hopefully had a fix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T17:06:16+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord edge</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-14T17:06:16+01:00</updated-at>
      <user-id type="integer">22258</user-id>
      <version type="integer">1</version>
      <user-name>Mike Champion</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There's actually no count method defined on the habtm association class, which would help explain the issue. ;)

After a quick look through the association code, I *think* what's happening is that without an Array#count (1.8.6) AssociationCollection#method_missing is calling the reflection class's count method scoped to its owner.

*With* an Array#count (1.8.7), however, the first condition of AssociationCollection#method_missing is being met and instead the call is passed up the line to AssociationProxy, which in turn passes it to the @target directly, after loading it.

There are two possible ways this could be resolved. It seems that the way that most keeps in line with the other association types is to implement HasAndBelongsToManyAssociation#count. Another shortcut would be to change AssociationCollection#method_missing such that the first condition won't pass if the method is :count.

The former isn't very DRY, and the latter feels awfully hackish to me.

So instead, I've opted too try something much more dangerous, and refactored the handling of count so that it's implemented inside AssociationCollection instead of its descendants.

This is really rough, but could you give the attached patch a try and see if it resolves the issue? I'm not running 1.8.7 here, because I'm stuck on a Windows box at the moment with a One-Click-Installer Ruby installation. I can at least confirm that nothing new in the ActiveRecord MySQL test suite is failing from this patch, but I'm not sure there's ample test coverage for all of the various :counter_sql and :finder_sql possibilities in all 3 affected association macros.

Assuming positive feedback, I'll update docs and add any tests that might be needed as well, since :counter_sql doesn't seem to be documented everywhere, and wasn't being used on HABTM associations before.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There's actually no count method defined on the habtm association class, which would help explain the issue. ;)&lt;/p&gt;

&lt;p&gt;After a quick look through the association code, I &lt;em&gt;think&lt;/em&gt; what's happening is that without an Array#count (1.8.6) AssociationCollection#method_missing is calling the reflection class's count method scoped to its owner.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;With&lt;/em&gt; an Array#count (1.8.7), however, the first condition of AssociationCollection#method_missing is being met and instead the call is passed up the line to AssociationProxy, which in turn passes it to the @target directly, after loading it.&lt;/p&gt;

&lt;p&gt;There are two possible ways this could be resolved. It seems that the way that most keeps in line with the other association types is to implement HasAndBelongsToManyAssociation#count. Another shortcut would be to change AssociationCollection#method_missing such that the first condition won't pass if the method is :count.&lt;/p&gt;

&lt;p&gt;The former isn't very DRY, and the latter feels awfully hackish to me.&lt;/p&gt;

&lt;p&gt;So instead, I've opted too try something much more dangerous, and refactored the handling of count so that it's implemented inside AssociationCollection instead of its descendants.&lt;/p&gt;

&lt;p&gt;This is really rough, but could you give the attached patch a try and see if it resolves the issue? I'm not running 1.8.7 here, because I'm stuck on a Windows box at the moment with a One-Click-Installer Ruby installation. I can at least confirm that nothing new in the ActiveRecord MySQL test suite is failing from this patch, but I'm not sure there's ample test coverage for all of the various :counter_sql and :finder_sql possibilities in all 3 affected association macros.&lt;/p&gt;

&lt;p&gt;Assuming positive feedback, I'll update docs and add any tests that might be needed as well, since :counter_sql doesn't seem to be documented everywhere, and wasn't being used on HABTM associations before.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T21:14:55+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 activerecord edge
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug edge patch</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-14T21:14:55+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">2</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks. I think you're right as to the cause. The method_missing in association_collection looks at the class level methods, where &quot;count&quot; is defined by calculations.rb. It works for HasMany relationships because that defines a count method on the instance and overrides the Array.count, I believe, whereas HABTM doesn't define it.

I started down the path of adding a count method similar to what is in has_many_association to has_and_belongs_to_many_association. Although maybe I will just try to have it restore the behavior of what it was doing for ruby 1.8.6.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks. I think you're right as to the cause. The method_missing in association_collection looks at the class level methods, where &quot;count&quot; is defined by calculations.rb. It works for HasMany relationships because that defines a count method on the instance and overrides the Array.count, I believe, whereas HABTM doesn't define it.&lt;/p&gt;

&lt;p&gt;I started down the path of adding a count method similar to what is in has_many_association to has_and_belongs_to_many_association. Although maybe I will just try to have it restore the behavior of what it was doing for ruby 1.8.6.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T21:27:33+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug edge patch</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-14T21:27:33+01:00</updated-at>
      <user-id type="integer">22258</user-id>
      <version type="integer">3</version>
      <user-name>Mike Champion</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If you get the chance, try the patch I attached and let me know how it works for you... and if it breaks anything new and exotic! ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you get the chance, try the patch I attached and let me know how it works for you... and if it breaks anything new and exotic! ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T21:38:07+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug edge patch</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-14T21:38:07+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">4</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Updated patch to add a bit of documentation.

I'm a little concerned about the handling of a has_many association's :conditions option if passed to count. Before the refactor, it was pulling out the conditions ahead of time and modifying the association's @finder_sql. I *think* this is because it wasn't taking advantage of with_scope, and as I said before, all tests continue to pass, so I think the refactor went off without a hitch... But if someone can show a test case where this patch breaks things, I'd like to include that test and fix the bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch to add a bit of documentation.&lt;/p&gt;

&lt;p&gt;I'm a little concerned about the handling of a has_many association's :conditions option if passed to count. Before the refactor, it was pulling out the conditions ahead of time and modifying the association's @finder_sql. I &lt;em&gt;think&lt;/em&gt; this is because it wasn't taking advantage of with_scope, and as I said before, all tests continue to pass, so I think the refactor went off without a hitch... But if someone can show a test case where this patch breaks things, I'd like to include that test and fix the bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T03:30:10+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug edge patch</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-15T03:30:10+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">5</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ernie, I applied your patch and it fixed my small sample app's tests that exercised the HABTM count problem. Thanks!

I have not yet tried it in our real app to see if other issues are exhibited.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ernie, I applied your patch and it fixed my small sample app's tests that exercised the HABTM count problem. Thanks!&lt;/p&gt;

&lt;p&gt;I have not yet tried it in our real app to see if other issues are exhibited.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-20T19:31:02+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug edge patch</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-20T19:31:02+01:00</updated-at>
      <user-id type="integer">22258</user-id>
      <version type="integer">6</version>
      <user-name>Mike Champion</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Added a test based on Mike's example above, and merged Tarmo's :offset and :limit constraints from #348 as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Added a test based on Mike's example above, and merged Tarmo's :offset and :limit constraints from &lt;a href=&quot;/projects/8994/tickets/348&quot; title=&quot;Ticket #348&quot;&gt;#348&lt;/a&gt; as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-28T19:10:32+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 activerecord bug edge patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-28T19:10:32+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">7</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-28T20:04:22+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-28T20:04:22+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Doesn't apply cleanly to 2-1-stable so this'll be 2.2 only.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Doesn't apply cleanly to 2-1-stable so this'll be 2.2 only.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-28T20:04:56+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-28T20:04:56+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [44af2efa2c7391681968c827ca47201a0a02e974]) Refactored AssociationCollection#count for uniformity and Ruby 1.8.7 support.

[#831 state:resolved]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/44af2efa2c7391681968c827ca47201a0a02e974</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [44af2efa2c7391681968c827ca47201a0a02e974]) Refactored AssociationCollection#count for uniformity and Ruby 1.8.7 support.&lt;/p&gt;

&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/831&quot; title=&quot;Ticket #831&quot;&gt;#831&lt;/a&gt; state:resolved]&lt;/p&gt;

&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=&quot;&amp;amp;#x6d;&amp;amp;#x61;&amp;amp;#105;&amp;amp;#108;&amp;amp;#x74;&amp;amp;#111;&amp;amp;#x3a;&amp;amp;#x6a;&amp;amp;#x65;&amp;amp;#114;&amp;amp;#x65;&amp;amp;#109;&amp;amp;#x79;&amp;amp;#x40;&amp;amp;#98;&amp;amp;#x69;&amp;amp;#x74;&amp;amp;#x73;&amp;amp;#x77;&amp;amp;#101;&amp;amp;#97;&amp;amp;#x74;&amp;amp;#46;&amp;amp;#110;&amp;amp;#x65;&amp;amp;#116;&quot;&gt;&amp;#106;&amp;#101;&amp;#x72;&amp;#x65;&amp;#x6d;&amp;#x79;&amp;#64;&amp;#x62;&amp;#x69;&amp;#x74;&amp;#x73;&amp;#x77;&amp;#101;&amp;#97;&amp;#x74;&amp;#x2e;&amp;#110;&amp;#101;&amp;#116;&lt;/a&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/44af2efa2c7391681968c827ca47201a0a02e974&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-28T20:05:29+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-28T20:05:29+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">10</version>
      <user-name>Repository</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Great, thanks for the patch Ernie!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great, thanks for the patch Ernie!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-28T20:52:11+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-08-28T20:52:11+01:00</updated-at>
      <user-id type="integer">22258</user-id>
      <version type="integer">11</version>
      <user-name>Mike Champion</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>:counter_sql has not been added to the valid keys hash in create_has_and_belongs_to_many_reflections on line 1574 of associations.rb so :counter_sql is being rejected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;:counter_sql has not been added to the valid keys hash in
create_has_and_belongs_to_many_reflections on line 1574 of
associations.rb so :counter_sql is being rejected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-24T13:50:04+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 activerecord bug edge patch tests
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-09-24T13:50:07+01:00</updated-at>
      <user-id type="integer">1741</user-id>
      <version type="integer">12</version>
      <user-name>Tekin</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good catch. This is a trivial fix -- Jeremy, do you want me to submit another patch, or is this fixed in edge already?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good catch. This is a trivial fix -- Jeremy, do you want me to
submit another patch, or is this fixed in edge already?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-24T14:02:24+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-09-24T14:02:26+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">13</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I checked, and it hasn't been fixed in edge yet. See #1102 for the one-liner patch. We should really get some fixtures that use counter_sql on a HABTM to catch this in the future, but I don't have time to knock that out today and since David mentioned 2.2 beta was coming soon, I didn't want this simple bug sneaking into the beta if it could be helped.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I checked, and it hasn't been fixed in edge yet. See &lt;a href=&quot;/projects/8994/tickets/1102&quot; title=&quot;Ticket #1102&quot;&gt;#1102&lt;/a&gt; for
the one-liner patch. We should really get some fixtures that use
counter_sql on a HABTM to catch this in the future, but I don't
have time to knock that out today and since David mentioned 2.2
beta was coming soon, I didn't want this simple bug sneaking into
the beta if it could be helped.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-24T14:40:00+01:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-09-24T14:40:05+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">14</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This problem applies to 2.1.2 as well.

I confirm this for Debian/Lenny, 2.6.26-1-686 #1 SMP, with ruby 1.8.7 (2008-08-11 patchlevel 72) [i486-linux] and Rails 2.1.2

HABTM is:

@@@ ruby
has_and_belongs_to_many :friends,
                          :class_name =&gt; 'User',
                          :join_table =&gt; 'friends',
                          :foreign_key =&gt; 'user_id',
                          :association_foreign_key =&gt; 'friend_id',
                          :order =&gt; 'NAME ASC, VORNAME ASC'       
@@@

Query is

@@@ ruby
friends.count(:conditions =&gt; [&quot;friend_id = :user_id&quot;, {:user_id =&gt; user_id}])
@@@

Any help (and fixing) is appreciated!

I really like to go to 2.2 but i can't (and i guess a lot of people that are stuck to gettext for the time being can't either)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This problem applies to 2.1.2 as well.&lt;/p&gt;
&lt;p&gt;I confirm this for Debian/Lenny, 2.6.26-1-686 &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt; SMP, with ruby
1.8.7 (2008-08-11 patchlevel 72) [i486-linux] and Rails 2.1.2&lt;/p&gt;
&lt;p&gt;HABTM is:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
has_and_belongs_to_many :friends,
                          :class_name =&amp;gt; 'User',
                          :join_table =&amp;gt; 'friends',
                          :foreign_key =&amp;gt; 'user_id',
                          :association_foreign_key =&amp;gt; 'friend_id',
                          :order =&amp;gt; 'NAME ASC, VORNAME ASC'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Query is&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
friends.count(:conditions =&amp;gt; [&amp;quot;friend_id = :user_id&amp;quot;, {:user_id =&amp;gt; user_id}])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Any help (and fixing) is appreciated!&lt;/p&gt;
&lt;p&gt;I really like to go to 2.2 but i can't (and i guess a lot of
people that are stuck to gettext for the time being can't
either)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-05T20:44:00+00:00</created-at>
      <creator-id type="integer">22258</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">831</number>
      <permalink>count-on-habtms-broken-by-ruby-1-8-7-array-count</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activerecord bug edge patch tests</tag>
      <title>count on HABTMs broken by Ruby 1.8.7 Array.count</title>
      <updated-at type="datetime">2008-11-05T20:44:05+00:00</updated-at>
      <user-id type="integer">36587</user-id>
      <version type="integer">15</version>
      <user-name>Michael Simons</user-name>
      <creator-name>Mike Champion</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/831</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>20038ec01287ddb8ecea5b43cbc409009796c940</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-28T19:10:32+01:00</created-at>
      <filename>habtm_count_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">42321</id>
      <size type="integer">8578</size>
      <uploader-id type="integer">24325</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/42321/habtm_count_fix.diff</url>
    </attachment>
  </attachments>
</ticket>
