<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-05-27T14:07:03+01:00</created-at>
  <creator-id type="integer">58066</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2726</number>
  <permalink>layout-not-applied-with-test-in-controller-name</permalink>
  <priority type="integer">1843</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.2 actioncontroller</tag>
  <title>Layout not applied with &quot;test&quot; in controller name</title>
  <updated-at type="datetime">2009-05-27T22:20:33+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">2</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>peter.tellgren (at gmail)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2726</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I ran in to this issue when I created a new Controller that I called TestReceiversController. The controller as normal inherits from the ApplicationController wherein I have the following. 

ApplicationController
@@@ rails
layout 'layout'
@@@

The strange thing was that the layout was not used.. but the only thing I could do to solve it was to add the &quot;layout 'layout'&quot; in the controller itself. 

The question is if this is a bug or a convention that the word test should never be used in a controller name unless it is for testing purposes?</original-body>
  <latest-body>I ran in to this issue when I created a new Controller that I called TestReceiversController. The controller as normal inherits from the ApplicationController wherein I have the following. 

ApplicationController
@@@ rails
layout 'layout'
@@@

The strange thing was that the layout was not used.. but the only thing I could do to solve it was to add the &quot;layout 'layout'&quot; in the controller itself. 

The question is if this is a bug or a convention that the word test should never be used in a controller name unless it is for testing purposes?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I ran in to this issue when I created a new Controller that I
called TestReceiversController. The controller as normal inherits
from the ApplicationController wherein I have the following.&lt;/p&gt;
&lt;p&gt;ApplicationController&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;rails&quot;&gt;
layout 'layout'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The strange thing was that the layout was not used.. but the
only thing I could do to solve it was to add the &quot;layout 'layout'&quot;
in the controller itself.&lt;/p&gt;
&lt;p&gt;The question is if this is a bug or a convention that the word
test should never be used in a controller name unless it is for
testing purposes?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I ran in to this issue when I created a new Controller that I called TestReceiversController. The controller as normal inherits from the ApplicationController wherein I have the following. 

ApplicationController
@@@ rails
layout 'layout'
@@@

The strange thing was that the layout was not used.. but the only thing I could do to solve it was to add the &quot;layout 'layout'&quot; in the controller itself. 

The question is if this is a bug or a convention that the word test should never be used in a controller name unless it is for testing purposes?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I ran in to this issue when I created a new Controller that I
called TestReceiversController. The controller as normal inherits
from the ApplicationController wherein I have the following.&lt;/p&gt;
&lt;p&gt;ApplicationController&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;rails&quot;&gt;layout 'layout'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The strange thing was that the layout was not used.. but the
only thing I could do to solve it was to add the &quot;layout 'layout'&quot;
in the controller itself.&lt;/p&gt;
&lt;p&gt;The question is if this is a bug or a convention that the word
test should never be used in a controller name unless it is for
testing purposes?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-27T14:07:03+01:00</created-at>
      <creator-id type="integer">58066</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2726</number>
      <permalink>layout-not-applied-with-test-in-controller-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 actioncontroller</tag>
      <title>Layout not applied with &quot;test&quot; in controller name</title>
      <updated-at type="datetime">2009-05-27T14:07:07+01:00</updated-at>
      <user-id type="integer">58066</user-id>
      <version type="integer">1</version>
      <user-name>peter.tellgren (at gmail)</user-name>
      <creator-name>peter.tellgren (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2726</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can't repro in 2.3.2: created a new rails app with a layout.html.erb layout, set that in application controller, scaffolded a new test_receiver resource, deleted the scaffold-generated layout for test_receiver, layout was properly inherited.

My guess is that you have a test_receivers layout, which is overriding the application layout. If you can come up with exact repro steps or a failing test case we can take another look.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can't repro in 2.3.2: created a new rails app with a
layout.html.erb layout, set that in application controller,
scaffolded a new test_receiver resource, deleted the
scaffold-generated layout for test_receiver, layout was properly
inherited.&lt;/p&gt;
&lt;p&gt;My guess is that you have a test_receivers layout, which is
overriding the application layout. If you can come up with exact
repro steps or a failing test case we can take another look.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-27T22:20:29+01:00</created-at>
      <creator-id type="integer">58066</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2726</number>
      <permalink>layout-not-applied-with-test-in-controller-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 actioncontroller</tag>
      <title>Layout not applied with &quot;test&quot; in controller name</title>
      <updated-at type="datetime">2009-05-27T22:20:33+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>peter.tellgren (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2726</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
