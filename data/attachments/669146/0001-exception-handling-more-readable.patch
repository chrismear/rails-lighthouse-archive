From 3fdb7b16095b0fc542b392c5fb439c153a348d45 Mon Sep 17 00:00:00 2001
From: Thiago Pradi <tchandy@gmail.com>
Date: Sat, 11 Sep 2010 11:00:37 -0300
Subject: [PATCH] Exception handling more readable

---
 actionpack/test/controller/assert_select_test.rb   |   16 ++++++++--------
 .../abstract/connection_specification.rb           |    4 ++--
 .../lib/active_record/railties/databases.rake      |    8 ++++----
 activeresource/lib/active_resource/base.rb         |    4 ++--
 activesupport/lib/active_support/cache.rb          |    4 ++--
 .../lib/active_support/testing/performance.rb      |    8 ++++----
 activesupport/test/core_ext/duration_test.rb       |    4 ++--
 activesupport/test/ordered_hash_test.rb            |    4 ++--
 8 files changed, 26 insertions(+), 26 deletions(-)

diff --git a/actionpack/test/controller/assert_select_test.rb b/actionpack/test/controller/assert_select_test.rb
index 2600dae..dc88745 100644
--- a/actionpack/test/controller/assert_select_test.rb
+++ b/actionpack/test/controller/assert_select_test.rb
@@ -459,8 +459,8 @@ class AssertSelectTest < ActionController::TestCase
 
     assert_select_rjs :remove, "test1"
 
-  rescue Assertion
-    assert_equal "No RJS statement that removes 'test1' was rendered.", $!.message
+  rescue Assertion => e
+    assert_equal "No RJS statement that removes 'test1' was rendered.", e.message
   end
 
   def test_assert_select_rjs_for_remove_ignores_block
@@ -491,8 +491,8 @@ class AssertSelectTest < ActionController::TestCase
 
     assert_select_rjs :show, "test1"
 
-  rescue Assertion
-    assert_equal "No RJS statement that shows 'test1' was rendered.", $!.message
+  rescue Assertion => e
+    assert_equal "No RJS statement that shows 'test1' was rendered.", e.message
   end
 
   def test_assert_select_rjs_for_show_ignores_block
@@ -523,8 +523,8 @@ class AssertSelectTest < ActionController::TestCase
 
     assert_select_rjs :hide, "test1"
 
-  rescue Assertion
-    assert_equal "No RJS statement that hides 'test1' was rendered.", $!.message
+  rescue Assertion => e
+    assert_equal "No RJS statement that hides 'test1' was rendered.", e.message
   end
 
   def test_assert_select_rjs_for_hide_ignores_block
@@ -555,8 +555,8 @@ class AssertSelectTest < ActionController::TestCase
 
     assert_select_rjs :toggle, "test1"
 
-  rescue Assertion
-    assert_equal "No RJS statement that toggles 'test1' was rendered.", $!.message
+  rescue Assertion => e
+    assert_equal "No RJS statement that toggles 'test1' was rendered.", e.message
   end
 
   def test_assert_select_rjs_for_toggle_ignores_block
diff --git a/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb b/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb
index 8e74eff..ec7035e 100644
--- a/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb
+++ b/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb
@@ -67,8 +67,8 @@ module ActiveRecord
 
           begin
             require "active_record/connection_adapters/#{spec[:adapter]}_adapter"
-          rescue LoadError
-            raise "Please install the #{spec[:adapter]} adapter: `gem install activerecord-#{spec[:adapter]}-adapter` (#{$!})"
+          rescue LoadError => e
+            raise "Please install the #{spec[:adapter]} adapter: `gem install activerecord-#{spec[:adapter]}-adapter` (#{e})"
           end
 
           adapter_method = "#{spec[:adapter]}_connection"
diff --git a/activerecord/lib/active_record/railties/databases.rake b/activerecord/lib/active_record/railties/databases.rake
index 8e53322..3c5981a 100644
--- a/activerecord/lib/active_record/railties/databases.rake
+++ b/activerecord/lib/active_record/railties/databases.rake
@@ -67,8 +67,8 @@ namespace :db do
             # Create the SQLite database
             ActiveRecord::Base.establish_connection(config)
             ActiveRecord::Base.connection
-          rescue
-            $stderr.puts $!, *($!.backtrace)
+          rescue Exception => e
+            $stderr.puts e, *(e.backtrace)
             $stderr.puts "Couldn't create database for #{config.inspect}"
           end
         end
@@ -113,8 +113,8 @@ namespace :db do
           ActiveRecord::Base.establish_connection(config.merge('database' => 'postgres', 'schema_search_path' => 'public'))
           ActiveRecord::Base.connection.create_database(config['database'], config.merge('encoding' => @encoding))
           ActiveRecord::Base.establish_connection(config)
-        rescue
-          $stderr.puts $!, *($!.backtrace)
+        rescue Exception => e
+          $stderr.puts e, *(e.backtrace)
           $stderr.puts "Couldn't create database for #{config.inspect}"
         end
       end
diff --git a/activeresource/lib/active_resource/base.rb b/activeresource/lib/active_resource/base.rb
index 7963aa4..46a14b4 100644
--- a/activeresource/lib/active_resource/base.rb
+++ b/activeresource/lib/active_resource/base.rb
@@ -589,8 +589,8 @@ module ActiveResource
             def prefix(options={}) "#{prefix_call}" end
           RUBY_EVAL
         end
-      rescue
-        logger.error "Couldn't set prefix: #{$!}\n  #{code}" if logger
+      rescue Exception => e
+        logger.error "Couldn't set prefix: #{e}\n  #{code}" if logger
         raise
       end
 
diff --git a/activesupport/lib/active_support/cache.rb b/activesupport/lib/active_support/cache.rb
index df35540..9098ffb 100644
--- a/activesupport/lib/active_support/cache.rb
+++ b/activesupport/lib/active_support/cache.rb
@@ -61,8 +61,8 @@ module ActiveSupport
         store_class =
           begin
             require "active_support/cache/#{store}"
-          rescue LoadError
-            raise "Could not find cache store adapter for #{store} (#{$!})"
+          rescue LoadError => e
+            raise "Could not find cache store adapter for #{store} (#{e})"
           else
             ActiveSupport::Cache.const_get(store_class_name)
           end
diff --git a/activesupport/lib/active_support/testing/performance.rb b/activesupport/lib/active_support/testing/performance.rb
index f7ddf64..64b436b 100644
--- a/activesupport/lib/active_support/testing/performance.rb
+++ b/activesupport/lib/active_support/testing/performance.rb
@@ -58,16 +58,16 @@ begin
           metric.send(mode) { __send__ @method_name }
         rescue ::Test::Unit::AssertionFailedError => e
           add_failure(e.message, e.backtrace)
-        rescue StandardError, ScriptError
-          add_error($!)
+        rescue StandardError, ScriptError => e
+          add_error(e)
         ensure
           begin
             teardown
             run_callbacks :teardown, :enumerator => :reverse_each
           rescue ::Test::Unit::AssertionFailedError => e
             add_failure(e.message, e.backtrace)
-          rescue StandardError, ScriptError
-            add_error($!)
+          rescue StandardError, ScriptError => e
+            add_error(e)
           end
         end
 
diff --git a/activesupport/test/core_ext/duration_test.rb b/activesupport/test/core_ext/duration_test.rb
index b6456f0..bb453b8 100644
--- a/activesupport/test/core_ext/duration_test.rb
+++ b/activesupport/test/core_ext/duration_test.rb
@@ -53,8 +53,8 @@ class DurationTest < ActiveSupport::TestCase
       flunk("no exception was raised")
     rescue ArgumentError => e
       assert_equal 'expected a time or date, got ""', e.message, "ensure ArgumentError is not being raised by dependencies.rb"
-    rescue Exception
-      flunk("ArgumentError should be raised, but we got #{$!.class} instead")
+    rescue Exception => e
+      flunk("ArgumentError should be raised, but we got #{e.class} instead")
     end
   end
 
diff --git a/activesupport/test/ordered_hash_test.rb b/activesupport/test/ordered_hash_test.rb
index f47e896..50778b5 100644
--- a/activesupport/test/ordered_hash_test.rb
+++ b/activesupport/test/ordered_hash_test.rb
@@ -217,8 +217,8 @@ class OrderedHashTest < Test::Unit::TestCase
       ActiveSupport::OrderedHash[1,2,3,4,5]
       flunk "Hash::[] should have raised an exception on initialization " +
           "with an odd number of parameters"
-    rescue
-      assert_equal "odd number of arguments for Hash", $!.message
+    rescue ArgumentError => e
+      assert_equal "odd number of arguments for Hash", e.message
     end
   end
 
-- 
1.6.6.1

