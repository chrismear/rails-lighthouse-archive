<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-12T15:01:04+01:00</created-at>
  <creator-id type="integer">63298</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3042</number>
  <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
  <priority type="integer">131259</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activemodel machine state statemachine</tag>
  <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
  <updated-at type="datetime">2010-07-21T02:37:20+01:00</updated-at>
  <user-id type="integer">108128</user-id>
  <version type="integer">7</version>
  <user-name>a4490302sc</user-name>
  <creator-name>Morgan Christiansson</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a model called Event defined.

&lt;code&gt;
class Booking &lt; ActiveRecord::Base
  belongs_to :event
end

class Event &lt; ActiveRecord::Base
end
&lt;/code&gt;

When i add &lt;code&gt;include ActiveModel::StateMachine&lt;/code&gt; to my Booking model the association stops working.

&lt;code&gt;
&gt;&gt; Booking.last.event
NameError: undefined local variable or method `event' for #&lt;Class:0x7f68edac8728&gt;
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:1959:in `method_missing'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2199:in `compute_type'
	from #{RAILS_ROOT}/vendor/rails/activesupport/lib/active_support/core_ext/kernel/reporting.rb:11:in `silence_warnings'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2195:in `compute_type'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `send'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `klass'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/belongs_to_association.rb:49:in `find_target'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:240:in `load_target'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:112:in `reload'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations.rb:1247:in `event'
	from (irb):2
&lt;/code&gt;

I tracked the problem to ActiveModel::StateMachine::Event being imported as can be seen from this code:

&lt;code&gt;
&gt;&gt; Booking.reflections[:event]
=&gt; #&lt;ActiveRecord::Reflection::AssociationReflection:0x7fa1123db200 @klass=ActiveModel::StateMachine::Event, @primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer, event_id: integer), @options={}, @macro=:belongs_to, @class_name=&quot;Event&quot;, @name=:event&gt;
&lt;/code&gt;

So .find is being called on ActiveModel::StateMachine::Event.

If i instead use:
&lt;code&gt;
  require 'active_model/state_machine/machine'
  extend ActiveModel::StateMachine::ClassMethods
&lt;/code&gt;

Then the behaviour is correct.

&lt;code&gt;
?&gt; Booking.reflections[:event]
=&gt; #&lt;ActiveRecord::Reflection::AssociationReflection:0x7f3505b2a840 @klass=Event(id: integer, name: string), @primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer, event_id: integer), @options={:class_name=&gt;&quot;Event&quot;}, @macro=:belongs_to, @class_name=&quot;Event&quot;, @name=:event&gt;
&lt;/code&gt;



This is very different from the expected behaviour where the Event constant is not redefined and association works as normal.</original-body>
  <latest-body>I have a model called Event defined.

&lt;code&gt;
class Booking &lt; ActiveRecord::Base
  belongs_to :event
end

class Event &lt; ActiveRecord::Base
end
&lt;/code&gt;

When i add &lt;code&gt;include ActiveModel::StateMachine&lt;/code&gt; to my Booking model the association stops working.

&lt;code&gt;
&gt;&gt; Booking.last.event
NameError: undefined local variable or method `event' for #&lt;Class:0x7f68edac8728&gt;
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:1959:in `method_missing'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2199:in `compute_type'
	from #{RAILS_ROOT}/vendor/rails/activesupport/lib/active_support/core_ext/kernel/reporting.rb:11:in `silence_warnings'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2195:in `compute_type'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `send'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `klass'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/belongs_to_association.rb:49:in `find_target'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:240:in `load_target'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:112:in `reload'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations.rb:1247:in `event'
	from (irb):2
&lt;/code&gt;

I tracked the problem to ActiveModel::StateMachine::Event being imported as can be seen from this code:

&lt;code&gt;
&gt;&gt; Booking.reflections[:event]
=&gt; #&lt;ActiveRecord::Reflection::AssociationReflection:0x7fa1123db200 @klass=ActiveModel::StateMachine::Event, @primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer, event_id: integer), @options={}, @macro=:belongs_to, @class_name=&quot;Event&quot;, @name=:event&gt;
&lt;/code&gt;

So .find is being called on ActiveModel::StateMachine::Event.

If i instead use:
&lt;code&gt;
  require 'active_model/state_machine/machine'
  extend ActiveModel::StateMachine::ClassMethods
&lt;/code&gt;

Then the behaviour is correct.

&lt;code&gt;
?&gt; Booking.reflections[:event]
=&gt; #&lt;ActiveRecord::Reflection::AssociationReflection:0x7f3505b2a840 @klass=Event(id: integer, name: string), @primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer, event_id: integer), @options={:class_name=&gt;&quot;Event&quot;}, @macro=:belongs_to, @class_name=&quot;Event&quot;, @name=:event&gt;
&lt;/code&gt;



This is very different from the expected behaviour where the Event constant is not redefined and association works as normal.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a model called Event defined.&lt;/p&gt;
&lt;p&gt;class Booking &amp;lt; ActiveRecord::Base belongs_to :event end&lt;/p&gt;
&lt;p&gt;class Event &amp;lt; ActiveRecord::Base end&lt;/p&gt;
&lt;p&gt;When i add include ActiveModel::StateMachine to my Booking model
the association stops working.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Booking.last.event NameError: undefined local variable or method
&lt;code&gt;event' for #&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:1959:in `method_missing'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2199:in `compute_type'
from #{RAILS_ROOT}/vendor/rails/activesupport/lib/active_support/core_ext/kernel/reporting.rb:11:in `silence_warnings'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2195:in `compute_type'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `send'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `klass'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/belongs_to_association.rb:49:in `find_target'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:240:in `load_target'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:112:in `reload'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations.rb:1247:in `event'
from (irb):2
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I tracked the problem to ActiveModel::StateMachine::Event being
imported as can be seen from this code:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Booking.reflections[:event] =&amp;gt; #&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;So .find is being called on
ActiveModel::StateMachine::Event.&lt;/p&gt;
&lt;p&gt;If i instead use:&lt;/p&gt;
&lt;p&gt;require 'active_model/state_machine/machine' extend
ActiveModel::StateMachine::ClassMethods&lt;/p&gt;
&lt;p&gt;Then the behaviour is correct.&lt;/p&gt;
&lt;p&gt;?&amp;gt; Booking.reflections[:event] =&amp;gt; #&quot;Event&quot;},
@macro=:belongs_to, @class_name=&quot;Event&quot;, @name=:event&amp;gt;&lt;/p&gt;
&lt;p&gt;This is very different from the expected behaviour where the
Event constant is not redefined and association works as
normal.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a model called Event defined.

&lt;code&gt;
class Booking &lt; ActiveRecord::Base
  belongs_to :event
end

class Event &lt; ActiveRecord::Base
end
&lt;/code&gt;

When i add &lt;code&gt;include ActiveModel::StateMachine&lt;/code&gt; to my Booking model the association stops working.

&lt;code&gt;
&gt;&gt; Booking.last.event
NameError: undefined local variable or method `event' for #&lt;Class:0x7f68edac8728&gt;
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:1959:in `method_missing'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2199:in `compute_type'
	from #{RAILS_ROOT}/vendor/rails/activesupport/lib/active_support/core_ext/kernel/reporting.rb:11:in `silence_warnings'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2195:in `compute_type'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `send'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `klass'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/belongs_to_association.rb:49:in `find_target'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:240:in `load_target'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:112:in `reload'
	from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations.rb:1247:in `event'
	from (irb):2
&lt;/code&gt;

I tracked the problem to ActiveModel::StateMachine::Event being imported as can be seen from this code:

&lt;code&gt;
&gt;&gt; Booking.reflections[:event]
=&gt; #&lt;ActiveRecord::Reflection::AssociationReflection:0x7fa1123db200 @klass=ActiveModel::StateMachine::Event, @primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer, event_id: integer), @options={}, @macro=:belongs_to, @class_name=&quot;Event&quot;, @name=:event&gt;
&lt;/code&gt;

So .find is being called on ActiveModel::StateMachine::Event.

If i instead use:
&lt;code&gt;
  require 'active_model/state_machine/machine'
  extend ActiveModel::StateMachine::ClassMethods
&lt;/code&gt;

Then the behaviour is correct.

&lt;code&gt;
?&gt; Booking.reflections[:event]
=&gt; #&lt;ActiveRecord::Reflection::AssociationReflection:0x7f3505b2a840 @klass=Event(id: integer, name: string), @primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer, event_id: integer), @options={:class_name=&gt;&quot;Event&quot;}, @macro=:belongs_to, @class_name=&quot;Event&quot;, @name=:event&gt;
&lt;/code&gt;



This is very different from the expected behaviour where the Event constant is not redefined and association works as normal.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a model called Event defined.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
class Booking &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :event end&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;class Event &amp;lt; ActiveRecord::Base&lt;br&gt;
end&lt;br&gt;&lt;/p&gt;
&lt;p&gt;When i add &lt;code&gt;include ActiveModel::StateMachine&lt;/code&gt; to my
Booking model the association stops working.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Booking.last.event NameError: undefined local variable or method
&lt;code&gt;event' for
#&amp;lt;Class:0x7f68edac8728&amp;gt;&amp;lt;br/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:1959:in `method_missing'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2199:in `compute_type'
from #{RAILS_ROOT}/vendor/rails/activesupport/lib/active_support/core_ext/kernel/reporting.rb:11:in `silence_warnings'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/base.rb:2195:in `compute_type'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `send'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/reflection.rb:156:in `klass'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/belongs_to_association.rb:49:in `find_target'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:240:in `load_target'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:112:in `reload'
from #{RAILS_ROOT}/vendor/rails/activerecord/lib/active_record/associations.rb:1247:in `event'
from (irb):2&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I tracked the problem to ActiveModel::StateMachine::Event being
imported as can be seen from this code:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Booking.reflections[:event] =&amp;gt;
#&amp;lt;ActiveRecord::Reflection::AssociationReflection:0x7fa1123db200
@klass=ActiveModel::StateMachine::Event,
@primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer,
event_id: integer), @options={}, @macro=:belongs_to,
@class_name=&quot;Event&quot;, @name=:event&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;So .find is being called on
ActiveModel::StateMachine::Event.&lt;/p&gt;
&lt;p&gt;If i instead use:&lt;br&gt;
&lt;code&gt;&lt;br&gt;
require 'active_model/state_machine/machine' extend
ActiveModel::StateMachine::ClassMethods&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then the behaviour is correct.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
?&amp;gt; Booking.reflections[:event] =&amp;gt;
#&amp;lt;ActiveRecord::Reflection::AssociationReflection:0x7f3505b2a840
@klass=Event(id: integer, name: string),
@primary_key_name=&quot;event_id&quot;, @active_record=Booking(id: integer,
event_id: integer), @options={:class_name=&amp;gt;&quot;Event&quot;},
@macro=:belongs_to, @class_name=&quot;Event&quot;,
@name=:event&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This is very different from the expected behaviour where the
Event constant is not redefined and association works as
normal.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-12T15:01:04+01:00</created-at>
      <creator-id type="integer">63298</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3042</number>
      <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel machine state statemachine</tag>
      <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
      <updated-at type="datetime">2009-08-12T15:01:08+01:00</updated-at>
      <user-id type="integer">63298</user-id>
      <version type="integer">1</version>
      <user-name>Morgan Christiansson</user-name>
      <creator-name>Morgan Christiansson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(Sorry about the formatting in the first 2 code snippets, they were from script/console which has a prefix of &gt;&gt; for all commands which has been interpreted as quotation.)


My workaround did not work as it does not import the instance methods, my new workaround is to rename my Event model to Event2 to avoid the naming conflict. This in turn has caused problems with associations and fixtures - not happy. :(</body>
      <body-html>&lt;div&gt;&lt;p&gt;(Sorry about the formatting in the first 2 code snippets, they
were from script/console which has a prefix of &amp;gt;&amp;gt; for all
commands which has been interpreted as quotation.)&lt;/p&gt;
&lt;p&gt;My workaround did not work as it does not import the instance
methods, my new workaround is to rename my Event model to Event2 to
avoid the naming conflict. This in turn has caused problems with
associations and fixtures - not happy. :(&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-12T18:07:19+01:00</created-at>
      <creator-id type="integer">63298</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3042</number>
      <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel machine state statemachine</tag>
      <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
      <updated-at type="datetime">2009-08-12T18:07:25+01:00</updated-at>
      <user-id type="integer">63298</user-id>
      <version type="integer">2</version>
      <user-name>Morgan Christiansson</user-name>
      <creator-name>Morgan Christiansson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm having the same problem.

It seems the call to active_record.compute_type in AssociationReflection#klass is getting itself in a dither and returning the wrong constant. I'll write a failing test when it's not half five on a Friday afternoon and my brain is in a better state (hoho).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having the same problem.&lt;/p&gt;
&lt;p&gt;It seems the call to active_record.compute_type in
AssociationReflection#klass is getting itself in a dither and
returning the wrong constant. I'll write a failing test when it's
not half five on a Friday afternoon and my brain is in a better
state (hoho).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-21T16:40:22+01:00</created-at>
      <creator-id type="integer">63298</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3042</number>
      <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel machine state statemachine</tag>
      <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
      <updated-at type="datetime">2009-08-21T16:40:27+01:00</updated-at>
      <user-id type="integer">1741</user-id>
      <version type="integer">3</version>
      <user-name>Tekin</user-name>
      <creator-name>Morgan Christiansson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Having trouble recreating this in rails for a testcase. I have a workaround though, simply pass in :class_name =&gt; '::Event' to force compute_type to resolve to the correct Event class.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Having trouble recreating this in rails for a testcase. I have a
workaround though, simply pass in :class_name =&amp;gt; '::Event' to
force compute_type to resolve to the correct Event class.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-24T12:25:42+01:00</created-at>
      <creator-id type="integer">63298</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3042</number>
      <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel machine state statemachine</tag>
      <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
      <updated-at type="datetime">2009-08-24T12:25:44+01:00</updated-at>
      <user-id type="integer">1741</user-id>
      <version type="integer">4</version>
      <user-name>Tekin</user-name>
      <creator-name>Morgan Christiansson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveModel::StateMachine was removed from core, should be marked as invalid</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveModel::StateMachine was removed from core, should be
marked as invalid&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T01:55:11+01:00</created-at>
      <creator-id type="integer">63298</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3042</number>
      <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel machine state statemachine</tag>
      <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
      <updated-at type="datetime">2010-04-16T01:55:13+01:00</updated-at>
      <user-id type="integer">65576</user-id>
      <version type="integer">5</version>
      <user-name>Steve St. Martin</user-name>
      <creator-name>Morgan Christiansson</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-19T22:12:44+01:00</created-at>
      <creator-id type="integer">63298</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3042</number>
      <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activemodel machine state statemachine</tag>
      <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
      <updated-at type="datetime">2010-04-19T22:12:46+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">6</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Morgan Christiansson</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>nshiny sapphire &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/discount-replicas/piaget.html&quot;&gt;designer replica Piaget&lt;/a&gt;&lt;/b&gt; external. What more could &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/discount-replicas/best-sellers.html&quot;&gt;replica Best Sellers wholesale&lt;/a&gt;&lt;/b&gt; you conceivably lust or &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/replica/jacob-co-unisex-watch-jc1-1961.html&quot;&gt;Jacob &amp; Co. Unisex Watch JC1 sale&lt;/a&gt;&lt;/b&gt; relish when buying your &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/discount-replicas/emporio-armani.html&quot;&gt;wholesale replica Emporio Armani&lt;/a&gt;&lt;/b&gt; manipulate from Omega, illustrate &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com&quot;&gt;replica handbags&lt;/a&gt;&lt;/b&gt; a no mishap additional &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/discount-replicas/panerai.html&quot;&gt;designer replica Panerai&lt;/a&gt;&lt;/b&gt; additional see. represent the &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/discount-replicas/ugg-new-style-boots.html&quot;&gt;replica Ugg New Style Boots for sale&lt;/a&gt;&lt;/b&gt; say so of high-society. &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/discount-replicas/plastic-sunglasses.html&quot;&gt;replica Plastic Sunglasses online&lt;/a&gt;&lt;/b&gt;  To pass on &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com&quot;&gt;cheap replica jewelry&lt;/a&gt;&lt;/b&gt; in consummate your personality, &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com/discount-replicas/puma-shoes.html&quot;&gt;replica Puma Shoes online store&lt;/a&gt;&lt;/b&gt; you should pour in a Jimmy Choo handbag.Our website off</body>
      <body-html>&lt;div&gt;&lt;p&gt;nshiny sapphire &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/discount-replicas/piaget.html&quot;&gt;designer
replica Piaget&lt;/a&gt;&lt;/b&gt; external. What more could &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/discount-replicas/best-sellers.html&quot;&gt;
replica Best Sellers wholesale&lt;/a&gt;&lt;/b&gt; you conceivably lust or
&lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/replica/jacob-co-unisex-watch-jc1-1961.html&quot;&gt;
Jacob &amp;amp; Co. Unisex Watch JC1 sale&lt;/a&gt;&lt;/b&gt; relish when buying
your &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/discount-replicas/emporio-armani.html&quot;&gt;
wholesale replica Emporio Armani&lt;/a&gt;&lt;/b&gt; manipulate from Omega,
illustrate &lt;b&gt;&lt;a href=&quot;http://www.discount-replicas.com&quot;&gt;replica
handbags&lt;/a&gt;&lt;/b&gt; a no mishap additional &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/discount-replicas/panerai.html&quot;&gt;designer
replica Panerai&lt;/a&gt;&lt;/b&gt; additional see. represent the &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/discount-replicas/ugg-new-style-boots.html&quot;&gt;
replica Ugg New Style Boots for sale&lt;/a&gt;&lt;/b&gt; say so of
high-society. &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/discount-replicas/plastic-sunglasses.html&quot;&gt;
replica Plastic Sunglasses online&lt;/a&gt;&lt;/b&gt; To pass on &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com&quot;&gt;cheap replica jewelry&lt;/a&gt;&lt;/b&gt; in
consummate your personality, &lt;b&gt;&lt;a href=
&quot;http://www.discount-replicas.com/discount-replicas/puma-shoes.html&quot;&gt;
replica Puma Shoes online store&lt;/a&gt;&lt;/b&gt; you should pour in a Jimmy
Choo handbag.Our website off&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-21T02:37:17+01:00</created-at>
      <creator-id type="integer">63298</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3042</number>
      <permalink>include-activemodelstatemachine-imports-classes-defined-in-activemodelstatemachine-module</permalink>
      <priority type="integer">131259</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activemodel machine state statemachine</tag>
      <title>include ActiveModel::StateMachine imports classes defined in ActiveModel::StateMachine module</title>
      <updated-at type="datetime">2010-07-21T02:37:20+01:00</updated-at>
      <user-id type="integer">108128</user-id>
      <version type="integer">7</version>
      <user-name>a4490302sc</user-name>
      <creator-name>Morgan Christiansson</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3042</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
