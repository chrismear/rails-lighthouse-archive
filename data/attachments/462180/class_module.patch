From 5b07b3f1efa0cc9f4163e1ae9a15b1d5e7cd43e2 Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Sat, 27 Mar 2010 11:26:12 -0300
Subject: [PATCH 1/2] flatten not needed here

---
 .../core_ext/class/attribute_accessors.rb          |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
index 83d154b..be34a5a 100644
--- a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
+++ b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
@@ -11,7 +11,7 @@ require 'active_support/core_ext/array/extract_options'
 class Class
   def cattr_reader(*syms)
     options = syms.extract_options!
-    syms.flatten.each do |sym|
+    syms.each do |sym|
       class_eval(<<-EOS, __FILE__, __LINE__ + 1)
         unless defined? @@#{sym}  # unless defined? @@hair_colors
           @@#{sym} = nil          #   @@hair_colors = nil
@@ -33,7 +33,7 @@ class Class
 
   def cattr_writer(*syms)
     options = syms.extract_options!
-    syms.flatten.each do |sym|
+    syms.each do |sym|
       class_eval(<<-EOS, __FILE__, __LINE__ + 1)
         unless defined? @@#{sym}                       # unless defined? @@hair_colors
           @@#{sym} = nil                               #   @@hair_colors = nil
-- 
1.7.0


From 187356c8c737a9764c3c1676b3c5847080209bcd Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Sat, 27 Mar 2010 11:29:10 -0300
Subject: [PATCH 2/2] LINE on class_eval need + 1, also removed comments [#4281 state:committed]

---
 .../core_ext/class/attribute_accessors.rb          |   51 ++++++++++---------
 .../core_ext/module/attribute_accessors.rb         |   40 ++++++++--------
 2 files changed, 47 insertions(+), 44 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
index be34a5a..feef5d2 100644
--- a/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
+++ b/activesupport/lib/active_support/core_ext/class/attribute_accessors.rb
@@ -13,19 +13,20 @@ class Class
     options = syms.extract_options!
     syms.each do |sym|
       class_eval(<<-EOS, __FILE__, __LINE__ + 1)
-        unless defined? @@#{sym}  # unless defined? @@hair_colors
-          @@#{sym} = nil          #   @@hair_colors = nil
-        end                       # end
-                                  #
-        def self.#{sym}           # def self.hair_colors
-          @@#{sym}                #   @@hair_colors
-        end                       # end
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
+
+        def self.#{sym}
+          @@#{sym}
+        end
       EOS
+
       unless options[:instance_reader] == false
-        class_eval(<<-EOS, __FILE__, __LINE__)
-          def #{sym}              # def hair_colors
-            @@#{sym}              #   @@hair_colors
-          end                     # end
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}
+            @@#{sym}
+          end
         EOS
       end
     end
@@ -35,20 +36,22 @@ class Class
     options = syms.extract_options!
     syms.each do |sym|
       class_eval(<<-EOS, __FILE__, __LINE__ + 1)
-        unless defined? @@#{sym}                       # unless defined? @@hair_colors
-          @@#{sym} = nil                               #   @@hair_colors = nil
-        end                                            # end
-                                                       #
-        def self.#{sym}=(obj)                          # def self.hair_colors=(obj)
-          @@#{sym} = obj                               #   @@hair_colors = obj
-        end                                            # end
-                                                       #
-        #{"                                            #
-        def #{sym}=(obj)                               # def hair_colors=(obj)
-          @@#{sym} = obj                               #   @@hair_colors = obj
-        end                                            # end
-        " unless options[:instance_writer] == false }  # # instance writer above is generated unless options[:instance_writer] == false
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
+
+        def self.#{sym}=(obj)
+          @@#{sym} = obj
+        end
       EOS
+
+      unless options[:instance_writer] == false
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}=(obj)
+            @@#{sym} = obj
+          end
+        EOS
+      end
       self.send("#{sym}=", yield) if block_given?
     end
   end
diff --git a/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb b/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb
index c315fd5..9c4d5fa 100644
--- a/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb
+++ b/activesupport/lib/active_support/core_ext/module/attribute_accessors.rb
@@ -5,20 +5,20 @@ class Module
     options = syms.extract_options!
     syms.each do |sym|
       class_eval(<<-EOS, __FILE__, __LINE__ + 1)
-        unless defined? @@#{sym}  # unless defined? @@pagination_options
-          @@#{sym} = nil          #   @@pagination_options = nil
-        end                       # end
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
 
-        def self.#{sym}           # def self.pagination_options
-          @@#{sym}                #   @@pagination_options
-        end                       # end
+        def self.#{sym}
+          @@#{sym}
+        end
       EOS
       
       unless options[:instance_reader] == false
-        class_eval(<<-EOS, __FILE__, __LINE__)
-          def #{sym}              # def hair_colors
-            @@#{sym}              #   @@hair_colors
-          end                     # end
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}
+            @@#{sym}
+          end
         EOS
       end
     end
@@ -28,20 +28,20 @@ class Module
     options = syms.extract_options!
     syms.each do |sym|
       class_eval(<<-EOS, __FILE__, __LINE__ + 1)
-        unless defined? @@#{sym}                       # unless defined? @@pagination_options
-          @@#{sym} = nil                               #   @@pagination_options = nil
-        end                                            # end
+        unless defined? @@#{sym}
+          @@#{sym} = nil
+        end
 
-        def self.#{sym}=(obj)                          # def self.pagination_options=(obj)
-          @@#{sym} = obj                               #   @@pagination_options = obj
-        end                                            # end
+        def self.#{sym}=(obj)
+          @@#{sym} = obj
+        end
       EOS
 
       unless options[:instance_writer] == false
-        class_eval(<<-EOS, __FILE__, __LINE__)
-          def #{sym}=(obj)                             # def pagination_options=(obj)
-            @@#{sym} = obj                             #   @@pagination_options = obj
-          end                                          # end
+        class_eval(<<-EOS, __FILE__, __LINE__ + 1)
+          def #{sym}=(obj)
+            @@#{sym} = obj
+          end
         EOS
       end
     end
-- 
1.7.0

