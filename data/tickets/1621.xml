<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-23T14:08:59+00:00</created-at>
  <creator-id type="integer">33111</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1621</number>
  <permalink>add-each_sorted-method-to-hash-to-allow-easier-iteration-of-sorted-keyvalue-pairs</permalink>
  <priority type="integer">960</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>&quot;active_support core_ext&quot; hash patch</tag>
  <title>Add #each_sorted method to Hash to allow easier iteration of sorted key/value pairs</title>
  <updated-at type="datetime">2009-03-07T11:08:50+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">2</version>
  <user-name>Pratik</user-name>
  <creator-name>madlep</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1621</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Added #each_sorted method to Hash. Allows sorted iteration identical to #each (except the keys are sorted).

e.g.
@@@
original = {'c' =&gt; 3, 'a' =&gt; 1, 'b' =&gt; 2, 'd' =&gt; 4}
expected = [['a',1],['b',2],['c',3],['d',4]]
original.each_sorted do |key, value|
  # key will be a,b,c,d etc on each iteration in order
  assert_equal expected.shift, [key, value]
end
@@@

Made change after watching http://railscasts.com/episodes/29-group-by-month and realizing I'd had the same problem myself a few times.</original-body>
  <latest-body>Added #each_sorted method to Hash. Allows sorted iteration identical to #each (except the keys are sorted).

e.g.
@@@
original = {'c' =&gt; 3, 'a' =&gt; 1, 'b' =&gt; 2, 'd' =&gt; 4}
expected = [['a',1],['b',2],['c',3],['d',4]]
original.each_sorted do |key, value|
  # key will be a,b,c,d etc on each iteration in order
  assert_equal expected.shift, [key, value]
end
@@@

Made change after watching http://railscasts.com/episodes/29-group-by-month and realizing I'd had the same problem myself a few times.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Added #each_sorted method to Hash. Allows sorted iteration
identical to #each (except the keys are sorted).&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
original = {'c' =&amp;gt; 3, 'a' =&amp;gt; 1, 'b' =&amp;gt; 2, 'd' =&amp;gt; 4}
expected = [['a',1],['b',2],['c',3],['d',4]]
original.each_sorted do |key, value|
  # key will be a,b,c,d etc on each iteration in order
  assert_equal expected.shift, [key, value]
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Made change after watching &lt;a href=&quot;http://railscasts.com/episodes/29-group-by-month&quot;&gt;http://railscasts.com/episodes/2...&lt;/a&gt;
and realizing I'd had the same problem myself a few times.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Added #each_sorted method to Hash. Allows sorted iteration identical to #each (except the keys are sorted).

e.g.
@@@
original = {'c' =&gt; 3, 'a' =&gt; 1, 'b' =&gt; 2, 'd' =&gt; 4}
expected = [['a',1],['b',2],['c',3],['d',4]]
original.each_sorted do |key, value|
  # key will be a,b,c,d etc on each iteration in order
  assert_equal expected.shift, [key, value]
end
@@@

Made change after watching http://railscasts.com/episodes/29-group-by-month and realizing I'd had the same problem myself a few times.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Added #each_sorted method to Hash. Allows sorted iteration
identical to #each (except the keys are sorted).&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
original = {'c' =&amp;gt; 3, 'a' =&amp;gt; 1, 'b' =&amp;gt; 2, 'd' =&amp;gt; 4}
expected = [['a',1],['b',2],['c',3],['d',4]]
original.each_sorted do |key, value|
  # key will be a,b,c,d etc on each iteration in order
  assert_equal expected.shift, [key, value]
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Made change after watching &lt;a href=&quot;http://railscasts.com/episodes/29-group-by-month&quot;&gt;http://railscasts.com/episodes/2...&lt;/a&gt;
and realizing I'd had the same problem myself a few times.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-23T14:08:59+00:00</created-at>
      <creator-id type="integer">33111</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1621</number>
      <permalink>add-each_sorted-method-to-hash-to-allow-easier-iteration-of-sorted-keyvalue-pairs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active_support core_ext&quot; hash patch</tag>
      <title>Add #each_sorted method to Hash to allow easier iteration of sorted key/value pairs</title>
      <updated-at type="datetime">2008-12-23T14:09:03+00:00</updated-at>
      <user-id type="integer">33111</user-id>
      <version type="integer">1</version>
      <user-name>madlep</user-name>
      <creator-name>madlep</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1621</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Don't think this belongs to core. Should just use OrderedHash.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Don't think this belongs to core. Should just use
OrderedHash.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-07T11:08:46+00:00</created-at>
      <creator-id type="integer">33111</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1621</number>
      <permalink>add-each_sorted-method-to-hash-to-allow-easier-iteration-of-sorted-keyvalue-pairs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>&quot;active_support core_ext&quot; hash patch</tag>
      <title>Add #each_sorted method to Hash to allow easier iteration of sorted key/value pairs</title>
      <updated-at type="datetime">2009-03-07T11:08:50+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>madlep</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1621</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>45933b522523b9a672bfad09a6a51c45d8061b4b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-23T14:08:59+00:00</created-at>
      <filename>hash_each_sorted.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">73524</id>
      <size type="integer">2980</size>
      <uploader-id type="integer">33111</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/73524/hash_each_sorted.diff</url>
    </attachment>
  </attachments>
</ticket>
