From 47367a0403e94a9b76b5ac6f65e5887ef30ce3b3 Mon Sep 17 00:00:00 2001
From: Mike Gunderloy <MikeG1@larkfarm.com>
Date: Tue, 10 Mar 2009 07:45:54 -0500
Subject: [PATCH] Add failing routing tests

---
 actionpack/test/controller/routing_test.rb |   58 ++++++++++++++++++++++++++++
 1 files changed, 58 insertions(+), 0 deletions(-)

diff --git a/actionpack/test/controller/routing_test.rb b/actionpack/test/controller/routing_test.rb
index ef56119..346e9aa 100644
--- a/actionpack/test/controller/routing_test.rb
+++ b/actionpack/test/controller/routing_test.rb
@@ -1418,6 +1418,64 @@ class LegacyRouteSetTests < Test::Unit::TestCase
       x.send(:foo_with_requirement_url, "I am Against the requirements")
     end
   end
+  
+  def test_path_without_format_should_include_format_in_path
+    rs.draw do |map|
+      map.connect('files/*path', :controller => 'content', 
+        :action => 'show_file')
+    end
+    
+    assert_equal({:controller => "content", :action => 'show_file', :path => ['foo', 'bar.zip']}, rs.recognize_path("/files/foo/bar.zip"))
+    assert_equal({:controller => "content", :action => 'show_file', :path => ['foo', 'bar.tar.gz']}, rs.recognize_path("/files/foo/bar.tar.gz"))
+  end
+
+  def test_paths_should_recognize_format
+    rs.draw do |map|
+      map.connect('files/*path.:format', :controller => 'content', 
+        :action => 'show_file')
+    end
+    
+    assert_equal({:controller => "content", :action => 'show_file', :path => ['foo', 'bar'], 
+        :format => "zip" }, rs.recognize_path("/files/foo/bar.zip"))
+    assert_equal({:controller => "content", :action => 'show_file', :path => ['foo', 'bar'], 
+        :format => "tar.gz" }, rs.recognize_path("/files/foo/bar.tar.gz"))
+  end
+
+  def test_routes_should_allow_to_set_format_regexp_requirement
+    rs.draw do |map|
+      map.connect('files/:filename.:format', :controller => 'content', 
+        :action => 'show_file', :requirements => {:format => /(zip|tar.gz)/})
+    end
+    
+    assert_equal({:controller => "content", :action => 'show_file', :filename => 'bar', 
+        :format => "zip" }, rs.recognize_path("/files/bar.zip"))
+    assert_equal({:controller => "content", :action => 'show_file', :filename => 'bar', 
+        :format => "tar.gz" }, rs.recognize_path("/files/bar.tar.gz"))
+  end
+
+  def test_multi_extension_format
+    rs.draw do |map|
+      map.connect('files/:filename.:format', :controller => 'content', 
+        :action => 'show_file')
+    end
+    
+    assert_equal({:controller => "content", :action => 'show_file', :filename => 'bar', 
+        :format => "zip" }, rs.recognize_path("/files/bar.zip"))
+    assert_equal({:controller => "content", :action => 'show_file', :filename => 'bar', 
+        :format => "tar.gz" }, rs.recognize_path("/files/bar.tar.gz"))
+  end
+
+  def test_paths_should_allow_to_set_format_regexp_requirement
+    rs.draw do |map|
+      map.connect('files/*path.:format', :controller => 'content', 
+        :action => 'show_file', :requirements => {:format => /(zip|tar.gz)/})
+    end
+    
+    assert_equal({:controller => "content", :action => 'show_file', :path => ['foo', 'bar'], 
+        :format => "zip" }, rs.recognize_path("/files/foo/bar.zip"))
+    assert_equal({:controller => "content", :action => 'show_file', :path => ['foo', 'bar'], 
+        :format => "tar.gz" }, rs.recognize_path("/files/foo/bar.tar.gz"))
+  end
 
   def test_routes_changed_correctly_after_clear
     ActionController::Base.optimise_named_routes = true
-- 
1.6.1

