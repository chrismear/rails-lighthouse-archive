<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-05-11T17:16:24+01:00</created-at>
  <creator-id type="integer">16475</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2634</number>
  <permalink>invoking-a-named_scope-with-conditions-id-in-association_proxy</permalink>
  <priority type="integer">1764</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy]</title>
  <updated-at type="datetime">2010-10-11T10:57:07+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">5</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Ben Woosley</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2634</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy] hits infinite recursion.

@@@ ruby
class Person &lt; ActiveRecord::Base

  has_many :household_people
  has_many :households, :through =&gt; :household_people
  
  named_scope :in, lambda {|people|
    {
      :conditions =&gt; [&quot;id in (?)&quot;, people]
    }
  }

  named_scope :foo, :conditions =&gt; &quot;1 = 1&quot;
end

class HouseholdPerson &lt; ActiveRecord::Base
  belongs_to :household
  belongs_to :person
end

class Household &lt; ActiveRecord::Base
  has_many :household_people
  has_many :people, :through =&gt; :household_people
end
@@@

@@@
&gt;&gt; Person.create! :name =&gt; &quot;Joe&quot;
&gt;&gt; Person.create! :name =&gt; &quot;Pete&quot;
&gt;&gt; Person.create! :name =&gt; &quot;Andy&quot;

&gt;&gt; Household.create! :name =&gt; &quot;Brady&quot;
&gt;&gt; Household.create! :name =&gt; &quot;Cosby&quot;

&gt;&gt; Person.first.households &lt;&lt; Household.first
&gt;&gt; Person.last.households &lt;&lt; Household.first

&gt;&gt; Person.in(Person.foo.map(&amp;:id)) # =&gt; works
&gt;&gt; Person.in(Person.all) # =&gt; works

&gt;&gt; Person.in(Person.foo) # =&gt; hangs forever

&gt;&gt; Person.in(Household.first.people) # =&gt; infinite recursion

SystemStackError: stack level too deep
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:128:in `construct_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:75:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_proxy.rb:212:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:366:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2339:in `sanitize_sql_array'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2235:in `sanitize_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1499:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `each'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1809:in `add_conditions!'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1692:in `construct_finder_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1553:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:615:in `find'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:73:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
... 4251 levels...
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2148:in `with_scope'
	from (__DELEGATION__):2:in `__send__'
	from (__DELEGATION__):2:in `with_scope'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:179:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:193:in `load_found'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:171:in `proxy_found'
	from (__DELEGATION__):2:in `inspect'
	from /Library/Ruby/Gems/1.8/gems/wirble-0.1.2/./wirble.rb:417:in `output_value'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:259:in `signal_status'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:70:in `start'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `catch'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `start'
@@@

App attached.</original-body>
  <latest-body>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy] hits infinite recursion.

@@@ ruby
class Person &lt; ActiveRecord::Base

  has_many :household_people
  has_many :households, :through =&gt; :household_people
  
  named_scope :in, lambda {|people|
    {
      :conditions =&gt; [&quot;id in (?)&quot;, people]
    }
  }

  named_scope :foo, :conditions =&gt; &quot;1 = 1&quot;
end

class HouseholdPerson &lt; ActiveRecord::Base
  belongs_to :household
  belongs_to :person
end

class Household &lt; ActiveRecord::Base
  has_many :household_people
  has_many :people, :through =&gt; :household_people
end
@@@

@@@
&gt;&gt; Person.create! :name =&gt; &quot;Joe&quot;
&gt;&gt; Person.create! :name =&gt; &quot;Pete&quot;
&gt;&gt; Person.create! :name =&gt; &quot;Andy&quot;

&gt;&gt; Household.create! :name =&gt; &quot;Brady&quot;
&gt;&gt; Household.create! :name =&gt; &quot;Cosby&quot;

&gt;&gt; Person.first.households &lt;&lt; Household.first
&gt;&gt; Person.last.households &lt;&lt; Household.first

&gt;&gt; Person.in(Person.foo.map(&amp;:id)) # =&gt; works
&gt;&gt; Person.in(Person.all) # =&gt; works

&gt;&gt; Person.in(Person.foo) # =&gt; hangs forever

&gt;&gt; Person.in(Household.first.people) # =&gt; infinite recursion

SystemStackError: stack level too deep
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:128:in `construct_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:75:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_proxy.rb:212:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:366:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2339:in `sanitize_sql_array'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2235:in `sanitize_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1499:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `each'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1809:in `add_conditions!'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1692:in `construct_finder_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1553:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:615:in `find'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:73:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
... 4251 levels...
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2148:in `with_scope'
	from (__DELEGATION__):2:in `__send__'
	from (__DELEGATION__):2:in `with_scope'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:179:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:193:in `load_found'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:171:in `proxy_found'
	from (__DELEGATION__):2:in `inspect'
	from /Library/Ruby/Gems/1.8/gems/wirble-0.1.2/./wirble.rb:417:in `output_value'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:259:in `signal_status'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:70:in `start'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `catch'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `start'
@@@

App attached.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Invoking a named_scope with :conditions =&amp;gt; [&quot;id in (?)&quot;,
association_proxy] hits infinite recursion.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person &amp;lt; ActiveRecord::Base

  has_many :household_people
  has_many :households, :through =&amp;gt; :household_people
  
  named_scope :in, lambda {|people|
    {
      :conditions =&amp;gt; [&amp;quot;id in (?)&amp;quot;, people]
    }
  }

  named_scope :foo, :conditions =&amp;gt; &amp;quot;1 = 1&amp;quot;
end

class HouseholdPerson &amp;lt; ActiveRecord::Base
  belongs_to :household
  belongs_to :person
end

class Household &amp;lt; ActiveRecord::Base
  has_many :household_people
  has_many :people, :through =&amp;gt; :household_people
end
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt;&amp;gt; Person.create! :name =&amp;gt; &amp;quot;Joe&amp;quot;
&amp;gt;&amp;gt; Person.create! :name =&amp;gt; &amp;quot;Pete&amp;quot;
&amp;gt;&amp;gt; Person.create! :name =&amp;gt; &amp;quot;Andy&amp;quot;

&amp;gt;&amp;gt; Household.create! :name =&amp;gt; &amp;quot;Brady&amp;quot;
&amp;gt;&amp;gt; Household.create! :name =&amp;gt; &amp;quot;Cosby&amp;quot;

&amp;gt;&amp;gt; Person.first.households &amp;lt;&amp;lt; Household.first
&amp;gt;&amp;gt; Person.last.households &amp;lt;&amp;lt; Household.first

&amp;gt;&amp;gt; Person.in(Person.foo.map(&amp;amp;:id)) # =&amp;gt; works
&amp;gt;&amp;gt; Person.in(Person.all) # =&amp;gt; works

&amp;gt;&amp;gt; Person.in(Person.foo) # =&amp;gt; hangs forever

&amp;gt;&amp;gt; Person.in(Household.first.people) # =&amp;gt; infinite recursion

SystemStackError: stack level too deep
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:128:in `construct_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:75:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_proxy.rb:212:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:366:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2339:in `sanitize_sql_array'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2235:in `sanitize_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1499:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `each'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1809:in `add_conditions!'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1692:in `construct_finder_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1553:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:615:in `find'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:73:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
... 4251 levels...
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2148:in `with_scope'
	from (__DELEGATION__):2:in `__send__'
	from (__DELEGATION__):2:in `with_scope'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:179:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:193:in `load_found'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:171:in `proxy_found'
	from (__DELEGATION__):2:in `inspect'
	from /Library/Ruby/Gems/1.8/gems/wirble-0.1.2/./wirble.rb:417:in `output_value'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:259:in `signal_status'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:70:in `start'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `catch'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `start'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;App attached.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy] hits infinite recursion.

@@@ ruby
class Person &lt; ActiveRecord::Base

  has_many :household_people
  has_many :households, :through =&gt; :household_people
  
  named_scope :in, lambda {|people|
    {
      :conditions =&gt; [&quot;id in (?)&quot;, people]
    }
  }

  named_scope :foo, :conditions =&gt; &quot;1 = 1&quot;
end

class HouseholdPerson &lt; ActiveRecord::Base
  belongs_to :household
  belongs_to :person
end

class Household &lt; ActiveRecord::Base
  has_many :household_people
  has_many :people, :through =&gt; :household_people
end
@@@

@@@
&gt;&gt; Person.create! :name =&gt; &quot;Joe&quot;
&gt;&gt; Person.create! :name =&gt; &quot;Pete&quot;
&gt;&gt; Person.create! :name =&gt; &quot;Andy&quot;

&gt;&gt; Household.create! :name =&gt; &quot;Brady&quot;
&gt;&gt; Household.create! :name =&gt; &quot;Cosby&quot;

&gt;&gt; Person.first.households &lt;&lt; Household.first
&gt;&gt; Person.last.households &lt;&lt; Household.first

&gt;&gt; Person.in(Person.foo.map(&amp;:id)) # =&gt; works
&gt;&gt; Person.in(Person.all) # =&gt; works

&gt;&gt; Person.in(Person.foo) # =&gt; hangs forever

&gt;&gt; Person.in(Household.first.people) # =&gt; infinite recursion

SystemStackError: stack level too deep
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:128:in `construct_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:75:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_proxy.rb:212:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:366:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2339:in `sanitize_sql_array'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2235:in `sanitize_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1499:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `each'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1809:in `add_conditions!'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1692:in `construct_finder_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1553:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:615:in `find'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:73:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
... 4251 levels...
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2148:in `with_scope'
	from (__DELEGATION__):2:in `__send__'
	from (__DELEGATION__):2:in `with_scope'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:179:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:193:in `load_found'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:171:in `proxy_found'
	from (__DELEGATION__):2:in `inspect'
	from /Library/Ruby/Gems/1.8/gems/wirble-0.1.2/./wirble.rb:417:in `output_value'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:259:in `signal_status'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:70:in `start'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `catch'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `start'
@@@

App attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Invoking a named_scope with :conditions =&amp;gt; [&quot;id in (?)&quot;,
association_proxy] hits infinite recursion.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person &amp;lt; ActiveRecord::Base

  has_many :household_people
  has_many :households, :through =&amp;gt; :household_people
  
  named_scope :in, lambda {|people|
    {
      :conditions =&amp;gt; [&amp;quot;id in (?)&amp;quot;, people]
    }
  }

  named_scope :foo, :conditions =&amp;gt; &amp;quot;1 = 1&amp;quot;
end

class HouseholdPerson &amp;lt; ActiveRecord::Base
  belongs_to :household
  belongs_to :person
end

class Household &amp;lt; ActiveRecord::Base
  has_many :household_people
  has_many :people, :through =&amp;gt; :household_people
end
&lt;/code&gt;&lt;/pre&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt;&amp;gt; Person.create! :name =&amp;gt; &amp;quot;Joe&amp;quot;
&amp;gt;&amp;gt; Person.create! :name =&amp;gt; &amp;quot;Pete&amp;quot;
&amp;gt;&amp;gt; Person.create! :name =&amp;gt; &amp;quot;Andy&amp;quot;

&amp;gt;&amp;gt; Household.create! :name =&amp;gt; &amp;quot;Brady&amp;quot;
&amp;gt;&amp;gt; Household.create! :name =&amp;gt; &amp;quot;Cosby&amp;quot;

&amp;gt;&amp;gt; Person.first.households &amp;lt;&amp;lt; Household.first
&amp;gt;&amp;gt; Person.last.households &amp;lt;&amp;lt; Household.first

&amp;gt;&amp;gt; Person.in(Person.foo.map(&amp;amp;:id)) # =&amp;gt; works
&amp;gt;&amp;gt; Person.in(Person.all) # =&amp;gt; works

&amp;gt;&amp;gt; Person.in(Person.foo) # =&amp;gt; hangs forever

&amp;gt;&amp;gt; Person.in(Household.first.people) # =&amp;gt; infinite recursion

SystemStackError: stack level too deep
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:128:in `construct_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:75:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_proxy.rb:212:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:366:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2339:in `sanitize_sql_array'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2235:in `sanitize_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1499:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `each'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1497:in `merge_conditions'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1809:in `add_conditions!'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1692:in `construct_finder_sql'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:1553:in `find_every'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:615:in `find'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/has_many_through_association.rb:73:in `find_target'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/associations/association_collection.rb:349:in `load_target'
... 4251 levels...
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/base.rb:2148:in `with_scope'
	from (__DELEGATION__):2:in `__send__'
	from (__DELEGATION__):2:in `with_scope'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:179:in `method_missing'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:193:in `load_found'
	from /Library/Ruby/Gems/1.8/gems/activerecord-2.3.2/lib/active_record/named_scope.rb:171:in `proxy_found'
	from (__DELEGATION__):2:in `inspect'
	from /Library/Ruby/Gems/1.8/gems/wirble-0.1.2/./wirble.rb:417:in `output_value'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:259:in `signal_status'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:70:in `start'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `catch'
	from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/irb.rb:69:in `start'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;App attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T17:16:24+01:00</created-at>
      <creator-id type="integer">16475</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2634</number>
      <permalink>invoking-a-named_scope-with-conditions-id-in-association_proxy</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable association_proxy named_scope</tag>
      <title>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy]</title>
      <updated-at type="datetime">2009-05-11T17:16:27+01:00</updated-at>
      <user-id type="integer">16475</user-id>
      <version type="integer">1</version>
      <user-name>Ben Woosley</user-name>
      <creator-name>Ben Woosley</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2634</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:49+01:00</created-at>
      <creator-id type="integer">16475</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2634</number>
      <permalink>invoking-a-named_scope-with-conditions-id-in-association_proxy</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable association_proxy named_scope</tag>
      <title>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy]</title>
      <updated-at type="datetime">2010-05-04T18:48:49+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ben Woosley</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2634</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T04:16:56+01:00</created-at>
      <creator-id type="integer">16475</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2634</number>
      <permalink>invoking-a-named_scope-with-conditions-id-in-association_proxy</permalink>
      <priority type="integer">1764</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable association_proxy named_scope</tag>
      <title>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy]</title>
      <updated-at type="datetime">2010-10-09T04:17:00+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Ben Woosley</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2634</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T10:57:04+01:00</created-at>
      <creator-id type="integer">16475</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable association_proxy named_scope
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2634</number>
      <permalink>invoking-a-named_scope-with-conditions-id-in-association_proxy</permalink>
      <priority type="integer">1764</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Invoking a named_scope with :conditions =&gt; [&quot;id in (?)&quot;, association_proxy]</title>
      <updated-at type="datetime">2010-10-11T10:57:05+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Ben Woosley</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2634</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b854d3f9af02065a6ea4e90ffed18720530337e3</code>
      <content-type>application/x-gzip</content-type>
      <created-at type="datetime">2009-05-11T17:16:24+01:00</created-at>
      <filename>infinite-recursion-scope-conditions-demo-app.tar.gz</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">121071</id>
      <size type="integer">80130</size>
      <uploader-id type="integer">16475</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/121071/infinite-recursion-scope-conditions-demo-app.tar.gz</url>
    </attachment>
  </attachments>
</ticket>
