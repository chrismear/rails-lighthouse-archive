<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">12714</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-08T23:12:09+00:00</created-at>
  <creator-id type="integer">19073</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4145</number>
  <permalink>arrayextract_options-treat-hashiemash-data-as-options</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>action_controller array hash</tag>
  <title>Array#extract_options! treat Hashie::Mash data as options</title>
  <updated-at type="datetime">2010-11-08T23:12:09+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>Rainux</creator-name>
  <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4145</url>
  <priority-name nil="true"></priority-name>
  <original-body>The `hashie` gem provide a class `Hashie::Mash` which is a subclass of `Hash`, allow you use dot syntax to access value of a hash, so you can do things like this:

    &gt;&gt; mash = Hashie::Mash.new({:user =&gt; {:name =&gt; 'Rainux'}, :version =&gt; '0.1'})
    =&gt; &lt;#Hashie::Mash user=&lt;#Hashie::Mash name=&quot;Rainux&quot;&gt; version=&quot;0.1&quot;&gt;
    &gt;&gt; mash.user.name
    =&gt; &quot;Rainux&quot;
 
When I use `Hashie::Mash` to store data for my Rails 3 app, and use `respond_with(@mash)` in a `show` action, it always fails since `@mash` was treated as an `Hash` options and be extracted by `Array#extract_options!`, here is the code in in `actionpack-3.0.0.beta/lib/action_controller/meta/mime_responds.rb`.

    def respond_with(*resources, &amp;block)
      raise &quot;In order to use respond_with, first you need to declare the formats your &quot; &lt;&lt;
            &quot;controller responds to in the class level&quot; if self.class.mimes_for_respond_to.empty?

      if response = retrieve_response_from_mimes(&amp;block)
        options = resources.extract_options!
        options.merge!(:default_response =&gt; response)
        (options.delete(:responder) || self.class.responder).call(self, resources, options)
      end
    end

Here is the code of `Array#extract_options!` in `activesupport-3.0.0.beta/lib/active_support/core_ext/array/extract_options.rb`:

    def extract_options!
      last.is_a?(::Hash) ? pop : {}
    end

So the question is how do we handle this kind of problems? I think we can't just change the condition to `last.instance_of?(Hash)` since another subclass of `Hash`, `HashWithIndifferentAccess` also widely used as options.

This problem also exists in Rails 2.</original-body>
  <latest-body>The `hashie` gem provide a class `Hashie::Mash` which is a subclass of `Hash`, allow you use dot syntax to access value of a hash, so you can do things like this:

    &gt;&gt; mash = Hashie::Mash.new({:user =&gt; {:name =&gt; 'Rainux'}, :version =&gt; '0.1'})
    =&gt; &lt;#Hashie::Mash user=&lt;#Hashie::Mash name=&quot;Rainux&quot;&gt; version=&quot;0.1&quot;&gt;
    &gt;&gt; mash.user.name
    =&gt; &quot;Rainux&quot;
 
When I use `Hashie::Mash` to store data for my Rails 3 app, and use `respond_with(@mash)` in a `show` action, it always fails since `@mash` was treated as an `Hash` options and be extracted by `Array#extract_options!`, here is the code in in `actionpack-3.0.0.beta/lib/action_controller/meta/mime_responds.rb`.

    def respond_with(*resources, &amp;block)
      raise &quot;In order to use respond_with, first you need to declare the formats your &quot; &lt;&lt;
            &quot;controller responds to in the class level&quot; if self.class.mimes_for_respond_to.empty?

      if response = retrieve_response_from_mimes(&amp;block)
        options = resources.extract_options!
        options.merge!(:default_response =&gt; response)
        (options.delete(:responder) || self.class.responder).call(self, resources, options)
      end
    end

Here is the code of `Array#extract_options!` in `activesupport-3.0.0.beta/lib/active_support/core_ext/array/extract_options.rb`:

    def extract_options!
      last.is_a?(::Hash) ? pop : {}
    end

So the question is how do we handle this kind of problems? I think we can't just change the condition to `last.instance_of?(Hash)` since another subclass of `Hash`, `HashWithIndifferentAccess` also widely used as options.

This problem also exists in Rails 2.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The &lt;code&gt;hashie&lt;/code&gt; gem provide a class
&lt;code&gt;Hashie::Mash&lt;/code&gt; which is a subclass of &lt;code&gt;Hash&lt;/code&gt;,
allow you use dot syntax to access value of a hash, so you can do
things like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; mash = Hashie::Mash.new({:user =&amp;gt; {:name =&amp;gt; 'Rainux'}, :version =&amp;gt; '0.1'})
=&amp;gt; &amp;lt;#Hashie::Mash user=&amp;lt;#Hashie::Mash name=&quot;Rainux&quot;&amp;gt; version=&quot;0.1&quot;&amp;gt;
&amp;gt;&amp;gt; mash.user.name
=&amp;gt; &quot;Rainux&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I use &lt;code&gt;Hashie::Mash&lt;/code&gt; to store data for my Rails
3 app, and use &lt;code&gt;respond_with(@mash)&lt;/code&gt; in a
&lt;code&gt;show&lt;/code&gt; action, it always fails since &lt;code&gt;@mash&lt;/code&gt;
was treated as an &lt;code&gt;Hash&lt;/code&gt; options and be extracted by
&lt;code&gt;Array#extract_options!&lt;/code&gt;, here is the code in in
&lt;code&gt;actionpack-3.0.0.beta/lib/action_controller/meta/mime_responds.rb&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def respond_with(*resources, &amp;amp;block)
  raise &quot;In order to use respond_with, first you need to declare the formats your &quot; &amp;lt;&amp;lt;
        &quot;controller responds to in the class level&quot; if self.class.mimes_for_respond_to.empty?

  if response = retrieve_response_from_mimes(&amp;amp;block)
    options = resources.extract_options!
    options.merge!(:default_response =&amp;gt; response)
    (options.delete(:responder) || self.class.responder).call(self, resources, options)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here is the code of &lt;code&gt;Array#extract_options!&lt;/code&gt; in
&lt;code&gt;activesupport-3.0.0.beta/lib/active_support/core_ext/array/extract_options.rb&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def extract_options!
  last.is_a?(::Hash) ? pop : {}
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So the question is how do we handle this kind of problems? I
think we can't just change the condition to
&lt;code&gt;last.instance_of?(Hash)&lt;/code&gt; since another subclass of
&lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;HashWithIndifferentAccess&lt;/code&gt; also
widely used as options.&lt;/p&gt;
&lt;p&gt;This problem also exists in Rails 2.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The `hashie` gem provide a class `Hashie::Mash` which is a subclass of `Hash`, allow you use dot syntax to access value of a hash, so you can do things like this:

    &gt;&gt; mash = Hashie::Mash.new({:user =&gt; {:name =&gt; 'Rainux'}, :version =&gt; '0.1'})
    =&gt; &lt;#Hashie::Mash user=&lt;#Hashie::Mash name=&quot;Rainux&quot;&gt; version=&quot;0.1&quot;&gt;
    &gt;&gt; mash.user.name
    =&gt; &quot;Rainux&quot;
 
When I use `Hashie::Mash` to store data for my Rails 3 app, and use `respond_with(@mash)` in a `show` action, it always fails since `@mash` was treated as an `Hash` options and be extracted by `Array#extract_options!`, here is the code in in `actionpack-3.0.0.beta/lib/action_controller/meta/mime_responds.rb`.

    def respond_with(*resources, &amp;block)
      raise &quot;In order to use respond_with, first you need to declare the formats your &quot; &lt;&lt;
            &quot;controller responds to in the class level&quot; if self.class.mimes_for_respond_to.empty?

      if response = retrieve_response_from_mimes(&amp;block)
        options = resources.extract_options!
        options.merge!(:default_response =&gt; response)
        (options.delete(:responder) || self.class.responder).call(self, resources, options)
      end
    end

Here is the code of `Array#extract_options!` in `activesupport-3.0.0.beta/lib/active_support/core_ext/array/extract_options.rb`:

    def extract_options!
      last.is_a?(::Hash) ? pop : {}
    end

So the question is how do we handle this kind of problems? I think we can't just change the condition to `last.instance_of?(Hash)` since another subclass of `Hash`, `HashWithIndifferentAccess` also widely used as options.

This problem also exists in Rails 2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The &lt;code&gt;hashie&lt;/code&gt; gem provide a class
&lt;code&gt;Hashie::Mash&lt;/code&gt; which is a subclass of &lt;code&gt;Hash&lt;/code&gt;,
allow you use dot syntax to access value of a hash, so you can do
things like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; mash = Hashie::Mash.new({:user =&amp;gt; {:name =&amp;gt; 'Rainux'}, :version =&amp;gt; '0.1'})
=&amp;gt; &amp;lt;#Hashie::Mash user=&amp;lt;#Hashie::Mash name=&quot;Rainux&quot;&amp;gt; version=&quot;0.1&quot;&amp;gt;
&amp;gt;&amp;gt; mash.user.name
=&amp;gt; &quot;Rainux&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I use &lt;code&gt;Hashie::Mash&lt;/code&gt; to store data for my Rails
3 app, and use &lt;code&gt;respond_with(@mash)&lt;/code&gt; in a
&lt;code&gt;show&lt;/code&gt; action, it always fails since &lt;code&gt;@mash&lt;/code&gt;
was treated as an &lt;code&gt;Hash&lt;/code&gt; options and be extracted by
&lt;code&gt;Array#extract_options!&lt;/code&gt;, here is the code in in
&lt;code&gt;actionpack-3.0.0.beta/lib/action_controller/meta/mime_responds.rb&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def respond_with(*resources, &amp;amp;block)
  raise &quot;In order to use respond_with, first you need to declare the formats your &quot; &amp;lt;&amp;lt;
        &quot;controller responds to in the class level&quot; if self.class.mimes_for_respond_to.empty?

  if response = retrieve_response_from_mimes(&amp;amp;block)
    options = resources.extract_options!
    options.merge!(:default_response =&amp;gt; response)
    (options.delete(:responder) || self.class.responder).call(self, resources, options)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here is the code of &lt;code&gt;Array#extract_options!&lt;/code&gt; in
&lt;code&gt;activesupport-3.0.0.beta/lib/active_support/core_ext/array/extract_options.rb&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def extract_options!
  last.is_a?(::Hash) ? pop : {}
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So the question is how do we handle this kind of problems? I
think we can't just change the condition to
&lt;code&gt;last.instance_of?(Hash)&lt;/code&gt; since another subclass of
&lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;HashWithIndifferentAccess&lt;/code&gt; also
widely used as options.&lt;/p&gt;
&lt;p&gt;This problem also exists in Rails 2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-10T13:40:21+00:00</created-at>
      <creator-id type="integer">19073</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4145</number>
      <permalink>arrayextract_options-treat-hashiemash-data-as-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_controller array hash</tag>
      <title>Array#extract_options! treat Hashie::Mash data as options</title>
      <updated-at type="datetime">2010-03-10T13:48:11+00:00</updated-at>
      <user-id type="integer">19073</user-id>
      <version type="integer">1</version>
      <user-name>Rainux</user-name>
      <creator-name>Rainux</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4145</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [a24a888afe5652e391ce2ea682596686af5ec58b]) Limit Array#extract_options! to directl instances of Hash and HWIA. Add extractable_options? to Hash so that subclasses of Hash can opt-into extractable behavior. This fixes an issue where respond_with wasn't working with subclasses of Hash that were provided by other libraries (such as CouchDB or Mashie) [#4145 state:resolved]
http://github.com/rails/rails/commit/a24a888afe5652e391ce2ea682596686af5ec58b</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/a24a888afe5652e391ce2ea682596686af5ec58b&quot;
title=
&quot;Changeset [a24a888afe5652e391ce2ea682596686af5ec58b]&quot;&gt;[a24a888afe5652e391ce2ea682596686af5ec58b]&lt;/a&gt;)
Limit Array#extract_options! to directl instances of Hash and HWIA.
Add extractable_options? to Hash so that subclasses of Hash can
opt-into extractable behavior. This fixes an issue where
respond_with wasn't working with subclasses of Hash that were
provided by other libraries (such as CouchDB or Mashie) [&lt;a href=
&quot;/projects/8994/tickets/4145&quot; title=&quot;Ticket #4145&quot;&gt;#4145&lt;/a&gt;
state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/a24a888afe5652e391ce2ea682596686af5ec58b&quot;&gt;
http://github.com/rails/rails/commit/a24a888afe5652e391ce2ea6825966...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-27T09:59:20+00:00</created-at>
      <creator-id type="integer">19073</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4145</number>
      <permalink>arrayextract_options-treat-hashiemash-data-as-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>action_controller array hash</tag>
      <title>Array#extract_options! treat Hashie::Mash data as options</title>
      <updated-at type="datetime">2010-03-27T09:59:21+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Rainux</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4145</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>in constant &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora bracelets&lt;/a&gt;&lt;/b&gt; ridiculous items. You commit &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;designer fashion jewelry&lt;/a&gt;&lt;/b&gt; act as cocksure youre &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;mens jewelry&lt;/a&gt;&lt;/b&gt; valid to find the &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry stores&lt;/a&gt;&lt;/b&gt; carry through relief whereas &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry store&lt;/a&gt;&lt;/b&gt; that discriminative someone. Tiffany &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com/collection/juicy-couture.html&quot;&gt;Juicy Couture jewelry&lt;/a&gt;&lt;/b&gt; jewelry is again resizable &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry stores&lt;/a&gt;&lt;/b&gt; which instrumentality actual leave &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry stores&lt;/a&gt;&lt;/b&gt; well-suited halfway anyone! http://www.articlesbase.com/sales-articles/why-so-many-people-l &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com/collection/pandora.html&quot;&gt;Pandora store&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora charm bracelet&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;in constant &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora bracelets&lt;/a&gt;&lt;/b&gt;
ridiculous items. You commit &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;designer fashion
jewelry&lt;/a&gt;&lt;/b&gt; act as cocksure youre &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;mens jewelry&lt;/a&gt;&lt;/b&gt; valid to
find the &lt;b&gt;&lt;a href=&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry
stores&lt;/a&gt;&lt;/b&gt; carry through relief whereas &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry store&lt;/a&gt;&lt;/b&gt; that
discriminative someone. Tiffany &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com/collection/juicy-couture.html&quot;&gt;Juicy
Couture jewelry&lt;/a&gt;&lt;/b&gt; jewelry is again resizable &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry stores&lt;/a&gt;&lt;/b&gt; which
instrumentality actual leave &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;jewelry stores&lt;/a&gt;&lt;/b&gt;
well-suited halfway anyone! &lt;a href=
&quot;http://www.articlesbase.com/sales-articles/why-so-many-people-l&quot;&gt;http://www.articlesbase.com/sales-articles/why-so-many-people-l&lt;/a&gt;
&lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com/collection/pandora.html&quot;&gt;Pandora
store&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.fashionjewelrysale.com&quot;&gt;pandora charm
bracelet&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T07:46:51+01:00</created-at>
      <creator-id type="integer">19073</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4145</number>
      <permalink>arrayextract_options-treat-hashiemash-data-as-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>action_controller array hash</tag>
      <title>Array#extract_options! treat Hashie::Mash data as options</title>
      <updated-at type="datetime">2010-07-21T01:44:45+01:00</updated-at>
      <user-id type="integer">107783</user-id>
      <version type="integer">3</version>
      <user-name>LYN</user-name>
      <creator-name>Rainux</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4145</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:21:08+00:00</created-at>
      <creator-id type="integer">19073</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4145</number>
      <permalink>arrayextract_options-treat-hashiemash-data-as-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>action_controller array hash</tag>
      <title>Array#extract_options! treat Hashie::Mash data as options</title>
      <updated-at type="datetime">2010-11-08T23:12:09+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">4</version>
      <user-name>jim123456</user-name>
      <creator-name>Rainux</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4145</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
