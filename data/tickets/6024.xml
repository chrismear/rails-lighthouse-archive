<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-21T01:48:51+00:00</created-at>
  <creator-id type="integer">126078</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6024</number>
  <permalink>rails-does-not-save-concatataned-string-attributes</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Rails does not save concatataned string attributes</title>
  <updated-at type="datetime">2010-11-21T13:01:23+00:00</updated-at>
  <user-id type="integer">65556</user-id>
  <version type="integer">4</version>
  <user-name>Rizwan Reza</user-name>
  <creator-name>suan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6024</url>
  <priority-name>Low</priority-name>
  <original-body>@@@
&gt;&gt; r = Role.first
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
&gt;&gt; str = (r.description &lt;&lt; &quot;oink&quot;)
=&gt; &quot;blaoink&quot;
&gt;&gt; r.description = str
=&gt; &quot;blaoink&quot;
&gt;&gt; r.save
=&gt; true
&gt;&gt; r.reload
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
@@@

Notice how the &quot;description&quot; field doesn't change.
HOWEVER, this works:

@@@
&gt;&gt; r = Role.first
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
&gt;&gt; r.description = &quot;#{r.description}oink&quot;
=&gt; &quot;blaoink&quot;
&gt;&gt; r.save
=&gt; true
&gt;&gt; r.reload
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;blaoink&quot;&gt;
@@@

this is just a simple activerecord object and &quot;description&quot; is just a simple text field. Rails 2.3.8. VERY weird...</original-body>
  <latest-body>@@@
&gt;&gt; r = Role.first
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
&gt;&gt; str = (r.description &lt;&lt; &quot;oink&quot;)
=&gt; &quot;blaoink&quot;
&gt;&gt; r.description = str
=&gt; &quot;blaoink&quot;
&gt;&gt; r.save
=&gt; true
&gt;&gt; r.reload
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
@@@

Notice how the &quot;description&quot; field doesn't change.
HOWEVER, this works:

@@@
&gt;&gt; r = Role.first
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
&gt;&gt; r.description = &quot;#{r.description}oink&quot;
=&gt; &quot;blaoink&quot;
&gt;&gt; r.save
=&gt; true
&gt;&gt; r.reload
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;blaoink&quot;&gt;
@@@

this is just a simple activerecord object and &quot;description&quot; is just a simple text field. Rails 2.3.8. VERY weird...</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; r = Role.first
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&amp;gt;
&amp;gt;&amp;gt; str = (r.description &amp;lt;&amp;lt; &quot;oink&quot;)
=&amp;gt; &quot;blaoink&quot;
&amp;gt;&amp;gt; r.description = str
=&amp;gt; &quot;blaoink&quot;
&amp;gt;&amp;gt; r.save
=&amp;gt; true
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice how the &quot;description&quot; field doesn't change.&lt;br&gt;
HOWEVER, this works:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; r = Role.first
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&amp;gt;
&amp;gt;&amp;gt; r.description = &quot;#{r.description}oink&quot;
=&amp;gt; &quot;blaoink&quot;
&amp;gt;&amp;gt; r.save
=&amp;gt; true
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;blaoink&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this is just a simple activerecord object and &quot;description&quot; is
just a simple text field. Rails 2.3.8. VERY weird...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
&gt;&gt; r = Role.first
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
&gt;&gt; str = (r.description &lt;&lt; &quot;oink&quot;)
=&gt; &quot;blaoink&quot;
&gt;&gt; r.description = str
=&gt; &quot;blaoink&quot;
&gt;&gt; r.save
=&gt; true
&gt;&gt; r.reload
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
@@@

Notice how the &quot;description&quot; field doesn't change.
HOWEVER, this works:

@@@
&gt;&gt; r = Role.first
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&gt;
&gt;&gt; r.description = &quot;#{r.description}oink&quot;
=&gt; &quot;blaoink&quot;
&gt;&gt; r.save
=&gt; true
&gt;&gt; r.reload
=&gt; #&lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;blaoink&quot;&gt;
@@@

this is just a simple activerecord object and &quot;description&quot; is just a simple text field. Rails 2.3.8. VERY weird...</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; r = Role.first
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&amp;gt;
&amp;gt;&amp;gt; str = (r.description &amp;lt;&amp;lt; &quot;oink&quot;)
=&amp;gt; &quot;blaoink&quot;
&amp;gt;&amp;gt; r.description = str
=&amp;gt; &quot;blaoink&quot;
&amp;gt;&amp;gt; r.save
=&amp;gt; true
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice how the &quot;description&quot; field doesn't change.&lt;br&gt;
HOWEVER, this works:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; r = Role.first
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;bla&quot;&amp;gt;
&amp;gt;&amp;gt; r.description = &quot;#{r.description}oink&quot;
=&amp;gt; &quot;blaoink&quot;
&amp;gt;&amp;gt; r.save
=&amp;gt; true
&amp;gt;&amp;gt; r.reload
=&amp;gt; #&amp;lt;Role role_id: 1, name: &quot;bla&quot;, description: &quot;blaoink&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this is just a simple activerecord object and &quot;description&quot; is
just a simple text field. Rails 2.3.8. VERY weird...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-21T01:48:51+00:00</created-at>
      <creator-id type="integer">126078</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6024</number>
      <permalink>rails-does-not-save-concatataned-string-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails does not save concatataned string attributes</title>
      <updated-at type="datetime">2010-11-21T01:48:55+00:00</updated-at>
      <user-id type="integer">126078</user-id>
      <version type="integer">1</version>
      <user-name>suan</user-name>
      <creator-name>suan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6024</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveRecord uses partial updates. It means that only changed (dirty) attributes will be updated. To keep track of dirty attributes ActiveRecord checks on assignment if new value is equal to old one if not attribute will be marked as dirty.

In your example,
    str = (r.description &lt;&lt; &quot;oink&quot;)
you changed description attribute in place without assignment, so later on when you do make an assignment
    r.description = str
description already equals str, so it's not marked as changed hence this attribute is not updated on save.

If you really need to use in place operation then you should mention it beforehand 
    r.description_will_change!
    r.description &lt;&lt; 'oink'
    r.save # works as intended</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveRecord uses partial updates. It means that only changed
(dirty) attributes will be updated. To keep track of dirty
attributes ActiveRecord checks on assignment if new value is equal
to old one if not attribute will be marked as dirty.&lt;/p&gt;
&lt;p&gt;In your example,&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;str = (r.description &amp;lt;&amp;lt; &quot;oink&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;you changed description attribute in place without assignment,
so later on when you do make an assignment&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;r.description = str&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;description already equals str, so it's not marked as changed
hence this attribute is not updated on save.&lt;/p&gt;
&lt;p&gt;If you really need to use in place operation then you should
mention it beforehand&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;r.description_will_change!
r.description &amp;lt;&amp;lt; 'oink'
r.save # works as intended&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-21T04:10:00+00:00</created-at>
      <creator-id type="integer">126078</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6024</number>
      <permalink>rails-does-not-save-concatataned-string-attributes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>invalid</tag>
      <title>Rails does not save concatataned string attributes</title>
      <updated-at type="datetime">2010-11-21T04:10:04+00:00</updated-at>
      <user-id type="integer">12050</user-id>
      <version type="integer">2</version>
      <user-name>Ravil Bayramgalin</user-name>
      <creator-name>suan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6024</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-21T13:01:03+00:00</created-at>
      <creator-id type="integer">126078</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6024</number>
      <permalink>rails-does-not-save-concatataned-string-attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>invalid</tag>
      <title>Rails does not save concatataned string attributes</title>
      <updated-at type="datetime">2010-11-21T13:01:06+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">3</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>suan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6024</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-21T13:01:13+00:00</created-at>
      <creator-id type="integer">126078</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: invalid
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6024</number>
      <permalink>rails-does-not-save-concatataned-string-attributes</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Rails does not save concatataned string attributes</title>
      <updated-at type="datetime">2010-11-21T13:01:23+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>suan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6024</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
