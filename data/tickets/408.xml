<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-13T16:02:14+01:00</created-at>
  <creator-id type="integer">23301</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">408</number>
  <permalink>generating-a-scaffold-resource-named-mr-confuses-breaks-the-generator</permalink>
  <priority type="integer">16576</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Generating a scaffold resource named MR* confuses/breaks the generator</title>
  <updated-at type="datetime">2010-10-11T10:57:13+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">5</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Matthew Williams</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/408</url>
  <priority-name nil="true"></priority-name>
  <original-body>Generating a scaffold resource that begins with the characters &quot;MR&quot; wrongfully creates its associated files.

Example)

ruby script/generate scaffold MRA
      exists  app/models/
      exists  app/controllers/
      exists  app/helpers/
      *strong*create  app/views/mr_as*strong*
      exists  app/views/layouts/
      exists  test/functional/
      exists  test/unit/
      exists  public/stylesheets/
     *strong*create  app/views/mr_as/index.html.erb
      create  app/views/mr_as/show.html.erb
      create  app/views/mr_as/new.html.erb
      create  app/views/mr_as/edit.html.erb
      create  app/views/layouts/mr_as.html.erb*strong*
      create  public/stylesheets/scaffold.css
      *strong*create  app/controllers/mr_as_controller.rb
      create  test/functional/mr_as_controller_test.rb
      create  app/helpers/mr_as_helper.rb
       route  map.resources :mr_as*strong*
  dependency  model
      exists    app/models/
      exists    test/unit/
      exists    test/fixtures/
      create    app/models/mra.rb
      create    test/unit/mra_test.rb
      create    test/fixtures/mras.yml
      create    db/migrate
      create    db/migrate/20080613145050_create_mras.rb

As you can see above, the generator broke up the resources name with an underscore.  This also prevents any further models from being generated.  See below.

ruby script/generate scaffold product
c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:261:in `load_missing_constant': Expected C:/Projects/TestMRAMode
l/app/helpers/mr_as_helper.rb to define MrAsHelper (LoadError)
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:467:in `const_missing'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:479:in `const_missing'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/inflector.rb:283:in `constantize'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/core_ext/string/inflections.rb:143:in `constantize'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:133:in `helper'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `each'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `helper'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:116:in `helper'
         ... 27 levels...
        from c:/ruby/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/commands/generate.rb:1
        from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
        from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `require'
        from script/generate:3

My assumption is that it's interpreting the string and seeing &quot;MR&quot; and treating that in some way as a persons title (which is why it breaks up the views to mr_a).  The same thing happens when you generate a resource called &quot;MRSTest&quot;.

This may be a feature I'm unaware of or that the convention is to not use all capital letters for a resource but in my case, I'm working with objects that happen to be called &quot;MRAs&quot;.

I'd like to contribute so if I can come up with a patch over the weekend with some tests I will certainly attempt to do so.</original-body>
  <latest-body>Generating a scaffold resource that begins with the characters &quot;MR&quot; wrongfully creates its associated files.

Example)

ruby script/generate scaffold MRA
      exists  app/models/
      exists  app/controllers/
      exists  app/helpers/
      *strong*create  app/views/mr_as*strong*
      exists  app/views/layouts/
      exists  test/functional/
      exists  test/unit/
      exists  public/stylesheets/
     *strong*create  app/views/mr_as/index.html.erb
      create  app/views/mr_as/show.html.erb
      create  app/views/mr_as/new.html.erb
      create  app/views/mr_as/edit.html.erb
      create  app/views/layouts/mr_as.html.erb*strong*
      create  public/stylesheets/scaffold.css
      *strong*create  app/controllers/mr_as_controller.rb
      create  test/functional/mr_as_controller_test.rb
      create  app/helpers/mr_as_helper.rb
       route  map.resources :mr_as*strong*
  dependency  model
      exists    app/models/
      exists    test/unit/
      exists    test/fixtures/
      create    app/models/mra.rb
      create    test/unit/mra_test.rb
      create    test/fixtures/mras.yml
      create    db/migrate
      create    db/migrate/20080613145050_create_mras.rb

As you can see above, the generator broke up the resources name with an underscore.  This also prevents any further models from being generated.  See below.

ruby script/generate scaffold product
c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:261:in `load_missing_constant': Expected C:/Projects/TestMRAMode
l/app/helpers/mr_as_helper.rb to define MrAsHelper (LoadError)
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:467:in `const_missing'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:479:in `const_missing'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/inflector.rb:283:in `constantize'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/core_ext/string/inflections.rb:143:in `constantize'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:133:in `helper'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `each'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `helper'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:116:in `helper'
         ... 27 levels...
        from c:/ruby/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/commands/generate.rb:1
        from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
        from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `require'
        from script/generate:3

My assumption is that it's interpreting the string and seeing &quot;MR&quot; and treating that in some way as a persons title (which is why it breaks up the views to mr_a).  The same thing happens when you generate a resource called &quot;MRSTest&quot;.

This may be a feature I'm unaware of or that the convention is to not use all capital letters for a resource but in my case, I'm working with objects that happen to be called &quot;MRAs&quot;.

I'd like to contribute so if I can come up with a patch over the weekend with some tests I will certainly attempt to do so.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Generating a scaffold resource that begins with the characters &quot;MR&quot; wrongfully creates its associated files.
&lt;/p&gt;&lt;p&gt;
Example)
&lt;/p&gt;&lt;p&gt;
ruby script/generate scaffold MRA
&lt;/p&gt;&lt;p&gt;
exists  app/models/
&lt;/p&gt;&lt;p&gt;
exists  app/controllers/
&lt;/p&gt;&lt;p&gt;
exists  app/helpers/
&lt;/p&gt;&lt;p&gt;
*strong*create  app/views/mr_as*strong*
&lt;/p&gt;&lt;p&gt;
exists  app/views/layouts/
&lt;/p&gt;&lt;p&gt;
exists  test/functional/
&lt;/p&gt;&lt;p&gt;
exists  test/unit/
&lt;/p&gt;&lt;p&gt;
exists  public/stylesheets/
&lt;/p&gt;&lt;p&gt;
*strong*create  app/views/mr_as/index.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/mr_as/show.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/mr_as/new.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/mr_as/edit.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/layouts/mr_as.html.erb*strong*
&lt;/p&gt;&lt;p&gt;
create  public/stylesheets/scaffold.css
&lt;/p&gt;&lt;p&gt;
*strong*create  app/controllers/mr_as_controller.rb
&lt;/p&gt;&lt;p&gt;
create  test/functional/mr_as_controller_test.rb
&lt;/p&gt;&lt;p&gt;
create  app/helpers/mr_as_helper.rb
&lt;/p&gt;&lt;p&gt;
route  map.resources :mr_as*strong*
&lt;/p&gt;&lt;p&gt;
dependency  model
&lt;/p&gt;&lt;p&gt;
exists    app/models/
&lt;/p&gt;&lt;p&gt;
exists    test/unit/
&lt;/p&gt;&lt;p&gt;
exists    test/fixtures/
&lt;/p&gt;&lt;p&gt;
create    app/models/mra.rb
&lt;/p&gt;&lt;p&gt;
create    test/unit/mra_test.rb
&lt;/p&gt;&lt;p&gt;
create    test/fixtures/mras.yml
&lt;/p&gt;&lt;p&gt;
create    db/migrate
&lt;/p&gt;&lt;p&gt;
create    db/migrate/20080613145050_create_mras.rb
&lt;/p&gt;&lt;p&gt;
As you can see above, the generator broke up the resources name with an underscore.  This also prevents any further models from being generated.  See below.
&lt;/p&gt;&lt;p&gt;
ruby script/generate scaffold product
&lt;/p&gt;&lt;p&gt;
c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:261:in `load_missing_constant': Expected C:/Projects/TestMRAMode
&lt;/p&gt;&lt;p&gt;
l/app/helpers/mr_as_helper.rb to define MrAsHelper (LoadError)
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:467:in `const_missing'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:479:in `const_missing'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/inflector.rb:283:in `constantize'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/core_ext/string/inflections.rb:143:in `constantize'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:133:in `helper'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `each'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `helper'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:116:in `helper'
&lt;/p&gt;&lt;p&gt;
... 27 levels...
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/commands/generate.rb:1
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `require'
&lt;/p&gt;&lt;p&gt;
from script/generate:3
&lt;/p&gt;&lt;p&gt;
My assumption is that it's interpreting the string and seeing &quot;MR&quot; and treating that in some way as a persons title (which is why it breaks up the views to mr_a).  The same thing happens when you generate a resource called &quot;MRSTest&quot;.
&lt;/p&gt;&lt;p&gt;
This may be a feature I'm unaware of or that the convention is to not use all capital letters for a resource but in my case, I'm working with objects that happen to be called &quot;MRAs&quot;.
&lt;/p&gt;&lt;p&gt;
I'd like to contribute so if I can come up with a patch over the weekend with some tests I will certainly attempt to do so.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Generating a scaffold resource that begins with the characters &quot;MR&quot; wrongfully creates its associated files.

Example)

ruby script/generate scaffold MRA
      exists  app/models/
      exists  app/controllers/
      exists  app/helpers/
      *strong*create  app/views/mr_as*strong*
      exists  app/views/layouts/
      exists  test/functional/
      exists  test/unit/
      exists  public/stylesheets/
     *strong*create  app/views/mr_as/index.html.erb
      create  app/views/mr_as/show.html.erb
      create  app/views/mr_as/new.html.erb
      create  app/views/mr_as/edit.html.erb
      create  app/views/layouts/mr_as.html.erb*strong*
      create  public/stylesheets/scaffold.css
      *strong*create  app/controllers/mr_as_controller.rb
      create  test/functional/mr_as_controller_test.rb
      create  app/helpers/mr_as_helper.rb
       route  map.resources :mr_as*strong*
  dependency  model
      exists    app/models/
      exists    test/unit/
      exists    test/fixtures/
      create    app/models/mra.rb
      create    test/unit/mra_test.rb
      create    test/fixtures/mras.yml
      create    db/migrate
      create    db/migrate/20080613145050_create_mras.rb

As you can see above, the generator broke up the resources name with an underscore.  This also prevents any further models from being generated.  See below.

ruby script/generate scaffold product
c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:261:in `load_missing_constant': Expected C:/Projects/TestMRAMode
l/app/helpers/mr_as_helper.rb to define MrAsHelper (LoadError)
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:467:in `const_missing'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:479:in `const_missing'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/inflector.rb:283:in `constantize'
        from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/core_ext/string/inflections.rb:143:in `constantize'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:133:in `helper'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `each'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `helper'
        from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:116:in `helper'
         ... 27 levels...
        from c:/ruby/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/commands/generate.rb:1
        from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
        from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `require'
        from script/generate:3

My assumption is that it's interpreting the string and seeing &quot;MR&quot; and treating that in some way as a persons title (which is why it breaks up the views to mr_a).  The same thing happens when you generate a resource called &quot;MRSTest&quot;.

This may be a feature I'm unaware of or that the convention is to not use all capital letters for a resource but in my case, I'm working with objects that happen to be called &quot;MRAs&quot;.

I'd like to contribute so if I can come up with a patch over the weekend with some tests I will certainly attempt to do so.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Generating a scaffold resource that begins with the characters &quot;MR&quot; wrongfully creates its associated files.
&lt;/p&gt;&lt;p&gt;
Example)
&lt;/p&gt;&lt;p&gt;
ruby script/generate scaffold MRA
&lt;/p&gt;&lt;p&gt;
exists  app/models/
&lt;/p&gt;&lt;p&gt;
exists  app/controllers/
&lt;/p&gt;&lt;p&gt;
exists  app/helpers/
&lt;/p&gt;&lt;p&gt;
*strong*create  app/views/mr_as*strong*
&lt;/p&gt;&lt;p&gt;
exists  app/views/layouts/
&lt;/p&gt;&lt;p&gt;
exists  test/functional/
&lt;/p&gt;&lt;p&gt;
exists  test/unit/
&lt;/p&gt;&lt;p&gt;
exists  public/stylesheets/
&lt;/p&gt;&lt;p&gt;
*strong*create  app/views/mr_as/index.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/mr_as/show.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/mr_as/new.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/mr_as/edit.html.erb
&lt;/p&gt;&lt;p&gt;
create  app/views/layouts/mr_as.html.erb*strong*
&lt;/p&gt;&lt;p&gt;
create  public/stylesheets/scaffold.css
&lt;/p&gt;&lt;p&gt;
*strong*create  app/controllers/mr_as_controller.rb
&lt;/p&gt;&lt;p&gt;
create  test/functional/mr_as_controller_test.rb
&lt;/p&gt;&lt;p&gt;
create  app/helpers/mr_as_helper.rb
&lt;/p&gt;&lt;p&gt;
route  map.resources :mr_as*strong*
&lt;/p&gt;&lt;p&gt;
dependency  model
&lt;/p&gt;&lt;p&gt;
exists    app/models/
&lt;/p&gt;&lt;p&gt;
exists    test/unit/
&lt;/p&gt;&lt;p&gt;
exists    test/fixtures/
&lt;/p&gt;&lt;p&gt;
create    app/models/mra.rb
&lt;/p&gt;&lt;p&gt;
create    test/unit/mra_test.rb
&lt;/p&gt;&lt;p&gt;
create    test/fixtures/mras.yml
&lt;/p&gt;&lt;p&gt;
create    db/migrate
&lt;/p&gt;&lt;p&gt;
create    db/migrate/20080613145050_create_mras.rb
&lt;/p&gt;&lt;p&gt;
As you can see above, the generator broke up the resources name with an underscore.  This also prevents any further models from being generated.  See below.
&lt;/p&gt;&lt;p&gt;
ruby script/generate scaffold product
&lt;/p&gt;&lt;p&gt;
c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:261:in `load_missing_constant': Expected C:/Projects/TestMRAMode
&lt;/p&gt;&lt;p&gt;
l/app/helpers/mr_as_helper.rb to define MrAsHelper (LoadError)
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:467:in `const_missing'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/dependencies.rb:479:in `const_missing'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/inflector.rb:283:in `constantize'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/activesupport-2.1.0/lib/active_support/core_ext/string/inflections.rb:143:in `constantize'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:133:in `helper'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `each'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:111:in `helper'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/actionpack-2.1.0/lib/action_controller/helpers.rb:116:in `helper'
&lt;/p&gt;&lt;p&gt;
... 27 levels...
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/gems/1.8/gems/rails-2.1.0/lib/commands/generate.rb:1
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `gem_original_require'
&lt;/p&gt;&lt;p&gt;
from c:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:27:in `require'
&lt;/p&gt;&lt;p&gt;
from script/generate:3
&lt;/p&gt;&lt;p&gt;
My assumption is that it's interpreting the string and seeing &quot;MR&quot; and treating that in some way as a persons title (which is why it breaks up the views to mr_a).  The same thing happens when you generate a resource called &quot;MRSTest&quot;.
&lt;/p&gt;&lt;p&gt;
This may be a feature I'm unaware of or that the convention is to not use all capital letters for a resource but in my case, I'm working with objects that happen to be called &quot;MRAs&quot;.
&lt;/p&gt;&lt;p&gt;
I'd like to contribute so if I can come up with a patch over the weekend with some tests I will certainly attempt to do so.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-13T16:02:15+01:00</created-at>
      <creator-id type="integer">23301</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">408</number>
      <permalink>generating-a-scaffold-resource-named-mr-confuses-breaks-the-generator</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Generating a scaffold resource named MR* confuses/breaks the generator</title>
      <updated-at type="datetime">2008-06-13T16:02:15+01:00</updated-at>
      <user-id type="integer">23301</user-id>
      <version type="integer">1</version>
      <user-name>Matthew Williams</user-name>
      <creator-name>Matthew Williams</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/408</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-23T14:05:30+01:00</created-at>
      <creator-id type="integer">23301</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">408</number>
      <permalink>generating-a-scaffold-resource-named-mr-confuses-breaks-the-generator</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.1 bug generator model resource scaffold</tag>
      <title>Generating a scaffold resource named MR* confuses/breaks the generator</title>
      <updated-at type="datetime">2008-07-23T14:05:30+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Matthew Williams</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/408</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Was this simply breaking convention which was the reason for &quot;wontfix&quot;?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Was this simply breaking convention which was the reason for &quot;wontfix&quot;?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-23T14:09:40+01:00</created-at>
      <creator-id type="integer">23301</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">408</number>
      <permalink>generating-a-scaffold-resource-named-mr-confuses-breaks-the-generator</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.1 bug generator model resource scaffold</tag>
      <title>Generating a scaffold resource named MR* confuses/breaks the generator</title>
      <updated-at type="datetime">2008-07-23T14:09:40+01:00</updated-at>
      <user-id type="integer">23301</user-id>
      <version type="integer">3</version>
      <user-name>Matthew Williams</user-name>
      <creator-name>Matthew Williams</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/408</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-11T10:57:10+01:00</created-at>
      <creator-id type="integer">23301</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 bug generator model resource scaffold
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">408</number>
      <permalink>generating-a-scaffold-resource-named-mr-confuses-breaks-the-generator</permalink>
      <priority type="integer">16576</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Generating a scaffold resource named MR* confuses/breaks the generator</title>
      <updated-at type="datetime">2010-10-11T10:57:11+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Matthew Williams</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/408</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
