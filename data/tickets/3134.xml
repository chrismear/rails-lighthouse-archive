<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-17T06:48:21+00:00</created-at>
  <creator-id type="integer">23550</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3134</number>
  <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
  <priority type="integer">136531</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>memcachestore session session-fixation session_id</tag>
  <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
  <updated-at type="datetime">2011-02-17T06:48:21+00:00</updated-at>
  <user-id type="integer">23550</user-id>
  <version type="integer">7</version>
  <user-name>Aaron Gibralter</user-name>
  <creator-name>Aaron Gibralter</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
  <priority-name nil="true"></priority-name>
  <original-body>Maybe it's just late at night, and I'm going crazy... but it seems to me that MemCacheStore allows for the client to decide what session_id it wants to use. All the a user has to do is edit his session_id cookie to be whatever he wants it to be and Rails will use it. Is this even a problem to worry about?

Would it make sense to HMAC the session_id with some sort of server-side secret? session_options[:secret] isn't even being used for MemCacheStore. 

I saw ticket #571... didn't seem to answer the question though.</original-body>
  <latest-body>Maybe it's just late at night, and I'm going crazy... but it seems to me that MemCacheStore allows for the client to decide what session_id it wants to use. All the a user has to do is edit his session_id cookie to be whatever he wants it to be and Rails will use it. Is this even a problem to worry about?

Would it make sense to HMAC the session_id with some sort of server-side secret? session_options[:secret] isn't even being used for MemCacheStore. 

I saw ticket #571... didn't seem to answer the question though.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Maybe it's just late at night, and I'm going crazy... but it
seems to me that MemCacheStore allows for the client to decide what
session_id it wants to use. All the a user has to do is edit his
session_id cookie to be whatever he wants it to be and Rails will
use it. Is this even a problem to worry about?&lt;/p&gt;
&lt;p&gt;Would it make sense to HMAC the session_id with some sort of
server-side secret? session_options[:secret] isn't even being used
for MemCacheStore.&lt;/p&gt;
&lt;p&gt;I saw ticket &lt;a href=&quot;/projects/8994/tickets/571&quot; title=
&quot;Ticket #571&quot;&gt;#571&lt;/a&gt;... didn't seem to answer the question
though.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Maybe it's just late at night, and I'm going crazy... but it seems to me that MemCacheStore allows for the client to decide what session_id it wants to use. All the a user has to do is edit his session_id cookie to be whatever he wants it to be and Rails will use it. Is this even a problem to worry about?

Would it make sense to HMAC the session_id with some sort of server-side secret? session_options[:secret] isn't even being used for MemCacheStore. 

I saw ticket #571... didn't seem to answer the question though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Maybe it's just late at night, and I'm going crazy... but it
seems to me that MemCacheStore allows for the client to decide what
session_id it wants to use. All the a user has to do is edit his
session_id cookie to be whatever he wants it to be and Rails will
use it. Is this even a problem to worry about?&lt;/p&gt;
&lt;p&gt;Would it make sense to HMAC the session_id with some sort of
server-side secret? session_options[:secret] isn't even being used
for MemCacheStore.&lt;/p&gt;
&lt;p&gt;I saw ticket &lt;a href=&quot;/projects/8994/tickets/571&quot; title=
&quot;Ticket #571&quot;&gt;#571&lt;/a&gt;... didn't seem to answer the question
though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-02T08:28:42+01:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2009-09-02T08:28:46+01:00</updated-at>
      <user-id type="integer">23550</user-id>
      <version type="integer">1</version>
      <user-name>Aaron Gibralter</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think it's definitely something to worry about.  We had legitimate issues as a result of this behavior.  But, since the core team stance (per #571) seems to be that it's not a problem, we just patched it locally.  I guess if you think it's unlikely that a user could ever guess another's session ID or that two users modifying their session IDs would ever pick the same one, then it's probably not an issue.  But, we saw otherwise.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think it's definitely something to worry about. We had
legitimate issues as a result of this behavior. But, since the core
team stance (per &lt;a href=&quot;/projects/8994/tickets/571&quot; title=
&quot;Ticket #571&quot;&gt;#571&lt;/a&gt;) seems to be that it's not a problem, we
just patched it locally. I guess if you think it's unlikely that a
user could ever guess another's session ID or that two users
modifying their session IDs would ever pick the same one, then it's
probably not an issue. But, we saw otherwise.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T13:53:37+01:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">136531</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2010-07-13T13:53:42+01:00</updated-at>
      <user-id type="integer">22233</user-id>
      <version type="integer">2</version>
      <user-name>Kevin Menard</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Would you mind posting your patch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Would you mind posting your patch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T17:23:55+01:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">136531</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2010-07-13T17:23:56+01:00</updated-at>
      <user-id type="integer">23550</user-id>
      <version type="integer">3</version>
      <user-name>Aaron Gibralter</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:36:16+00:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">136531</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2011-02-02T17:13:46+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:36:17+00:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">136531</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2011-02-02T17:14:00+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Does anyone else think it makes sense for Rails to HMAC the session_ids it creates with a timestamp and a secret? This way people would not be able to brute force their way into hijacking sessions...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Does anyone else think it makes sense for Rails to HMAC the
session_ids it creates with a timestamp and a secret? This way
people would not be able to brute force their way into hijacking
sessions...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T14:53:19+00:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">136531</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2011-02-14T14:53:29+00:00</updated-at>
      <user-id type="integer">23550</user-id>
      <version type="integer">6</version>
      <user-name>Aaron Gibralter</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>oops forgot: [state:open]</body>
      <body-html>&lt;div&gt;&lt;p&gt;oops forgot: [state:open]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T14:54:38+00:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">136531</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2011-02-14T14:54:45+00:00</updated-at>
      <user-id type="integer">23550</user-id>
      <version type="integer">7</version>
      <user-name>Aaron Gibralter</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T06:41:41+00:00</created-at>
      <creator-id type="integer">23550</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3134</number>
      <permalink>memcachestore-allows-for-arbitrary-client-generated-session_ids</permalink>
      <priority type="integer">136531</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>memcachestore session session-fixation session_id</tag>
      <title>MemCacheStore allows for arbitrary client generated session_ids?</title>
      <updated-at type="datetime">2011-02-17T06:48:21+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">8</version>
      <user-name>gfh</user-name>
      <creator-name>Aaron Gibralter</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3134</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
