<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">17477</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-05T17:55:38+00:00</created-at>
  <creator-id type="integer">31731</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1519</number>
  <permalink>named_scope-not-preserving-self</permalink>
  <priority type="integer">880</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.2 named_scope self</tag>
  <title>named_scope not preserving self</title>
  <updated-at type="datetime">2009-03-12T15:53:10+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">8</version>
  <user-name>Pratik</user-name>
  <creator-name>EppO</creator-name>
  <assigned-user-name>Frederick Cheung</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have 2 named_scope in my topic model: 
@@@
class Topic &lt; ActiveRecord::Base
  belongs_to :forum, :counter_cache =&gt; true
  belongs_to :user

  named_scope :tracked, lambda { |u| { :include =&gt; [ :trackings, :last_post ], :conditions =&gt; [ &quot;topics_tracking.user_id = ?&quot;, u ] }}
  named_scope :untracked, lambda { |t| { :conditions =&gt; [ &quot;id NOT IN (?)&quot;, t ] }}

  def self.unread(user)
    marked = self.tracked(user)
    unread = self.untracked(marked)
    marked.each do |t|
      unread &lt;&lt; t if t.trackings.first.mark.to_s(:db) &lt; t.last_post.updated_at.to_s(:db)
    end
    unread
  end
@@@

If I call my forum model which has_many topics:
@@@
&gt; forum = Forum.find(1)
&gt; forum.topics.unread(user)
LOG:  dur&#233;e : 4.776 ms, instruction : SELECT &quot;topics&quot;.&quot;id&quot; AS t0_r0, &quot;topics&quot;.&quot;title&quot; AS t0_r1, &quot;topics&quot;.&quot;forum_id&quot; AS t0_r2, &quot;topics&quot;.&quot;posts_count&quot; AS t0_r3, &quot;topics&quot;.&quot;user_id&quot; AS t0_r4, &quot;topics&quot;.&quot;created_at&quot; AS t0_r5, &quot;topics&quot;.&quot;updated_at&quot; AS t0_r6, &quot;topics&quot;.&quot;sticky&quot; AS t0_r7, &quot;topics&quot;.&quot;locked&quot; AS t0_r8, &quot;topics&quot;.&quot;hits&quot; AS t0_r9, &quot;topics&quot;.&quot;last_post_id&quot; AS t0_r10, &quot;topics&quot;.&quot;fulltext&quot; AS t0_r11, &quot;topics_tracking&quot;.&quot;id&quot; AS t1_r0, &quot;topics_tracking&quot;.&quot;user_id&quot; AS t1_r1, &quot;topics_tracking&quot;.&quot;topic_id&quot; AS t1_r2, &quot;topics_tracking&quot;.&quot;mark&quot; AS t1_r3, &quot;topics_tracking&quot;.&quot;created_at&quot; AS t1_r4, &quot;topics_tracking&quot;.&quot;updated_at&quot; AS t1_r5, &quot;posts&quot;.&quot;id&quot; AS t2_r0, &quot;posts&quot;.&quot;body&quot; AS t2_r1, &quot;posts&quot;.&quot;topic_id&quot; AS t2_r2, &quot;posts&quot;.&quot;user_id&quot; AS t2_r3, &quot;posts&quot;.&quot;created_at&quot; AS t2_r4, &quot;posts&quot;.&quot;updated_at&quot; AS t2_r5, &quot;posts&quot;.&quot;position&quot; AS t2_r6, &quot;posts&quot;.&quot;fulltext&quot; AS t2_r7 FROM &quot;topics&quot;  LEFT OUTER JOIN &quot;topics_tracking&quot; ON topics_tracking.topic_id = topics.id  LEFT OUTER JOIN &quot;posts&quot; ON &quot;posts&quot;.id = &quot;topics&quot;.last_post_id WHERE ((&quot;topics&quot;.forum_id = 1) AND (topics_tracking.user_id = 2))
LOG:  dur&#233;e : 0.815 ms, instruction : SELECT * FROM &quot;topics&quot; WHERE (id NOT IN (5,10))
@@@

You can see that the first query fired by `marked = self.tracked(user)` uses `WHERE ((&quot;topics&quot;.forum_id = 1)` but not the second query !

the second named_scope lost the forum_id and requests all the topics although the two methods use self</original-body>
  <latest-body>I have 2 named_scope in my topic model: 
@@@
class Topic &lt; ActiveRecord::Base
  belongs_to :forum, :counter_cache =&gt; true
  belongs_to :user

  named_scope :tracked, lambda { |u| { :include =&gt; [ :trackings, :last_post ], :conditions =&gt; [ &quot;topics_tracking.user_id = ?&quot;, u ] }}
  named_scope :untracked, lambda { |t| { :conditions =&gt; [ &quot;id NOT IN (?)&quot;, t ] }}

  def self.unread(user)
    marked = self.tracked(user)
    unread = self.untracked(marked)
    marked.each do |t|
      unread &lt;&lt; t if t.trackings.first.mark.to_s(:db) &lt; t.last_post.updated_at.to_s(:db)
    end
    unread
  end
@@@

If I call my forum model which has_many topics:
@@@
&gt; forum = Forum.find(1)
&gt; forum.topics.unread(user)
LOG:  dur&#233;e : 4.776 ms, instruction : SELECT &quot;topics&quot;.&quot;id&quot; AS t0_r0, &quot;topics&quot;.&quot;title&quot; AS t0_r1, &quot;topics&quot;.&quot;forum_id&quot; AS t0_r2, &quot;topics&quot;.&quot;posts_count&quot; AS t0_r3, &quot;topics&quot;.&quot;user_id&quot; AS t0_r4, &quot;topics&quot;.&quot;created_at&quot; AS t0_r5, &quot;topics&quot;.&quot;updated_at&quot; AS t0_r6, &quot;topics&quot;.&quot;sticky&quot; AS t0_r7, &quot;topics&quot;.&quot;locked&quot; AS t0_r8, &quot;topics&quot;.&quot;hits&quot; AS t0_r9, &quot;topics&quot;.&quot;last_post_id&quot; AS t0_r10, &quot;topics&quot;.&quot;fulltext&quot; AS t0_r11, &quot;topics_tracking&quot;.&quot;id&quot; AS t1_r0, &quot;topics_tracking&quot;.&quot;user_id&quot; AS t1_r1, &quot;topics_tracking&quot;.&quot;topic_id&quot; AS t1_r2, &quot;topics_tracking&quot;.&quot;mark&quot; AS t1_r3, &quot;topics_tracking&quot;.&quot;created_at&quot; AS t1_r4, &quot;topics_tracking&quot;.&quot;updated_at&quot; AS t1_r5, &quot;posts&quot;.&quot;id&quot; AS t2_r0, &quot;posts&quot;.&quot;body&quot; AS t2_r1, &quot;posts&quot;.&quot;topic_id&quot; AS t2_r2, &quot;posts&quot;.&quot;user_id&quot; AS t2_r3, &quot;posts&quot;.&quot;created_at&quot; AS t2_r4, &quot;posts&quot;.&quot;updated_at&quot; AS t2_r5, &quot;posts&quot;.&quot;position&quot; AS t2_r6, &quot;posts&quot;.&quot;fulltext&quot; AS t2_r7 FROM &quot;topics&quot;  LEFT OUTER JOIN &quot;topics_tracking&quot; ON topics_tracking.topic_id = topics.id  LEFT OUTER JOIN &quot;posts&quot; ON &quot;posts&quot;.id = &quot;topics&quot;.last_post_id WHERE ((&quot;topics&quot;.forum_id = 1) AND (topics_tracking.user_id = 2))
LOG:  dur&#233;e : 0.815 ms, instruction : SELECT * FROM &quot;topics&quot; WHERE (id NOT IN (5,10))
@@@

You can see that the first query fired by `marked = self.tracked(user)` uses `WHERE ((&quot;topics&quot;.forum_id = 1)` but not the second query !

the second named_scope lost the forum_id and requests all the topics although the two methods use self</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have 2 named_scope in my topic model:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Topic &amp;lt; ActiveRecord::Base
  belongs_to :forum, :counter_cache =&amp;gt; true
  belongs_to :user

  named_scope :tracked, lambda { |u| { :include =&amp;gt; [ :trackings, :last_post ], :conditions =&amp;gt; [ &amp;quot;topics_tracking.user_id = ?&amp;quot;, u ] }}
  named_scope :untracked, lambda { |t| { :conditions =&amp;gt; [ &amp;quot;id NOT IN (?)&amp;quot;, t ] }}

  def self.unread(user)
    marked = self.tracked(user)
    unread = self.untracked(marked)
    marked.each do |t|
      unread &amp;lt;&amp;lt; t if t.trackings.first.mark.to_s(:db) &amp;lt; t.last_post.updated_at.to_s(:db)
    end
    unread
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If I call my forum model which has_many topics:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt; forum = Forum.find(1)
&amp;gt; forum.topics.unread(user)
LOG:  dur&#233;e : 4.776 ms, instruction : SELECT &amp;quot;topics&amp;quot;.&amp;quot;id&amp;quot; AS t0_r0, &amp;quot;topics&amp;quot;.&amp;quot;title&amp;quot; AS t0_r1, &amp;quot;topics&amp;quot;.&amp;quot;forum_id&amp;quot; AS t0_r2, &amp;quot;topics&amp;quot;.&amp;quot;posts_count&amp;quot; AS t0_r3, &amp;quot;topics&amp;quot;.&amp;quot;user_id&amp;quot; AS t0_r4, &amp;quot;topics&amp;quot;.&amp;quot;created_at&amp;quot; AS t0_r5, &amp;quot;topics&amp;quot;.&amp;quot;updated_at&amp;quot; AS t0_r6, &amp;quot;topics&amp;quot;.&amp;quot;sticky&amp;quot; AS t0_r7, &amp;quot;topics&amp;quot;.&amp;quot;locked&amp;quot; AS t0_r8, &amp;quot;topics&amp;quot;.&amp;quot;hits&amp;quot; AS t0_r9, &amp;quot;topics&amp;quot;.&amp;quot;last_post_id&amp;quot; AS t0_r10, &amp;quot;topics&amp;quot;.&amp;quot;fulltext&amp;quot; AS t0_r11, &amp;quot;topics_tracking&amp;quot;.&amp;quot;id&amp;quot; AS t1_r0, &amp;quot;topics_tracking&amp;quot;.&amp;quot;user_id&amp;quot; AS t1_r1, &amp;quot;topics_tracking&amp;quot;.&amp;quot;topic_id&amp;quot; AS t1_r2, &amp;quot;topics_tracking&amp;quot;.&amp;quot;mark&amp;quot; AS t1_r3, &amp;quot;topics_tracking&amp;quot;.&amp;quot;created_at&amp;quot; AS t1_r4, &amp;quot;topics_tracking&amp;quot;.&amp;quot;updated_at&amp;quot; AS t1_r5, &amp;quot;posts&amp;quot;.&amp;quot;id&amp;quot; AS t2_r0, &amp;quot;posts&amp;quot;.&amp;quot;body&amp;quot; AS t2_r1, &amp;quot;posts&amp;quot;.&amp;quot;topic_id&amp;quot; AS t2_r2, &amp;quot;posts&amp;quot;.&amp;quot;user_id&amp;quot; AS t2_r3, &amp;quot;posts&amp;quot;.&amp;quot;created_at&amp;quot; AS t2_r4, &amp;quot;posts&amp;quot;.&amp;quot;updated_at&amp;quot; AS t2_r5, &amp;quot;posts&amp;quot;.&amp;quot;position&amp;quot; AS t2_r6, &amp;quot;posts&amp;quot;.&amp;quot;fulltext&amp;quot; AS t2_r7 FROM &amp;quot;topics&amp;quot;  LEFT OUTER JOIN &amp;quot;topics_tracking&amp;quot; ON topics_tracking.topic_id = topics.id  LEFT OUTER JOIN &amp;quot;posts&amp;quot; ON &amp;quot;posts&amp;quot;.id = &amp;quot;topics&amp;quot;.last_post_id WHERE ((&amp;quot;topics&amp;quot;.forum_id = 1) AND (topics_tracking.user_id = 2))
LOG:  dur&#233;e : 0.815 ms, instruction : SELECT * FROM &amp;quot;topics&amp;quot; WHERE (id NOT IN (5,10))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that the first query fired by &lt;code&gt;marked =
self.tracked(user)&lt;/code&gt; uses &lt;code&gt;WHERE ((&quot;topics&quot;.forum_id =
1)&lt;/code&gt; but not the second query !&lt;/p&gt;
&lt;p&gt;the second named_scope lost the forum_id and requests all the
topics although the two methods use self&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have 2 named_scope in my topic model: 
@@@
class Topic &lt; ActiveRecord::Base
  belongs_to :forum, :counter_cache =&gt; true
  belongs_to :user

  named_scope :tracked, lambda { |u| { :include =&gt; [ :trackings, :last_post ], :conditions =&gt; [ &quot;topics_tracking.user_id = ?&quot;, u ] }}
  named_scope :untracked, lambda { |t| { :conditions =&gt; [ &quot;id NOT IN (?)&quot;, t ] }}

  def self.unread(user)
    marked = self.tracked(user)
    unread = self.untracked(marked)
    marked.each do |t|
      unread &lt;&lt; t if t.trackings.first.mark.to_s(:db) &lt; t.last_post.updated_at.to_s(:db)
    end
    unread
  end
@@@

If I call my forum model which has_many topics:
@@@
&gt; forum = Forum.find(1)
&gt; forum.topics.unread(user)
LOG:  dur&#233;e : 4.776 ms, instruction : SELECT &quot;topics&quot;.&quot;id&quot; AS t0_r0, &quot;topics&quot;.&quot;title&quot; AS t0_r1, &quot;topics&quot;.&quot;forum_id&quot; AS t0_r2, &quot;topics&quot;.&quot;posts_count&quot; AS t0_r3, &quot;topics&quot;.&quot;user_id&quot; AS t0_r4, &quot;topics&quot;.&quot;created_at&quot; AS t0_r5, &quot;topics&quot;.&quot;updated_at&quot; AS t0_r6, &quot;topics&quot;.&quot;sticky&quot; AS t0_r7, &quot;topics&quot;.&quot;locked&quot; AS t0_r8, &quot;topics&quot;.&quot;hits&quot; AS t0_r9, &quot;topics&quot;.&quot;last_post_id&quot; AS t0_r10, &quot;topics&quot;.&quot;fulltext&quot; AS t0_r11, &quot;topics_tracking&quot;.&quot;id&quot; AS t1_r0, &quot;topics_tracking&quot;.&quot;user_id&quot; AS t1_r1, &quot;topics_tracking&quot;.&quot;topic_id&quot; AS t1_r2, &quot;topics_tracking&quot;.&quot;mark&quot; AS t1_r3, &quot;topics_tracking&quot;.&quot;created_at&quot; AS t1_r4, &quot;topics_tracking&quot;.&quot;updated_at&quot; AS t1_r5, &quot;posts&quot;.&quot;id&quot; AS t2_r0, &quot;posts&quot;.&quot;body&quot; AS t2_r1, &quot;posts&quot;.&quot;topic_id&quot; AS t2_r2, &quot;posts&quot;.&quot;user_id&quot; AS t2_r3, &quot;posts&quot;.&quot;created_at&quot; AS t2_r4, &quot;posts&quot;.&quot;updated_at&quot; AS t2_r5, &quot;posts&quot;.&quot;position&quot; AS t2_r6, &quot;posts&quot;.&quot;fulltext&quot; AS t2_r7 FROM &quot;topics&quot;  LEFT OUTER JOIN &quot;topics_tracking&quot; ON topics_tracking.topic_id = topics.id  LEFT OUTER JOIN &quot;posts&quot; ON &quot;posts&quot;.id = &quot;topics&quot;.last_post_id WHERE ((&quot;topics&quot;.forum_id = 1) AND (topics_tracking.user_id = 2))
LOG:  dur&#233;e : 0.815 ms, instruction : SELECT * FROM &quot;topics&quot; WHERE (id NOT IN (5,10))
@@@

You can see that the first query fired by `marked = self.tracked(user)` uses `WHERE ((&quot;topics&quot;.forum_id = 1)` but not the second query !

the second named_scope lost the forum_id and requests all the topics although the two methods use self</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have 2 named_scope in my topic model:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Topic &amp;lt; ActiveRecord::Base
  belongs_to :forum, :counter_cache =&amp;gt; true
  belongs_to :user

  named_scope :tracked, lambda { |u| { :include =&amp;gt; [ :trackings, :last_post ], :conditions =&amp;gt; [ &amp;quot;topics_tracking.user_id = ?&amp;quot;, u ] }}
  named_scope :untracked, lambda { |t| { :conditions =&amp;gt; [ &amp;quot;id NOT IN (?)&amp;quot;, t ] }}

  def self.unread(user)
    marked = self.tracked(user)
    unread = self.untracked(marked)
    marked.each do |t|
      unread &amp;lt;&amp;lt; t if t.trackings.first.mark.to_s(:db) &amp;lt; t.last_post.updated_at.to_s(:db)
    end
    unread
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If I call my forum model which has_many topics:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt; forum = Forum.find(1)
&amp;gt; forum.topics.unread(user)
LOG:  dur&#233;e : 4.776 ms, instruction : SELECT &amp;quot;topics&amp;quot;.&amp;quot;id&amp;quot; AS t0_r0, &amp;quot;topics&amp;quot;.&amp;quot;title&amp;quot; AS t0_r1, &amp;quot;topics&amp;quot;.&amp;quot;forum_id&amp;quot; AS t0_r2, &amp;quot;topics&amp;quot;.&amp;quot;posts_count&amp;quot; AS t0_r3, &amp;quot;topics&amp;quot;.&amp;quot;user_id&amp;quot; AS t0_r4, &amp;quot;topics&amp;quot;.&amp;quot;created_at&amp;quot; AS t0_r5, &amp;quot;topics&amp;quot;.&amp;quot;updated_at&amp;quot; AS t0_r6, &amp;quot;topics&amp;quot;.&amp;quot;sticky&amp;quot; AS t0_r7, &amp;quot;topics&amp;quot;.&amp;quot;locked&amp;quot; AS t0_r8, &amp;quot;topics&amp;quot;.&amp;quot;hits&amp;quot; AS t0_r9, &amp;quot;topics&amp;quot;.&amp;quot;last_post_id&amp;quot; AS t0_r10, &amp;quot;topics&amp;quot;.&amp;quot;fulltext&amp;quot; AS t0_r11, &amp;quot;topics_tracking&amp;quot;.&amp;quot;id&amp;quot; AS t1_r0, &amp;quot;topics_tracking&amp;quot;.&amp;quot;user_id&amp;quot; AS t1_r1, &amp;quot;topics_tracking&amp;quot;.&amp;quot;topic_id&amp;quot; AS t1_r2, &amp;quot;topics_tracking&amp;quot;.&amp;quot;mark&amp;quot; AS t1_r3, &amp;quot;topics_tracking&amp;quot;.&amp;quot;created_at&amp;quot; AS t1_r4, &amp;quot;topics_tracking&amp;quot;.&amp;quot;updated_at&amp;quot; AS t1_r5, &amp;quot;posts&amp;quot;.&amp;quot;id&amp;quot; AS t2_r0, &amp;quot;posts&amp;quot;.&amp;quot;body&amp;quot; AS t2_r1, &amp;quot;posts&amp;quot;.&amp;quot;topic_id&amp;quot; AS t2_r2, &amp;quot;posts&amp;quot;.&amp;quot;user_id&amp;quot; AS t2_r3, &amp;quot;posts&amp;quot;.&amp;quot;created_at&amp;quot; AS t2_r4, &amp;quot;posts&amp;quot;.&amp;quot;updated_at&amp;quot; AS t2_r5, &amp;quot;posts&amp;quot;.&amp;quot;position&amp;quot; AS t2_r6, &amp;quot;posts&amp;quot;.&amp;quot;fulltext&amp;quot; AS t2_r7 FROM &amp;quot;topics&amp;quot;  LEFT OUTER JOIN &amp;quot;topics_tracking&amp;quot; ON topics_tracking.topic_id = topics.id  LEFT OUTER JOIN &amp;quot;posts&amp;quot; ON &amp;quot;posts&amp;quot;.id = &amp;quot;topics&amp;quot;.last_post_id WHERE ((&amp;quot;topics&amp;quot;.forum_id = 1) AND (topics_tracking.user_id = 2))
LOG:  dur&#233;e : 0.815 ms, instruction : SELECT * FROM &amp;quot;topics&amp;quot; WHERE (id NOT IN (5,10))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that the first query fired by &lt;code&gt;marked =
self.tracked(user)&lt;/code&gt; uses &lt;code&gt;WHERE ((&quot;topics&quot;.forum_id =
1)&lt;/code&gt; but not the second query !&lt;/p&gt;
&lt;p&gt;the second named_scope lost the forum_id and requests all the
topics although the two methods use self&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-05T17:55:38+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2008-12-05T17:55:40+00:00</updated-at>
      <user-id type="integer">31731</user-id>
      <version type="integer">1</version>
      <user-name>EppO</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is there anything more that might be relevant?

I replicated a small example:
@@@ ruby
class Child &lt; ActiveRecord::Base
  belongs_to :parent
  named_scope :active, lambda {{:conditions =&gt; {:status =&gt; 'active'}, :include =&gt; :parent}}
  named_scope :other, lambda {|t| {:conditions =&gt; [&quot;id not in (?)&quot;, t]}}
  
  def self.things
    foos = self.active 
    self.other(foos).to_a
  end
end
@@@
with a Parent class that just has_many :children and this seem to work fine. Is there somethere elsewhere (in either of the two classes) that might be interfering? Can you construct a minimal example ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is there anything more that might be relevant?&lt;/p&gt;
&lt;p&gt;I replicated a small example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Child &amp;lt; ActiveRecord::Base
  belongs_to :parent
  named_scope :active, lambda {{:conditions =&amp;gt; {:status =&amp;gt; 'active'}, :include =&amp;gt; :parent}}
  named_scope :other, lambda {|t| {:conditions =&amp;gt; [&amp;quot;id not in (?)&amp;quot;, t]}}

  def self.things
    foos = self.active
    self.other(foos).to_a
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with a Parent class that just has_many :children and this seem
to work fine. Is there somethere elsewhere (in either of the two
classes) that might be interfering? Can you construct a minimal
example ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-08T21:26:49+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2008-12-08T21:26:51+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I tried your example with a fresh rails project and an error occurs (tested on OS X and debian linux):

  &gt;&gt; Child.all
=&gt; [#&lt;Child id: 1, status: &quot;fils&quot;, parent_id: 1, created_at: &quot;2008-12-08 22:57:02&quot;, updated_at: &quot;2008-12-08 22:57:02&quot;&gt;, #&lt;Child id: 2, status: &quot;fils&quot;, parent_id: 2, created_at: &quot;2008-12-08 22:59:47&quot;, updated_at: &quot;2008-12-08 22:59:47&quot;&gt;, #&lt;Child id: 3, status: &quot;fille&quot;, parent_id: 1, created_at: &quot;2008-12-08 23:00:17&quot;, updated_at: &quot;2008-12-08 23:00:17&quot;&gt;]
&gt;&gt; Child.things
SystemStackError: stack level too deep
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1974:in `with_scope'
	from (__DELEGATION__):2:in `__send__'
	from (__DELEGATION__):2:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
	from (__DELEGATION__):2:in `is_a?'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2183:in `sanitize_sql_array'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2079:in `sanitize_sql'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1441:in `merge_conditions'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1981:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1978:in `each'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1978:in `with_scope'
	from (irb):2:in `inject'
... 2965 levels...
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1742:in `add_conditions!'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1629:in `construct_finder_sql'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1490:in `find_every'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:589:in `find'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:171:in `send'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:171:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2003:in `with_scope'
	from (__DELEGATION__):2:in `__send__'
	from (__DELEGATION__):2:in `with_scope'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
	from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
	from (__DELEGATION__):2:in `to_a'
	from /home/eppo/lighthouse/app/models/child.rb:8:in `things'
	from (irb):2&gt;&gt; 

I use sqlite 3 for this example, postgres driver for my first report</body>
      <body-html>&lt;div&gt;&lt;p&gt;I tried your example with a fresh rails project and an error
occurs (tested on OS X and debian linux):&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt; Child.all =&amp;gt; [#, #, #]&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Child.things SystemStackError: stack level too deep&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1974:in `with_scope'
from (__DELEGATION__):2:in `__send__'
from (__DELEGATION__):2:in `with_scope'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
from (__DELEGATION__):2:in `is_a?'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2183:in `sanitize_sql_array'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2079:in `sanitize_sql'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1441:in `merge_conditions'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `each'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1981:in `with_scope'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1978:in `each'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1978:in `with_scope'
from (irb):2:in `inject'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;... 2965 levels...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1742:in `add_conditions!'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1629:in `construct_finder_sql'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1490:in `find_every'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:589:in `find'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:171:in `send'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:171:in `method_missing'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2003:in `with_scope'
from (__DELEGATION__):2:in `__send__'
from (__DELEGATION__):2:in `with_scope'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
from (__DELEGATION__):2:in `to_a'
from /home/eppo/lighthouse/app/models/child.rb:8:in `things'
from (irb):2&amp;gt;&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I use sqlite 3 for this example, postgres driver for my first
report&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-08T23:26:10+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2008-12-08T23:26:14+00:00</updated-at>
      <user-id type="integer">31731</user-id>
      <version type="integer">3</version>
      <user-name>EppO</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Previous error occured when I call Child.things

If I run Child.active and Child.other by hand in irb, that works.
don't know why, but seems that error is related to my first report</body>
      <body-html>&lt;div&gt;&lt;p&gt;Previous error occured when I call Child.things&lt;/p&gt;
&lt;p&gt;If I run Child.active and Child.other by hand in irb, that
works. don't know why, but seems that error is related to my first
report&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-08T23:32:51+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2008-12-08T23:32:56+00:00</updated-at>
      <user-id type="integer">31731</user-id>
      <version type="integer">4</version>
      <user-name>EppO</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>That scope was never supposed to work in that case  :-). It was purely for doing some_parent.children.things, which (for me at least) did the queries I'd expect</body>
      <body-html>&lt;div&gt;&lt;p&gt;That scope was never supposed to work in that case :-). It was
purely for doing some_parent.children.things, which (for me at
least) did the queries I'd expect&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-08T23:36:16+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2008-12-08T23:36:20+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">5</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is something wrong somewhere...

@@
Loading development environment (Rails 2.2.2)
&gt;&gt; forum = Forum.first
=&gt; #&lt;Forum id: 1, name: &quot;bla bla&quot;, desc: &quot;blabla forum de tesst&quot;, created_at: &quot;2008-12-11 14:28:18&quot;, updated_at: &quot;2008-12-11 14:28:18&quot;&gt;
&gt;&gt; Topic.untracked(forum.topics)
SystemStackError: stack level too deep
        from /usr/lib/ruby/gems/1.8/gems/activesupport-2.2.2/lib/active_support/core_ext/array/extract_options.rb:15:in `extract_options!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:582:in `find'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:60:in `find'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:390:in `find_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:344:in `load_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_proxy.rb:208:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:361:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2183:in `sanitize_sql_array'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2079:in `sanitize_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1441:in `merge_conditions'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `each'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1742:in `add_conditions!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1629:in `construct_finder_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1490:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:589:in `find'
... 2690 levels...
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2003:in `with_scope'
        from (__DELEGATION__):2:in `__send__'
        from (__DELEGATION__):2:in `with_scope'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
        from (__DELEGATION__):2:in `inspect'
        from /usr/lib/ruby/1.8/irb.rb:302:in `output_value'
        from /usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:263:in `signal_status'
        from /usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:70:in `start'
        from /usr/lib/ruby/1.8/irb.rb:69:in `catch'
        from /usr/lib/ruby/1.8/irb.rb:69:in `start'
        from /usr/bin/irb:13&gt;&gt; 
&gt;&gt; bla = forum.topics
=&gt; [#&lt;Topic id: 1, title: &quot;first topic of the year&quot;, forum_id: 1, created_at: &quot;2008-12-11 14:29:39&quot;, updated_at: &quot;2008-12-11 14:29:39&quot;&gt;, #&lt;Topic id: 2, title: &quot;second one&quot;, forum_id: 1, created_at: &quot;2008-12-11 14:30:40&quot;, updated_at: &quot;2008-12-11 14:30:40&quot;&gt;]
&gt;&gt; Topic.untracked(bla)
=&gt; []
&gt;&gt; Topic.untracked(forum.topics)
=&gt; []
&gt;&gt;
@@

Twice the same method call, 2 different results, same code.
Find my simple code in attachment. Just unzip and test same calls in console.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is something wrong somewhere...&lt;/p&gt;
&lt;p&gt;@@ Loading development environment (Rails 2.2.2)&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;forum = Forum.first =&amp;gt; #Topic.untracked(forum.topics)
SystemStackError: stack level too deep&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /usr/lib/ruby/gems/1.8/gems/activesupport-2.2.2/lib/active_support/core_ext/array/extract_options.rb:15:in `extract_options!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:582:in `find'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:60:in `find'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:390:in `find_target'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:344:in `load_target'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_proxy.rb:208:in `method_missing'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:361:in `method_missing'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2183:in `sanitize_sql_array'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2079:in `sanitize_sql'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1441:in `merge_conditions'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `each'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1742:in `add_conditions!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1629:in `construct_finder_sql'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1490:in `find_every'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:589:in `find'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;... 2690 levels...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2003:in `with_scope'
    from (__DELEGATION__):2:in `__send__'
    from (__DELEGATION__):2:in `with_scope'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
    from (__DELEGATION__):2:in `inspect'
    from /usr/lib/ruby/1.8/irb.rb:302:in `output_value'
    from /usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
    from /usr/lib/ruby/1.8/irb.rb:263:in `signal_status'
    from /usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
    from /usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
    from /usr/lib/ruby/1.8/irb.rb:70:in `start'
    from /usr/lib/ruby/1.8/irb.rb:69:in `catch'
    from /usr/lib/ruby/1.8/irb.rb:69:in `start'
    from /usr/bin/irb:13&amp;gt;&amp;gt; 
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;bla = forum.topics =&amp;gt; [#, #] Topic.untracked(bla) =&amp;gt; []
Topic.untracked(forum.topics) =&amp;gt; []&lt;/p&gt;
&lt;p&gt;@@&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Twice the same method call, 2 different results, same code. Find
my simple code in attachment. Just unzip and test same calls in
console.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-11T14:42:24+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2008-12-11T14:42:30+00:00</updated-at>
      <user-id type="integer">31731</user-id>
      <version type="integer">6</version>
      <user-name>EppO</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>formatting mistake (what a pity no preview available), I put again my script/console test:

@@@
Loading development environment (Rails 2.2.2)
&gt;&gt; forum = Forum.first
=&gt; #&lt;Forum id: 1, name: &quot;bla bla&quot;, desc: &quot;blabla forum de tesst&quot;, created_at: &quot;2008-12-11 14:28:18&quot;, updated_at: &quot;2008-12-11 14:28:18&quot;&gt;
&gt;&gt; Topic.untracked(forum.topics)
SystemStackError: stack level too deep
        from /usr/lib/ruby/gems/1.8/gems/activesupport-2.2.2/lib/active_support/core_ext/array/extract_options.rb:15:in `extract_options!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:582:in `find'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:60:in `find'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:390:in `find_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:344:in `load_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_proxy.rb:208:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:361:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2183:in `sanitize_sql_array'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2079:in `sanitize_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1441:in `merge_conditions'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `each'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1742:in `add_conditions!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1629:in `construct_finder_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1490:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:589:in `find'
... 2690 levels...
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2003:in `with_scope'
        from (__DELEGATION__):2:in `__send__'
        from (__DELEGATION__):2:in `with_scope'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
        from (__DELEGATION__):2:in `inspect'
        from /usr/lib/ruby/1.8/irb.rb:302:in `output_value'
        from /usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:263:in `signal_status'
        from /usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:70:in `start'
        from /usr/lib/ruby/1.8/irb.rb:69:in `catch'
        from /usr/lib/ruby/1.8/irb.rb:69:in `start'
        from /usr/bin/irb:13&gt;&gt; 
&gt;&gt; bla = forum.topics
=&gt; [#&lt;Topic id: 1, title: &quot;first topic of the year&quot;, forum_id: 1, created_at: &quot;2008-12-11 14:29:39&quot;, updated_at: &quot;2008-12-11 14:29:39&quot;&gt;, #&lt;Topic id: 2, title: &quot;second one&quot;, forum_id: 1, created_at: &quot;2008-12-11 14:30:40&quot;, updated_at: &quot;2008-12-11 14:30:40&quot;&gt;]
&gt;&gt; Topic.untracked(bla)
=&gt; []
&gt;&gt; Topic.untracked(forum.topics)
=&gt; []
&gt;&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;formatting mistake (what a pity no preview available), I put
again my script/console test:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
Loading development environment (Rails 2.2.2)
&amp;gt;&amp;gt; forum = Forum.first
=&amp;gt; #&amp;lt;Forum id: 1, name: &amp;quot;bla bla&amp;quot;, desc: &amp;quot;blabla forum de tesst&amp;quot;, created_at: &amp;quot;2008-12-11 14:28:18&amp;quot;, updated_at: &amp;quot;2008-12-11 14:28:18&amp;quot;&amp;gt;
&amp;gt;&amp;gt; Topic.untracked(forum.topics)
SystemStackError: stack level too deep
        from /usr/lib/ruby/gems/1.8/gems/activesupport-2.2.2/lib/active_support/core_ext/array/extract_options.rb:15:in `extract_options!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:582:in `find'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:60:in `find'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:390:in `find_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:344:in `load_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_proxy.rb:208:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/associations/association_collection.rb:361:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2183:in `sanitize_sql_array'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2079:in `sanitize_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1441:in `merge_conditions'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `each'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1439:in `merge_conditions'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1742:in `add_conditions!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1629:in `construct_finder_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:1490:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:589:in `find'
... 2690 levels...
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/base.rb:2003:in `with_scope'
        from (__DELEGATION__):2:in `__send__'
        from (__DELEGATION__):2:in `with_scope'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:169:in `method_missing'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:177:in `load_found'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/named_scope.rb:161:in `proxy_found'
        from (__DELEGATION__):2:in `inspect'
        from /usr/lib/ruby/1.8/irb.rb:302:in `output_value'
        from /usr/lib/ruby/1.8/irb.rb:151:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:263:in `signal_status'
        from /usr/lib/ruby/1.8/irb.rb:147:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:146:in `eval_input'
        from /usr/lib/ruby/1.8/irb.rb:70:in `start'
        from /usr/lib/ruby/1.8/irb.rb:69:in `catch'
        from /usr/lib/ruby/1.8/irb.rb:69:in `start'
        from /usr/bin/irb:13&amp;gt;&amp;gt; 
&amp;gt;&amp;gt; bla = forum.topics
=&amp;gt; [#&amp;lt;Topic id: 1, title: &amp;quot;first topic of the year&amp;quot;, forum_id: 1, created_at: &amp;quot;2008-12-11 14:29:39&amp;quot;, updated_at: &amp;quot;2008-12-11 14:29:39&amp;quot;&amp;gt;, #&amp;lt;Topic id: 2, title: &amp;quot;second one&amp;quot;, forum_id: 1, created_at: &amp;quot;2008-12-11 14:30:40&amp;quot;, updated_at: &amp;quot;2008-12-11 14:30:40&amp;quot;&amp;gt;]
&amp;gt;&amp;gt; Topic.untracked(bla)
=&amp;gt; []
&amp;gt;&amp;gt; Topic.untracked(forum.topics)
=&amp;gt; []
&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-11T14:44:44+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2008-12-11T14:44:49+00:00</updated-at>
      <user-id type="integer">31731</user-id>
      <version type="integer">7</version>
      <user-name>EppO</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Don't think it's a bug. Could you please submit a failing test if you think it's a bug ? http://guides.rails.info/contributing_to_rails.html should be helpful !

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Don't think it's a bug. Could you please submit a failing test
if you think it's a bug ? &lt;a href=&quot;http://guides.rails.info/contributing_to_rails.html&quot;&gt;http://guides.rails.info/contrib...&lt;/a&gt;
should be helpful !&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T15:53:07+00:00</created-at>
      <creator-id type="integer">31731</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1519</number>
      <permalink>named_scope-not-preserving-self</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.2 named_scope self</tag>
      <title>named_scope not preserving self</title>
      <updated-at type="datetime">2009-03-12T15:53:10+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">8</version>
      <user-name>Pratik</user-name>
      <creator-name>EppO</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1519</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a0383610cbe7f19dcd97c47f483a1e12f75923ca</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2008-12-11T14:42:24+00:00</created-at>
      <filename>rails_bug_in_namescope.tar.bz2</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">70226</id>
      <size type="integer">73421</size>
      <uploader-id type="integer">31731</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/70226/rails_bug_in_namescope.tar.bz2</url>
    </attachment>
  </attachments>
</ticket>
