<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:14+00:00</created-at>
  <creator-id type="integer">29892</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">1642</number>
  <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
  <updated-at type="datetime">2011-02-17T06:48:14+00:00</updated-at>
  <user-id type="integer">94458</user-id>
  <version type="integer">35</version>
  <user-name>Jeff Kreeftmeijer</user-name>
  <creator-name>Adam Milligan</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Medium</priority-name>
  <original-body>This patch changes the superclass of HasOneThroughAssociation to HasOneAssociation, moves the functionality shared between the two Through associations to a module named ThroughAssociationScope, and removes the special case overloads of the HasManyThroughAssociation methods in HasOneThroughAssociation.

No new tests, since this patch only include refactorings, no new functionality.</original-body>
  <latest-body>This patch changes the superclass of HasOneThroughAssociation to HasOneAssociation, moves the functionality shared between the two Through associations to a module named ThroughAssociationScope, and removes the special case overloads of the HasManyThroughAssociation methods in HasOneThroughAssociation.

No new tests, since this patch only include refactorings, no new functionality.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch changes the superclass of HasOneThroughAssociation to
HasOneAssociation, moves the functionality shared between the two
Through associations to a module named ThroughAssociationScope, and
removes the special case overloads of the HasManyThroughAssociation
methods in HasOneThroughAssociation.&lt;/p&gt;
&lt;p&gt;No new tests, since this patch only include refactorings, no new
functionality.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch changes the superclass of HasOneThroughAssociation to HasOneAssociation, moves the functionality shared between the two Through associations to a module named ThroughAssociationScope, and removes the special case overloads of the HasManyThroughAssociation methods in HasOneThroughAssociation.

No new tests, since this patch only include refactorings, no new functionality.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch changes the superclass of HasOneThroughAssociation to
HasOneAssociation, moves the functionality shared between the two
Through associations to a module named ThroughAssociationScope, and
removes the special case overloads of the HasManyThroughAssociation
methods in HasOneThroughAssociation.&lt;/p&gt;
&lt;p&gt;No new tests, since this patch only include refactorings, no new
functionality.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-27T08:16:18+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2008-12-27T08:16:23+00:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">1</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good call - that has always seemed a bit messy to me (and has been responsible for a fair few bugs). Haven't looked at patch in detail yet, but tests all pass</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good call - that has always seemed a bit messy to me (and has
been responsible for a fair few bugs). Haven't looked at patch in
detail yet, but tests all pass&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-27T11:14:33+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2008-12-27T11:14:34+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-29T05:01:37+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2008-12-29T05:01:43+00:00</updated-at>
      <user-id type="integer">25962</user-id>
      <version type="integer">3</version>
      <user-name>David Stevenson</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 I've had problems with has_one through in 2.1 and 2.2 (edge seems to resolve them, but the existing implementation seemed like a bad hack)</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 I've had problems with has_one through in 2.1 and 2.2 (edge
seems to resolve them, but the existing implementation seemed like
a bad hack)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-30T07:25:56+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2008-12-30T07:26:01+00:00</updated-at>
      <user-id type="integer">32604</user-id>
      <version type="integer">4</version>
      <user-name>Joseph Palermo</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>HasOneThroughAssociation inheriting from HasManyThroughAssociation seems logical to me. What are the advantages of this patch ? If there's some bug to be fixed by doing this, I'd happily apply. Otherwise, let's just wait till this refactoring is actually needed.

Thanks !</body>
      <body-html>&lt;div&gt;&lt;p&gt;HasOneThroughAssociation inheriting from
HasManyThroughAssociation seems logical to me. What are the
advantages of this patch ? If there's some bug to be fixed by doing
this, I'd happily apply. Otherwise, let's just wait till this
refactoring is actually needed.&lt;/p&gt;
&lt;p&gt;Thanks !&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-07T12:09:42+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-03-07T12:09:45+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>To put not too fine a point on it, this is a fundamentally improper
use of inheritance; the relationship exists to share implementation
rather than interface.  Ruby provides modules for this exact
situation.  Pulling the shared functionality into a shared module is
straightforward, and simplifies the code by removing special case
interface overrides.

This inheritance relationship has already caused its share of bugs, as
mentioned by commenters on the ticket.  I fixed two here:
http://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-thro....
More importantly, the added complexity created by importing all of the
collection logic and interface into a non-collection association class
just adds to rigidity and potential for odd bugs in the future.</body>
      <body-html>&lt;div&gt;&lt;p&gt;To put not too fine a point on it, this is a fundamentally
improper use of inheritance; the relationship exists to share
implementation rather than interface. Ruby provides modules for
this exact situation. Pulling the shared functionality into a
shared module is straightforward, and simplifies the code by
removing special case interface overrides.&lt;/p&gt;
&lt;p&gt;This inheritance relationship has already caused its share of
bugs, as mentioned by commenters on the ticket. I fixed two here:
&lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-thro....&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt; More importantly, the added
complexity created by importing all of the collection logic and
interface into a non-collection association class just adds to
rigidity and potential for odd bugs in the future.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T06:38:11+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-03-09T06:38:13+00:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">6</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&quot;HasOneThroughAssociation inheriting from HasManyThroughAssociation seems logical to me&quot;.

It does?</body>
      <body-html>&lt;div&gt;&lt;p&gt;&quot;HasOneThroughAssociation inheriting from
HasManyThroughAssociation seems logical to me&quot;.&lt;/p&gt;
&lt;p&gt;It does?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-20T19:25:39+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-20T19:25:42+01:00</updated-at>
      <user-id type="integer">18387</user-id>
      <version type="integer">7</version>
      <user-name>Alex Chaffee</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Adam Milligan is a my refactoring hero. 
Adam Milligan refactoring scope is not limited to computers.
Adam Milligan once refactored water into wine.
Adam Milligan's refactoring patch SHOULD BE ACCEPTED!!! (in all serious)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adam Milligan is a my refactoring hero. Adam Milligan
refactoring scope is not limited to computers. Adam Milligan once
refactored water into wine. Adam Milligan's refactoring patch
SHOULD BE ACCEPTED!!! (in all serious)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-20T20:27:32+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-20T20:27:38+01:00</updated-at>
      <user-id type="integer">54657</user-id>
      <version type="integer">8</version>
      <user-name>john f</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 for accepting this patch. HasOneThroughAssociation &lt; HasOneAssociation makes far more sense to me than HasOneThroughAssociation &lt; HasManyThroughAssociation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for accepting this patch. HasOneThroughAssociation &amp;lt;
HasOneAssociation makes far more sense to me than
HasOneThroughAssociation &amp;lt; HasManyThroughAssociation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-20T20:37:18+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-20T20:37:21+01:00</updated-at>
      <user-id type="integer">41535</user-id>
      <version type="integer">9</version>
      <user-name>Vladimir Andrijevik</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This seems like a good thing to merge in now that edge is all shaken up by Yehuda's changes for Rails 3</body>
      <body-html>&lt;div&gt;&lt;p&gt;This seems like a good thing to merge in now that edge is all
shaken up by Yehuda's changes for Rails 3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-20T23:11:39+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-20T23:11:41+01:00</updated-at>
      <user-id type="integer">46764</user-id>
      <version type="integer">10</version>
      <user-name>Zach Brock</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 for applying this patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for applying this patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T07:10:23+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T07:10:24+01:00</updated-at>
      <user-id type="integer">8560</user-id>
      <version type="integer">11</version>
      <user-name>Arthur Schreiber</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 to any reasonably intelligent refactoring out of special cases in AR</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 to any reasonably intelligent refactoring out of special
cases in AR&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T08:29:09+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T08:29:10+01:00</updated-at>
      <user-id type="integer">13680</user-id>
      <version type="integer">12</version>
      <user-name>Tim Connor</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just so you all know, the blind +1s here have no significance whatsoever and will only have a negative effect, if any. Quoting from the &quot;contributor guide&quot; :

@@@
If your comment simply says +1, then odds are other reviewers aren't going to take it too seriously. Show that you took the time to review the patch.
@@@

I stick to what I said in http://groups.google.com/group/rubyonrails-core/browse_thread/thread/15d4f9747696d83c/8c6e79717b6d81a0</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just so you all know, the blind +1s here have no significance
whatsoever and will only have a negative effect, if any. Quoting
from the &quot;contributor guide&quot; :&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
If your comment simply says +1, then odds are other reviewers aren't going to take it too seriously. Show that you took the time to review the patch.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I stick to what I said in &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/15d4f9747696d83c/8c6e79717b6d81a0&quot;&gt;
http://groups.google.com/group/r...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T13:53:17+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T13:53:22+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">13</version>
      <user-name>Pratik</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 Code cleanup and being dry tends to be a good thing.
I like the ThroughAssociationScope extraction, because it moves common code into one place and removes the need to have special case if/else statements that require more explicit tests and make maintenance more difficult.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 Code cleanup and being dry tends to be a good thing. I like
the ThroughAssociationScope extraction, because it moves common
code into one place and removes the need to have special case
if/else statements that require more explicit tests and make
maintenance more difficult.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T17:59:39+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T17:59:42+01:00</updated-at>
      <user-id type="integer">10134</user-id>
      <version type="integer">14</version>
      <user-name>Brian Takita</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 This code is really hard to work with.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 This code is really hard to work with.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T18:00:45+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T18:00:48+01:00</updated-at>
      <user-id type="integer">54758</user-id>
      <version type="integer">15</version>
      <user-name>jpeasy</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'd also say that Rails in general could use a good deal of refactoring.

Navigating some sections gives me a headache. There is some serious code debt in the framework.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'd also say that Rails in general could use a good deal of
refactoring.&lt;/p&gt;
&lt;p&gt;Navigating some sections gives me a headache. There is some
serious code debt in the framework.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T18:01:14+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T18:01:19+01:00</updated-at>
      <user-id type="integer">10134</user-id>
      <version type="integer">16</version>
      <user-name>Brian Takita</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T18:12:58+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 1366
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T18:13:02+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">17</version>
      <user-name>Pratik</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 for cleaner code.  rails should be pretty on the inside too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for cleaner code. rails should be pretty on the inside
too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-21T22:23:25+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-04-21T22:23:27+01:00</updated-at>
      <user-id type="integer">20117</user-id>
      <version type="integer">18</version>
      <user-name>parker thompson</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Based on the discussion at RailsConf I'm pressing for this refactoring once more.  I've reapplied the changes to the current HEAD of Rails and recreated the patch file.  Little change was needed; all tests still pass.  

A search through GitHub (http://github.com/search?type=Code&amp;language=rb&amp;q=Hasonethroughassociation&amp;repo=&amp;langOverride=&amp;x=0&amp;y=0&amp;start_value=1) turned up no plugins that this change will affect.

I've also taken the liberty of setting Jeremy Kemper as the owner of the ticket, since he seems to be someone who might actually advocate for it.  Jeremy, sorry if you're not the right person for this.  Ideally you can pass it off onto whoever is.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Based on the discussion at RailsConf I'm pressing for this
refactoring once more. I've reapplied the changes to the current
HEAD of Rails and recreated the patch file. Little change was
needed; all tests still pass.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;A search through GitHub (&lt;a href=&quot;http://github.com/search?type=Code&amp;amp;language=rb&amp;amp;q=Hasonethroughassociation&amp;amp;repo=&amp;amp;langOverride=&amp;amp;x=0&amp;amp;y=0&amp;amp;start_value=1&quot;&gt;http://github.com/search?type=Co...&lt;/a&gt;)
turned up no plugins that this change will affect.&lt;/p&gt;
&lt;p&gt;I've also taken the liberty of setting Jeremy Kemper as the
owner of the ticket, since he seems to be someone who might
actually advocate for it. Jeremy, sorry if you're not the right
person for this. Ideally you can pass it off onto whoever is.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-11T00:34:02+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord associations has_one_through patch
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch refactoring</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-05-11T00:34:05+01:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">19</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>If people with a lot of extra time are looking for some work that might actually add some real value, I'd be happy to help out. But I don't believe this &quot;refactoring&quot; is making the code any easier to follow.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If people with a lot of extra time are looking for some work
that might actually add some real value, I'd be happy to help out.
But I don't believe this &quot;refactoring&quot; is making the code any
easier to follow.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-13T14:00:43+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 85
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch refactoring</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-05-13T14:00:45+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">20</version>
      <user-name>Pratik</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>1) Please take a look at activerecord/lib/active_record/associations.rb, line 1236.  This is the code that defies the association setter method for all associations.  On line 1243 the code explicitly checks the type of the association_proxy_class and branches to different logic if it's a HasOneThroughAssociation.  For all other association types the code makes a call to a polymorphic method without regard to object type, as it should.  Changing implementation based on type interrogation in this way is a clear sign of code fragility, makes the method longer and less obvious, and causes the class abstraction to leak.  My patch removes the explicit check and reduces six lines of code from 1243 to 1249 to two.  At the same time it makes private the #create_through_record method in the HasOneThroughAssociation class, simplifying the public interface to the class.

From a more pragmatic point of view, this branching logic was a direct cause of one of the bugs I fixed in https://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-through-errors .

2) Please look at activerecord/lib/active_record/associations/has_many_through_association.rb.  This is a long file, 257 lines.  My patch pulls all of the Through-specific login into a module, which reduces the size of this file to 112 lines, and makes an obvious distinction between different aspects of the implementation.  The patch also reduced the size of the #find_target method from twelve lines to two, delegating the scope construction to the shared #construct_scope method, rather than building the scope inline.

3) Please look at activerecord/lib/active_record/associations/has_one_through_association.rb.  As mentioned before this class exposes the #create_through_association method in the public interface, though it performs implementation that should be handled by the class within its abstraction.  My patch makes this method private.  The class also includes special-case overrides of #find, #find_target, and #reset_target! to mask the functionality inherited from HasManyThroughAssociation (the override of #reset_target! was the source of another bug I fixed in https://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-through-errors).  My patch removes the need for #find and #reset_target!, since the inherited behavior from HasOneAssociation is already correct, and changes the implementation of #find_target to mirror the implementation of #find_target on the HasManyThroughAssociation class, which is now a peer.  In this case, it calls find(:first) on the reflections class, using the scope generated by ThroughAssociationScope#construct_scope.  I believe this is more clear than sending #find_target to the HasManyThroughAssociation superclass with an explicit limit override.

4) This patch makes HasOneThroughAssociation a peer of HasManyThroughAssociation in the inheritance hierarchy, as it properly should be.  HasOneAssociation is a peer of HasManyAssociation; doing the same with their Through counterparts is far more obvious than deepening the hierarchy only under HasManyAssociation.  As well, the current inheritance tree imports all of the code from association_collection.rb and has_many_association.rb as well as hash_many_through_association.rb into has_one_through_association.rb.  Moving HasOneThroughAssociation up the inheritance hierarchy to its proper place removes a lot of inherited cruft that can only cause complication (for instance, it made https://rails.lighthouseapp.com/projects/8994/tickets/1643-association-proxies-should-correctly-respond-to-method-defined-via-method_missing unnecessarily difficult) and confuse programmers who interrogate the HasOneThroughAssociation class for its capabilities.

5) All of this is in addition to my argument that the current implementation is a fundamental misuse of inheritance.  This is not an esoteric argument, the concept of encapsulation over inheritance for sharing of implementation is well worn, baked into Liskov Substitutability, permeating Design Patterns, advocated regularly by the likes of Dave Thomas, etc.  It's been proven enough times to matter that it makes code easier to understand, easier to change, and more resilient to defects.  Ignore that at your peril, I suppose.</body>
      <body-html>&lt;div&gt;&lt;p&gt;1) Please take a look at
activerecord/lib/active_record/associations.rb, line 1236. This is
the code that defies the association setter method for all
associations. On line 1243 the code explicitly checks the type of
the association_proxy_class and branches to different logic if it's
a HasOneThroughAssociation. For all other association types the
code makes a call to a polymorphic method without regard to object
type, as it should. Changing implementation based on type
interrogation in this way is a clear sign of code fragility, makes
the method longer and less obvious, and causes the class
abstraction to leak. My patch removes the explicit check and
reduces six lines of code from 1243 to 1249 to two. At the same
time it makes private the #create_through_record method in the
HasOneThroughAssociation class, simplifying the public interface to
the class.&lt;/p&gt;
&lt;p&gt;From a more pragmatic point of view, this branching logic was a
direct cause of one of the bugs I fixed in &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-through-errors&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-t...&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;2) Please look at
activerecord/lib/active_record/associations/has_many_through_association.rb.
This is a long file, 257 lines. My patch pulls all of the
Through-specific login into a module, which reduces the size of
this file to 112 lines, and makes an obvious distinction between
different aspects of the implementation. The patch also reduced the
size of the #find_target method from twelve lines to two,
delegating the scope construction to the shared #construct_scope
method, rather than building the scope inline.&lt;/p&gt;
&lt;p&gt;3) Please look at
activerecord/lib/active_record/associations/has_one_through_association.rb.
As mentioned before this class exposes the
#create_through_association method in the public interface, though
it performs implementation that should be handled by the class
within its abstraction. My patch makes this method private. The
class also includes special-case overrides of #find, #find_target,
and #reset_target! to mask the functionality inherited from
HasManyThroughAssociation (the override of #reset_target! was the
source of another bug I fixed in &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-through-errors)&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/895-has_one-t...&lt;/a&gt;.
My patch removes the need for #find and #reset_target!, since the
inherited behavior from HasOneAssociation is already correct, and
changes the implementation of #find_target to mirror the
implementation of #find_target on the HasManyThroughAssociation
class, which is now a peer. In this case, it calls find(:first) on
the reflections class, using the scope generated by
ThroughAssociationScope#construct_scope. I believe this is more
clear than sending #find_target to the HasManyThroughAssociation
superclass with an explicit limit override.&lt;/p&gt;
&lt;p&gt;4) This patch makes HasOneThroughAssociation a peer of
HasManyThroughAssociation in the inheritance hierarchy, as it
properly should be. HasOneAssociation is a peer of
HasManyAssociation; doing the same with their Through counterparts
is far more obvious than deepening the hierarchy only under
HasManyAssociation. As well, the current inheritance tree imports
all of the code from association_collection.rb and
has_many_association.rb as well as hash_many_through_association.rb
into has_one_through_association.rb. Moving
HasOneThroughAssociation up the inheritance hierarchy to its proper
place removes a lot of inherited cruft that can only cause
complication (for instance, it made &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/1643-association-proxies-should-correctly-respond-to-method-defined-via-method_missing&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/1643-associat...&lt;/a&gt;
unnecessarily difficult) and confuse programmers who interrogate
the HasOneThroughAssociation class for its capabilities.&lt;/p&gt;
&lt;p&gt;5) All of this is in addition to my argument that the current
implementation is a fundamental misuse of inheritance. This is not
an esoteric argument, the concept of encapsulation over inheritance
for sharing of implementation is well worn, baked into Liskov
Substitutability, permeating Design Patterns, advocated regularly
by the likes of Dave Thomas, etc. It's been proven enough times to
matter that it makes code easier to understand, easier to change,
and more resilient to defects. Ignore that at your peril, I
suppose.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-13T16:13:42+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch refactoring</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-05-13T16:13:45+01:00</updated-at>
      <user-id type="integer">29892</user-id>
      <version type="integer">21</version>
      <user-name>Adam Milligan</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>+1

Yes, please apply this patch. I occasionally delve deep into the association code, but always with enough intervening time to forget the details. It's no fun and anything that makes the code clearer and easier to understand is a good  thing in my book.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;Yes, please apply this patch. I occasionally delve deep into the
association code, but always with enough intervening time to forget
the details. It's no fun and anything that makes the code clearer
and easier to understand is a good thing in my book.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-13T22:59:10+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations has_one_through patch refactoring</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-05-13T22:59:15+01:00</updated-at>
      <user-id type="integer">18670</user-id>
      <version type="integer">22</version>
      <user-name>Michael Schuerig</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm sorry if my last message seems rude. I am not in favor of patches which *only* satisfy some syntactical fetish of a few. But after a quick look through your last message, I think someone else should evaluate your patch. I guess Koz is probably the guy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm sorry if my last message seems rude. I am not in favor of
patches which &lt;em&gt;only&lt;/em&gt; satisfy some syntactical fetish of a
few. But after a quick look through your last message, I think
someone else should evaluate your patch. I guess Koz is probably
the guy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-20T16:03:08+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:state: wontfix
:assigned_user: 1366
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations has_one_through patch refactoring</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-05-20T16:03:11+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">23</version>
      <user-name>Pratik</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Jeremy actually took a question on this at railsconf, so he's the guy.

I'm +1 on it so long as we're not needlessly breaking plugins.  We have to be careful to weigh the cost of plugin breakage against the benefits of clearer code.

If it's a clear win here, then let's go for it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jeremy actually took a question on this at railsconf, so he's
the guy.&lt;/p&gt;
&lt;p&gt;I'm +1 on it so long as we're not needlessly breaking plugins.
We have to be careful to weigh the cost of plugin breakage against
the benefits of clearer code.&lt;/p&gt;
&lt;p&gt;If it's a clear win here, then let's go for it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-21T02:34:52+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
:assigned_user: 141
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord associations has_one_through patch refactoring</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-05-21T02:34:55+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">24</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [54a5446641e4386285231385700b95a223931bff]) HasOneThroughAssociation still shouldn't derive from HasManyThroughAssociation.

[#1642 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/54a5446641e4386285231385700b95a223931bff</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/54a5446641e4386285231385700b95a223931bff&quot;
title=
&quot;Changeset [54a5446641e4386285231385700b95a223931bff]&quot;&gt;[54a5446641e4386285231385700b95a223931bff]&lt;/a&gt;)
HasOneThroughAssociation still shouldn't derive from
HasManyThroughAssociation.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/1642&quot; title=
&quot;Ticket #1642&quot;&gt;#1642&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/54a5446641e4386285231385700b95a223931bff&quot;&gt;
http://github.com/rails/rails/commit/54a5446641e4386285231385700b95...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-12T21:54:26+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord associations has_one_through patch refactoring</tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2009-06-12T21:54:26+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">25</version>
      <user-name>Repository</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T22:14:54+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord associations has_one_through patch refactoring
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2010-10-09T22:14:55+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">27</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-12T10:17:08+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: scaffolding
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2010-10-12T10:17:11+01:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">29</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-13T06:25:21+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2010-10-13T06:25:23+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">31</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:29+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2010-10-15T23:01:29+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">32</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Chopard Replica.aspx&quot;&gt;Ladies Chopard Replica&lt;/a&gt;has the soft pliable skin of the sheep facing out as &lt;a href=&quot;http://www.egacn.com/Watches-Mens Hublot Replica.aspx&quot;&gt;Mens Hublot Replica&lt;/a&gt; has the woollen part of the skin facing in. This &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Hublot Replica.aspx&quot;&gt;Ladies Hublot Replica&lt;/a&gt; results in a soft outer or exterior skin to the &lt;a href=&quot;http://www.egacn.com/Watches-Mens IWC Replica.aspx&quot;&gt;Mens IWC Replica&lt;/a&gt; that means that &lt;a href=&quot;http://www.egacn.com/Watches-Ladies IWC Replica.aspx&quot;&gt;Ladies IWC Replica&lt;/a&gt;can be a damageUGG&lt;a href=&quot;http://www.egacn.com/Watches-Mens Patek Philippe Replica.aspx&quot;&gt;Mens Patek Philippe Replica&lt;/a&gt; and wear when used in wet weather or inclement, dirty or muddy conditions. The&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Patek Philippe Replica.aspx&quot;&gt;Ladies Patek Philippe Replica&lt;/a&gt;not the most hard wearing of &lt;a href=&quot;http://www.egacn.com/Watches-Mens Audemars Piguet Replica.aspx&quot;&gt;Mens Audemars Piguet Replica&lt;/a&gt;, and so wearers of&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Audemars Piguet Replica.aspx&quot;&gt;Ladies Audemars Piguet Replica&lt;/a&gt; quickly that they need to use some &lt;a href=&quot;http://www.egacn.com/Watches-watches large women.aspx&quot;&gt;large women&lt;/a&gt;when selecting which day to wear their &lt;a href=&quot;http://www.egacn.com/Watches-deals on mens watches.aspx&quot;&gt;deals on mens watches&lt;/a&gt;.
The &lt;a href=&quot;http://www.egacn.com/Watches-omega automatic watches.aspx&quot;&gt;omega automatic watches&lt;/a&gt; is usually sewn onto a plastic sole,&lt;a href=&quot;http://www.egacn.com/Watches-discount designer watches women.aspx&quot;&gt;discount designer watches women&lt;/a&gt;and so the &lt;a href=&quot;http://www.egacn.com/Watches-tag carrera watches manufacturers.aspx&quot;&gt;tag carrera watches manufacturers&lt;/a&gt; is not entirely waterproof. Water can enter around the sole, and although &lt;a href=&quot;http://www.egacn.com/Watches-ulysse nardin marine chronograph w.aspx&quot;&gt;ulysse nardin marine chronograph w&lt;/a&gt; is possible to buy&lt;a href=&quot;http://www.egacn.com/Watches-inexpensive wrist watches.aspx&quot;&gt;inexpensive wrist watches&lt;/a&gt; waterproofing &lt;a href=&quot;http://www.egacn.com/Watches-cheap wrist watches.aspx&quot;&gt;cheap wrist watches&lt;/a&gt;is not a total solution. If you own a pair of Ugg Sale it&#8217;s better to treat your &lt;a href=&quot;http://www.egacn.com/Watches-discount wrist watches.aspx&quot;&gt;discount wrist watches&lt;/a&gt;care and respect and understand that even the best &lt;a href=&quot;http://www.egacn.com/Watches-omega watches price list.aspx&quot;&gt;omega watches price list&lt;/a&gt; are not ideal for hard outdoor get dirty quite quickly if &lt;a href=&quot;http://www.egacn.com/Watches-stainless steel mens watches.aspx&quot;&gt;stainless steel mens watches&lt;/a&gt;too harshly.Despite the comfort&lt;a href=&quot;http://www.egacn.com/Watches-stainless steel womens watches.aspx&quot;&gt;stainless steel womens watches&lt;/a&gt;, many people will still not wear these &lt;a href=&quot;http://www.egacn.com/Watches-iwc watches replica.aspx&quot;&gt;iwc watches replica&lt;/a&gt;because of their &lt;a href=&quot;http://www.egacn.com/Watches-Cartier gentle men watches.aspx&quot;&gt;Cartier gentle men watches&lt;/a&gt;. But &lt;a href=&quot;http://www.egacn.com/Watches-discount zenith watches.aspx&quot;&gt;discount zenith watches&lt;/a&gt; now come in a variety of &lt;a href=&quot;http://www.egacn.com/Watches-chinese mechanical watches.aspx&quot;&gt;chinese mechanical watches&lt;/a&gt;, sizes and colors &lt;a href=&quot;http://www.egacn.com/Watches-top brand watches.aspx&quot;&gt;top brand watches&lt;/a&gt; and can generally be incorporated in any kind of apparel you on wearing. Typically since these &lt;a href=&quot;http://www.egacn.com/Watches-most expensive women watches.aspx&quot;&gt;most expensive women watches&lt;/a&gt; are usually worn in the winter for thermal insulation, you can wear any kind of Ski wear or even &lt;a href=&quot;http://www.egacn.com/Watches-brand name watches women.aspx&quot;&gt;brand name watches women&lt;/a&gt;.
Those who want to become most beautiful in the world should try them. Just ones can make you different. Girls who want to grab your boyfriends's heart is necessary to use&lt;a href=&quot;http://www.egacn.com/Watches-designer watches women.aspx&quot;&gt;designer watches women&lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Chopard%20Replica.aspx&quot;&gt;Ladies
Chopard Replica&lt;/a&gt;has the soft pliable skin of the sheep facing
out as &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Hublot%20Replica.aspx&quot;&gt;Mens
Hublot Replica&lt;/a&gt; has the woollen part of the skin facing in. This
&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Hublot%20Replica.aspx&quot;&gt;Ladies
Hublot Replica&lt;/a&gt; results in a soft outer or exterior skin to the
&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20IWC%20Replica.aspx&quot;&gt;Mens IWC
Replica&lt;/a&gt; that means that &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20IWC%20Replica.aspx&quot;&gt;Ladies
IWC Replica&lt;/a&gt;can be a damageUGG&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Patek%20Philippe%20Replica.aspx&quot;&gt;Mens
Patek Philippe Replica&lt;/a&gt; and wear when used in wet weather or
inclement, dirty or muddy conditions. The&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Patek%20Philippe%20Replica.aspx&quot;&gt;Ladies
Patek Philippe Replica&lt;/a&gt;not the most hard wearing of &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Audemars%20Piguet%20Replica.aspx&quot;&gt;
Mens Audemars Piguet Replica&lt;/a&gt;, and so wearers of&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Audemars%20Piguet%20Replica.aspx&quot;&gt;Ladies
Audemars Piguet Replica&lt;/a&gt; quickly that they need to use some
&lt;a href=
&quot;http://www.egacn.com/Watches-watches%20large%20women.aspx&quot;&gt;large
women&lt;/a&gt;when selecting which day to wear their &lt;a href=
&quot;http://www.egacn.com/Watches-deals%20on%20mens%20watches.aspx&quot;&gt;deals
on mens watches&lt;/a&gt;.&lt;br&gt;
The &lt;a href=
&quot;http://www.egacn.com/Watches-omega%20automatic%20watches.aspx&quot;&gt;omega
automatic watches&lt;/a&gt; is usually sewn onto a plastic sole,&lt;a href=
&quot;http://www.egacn.com/Watches-discount%20designer%20watches%20women.aspx&quot;&gt;discount
designer watches women&lt;/a&gt;and so the &lt;a href=
&quot;http://www.egacn.com/Watches-tag%20carrera%20watches%20manufacturers.aspx&quot;&gt;
tag carrera watches manufacturers&lt;/a&gt; is not entirely waterproof.
Water can enter around the sole, and although &lt;a href=
&quot;http://www.egacn.com/Watches-ulysse%20nardin%20marine%20chronograph%20w.aspx&quot;&gt;
ulysse nardin marine chronograph w&lt;/a&gt; is possible to buy&lt;a href=
&quot;http://www.egacn.com/Watches-inexpensive%20wrist%20watches.aspx&quot;&gt;inexpensive
wrist watches&lt;/a&gt; waterproofing &lt;a href=
&quot;http://www.egacn.com/Watches-cheap%20wrist%20watches.aspx&quot;&gt;cheap
wrist watches&lt;/a&gt;is not a total solution. If you own a pair of Ugg
Sale it&amp;#8217;s better to treat your &lt;a href=
&quot;http://www.egacn.com/Watches-discount%20wrist%20watches.aspx&quot;&gt;discount
wrist watches&lt;/a&gt;care and respect and understand that even the best
&lt;a href=
&quot;http://www.egacn.com/Watches-omega%20watches%20price%20list.aspx&quot;&gt;omega
watches price list&lt;/a&gt; are not ideal for hard outdoor get dirty
quite quickly if &lt;a href=
&quot;http://www.egacn.com/Watches-stainless%20steel%20mens%20watches.aspx&quot;&gt;
stainless steel mens watches&lt;/a&gt;too harshly.Despite the
comfort&lt;a href=
&quot;http://www.egacn.com/Watches-stainless%20steel%20womens%20watches.aspx&quot;&gt;stainless
steel womens watches&lt;/a&gt;, many people will still not wear these
&lt;a href=
&quot;http://www.egacn.com/Watches-iwc%20watches%20replica.aspx&quot;&gt;iwc
watches replica&lt;/a&gt;because of their &lt;a href=
&quot;http://www.egacn.com/Watches-Cartier%20gentle%20men%20watches.aspx&quot;&gt;
Cartier gentle men watches&lt;/a&gt;. But &lt;a href=
&quot;http://www.egacn.com/Watches-discount%20zenith%20watches.aspx&quot;&gt;discount
zenith watches&lt;/a&gt; now come in a variety of &lt;a href=
&quot;http://www.egacn.com/Watches-chinese%20mechanical%20watches.aspx&quot;&gt;chinese
mechanical watches&lt;/a&gt;, sizes and colors &lt;a href=
&quot;http://www.egacn.com/Watches-top%20brand%20watches.aspx&quot;&gt;top brand
watches&lt;/a&gt; and can generally be incorporated in any kind of
apparel you on wearing. Typically since these &lt;a href=
&quot;http://www.egacn.com/Watches-most%20expensive%20women%20watches.aspx&quot;&gt;
most expensive women watches&lt;/a&gt; are usually worn in the winter for
thermal insulation, you can wear any kind of Ski wear or even
&lt;a href=
&quot;http://www.egacn.com/Watches-brand%20name%20watches%20women.aspx&quot;&gt;brand
name watches women&lt;/a&gt;.&lt;br&gt;
Those who want to become most beautiful in the world should try
them. Just ones can make you different. Girls who want to grab your
boyfriends's heart is necessary to use&lt;a href=
&quot;http://www.egacn.com/Watches-designer%20watches%20women.aspx&quot;&gt;designer
watches women&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-25T00:29:48+01:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2010-10-25T03:19:11+01:00</updated-at>
      <user-id type="integer">121592</user-id>
      <version type="integer">33</version>
      <user-name>weifeng</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T08:48:18+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2010-11-08T08:48:24+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">35</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:19:54+00:00</created-at>
      <creator-id type="integer">29892</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">1642</number>
      <permalink>hasonethroughassociation-should-not-be-a-child-of-hasmanythroughassociation</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>HasOneThroughAssociation should not be a child of HasManyThroughAssociation</title>
      <updated-at type="datetime">2011-02-17T06:48:14+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">36</version>
      <user-name>gfh</user-name>
      <creator-name>Adam Milligan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1642</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>decd20a1a28d5013a52c16ee53556fa41f9b65dd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-27T08:16:18+00:00</created-at>
      <filename>has_one_through.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74025</id>
      <size type="integer">18011</size>
      <uploader-id type="integer">29892</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74025/has_one_through.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>301ca3a1c3ce2235796c192754c8694cc563fda7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-05-11T00:34:02+01:00</created-at>
      <filename>has_one_through.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">120882</id>
      <size type="integer">17987</size>
      <uploader-id type="integer">29892</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/120882/has_one_through.patch</url>
    </attachment>
  </attachments>
</ticket>
