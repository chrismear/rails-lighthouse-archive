<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-06-29T21:21:40+01:00</created-at>
  <creator-id type="integer">53520</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2854</number>
  <permalink>activesupportcachememcachestore-connection-to-memcached-becomes-corrupted-with-invalid-expires_in</permalink>
  <priority type="integer">1947</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>ActiveSupport::Cache::MemCacheStore connection to MemCached becomes corrupted with invalid :expires_in</title>
  <updated-at type="datetime">2009-07-02T01:02:30+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>ekolve</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2854</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>If the following code is run the first write succeeds, but the last two calls output an error in the logs:

Cache write: foo
Cache read: foo
Cache write: mynewfoo ({:expires_in=&gt;&quot;Mon Jun 29 13:10:40 -0700 2009&quot;})
MemCacheError (): 
Cache read: foo
MemCacheError ():

The invalid expires_in corrupts the connection to MemCache.  The simplest fix to this would be to call reset on the connection to memcache and retrieve a new connection if a MemCache exception is rescued.


@@@ ruby

cache = ActiveSupport::Cache::MemCacheStore.new(&quot;localhost:11211&quot;)

cache.write(&quot;foo&quot;, &quot;bar&quot;)

puts cache.read(&quot;foo&quot;).inspect # outputs foo

cache.write(&quot;mynewfoo&quot;, &quot;blah&quot;, :expires_in =&gt; 'Mon Jun 29 13:10:40 -0700 2009')

puts cache.read(&quot;foo&quot;).inspect # outputs nil


@@@</original-body>
  <latest-body>If the following code is run the first write succeeds, but the last two calls output an error in the logs:

Cache write: foo
Cache read: foo
Cache write: mynewfoo ({:expires_in=&gt;&quot;Mon Jun 29 13:10:40 -0700 2009&quot;})
MemCacheError (): 
Cache read: foo
MemCacheError ():

The invalid expires_in corrupts the connection to MemCache.  The simplest fix to this would be to call reset on the connection to memcache and retrieve a new connection if a MemCache exception is rescued.


@@@ ruby

cache = ActiveSupport::Cache::MemCacheStore.new(&quot;localhost:11211&quot;)

cache.write(&quot;foo&quot;, &quot;bar&quot;)

puts cache.read(&quot;foo&quot;).inspect # outputs foo

cache.write(&quot;mynewfoo&quot;, &quot;blah&quot;, :expires_in =&gt; 'Mon Jun 29 13:10:40 -0700 2009')

puts cache.read(&quot;foo&quot;).inspect # outputs nil


@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If the following code is run the first write succeeds, but the
last two calls output an error in the logs:&lt;/p&gt;
&lt;p&gt;Cache write: foo Cache read: foo Cache write: mynewfoo
({:expires_in=&amp;gt;&quot;Mon Jun 29 13:10:40 -0700 2009&quot;}) MemCacheError
(): Cache read: foo MemCacheError ():&lt;/p&gt;
&lt;p&gt;The invalid expires_in corrupts the connection to MemCache. The
simplest fix to this would be to call reset on the connection to
memcache and retrieve a new connection if a MemCache exception is
rescued.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;

cache = ActiveSupport::Cache::MemCacheStore.new(&amp;quot;localhost:11211&amp;quot;)

cache.write(&amp;quot;foo&amp;quot;, &amp;quot;bar&amp;quot;)

puts cache.read(&amp;quot;foo&amp;quot;).inspect # outputs foo

cache.write(&amp;quot;mynewfoo&amp;quot;, &amp;quot;blah&amp;quot;, :expires_in =&amp;gt; 'Mon Jun 29 13:10:40 -0700 2009')

puts cache.read(&amp;quot;foo&amp;quot;).inspect # outputs nil


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If the following code is run the first write succeeds, but the last two calls output an error in the logs:

Cache write: foo
Cache read: foo
Cache write: mynewfoo ({:expires_in=&gt;&quot;Mon Jun 29 13:10:40 -0700 2009&quot;})
MemCacheError (): 
Cache read: foo
MemCacheError ():

The invalid expires_in corrupts the connection to MemCache.  The simplest fix to this would be to call reset on the connection to memcache and retrieve a new connection if a MemCache exception is rescued.


@@@ ruby

cache = ActiveSupport::Cache::MemCacheStore.new(&quot;localhost:11211&quot;)

cache.write(&quot;foo&quot;, &quot;bar&quot;)

puts cache.read(&quot;foo&quot;).inspect # outputs foo

cache.write(&quot;mynewfoo&quot;, &quot;blah&quot;, :expires_in =&gt; 'Mon Jun 29 13:10:40 -0700 2009')

puts cache.read(&quot;foo&quot;).inspect # outputs nil


@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;If the following code is run the first write succeeds, but the
last two calls output an error in the logs:&lt;/p&gt;
&lt;p&gt;Cache write: foo&lt;br&gt;
Cache read: foo&lt;br&gt;
Cache write: mynewfoo ({:expires_in=&amp;gt;&quot;Mon Jun 29 13:10:40 -0700
2009&quot;})&lt;br&gt;
MemCacheError ():&lt;br&gt;
Cache read: foo&lt;br&gt;
MemCacheError ():&lt;/p&gt;
&lt;p&gt;The invalid expires_in corrupts the connection to MemCache. The
simplest fix to this would be to call reset on the connection to
memcache and retrieve a new connection if a MemCache exception is
rescued.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
cache = ActiveSupport::Cache::MemCacheStore.new(&quot;localhost:11211&quot;)

cache.write(&quot;foo&quot;, &quot;bar&quot;)

puts cache.read(&quot;foo&quot;).inspect # outputs foo

cache.write(&quot;mynewfoo&quot;, &quot;blah&quot;, :expires_in =&amp;gt; 'Mon Jun 29 13:10:40 -0700 2009')

puts cache.read(&quot;foo&quot;).inspect # outputs nil&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-29T21:21:40+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2854</number>
      <permalink>activesupportcachememcachestore-connection-to-memcached-becomes-corrupted-with-invalid-expires_in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::Cache::MemCacheStore connection to MemCached becomes corrupted with invalid :expires_in</title>
      <updated-at type="datetime">2009-06-29T21:21:41+01:00</updated-at>
      <user-id type="integer">53520</user-id>
      <version type="integer">1</version>
      <user-name>ekolve</user-name>
      <creator-name>ekolve</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2854</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This occurrs in Rails 2.3.2</body>
      <body-html>&lt;div&gt;&lt;p&gt;This occurrs in Rails 2.3.2&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-29T21:22:01+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2854</number>
      <permalink>activesupportcachememcachestore-connection-to-memcached-becomes-corrupted-with-invalid-expires_in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::Cache::MemCacheStore connection to MemCached becomes corrupted with invalid :expires_in</title>
      <updated-at type="datetime">2009-06-29T21:22:06+01:00</updated-at>
      <user-id type="integer">53520</user-id>
      <version type="integer">2</version>
      <user-name>ekolve</user-name>
      <creator-name>ekolve</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2854</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [ee7d4c47e7abf1e5ec8f4d4a1e937cdee5bb8d9c]) Fixes bug where Memcached connections get corrupted when an invalid expire is passed in [#2854 state:resolved]
http://github.com/rails/rails/commit/ee7d4c47e7abf1e5ec8f4d4a1e937cdee5bb8d9c</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/ee7d4c47e7abf1e5ec8f4d4a1e937cdee5bb8d9c&quot;
title=
&quot;Changeset [ee7d4c47e7abf1e5ec8f4d4a1e937cdee5bb8d9c]&quot;&gt;[ee7d4c47e7abf1e5ec8f4d4a1e937cdee5bb8d9c]&lt;/a&gt;)
Fixes bug where Memcached connections get corrupted when an invalid
expire is passed in [&lt;a href=&quot;/projects/8994/tickets/2854&quot; title=
&quot;Ticket #2854&quot;&gt;#2854&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/ee7d4c47e7abf1e5ec8f4d4a1e937cdee5bb8d9c&quot;&gt;
http://github.com/rails/rails/commit/ee7d4c47e7abf1e5ec8f4d4a1e937c...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T01:02:18+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2854</number>
      <permalink>activesupportcachememcachestore-connection-to-memcached-becomes-corrupted-with-invalid-expires_in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::Cache::MemCacheStore connection to MemCached becomes corrupted with invalid :expires_in</title>
      <updated-at type="datetime">2009-07-02T01:02:19+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>ekolve</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2854</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [4d8fd8d33568d8db9fc7a2c0bc2e11ca67c77987]) Fixes bug where Memcached connections get corrupted when an invalid expire is passed in [#2854 state:resolved]
http://github.com/rails/rails/commit/4d8fd8d33568d8db9fc7a2c0bc2e11ca67c77987</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/4d8fd8d33568d8db9fc7a2c0bc2e11ca67c77987&quot;
title=
&quot;Changeset [4d8fd8d33568d8db9fc7a2c0bc2e11ca67c77987]&quot;&gt;[4d8fd8d33568d8db9fc7a2c0bc2e11ca67c77987]&lt;/a&gt;)
Fixes bug where Memcached connections get corrupted when an invalid
expire is passed in [&lt;a href=&quot;/projects/8994/tickets/2854&quot; title=
&quot;Ticket #2854&quot;&gt;#2854&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/4d8fd8d33568d8db9fc7a2c0bc2e11ca67c77987&quot;&gt;
http://github.com/rails/rails/commit/4d8fd8d33568d8db9fc7a2c0bc2e11...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-02T01:02:29+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2854</number>
      <permalink>activesupportcachememcachestore-connection-to-memcached-becomes-corrupted-with-invalid-expires_in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>ActiveSupport::Cache::MemCacheStore connection to MemCached becomes corrupted with invalid :expires_in</title>
      <updated-at type="datetime">2009-07-02T01:02:30+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>ekolve</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2854</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
