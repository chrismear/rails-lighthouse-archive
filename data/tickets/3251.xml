<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-23T17:13:53+01:00</created-at>
  <creator-id type="integer">12464</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3251</number>
  <permalink>dirty-attributes-use-inconsistent-accessors-for-beforeafter</permalink>
  <priority type="integer">149624</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activemodel active_record dirty</tag>
  <title>Dirty attributes use inconsistent accessors for before/after</title>
  <updated-at type="datetime">2011-02-02T19:00:13+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Arya Asemanfar</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3251</url>
  <priority-name nil="true"></priority-name>
  <original-body>The dirty attributes hash accesses the original value using read_attribute and uses __send__(attr) for the current value.

This leads to inconsistencies when an attribute's accessor/writer is overwritten and some sort of serialization is performed before it's put in the attributes hash. The original value will be the serialized value and the current value will be unserialized.</original-body>
  <latest-body>The dirty attributes hash accesses the original value using read_attribute and uses __send__(attr) for the current value.

This leads to inconsistencies when an attribute's accessor/writer is overwritten and some sort of serialization is performed before it's put in the attributes hash. The original value will be the serialized value and the current value will be unserialized.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The dirty attributes hash accesses the original value using
read_attribute and uses &lt;strong&gt;send&lt;/strong&gt;(attr) for the current
value.&lt;/p&gt;
&lt;p&gt;This leads to inconsistencies when an attribute's
accessor/writer is overwritten and some sort of serialization is
performed before it's put in the attributes hash. The original
value will be the serialized value and the current value will be
unserialized.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The dirty attributes hash accesses the original value using read_attribute and uses __send__(attr) for the current value.

This leads to inconsistencies when an attribute's accessor/writer is overwritten and some sort of serialization is performed before it's put in the attributes hash. The original value will be the serialized value and the current value will be unserialized.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The dirty attributes hash accesses the original value using
read_attribute and uses &lt;strong&gt;send&lt;/strong&gt;(attr) for the current
value.&lt;/p&gt;
&lt;p&gt;This leads to inconsistencies when an attribute's
accessor/writer is overwritten and some sort of serialization is
performed before it's put in the attributes hash. The original
value will be the serialized value and the current value will be
unserialized.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-23T17:13:53+01:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3251</number>
      <permalink>dirty-attributes-use-inconsistent-accessors-for-beforeafter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel active_record dirty</tag>
      <title>Dirty attributes use inconsistent accessors for before/after</title>
      <updated-at type="datetime">2009-09-23T17:14:33+01:00</updated-at>
      <user-id type="integer">12464</user-id>
      <version type="integer">1</version>
      <user-name>Arya Asemanfar</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3251</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As far as I'm concerned, this is expected behaviour?  When I access the current value, by calling, say 'this_field', there is an implicit understanding that if I've overwritten the accessor with a serializer or somesuch, that it will use that. If I access the old value, I am not accessing the objects behaviour, but an old record of it's state - I am peeking under the covers, as it were. Just my two cents, but I could see the argument you're making. Just, to me, I understand that when I go to the dirty data, there are simply too many dependencies for the objet to act through the serializer I built (what if the serializer, for instance, draws on another field? Which version of the field should it use, the current or the dirty version?).</body>
      <body-html>&lt;div&gt;&lt;p&gt;As far as I'm concerned, this is expected behaviour? When I
access the current value, by calling, say 'this_field', there is an
implicit understanding that if I've overwritten the accessor with a
serializer or somesuch, that it will use that. If I access the old
value, I am not accessing the objects behaviour, but an old record
of it's state - I am peeking under the covers, as it were. Just my
two cents, but I could see the argument you're making. Just, to me,
I understand that when I go to the dirty data, there are simply too
many dependencies for the objet to act through the serializer I
built (what if the serializer, for instance, draws on another
field? Which version of the field should it use, the current or the
dirty version?).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-24T17:18:13+01:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3251</number>
      <permalink>dirty-attributes-use-inconsistent-accessors-for-beforeafter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel active_record dirty</tag>
      <title>Dirty attributes use inconsistent accessors for before/after</title>
      <updated-at type="datetime">2010-06-24T17:18:18+01:00</updated-at>
      <user-id type="integer">50736</user-id>
      <version type="integer">2</version>
      <user-name>Jason Gignac</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3251</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can understand not wanting to have the old value be in the unserialized form, but why can't the new value be the raw value as well?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can understand not wanting to have the old value be in the
unserialized form, but why can't the new value be the raw value as
well?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-24T17:26:01+01:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3251</number>
      <permalink>dirty-attributes-use-inconsistent-accessors-for-beforeafter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel active_record dirty</tag>
      <title>Dirty attributes use inconsistent accessors for before/after</title>
      <updated-at type="datetime">2010-06-24T17:26:09+01:00</updated-at>
      <user-id type="integer">12464</user-id>
      <version type="integer">3</version>
      <user-name>Arya Asemanfar</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3251</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:01:46+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3251</number>
      <permalink>dirty-attributes-use-inconsistent-accessors-for-beforeafter</permalink>
      <priority type="integer">149624</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel active_record dirty</tag>
      <title>Dirty attributes use inconsistent accessors for before/after</title>
      <updated-at type="datetime">2011-02-02T19:00:13+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3251</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:01:47+00:00</created-at>
      <creator-id type="integer">12464</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3251</number>
      <permalink>dirty-attributes-use-inconsistent-accessors-for-beforeafter</permalink>
      <priority type="integer">149624</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activemodel active_record dirty</tag>
      <title>Dirty attributes use inconsistent accessors for before/after</title>
      <updated-at type="datetime">2011-02-02T19:00:08+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Arya Asemanfar</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3251</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
