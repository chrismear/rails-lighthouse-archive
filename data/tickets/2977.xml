<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-20T08:07:20+01:00</created-at>
  <creator-id type="integer">10460</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2977</number>
  <permalink>has_one-through-preload-drops-conditions</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>2.3.3 :include activerecord bug has_one preload through</tag>
  <title>has_one :through preload drops conditions</title>
  <updated-at type="datetime">2010-07-20T08:07:20+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">3</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Will Bryant</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2977</url>
  <priority-name nil="true"></priority-name>
  <original-body>If I have:

@@@ ruby
class Customer
  has_one  :active_debit_balance_event, :through =&gt; :consumers, :source =&gt; :events, :class_name =&gt; 'Event',
    :conditions =&gt; {:events =&gt; {:active =&gt; true, :type =&gt; 'DebitBalanceEvent'}}
end
@@@

Then Customer.find(370).active_debit_balance_event correctly uses:

@@@ sql
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
@@@

However if I preload using Customer.find(370, :include =&gt; :active_debit_balance_event) then instead we see:

@@@ sql
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
@@@

Note that there are no conditions on the events query.  The resulting loaded has_one association actually returns a collection (looks like an array - ie. like a has_many).</original-body>
  <latest-body>If I have:

@@@ ruby
class Customer
  has_one  :active_debit_balance_event, :through =&gt; :consumers, :source =&gt; :events, :class_name =&gt; 'Event',
    :conditions =&gt; {:events =&gt; {:active =&gt; true, :type =&gt; 'DebitBalanceEvent'}}
end
@@@

Then Customer.find(370).active_debit_balance_event correctly uses:

@@@ sql
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
@@@

However if I preload using Customer.find(370, :include =&gt; :active_debit_balance_event) then instead we see:

@@@ sql
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
@@@

Note that there are no conditions on the events query.  The resulting loaded has_one association actually returns a collection (looks like an array - ie. like a has_many).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If I have:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Customer
  has_one  :active_debit_balance_event, :through =&amp;gt; :consumers, :source =&amp;gt; :events, :class_name =&amp;gt; 'Event',
    :conditions =&amp;gt; {:events =&amp;gt; {:active =&amp;gt; true, :type =&amp;gt; 'DebitBalanceEvent'}}
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then Customer.find(370).active_debit_balance_event correctly
uses:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However if I preload using Customer.find(370, :include =&amp;gt;
:active_debit_balance_event) then instead we see:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that there are no conditions on the events query. The
resulting loaded has_one association actually returns a collection
(looks like an array - ie. like a has_many).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If I have:

@@@ ruby
class Customer
  has_one  :active_debit_balance_event, :through =&gt; :consumers, :source =&gt; :events, :class_name =&gt; 'Event',
    :conditions =&gt; {:events =&gt; {:active =&gt; true, :type =&gt; 'DebitBalanceEvent'}}
end
@@@

Then Customer.find(370).active_debit_balance_event correctly uses:

@@@ sql
Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1))) 
@@@

However if I preload using Customer.find(370, :include =&gt; :active_debit_balance_event) then instead we see:

@@@ sql
Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC
@@@

Note that there are no conditions on the events query.  The resulting loaded has_one association actually returns a collection (looks like an array - ie. like a has_many).</body>
      <body-html>&lt;div&gt;&lt;p&gt;If I have:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Customer
  has_one  :active_debit_balance_event, :through =&amp;gt; :consumers, :source =&amp;gt; :events, :class_name =&amp;gt; 'Event',
    :conditions =&amp;gt; {:events =&amp;gt; {:active =&amp;gt; true, :type =&amp;gt; 'DebitBalanceEvent'}}
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then Customer.find(370).active_debit_balance_event correctly
uses:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;Customer Load (0.6ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Event Load (5.7ms)   SELECT `events`.* FROM `events` INNER JOIN `consumers` ON `events`.consumer_id = `consumers`.id WHERE ((`consumers`.customer_id = 370) AND ((`events`.`type` = 'DebitBalanceEvent' AND `events`.`active` = 1)))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However if I preload using Customer.find(370, :include =&amp;gt;
:active_debit_balance_event) then instead we see:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;Customer Load (0.5ms)   SELECT * FROM `customers` WHERE (`customers`.`id` = 370) 
Consumer Load (0.6ms)   SELECT `consumers`.* FROM `consumers` WHERE (`consumers`.customer_id = 370) ORDER BY start_date desc
Event Load (27.3ms)   SELECT `events`.* FROM `events` WHERE (`events`.consumer_id = 377) ORDER BY created_at DESC&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that there are no conditions on the events query. The
resulting loaded has_one association actually returns a collection
(looks like an array - ie. like a has_many).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-31T05:25:54+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2977</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2009-07-31T05:25:58+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">1</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2977</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hmm, this got double-posted for some reason - should be just ticket 2976.  Probably my fault, could someone with permissions please close?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hmm, this got double-posted for some reason - should be just
ticket 2976. Probably my fault, could someone with permissions
please close?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-31T05:57:58+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2977</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2009-07-31T05:58:01+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">2</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2977</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicate of #2976</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicate of &lt;a href=&quot;/projects/8994/tickets/2976&quot; title=
&quot;Ticket #2976&quot;&gt;#2976&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-31T11:54:47+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2977</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2009-07-31T11:54:52+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2977</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>adge then &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/a74350-c5-replica-952.html&quot;&gt;A74350-C5 replica&lt;/a&gt;&lt;/b&gt; incredibly that the aberration &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;chanel replica Watch&lt;/a&gt;&lt;/b&gt; is in fact help &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches Sale&lt;/a&gt;&lt;/b&gt; the fee. At www.imitatewatch.com, &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; the replicas provided conceive &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;quality replica Watch&lt;/a&gt;&lt;/b&gt; approximating indistinguishable differences that, &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-swiss-watches.html&quot;&gt;quality replica Swiss&lt;/a&gt;&lt;/b&gt; whereas the fee offered, &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/81180-000j-9118-replica-1645.html&quot;&gt;Patrimony 81180.000J-9118 replica&lt;/a&gt;&lt;/b&gt; ace is actually no &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;chanel replica watches sale&lt;/a&gt;&lt;/b&gt; grill which to converge. &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/2710-st-20001-replica-1522.html&quot;&gt;2710-ST-20001 replica sale&lt;/a&gt;&lt;/b&gt; Unless the engage in &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;chanel replica Watch sale&lt;/a&gt;&lt;/b&gt; wearer is a ply specialist, or someone</body>
      <body-html>&lt;div&gt;&lt;p&gt;adge then &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/a74350-c5-replica-952.html&quot;&gt;
A74350-C5 replica&lt;/a&gt;&lt;/b&gt; incredibly that the aberration
&lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;chanel replica
Watch&lt;/a&gt;&lt;/b&gt; is in fact help &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches Sale&lt;/a&gt;&lt;/b&gt; the
fee. At &lt;a href=
&quot;http://www.imitatewatch.com&quot;&gt;www.imitatewatch.com&lt;/a&gt;, &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; the
replicas provided conceive &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;quality replica Watch&lt;/a&gt;&lt;/b&gt;
approximating indistinguishable differences that, &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-swiss-watches.html&quot;&gt;
quality replica Swiss&lt;/a&gt;&lt;/b&gt; whereas the fee offered, &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/81180-000j-9118-replica-1645.html&quot;&gt;
Patrimony 81180.000J-9118 replica&lt;/a&gt;&lt;/b&gt; ace is actually no
&lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;chanel replica watches
sale&lt;/a&gt;&lt;/b&gt; grill which to converge. &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/2710-st-20001-replica-1522.html&quot;&gt;
2710-ST-20001 replica sale&lt;/a&gt;&lt;/b&gt; Unless the engage in &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;chanel replica Watch sale&lt;/a&gt;&lt;/b&gt;
wearer is a ply specialist, or someone&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-20T07:37:27+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2977</number>
      <permalink>has_one-through-preload-drops-conditions</permalink>
      <priority type="integer">129105</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>2.3.3 :include activerecord bug has_one preload through</tag>
      <title>has_one :through preload drops conditions</title>
      <updated-at type="datetime">2010-07-20T08:07:20+01:00</updated-at>
      <user-id type="integer">107927</user-id>
      <version type="integer">4</version>
      <user-name>a4490302sc</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2977</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
