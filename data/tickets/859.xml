<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-19T12:12:59+01:00</created-at>
  <creator-id type="integer">14288</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">859</number>
  <permalink>initializer-should-load-files-in-parent-directories-before-subdirectories-to-minimize-dependency-pain</permalink>
  <priority type="integer">316</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>dependencies eager_loading patch</tag>
  <title>Initializer should load files in parent directories before subdirectories to minimize dependency pain</title>
  <updated-at type="datetime">2008-08-22T13:09:51+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>Tom Ward</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/859</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>*The problem*

I have the following files:

*app/models/zoo.rb*

@@@ ruby
class Zoo &lt; ActiveRecord::Base
  include HippoManangement
end
@@@

*app/models/zoo/hippo_management.rb*

@@@ ruby
module Zoo::HippoManagement
end
@@@

*What happens*

On starting the application up in some modes (but not all), I get a dependencies error, similar to 'Expected app/models/zoo/hippo_management.rb to define Zoo::HippoManagement'.  This is cause by require_dependency being called on app/models/zoo/hippo_management.rb before app/models/zoo.rb.

The code calling require_dependency is in Rails::Initializer#load_application_classes:

@@@ ruby
def load_application_classes
  if configuration.cache_classes
    configuration.eager_load_paths.each do |load_path|
      matcher = /\A#{Regexp.escape(load_path)}(.*)\.rb\Z/
      Dir.glob(&quot;#{load_path}/**/*.rb&quot;).each do |file|
        require_dependency file.sub(matcher, '\1')
      end
    end
  end
end
@@@

The problem is that the Dir.glob enumerates app/models/zoo/hippo_mangement.rb before app/models/zoo.rb.

*The solution?*

One way to get around this would be to sort the globbed files before requiring them.  Another (far more involved) solution would be to fix the dependencies code so it doesn't fall over in this situation.</original-body>
  <latest-body>*The problem*

I have the following files:

*app/models/zoo.rb*

@@@ ruby
class Zoo &lt; ActiveRecord::Base
  include HippoManangement
end
@@@

*app/models/zoo/hippo_management.rb*

@@@ ruby
module Zoo::HippoManagement
end
@@@

*What happens*

On starting the application up in some modes (but not all), I get a dependencies error, similar to 'Expected app/models/zoo/hippo_management.rb to define Zoo::HippoManagement'.  This is cause by require_dependency being called on app/models/zoo/hippo_management.rb before app/models/zoo.rb.

The code calling require_dependency is in Rails::Initializer#load_application_classes:

@@@ ruby
def load_application_classes
  if configuration.cache_classes
    configuration.eager_load_paths.each do |load_path|
      matcher = /\A#{Regexp.escape(load_path)}(.*)\.rb\Z/
      Dir.glob(&quot;#{load_path}/**/*.rb&quot;).each do |file|
        require_dependency file.sub(matcher, '\1')
      end
    end
  end
end
@@@

The problem is that the Dir.glob enumerates app/models/zoo/hippo_mangement.rb before app/models/zoo.rb.

*The solution?*

One way to get around this would be to sort the globbed files before requiring them.  Another (far more involved) solution would be to fix the dependencies code so it doesn't fall over in this situation.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;&lt;em&gt;The problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I have the following files:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;app/models/zoo.rb&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Zoo &amp;lt; ActiveRecord::Base
  include HippoManangement
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;app/models/zoo/hippo_management.rb&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module Zoo::HippoManagement
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;What happens&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On starting the application up in some modes (but not all), I get a dependencies error, similar to 'Expected app/models/zoo/hippo_management.rb to define Zoo::HippoManagement'.  This is cause by require_dependency being called on app/models/zoo/hippo_management.rb before app/models/zoo.rb.&lt;/p&gt;

&lt;p&gt;The code calling require_dependency is in Rails::Initializer#load_application_classes:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
def load_application_classes
  if configuration.cache_classes
    configuration.eager_load_paths.each do |load_path|
      matcher = /\A#{Regexp.escape(load_path)}(.*)\.rb\Z/
      Dir.glob(&amp;quot;#{load_path}/**/*.rb&amp;quot;).each do |file|
        require_dependency file.sub(matcher, '\1')
      end
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is that the Dir.glob enumerates app/models/zoo/hippo_mangement.rb before app/models/zoo.rb.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The solution?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One way to get around this would be to sort the globbed files before requiring them.  Another (far more involved) solution would be to fix the dependencies code so it doesn't fall over in this situation.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>*The problem*

I have the following files:

*app/models/zoo.rb*

@@@ ruby
class Zoo &lt; ActiveRecord::Base
  include HippoManangement
end
@@@

*app/models/zoo/hippo_management.rb*

@@@ ruby
module Zoo::HippoManagement
end
@@@

*What happens*

On starting the application up in some modes (but not all), I get a dependencies error, similar to 'Expected app/models/zoo/hippo_management.rb to define Zoo::HippoManagement'.  This is cause by require_dependency being called on app/models/zoo/hippo_management.rb before app/models/zoo.rb.

The code calling require_dependency is in Rails::Initializer#load_application_classes:

@@@ ruby
def load_application_classes
  if configuration.cache_classes
    configuration.eager_load_paths.each do |load_path|
      matcher = /\A#{Regexp.escape(load_path)}(.*)\.rb\Z/
      Dir.glob(&quot;#{load_path}/**/*.rb&quot;).each do |file|
        require_dependency file.sub(matcher, '\1')
      end
    end
  end
end
@@@

The problem is that the Dir.glob enumerates app/models/zoo/hippo_mangement.rb before app/models/zoo.rb.

*The solution?*

One way to get around this would be to sort the globbed files before requiring them.  Another (far more involved) solution would be to fix the dependencies code so it doesn't fall over in this situation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;em&gt;The problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I have the following files:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;app/models/zoo.rb&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Zoo &amp;lt; ActiveRecord::Base
  include HippoManangement
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;app/models/zoo/hippo_management.rb&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module Zoo::HippoManagement
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;What happens&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On starting the application up in some modes (but not all), I get a dependencies error, similar to 'Expected app/models/zoo/hippo_management.rb to define Zoo::HippoManagement'.  This is cause by require_dependency being called on app/models/zoo/hippo_management.rb before app/models/zoo.rb.&lt;/p&gt;

&lt;p&gt;The code calling require_dependency is in Rails::Initializer#load_application_classes:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
def load_application_classes
  if configuration.cache_classes
    configuration.eager_load_paths.each do |load_path|
      matcher = /\A#{Regexp.escape(load_path)}(.*)\.rb\Z/
      Dir.glob(&amp;quot;#{load_path}/**/*.rb&amp;quot;).each do |file|
        require_dependency file.sub(matcher, '\1')
      end
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is that the Dir.glob enumerates app/models/zoo/hippo_mangement.rb before app/models/zoo.rb.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The solution?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One way to get around this would be to sort the globbed files before requiring them.  Another (far more involved) solution would be to fix the dependencies code so it doesn't fall over in this situation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-19T12:12:59+01:00</created-at>
      <creator-id type="integer">14288</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">859</number>
      <permalink>initializer-should-load-files-in-parent-directories-before-subdirectories-to-minimize-dependency-pain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>dependencies eager_loading</tag>
      <title>Initializer should load files in parent directories before subdirectories to minimize dependency pain</title>
      <updated-at type="datetime">2008-08-19T12:12:59+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">1</version>
      <user-name>Tom Ward</user-name>
      <creator-name>Tom Ward</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/859</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've written a patch (with tests) which sorts the globbed files.  Having thought about this in some depth, I'm convinced that eager loading should load parents before children.

In my particular situation (using modules to partition behaviour) I'm aware there are alternative solutions (such as Rick's concerned_with) but I believe using modules is not only simpler but more flexible.  In any case, eager loading breaks the concerned_with pattern as it forces all concerns to be loaded, whether declared or not.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've written a patch (with tests) which sorts the globbed files.  Having thought about this in some depth, I'm convinced that eager loading should load parents before children.&lt;/p&gt;

&lt;p&gt;In my particular situation (using modules to partition behaviour) I'm aware there are alternative solutions (such as Rick's concerned_with) but I believe using modules is not only simpler but more flexible.  In any case, eager loading breaks the concerned_with pattern as it forces all concerns to be loaded, whether declared or not.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-19T13:29:11+01:00</created-at>
      <creator-id type="integer">14288</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: dependencies eager_loading
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">859</number>
      <permalink>initializer-should-load-files-in-parent-directories-before-subdirectories-to-minimize-dependency-pain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>dependencies eager_loading patch</tag>
      <title>Initializer should load files in parent directories before subdirectories to minimize dependency pain</title>
      <updated-at type="datetime">2008-08-19T13:29:11+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">2</version>
      <user-name>Tom Ward</user-name>
      <creator-name>Tom Ward</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/859</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>sounds good.
+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;sounds good.
+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-22T09:37:50+01:00</created-at>
      <creator-id type="integer">14288</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">859</number>
      <permalink>initializer-should-load-files-in-parent-directories-before-subdirectories-to-minimize-dependency-pain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>dependencies eager_loading patch</tag>
      <title>Initializer should load files in parent directories before subdirectories to minimize dependency pain</title>
      <updated-at type="datetime">2008-08-22T09:37:50+01:00</updated-at>
      <user-id type="integer">21403</user-id>
      <version type="integer">3</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Tom Ward</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/859</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [89d1c77dd012f087c091e0f23874c582ea4e3703]) Initializer to sort files before eager loading. [#859 state:resolved]

Changed Rails::Initializer to sort files before eager loading them. This ensures that
any files in a parent directory will be loaded before files in a subdirectory of the
'same' name. i.e. zoo.rb will be loaded before zoo/reptile_house.rb

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/89d1c77dd012f087c091e0f23874c582ea4e3703</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [89d1c77dd012f087c091e0f23874c582ea4e3703]) Initializer to sort files before eager loading. [&lt;a href=&quot;/projects/8994/tickets/859&quot; title=&quot;Ticket #859&quot;&gt;#859&lt;/a&gt; state:resolved]&lt;/p&gt;

&lt;p&gt;Changed Rails::Initializer to sort files before eager loading them. This ensures that
any files in a parent directory will be loaded before files in a subdirectory of the
'same' name. i.e. zoo.rb will be loaded before zoo/reptile_house.rb&lt;/p&gt;

&lt;p&gt;Signed-off-by: Pratik Naik &lt;a&gt;&amp;#x70;&amp;#114;&amp;#x61;&amp;#x74;&amp;#105;&amp;#107;&amp;#x6e;&amp;#97;&amp;#x69;&amp;#107;&amp;#x40;&amp;#x67;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/89d1c77dd012f087c091e0f23874c582ea4e3703&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-22T13:09:51+01:00</created-at>
      <creator-id type="integer">14288</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">859</number>
      <permalink>initializer-should-load-files-in-parent-directories-before-subdirectories-to-minimize-dependency-pain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>dependencies eager_loading patch</tag>
      <title>Initializer should load files in parent directories before subdirectories to minimize dependency pain</title>
      <updated-at type="datetime">2008-08-22T13:09:51+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Tom Ward</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/859</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a95d5fd10aba5c1414facf71d0bcd542d8158e95</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-19T13:29:11+01:00</created-at>
      <filename>eager_load_parents_before_children.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">40102</id>
      <size type="integer">3102</size>
      <uploader-id type="integer">14288</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/40102/eager_load_parents_before_children.diff</url>
    </attachment>
  </attachments>
</ticket>
