<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-16T11:03:24+00:00</created-at>
  <creator-id type="integer">124337</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6441</number>
  <permalink>polymorphic-dependent-delete_all-fails-to-delete-rows-with-abstract_class-instances</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>abstract_class &quot;active record&quot; belongs_to_polymorphic_association delete_all dependent has_many polymorphic_association</tag>
  <title>polymorphic :dependent =&gt; :delete_all fails to delete rows with abstract_class instances</title>
  <updated-at type="datetime">2011-02-16T11:20:32+00:00</updated-at>
  <user-id type="integer">124337</user-id>
  <version type="integer">2</version>
  <user-name>Russell Garner</user-name>
  <creator-name>Russell Garner</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6441</url>
  <priority-name nil="true"></priority-name>
  <original-body>If I have a class hierarchy `ContactIndex &lt; Index`, `GuideIndex &lt; Index`, where `Index` is

@@@ ruby
  class Index &lt; ActiveRecord::Base
    has_many :links, :as =&gt; :link_owner, :dependent =&gt; :delete_all
  end
@@@

and `Link` is

@@@ ruby
  class Link &lt; ActiveRecord::Base
    belongs_to :link_owner, :polymorphic =&gt; true
  end
@@@

When I instantiate and save a `GuideIndex`, the `links` table gets a row with a `link_owner_type` of `Index`.  When I subsequently delete the index, the `links` rows are orphaned:

@@@ ruby
  i = GuideIndex.new
  i &lt;&lt; Link.new(:url =&gt; 'http://somewhere')
  i.save    # This creates links row with link_owner_type = 'Index'
  i.destroy # This tries to delete rows with link_owner_type = 'GuideIndex' and finds no rows
@@@

At present, my workaround is this:

@@@ ruby
  class Index &lt; ActiveRecord::Base
    has_many :links, :as =&gt; :link_owner
    before_destroy :delete_links

  private
    def delete_links
      Link.delete_all ['links.link_owner_id = ? AND links.link_owner_type = ?', self.id, 'Index']
    end
  end
@@@</original-body>
  <latest-body>If I have a class hierarchy `ContactIndex &lt; Index`, `GuideIndex &lt; Index`, where `Index` is

@@@ ruby
  class Index &lt; ActiveRecord::Base
    has_many :links, :as =&gt; :link_owner, :dependent =&gt; :delete_all
  end
@@@

and `Link` is

@@@ ruby
  class Link &lt; ActiveRecord::Base
    belongs_to :link_owner, :polymorphic =&gt; true
  end
@@@

When I instantiate and save a `GuideIndex`, the `links` table gets a row with a `link_owner_type` of `Index`.  When I subsequently delete the index, the `links` rows are orphaned:

@@@ ruby
  i = GuideIndex.new
  i &lt;&lt; Link.new(:url =&gt; 'http://somewhere')
  i.save    # This creates links row with link_owner_type = 'Index'
  i.destroy # This tries to delete rows with link_owner_type = 'GuideIndex' and finds no rows
@@@

At present, my workaround is this:

@@@ ruby
  class Index &lt; ActiveRecord::Base
    has_many :links, :as =&gt; :link_owner
    before_destroy :delete_links

  private
    def delete_links
      Link.delete_all ['links.link_owner_id = ? AND links.link_owner_type = ?', self.id, 'Index']
    end
  end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If I have a class hierarchy &lt;code&gt;ContactIndex &amp;lt;
Index&lt;/code&gt;, &lt;code&gt;GuideIndex &amp;lt; Index&lt;/code&gt;, where
&lt;code&gt;Index&lt;/code&gt; is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Index &amp;lt; ActiveRecord::Base
    has_many :links, :as =&amp;gt; :link_owner, :dependent =&amp;gt; :delete_all
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and &lt;code&gt;Link&lt;/code&gt; is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Link &amp;lt; ActiveRecord::Base
    belongs_to :link_owner, :polymorphic =&amp;gt; true
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I instantiate and save a &lt;code&gt;GuideIndex&lt;/code&gt;, the
&lt;code&gt;links&lt;/code&gt; table gets a row with a
&lt;code&gt;link_owner_type&lt;/code&gt; of &lt;code&gt;Index&lt;/code&gt;. When I
subsequently delete the index, the &lt;code&gt;links&lt;/code&gt; rows are
orphaned:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  i = GuideIndex.new
  i &amp;lt;&amp;lt; Link.new(:url =&amp;gt; 'http://somewhere')
  i.save    # This creates links row with link_owner_type = 'Index'
  i.destroy # This tries to delete rows with link_owner_type = 'GuideIndex' and finds no rows&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At present, my workaround is this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Index &amp;lt; ActiveRecord::Base
    has_many :links, :as =&amp;gt; :link_owner
    before_destroy :delete_links

  private
    def delete_links
      Link.delete_all ['links.link_owner_id = ? AND links.link_owner_type = ?', self.id, 'Index']
    end
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If I have a class hierarchy `ContactIndex &lt; Index`, `GuideIndex &lt; Index`, where `Index` is

@@@ ruby
  class Index &lt; ActiveRecord::Base
    has_many :links, :as =&gt; :link_owner, :dependent =&gt; :delete_all
  end
@@@

and `Link` is

@@@ ruby
  class Link &lt; ActiveRecord::Base
    belongs_to :link_owner, :polymorphic =&gt; true
  end
@@@

When I instantiate and save a `GuideIndex`, the `links` table gets a row with a `link_owner_type` of `Index`.  When I subsequently delete the index, the `links` rows are orphaned:

@@@ ruby
  i = GuideIndex.new
  i &lt;&lt; Link.new(:url =&gt; 'http://somewhere')
  i.save    # This creates links row with link_owner_type = 'Index'
  i.destroy # This tries to delete rows with link_owner_type = 'GuideIndex' and finds no rows
@@@

At present, my workaround is this:

@@@ ruby
  class Index &lt; ActiveRecord::Base
    has_many :links, :as =&gt; :link_owner
    before_destroy :delete_links

  private
    def delete_links
      Link.delete_all ['links.link_owner_id = ? AND links.link_owner_type = ?', self.id, 'Index']
    end
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;If I have a class hierarchy &lt;code&gt;ContactIndex &amp;lt;
Index&lt;/code&gt;, &lt;code&gt;GuideIndex &amp;lt; Index&lt;/code&gt;, where
&lt;code&gt;Index&lt;/code&gt; is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Index &amp;lt; ActiveRecord::Base
    has_many :links, :as =&amp;gt; :link_owner, :dependent =&amp;gt; :delete_all
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and &lt;code&gt;Link&lt;/code&gt; is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Link &amp;lt; ActiveRecord::Base
    belongs_to :link_owner, :polymorphic =&amp;gt; true
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I instantiate and save a &lt;code&gt;GuideIndex&lt;/code&gt;, the
&lt;code&gt;links&lt;/code&gt; table gets a row with a
&lt;code&gt;link_owner_type&lt;/code&gt; of &lt;code&gt;Index&lt;/code&gt;. When I
subsequently delete the index, the &lt;code&gt;links&lt;/code&gt; rows are
orphaned:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  i = GuideIndex.new
  i &amp;lt;&amp;lt; Link.new(:url =&amp;gt; 'http://somewhere')
  i.save    # This creates links row with link_owner_type = 'Index'
  i.destroy # This tries to delete rows with link_owner_type = 'GuideIndex' and finds no rows&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At present, my workaround is this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Index &amp;lt; ActiveRecord::Base
    has_many :links, :as =&amp;gt; :link_owner
    before_destroy :delete_links

  private
    def delete_links
      Link.delete_all ['links.link_owner_id = ? AND links.link_owner_type = ?', self.id, 'Index']
    end
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-16T11:03:24+00:00</created-at>
      <creator-id type="integer">124337</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6441</number>
      <permalink>polymorphic-dependent-delete_all-fails-to-delete-rows-with-abstract_class-instances</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>abstract_class &quot;active record&quot; belongs_to_polymorphic_association delete_all dependent has_many polymorphic_association</tag>
      <title>polymorphic :dependent =&gt; :delete_all fails to delete rows with abstract_class instances</title>
      <updated-at type="datetime">2011-02-16T11:03:29+00:00</updated-at>
      <user-id type="integer">124337</user-id>
      <version type="integer">1</version>
      <user-name>Russell Garner</user-name>
      <creator-name>Russell Garner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6441</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(oops - `abstract_class` is not involved here - the title should read STI.  Sorry!)</body>
      <body-html>&lt;div&gt;&lt;p&gt;(oops - &lt;code&gt;abstract_class&lt;/code&gt; is not involved here - the
title should read STI. Sorry!)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-16T11:20:30+00:00</created-at>
      <creator-id type="integer">124337</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6441</number>
      <permalink>polymorphic-dependent-delete_all-fails-to-delete-rows-with-abstract_class-instances</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>abstract_class &quot;active record&quot; belongs_to_polymorphic_association delete_all dependent has_many polymorphic_association</tag>
      <title>polymorphic :dependent =&gt; :delete_all fails to delete rows with abstract_class instances</title>
      <updated-at type="datetime">2011-02-16T11:20:32+00:00</updated-at>
      <user-id type="integer">124337</user-id>
      <version type="integer">2</version>
      <user-name>Russell Garner</user-name>
      <creator-name>Russell Garner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6441</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
