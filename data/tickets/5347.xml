<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-10T15:43:31+01:00</created-at>
  <creator-id type="integer">20869</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5347</number>
  <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
  <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
  <updated-at type="datetime">2010-09-02T11:57:05+01:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">11</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Paul Gideon Dann</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
  <priority-name>Low</priority-name>
  <original-body>I've created a simple test-case to demonstrate the bug I've encountered in a larger project.  I have two models: Project, and Person.  They have a has_and_belongs_to_many association.  The Project model has a default_scope of &quot;order(:title)&quot;.  The second time I try to modify person.projects, I get an AssociationTypeMismatch error, in the form of &quot;Project(#XXXXX) expected, got Project(#XXXXX)&quot;.

I've traced this down to the default_scope call, and it only happens when using the PostgreSQL adaptor (with the pg gem).  The attached test case illustrates the bug in its simplest form.  Create a couple of projects, create a user, and try setting the user's projects a couple of times and you'll soon hit the bug.</original-body>
  <latest-body>I've created a simple test-case to demonstrate the bug I've encountered in a larger project.  I have two models: Project, and Person.  They have a has_and_belongs_to_many association.  The Project model has a default_scope of &quot;order(:title)&quot;.  The second time I try to modify person.projects, I get an AssociationTypeMismatch error, in the form of &quot;Project(#XXXXX) expected, got Project(#XXXXX)&quot;.

I've traced this down to the default_scope call, and it only happens when using the PostgreSQL adaptor (with the pg gem).  The attached test case illustrates the bug in its simplest form.  Create a couple of projects, create a user, and try setting the user's projects a couple of times and you'll soon hit the bug.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've created a simple test-case to demonstrate the bug I've
encountered in a larger project. I have two models: Project, and
Person. They have a has_and_belongs_to_many association. The
Project model has a default_scope of &quot;order(:title)&quot;. The second
time I try to modify person.projects, I get an
AssociationTypeMismatch error, in the form of &quot;Project(#XXXXX)
expected, got Project(#XXXXX)&quot;.&lt;/p&gt;
&lt;p&gt;I've traced this down to the default_scope call, and it only
happens when using the PostgreSQL adaptor (with the pg gem). The
attached test case illustrates the bug in its simplest form. Create
a couple of projects, create a user, and try setting the user's
projects a couple of times and you'll soon hit the bug.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've created a simple test-case to demonstrate the bug I've encountered in a larger project.  I have two models: Project, and Person.  They have a has_and_belongs_to_many association.  The Project model has a default_scope of &quot;order(:title)&quot;.  The second time I try to modify person.projects, I get an AssociationTypeMismatch error, in the form of &quot;Project(#XXXXX) expected, got Project(#XXXXX)&quot;.

I've traced this down to the default_scope call, and it only happens when using the PostgreSQL adaptor (with the pg gem).  The attached test case illustrates the bug in its simplest form.  Create a couple of projects, create a user, and try setting the user's projects a couple of times and you'll soon hit the bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've created a simple test-case to demonstrate the bug I've
encountered in a larger project. I have two models: Project, and
Person. They have a has_and_belongs_to_many association. The
Project model has a default_scope of &quot;order(:title)&quot;. The second
time I try to modify person.projects, I get an
AssociationTypeMismatch error, in the form of &quot;Project(#XXXXX)
expected, got Project(#XXXXX)&quot;.&lt;/p&gt;
&lt;p&gt;I've traced this down to the default_scope call, and it only
happens when using the PostgreSQL adaptor (with the pg gem). The
attached test case illustrates the bug in its simplest form. Create
a couple of projects, create a user, and try setting the user's
projects a couple of times and you'll soon hit the bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T15:43:31+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord-store postgresql rails3rc</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-08-10T15:43:32+01:00</updated-at>
      <user-id type="integer">20869</user-id>
      <version type="integer">1</version>
      <user-name>Paul Gideon Dann</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This seems like a really serious bug.  It seems as though the PostgreSQL adaptor is generally in a bad state, really.  *Please* look into this pretty soon; I'm worried that 3.0 will be released with Postgres as a second-class citizen :(</body>
      <body-html>&lt;div&gt;&lt;p&gt;This seems like a really serious bug. It seems as though the
PostgreSQL adaptor is generally in a bad state, really.
&lt;em&gt;Please&lt;/em&gt; look into this pretty soon; I'm worried that 3.0
will be released with Postgres as a second-class citizen :(&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T10:06:56+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord-store postgresql rails3rc
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord-store critical postgresql rails3rc</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-08-11T10:06:57+01:00</updated-at>
      <user-id type="integer">20869</user-id>
      <version type="integer">2</version>
      <user-name>Paul Gideon Dann</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've encountered the same issue with sqlite3 and rails3rc</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've encountered the same issue with sqlite3 and rails3rc&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T14:03:36+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord-store critical postgresql rails3rc
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord-store critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-08-11T14:03:39+01:00</updated-at>
      <user-id type="integer">111143</user-id>
      <version type="integer">3</version>
      <user-name>Dirk Neumann</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yes, you're quite right---I can reproduce it using the testcase above with Sqlite3 as well.  I'd guess that means the bug isn't related to the database adapter then.  Maybe Arel?  More likely something else in ActiveRecord.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, you're quite right---I can reproduce it using the testcase
above with Sqlite3 as well. I'd guess that means the bug isn't
related to the database adapter then. Maybe Arel? More likely
something else in ActiveRecord.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T14:37:11+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord-store critical postgresql rails3rc sqlite_adapter
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-08-11T14:37:15+01:00</updated-at>
      <user-id type="integer">20869</user-id>
      <version type="integer">4</version>
      <user-name>Paul Gideon Dann</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>**+1**

I thought I was going crazy. I've been seeing this for the last few weeks in the exact scenario you're describing.

Posting a form for model A with nested fields referencing model B which A associates with through habtm, using pg, and model B has a default_scope set fails with `ActiveRecord::AssociationTypeMismatch B(#1234567) expected, got B(#7654321)`.

Turning off the default_scope on model B took care of the issue.

Example code at: [http://gist.github.com/521545](http://gist.github.com/521545)</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;+1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I thought I was going crazy. I've been seeing this for the last
few weeks in the exact scenario you're describing.&lt;/p&gt;
&lt;p&gt;Posting a form for model A with nested fields referencing model
B which A associates with through habtm, using pg, and model B has
a default_scope set fails with
&lt;code&gt;ActiveRecord::AssociationTypeMismatch B(#1234567) expected,
got B(#7654321)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Turning off the default_scope on model B took care of the
issue.&lt;/p&gt;
&lt;p&gt;Example code at: &lt;a href=
&quot;http://gist.github.com/521545&quot;&gt;http://gist.github.com/521545&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T20:30:54+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-08-12T20:30:55+01:00</updated-at>
      <user-id type="integer">107067</user-id>
      <version type="integer">5</version>
      <user-name>Adam Bachman</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't understand---how can Rails 3.0 ship with this bug?  We haven't even heard anything from a developer regarding this :s  It would be nice to know what the plan is: will someone be able to look into this any time soon?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't understand---how can Rails 3.0 ship with this bug? We
haven't even heard anything from a developer regarding this :s It
would be nice to know what the plan is: will someone be able to
look into this any time soon?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T11:15:45+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-08-31T11:15:48+01:00</updated-at>
      <user-id type="integer">20869</user-id>
      <version type="integer">6</version>
      <user-name>Paul Gideon Dann</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Can someone develop a test case which fails if I run with pg. You can run ActiveRecord tests with pg using command rake test_postgresql . Once we have a failing test I can look into this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can someone develop a test case which fails if I run with pg.
You can run ActiveRecord tests with pg using command rake
test_postgresql . Once we have a failing test I can look into this
issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-31T15:10:32+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-08-31T15:10:35+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've had a shot at it developing that testcase, but the bug itself is clearly caused by a weird interaction involving several parts of the stack, and I can't replicate the problem on the console or in activerecord tests.  Anyway, I have already provided a *very* simple test app that demonstrates this problem.  I'm trying to track down the bug myself, but I just don't know enough about Rails internals.  Someone who knows more about the whole stack would probably find a solution to this issue in a trice.

Honestly, that test app demonstrates the problem very well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've had a shot at it developing that testcase, but the bug
itself is clearly caused by a weird interaction involving several
parts of the stack, and I can't replicate the problem on the
console or in activerecord tests. Anyway, I have already provided a
&lt;em&gt;very&lt;/em&gt; simple test app that demonstrates this problem. I'm
trying to track down the bug myself, but I just don't know enough
about Rails internals. Someone who knows more about the whole stack
would probably find a solution to this issue in a trice.&lt;/p&gt;
&lt;p&gt;Honestly, that test app demonstrates the problem very well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T16:52:12+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-09-01T16:52:14+01:00</updated-at>
      <user-id type="integer">20869</user-id>
      <version type="integer">8</version>
      <user-name>Paul Gideon Dann</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Paul can you try suggestion mentioned here https://rails.lighthouseapp.com/projects/8994/tickets/5497-default-scope-and-class-reloading#ticket-5497-4 

Not sure but looks like that might help.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Paul can you try suggestion mentioned here &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/5497-default-scope-and-class-reloading#ticket-5497-4&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/5497-default-...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Not sure but looks like that might help.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T21:38:09+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-09-01T21:38:13+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">9</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Neeraj =&gt; YES!  The fix committed in that ticket has also fixed this problem.  The commit is present on the rails 3-0-stable branch, so I'm guessing it'll be available in Rails 3.0.1, right?  When can we expect the release?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Neeraj =&amp;gt; YES! The fix committed in that ticket has also
fixed this problem. The commit is present on the rails 3-0-stable
branch, so I'm guessing it'll be available in Rails 3.0.1, right?
When can we expect the release?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T10:22:30+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-09-02T10:22:32+01:00</updated-at>
      <user-id type="integer">20869</user-id>
      <version type="integer">10</version>
      <user-name>Paul Gideon Dann</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-02T11:57:03+01:00</created-at>
      <creator-id type="integer">20869</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5347</number>
      <permalink>default_scope-order-postgresql-and-has_and_belongs_to_many-cause-associationtypemismatch-exception</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord-store &quot;arel rails3&quot; critical postgresql rails3rc sqlite_adapter</tag>
      <title>default_scope order(...), PostgreSQL, and has_and_belongs_to_many cause AssociationTypeMismatch exception</title>
      <updated-at type="datetime">2010-09-02T11:57:05+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Paul Gideon Dann</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5347</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1c95ca334b1b0856a20e32351adf18465017da7a</code>
      <content-type>application/postscript</content-type>
      <created-at type="datetime">2010-08-10T15:43:31+01:00</created-at>
      <filename>default-scope-testtar.gz</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">621938</id>
      <size type="integer">97604</size>
      <uploader-id type="integer">20869</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/621938/default-scope-testtar.gz</url>
    </attachment>
  </attachments>
</ticket>
