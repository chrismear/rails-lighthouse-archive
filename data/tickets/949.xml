<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-01T08:41:49+01:00</created-at>
  <creator-id type="integer">30589</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">949</number>
  <permalink>memcache-session-does-gets-twice</permalink>
  <priority type="integer">394</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>session</tag>
  <title>Memcache session does gets twice</title>
  <updated-at type="datetime">2008-12-15T21:03:17+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Peter Liu</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/949</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When a new rails application is created and the session_store is configured for memcache by:

@@@ ruby
  #config/environment.rb
  config.action_controller.session_store = :mem_cache_store
@@@

The session is being request twice from the memcached server.  I ran memcached with the -vv option to get a detailed transcript on what transactions are taking place.  I then created a simple Hello World controller.  When I run the action, this is what's showing on the console.

@@@
&lt;22 new client connection
&lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 END
&lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 END
&lt;22 set session:f963e5b1ad3a5bd0b1d622c0b803a370 0 0 61
&gt;22 STORED
&lt;22 connection closed.
@@@

Tried putting a delay on the controller by sleeping for 10 seconds and it's showing that it's getting the key twice, wait for 10 seconds, then setting the key.  I searched everywhere to find out why it's reading the keys twice on google, the gem source code, and on the ticketing system but no luck.  It seems it's an extra read for no reason.

This may be related to #92

I'm running rails-2.1.0, memcache_client-1.5.0 on OS X Leopard.  I tried both in development mode and production mode.</original-body>
  <latest-body>When a new rails application is created and the session_store is configured for memcache by:

@@@ ruby
  #config/environment.rb
  config.action_controller.session_store = :mem_cache_store
@@@

The session is being request twice from the memcached server.  I ran memcached with the -vv option to get a detailed transcript on what transactions are taking place.  I then created a simple Hello World controller.  When I run the action, this is what's showing on the console.

@@@
&lt;22 new client connection
&lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 END
&lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 END
&lt;22 set session:f963e5b1ad3a5bd0b1d622c0b803a370 0 0 61
&gt;22 STORED
&lt;22 connection closed.
@@@

Tried putting a delay on the controller by sleeping for 10 seconds and it's showing that it's getting the key twice, wait for 10 seconds, then setting the key.  I searched everywhere to find out why it's reading the keys twice on google, the gem source code, and on the ticketing system but no luck.  It seems it's an extra read for no reason.

This may be related to #92

I'm running rails-2.1.0, memcache_client-1.5.0 on OS X Leopard.  I tried both in development mode and production mode.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When a new rails application is created and the session_store is
configured for memcache by:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  #config/environment.rb
  config.action_controller.session_store = :mem_cache_store
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The session is being request twice from the memcached server. I
ran memcached with the -vv option to get a detailed transcript on
what transactions are taking place. I then created a simple Hello
World controller. When I run the action, this is what's showing on
the console.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;lt;22 new client connection
&amp;lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 END
&amp;lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 END
&amp;lt;22 set session:f963e5b1ad3a5bd0b1d622c0b803a370 0 0 61
&amp;gt;22 STORED
&amp;lt;22 connection closed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tried putting a delay on the controller by sleeping for 10
seconds and it's showing that it's getting the key twice, wait for
10 seconds, then setting the key. I searched everywhere to find out
why it's reading the keys twice on google, the gem source code, and
on the ticketing system but no luck. It seems it's an extra read
for no reason.&lt;/p&gt;
&lt;p&gt;This may be related to &lt;a href=&quot;/projects/8994/tickets/92&quot; title=&quot;Ticket #92&quot;&gt;#92&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm running rails-2.1.0, memcache_client-1.5.0 on OS X Leopard.
I tried both in development mode and production mode.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When a new rails application is created and the session_store is configured for memcache by:

@@@ ruby
  #config/environment.rb
  config.action_controller.session_store = :mem_cache_store
@@@

The session is being request twice from the memcached server.  I ran memcached with the -vv option to get a detailed transcript on what transactions are taking place.  I then created a simple Hello World controller.  When I run the action, this is what's showing on the console.

@@@
&lt;22 new client connection
&lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 END
&lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&gt;22 END
&lt;22 set session:f963e5b1ad3a5bd0b1d622c0b803a370 0 0 61
&gt;22 STORED
&lt;22 connection closed.
@@@

Tried putting a delay on the controller by sleeping for 10 seconds and it's showing that it's getting the key twice, wait for 10 seconds, then setting the key.  I searched everywhere to find out why it's reading the keys twice on google, the gem source code, and on the ticketing system but no luck.  It seems it's an extra read for no reason.

This may be related to #92

I'm running rails-2.1.0, memcache_client-1.5.0 on OS X Leopard.  I tried both in development mode and production mode.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When a new rails application is created and the session_store is
configured for memcache by:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  #config/environment.rb
  config.action_controller.session_store = :mem_cache_store
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The session is being request twice from the memcached server. I
ran memcached with the -vv option to get a detailed transcript on
what transactions are taking place. I then created a simple Hello
World controller. When I run the action, this is what's showing on
the console.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;lt;22 new client connection
&amp;lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 END
&amp;lt;22 get session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 sending key session:f963e5b1ad3a5bd0b1d622c0b803a370
&amp;gt;22 END
&amp;lt;22 set session:f963e5b1ad3a5bd0b1d622c0b803a370 0 0 61
&amp;gt;22 STORED
&amp;lt;22 connection closed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tried putting a delay on the controller by sleeping for 10
seconds and it's showing that it's getting the key twice, wait for
10 seconds, then setting the key. I searched everywhere to find out
why it's reading the keys twice on google, the gem source code, and
on the ticketing system but no luck. It seems it's an extra read
for no reason.&lt;/p&gt;
&lt;p&gt;This may be related to &lt;a href=&quot;/projects/8994/tickets/92&quot; title=&quot;Ticket #92&quot;&gt;#92&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm running rails-2.1.0, memcache_client-1.5.0 on OS X Leopard.
I tried both in development mode and production mode.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-01T08:41:51+01:00</created-at>
      <creator-id type="integer">30589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">949</number>
      <permalink>memcache-session-does-gets-twice</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>session</tag>
      <title>Memcache session does gets twice</title>
      <updated-at type="datetime">2008-09-01T08:41:51+01:00</updated-at>
      <user-id type="integer">30589</user-id>
      <version type="integer">1</version>
      <user-name>Peter Liu</user-name>
      <creator-name>Peter Liu</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/949</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>2.3 sessions will be completely rewritten. Hopefully I've fixed this issue in the new branch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;2.3 sessions will be completely rewritten. Hopefully I've fixed
this issue in the new branch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-15T21:03:13+00:00</created-at>
      <creator-id type="integer">30589</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">949</number>
      <permalink>memcache-session-does-gets-twice</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>session</tag>
      <title>Memcache session does gets twice</title>
      <updated-at type="datetime">2008-12-15T21:03:17+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Peter Liu</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/949</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
