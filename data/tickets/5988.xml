<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-24T05:39:10+00:00</created-at>
  <creator-id type="integer">22245</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5988</number>
  <permalink>belongs_to-and-includes-joins-bug</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>belongs_to and includes() &amp; joins() bug</title>
  <updated-at type="datetime">2011-02-25T00:01:20+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">7</version>
  <user-name>rails</user-name>
  <creator-name>Piotr Chmolowski</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
  <priority-name>Low</priority-name>
  <original-body>Hi,

Calling `SomeModel.includes(:users)` doesn't generate INNER JOIN and throws TypeError:

    class User &lt; ActiveRecord::Base
      has_many :tunes
    end

    class Tune &lt; ActiveRecord::Base
      belongs_to :user
    end

    class HomeController &lt; ApplicationController
      def index
        @tunes = Tune.includes(:users).all
      end
    end

Console output:

    Started GET &quot;/&quot; for 127.0.0.1 at 2010-11-16 21:34:06 +0100
    Processing by HomeController#index as HTML
    Tune Load (0.6ms)  SELECT `tunes`.* FROM `tunes`
    Completed   in 65ms

    TypeError (can't convert nil into Integer):
    app/controllers/home_controller.rb:3:in `index'


When trying to replace `includes` with `join` I'm getting this:

    class HomeController &lt; ApplicationController
      def index
        @tunes = Tune.joins(:user)
        @tunes.each do |t|
          t.user.name
        end
      end
    end

    Tune Load (0.8ms)  SELECT `tunes`.* FROM `tunes` INNER JOIN `users` ON `users`.`id` = `tunes`.`user_id`
    User Load (0.9ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    User Load (0.3ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 2) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1


I'm using Rails 3.0.2 but the problem exists in 3.0.1 too.</original-body>
  <latest-body>Hi,

Calling `SomeModel.includes(:users)` doesn't generate INNER JOIN and throws TypeError:

    class User &lt; ActiveRecord::Base
      has_many :tunes
    end

    class Tune &lt; ActiveRecord::Base
      belongs_to :user
    end

    class HomeController &lt; ApplicationController
      def index
        @tunes = Tune.includes(:users).all
      end
    end

Console output:

    Started GET &quot;/&quot; for 127.0.0.1 at 2010-11-16 21:34:06 +0100
    Processing by HomeController#index as HTML
    Tune Load (0.6ms)  SELECT `tunes`.* FROM `tunes`
    Completed   in 65ms

    TypeError (can't convert nil into Integer):
    app/controllers/home_controller.rb:3:in `index'


When trying to replace `includes` with `join` I'm getting this:

    class HomeController &lt; ApplicationController
      def index
        @tunes = Tune.joins(:user)
        @tunes.each do |t|
          t.user.name
        end
      end
    end

    Tune Load (0.8ms)  SELECT `tunes`.* FROM `tunes` INNER JOIN `users` ON `users`.`id` = `tunes`.`user_id`
    User Load (0.9ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    User Load (0.3ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 2) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1


I'm using Rails 3.0.2 but the problem exists in 3.0.1 too.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Calling &lt;code&gt;SomeModel.includes(:users)&lt;/code&gt; doesn't generate
INNER JOIN and throws TypeError:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  has_many :tunes
end

class Tune &amp;lt; ActiveRecord::Base
  belongs_to :user
end

class HomeController &amp;lt; ApplicationController
  def index
    @tunes = Tune.includes(:users).all
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Console output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Started GET &quot;/&quot; for 127.0.0.1 at 2010-11-16 21:34:06 +0100
Processing by HomeController#index as HTML
Tune Load (0.6ms)  SELECT `tunes`.* FROM `tunes`
Completed   in 65ms

TypeError (can't convert nil into Integer):
app/controllers/home_controller.rb:3:in `index'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When trying to replace &lt;code&gt;includes&lt;/code&gt; with
&lt;code&gt;join&lt;/code&gt; I'm getting this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class HomeController &amp;lt; ApplicationController
  def index
    @tunes = Tune.joins(:user)
    @tunes.each do |t|
      t.user.name
    end
  end
end

Tune Load (0.8ms)  SELECT `tunes`.* FROM `tunes` INNER JOIN `users` ON `users`.`id` = `tunes`.`user_id`
User Load (0.9ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
User Load (0.3ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 2) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm using Rails 3.0.2 but the problem exists in 3.0.1 too.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

Calling `SomeModel.includes(:users)` doesn't generate INNER JOIN and throws TypeError:

    class User &lt; ActiveRecord::Base
      has_many :tunes
    end

    class Tune &lt; ActiveRecord::Base
      belongs_to :user
    end

    class HomeController &lt; ApplicationController
      def index
        @tunes = Tune.includes(:users).all
      end
    end

Console output:

    Started GET &quot;/&quot; for 127.0.0.1 at 2010-11-16 21:34:06 +0100
    Processing by HomeController#index as HTML
    Tune Load (0.6ms)  SELECT `tunes`.* FROM `tunes`
    Completed   in 65ms

    TypeError (can't convert nil into Integer):
    app/controllers/home_controller.rb:3:in `index'


When trying to replace `includes` with `join` I'm getting this:

    class HomeController &lt; ApplicationController
      def index
        @tunes = Tune.joins(:user)
        @tunes.each do |t|
          t.user.name
        end
      end
    end

    Tune Load (0.8ms)  SELECT `tunes`.* FROM `tunes` INNER JOIN `users` ON `users`.`id` = `tunes`.`user_id`
    User Load (0.9ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    User Load (0.3ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 2) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
    CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1


I'm using Rails 3.0.2 but the problem exists in 3.0.1 too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Calling &lt;code&gt;SomeModel.includes(:users)&lt;/code&gt; doesn't generate
INNER JOIN and throws TypeError:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  has_many :tunes
end

class Tune &amp;lt; ActiveRecord::Base
  belongs_to :user
end

class HomeController &amp;lt; ApplicationController
  def index
    @tunes = Tune.includes(:users).all
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Console output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Started GET &quot;/&quot; for 127.0.0.1 at 2010-11-16 21:34:06 +0100
Processing by HomeController#index as HTML
Tune Load (0.6ms)  SELECT `tunes`.* FROM `tunes`
Completed   in 65ms

TypeError (can't convert nil into Integer):
app/controllers/home_controller.rb:3:in `index'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When trying to replace &lt;code&gt;includes&lt;/code&gt; with
&lt;code&gt;join&lt;/code&gt; I'm getting this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class HomeController &amp;lt; ApplicationController
  def index
    @tunes = Tune.joins(:user)
    @tunes.each do |t|
      t.user.name
    end
  end
end

Tune Load (0.8ms)  SELECT `tunes`.* FROM `tunes` INNER JOIN `users` ON `users`.`id` = `tunes`.`user_id`
User Load (0.9ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
User Load (0.3ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 2) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1
CACHE (0.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` = 1) LIMIT 1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm using Rails 3.0.2 but the problem exists in 3.0.1 too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-16T20:43:34+00:00</created-at>
      <creator-id type="integer">22245</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5988</number>
      <permalink>belongs_to-and-includes-joins-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>belongs_to and includes() &amp; joins() bug</title>
      <updated-at type="datetime">2010-11-16T20:43:37+00:00</updated-at>
      <user-id type="integer">22245</user-id>
      <version type="integer">1</version>
      <user-name>Piotr Chmolowski</user-name>
      <creator-name>Piotr Chmolowski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This happens only when trying to call include on a model that belongs to another model. User.include(:tunes) works as expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This happens only when trying to call include on a model that
belongs to another model. User.include(:tunes) works as
expected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-16T20:47:07+00:00</created-at>
      <creator-id type="integer">22245</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5988</number>
      <permalink>belongs_to-and-includes-joins-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>belongs_to and includes() &amp; joins() bug</title>
      <updated-at type="datetime">2010-11-16T20:47:08+00:00</updated-at>
      <user-id type="integer">22245</user-id>
      <version type="integer">2</version>
      <user-name>Piotr Chmolowski</user-name>
      <creator-name>Piotr Chmolowski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think you need to do 

@@@ ruby
@tunes = Tune.includes(:user)
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think you need to do&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;@tunes = Tune.includes(:user)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-24T05:10:11+00:00</created-at>
      <creator-id type="integer">22245</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5988</number>
      <permalink>belongs_to-and-includes-joins-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>belongs_to and includes() &amp; joins() bug</title>
      <updated-at type="datetime">2010-11-24T05:10:13+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Piotr Chmolowski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Classic movie fans might remember the scenes in the film &#8220;Breakfast at Tiffany&#8217;s,&#8221; in which Audrey Hepburn stares longingly at the diamonds and jewels in the window of the iconic Tiffany &amp; Co. jeweler.

And on Friday, Dec. 10, those windows will come to Jacksonville for the first time as Tiffany &amp; Co. opens a new 3,500-square-foot store at the St. Johns Town Center.

With the jewelry and other merchandise comes the store&#8217;s signature turquoise gift boxes tied with white ribbon. But there&#8217;s much more to it than that: its brand has built a reputation and prestige that perhaps is unparalleled by any other U.S. retail brand.

Although exclusive Tiffany jewelry designs shape the store&#8217;s most famous wares, today it offers more, store director Kyle Wilkinson said. Tiffany exclusivity has been extended to watches, silverware, china, crystal, stationery, fragrances and accessories. As of July, according to its second-quarter results statement, the company operated 223 Tiffany &amp; Co. stores and boutiques. It had 91 in North and South America, 57 in Japan, 48 in Asia and the Pacific Rim and 27 in Europe, and had grown internationally by 12 stores since the second quarter of 2009.

The St. Johns Town Center Tiffany will make its home toward the south end of River City Drive, located between Louis Vuitton and Mayor&#8217;s Jewelers. The nearest other Tiffany &amp; Co. stores are in Orlando and Atlanta, and Wilkinson said the number of Jacksonville-area customers shopping at the Tiffany &amp; Co. stores in those cities and on the tiffany.com website supported opening a store here.

&#8220;It&#8217;s just waiting for the right spot, the perfect situation and the construction,&#8221; Wilkinson said. &#8220;That spot made itself available, and we were on it. We definitely think there is a demand in Jacksonville.&#8221;

&lt;A href=&quot;http://www.tiffanyjewellerypalace.com/&quot; target=_blank&gt;tiffany necklaces&lt;/A&gt;

&lt;A href=&quot;http://www.tiffanyjewellerypalace.com/&quot; target=_blank&gt;Cheap Tiffany Charms&lt;/A&gt;

&lt;A href=&quot;http://www.tiffanyjewellerypalace.com/&quot; target=_blank&gt;cheap tiffany jewellery&lt;/A&gt;

&lt;A href=&quot;http://www.tiffanyjewellerypalace.com/&quot; target=_blank&gt;tiffany charms on sale&lt;/A&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Classic movie fans might remember the scenes in the film
&amp;#8220;Breakfast at Tiffany&amp;#8217;s,&amp;#8221; in which Audrey Hepburn
stares longingly at the diamonds and jewels in the window of the
iconic Tiffany &amp;amp; Co. jeweler.&lt;/p&gt;
&lt;p&gt;And on Friday, Dec. 10, those windows will come to Jacksonville
for the first time as Tiffany &amp;amp; Co. opens a new
3,500-square-foot store at the St. Johns Town Center.&lt;/p&gt;
&lt;p&gt;With the jewelry and other merchandise comes the store&amp;#8217;s
signature turquoise gift boxes tied with white ribbon. But
there&amp;#8217;s much more to it than that: its brand has built a
reputation and prestige that perhaps is unparalleled by any other
U.S. retail brand.&lt;/p&gt;
&lt;p&gt;Although exclusive Tiffany jewelry designs shape the
store&amp;#8217;s most famous wares, today it offers more, store
director Kyle Wilkinson said. Tiffany exclusivity has been extended
to watches, silverware, china, crystal, stationery, fragrances and
accessories. As of July, according to its second-quarter results
statement, the company operated 223 Tiffany &amp;amp; Co. stores and
boutiques. It had 91 in North and South America, 57 in Japan, 48 in
Asia and the Pacific Rim and 27 in Europe, and had grown
internationally by 12 stores since the second quarter of 2009.&lt;/p&gt;
&lt;p&gt;The St. Johns Town Center Tiffany will make its home toward the
south end of River City Drive, located between Louis Vuitton and
Mayor&amp;#8217;s Jewelers. The nearest other Tiffany &amp;amp; Co. stores
are in Orlando and Atlanta, and Wilkinson said the number of
Jacksonville-area customers shopping at the Tiffany &amp;amp; Co.
stores in those cities and on the tiffany.com website supported
opening a store here.&lt;/p&gt;
&lt;p&gt;&amp;#8220;It&amp;#8217;s just waiting for the right spot, the perfect
situation and the construction,&amp;#8221; Wilkinson said. &amp;#8220;That
spot made itself available, and we were on it. We definitely think
there is a demand in Jacksonville.&amp;#8221;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tiffanyjewellerypalace.com/&quot;&gt;tiffany
necklaces&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tiffanyjewellerypalace.com/&quot;&gt;Cheap Tiffany
Charms&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tiffanyjewellerypalace.com/&quot;&gt;cheap tiffany
jewellery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tiffanyjewellerypalace.com/&quot;&gt;tiffany charms
on sale&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-24T05:21:48+00:00</created-at>
      <creator-id type="integer">22245</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5988</number>
      <permalink>belongs_to-and-includes-joins-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>belongs_to and includes() &amp; joins() bug</title>
      <updated-at type="datetime">2010-11-24T05:39:10+00:00</updated-at>
      <user-id type="integer">126483</user-id>
      <version type="integer">4</version>
      <user-name>tiffany2010</user-name>
      <creator-name>Piotr Chmolowski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't see the difference - it produces the same error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't see the difference - it produces the same error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-24T06:29:02+00:00</created-at>
      <creator-id type="integer">22245</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5988</number>
      <permalink>belongs_to-and-includes-joins-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>belongs_to and includes() &amp; joins() bug</title>
      <updated-at type="datetime">2010-11-24T06:29:04+00:00</updated-at>
      <user-id type="integer">22245</user-id>
      <version type="integer">5</version>
      <user-name>Piotr Chmolowski</user-name>
      <creator-name>Piotr Chmolowski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-25T00:00:08+00:00</created-at>
      <creator-id type="integer">22245</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5988</number>
      <permalink>belongs_to-and-includes-joins-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>belongs_to and includes() &amp; joins() bug</title>
      <updated-at type="datetime">2011-02-25T00:00:39+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">6</version>
      <user-name>rails</user-name>
      <creator-name>Piotr Chmolowski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-25T00:00:09+00:00</created-at>
      <creator-id type="integer">22245</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5988</number>
      <permalink>belongs_to-and-includes-joins-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>belongs_to and includes() &amp; joins() bug</title>
      <updated-at type="datetime">2011-02-25T00:01:20+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">7</version>
      <user-name>rails</user-name>
      <creator-name>Piotr Chmolowski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5988</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
