<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">83</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-25T10:51:34+01:00</created-at>
  <creator-id type="integer">8322</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">483</number>
  <permalink>automatic-validation-on-has_many-should-not-be-performed-twice</permalink>
  <priority type="integer">14559</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug has_many</tag>
  <title>Automatic validation on has_many should not be performed twice</title>
  <updated-at type="datetime">2008-09-18T08:10:14+01:00</updated-at>
  <user-id type="integer">14890</user-id>
  <version type="integer">3</version>
  <user-name>Tarmo T&#228;nav</user-name>
  <creator-name>wildchild</creator-name>
  <assigned-user-name>DHH</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/483</url>
  <priority-name nil="true"></priority-name>
  <original-body>I found that has_many performs automatic validation of associated records and if &quot;validates_associated&quot; declared then validation performed twice.
This is very painful if different error message needed (eg. other language), also this behavior will produce many similar error messages if more then 1 associated records are invalid (don't think that it's useful).

I see different ways to workaround:
1) Check that associated object already validated (new property needed)
2) Check that validates_associated performed (don't know how to check this)
3) Check for record.errors.any? before calling record.valid? but for valid records validation will be performed again (possible overhead for complicated validations)

Any ideas, guys?</original-body>
  <latest-body>I found that has_many performs automatic validation of associated records and if &quot;validates_associated&quot; declared then validation performed twice.
This is very painful if different error message needed (eg. other language), also this behavior will produce many similar error messages if more then 1 associated records are invalid (don't think that it's useful).

I see different ways to workaround:
1) Check that associated object already validated (new property needed)
2) Check that validates_associated performed (don't know how to check this)
3) Check for record.errors.any? before calling record.valid? but for valid records validation will be performed again (possible overhead for complicated validations)

Any ideas, guys?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I found that has_many performs automatic validation of associated records and if &quot;validates_associated&quot; declared then validation performed twice.
&lt;/p&gt;&lt;p&gt;
This is very painful if different error message needed (eg. other language), also this behavior will produce many similar error messages if more then 1 associated records are invalid (don't think that it's useful).
&lt;/p&gt;&lt;p&gt;
I see different ways to workaround:
&lt;/p&gt;&lt;p&gt;
1) Check that associated object already validated (new property needed)
&lt;/p&gt;&lt;p&gt;
2) Check that validates_associated performed (don't know how to check this)
&lt;/p&gt;&lt;p&gt;
3) Check for record.errors.any? before calling record.valid? but for valid records validation will be performed again (possible overhead for complicated validations)
&lt;/p&gt;&lt;p&gt;
Any ideas, guys?
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I found that has_many performs automatic validation of associated records and if &quot;validates_associated&quot; declared then validation performed twice.
This is very painful if different error message needed (eg. other language), also this behavior will produce many similar error messages if more then 1 associated records are invalid (don't think that it's useful).

I see different ways to workaround:
1) Check that associated object already validated (new property needed)
2) Check that validates_associated performed (don't know how to check this)
3) Check for record.errors.any? before calling record.valid? but for valid records validation will be performed again (possible overhead for complicated validations)

Any ideas, guys?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I found that has_many performs automatic validation of associated records and if &quot;validates_associated&quot; declared then validation performed twice.
&lt;/p&gt;&lt;p&gt;
This is very painful if different error message needed (eg. other language), also this behavior will produce many similar error messages if more then 1 associated records are invalid (don't think that it's useful).
&lt;/p&gt;&lt;p&gt;
I see different ways to workaround:
&lt;/p&gt;&lt;p&gt;
1) Check that associated object already validated (new property needed)
&lt;/p&gt;&lt;p&gt;
2) Check that validates_associated performed (don't know how to check this)
&lt;/p&gt;&lt;p&gt;
3) Check for record.errors.any? before calling record.valid? but for valid records validation will be performed again (possible overhead for complicated validations)
&lt;/p&gt;&lt;p&gt;
Any ideas, guys?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T10:51:34+01:00</created-at>
      <creator-id type="integer">8322</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">483</number>
      <permalink>automatic-validation-on-has_many-should-not-be-performed-twice</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Automatic validation on has_many should not be performed twice</title>
      <updated-at type="datetime">2008-06-25T10:51:34+01:00</updated-at>
      <user-id type="integer">8322</user-id>
      <version type="integer">1</version>
      <user-name>wildchild</user-name>
      <creator-name>wildchild</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/483</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As discussed on IRC, you can use
@@@ ruby
has_many :things, :validate =&gt; false
@@@

and then add the validation, or least you will be able to do this once &quot;this patch&quot;:http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/486-make-sure-associated-has_many-habtm-objects-get-saved-even-when-validate-false-is-used makes it into core ;-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
As discussed on IRC, you can use
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;has_many :things, :validate =&amp;gt; false&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
and then add the validation, or least you will be able to do this once &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/486-make-sure-associated-has_many-habtm-objects-get-saved-even-when-validate-false-is-used&quot;&gt;this patch&lt;/a&gt; makes it into core ;-)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T11:51:07+01:00</created-at>
      <creator-id type="integer">8322</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">483</number>
      <permalink>automatic-validation-on-has_many-should-not-be-performed-twice</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_many</tag>
      <title>Automatic validation on has_many should not be performed twice</title>
      <updated-at type="datetime">2008-06-25T11:51:07+01:00</updated-at>
      <user-id type="integer">17428</user-id>
      <version type="integer">2</version>
      <user-name>Jan De Poorter</user-name>
      <creator-name>wildchild</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/483</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As already pointed out, &quot;:validate =&gt; false&quot; can now be used to counter this problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As already pointed out, &quot;:validate =&amp;gt; false&quot; can now be used
to counter this problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-18T08:10:10+01:00</created-at>
      <creator-id type="integer">8322</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: activerecord bug has_many
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">483</number>
      <permalink>automatic-validation-on-has_many-should-not-be-performed-twice</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug has_many</tag>
      <title>Automatic validation on has_many should not be performed twice</title>
      <updated-at type="datetime">2008-09-18T08:10:14+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">3</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>wildchild</creator-name>
      <assigned-user-name>DHH</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/483</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
