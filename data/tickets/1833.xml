<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-01T02:24:07+00:00</created-at>
  <creator-id type="integer">40736</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1833</number>
  <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
  <priority type="integer">1102</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Rails 2.2.2 looking for column that does not exist</title>
  <updated-at type="datetime">2009-03-08T13:26:18+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">7</version>
  <user-name>Pratik</user-name>
  <creator-name>Patrick</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Hi, I recently upgraded from Rails 2.0.2 to 2.1.2 with no problems, then I moved from 2.1.2 to 2.2.2 and have been noticing this strange error.

Mysql::Error: Unknown column 'domain_listings.id' in 'field list': SELECT `domain_listings`.id FROM `domain_listings` WHERE (`domain_listings`.`domain_id` = 2 AND `domain_listings`.listing_id = 12)  LIMIT 1

domain_listings is a join table and id does not exist, the columns are domain_id and listing_id. As I mentioned, no problem with this in 2.1.2. Any guidance would be appreciated.</original-body>
  <latest-body>Hi, I recently upgraded from Rails 2.0.2 to 2.1.2 with no problems, then I moved from 2.1.2 to 2.2.2 and have been noticing this strange error.

Mysql::Error: Unknown column 'domain_listings.id' in 'field list': SELECT `domain_listings`.id FROM `domain_listings` WHERE (`domain_listings`.`domain_id` = 2 AND `domain_listings`.listing_id = 12)  LIMIT 1

domain_listings is a join table and id does not exist, the columns are domain_id and listing_id. As I mentioned, no problem with this in 2.1.2. Any guidance would be appreciated.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi, I recently upgraded from Rails 2.0.2 to 2.1.2 with no
problems, then I moved from 2.1.2 to 2.2.2 and have been noticing
this strange error.&lt;/p&gt;
&lt;p&gt;Mysql::Error: Unknown column 'domain_listings.id' in 'field
list': SELECT &lt;code&gt;domain_listings&lt;/code&gt;.id FROM
&lt;code&gt;domain_listings&lt;/code&gt; WHERE
(&lt;code&gt;domain_listings&lt;/code&gt;.&lt;code&gt;domain_id&lt;/code&gt; = 2 AND
&lt;code&gt;domain_listings&lt;/code&gt;.listing_id = 12) LIMIT 1&lt;/p&gt;
&lt;p&gt;domain_listings is a join table and id does not exist, the
columns are domain_id and listing_id. As I mentioned, no problem
with this in 2.1.2. Any guidance would be appreciated.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi, I recently upgraded from Rails 2.0.2 to 2.1.2 with no problems, then I moved from 2.1.2 to 2.2.2 and have been noticing this strange error.

Mysql::Error: Unknown column 'domain_listings.id' in 'field list': SELECT `domain_listings`.id FROM `domain_listings` WHERE (`domain_listings`.`domain_id` = 2 AND `domain_listings`.listing_id = 12)  LIMIT 1

domain_listings is a join table and id does not exist, the columns are domain_id and listing_id. As I mentioned, no problem with this in 2.1.2. Any guidance would be appreciated.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi, I recently upgraded from Rails 2.0.2 to 2.1.2 with no
problems, then I moved from 2.1.2 to 2.2.2 and have been noticing
this strange error.&lt;/p&gt;
&lt;p&gt;Mysql::Error: Unknown column 'domain_listings.id' in 'field
list': SELECT &lt;code&gt;domain_listings&lt;/code&gt;.id FROM
&lt;code&gt;domain_listings&lt;/code&gt; WHERE
(&lt;code&gt;domain_listings&lt;/code&gt;.&lt;code&gt;domain_id&lt;/code&gt; = 2 AND
&lt;code&gt;domain_listings&lt;/code&gt;.listing_id = 12) LIMIT 1&lt;/p&gt;
&lt;p&gt;domain_listings is a join table and id does not exist, the
columns are domain_id and listing_id. As I mentioned, no problem
with this in 2.1.2. Any guidance would be appreciated.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T02:24:07+00:00</created-at>
      <creator-id type="integer">40736</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1833</number>
      <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.2.2 looking for column that does not exist</title>
      <updated-at type="datetime">2009-02-01T02:24:12+00:00</updated-at>
      <user-id type="integer">40736</user-id>
      <version type="integer">1</version>
      <user-name>Patrick</user-name>
      <creator-name>Patrick</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you provide more information?  What is the schema of those two tables?  What AR call is triggering this query?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you provide more information? What is the schema of those
two tables? What AR call is triggering this query?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T05:13:31+00:00</created-at>
      <creator-id type="integer">40736</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1833</number>
      <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.2.2 looking for column that does not exist</title>
      <updated-at type="datetime">2009-02-01T05:13:32+00:00</updated-at>
      <user-id type="integer">10212</user-id>
      <version type="integer">2</version>
      <user-name>Scott Taylor</user-name>
      <creator-name>Patrick</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is the code from the form that is creating the sql

&lt;%= select_tag('domain_listings[domain_id][]',
options_from_collection_for_select(Domain.find(:all),
'id', 'name', @listing.domains.collect {|d| d.id}),
:multiple =&gt; true, :size =&gt; 5

I've also attached part of my dev log file that shows the error. As I mentioned, the query worked up to 2.1.2 and then broke when I upgraded to 2.2.2. Thanks for the quick response...</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is the code from the form that is creating the sql&lt;/p&gt;
&lt;p&gt;&amp;lt;%= select_tag('domain_listings[domain_id][]',
options_from_collection_for_select(Domain.find(:all), 'id', 'name',
@listing.domains.collect {|d| d.id}), :multiple =&amp;gt; true, :size
=&amp;gt; 5&lt;/p&gt;
&lt;p&gt;I've also attached part of my dev log file that shows the error.
As I mentioned, the query worked up to 2.1.2 and then broke when I
upgraded to 2.2.2. Thanks for the quick response...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T05:56:55+00:00</created-at>
      <creator-id type="integer">40736</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1833</number>
      <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.2.2 looking for column that does not exist</title>
      <updated-at type="datetime">2009-02-01T05:57:01+00:00</updated-at>
      <user-id type="integer">40736</user-id>
      <version type="integer">3</version>
      <user-name>Patrick</user-name>
      <creator-name>Patrick</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I attached some more schema information.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I attached some more schema information.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-01T18:39:15+00:00</created-at>
      <creator-id type="integer">40736</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1833</number>
      <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.2.2 looking for column that does not exist</title>
      <updated-at type="datetime">2009-02-01T18:39:19+00:00</updated-at>
      <user-id type="integer">40736</user-id>
      <version type="integer">4</version>
      <user-name>Patrick</user-name>
      <creator-name>Patrick</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Just wondered if anyone had a chance to look at this yet? right now I'm sticking to rails 2.1.2 until I at least have a work around. Maybe I need to find a way for it to write a different sql.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just wondered if anyone had a chance to look at this yet? right
now I'm sticking to rails 2.1.2 until I at least have a work
around. Maybe I need to find a way for it to write a different
sql.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-14T19:14:09+00:00</created-at>
      <creator-id type="integer">40736</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1833</number>
      <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.2.2 looking for column that does not exist</title>
      <updated-at type="datetime">2009-02-14T19:14:14+00:00</updated-at>
      <user-id type="integer">40736</user-id>
      <version type="integer">5</version>
      <user-name>Patrick</user-name>
      <creator-name>Patrick</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Since the information that you provided is not really enough, you can try this:

class DomainListing &lt; ActiveRecord::Base
  belongs_to :listing
  belongs_to :domain, :foreign_key =&gt; 'domain_id'
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Since the information that you provided is not really enough,
you can try this:&lt;/p&gt;
&lt;p&gt;class DomainListing &amp;lt; ActiveRecord::Base belongs_to :listing
belongs_to :domain, :foreign_key =&amp;gt; 'domain_id' end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-15T02:35:40+00:00</created-at>
      <creator-id type="integer">40736</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1833</number>
      <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 2.2.2 looking for column that does not exist</title>
      <updated-at type="datetime">2009-02-15T02:35:45+00:00</updated-at>
      <user-id type="integer">22631</user-id>
      <version type="integer">6</version>
      <user-name>siong1987</user-name>
      <creator-name>Patrick</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>You should try to submit a failing test case. http://guides.rails.info/contributing_to_rails.html might come handy!

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You should try to submit a failing test case. &lt;a href=&quot;http://guides.rails.info/contributing_to_rails.html&quot;&gt;http://guides.rails.info/contrib...&lt;/a&gt;
might come handy!&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-08T13:26:15+00:00</created-at>
      <creator-id type="integer">40736</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 17477
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1833</number>
      <permalink>rails-222-looking-for-column-that-does-not-exist</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Rails 2.2.2 looking for column that does not exist</title>
      <updated-at type="datetime">2009-03-08T13:26:18+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">7</version>
      <user-name>Pratik</user-name>
      <creator-name>Patrick</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1833</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b48540468c3406a1651a63939e98ac2740c3d8b8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-01T05:56:55+00:00</created-at>
      <filename>unknown_col_error.txt</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">83624</id>
      <size type="integer">23501</size>
      <uploader-id type="integer">40736</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/83624/unknown_col_error.txt</url>
    </attachment>
    <attachment type="Attachment">
      <code>3533423daf775ef50128050fadbc95be84547563</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-01T18:39:16+00:00</created-at>
      <filename>schemainfo.txt</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">83698</id>
      <size type="integer">604</size>
      <uploader-id type="integer">40736</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/83698/schemainfo.txt</url>
    </attachment>
  </attachments>
</ticket>
