<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-02T14:58:11+01:00</created-at>
  <creator-id type="integer">110021</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5534</number>
  <permalink>controller-breaks-when-an-action-is-named-config</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>action_controller</tag>
  <title>Controller breaks when an action is named 'config'</title>
  <updated-at type="datetime">2010-09-07T22:34:51+01:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">2</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Lars Kuhnt</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5534</url>
  <priority-name>Low</priority-name>
  <original-body>Hi,

I spend some time to figure out that an action named 'config' breaks the whole controller. A cryptic exception is raised whenever you try to access any action on that controller. In my case it was:

    undefined method `allow_forgery_protection' for nil:NilClass
    
    activesupport (3.0.0) lib/active_support/whiny_nil.rb:48:in `method_missing'
    activesupport (3.0.0) lib/active_support/configurable.rb:22:in `allow_forgery_protection'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:120:in `protect_against_forgery?'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:105:in `verified_request?'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:96:in `verify_authenticity_token'
    activesupport (3.0.0) lib/active_support/callbacks.rb:436:in `_run__3642780899113546055__process_action__3023371025821930858__callbacks'
    activesupport (3.0.0) lib/active_support/callbacks.rb:409:in `_run_process_action_callbacks'
    ...

It would be great to get a warning or a better error message when an illegal action name is used.

I attached a test-case to demonstrate the issue.

Regards
Lars</original-body>
  <latest-body>Hi,

I spend some time to figure out that an action named 'config' breaks the whole controller. A cryptic exception is raised whenever you try to access any action on that controller. In my case it was:

    undefined method `allow_forgery_protection' for nil:NilClass
    
    activesupport (3.0.0) lib/active_support/whiny_nil.rb:48:in `method_missing'
    activesupport (3.0.0) lib/active_support/configurable.rb:22:in `allow_forgery_protection'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:120:in `protect_against_forgery?'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:105:in `verified_request?'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:96:in `verify_authenticity_token'
    activesupport (3.0.0) lib/active_support/callbacks.rb:436:in `_run__3642780899113546055__process_action__3023371025821930858__callbacks'
    activesupport (3.0.0) lib/active_support/callbacks.rb:409:in `_run_process_action_callbacks'
    ...

It would be great to get a warning or a better error message when an illegal action name is used.

I attached a test-case to demonstrate the issue.

Regards
Lars</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I spend some time to figure out that an action named 'config'
breaks the whole controller. A cryptic exception is raised whenever
you try to access any action on that controller. In my case it
was:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `allow_forgery_protection' for nil:NilClass

activesupport (3.0.0) lib/active_support/whiny_nil.rb:48:in `method_missing'
activesupport (3.0.0) lib/active_support/configurable.rb:22:in `allow_forgery_protection'
actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:120:in `protect_against_forgery?'
actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:105:in `verified_request?'
actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:96:in `verify_authenticity_token'
activesupport (3.0.0) lib/active_support/callbacks.rb:436:in `_run__3642780899113546055__process_action__3023371025821930858__callbacks'
activesupport (3.0.0) lib/active_support/callbacks.rb:409:in `_run_process_action_callbacks'
...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It would be great to get a warning or a better error message
when an illegal action name is used.&lt;/p&gt;
&lt;p&gt;I attached a test-case to demonstrate the issue.&lt;/p&gt;
&lt;p&gt;Regards&lt;br&gt;
Lars&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

I spend some time to figure out that an action named 'config' breaks the whole controller. A cryptic exception is raised whenever you try to access any action on that controller. In my case it was:

    undefined method `allow_forgery_protection' for nil:NilClass
    
    activesupport (3.0.0) lib/active_support/whiny_nil.rb:48:in `method_missing'
    activesupport (3.0.0) lib/active_support/configurable.rb:22:in `allow_forgery_protection'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:120:in `protect_against_forgery?'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:105:in `verified_request?'
    actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:96:in `verify_authenticity_token'
    activesupport (3.0.0) lib/active_support/callbacks.rb:436:in `_run__3642780899113546055__process_action__3023371025821930858__callbacks'
    activesupport (3.0.0) lib/active_support/callbacks.rb:409:in `_run_process_action_callbacks'
    ...

It would be great to get a warning or a better error message when an illegal action name is used.

I attached a test-case to demonstrate the issue.

Regards
Lars</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I spend some time to figure out that an action named 'config'
breaks the whole controller. A cryptic exception is raised whenever
you try to access any action on that controller. In my case it
was:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `allow_forgery_protection' for nil:NilClass

activesupport (3.0.0) lib/active_support/whiny_nil.rb:48:in `method_missing'
activesupport (3.0.0) lib/active_support/configurable.rb:22:in `allow_forgery_protection'
actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:120:in `protect_against_forgery?'
actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:105:in `verified_request?'
actionpack (3.0.0) lib/action_controller/metal/request_forgery_protection.rb:96:in `verify_authenticity_token'
activesupport (3.0.0) lib/active_support/callbacks.rb:436:in `_run__3642780899113546055__process_action__3023371025821930858__callbacks'
activesupport (3.0.0) lib/active_support/callbacks.rb:409:in `_run_process_action_callbacks'
...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It would be great to get a warning or a better error message
when an illegal action name is used.&lt;/p&gt;
&lt;p&gt;I attached a test-case to demonstrate the issue.&lt;/p&gt;
&lt;p&gt;Regards&lt;br&gt;
Lars&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T14:58:11+01:00</created-at>
      <creator-id type="integer">110021</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5534</number>
      <permalink>controller-breaks-when-an-action-is-named-config</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_controller</tag>
      <title>Controller breaks when an action is named 'config'</title>
      <updated-at type="datetime">2010-09-02T14:58:12+01:00</updated-at>
      <user-id type="integer">110021</user-id>
      <version type="integer">1</version>
      <user-name>Lars Kuhnt</user-name>
      <creator-name>Lars Kuhnt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5534</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>abstract_controller/base.rb has following line

@@@ ruby
require 'active_support/configurable'
@@@

configurable provides a method called config which allows one to do things like 

@@@ ruby
    #   require 'active_support/configurable'      
    #  
    #   class User
    #     include ActiveSupport::Configurable
    #   end 
    #
    #   user = User.new
    # 
    #   user.config.allowed_access = true
    #   user.config.level = 1
    #
    #   user.config.allowed_access # =&gt; true
    #   user.config.level          # =&gt; 1
@@@

Since abstract_controller includes that module a config method is automatically created. If you have an action named 'config' then that would overrite this config and that's not good.

Yes it should be documented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;abstract_controller/base.rb has following line&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'active_support/configurable'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;configurable provides a method called config which allows one to
do things like&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;    #   require 'active_support/configurable'      
    #  
    #   class User
    #     include ActiveSupport::Configurable
    #   end 
    #
    #   user = User.new
    # 
    #   user.config.allowed_access = true
    #   user.config.level = 1
    #
    #   user.config.allowed_access # =&amp;gt; true
    #   user.config.level          # =&amp;gt; 1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since abstract_controller includes that module a config method
is automatically created. If you have an action named 'config' then
that would overrite this config and that's not good.&lt;/p&gt;
&lt;p&gt;Yes it should be documented.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-07T22:34:49+01:00</created-at>
      <creator-id type="integer">110021</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5534</number>
      <permalink>controller-breaks-when-an-action-is-named-config</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>action_controller</tag>
      <title>Controller breaks when an action is named 'config'</title>
      <updated-at type="datetime">2010-09-07T22:34:51+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Lars Kuhnt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5534</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>67da4d6d18323e27de9b2fe930cfb481c67ca8e5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-02T14:58:11+01:00</created-at>
      <filename>config_action_error.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">656513</id>
      <size type="integer">927</size>
      <uploader-id type="integer">110021</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/656513/config_action_error.diff</url>
    </attachment>
  </attachments>
</ticket>
