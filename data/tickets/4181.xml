<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">65556</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-03-15T17:10:27+00:00</created-at>
  <creator-id type="integer">53176</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4181</number>
  <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>databases.rake postgres postgresql</tag>
  <title>databases.rake forcing database and schema with postgres</title>
  <updated-at type="datetime">2010-10-15T23:01:48+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">10</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Shak</creator-name>
  <assigned-user-name>Rizwan Reza</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>When trying to db:test:prepare or load the following bit of code is called:

@@@
def drop_database(config)
  case config['adapter']
  when 'mysql'
    ActiveRecord::Base.establish_connection(config)
    ActiveRecord::Base.connection.drop_database config['database']
  when /^sqlite/
    FileUtils.rm(File.join(RAILS_ROOT, config['database']))
  when 'postgresql'
    ActiveRecord::Base.establish_connection(config.merge('database' =&gt; 'postgres', 'schema_search_path' =&gt; 'public'))
    ActiveRecord::Base.connection.drop_database config['database']
  end
end
@@@

Thus when using postgresql the connection forces a postgres database and public schema, even though these may be defined in config (which they are). The same code appears in create_database.

This makes it impossible to call some rake tasks since the correct db and schema is overwritten by these constants when the task is being run.

I'm guessing that simply removing this merge call will fix the issue, but I'm new to Rails and not sure what the wider implications are, or why this has been put in in the first place.</original-body>
  <latest-body>When trying to db:test:prepare or load the following bit of code is called:

@@@
def drop_database(config)
  case config['adapter']
  when 'mysql'
    ActiveRecord::Base.establish_connection(config)
    ActiveRecord::Base.connection.drop_database config['database']
  when /^sqlite/
    FileUtils.rm(File.join(RAILS_ROOT, config['database']))
  when 'postgresql'
    ActiveRecord::Base.establish_connection(config.merge('database' =&gt; 'postgres', 'schema_search_path' =&gt; 'public'))
    ActiveRecord::Base.connection.drop_database config['database']
  end
end
@@@

Thus when using postgresql the connection forces a postgres database and public schema, even though these may be defined in config (which they are). The same code appears in create_database.

This makes it impossible to call some rake tasks since the correct db and schema is overwritten by these constants when the task is being run.

I'm guessing that simply removing this merge call will fix the issue, but I'm new to Rails and not sure what the wider implications are, or why this has been put in in the first place.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When trying to db:test:prepare or load the following bit of code
is called:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def drop_database(config)
  case config['adapter']
  when 'mysql'
    ActiveRecord::Base.establish_connection(config)
    ActiveRecord::Base.connection.drop_database config['database']
  when /^sqlite/
    FileUtils.rm(File.join(RAILS_ROOT, config['database']))
  when 'postgresql'
    ActiveRecord::Base.establish_connection(config.merge('database' =&amp;gt; 'postgres', 'schema_search_path' =&amp;gt; 'public'))
    ActiveRecord::Base.connection.drop_database config['database']
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Thus when using postgresql the connection forces a postgres
database and public schema, even though these may be defined in
config (which they are). The same code appears in
create_database.&lt;/p&gt;
&lt;p&gt;This makes it impossible to call some rake tasks since the
correct db and schema is overwritten by these constants when the
task is being run.&lt;/p&gt;
&lt;p&gt;I'm guessing that simply removing this merge call will fix the
issue, but I'm new to Rails and not sure what the wider
implications are, or why this has been put in in the first
place.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When trying to db:test:prepare or load the following bit of code is called:

@@@
def drop_database(config)
  case config['adapter']
  when 'mysql'
    ActiveRecord::Base.establish_connection(config)
    ActiveRecord::Base.connection.drop_database config['database']
  when /^sqlite/
    FileUtils.rm(File.join(RAILS_ROOT, config['database']))
  when 'postgresql'
    ActiveRecord::Base.establish_connection(config.merge('database' =&gt; 'postgres', 'schema_search_path' =&gt; 'public'))
    ActiveRecord::Base.connection.drop_database config['database']
  end
end
@@@

Thus when using postgresql the connection forces a postgres database and public schema, even though these may be defined in config (which they are). The same code appears in create_database.

This makes it impossible to call some rake tasks since the correct db and schema is overwritten by these constants when the task is being run.

I'm guessing that simply removing this merge call will fix the issue, but I'm new to Rails and not sure what the wider implications are, or why this has been put in in the first place.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When trying to db:test:prepare or load the following bit of code
is called:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def drop_database(config)
  case config['adapter']
  when 'mysql'
    ActiveRecord::Base.establish_connection(config)
    ActiveRecord::Base.connection.drop_database config['database']
  when /^sqlite/
    FileUtils.rm(File.join(RAILS_ROOT, config['database']))
  when 'postgresql'
    ActiveRecord::Base.establish_connection(config.merge('database' =&amp;gt; 'postgres', 'schema_search_path' =&amp;gt; 'public'))
    ActiveRecord::Base.connection.drop_database config['database']
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Thus when using postgresql the connection forces a postgres
database and public schema, even though these may be defined in
config (which they are). The same code appears in
create_database.&lt;/p&gt;
&lt;p&gt;This makes it impossible to call some rake tasks since the
correct db and schema is overwritten by these constants when the
task is being run.&lt;/p&gt;
&lt;p&gt;I'm guessing that simply removing this merge call will fix the
issue, but I'm new to Rails and not sure what the wider
implications are, or why this has been put in in the first
place.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-15T17:10:27+00:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-03-15T17:18:54+00:00</updated-at>
      <user-id type="integer">53176</user-id>
      <version type="integer">1</version>
      <user-name>Shak</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It seems that this is based on a much larger assumption about how your postgresql database is structured, assumptions which do not apply in general development and migration etc (ownership of databases etc). 

I've decided to just manage initialisation myself, although I do think that the test database should have the same requirements as prod and dev.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems that this is based on a much larger assumption about
how your postgresql database is structured, assumptions which do
not apply in general development and migration etc (ownership of
databases etc).&lt;/p&gt;
&lt;p&gt;I've decided to just manage initialisation myself, although I do
think that the test database should have the same requirements as
prod and dev.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-15T17:57:33+00:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-03-15T17:57:35+00:00</updated-at>
      <user-id type="integer">53176</user-id>
      <version type="integer">2</version>
      <user-name>Shak</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For anyone interested, more info and workarounds here:

http://dev.rubyonrails.org/ticket/7665</body>
      <body-html>&lt;div&gt;&lt;p&gt;For anyone interested, more info and workarounds here:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://dev.rubyonrails.org/ticket/7665&quot;&gt;http://dev.rubyonrails.org/ticket/7665&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-15T23:56:58+00:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-03-15T23:57:03+00:00</updated-at>
      <user-id type="integer">53176</user-id>
      <version type="integer">3</version>
      <user-name>Shak</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">65556</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-29T07:38:17+01:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-03-29T07:38:19+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name>Rizwan Reza</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">65556</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't think this is a problem or bug at all. Every postgres database cluster will have three databases by default: postgres, template0 and template1. When doing administrative work, you probably do want to connect to the postgres database (or one of the templates) just so you can drop and create other databases. In other words, if you connect to my_app_development and try to drop my_app_development, postgres will probably complaint.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think this is a problem or bug at all. Every postgres
database cluster will have three databases by default: postgres,
template0 and template1. When doing administrative work, you
probably do want to connect to the postgres database (or one of the
templates) just so you can drop and create other databases. In
other words, if you connect to my_app_development and try to drop
my_app_development, postgres will probably complaint.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-01T13:01:39+01:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-04-01T13:01:40+01:00</updated-at>
      <user-id type="integer">65714</user-id>
      <version type="integer">5</version>
      <user-name>Harold Gim&#233;nez</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name>Rizwan Reza</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">65556</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Shak and Harold, can we close this ticket then?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Shak and Harold, can we close this ticket then?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-02T10:44:59+01:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-04-02T10:45:02+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">6</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name>Rizwan Reza</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">65556</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My vote is to close it. Although I'd like to hear from Shak if there are examples of this actually causing a problem? Some rake task that you could not run because of this?

To add to the story, I think this is necessary in order for rake db:create to work. Otherwise the postgres adapter will try to connect to my_app_development in order to create my_app_development. You see the chicken and egg there? Therefore you need to connect to the admin DB first in order to create your app's databases.

But as I said, I'd really like to hear how this breaks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;My vote is to close it. Although I'd like to hear from Shak if
there are examples of this actually causing a problem? Some rake
task that you could not run because of this?&lt;/p&gt;
&lt;p&gt;To add to the story, I think this is necessary in order for rake
db:create to work. Otherwise the postgres adapter will try to
connect to my_app_development in order to create
my_app_development. You see the chicken and egg there? Therefore
you need to connect to the admin DB first in order to create your
app's databases.&lt;/p&gt;
&lt;p&gt;But as I said, I'd really like to hear how this breaks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-02T12:46:36+01:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-04-02T12:46:40+01:00</updated-at>
      <user-id type="integer">65714</user-id>
      <version type="integer">7</version>
      <user-name>Harold Gim&#233;nez</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name>Rizwan Reza</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">65556</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If Shak needs, we can open this up again. Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If Shak needs, we can open this up again. Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-02T13:46:11+01:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-04-02T13:46:12+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">8</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name>Rizwan Reza</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">65556</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Everything works provided you have a single schema per single database per single Rails app. It's probably just my usage, but my database can have other related schemas in it, those not managed by Rails. These are required since Postgres doesn't allow cross DB queries. As such my rails user in production shouldn't be allowed to drop anything other than its own schema, and this should be reflected in dev and test too. This is why the default rake tasks do not work for me.

Also generally, I'm not sure it's proper to allow an application user access to the any database other than its own, but I will concede if Rails' opinion differs on that.

Based on the links above I've patched my own database.rake to drop and create schemas instead of databases and it seems to be working quite well. I'm happy to contribute this, but as a novice Rails user I have no idea how to or whether it breaks anything else.

I've recognised this as non-Rails usage so this ticket doesn't need to be reopened, however I do think switching to a schema aware model would bring added benefits to those using Postgres as their storage.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Everything works provided you have a single schema per single
database per single Rails app. It's probably just my usage, but my
database can have other related schemas in it, those not managed by
Rails. These are required since Postgres doesn't allow cross DB
queries. As such my rails user in production shouldn't be allowed
to drop anything other than its own schema, and this should be
reflected in dev and test too. This is why the default rake tasks
do not work for me.&lt;/p&gt;
&lt;p&gt;Also generally, I'm not sure it's proper to allow an application
user access to the any database other than its own, but I will
concede if Rails' opinion differs on that.&lt;/p&gt;
&lt;p&gt;Based on the links above I've patched my own database.rake to
drop and create schemas instead of databases and it seems to be
working quite well. I'm happy to contribute this, but as a novice
Rails user I have no idea how to or whether it breaks anything
else.&lt;/p&gt;
&lt;p&gt;I've recognised this as non-Rails usage so this ticket doesn't
need to be reopened, however I do think switching to a schema aware
model would bring added benefits to those using Postgres as their
storage.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-08T11:18:25+01:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-04-08T11:18:28+01:00</updated-at>
      <user-id type="integer">53176</user-id>
      <version type="integer">9</version>
      <user-name>Shak</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name>Rizwan Reza</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">65556</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:48+01:00</created-at>
      <creator-id type="integer">53176</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4181</number>
      <permalink>databasesrake-forcing-database-and-schema-with-postgres</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>databases.rake postgres postgresql</tag>
      <title>databases.rake forcing database and schema with postgres</title>
      <updated-at type="datetime">2010-10-15T23:01:48+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">10</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Shak</creator-name>
      <assigned-user-name>Rizwan Reza</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4181</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
