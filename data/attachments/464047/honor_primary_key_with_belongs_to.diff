From bc58e3ea099c80410cea937e5ae3b27379bf8432 Mon Sep 17 00:00:00 2001
From: Ernie Miller <ernie@metautonomo.us>
Date: Mon, 29 Mar 2010 16:38:44 -0400
Subject: [PATCH] Fix honoring :primary_key option when joining or eager loading a belongs_to association

---
 .../lib/active_record/association_preload.rb       |    2 +-
 activerecord/lib/active_record/associations.rb     |    2 +-
 .../associations/belongs_to_associations_test.rb   |   13 +++++++++++++
 3 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/association_preload.rb b/activerecord/lib/active_record/association_preload.rb
index 6725d4e..c94b2ff 100644
--- a/activerecord/lib/active_record/association_preload.rb
+++ b/activerecord/lib/active_record/association_preload.rb
@@ -324,7 +324,7 @@ module ActiveRecord
           klass = klass_name.constantize
 
           table_name = klass.quoted_table_name
-          primary_key = klass.primary_key
+          primary_key = reflection.options[:primary_key] || klass.primary_key
           column_type = klass.columns.detect{|c| c.name == primary_key}.type
 
           ids = id_map.keys.map do |id|
diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index ee87cb9..7406daf 100755
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -2031,7 +2031,7 @@ module ActiveRecord
                   [aliased_table[foreign_key].eq(parent_table[reflection.options[:primary_key] || parent.primary_key])]
                 end
               when :belongs_to
-                [aliased_table[reflection.klass.primary_key].eq(parent_table[options[:foreign_key] || reflection.primary_key_name])]
+                [aliased_table[options[:primary_key] || reflection.klass.primary_key].eq(parent_table[options[:foreign_key] || reflection.primary_key_name])]
               end
 
               unless klass.descends_from_active_record?
diff --git a/activerecord/test/cases/associations/belongs_to_associations_test.rb b/activerecord/test/cases/associations/belongs_to_associations_test.rb
index 163ac02..d75023d 100644
--- a/activerecord/test/cases/associations/belongs_to_associations_test.rb
+++ b/activerecord/test/cases/associations/belongs_to_associations_test.rb
@@ -31,6 +31,12 @@ class BelongsToAssociationsTest < ActiveRecord::TestCase
     client = Client.create(:name => "Primary key client", :firm_name => companies(:first_firm).name)
     assert_equal companies(:first_firm).name, client.firm_with_primary_key.name
   end
+  
+  def test_belongs_to_with_primary_key_joins_on_correct_column
+    sql = Client.joins(:firm_with_primary_key).to_sql
+    assert_no_match /"firm_with_primary_keys_companies"\."id"/, sql
+    assert_match /"firm_with_primary_keys_companies"\."name"/, sql
+  end
 
   def test_proxy_assignment
     account = Account.find(1)
@@ -60,6 +66,13 @@ class BelongsToAssociationsTest < ActiveRecord::TestCase
     citibank.firm_with_primary_key = apple
     assert_equal apple.name, citibank.firm_name
   end
+  
+  def test_eager_loading_with_primary_key
+    apple = Firm.create("name" => "Apple")
+    citibank = Client.create("name" => "Citibank", :firm_name => "Apple")
+    citibank_result = Client.find(:first, :conditions => {:name => "Citibank"}, :include => :firm_with_primary_key)
+    assert_not_nil citibank_result.instance_variable_get("@firm_with_primary_key")
+  end
 
   def test_no_unexpected_aliasing
     first_firm = companies(:first_firm)
-- 
1.6.4.4

