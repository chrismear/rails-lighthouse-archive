<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-27T18:46:33+01:00</created-at>
  <creator-id type="integer">50137</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6632</number>
  <permalink>extend-arsave-with-callback-false</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Extend AR#save with :callback =&gt; false</title>
  <updated-at type="datetime">2011-03-27T18:46:37+01:00</updated-at>
  <user-id type="integer">50137</user-id>
  <version type="integer">1</version>
  <user-name>Brian Jensen</user-name>
  <creator-name>Brian Jensen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6632</url>
  <priority-name nil="true"></priority-name>
  <original-body>Real world usecase:

User
 - belongs_to project

Project 
 - has_many :users

@@@ ruby
class User &lt; ActiveRecord::Base 
 before_create :update_project_user_action

 def update_project_user_action
   project.user_action_date = Date.today
   project.save :validate =&gt; false
 end
end
@@@

If I come back a month later or a fellow developer adds some callbacks on Project or validations then my call might fail. My callback does not care about the Project overall state, just the specific field.

It could also be argued that #update_attribute should also be given this property. Currently it skips validations but not callbacks.</original-body>
  <latest-body>Real world usecase:

User
 - belongs_to project

Project 
 - has_many :users

@@@ ruby
class User &lt; ActiveRecord::Base 
 before_create :update_project_user_action

 def update_project_user_action
   project.user_action_date = Date.today
   project.save :validate =&gt; false
 end
end
@@@

If I come back a month later or a fellow developer adds some callbacks on Project or validations then my call might fail. My callback does not care about the Project overall state, just the specific field.

It could also be argued that #update_attribute should also be given this property. Currently it skips validations but not callbacks.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Real world usecase:&lt;/p&gt;
&lt;p&gt;User&lt;br&gt;
- belongs_to project&lt;/p&gt;
&lt;p&gt;Project&lt;br&gt;
- has_many :users&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base 
 before_create :update_project_user_action

 def update_project_user_action
   project.user_action_date = Date.today
   project.save :validate =&amp;gt; false
 end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I come back a month later or a fellow developer adds some
callbacks on Project or validations then my call might fail. My
callback does not care about the Project overall state, just the
specific field.&lt;/p&gt;
&lt;p&gt;It could also be argued that #update_attribute should also be
given this property. Currently it skips validations but not
callbacks.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Real world usecase:

User
 - belongs_to project

Project 
 - has_many :users

@@@ ruby
class User &lt; ActiveRecord::Base 
 before_create :update_project_user_action

 def update_project_user_action
   project.user_action_date = Date.today
   project.save :validate =&gt; false
 end
end
@@@

If I come back a month later or a fellow developer adds some callbacks on Project or validations then my call might fail. My callback does not care about the Project overall state, just the specific field.

It could also be argued that #update_attribute should also be given this property. Currently it skips validations but not callbacks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Real world usecase:&lt;/p&gt;
&lt;p&gt;User&lt;br&gt;
- belongs_to project&lt;/p&gt;
&lt;p&gt;Project&lt;br&gt;
- has_many :users&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base 
 before_create :update_project_user_action

 def update_project_user_action
   project.user_action_date = Date.today
   project.save :validate =&amp;gt; false
 end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I come back a month later or a fellow developer adds some
callbacks on Project or validations then my call might fail. My
callback does not care about the Project overall state, just the
specific field.&lt;/p&gt;
&lt;p&gt;It could also be argued that #update_attribute should also be
given this property. Currently it skips validations but not
callbacks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-27T18:46:33+01:00</created-at>
      <creator-id type="integer">50137</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6632</number>
      <permalink>extend-arsave-with-callback-false</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Extend AR#save with :callback =&gt; false</title>
      <updated-at type="datetime">2011-03-27T18:46:37+01:00</updated-at>
      <user-id type="integer">50137</user-id>
      <version type="integer">1</version>
      <user-name>Brian Jensen</user-name>
      <creator-name>Brian Jensen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6632</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
