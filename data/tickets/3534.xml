<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-02T10:59:39+00:00</created-at>
  <creator-id type="integer">36635</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3534</number>
  <permalink>failing-test-hidden-by-exclamation-point-in-test-method-name</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord testing testunit typo</tag>
  <title>Failing test hidden by exclamation point in test method name</title>
  <updated-at type="datetime">2010-05-25T09:56:32+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">3</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Matthias Hennemeyer</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3534</url>
  <priority-name>Low</priority-name>
  <original-body>In activerecord/test/cases/associations/has_one_associations_test.rb:331
there is a test method with an exclamation point in the middle of the method name: 

@@@
def test_create!_respects_hash_condition
    account = companies(:first_firm).create_account_limit_500_with_hash_conditions!
    assert       !account.new_record?
    assert_equal 500, account.credit_limit
  end
@@@

This won't be catched if run with classic TestUnit (*). 
Changing the test name to test_create_bang_respects_hash_condition shows that the test is actually failing:

1) Error:
test_create_bang_respects_hash_condition(HasOneAssociationsTest):
NoMethodError: undefined method `create_account_limit_500_with_hash_conditions!' for #&lt;Firm:0x000001024ab948&gt;

I think that there are no create_something! bang methods supposed to be generated. (?!?)
(-&gt; ActiveRecord::Associations Rdoc : activerecord/lib/active_record/associations.rb:154 ff)

The patch removes the test.


(*)
Following test suite will pass (with Ruby 1.9.1p243):

@@@
require &quot;test/unit&quot;

class MyTest &lt; Test::Unit::TestCase
  def test!_me
    raise 
    has no effect because this will never be evaluated!
  end

  def test_something
  end
end
@@@</original-body>
  <latest-body>In activerecord/test/cases/associations/has_one_associations_test.rb:331
there is a test method with an exclamation point in the middle of the method name: 

@@@
def test_create!_respects_hash_condition
    account = companies(:first_firm).create_account_limit_500_with_hash_conditions!
    assert       !account.new_record?
    assert_equal 500, account.credit_limit
  end
@@@

This won't be catched if run with classic TestUnit (*). 
Changing the test name to test_create_bang_respects_hash_condition shows that the test is actually failing:

1) Error:
test_create_bang_respects_hash_condition(HasOneAssociationsTest):
NoMethodError: undefined method `create_account_limit_500_with_hash_conditions!' for #&lt;Firm:0x000001024ab948&gt;

I think that there are no create_something! bang methods supposed to be generated. (?!?)
(-&gt; ActiveRecord::Associations Rdoc : activerecord/lib/active_record/associations.rb:154 ff)

The patch removes the test.


(*)
Following test suite will pass (with Ruby 1.9.1p243):

@@@
require &quot;test/unit&quot;

class MyTest &lt; Test::Unit::TestCase
  def test!_me
    raise 
    has no effect because this will never be evaluated!
  end

  def test_something
  end
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In
activerecord/test/cases/associations/has_one_associations_test.rb:331&lt;br&gt;
there is a test method with an exclamation point in the middle of
the method name:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_create!_respects_hash_condition
    account = companies(:first_firm).create_account_limit_500_with_hash_conditions!
    assert       !account.new_record?
    assert_equal 500, account.credit_limit
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This won't be catched if run with classic TestUnit (*).&lt;br&gt;
Changing the test name to test_create_bang_respects_hash_condition
shows that the test is actually failing:&lt;/p&gt;
&lt;p&gt;1) Error:&lt;br&gt;
test_create_bang_respects_hash_condition(HasOneAssociationsTest):&lt;br&gt;
NoMethodError: undefined method
&lt;code&gt;create_account_limit_500_with_hash_conditions!' for
#&amp;lt;Firm:0x000001024ab948&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I think that there are no create_something! bang methods
supposed to be generated. (?!?)&lt;br&gt;
(-&amp;gt; ActiveRecord::Associations Rdoc :
activerecord/lib/active_record/associations.rb:154 ff)&lt;/p&gt;
&lt;p&gt;The patch removes the test.&lt;/p&gt;
&lt;p&gt;(*) Following test suite will pass (with Ruby 1.9.1p243):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require &quot;test/unit&quot;

class MyTest &amp;lt; Test::Unit::TestCase
  def test!_me
    raise 
    has no effect because this will never be evaluated!
  end

  def test_something
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In activerecord/test/cases/associations/has_one_associations_test.rb:331
there is a test method with an exclamation point in the middle of the method name: 

@@@
def test_create!_respects_hash_condition
    account = companies(:first_firm).create_account_limit_500_with_hash_conditions!
    assert       !account.new_record?
    assert_equal 500, account.credit_limit
  end
@@@

This won't be catched if run with classic TestUnit (*). 
Changing the test name to test_create_bang_respects_hash_condition shows that the test is actually failing:

1) Error:
test_create_bang_respects_hash_condition(HasOneAssociationsTest):
NoMethodError: undefined method `create_account_limit_500_with_hash_conditions!' for #&lt;Firm:0x000001024ab948&gt;

I think that there are no create_something! bang methods supposed to be generated. (?!?)
(-&gt; ActiveRecord::Associations Rdoc : activerecord/lib/active_record/associations.rb:154 ff)

The patch removes the test.


(*)
Following test suite will pass (with Ruby 1.9.1p243):

@@@
require &quot;test/unit&quot;

class MyTest &lt; Test::Unit::TestCase
  def test!_me
    raise 
    has no effect because this will never be evaluated!
  end

  def test_something
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;In
activerecord/test/cases/associations/has_one_associations_test.rb:331&lt;br&gt;
there is a test method with an exclamation point in the middle of
the method name:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_create!_respects_hash_condition
    account = companies(:first_firm).create_account_limit_500_with_hash_conditions!
    assert       !account.new_record?
    assert_equal 500, account.credit_limit
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This won't be catched if run with classic TestUnit (*).&lt;br&gt;
Changing the test name to test_create_bang_respects_hash_condition
shows that the test is actually failing:&lt;/p&gt;
&lt;p&gt;1) Error:&lt;br&gt;
test_create_bang_respects_hash_condition(HasOneAssociationsTest):&lt;br&gt;
NoMethodError: undefined method
&lt;code&gt;create_account_limit_500_with_hash_conditions!' for
#&amp;lt;Firm:0x000001024ab948&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I think that there are no create_something! bang methods
supposed to be generated. (?!?)&lt;br&gt;
(-&amp;gt; ActiveRecord::Associations Rdoc :
activerecord/lib/active_record/associations.rb:154 ff)&lt;/p&gt;
&lt;p&gt;The patch removes the test.&lt;/p&gt;
&lt;p&gt;(*) Following test suite will pass (with Ruby 1.9.1p243):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require &quot;test/unit&quot;

class MyTest &amp;lt; Test::Unit::TestCase
  def test!_me
    raise 
    has no effect because this will never be evaluated!
  end

  def test_something
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-02T10:59:39+00:00</created-at>
      <creator-id type="integer">36635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3534</number>
      <permalink>failing-test-hidden-by-exclamation-point-in-test-method-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord testing testunit typo</tag>
      <title>Failing test hidden by exclamation point in test method name</title>
      <updated-at type="datetime">2009-12-02T10:59:45+00:00</updated-at>
      <user-id type="integer">36635</user-id>
      <version type="integer">1</version>
      <user-name>Matthias Hennemeyer</user-name>
      <creator-name>Matthias Hennemeyer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3534</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Method was deleted in 3e6e3e90ef432f9fa70ee07e4ac4924e9005dc71.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Method was deleted in
3e6e3e90ef432f9fa70ee07e4ac4924e9005dc71.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-01T13:55:42+01:00</created-at>
      <creator-id type="integer">36635</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3534</number>
      <permalink>failing-test-hidden-by-exclamation-point-in-test-method-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord testing testunit typo</tag>
      <title>Failing test hidden by exclamation point in test method name</title>
      <updated-at type="datetime">2010-05-01T13:55:44+01:00</updated-at>
      <user-id type="integer">16504</user-id>
      <version type="integer">2</version>
      <user-name>Marius Nuennerich</user-name>
      <creator-name>Matthias Hennemeyer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3534</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-25T09:56:26+01:00</created-at>
      <creator-id type="integer">36635</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3534</number>
      <permalink>failing-test-hidden-by-exclamation-point-in-test-method-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord testing testunit typo</tag>
      <title>Failing test hidden by exclamation point in test method name</title>
      <updated-at type="datetime">2010-05-25T09:56:32+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Matthias Hennemeyer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3534</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>54f90b82faf2e63e0323b498103b478c8b6b35a7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-12-02T10:59:40+00:00</created-at>
      <filename>remove-test.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">339469</id>
      <size type="integer">1040</size>
      <uploader-id type="integer">36635</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/339469/remove-test.diff</url>
    </attachment>
  </attachments>
</ticket>
