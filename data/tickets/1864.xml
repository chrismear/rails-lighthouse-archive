<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-03T09:20:17+00:00</created-at>
  <creator-id type="integer">23341</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1864</number>
  <permalink>cant-store-non-activerecord-models-in-session</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>can't store non-activerecord models in session</title>
  <updated-at type="datetime">2011-03-03T09:20:17+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">8</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Sam Ruby</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
  <priority-name nil="true"></priority-name>
  <original-body>With the attached test case, the resulting error is seen.  The test works with previous versions of Rails:

/!\ FAILSAFE /!\  Tue Feb 03 18:25:11 -0500 2009
  Status: 500 Internal Server Error
  undefined class/module Cart
    /home/rubys/.gem/ruby/1.8/gems/activesupport-2.3.0/lib/active_support/message_verifier.rb:36:in `dump'</original-body>
  <latest-body>With the attached test case, the resulting error is seen.  The test works with previous versions of Rails:

/!\ FAILSAFE /!\  Tue Feb 03 18:25:11 -0500 2009
  Status: 500 Internal Server Error
  undefined class/module Cart
    /home/rubys/.gem/ruby/1.8/gems/activesupport-2.3.0/lib/active_support/message_verifier.rb:36:in `dump'</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With the attached test case, the resulting error is seen. The
test works with previous versions of Rails:&lt;/p&gt;
&lt;p&gt;/!\ FAILSAFE /!\ Tue Feb 03 18:25:11 -0500 2009 Status: 500
Internal Server Error undefined class/module Cart&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/home/rubys/.gem/ruby/1.8/gems/activesupport-2.3.0/lib/active_support/message_verifier.rb:36:in `dump'
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With the attached test case, the resulting error is seen with Rails 2.3Rc1:

/!\ FAILSAFE /!\  Tue Feb 03 18:25:11 -0500 2009
  Status: 500 Internal Server Error
  undefined class/module Cart
    /home/rubys/.gem/ruby/1.8/gems/activesupport-2.3.0/lib/active_support/message_verifier.rb:36:in `dump'

The same test works with Rails 2.2.2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With the attached test case, the resulting error is seen with
Rails 2.3Rc1:&lt;/p&gt;
&lt;p&gt;/!\ FAILSAFE /!\ Tue Feb 03 18:25:11 -0500 2009 Status: 500
Internal Server Error undefined class/module Cart&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/home/rubys/.gem/ruby/1.8/gems/activesupport-2.3.0/lib/active_support/message_verifier.rb:36:in `dump'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The same test works with Rails 2.2.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-03T23:38:14+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-04T00:09:31+00:00</updated-at>
      <user-id type="integer">23341</user-id>
      <version type="integer">1</version>
      <user-name>Sam Ruby</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Classic problem: Marshal.load doesn't invoke const_missing.

It works in 2.2.2 because the Cart constant is already set when the session is unmarshaled. Not sure why this changed in 2.3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Classic problem: Marshal.load doesn't invoke const_missing.&lt;/p&gt;
&lt;p&gt;It works in 2.2.2 because the Cart constant is already set when
the session is unmarshaled. Not sure why this changed in 2.3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-04T19:00:18+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-04T19:00:23+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fixing that will simply let me move onto the next problem.

&lt;pre&gt;
/!\ FAILSAFE /!\  Tue Feb 03 21:02:03 -0500 2009
  Status: 500 Internal Server Error
  You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.include?
    /home/rubys/.gem/ruby/1.8/gems/activerecord-2.3.0/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
&lt;/pre&gt;

There appears to be a few places where there is an assumption that objects in sessions are ActiveRecords.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixing that will simply let me move onto the next problem.&lt;/p&gt;
&lt;pre&gt;
/!\ FAILSAFE /!\  Tue Feb 03 21:02:03 -0500 2009
  Status: 500 Internal Server Error
  You have a nil object when you didn't expect it!
You might have expected an instance of Array.
The error occurred while evaluating nil.include?
    /home/rubys/.gem/ruby/1.8/gems/activerecord-2.3.0/lib/active_record/attribute_methods.rb:142:in `create_time_zone_conversion_attribute?'
&lt;/pre&gt;
&lt;p&gt;There appears to be a few places where there is an assumption
that objects in sessions are ActiveRecords.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-04T19:04:29+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-04T19:04:32+00:00</updated-at>
      <user-id type="integer">23341</user-id>
      <version type="integer">3</version>
      <user-name>Sam Ruby</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>So is this an AR specific problem? Storing Arrays and nested hashes still works I'm assuming.

None of this was intentional and we should have it fixed for the final 2.3 release.</body>
      <body-html>&lt;div&gt;&lt;p&gt;So is this an AR specific problem? Storing Arrays and nested
hashes still works I'm assuming.&lt;/p&gt;
&lt;p&gt;None of this was intentional and we should have it fixed for the
final 2.3 release.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-04T19:21:11+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-04T19:21:16+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">4</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It is cool that it is not intentional.

My guess -- and it is just a guess -- that from a code perspective there may be a number of unrelated small problems.  But, and again this is just a guess: there may be a gaping hole in the test suite.

I have what amounts to an integration test, namely a script that implements the depot application in the Agile Web Development with Rails book, as well as a few other small scenarios.  It works on 2.2.2, except for one part that was a regression in that release.  It doesn't get very far with 2.3RC0.

It is not currently structured in a way that enables it to be immediately picked up as such, but I'd like to work with somebody to use this to enhance the test suite for Rails.  I'd be willing to do the bulk of the work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It is cool that it is not intentional.&lt;/p&gt;
&lt;p&gt;My guess -- and it is just a guess -- that from a code
perspective there may be a number of unrelated small problems. But,
and again this is just a guess: there may be a gaping hole in the
test suite.&lt;/p&gt;
&lt;p&gt;I have what amounts to an integration test, namely a script that
implements the depot application in the Agile Web Development with
Rails book, as well as a few other small scenarios. It works on
2.2.2, except for one part that was a regression in that release.
It doesn't get very far with 2.3RC0.&lt;/p&gt;
&lt;p&gt;It is not currently structured in a way that enables it to be
immediately picked up as such, but I'd like to work with somebody
to use this to enhance the test suite for Rails. I'd be willing to
do the bulk of the work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-04T20:36:44+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-04T20:36:45+00:00</updated-at>
      <user-id type="integer">23341</user-id>
      <version type="integer">5</version>
      <user-name>Sam Ruby</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Note to self:
See 2-2-stable CGIRequest#stale_session_check! for the rescue method catch these types of errors.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Note to self: See 2-2-stable CGIRequest#stale_session_check! for
the rescue method catch these types of errors.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-05T23:22:39+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-05T23:22:41+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">6</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think this is caused because we've pushed out the session saving till outside the dispatch hook.

This means we're marshalling the using 'broken vestigial' constants mentioned in #1339.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this is caused because we've pushed out the session
saving till outside the dispatch hook.&lt;/p&gt;
&lt;p&gt;This means we're marshalling the using 'broken vestigial'
constants mentioned in &lt;a href=&quot;/projects/8994/tickets/1339&quot; title=&quot;Ticket #1339&quot;&gt;#1339&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-05T23:56:04+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-05T23:56:08+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">7</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It looks like this commit solved the specific issue.

http://github.com/rails/rails/commit/7259baab4722d2343cbd0d81cb2aacc95d0c9461

Please open new tickets for any related issues and assign them to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It looks like this commit solved the specific issue.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/7259baab4722d2343cbd0d81cb2aacc95d0c9461&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please open new tickets for any related issues and assign them
to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-08T17:13:09+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2009-02-08T17:13:13+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">8</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet&lt;/a&gt; are not only a place to hold your necessities, but are also a potential investment in image and functionality. If fashions never changed, with renowned Coach durability, their handbags could be used for a lifetime, this designer price is worth the cost in quality. 
The hard transport,&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet&lt;/a&gt;  providing a mightily pleasing look at. Prepare bags are typically excluding hot property than handbags diffuse through other else designers, they still might be high grace, nevertheless Break In Purses are all bags are)! Although the bags start totes on Exercise Bags, you&#8217;re express out-and-out might assessment drill animation sale more than a,&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet online&lt;/a&gt; some customers are express to gravy. Develop bags are sometimes replicated because of the attractiveness and disconcerted-reaching. When you see the Form Kristin OP Prowess Objection affect Hobo Handbags Eponym trademark marking on auction are labeled into 3 painless categories: diminutive, medium, and many types of The proposal normally begins companionless the method of designs.&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach clearance&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet&lt;/a&gt; are not
only a place to hold your necessities, but are also a potential
investment in image and functionality. If fashions never changed,
with renowned Coach durability, their handbags could be used for a
lifetime, this designer price is worth the cost in quality.&lt;br&gt;
The hard transport,&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach
outlet&lt;/a&gt; providing a mightily pleasing look at. Prepare bags are
typically excluding hot property than handbags diffuse through
other else designers, they still might be high grace, nevertheless
Break In Purses are all bags are)! Although the bags start totes on
Exercise Bags, you&amp;#8217;re express out-and-out might assessment
drill animation sale more than a,&lt;a href=
&quot;http://www.incoachoutlet.com/&quot;&gt;coach outlet online&lt;/a&gt; some
customers are express to gravy. Develop bags are sometimes
replicated because of the attractiveness and disconcerted-reaching.
When you see the Form Kristin OP Prowess Objection affect Hobo
Handbags Eponym trademark marking on auction are labeled into 3
painless categories: diminutive, medium, and many types of The
proposal normally begins companionless the method of
designs.&lt;a href=&quot;http://www.incoachoutlet.com/&quot;&gt;coach
clearance&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-03T07:53:02+00:00</created-at>
      <creator-id type="integer">23341</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1864</number>
      <permalink>cant-store-non-activerecord-models-in-session</permalink>
      <priority type="integer">58</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>can't store non-activerecord models in session</title>
      <updated-at type="datetime">2011-03-03T09:20:17+00:00</updated-at>
      <user-id type="integer">139624</user-id>
      <version type="integer">9</version>
      <user-name>cheap coach bags</user-name>
      <creator-name>Sam Ruby</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1864</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>38667daac12de7a224c2c4c056063b5ee31013c2</code>
      <content-type>application/x-sh</content-type>
      <created-at type="datetime">2009-02-03T23:38:14+00:00</created-at>
      <filename>test.sh</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">84731</id>
      <size type="integer">399</size>
      <uploader-id type="integer">23341</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/84731/test.sh</url>
    </attachment>
  </attachments>
</ticket>
