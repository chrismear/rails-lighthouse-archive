<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-19T14:56:16+01:00</created-at>
  <creator-id type="integer">107829</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5152</number>
  <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;rails3 activerecord&quot;</tag>
  <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
  <updated-at type="datetime">2010-07-21T13:56:14+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">10</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>noe</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Hi,

I have a problem with the has_and_belongs_to_many association. I don't use integer id, but a string uuid for ids. I have 3 tables: users and roles with a users_roles between. If I do this:

@@@ ruby
user = User.first
role = Role.first
user.roles &lt;&lt; role
user.save!
@@@

=&gt; It's work with 2.3.8 but not with 3b4. The uuids for user and role are ok, but not the foreign keys is users_roles.

If I have a uuid for user like &quot;123456abc&quot;, in users_roles.user_id or users_roles.role_id, I have &quot;'123456abc'&quot; with the '' included.

Regards,
noe</original-body>
  <latest-body>Hi,

I have a problem with the has_and_belongs_to_many association. I don't use integer id, but a string uuid for ids. I have 3 tables: users and roles with a users_roles between. If I do this:

@@@ ruby
user = User.first
role = Role.first
user.roles &lt;&lt; role
user.save!
@@@

=&gt; It's work with 2.3.8 but not with 3b4. The uuids for user and role are ok, but not the foreign keys is users_roles.

If I have a uuid for user like &quot;123456abc&quot;, in users_roles.user_id or users_roles.role_id, I have &quot;'123456abc'&quot; with the '' included.

Regards,
noe</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I have a problem with the has_and_belongs_to_many association. I
don't use integer id, but a string uuid for ids. I have 3 tables:
users and roles with a users_roles between. If I do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user = User.first
role = Role.first
user.roles &amp;lt;&amp;lt; role
user.save!&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;=&amp;gt; It's work with 2.3.8 but not with 3b4. The uuids for user
and role are ok, but not the foreign keys is users_roles.&lt;/p&gt;
&lt;p&gt;If I have a uuid for user like &quot;123456abc&quot;, in
users_roles.user_id or users_roles.role_id, I have &quot;'123456abc'&quot;
with the '' included.&lt;/p&gt;
&lt;p&gt;Regards,&lt;br&gt;
noe&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

I have a problem with the has_and_belongs_to_many association. I don't use integer id, but a string uuid for ids. I have 3 tables: users and roles with a users_roles between. If I do this:

@@@ ruby
user = User.first
role = Role.first
user.roles &lt;&lt; role
user.save!
@@@

=&gt; It's work with 2.3.8 but not with 3b4. The uuids for user and role are ok, but not the foreign keys is users_roles.

If I have a uuid for user like &quot;123456abc&quot;, in users_roles.user_id or users_roles.role_id, I have &quot;'123456abc'&quot; with the '' included.

Regards,
noe</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I have a problem with the has_and_belongs_to_many association. I
don't use integer id, but a string uuid for ids. I have 3 tables:
users and roles with a users_roles between. If I do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;user = User.first
role = Role.first
user.roles &amp;lt;&amp;lt; role
user.save!&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;=&amp;gt; It's work with 2.3.8 but not with 3b4. The uuids for user
and role are ok, but not the foreign keys is users_roles.&lt;/p&gt;
&lt;p&gt;If I have a uuid for user like &quot;123456abc&quot;, in
users_roles.user_id or users_roles.role_id, I have &quot;'123456abc'&quot;
with the '' included.&lt;/p&gt;
&lt;p&gt;Regards,&lt;br&gt;
noe&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T14:56:16+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-19T14:56:17+01:00</updated-at>
      <user-id type="integer">107829</user-id>
      <version type="integer">1</version>
      <user-name>noe</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T18:00:19+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-19T18:00:22+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is code and test patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is code and test patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T20:34:15+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 40263
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-19T20:34:17+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for the patch, it work well for foreign keys :)

I have a related issue if I add created_at and/or updated_at columns in users_roles table. It's the same problem: AR try to insert &quot;'a date'&quot; instead of &quot;a date&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for the patch, it work well for foreign keys :)&lt;/p&gt;
&lt;p&gt;I have a related issue if I add created_at and/or updated_at
columns in users_roles table. It's the same problem: AR try to
insert &quot;'a date'&quot; instead of &quot;a date&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T07:53:16+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-20T07:53:18+01:00</updated-at>
      <user-id type="integer">107829</user-id>
      <version type="integer">4</version>
      <user-name>noe</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I am using rails edge and surprisingly I am getting nil for both created_at and updated_at in my join table. Not sure what I am missing.

@@@ ruby
ActiveRecord::Schema.define(:version =&gt; 20100719150531) do

  create_table &quot;countries&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.string &quot;country_id&quot;
    t.string &quot;name&quot;
  end

  create_table &quot;countries_treaties&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.string   &quot;country_id&quot;, :null =&gt; false
    t.string   &quot;treaty_id&quot;,  :null =&gt; false
    t.datetime &quot;updated_at&quot;
    t.datetime &quot;created_at&quot;
  end

  create_table &quot;treaties&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.string &quot;treaty_id&quot;
    t.string &quot;name&quot;
  end

end

class Country &lt; ActiveRecord::Base
  set_primary_key :country_id
  has_and_belongs_to_many :treaties

  def self.lab
    Country.delete_all
    Treaty.delete_all
    c = Country.new(:name =&gt; 'india')
    c.country_id = 'c1'
    c.save!

    t = Treaty.new(:name =&gt; 'peace')
    t.treaty_id = 't1'
    c.treaties &lt;&lt; t
    c.save!
    puts Country.first.treaties.inspect

    con = ActiveRecord::Base.connection
    sql = 'select * from countries_treaties'
    records = con.select_rows(sql)
    puts records.inspect
    record = records.last
    puts record.inspect
    puts record[0]
    puts record[1]
    puts record[2]
    puts record[3]
  end

end

class Treaty &lt; ActiveRecord::Base
  set_primary_key :treaty_id

  has_and_belongs_to_many :countries

  def self.lab
  end

end

Country.lab 

ree-1.8.7-2010.01 &gt; Country.lab
  SQL (0.4ms)   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

  SQL (3.4ms)  DELETE FROM &quot;countries&quot; WHERE 1=1
  SQL (1.8ms)  DELETE FROM &quot;treaties&quot; WHERE 1=1
  SQL (0.4ms)  INSERT INTO &quot;countries&quot; (&quot;country_id&quot;, &quot;name&quot;) VALUES ('c1', 'india')
  SQL (0.4ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;, &quot;treaty_id&quot;) VALUES ('peace', 't1')
  SQL (0.2ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES ('c1', 't1')
  Country Load (0.5ms)  SELECT &quot;countries&quot;.* FROM &quot;countries&quot; LIMIT 1
  Treaty Load (0.3ms)  SELECT * FROM &quot;treaties&quot; INNER JOIN &quot;countries_treaties&quot; ON &quot;treaties&quot;.treaty_id = &quot;countries_treaties&quot;.treaty_id WHERE (&quot;countries_treaties&quot;.country_id = 'c1' )
[#&lt;Treaty treaty_id: &quot;t1&quot;, name: &quot;peace&quot;&gt;, #&lt;Treaty treaty_id: &quot;t1&quot;, name: &quot;peace&quot;&gt;, #&lt;Treaty treaty_id: &quot;t1&quot;, name: &quot;peace&quot;&gt;]
  SQL (0.2ms)  select * from countries_treaties
[[&quot;c1&quot;, &quot;t1&quot;, nil, nil], [&quot;c1&quot;, &quot;t1&quot;, nil, nil], [&quot;c1&quot;, &quot;t1&quot;, nil, nil]]
[&quot;c1&quot;, &quot;t1&quot;, nil, nil]
c1
t1
nil
nil


@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am using rails edge and surprisingly I am getting nil for both
created_at and updated_at in my join table. Not sure what I am
missing.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100719150531) do

  create_table &quot;countries&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
    t.string &quot;country_id&quot;
    t.string &quot;name&quot;
  end

  create_table &quot;countries_treaties&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
    t.string   &quot;country_id&quot;, :null =&amp;gt; false
    t.string   &quot;treaty_id&quot;,  :null =&amp;gt; false
    t.datetime &quot;updated_at&quot;
    t.datetime &quot;created_at&quot;
  end

  create_table &quot;treaties&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
    t.string &quot;treaty_id&quot;
    t.string &quot;name&quot;
  end

end

class Country &amp;lt; ActiveRecord::Base
  set_primary_key :country_id
  has_and_belongs_to_many :treaties

  def self.lab
    Country.delete_all
    Treaty.delete_all
    c = Country.new(:name =&amp;gt; 'india')
    c.country_id = 'c1'
    c.save!

    t = Treaty.new(:name =&amp;gt; 'peace')
    t.treaty_id = 't1'
    c.treaties &amp;lt;&amp;lt; t
    c.save!
    puts Country.first.treaties.inspect

    con = ActiveRecord::Base.connection
    sql = 'select * from countries_treaties'
    records = con.select_rows(sql)
    puts records.inspect
    record = records.last
    puts record.inspect
    puts record[0]
    puts record[1]
    puts record[2]
    puts record[3]
  end

end

class Treaty &amp;lt; ActiveRecord::Base
  set_primary_key :treaty_id

  has_and_belongs_to_many :countries

  def self.lab
  end

end

Country.lab 

ree-1.8.7-2010.01 &amp;gt; Country.lab
  SQL (0.4ms)   SELECT name
 FROM sqlite_master
 WHERE type = 'table' AND NOT name = 'sqlite_sequence'

  SQL (3.4ms)  DELETE FROM &quot;countries&quot; WHERE 1=1
  SQL (1.8ms)  DELETE FROM &quot;treaties&quot; WHERE 1=1
  SQL (0.4ms)  INSERT INTO &quot;countries&quot; (&quot;country_id&quot;, &quot;name&quot;) VALUES ('c1', 'india')
  SQL (0.4ms)  INSERT INTO &quot;treaties&quot; (&quot;name&quot;, &quot;treaty_id&quot;) VALUES ('peace', 't1')
  SQL (0.2ms)  INSERT INTO &quot;countries_treaties&quot; (&quot;country_id&quot;, &quot;treaty_id&quot;) VALUES ('c1', 't1')
  Country Load (0.5ms)  SELECT &quot;countries&quot;.* FROM &quot;countries&quot; LIMIT 1
  Treaty Load (0.3ms)  SELECT * FROM &quot;treaties&quot; INNER JOIN &quot;countries_treaties&quot; ON &quot;treaties&quot;.treaty_id = &quot;countries_treaties&quot;.treaty_id WHERE (&quot;countries_treaties&quot;.country_id = 'c1' )
[#&amp;lt;Treaty treaty_id: &quot;t1&quot;, name: &quot;peace&quot;&amp;gt;, #&amp;lt;Treaty treaty_id: &quot;t1&quot;, name: &quot;peace&quot;&amp;gt;, #&amp;lt;Treaty treaty_id: &quot;t1&quot;, name: &quot;peace&quot;&amp;gt;]
  SQL (0.2ms)  select * from countries_treaties
[[&quot;c1&quot;, &quot;t1&quot;, nil, nil], [&quot;c1&quot;, &quot;t1&quot;, nil, nil], [&quot;c1&quot;, &quot;t1&quot;, nil, nil]]
[&quot;c1&quot;, &quot;t1&quot;, nil, nil]
c1
t1
nil
nil&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T11:13:53+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-20T11:13:56+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The `has_and_belongs_to_many` association doesn't store `created_at` and `updated_at` because they would be useless since there is no join model to access them. And since they are created and updated only when assigning one model to another, the times would be exactly the same.

A habtm join table row is never updated even when you add the same model to another. A new row is always created.

    c.treaties &lt;&lt; t
    c.treaties &lt;&lt; t

would give 2 additional join table rows.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association doesn't
store &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; because
they would be useless since there is no join model to access them.
And since they are created and updated only when assigning one
model to another, the times would be exactly the same.&lt;/p&gt;
&lt;p&gt;A habtm join table row is never updated even when you add the
same model to another. A new row is always created.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;c.treaties &amp;lt;&amp;lt; t
c.treaties &amp;lt;&amp;lt; t&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;would give 2 additional join table rows.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T15:43:42+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-20T15:43:43+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">6</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>timestamps should always be updated to reduce any element of surprise. Created ticket #5161 to fix that issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;timestamps should always be updated to reduce any element of
surprise. Created ticket &lt;a href=&quot;/projects/8994/tickets/5161&quot;
title=&quot;Ticket #5161&quot;&gt;#5161&lt;/a&gt; to fix that issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T16:20:50+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-20T16:20:51+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Samuel, I would expect c.treaties &lt;&lt; t to create two rows unless you specify :uniq in the association.

Besides, it is documented that all columns in the join table are available in the model instance, overwriting the model ones. So if you do post.tags, where posts and tags have a HABTM relationship, the created_at and updated_at fields for each tag object in post.tags will return the created_at and updated_at value in the join table, and not in the tag attribute. This work for all columns and this is the reason you should not have id in join tables (otherwise it would overwrite your model id).</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Samuel, I would expect c.treaties &amp;lt;&amp;lt; t to create two rows
unless you specify :uniq in the association.&lt;/p&gt;
&lt;p&gt;Besides, it is documented that all columns in the join table are
available in the model instance, overwriting the model ones. So if
you do post.tags, where posts and tags have a HABTM relationship,
the created_at and updated_at fields for each tag object in
post.tags will return the created_at and updated_at value in the
join table, and not in the tag attribute. This work for all columns
and this is the reason you should not have id in join tables
(otherwise it would overwrite your model id).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T16:25:37+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-20T16:25:39+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [f576d7cf848717384799a9e9669b253ccc94deb5]) Ensure that primary_keys of HABTM records is not double quoted

[#5152 state:reslved]
http://github.com/rails/rails/commit/f576d7cf848717384799a9e9669b253ccc94deb5</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/f576d7cf848717384799a9e9669b253ccc94deb5&quot;
title=
&quot;Changeset [f576d7cf848717384799a9e9669b253ccc94deb5]&quot;&gt;[f576d7cf848717384799a9e9669b253ccc94deb5]&lt;/a&gt;)
Ensure that primary_keys of HABTM records is not double quoted&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5152&quot; title=
&quot;Ticket #5152&quot;&gt;#5152&lt;/a&gt; state:reslved] &lt;a href=
&quot;http://github.com/rails/rails/commit/f576d7cf848717384799a9e9669b253ccc94deb5&quot;&gt;
http://github.com/rails/rails/commit/f576d7cf848717384799a9e9669b25...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-21T01:11:37+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-21T01:11:39+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-21T13:56:12+01:00</created-at>
      <creator-id type="integer">107829</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5152</number>
      <permalink>rails3-b4-has_and_belongs_to_many-habtm-with-string-ids-dont-work</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;rails3 activerecord&quot;</tag>
      <title>[Rails3 b4] has_and_belongs_to_many (habtm) with string ids don't work</title>
      <updated-at type="datetime">2010-07-21T13:56:14+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>noe</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5152</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a0e2a0630242b9d69575cdd968e1cdbf2a0283cc</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-19T20:34:15+01:00</created-at>
      <filename>5152_fix_for_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">596530</id>
      <size type="integer">4848</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/596530/5152_fix_for_edge.diff</url>
    </attachment>
  </attachments>
</ticket>
