<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-26T05:40:36+01:00</created-at>
  <creator-id type="integer">27245</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">710</number>
  <permalink>condition-hashes-through-joins-gives-fails-when-circular-references-are-used</permalink>
  <priority type="integer">179</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord edge joins</tag>
  <title>Condition Hashes through Joins Gives Fails when Circular References are Used</title>
  <updated-at type="datetime">2008-07-28T01:39:48+01:00</updated-at>
  <user-id type="integer">27245</user-id>
  <version type="integer">4</version>
  <user-name>Ben Woodcroft</user-name>
  <creator-name>Ben Woodcroft</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/710</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>On Rails edge github http://github.com/rails/rails/commit/cd994eff9a343df376bfaec59de5b24a2ab5125

Say I&#8217;m trying to get the names of all the books on a particular shelf (which are book1 and book2), and all I have is the name of one of the books (book1).
Using your method, I would


Book.all(
  :joins =&gt; {:bookshelf =&gt; :books},
  :conditions =&gt; {:bookshelves =&gt; {:books =&gt; {:title =&gt; 'book1'}}}
).collect{|b| b.title}


I end up getting

=&gt; [&quot;book1&quot;, &quot;book1&quot;]

instead of 

Attached skeleton rails app I tested the bug on, including sqlite with included data.

=&gt; [&quot;book1&quot;, &quot;book2&quot;]</original-body>
  <latest-body>On Rails edge github http://github.com/rails/rails/commit/cd994eff9a343df376bfaec59de5b24a2ab5125

Say I&#8217;m trying to get the names of all the books on a particular shelf (which are book1 and book2), and all I have is the name of one of the books (book1).
Using your method, I would


Book.all(
  :joins =&gt; {:bookshelf =&gt; :books},
  :conditions =&gt; {:bookshelves =&gt; {:books =&gt; {:title =&gt; 'book1'}}}
).collect{|b| b.title}


I end up getting

=&gt; [&quot;book1&quot;, &quot;book1&quot;]

instead of 

Attached skeleton rails app I tested the bug on, including sqlite with included data.

=&gt; [&quot;book1&quot;, &quot;book2&quot;]</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
On Rails edge github &lt;a href=&quot;http://github.com/rails/rails/commit/cd994eff9a343df376bfaec59de5b24a2ab5125&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
Say I&#8217;m trying to get the names of all the books on a particular shelf (which are book1 and book2), and all I have is the name of one of the books (book1).
&lt;/p&gt;&lt;p&gt;
Using your method, I would
&lt;/p&gt;&lt;p&gt;
Book.all(
&lt;/p&gt;&lt;p&gt;
:joins =&gt; {:bookshelf =&gt; :books},
&lt;/p&gt;&lt;p&gt;
:conditions =&gt; {:bookshelves =&gt; {:books =&gt; {:title =&gt; 'book1'}}}
&lt;/p&gt;&lt;p&gt;
).collect{|b| b.title}
&lt;/p&gt;&lt;p&gt;
I end up getting
&lt;/p&gt;&lt;p&gt;
=&gt; [&quot;book1&quot;, &quot;book1&quot;]
&lt;/p&gt;&lt;p&gt;
instead of
&lt;/p&gt;&lt;p&gt;
Attached skeleton rails app I tested the bug on, including sqlite with included data.
&lt;/p&gt;&lt;p&gt;
=&gt; [&quot;book1&quot;, &quot;book2&quot;]
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>On Rails edge github http://github.com/rails/rails/commit/cd994eff9a343df376bfaec59de5b24a2ab5125

Say I&#8217;m trying to get the names of all the books on a particular shelf (which are book1 and book2), and all I have is the name of one of the books (book1).
Using your method, I would


Book.all(
  :joins =&gt; {:bookshelf =&gt; :books},
  :conditions =&gt; {:bookshelves =&gt; {:books =&gt; {:title =&gt; 'book1'}}}
).collect{|b| b.title}


I end up getting

=&gt; [&quot;book1&quot;, &quot;book1&quot;]

instead of 

Attached skeleton rails app I tested the bug on, including sqlite with included data.

=&gt; [&quot;book1&quot;, &quot;book2&quot;]</body>
      <body-html>&lt;div&gt;&lt;p&gt;
On Rails edge github &lt;a href=&quot;http://github.com/rails/rails/commit/cd994eff9a343df376bfaec59de5b24a2ab5125&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
Say I&#8217;m trying to get the names of all the books on a particular shelf (which are book1 and book2), and all I have is the name of one of the books (book1).
&lt;/p&gt;&lt;p&gt;
Using your method, I would
&lt;/p&gt;&lt;p&gt;
Book.all(
&lt;/p&gt;&lt;p&gt;
:joins =&gt; {:bookshelf =&gt; :books},
&lt;/p&gt;&lt;p&gt;
:conditions =&gt; {:bookshelves =&gt; {:books =&gt; {:title =&gt; 'book1'}}}
&lt;/p&gt;&lt;p&gt;
).collect{|b| b.title}
&lt;/p&gt;&lt;p&gt;
I end up getting
&lt;/p&gt;&lt;p&gt;
=&gt; [&quot;book1&quot;, &quot;book1&quot;]
&lt;/p&gt;&lt;p&gt;
instead of
&lt;/p&gt;&lt;p&gt;
Attached skeleton rails app I tested the bug on, including sqlite with included data.
&lt;/p&gt;&lt;p&gt;
=&gt; [&quot;book1&quot;, &quot;book2&quot;]
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-26T05:40:37+01:00</created-at>
      <creator-id type="integer">27245</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">710</number>
      <permalink>condition-hashes-through-joins-gives-fails-when-circular-references-are-used</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge joins</tag>
      <title>Condition Hashes through Joins Gives Fails when Circular References are Used</title>
      <updated-at type="datetime">2008-07-26T05:40:37+01:00</updated-at>
      <user-id type="integer">27245</user-id>
      <version type="integer">1</version>
      <user-name>Ben Woodcroft</user-name>
      <creator-name>Ben Woodcroft</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/710</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry, to clarify, the github link is to the one where the feature was introduced, not the one to where the attached rails app was updated. That is 26 July 2008 or thereabouts

http://github.com/rails/rails/commit/f48b9ab5c2741ddbdbc0a9f4cd06875a1e3c8b02

Thanks,
ben</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sorry, to clarify, the github link is to the one where the feature was introduced, not the one to where the attached rails app was updated. That is 26 July 2008 or thereabouts
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/f48b9ab5c2741ddbdbc0a9f4cd06875a1e3c8b02&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
Thanks,
&lt;/p&gt;&lt;p&gt;
ben
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-26T05:46:56+01:00</created-at>
      <creator-id type="integer">27245</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">710</number>
      <permalink>condition-hashes-through-joins-gives-fails-when-circular-references-are-used</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord edge joins</tag>
      <title>Condition Hashes through Joins Gives Fails when Circular References are Used</title>
      <updated-at type="datetime">2008-07-26T05:46:56+01:00</updated-at>
      <user-id type="integer">27245</user-id>
      <version type="integer">2</version>
      <user-name>Ben Woodcroft</user-name>
      <creator-name>Ben Woodcroft</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/710</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>You should look at the query generated by Book.all(:joins =&gt; {:bookshelf =&gt; :books}) and use whatever the alias AR uses for books table.

:conditions =&gt; {:books_alias_or_table_name =&gt; {:title =&gt; 'book1'}}</body>
      <body-html>&lt;div&gt;&lt;p&gt;
You should look at the query generated by Book.all(:joins =&gt; {:bookshelf =&gt; :books}) and use whatever the alias AR uses for books table.
&lt;/p&gt;&lt;p&gt;
:conditions =&gt; {:books_alias_or_table_name =&gt; {:title =&gt; 'book1'}}
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-26T15:10:49+01:00</created-at>
      <creator-id type="integer">27245</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">710</number>
      <permalink>condition-hashes-through-joins-gives-fails-when-circular-references-are-used</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord edge joins</tag>
      <title>Condition Hashes through Joins Gives Fails when Circular References are Used</title>
      <updated-at type="datetime">2008-07-26T15:10:49+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Ben Woodcroft</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/710</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>But not having to look/remember/change it when rails does was the coolest thing about your patch.. 

Looks like I've confused myself slightly - I thought you had to specify the whole path to the table from the original via the joins.

It would be nice if the conditions and joins were somehow merged into one hash - that way there would be no confusion about the table the conditions were specified on.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
But not having to look/remember/change it when rails does was the coolest thing about your patch..
&lt;/p&gt;&lt;p&gt;
Looks like I've confused myself slightly - I thought you had to specify the whole path to the table from the original via the joins.
&lt;/p&gt;&lt;p&gt;
It would be nice if the conditions and joins were somehow merged into one hash - that way there would be no confusion about the table the conditions were specified on.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-28T01:39:48+01:00</created-at>
      <creator-id type="integer">27245</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">710</number>
      <permalink>condition-hashes-through-joins-gives-fails-when-circular-references-are-used</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord edge joins</tag>
      <title>Condition Hashes through Joins Gives Fails when Circular References are Used</title>
      <updated-at type="datetime">2008-07-28T01:39:48+01:00</updated-at>
      <user-id type="integer">27245</user-id>
      <version type="integer">4</version>
      <user-name>Ben Woodcroft</user-name>
      <creator-name>Ben Woodcroft</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/710</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0ccb4c134e1dcae0f9a50ea95211863950a560cd</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2008-07-26T05:40:36+01:00</created-at>
      <filename>bookshelf.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">35113</id>
      <size type="integer">17587664</size>
      <uploader-id type="integer">27245</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/35113/bookshelf.zip</url>
    </attachment>
  </attachments>
</ticket>
