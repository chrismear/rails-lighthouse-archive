From 07a340e8a8c54770a80f7ad2432e265c01b926d9 Mon Sep 17 00:00:00 2001
From: Harri Kauhanen <harri.kauhanen@gmail.com>
Date: Tue, 9 Sep 2008 09:59:07 +0300
Subject: [PATCH] Naming convention for namespaced models updated and made configurable

---
 activerecord/lib/active_record/base.rb |   29 ++++++++++++++++++++++++++---
 1 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index 907495a..8383d28 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -441,6 +441,17 @@ module ActiveRecord #:nodoc:
     cattr_accessor :pluralize_table_names, :instance_writer => false
     @@pluralize_table_names = true
 
+    # Indicates whether table names should be the prefixed with module name(s) of the class.
+    # If true, the default table name for module Company; class Product < ActiveRecord::Base; end; end; 
+    # will be +company__products+. If false, it would just be +products+.
+    # See table_name for the full rules on table/class naming. This is false, by default.
+    cattr_accessor :namespace_modules_in_table_names, :instance_writer => false
+    @@namespace_modules_in_table_names = false
+
+    # Determine whether to store the full constant name including namespace when using STI
+    superclass_delegating_accessor :store_full_sti_class
+    self.store_full_sti_class = false
+
     # Determines whether to use ANSI codes to colorize the logging statements committed by the connection adapter. These colors
     # make it much easier to overview things during debugging (when used through a reader like +tail+ and on a black background), but
     # may complicate matters if you use software like syslog. This is true, by default.
@@ -1038,6 +1049,7 @@ module ActiveRecord #:nodoc:
 
       def reset_table_name #:nodoc:
         base = base_class
+        class_name = base.name
 
         name =
           # STI subclasses always use their superclass' table.
@@ -1049,8 +1061,10 @@ module ActiveRecord #:nodoc:
               contained = parent.table_name
               contained = contained.singularize if parent.pluralize_table_names
               contained << '_'
+              class_name = class_name.sub("#{parent.name}::", '')
             end
-            name = "#{table_name_prefix}#{contained}#{undecorated_table_name(base.name)}#{table_name_suffix}"
+            
+            name = "#{table_name_prefix}#{contained}#{undecorated_table_name(class_name)}#{table_name_suffix}"
           end
 
         set_table_name(name)
@@ -1155,9 +1169,12 @@ module ActiveRecord #:nodoc:
       alias :sequence_name= :set_sequence_name
 
       # Turns the +table_name+ back into a class name following the reverse rules of +table_name+.
+      # NOTE! This method is broken for nested inner classes
       def class_name(table_name = table_name) # :nodoc:
         # remove any prefix and/or suffix from the table name
-        class_name = table_name[table_name_prefix.length..-(table_name_suffix.length + 1)].camelize
+        class_name = table_name[table_name_prefix.length..-(table_name_suffix.length + 1)]
+        class_name = class_name.gsub('__', '/') if namespace_modules_in_table_names
+        class_name = class_name.camelize
         class_name = class_name.singularize if pluralize_table_names
         class_name
       end
@@ -1667,7 +1684,13 @@ module ActiveRecord #:nodoc:
 
         # Guesses the table name, but does not decorate it with prefix and suffix information.
         def undecorated_table_name(class_name = base_class.name)
-          table_name = class_name.to_s.demodulize.underscore
+          # table_name = class_name.to_s.demodulize.underscore
+          if namespace_modules_in_table_names
+            table_name = class_name.to_s.underscore.gsub('/', '__')
+          else
+            table_name = class_name.to_s.demodulize.underscore
+          end
+          
           table_name = table_name.pluralize if pluralize_table_names
           table_name
         end
-- 
1.5.5.1


From 2737b7e2acbd60a9be6decffcd1853fadc86a86f Mon Sep 17 00:00:00 2001
From: Harri Kauhanen <harri.kauhanen@gmail.com>
Date: Tue, 9 Sep 2008 10:11:29 +0300
Subject: [PATCH] Fixed a bug caused namespaced model not behave

---
 activesupport/lib/active_support/dependencies.rb |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/activesupport/lib/active_support/dependencies.rb b/activesupport/lib/active_support/dependencies.rb
index 3d871ee..fd93d70 100644
--- a/activesupport/lib/active_support/dependencies.rb
+++ b/activesupport/lib/active_support/dependencies.rb
@@ -402,13 +402,16 @@ module ActiveSupport #:nodoc:
         raise ArgumentError, "A copy of #{from_mod} has been removed from the module tree but is still active!"
       end
 
-      raise ArgumentError, "#{from_mod} is not missing constant #{const_name}!" if uninherited_const_defined?(from_mod, const_name)
+      # TODO Is this change ok? 
+      #   Removed, because causes namespaced models misbehave.
+      # raise ArgumentError, "#{from_mod} is not missing constant #{const_name}!" if uninherited_const_defined?(from_mod, const_name)
 
       qualified_name = qualified_name_for from_mod, const_name
       path_suffix = qualified_name.underscore
       name_error = NameError.new("uninitialized constant #{qualified_name}")
 
       file_path = search_for_file(path_suffix)
+      
       if file_path && ! loaded.include?(File.expand_path(file_path)) # We found a matching file to load
         require_or_load file_path
         raise LoadError, "Expected #{file_path} to define #{qualified_name}" unless uninherited_const_defined?(from_mod, const_name)
-- 
1.5.5.1


From aff0d85fa5e69384d4bf53ed339cabe962706270 Mon Sep 17 00:00:00 2001
From: Harri Kauhanen <harri.kauhanen@gmail.com>
Date: Tue, 9 Sep 2008 11:23:00 +0300
Subject: [PATCH] Added a simple testcase for namespaced models

---
 activerecord/test/cases/namespaced_models_test.rb |   47 +++++++++++++++++++++
 1 files changed, 47 insertions(+), 0 deletions(-)
 create mode 100644 activerecord/test/cases/namespaced_models_test.rb

diff --git a/activerecord/test/cases/namespaced_models_test.rb b/activerecord/test/cases/namespaced_models_test.rb
new file mode 100644
index 0000000..dc12295
--- /dev/null
+++ b/activerecord/test/cases/namespaced_models_test.rb
@@ -0,0 +1,47 @@
+module Animal
+  class Dog < ActiveRecord::Base
+    class Color < ActiveRecord::Base
+    end
+  end
+end
+
+class Animal::Cat < ActiveRecord::Base
+  class Color < ActiveRecord::Base
+  end
+end
+
+module Animal
+  module Insect
+    class Bug < ActiveRecord::Base
+      class Color < ActiveRecord::Base
+      end
+    end
+  end
+end
+
+class Bug < ActiveRecord::Base
+  # not an "animal bug"
+end
+
+class NamespacedModelsTest < ActiveRecord::TestCase
+  def test_table_naming
+    old_namespace_modules_in_table_names = ActiveRecord::Base.namespace_modules_in_table_names
+    old_pluralize_table_names = ActiveRecord::Base.pluralize_table_names
+    ActiveRecord::Base.pluralize_table_names = true
+
+    ActiveRecord::Base.namespace_modules_in_table_names = false
+    assert_equal 'dogs', Animal::Dog.table_name
+    assert_equal 'dog_colors', Animal::Dog::Color.table_name
+
+    ActiveRecord::Base.namespace_modules_in_table_names = true
+    assert_equal 'animal__cats', Animal::Cat.table_name
+    assert_equal 'animal__cat_colors', Animal::Cat::Color.table_name
+    assert_equal 'animal__insect__bugs', Animal::Insect::Bug.table_name
+    assert_equal 'animal__insect__bug_colors', Animal::Insect::Bug::Color.table_name
+    assert_equal 'bugs', Bug.table_name
+
+  ensure
+    ActiveRecord::Base.namespace_modules_in_table_names = old_namespace_modules_in_table_names
+    ActiveRecord::Base.pluralize_table_names = old_pluralize_table_names
+  end
+end
-- 
1.5.5.1


From 90a17fe74ffe807e746047bde3c82de885064858 Mon Sep 17 00:00:00 2001
From: Harri Kauhanen <harri.kauhanen@gmail.com>
Date: Tue, 9 Sep 2008 11:26:21 +0300
Subject: [PATCH] Added namespace_modules_in_table_names to new_rails_defaults

---
 .../configs/initializers/new_rails_defaults.rb     |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/railties/configs/initializers/new_rails_defaults.rb b/railties/configs/initializers/new_rails_defaults.rb
index 78e0117..81d46c3 100644
--- a/railties/configs/initializers/new_rails_defaults.rb
+++ b/railties/configs/initializers/new_rails_defaults.rb
@@ -7,6 +7,9 @@ if defined?(ActiveRecord)
 
   # Store the full class name (including module namespace) in STI type column.
   ActiveRecord::Base.store_full_sti_class = true
+  
+  # Use module namespace as a part of table names.
+  ActiveRecord::Base.namespace_modules_in_table_names = true
 end
 
 # Use ISO 8601 format for JSON serialized times and dates.
-- 
1.5.5.1


From b2441b8028fc0f02babee2d10416d070e1d88e42 Mon Sep 17 00:00:00 2001
From: Harri Kauhanen <harri.kauhanen@gmail.com>
Date: Tue, 9 Sep 2008 17:11:10 +0300
Subject: [PATCH] Made fixtures work with namespaced models

---
 activerecord/lib/active_record/fixtures.rb |   38 ++++++++++++++++++++++------
 railties/lib/tasks/databases.rake          |    5 ++-
 2 files changed, 33 insertions(+), 10 deletions(-)

diff --git a/activerecord/lib/active_record/fixtures.rb b/activerecord/lib/active_record/fixtures.rb
index 114141a..b064d7d 100644
--- a/activerecord/lib/active_record/fixtures.rb
+++ b/activerecord/lib/active_record/fixtures.rb
@@ -510,7 +510,8 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
           fixtures_map = {}
 
           fixtures = table_names_to_fetch.map do |table_name|
-            fixtures_map[table_name] = Fixtures.new(connection, File.split(table_name.to_s).last, class_names[table_name.to_sym], File.join(fixtures_directory, table_name.to_s))
+            fixtures_file = locate_fixtures_file(fixtures_directory, table_name)
+            fixtures_map[table_name] = Fixtures.new(connection, File.split(table_name.to_s).last, class_names[table_name.to_sym], fixtures_file)
           end
 
           all_loaded_fixtures.update(fixtures_map)
@@ -547,10 +548,11 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
     @connection, @table_name, @fixture_path, @file_filter = connection, table_name, fixture_path, file_filter
     @name = table_name # preserve fixture base name
     @class_name = class_name ||
-                  (ActiveRecord::Base.pluralize_table_names ? @table_name.singularize.camelize : @table_name.camelize)
-    @table_name = "#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}"
-    @table_name = class_name.table_name if class_name.respond_to?(:table_name)
+                  (ActiveRecord::Base.class_name(table_name = table_name))
+    # @table_name = "#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}"
+    # @table_name = class_name.table_name if class_name.respond_to?(:table_name)
     @connection = class_name.connection if class_name.respond_to?(:connection)
+
     read_fixture_files
   end
 
@@ -602,7 +604,7 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
           else
             model_class
           end
-
+          
         reflection_class.reflect_on_all_associations.each do |association|
           case association.macro
           when :belongs_to
@@ -647,6 +649,17 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
     end
   end
 
+  def self.locate_fixtures_file(fixtures_directory, table_name)
+    fixture_file_candidates = Dir.glob(File.join(fixtures_directory, '**', '*.{yml,csv}'))
+    fixture_file_candidates.map! { |f| f[fixtures_directory.length..f.length-5]}
+    fixture_file_candidates.each do |candidate|
+      if table_name == candidate.sub(/\/*/, '').gsub(File::Separator, '__')
+        return fixtures_directory + candidate
+      end
+    end
+    nil
+  end
+
   private
     class HabtmFixtures < ::Fixtures #:nodoc:
       def read_fixture_files; end
@@ -713,12 +726,13 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
           end
 
         yaml_value.each do |fixture|
+
           raise Fixture::FormatError, "Bad data for #{@class_name} fixture named #{fixture}" unless fixture.respond_to?(:each)
 	  fixture.each do |name, data|
             unless data
               raise Fixture::FormatError, "Bad data for #{@class_name} fixture named #{name} (nil)"
             end
-
+            
             self[name] = Fixture.new(data, model_class)
           end
         end
@@ -841,8 +855,16 @@ module Test #:nodoc:
 
         def fixtures(*table_names)
           if table_names.first == :all
-            table_names = Dir["#{fixture_path}/*.yml"] + Dir["#{fixture_path}/*.csv"]
-            table_names.map! { |f| File.basename(f).split('.')[0..-2].join('.') }
+            fixture_files = Dir[File.join("#{fixture_path}", "**", "*.{yml,csv}")]
+            fixture_files_stripped = fixture_files.map { |f| f.sub(fixture_path, '').split('.')[0..-2].join('.').sub(/\/*/, '') }
+            table_names = fixture_files_stripped.map { |f| f.gsub(File::SEPARATOR, '__') }
+            # There propably is a neater 'Ruby way' to do this..
+            for i in 0..(table_names.size - 1)
+              class_portions = table_names[i].split('__')
+              class_portions.map! { |c| c.classify }
+              class_name = class_portions.join('::')
+              fixture_class_names[table_names[i].to_sym] = class_name
+            end
           else
             table_names = table_names.flatten.map { |n| n.to_s }
           end
diff --git a/railties/lib/tasks/databases.rake b/railties/lib/tasks/databases.rake
index 21c81b3..151a9f0 100644
--- a/railties/lib/tasks/databases.rake
+++ b/railties/lib/tasks/databases.rake
@@ -189,8 +189,9 @@ namespace :db do
       base_dir = ENV['FIXTURES_PATH'] ? File.join(Rails.root, ENV['FIXTURES_PATH']) : File.join(Rails.root, 'test', 'fixtures')
       fixtures_dir = ENV['FIXTURES_DIR'] ? File.join(base_dir, ENV['FIXTURES_DIR']) : base_dir
 
-      (ENV['FIXTURES'] ? ENV['FIXTURES'].split(/,/).map {|f| File.join(fixtures_dir, f) } : Dir.glob(File.join(fixtures_dir, '*.{yml,csv}'))).each do |fixture_file|
-        Fixtures.create_fixtures(File.dirname(fixture_file), File.basename(fixture_file, '.*'))
+      (ENV['FIXTURES'] ? ENV['FIXTURES'].split(/,/).map {|f| File.join(fixtures_dir, f) } : Dir.glob(File.join(fixtures_dir, '**', '*.{yml,csv}'))).each do |fixture_file|
+        fixture_file = fixture_file[fixtures_dir.length+1..fixture_file.length-5].gsub(File::Separator, '__')
+        Fixtures.create_fixtures(fixtures_dir, fixture_file)
       end
     end
 
-- 
1.5.5.1


From cd093f86bff183b1eee9f354e441e36ad0edb205 Mon Sep 17 00:00:00 2001
From: Harri Kauhanen <harri.kauhanen@gmail.com>
Date: Wed, 10 Sep 2008 10:35:53 +0300
Subject: [PATCH] Broke a test with tablename prefix/suffix. Now fixed.

---
 activerecord/lib/active_record/fixtures.rb |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/activerecord/lib/active_record/fixtures.rb b/activerecord/lib/active_record/fixtures.rb
index b064d7d..46dd982 100644
--- a/activerecord/lib/active_record/fixtures.rb
+++ b/activerecord/lib/active_record/fixtures.rb
@@ -547,10 +547,10 @@ class Fixtures < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)
   def initialize(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)
     @connection, @table_name, @fixture_path, @file_filter = connection, table_name, fixture_path, file_filter
     @name = table_name # preserve fixture base name
+    @table_name = "#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}"
+    @table_name = class_name.table_name if class_name.respond_to?(:table_name)
     @class_name = class_name ||
-                  (ActiveRecord::Base.class_name(table_name = table_name))
-    # @table_name = "#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}"
-    # @table_name = class_name.table_name if class_name.respond_to?(:table_name)
+                  (ActiveRecord::Base.class_name(table_name = @table_name))
     @connection = class_name.connection if class_name.respond_to?(:connection)
 
     read_fixture_files
-- 
1.5.5.1


From 201fced31e6f36b5346719fc3bc685ebd264744a Mon Sep 17 00:00:00 2001
From: Harri Kauhanen <harri.kauhanen@gmail.com>
Date: Wed, 10 Sep 2008 12:22:30 +0300
Subject: [PATCH] Made generators generate namespaced models nicely (especially with 'scaffold')

---
 railties/lib/rails_generator/base.rb               |    7 +++-
 railties/lib/rails_generator/commands.rb           |   27 ++++++++++++++-
 .../components/controller/controller_generator.rb  |    3 +-
 .../generators/components/model/model_generator.rb |    5 ++-
 .../components/resource/resource_generator.rb      |    8 +++--
 .../components/scaffold/scaffold_generator.rb      |    8 +++--
 .../components/scaffold/templates/controller.rb    |   36 ++++++++++----------
 .../scaffold/templates/functional_test.rb          |    8 ++--
 .../scaffold/templates/view_edit.html.erb          |    2 +-
 .../scaffold/templates/view_index.html.erb         |    4 +-
 .../scaffold/templates/view_new.html.erb           |    2 +-
 .../scaffold/templates/view_show.html.erb          |    4 +-
 12 files changed, 73 insertions(+), 41 deletions(-)

diff --git a/railties/lib/rails_generator/base.rb b/railties/lib/rails_generator/base.rb
index b5cfe79..e47d918 100644
--- a/railties/lib/rails_generator/base.rb
+++ b/railties/lib/rails_generator/base.rb
@@ -197,6 +197,7 @@ module Rails
     class NamedBase < Base
       attr_reader   :name, :class_name, :singular_name, :plural_name, :table_name
       attr_reader   :class_path, :file_path, :class_nesting, :class_nesting_depth
+      attr_reader   :nesting_underscored, :nesting_path
       alias_method  :file_name,  :singular_name
       alias_method  :actions, :args
 
@@ -229,12 +230,14 @@ module Rails
           @name = name
           base_name, @class_path, @file_path, @class_nesting, @class_nesting_depth = extract_modules(@name)
           @class_name_without_nesting, @singular_name, @plural_name = inflect_names(base_name)
+          @nesting_path = '/' + @class_nesting.underscore
           @table_name = (!defined?(ActiveRecord::Base) || ActiveRecord::Base.pluralize_table_names) ? plural_name : singular_name
-          @table_name.gsub! '/', '_'
           if @class_nesting.empty?
             @class_name = @class_name_without_nesting
           else
-            @table_name = @class_nesting.underscore << "_" << @table_name
+            @tablename_nesting_double_underscrored = @class_nesting.underscore.gsub('/', '__') + '__'
+            @nesting_underscored =  @tablename_nesting_double_underscrored.gsub('__', '_')
+            @table_name = @tablename_nesting_double_underscrored << @table_name
             @class_name = "#{@class_nesting}::#{@class_name_without_nesting}"
           end
         end
diff --git a/railties/lib/rails_generator/commands.rb b/railties/lib/rails_generator/commands.rb
index 59af730..294866c 100644
--- a/railties/lib/rails_generator/commands.rb
+++ b/railties/lib/rails_generator/commands.rb
@@ -354,19 +354,41 @@ HELP
           template(relative_source, "#{relative_destination}/#{next_migration_string}_#{migration_file_name}.rb", template_options)
         end
 
-        def route_resources(*resources)
+        def route_resources(namespace, *resources)
           resource_list = resources.map { |r| r.to_sym.inspect }.join(', ')
           sentinel = 'ActionController::Routing::Routes.draw do |map|'
 
           logger.route "map.resources #{resource_list}"
           unless options[:pretend]
+            if namespace.length > 0
+              route_to_add = route_nested(namespace.split('::'), resource_list)
+            else
+              route_to_add = "  map.resources #{resource_list}"
+            end
             gsub_file 'config/routes.rb', /(#{Regexp.escape(sentinel)})/mi do |match|
-              "#{match}\n  map.resources #{resource_list}\n"
+              "#{match}\n#{route_to_add}\n"
             end
           end
         end
 
         private
+        
+          def route_nested(splitted_namespace, resource_list, parent_namespace = 'map', level = 1)
+            namespace = splitted_namespace.shift
+            route_to_add = tabulator(level) + "#{parent_namespace}.namespace :#{namespace.underscore} do |#{namespace.underscore}|\n"
+            if splitted_namespace.size > 0
+              route_to_add += route_nested(splitted_namespace, resource_list, namespace.underscore, level + 1)
+            else
+              route_to_add += tabulator(level + 1) + "#{namespace.underscore}.resources #{resource_list}\n"
+            end
+            route_to_add += tabulator(level) + "end\n"
+            return route_to_add
+          end
+        
+          def tabulator(level)
+            "  " * level
+          end
+        
           def render_file(path, options = {})
             File.open(path, 'rb') do |file|
               if block_given?
@@ -523,6 +545,7 @@ end_message
           end
         end
 
+        # TODO Should we do something about this as we changed it in Create module???
         def route_resources(*resources)
           resource_list = resources.map { |r| r.to_sym.inspect }.join(', ')
           look_for = "\n  map.resources #{resource_list}\n"
diff --git a/railties/lib/rails_generator/generators/components/controller/controller_generator.rb b/railties/lib/rails_generator/generators/components/controller/controller_generator.rb
index c37ff45..dd799d1 100644
--- a/railties/lib/rails_generator/generators/components/controller/controller_generator.rb
+++ b/railties/lib/rails_generator/generators/components/controller/controller_generator.rb
@@ -2,7 +2,8 @@ class ControllerGenerator < Rails::Generator::NamedBase
   def manifest
     record do |m|
       # Check for class naming collisions.
-      m.class_collisions class_path, "#{class_name}Controller", "#{class_name}ControllerTest", "#{class_name}Helper"
+      # TODO Is this change ok? We will get name collision with namespaced models if we include the 'class_path' as parameter
+      m.class_collisions "#{class_name}Controller", "#{class_name}ControllerTest", "#{class_name}Helper"
 
       # Controller, helper, views, and test directories.
       m.directory File.join('app/controllers', class_path)
diff --git a/railties/lib/rails_generator/generators/components/model/model_generator.rb b/railties/lib/rails_generator/generators/components/model/model_generator.rb
index 9be9cad..90b0f0f 100644
--- a/railties/lib/rails_generator/generators/components/model/model_generator.rb
+++ b/railties/lib/rails_generator/generators/components/model/model_generator.rb
@@ -4,7 +4,8 @@ class ModelGenerator < Rails::Generator::NamedBase
   def manifest
     record do |m|
       # Check for class naming collisions.
-      m.class_collisions class_path, class_name, "#{class_name}Test"
+      # TODO Is this change ok? We will get name collision with namespaced models if we include the 'class_path' as parameter
+      m.class_collisions class_name, "#{class_name}Test"
 
       # Model, test, and fixture directories.
       m.directory File.join('app/models', class_path)
@@ -16,7 +17,7 @@ class ModelGenerator < Rails::Generator::NamedBase
       m.template 'unit_test.rb',  File.join('test/unit', class_path, "#{file_name}_test.rb")
 
       unless options[:skip_fixture] 
-       	m.template 'fixtures.yml',  File.join('test/fixtures', "#{table_name}.yml")
+        m.template 'fixtures.yml',  File.join('test/fixtures', "#{nesting_path}/#{file_name.pluralize}.yml")
       end
 
       unless options[:skip_migration]
diff --git a/railties/lib/rails_generator/generators/components/resource/resource_generator.rb b/railties/lib/rails_generator/generators/components/resource/resource_generator.rb
index d5491ec..766006a 100644
--- a/railties/lib/rails_generator/generators/components/resource/resource_generator.rb
+++ b/railties/lib/rails_generator/generators/components/resource/resource_generator.rb
@@ -30,8 +30,10 @@ class ResourceGenerator < Rails::Generator::NamedBase
   def manifest
     record do |m|
       # Check for class naming collisions.
-      m.class_collisions(controller_class_path, "#{controller_class_name}Controller", "#{controller_class_name}Helper")
-      m.class_collisions(class_path, "#{class_name}")
+      
+      # TODO Is this change ok? We will get name collision with namespaced models if we include the 'class_path' as parameter
+      m.class_collisions("#{controller_class_name}Controller", "#{controller_class_name}Helper")
+      m.class_collisions("#{class_name}")
 
       # Controller, helper, views, and test directories.
       m.directory(File.join('app/models', class_path))
@@ -50,7 +52,7 @@ class ResourceGenerator < Rails::Generator::NamedBase
       m.template('functional_test.rb', File.join('test/functional', controller_class_path, "#{controller_file_name}_controller_test.rb"))
       m.template('helper.rb',          File.join('app/helpers',     controller_class_path, "#{controller_file_name}_helper.rb"))
 
-      m.route_resources controller_file_name
+      m.route_resources @controller_class_nesting, controller_file_name
     end
   end
 
diff --git a/railties/lib/rails_generator/generators/components/scaffold/scaffold_generator.rb b/railties/lib/rails_generator/generators/components/scaffold/scaffold_generator.rb
index 5fecfe0..1076dd5 100644
--- a/railties/lib/rails_generator/generators/components/scaffold/scaffold_generator.rb
+++ b/railties/lib/rails_generator/generators/components/scaffold/scaffold_generator.rb
@@ -36,8 +36,10 @@ class ScaffoldGenerator < Rails::Generator::NamedBase
   def manifest
     record do |m|
       # Check for class naming collisions.
-      m.class_collisions(controller_class_path, "#{controller_class_name}Controller", "#{controller_class_name}Helper")
-      m.class_collisions(class_path, "#{class_name}")
+      
+      # TODO Is this change ok? We will get name collision with namespaced models if we include the 'class_path' as parameter
+      m.class_collisions("#{controller_class_name}Controller", "#{controller_class_name}Helper")
+      m.class_collisions("#{class_name}")
 
       # Controller, helper, views, test and stylesheets directories.
       m.directory(File.join('app/models', class_path))
@@ -67,7 +69,7 @@ class ScaffoldGenerator < Rails::Generator::NamedBase
       m.template('functional_test.rb', File.join('test/functional', controller_class_path, "#{controller_file_name}_controller_test.rb"))
       m.template('helper.rb',          File.join('app/helpers',     controller_class_path, "#{controller_file_name}_helper.rb"))
 
-      m.route_resources controller_file_name
+      m.route_resources @controller_class_nesting, controller_file_name
 
       m.dependency 'model', [name] + @args, :collision => :skip
     end
diff --git a/railties/lib/rails_generator/generators/components/scaffold/templates/controller.rb b/railties/lib/rails_generator/generators/components/scaffold/templates/controller.rb
index cbfd88f..1ae3c8b 100644
--- a/railties/lib/rails_generator/generators/components/scaffold/templates/controller.rb
+++ b/railties/lib/rails_generator/generators/components/scaffold/templates/controller.rb
@@ -1,17 +1,17 @@
 class <%= controller_class_name %>Controller < ApplicationController
-  # GET /<%= table_name %>
-  # GET /<%= table_name %>.xml
+  # GET <%= nesting_path %>/<%= file_name.pluralize %>
+  # GET <%= nesting_path %>/<%= file_name.pluralize %>.xml
   def index
-    @<%= table_name %> = <%= class_name %>.find(:all)
+    @<%= file_name.pluralize %> = <%= class_name %>.find(:all)
 
     respond_to do |format|
       format.html # index.html.erb
-      format.xml  { render :xml => @<%= table_name %> }
+      format.xml  { render :xml => @<%= file_name.pluralize %> }
     end
   end
 
-  # GET /<%= table_name %>/1
-  # GET /<%= table_name %>/1.xml
+  # GET <%= nesting_path %>/<%= file_name.pluralize %>/1
+  # GET <%= nesting_path %>/<%= file_name.pluralize %>/1.xml
   def show
     @<%= file_name %> = <%= class_name %>.find(params[:id])
 
@@ -21,8 +21,8 @@ class <%= controller_class_name %>Controller < ApplicationController
     end
   end
 
-  # GET /<%= table_name %>/new
-  # GET /<%= table_name %>/new.xml
+  # GET <%= nesting_path %>/<%= file_name.pluralize %>/new
+  # GET <%= nesting_path %>/<%= file_name.pluralize %>new.xml
   def new
     @<%= file_name %> = <%= class_name %>.new
 
@@ -32,15 +32,15 @@ class <%= controller_class_name %>Controller < ApplicationController
     end
   end
 
-  # GET /<%= table_name %>/1/edit
+  # GET <%= nesting_path %>/<%= file_name.pluralize %>/1/edit
   def edit
     @<%= file_name %> = <%= class_name %>.find(params[:id])
   end
 
-  # POST /<%= table_name %>
-  # POST /<%= table_name %>.xml
+  # POST <%= nesting_path %>/<%= file_name.pluralize %>
+  # POST<%= nesting_path %>/<%= file_name.pluralize %>.xml
   def create
-    @<%= file_name %> = <%= class_name %>.new(params[:<%= file_name %>])
+    @<%= file_name %> = <%= class_name %>.new(params[:<%= nesting_underscored %><%= file_name %>])
 
     respond_to do |format|
       if @<%= file_name %>.save
@@ -54,13 +54,13 @@ class <%= controller_class_name %>Controller < ApplicationController
     end
   end
 
-  # PUT /<%= table_name %>/1
-  # PUT /<%= table_name %>/1.xml
+  # PUT <%= nesting_path %>/<%= file_name.pluralize %>/1
+  # PUT <%= nesting_path %>/<%= file_name.pluralize %>/1.xml
   def update
     @<%= file_name %> = <%= class_name %>.find(params[:id])
 
     respond_to do |format|
-      if @<%= file_name %>.update_attributes(params[:<%= file_name %>])
+      if @<%= file_name %>.update_attributes(params[:<%= nesting_underscored %><%= file_name %>])
         flash[:notice] = '<%= class_name %> was successfully updated.'
         format.html { redirect_to(@<%= file_name %>) }
         format.xml  { head :ok }
@@ -71,14 +71,14 @@ class <%= controller_class_name %>Controller < ApplicationController
     end
   end
 
-  # DELETE /<%= table_name %>/1
-  # DELETE /<%= table_name %>/1.xml
+  # DELETE <%= nesting_path %>/<%= file_name.pluralize %>/1
+  # DELETE <%= nesting_path %>/<%= file_name.pluralize %>/1.xml
   def destroy
     @<%= file_name %> = <%= class_name %>.find(params[:id])
     @<%= file_name %>.destroy
 
     respond_to do |format|
-      format.html { redirect_to(<%= table_name %>_url) }
+      format.html { redirect_to(<%= nesting_underscored %><%= file_name.pluralize %>_url) }
       format.xml  { head :ok }
     end
   end
diff --git a/railties/lib/rails_generator/generators/components/scaffold/templates/functional_test.rb b/railties/lib/rails_generator/generators/components/scaffold/templates/functional_test.rb
index 2d9d635..b76c215 100644
--- a/railties/lib/rails_generator/generators/components/scaffold/templates/functional_test.rb
+++ b/railties/lib/rails_generator/generators/components/scaffold/templates/functional_test.rb
@@ -4,7 +4,7 @@ class <%= controller_class_name %>ControllerTest < ActionController::TestCase
   test "should get index" do
     get :index
     assert_response :success
-    assert_not_nil assigns(:<%= table_name %>)
+    assert_not_nil assigns(:<%= file_name.pluralize %>)
   end
 
   test "should get new" do
@@ -17,7 +17,7 @@ class <%= controller_class_name %>ControllerTest < ActionController::TestCase
       post :create, :<%= file_name %> => { }
     end
 
-    assert_redirected_to <%= file_name %>_path(assigns(:<%= file_name %>))
+    assert_redirected_to <%= nesting_underscored %><%= file_name %>_path(assigns(:<%= file_name %>))
   end
 
   test "should show <%= file_name %>" do
@@ -32,7 +32,7 @@ class <%= controller_class_name %>ControllerTest < ActionController::TestCase
 
   test "should update <%= file_name %>" do
     put :update, :id => <%= table_name %>(:one).id, :<%= file_name %> => { }
-    assert_redirected_to <%= file_name %>_path(assigns(:<%= file_name %>))
+    assert_redirected_to <%= nesting_underscored %><%= file_name %>_path(assigns(:<%= file_name %>))
   end
 
   test "should destroy <%= file_name %>" do
@@ -40,6 +40,6 @@ class <%= controller_class_name %>ControllerTest < ActionController::TestCase
       delete :destroy, :id => <%= table_name %>(:one).id
     end
 
-    assert_redirected_to <%= table_name %>_path
+    assert_redirected_to <%= nesting_underscored %><%= file_name.pluralize %>_path
   end
 end
diff --git a/railties/lib/rails_generator/generators/components/scaffold/templates/view_edit.html.erb b/railties/lib/rails_generator/generators/components/scaffold/templates/view_edit.html.erb
index e289975..7f19dfb 100644
--- a/railties/lib/rails_generator/generators/components/scaffold/templates/view_edit.html.erb
+++ b/railties/lib/rails_generator/generators/components/scaffold/templates/view_edit.html.erb
@@ -15,4 +15,4 @@
 <%% end %>
 
 <%%= link_to 'Show', @<%= singular_name %> %> |
-<%%= link_to 'Back', <%= plural_name %>_path %>
+<%%= link_to 'Back', <%= nesting_underscored %><%= plural_name %>_path %>
diff --git a/railties/lib/rails_generator/generators/components/scaffold/templates/view_index.html.erb b/railties/lib/rails_generator/generators/components/scaffold/templates/view_index.html.erb
index e89757e..07088e9 100644
--- a/railties/lib/rails_generator/generators/components/scaffold/templates/view_index.html.erb
+++ b/railties/lib/rails_generator/generators/components/scaffold/templates/view_index.html.erb
@@ -13,7 +13,7 @@
     <td><%%=h <%= singular_name %>.<%= attribute.name %> %></td>
 <% end -%>
     <td><%%= link_to 'Show', <%= singular_name %> %></td>
-    <td><%%= link_to 'Edit', edit_<%= singular_name %>_path(<%= singular_name %>) %></td>
+    <td><%%= link_to 'Edit', edit_<%= nesting_underscored %><%= singular_name %>_path(<%= singular_name %>) %></td>
     <td><%%= link_to 'Destroy', <%= singular_name %>, :confirm => 'Are you sure?', :method => :delete %></td>
   </tr>
 <%% end %>
@@ -21,4 +21,4 @@
 
 <br />
 
-<%%= link_to 'New <%= singular_name %>', new_<%= singular_name %>_path %>
+<%%= link_to 'New <%= singular_name %>', new_<%= nesting_underscored %><%= singular_name %>_path %>
diff --git a/railties/lib/rails_generator/generators/components/scaffold/templates/view_new.html.erb b/railties/lib/rails_generator/generators/components/scaffold/templates/view_new.html.erb
index c47e811..3b37cb0 100644
--- a/railties/lib/rails_generator/generators/components/scaffold/templates/view_new.html.erb
+++ b/railties/lib/rails_generator/generators/components/scaffold/templates/view_new.html.erb
@@ -14,4 +14,4 @@
   </p>
 <%% end %>
 
-<%%= link_to 'Back', <%= plural_name %>_path %>
+<%%= link_to 'Back', <%= nesting_underscored %><%= plural_name %>_path %>
diff --git a/railties/lib/rails_generator/generators/components/scaffold/templates/view_show.html.erb b/railties/lib/rails_generator/generators/components/scaffold/templates/view_show.html.erb
index 9b6b11b..ac70689 100644
--- a/railties/lib/rails_generator/generators/components/scaffold/templates/view_show.html.erb
+++ b/railties/lib/rails_generator/generators/components/scaffold/templates/view_show.html.erb
@@ -6,5 +6,5 @@
 
 <% end -%>
 
-<%%= link_to 'Edit', edit_<%= singular_name %>_path(@<%= singular_name %>) %> |
-<%%= link_to 'Back', <%= plural_name %>_path %>
+<%%= link_to 'Edit', edit_<%= nesting_underscored %><%= singular_name %>_path(@<%= singular_name %>) %> |
+<%%= link_to 'Back', <%= nesting_underscored %><%= plural_name %>_path %>
\ No newline at end of file
-- 
1.5.5.1

