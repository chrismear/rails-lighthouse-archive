<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-16T07:59:05+00:00</created-at>
  <creator-id type="integer">22589</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1986</number>
  <permalink>create-optgroups-in-options_for_select</permalink>
  <priority type="integer">1275</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.3 formoptionshelper patch</tag>
  <title>Create optgroups in options_for_select</title>
  <updated-at type="datetime">2009-03-09T13:55:11+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">3</version>
  <user-name>Pratik</user-name>
  <creator-name>Matt Jones</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1986</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is a small patch to enable options_for_select to create optgroups
from nested arrays. For example:

@@@ ruby
   options_for_select([ [&quot;First Group&quot;, [[&quot;Option 1&quot;, 1], [&quot;Option 2&quot;, 2]]], [&quot;Bare Option&quot;, 3] ])
@@@
yields (formatted for readability):
@@@ html
&lt;optgroup label=&quot;First Group&quot;&gt;
  &lt;option value=&quot;1&quot;&gt;Option 1&lt;/option&gt;
  &lt;option value=&quot;2&quot;&gt;Option 2&lt;/option&gt;
&lt;/optgroup&gt;
&lt;option value=&quot;3&quot;&gt;Bare Option&lt;/option&gt;
@@@

Note that the nested things don't *have* to be arrays; the group label is taken from .first of the element, and the .last of the element can be anything that options_for_select supports.

All the other options work exactly as expected (selected, disabled, etc).

Note that this is slightly more general than grouped_options_for_select, as it can produce mixed sets with both bare options and optgroups.

Test included in the patch.</original-body>
  <latest-body>This is a small patch to enable options_for_select to create optgroups
from nested arrays. For example:

@@@ ruby
   options_for_select([ [&quot;First Group&quot;, [[&quot;Option 1&quot;, 1], [&quot;Option 2&quot;, 2]]], [&quot;Bare Option&quot;, 3] ])
@@@
yields (formatted for readability):
@@@ html
&lt;optgroup label=&quot;First Group&quot;&gt;
  &lt;option value=&quot;1&quot;&gt;Option 1&lt;/option&gt;
  &lt;option value=&quot;2&quot;&gt;Option 2&lt;/option&gt;
&lt;/optgroup&gt;
&lt;option value=&quot;3&quot;&gt;Bare Option&lt;/option&gt;
@@@

Note that the nested things don't *have* to be arrays; the group label is taken from .first of the element, and the .last of the element can be anything that options_for_select supports.

All the other options work exactly as expected (selected, disabled, etc).

Note that this is slightly more general than grouped_options_for_select, as it can produce mixed sets with both bare options and optgroups.

Test included in the patch.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is a small patch to enable options_for_select to create
optgroups from nested arrays. For example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
   options_for_select([ [&amp;quot;First Group&amp;quot;, [[&amp;quot;Option 1&amp;quot;, 1], [&amp;quot;Option 2&amp;quot;, 2]]], [&amp;quot;Bare Option&amp;quot;, 3] ])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;yields (formatted for readability):&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;optgroup label=&amp;quot;First Group&amp;quot;&amp;gt;
  &amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;Option 1&amp;lt;/option&amp;gt;
  &amp;lt;option value=&amp;quot;2&amp;quot;&amp;gt;Option 2&amp;lt;/option&amp;gt;
&amp;lt;/optgroup&amp;gt;
&amp;lt;option value=&amp;quot;3&amp;quot;&amp;gt;Bare Option&amp;lt;/option&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the nested things don't &lt;em&gt;have&lt;/em&gt; to be arrays;
the group label is taken from .first of the element, and the .last
of the element can be anything that options_for_select
supports.&lt;/p&gt;
&lt;p&gt;All the other options work exactly as expected (selected,
disabled, etc).&lt;/p&gt;
&lt;p&gt;Note that this is slightly more general than
grouped_options_for_select, as it can produce mixed sets with both
bare options and optgroups.&lt;/p&gt;
&lt;p&gt;Test included in the patch.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a small patch to enable options_for_select to create optgroups
from nested arrays. For example:

@@@ ruby
   options_for_select([ [&quot;First Group&quot;, [[&quot;Option 1&quot;, 1], [&quot;Option 2&quot;, 2]]], [&quot;Bare Option&quot;, 3] ])
@@@
yields (formatted for readability):
@@@ html
&lt;optgroup label=&quot;First Group&quot;&gt;
  &lt;option value=&quot;1&quot;&gt;Option 1&lt;/option&gt;
  &lt;option value=&quot;2&quot;&gt;Option 2&lt;/option&gt;
&lt;/optgroup&gt;
&lt;option value=&quot;3&quot;&gt;Bare Option&lt;/option&gt;
@@@

Note that the nested things don't *have* to be arrays; the group label is taken from .first of the element, and the .last of the element can be anything that options_for_select supports.

All the other options work exactly as expected (selected, disabled, etc).

Note that this is slightly more general than grouped_options_for_select, as it can produce mixed sets with both bare options and optgroups.

Test included in the patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a small patch to enable options_for_select to create
optgroups from nested arrays. For example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
   options_for_select([ [&amp;quot;First Group&amp;quot;, [[&amp;quot;Option 1&amp;quot;, 1], [&amp;quot;Option 2&amp;quot;, 2]]], [&amp;quot;Bare Option&amp;quot;, 3] ])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;yields (formatted for readability):&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;optgroup label=&amp;quot;First Group&amp;quot;&amp;gt;
  &amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;Option 1&amp;lt;/option&amp;gt;
  &amp;lt;option value=&amp;quot;2&amp;quot;&amp;gt;Option 2&amp;lt;/option&amp;gt;
&amp;lt;/optgroup&amp;gt;
&amp;lt;option value=&amp;quot;3&amp;quot;&amp;gt;Bare Option&amp;lt;/option&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the nested things don't &lt;em&gt;have&lt;/em&gt; to be arrays;
the group label is taken from .first of the element, and the .last
of the element can be anything that options_for_select
supports.&lt;/p&gt;
&lt;p&gt;All the other options work exactly as expected (selected,
disabled, etc).&lt;/p&gt;
&lt;p&gt;Note that this is slightly more general than
grouped_options_for_select, as it can produce mixed sets with both
bare options and optgroups.&lt;/p&gt;
&lt;p&gt;Test included in the patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-16T07:59:05+00:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1986</number>
      <permalink>create-optgroups-in-options_for_select</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 formoptionshelper patch</tag>
      <title>Create optgroups in options_for_select</title>
      <updated-at type="datetime">2009-02-16T07:59:07+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">1</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Matt Jones</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1986</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-22T15:09:28+00:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 24544
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1986</number>
      <permalink>create-optgroups-in-options_for_select</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 formoptionshelper patch</tag>
      <title>Create optgroups in options_for_select</title>
      <updated-at type="datetime">2009-02-22T15:09:29+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">2</version>
      <user-name>DHH</user-name>
      <creator-name>Matt Jones</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1986</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think we should just add a way for grouped_options_for_select() to generated the desired output here. The form options helpers API is getting way too complex for my liking, not sure I like the idea of adding one more helper.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think we should just add a way for
grouped_options_for_select() to generated the desired output here.
The form options helpers API is getting way too complex for my
liking, not sure I like the idea of adding one more helper.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-09T13:55:05+00:00</created-at>
      <creator-id type="integer">22589</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1986</number>
      <permalink>create-optgroups-in-options_for_select</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3 formoptionshelper patch</tag>
      <title>Create optgroups in options_for_select</title>
      <updated-at type="datetime">2009-03-09T13:55:11+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Matt Jones</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1986</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>931ce997f68a296ac71f15c588e3d5e630a2d12e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-16T07:59:06+00:00</created-at>
      <filename>add_groups_to_options_for_select.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">89100</id>
      <size type="integer">4757</size>
      <uploader-id type="integer">22589</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/89100/add_groups_to_options_for_select.patch</url>
    </attachment>
  </attachments>
</ticket>
