From 4c4c96e2dfe984d3013e49ad8829c89b356a7f20 Mon Sep 17 00:00:00 2001
From: Krekoten' Marjan <krekoten@gmail.com>
Date: Thu, 16 Sep 2010 19:03:55 +0300
Subject: [PATCH] Move capture to Kernel.

---
 .../active_support/core_ext/kernel/reporting.rb    |   19 +++++++++++++++++++
 activesupport/test/core_ext/kernel_test.rb         |    5 +++++
 railties/lib/rails/generators/test_case.rb         |   20 +-------------------
 railties/test/railties/engine_test.rb              |   14 +-------------
 4 files changed, 26 insertions(+), 32 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/kernel/reporting.rb b/activesupport/lib/active_support/core_ext/kernel/reporting.rb
index 5105c40..37a8271 100644
--- a/activesupport/lib/active_support/core_ext/kernel/reporting.rb
+++ b/activesupport/lib/active_support/core_ext/kernel/reporting.rb
@@ -59,4 +59,23 @@ module Kernel
       raise unless exception_classes.any? { |cls| e.kind_of?(cls) }
     end
   end
+  
+  # Captures the given stream and returns it:
+  #
+  #   stream = capture(:stdout){ puts "Cool" }
+  #   stream # => "Cool\n"
+  #
+  def capture(stream)
+    begin
+      stream = stream.to_s
+      eval "$#{stream} = StringIO.new"
+      yield
+      result = eval("$#{stream}").string
+    ensure
+      eval("$#{stream} = #{stream.upcase}")
+    end
+
+    result
+  end
+  alias :silence :capture
 end
diff --git a/activesupport/test/core_ext/kernel_test.rb b/activesupport/test/core_ext/kernel_test.rb
index 904d56a..ede9b0a 100644
--- a/activesupport/test/core_ext/kernel_test.rb
+++ b/activesupport/test/core_ext/kernel_test.rb
@@ -52,6 +52,11 @@ class KernelTest < Test::Unit::TestCase
     class << o; @x = 1; end
     assert_equal 1, o.class_eval { @x }
   end
+  
+  def test_capture
+    assert_equal 'STDERR', capture(:stderr) {$stderr.print 'STDERR'}
+    assert_equal 'STDOUT', capture(:stdout) {print 'STDOUT'}
+  end
 end
 
 class KernelSuppressTest < Test::Unit::TestCase
diff --git a/railties/lib/rails/generators/test_case.rb b/railties/lib/rails/generators/test_case.rb
index 3376b42..cab8708 100644
--- a/railties/lib/rails/generators/test_case.rb
+++ b/railties/lib/rails/generators/test_case.rb
@@ -1,6 +1,7 @@
 require 'active_support/core_ext/class/attribute'
 require 'active_support/core_ext/module/delegation'
 require 'active_support/core_ext/hash/reverse_merge'
+require 'active_support/core_ext/kernel/reporting'
 require 'rails/generators'
 require 'fileutils'
 
@@ -65,25 +66,6 @@ module Rails
         self.destination_root = path
       end
 
-      # Captures the given stream and returns it:
-      #
-      #   stream = capture(:stdout){ puts "Cool" }
-      #   stream # => "Cool\n"
-      #
-      def capture(stream)
-        begin
-          stream = stream.to_s
-          eval "$#{stream} = StringIO.new"
-          yield
-          result = eval("$#{stream}").string
-        ensure
-          eval("$#{stream} = #{stream.upcase}")
-        end
-
-        result
-      end
-      alias :silence :capture
-
       # Asserts a given file exists. You need to supply an absolute path or a path relative
       # to the configured destination:
       #
diff --git a/railties/test/railties/engine_test.rb b/railties/test/railties/engine_test.rb
index 6b90b32..92d6fc7 100644
--- a/railties/test/railties/engine_test.rb
+++ b/railties/test/railties/engine_test.rb
@@ -1,22 +1,10 @@
 require "isolation/abstract_unit"
 require "railties/shared_tests"
 require 'stringio'
+require 'active_support/core_ext/kernel/reporting'
 
 module RailtiesTest
   class EngineTest < Test::Unit::TestCase
-    # TODO: it's copied from generators/test_case, maybe make a module with such helpers?
-    def capture(stream)
-      begin
-        stream = stream.to_s
-        eval "$#{stream} = StringIO.new"
-        yield
-        result = eval("$#{stream}").string
-      ensure
-        eval("$#{stream} = #{stream.upcase}")
-      end
-
-      result
-    end
 
     include ActiveSupport::Testing::Isolation
     include SharedTests
-- 
1.7.2

