<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-16T11:32:53+01:00</created-at>
  <creator-id type="integer">22437</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5468</number>
  <permalink>invalid-sql-in-arel-readme</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>arel documentation</tag>
  <title>Invalid SQL in AREL readme</title>
  <updated-at type="datetime">2010-09-16T11:32:53+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>James Kebinger</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5468</url>
  <priority-name>Low</priority-name>
  <original-body>The SQL in the Crazy Features &gt; Complex Joins section is invalid. This is an interesting problem, because the invalid SQL builds towards an incorrect conclusion that a subselect is needed in the case described. Seems like more than a simple doc-patch.

First the SQL to do photo counts by user has a misplaced limit 3 so it doesn't run at all.

@@@
select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id limit 3 group by user_id;
@@@

should be

@@@
mysql&gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by user_id;
@@@

@@@
+----+------+------------------+
| id | name | count(photos.id) | 
+----+------+------------------+ 
| 2  | bai  | 0                |
| 1  | hai  | 3                | 
+----+------+------------------+
 2 rows in set (0.00 sec)
@@@

So that supports the example, but the group by can be better specified as group by users.id instead of user_id, which produces the correct results:

@@@
mysql&gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by users.id;
@@@

@@@
+----+--------+------------------+
| id | name   | count(photos.id) |
+----+--------+------------------+
| 1  | hai    | 3                |
| 2  | bai    | 0                |
| 3  | dumpty | 0                | 
+----+--------+------------------+
 3 rows in set (0.00 sec)
@@@

Interestingly, the first form of the group by clause is rejected by Postgres, which appears to restrict joins to columns in the result set.

&lt;em&gt;Edited by [Rohit Arondekar](https://rails.lighthouseapp.com/users/89656) for formating.&lt;/em&gt;</original-body>
  <latest-body>The SQL in the Crazy Features &gt; Complex Joins section is invalid. This is an interesting problem, because the invalid SQL builds towards an incorrect conclusion that a subselect is needed in the case described. Seems like more than a simple doc-patch.

First the SQL to do photo counts by user has a misplaced limit 3 so it doesn't run at all.

@@@
select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id limit 3 group by user_id;
@@@

should be

@@@
mysql&gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by user_id;
@@@

@@@
+----+------+------------------+
| id | name | count(photos.id) | 
+----+------+------------------+ 
| 2  | bai  | 0                |
| 1  | hai  | 3                | 
+----+------+------------------+
 2 rows in set (0.00 sec)
@@@

So that supports the example, but the group by can be better specified as group by users.id instead of user_id, which produces the correct results:

@@@
mysql&gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by users.id;
@@@

@@@
+----+--------+------------------+
| id | name   | count(photos.id) |
+----+--------+------------------+
| 1  | hai    | 3                |
| 2  | bai    | 0                |
| 3  | dumpty | 0                | 
+----+--------+------------------+
 3 rows in set (0.00 sec)
@@@

Interestingly, the first form of the group by clause is rejected by Postgres, which appears to restrict joins to columns in the result set.

&lt;em&gt;Edited by [Rohit Arondekar](https://rails.lighthouseapp.com/users/89656) for formating.&lt;/em&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The SQL in the Crazy Features &amp;gt; Complex Joins section is
invalid. This is an interesting problem, because the invalid SQL
builds towards an incorrect conclusion that a subselect is needed
in the case described. Seems like more than a simple doc-patch.&lt;/p&gt;
&lt;p&gt;First the SQL to do photo counts by user has a misplaced limit 3
so it doesn't run at all.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id limit 3 group by user_id;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;should be&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by user_id;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;+----+------+------------------+
| id | name | count(photos.id) | 
+----+------+------------------+ 
| 2  | bai  | 0                |
| 1  | hai  | 3                | 
+----+------+------------------+
 2 rows in set (0.00 sec)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So that supports the example, but the group by can be better
specified as group by users.id instead of user_id, which produces
the correct results:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by users.id;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;+----+--------+------------------+
| id | name   | count(photos.id) |
+----+--------+------------------+
| 1  | hai    | 3                |
| 2  | bai    | 0                |
| 3  | dumpty | 0                | 
+----+--------+------------------+
 3 rows in set (0.00 sec)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Interestingly, the first form of the group by clause is rejected
by Postgres, which appears to restrict joins to columns in the
result set.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edited by &lt;a href=
&quot;https://rails.lighthouseapp.com/users/89656&quot;&gt;Rohit Arondekar&lt;/a&gt;
for formating.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The SQL in the Crazy Features &gt; Complex Joins section is invalid. This is an interesting problem, because the invalid SQL builds towards an incorrect conclusion that a subselect is needed in the case described. Seems like more than a simple doc-patch.

First the SQL to do photo counts by user has a misplaced limit 3 so it doesn't run at all.

@@@
select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id limit 3 group by user_id;
@@@

should be

@@@
mysql&gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by user_id;
@@@

@@@
+----+------+------------------+
| id | name | count(photos.id) | 
+----+------+------------------+ 
| 2  | bai  | 0                |
| 1  | hai  | 3                | 
+----+------+------------------+
 2 rows in set (0.00 sec)
@@@

So that supports the example, but the group by can be better specified as group by users.id instead of user_id, which produces the correct results:

@@@
mysql&gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by users.id;
@@@

@@@
+----+--------+------------------+
| id | name   | count(photos.id) |
+----+--------+------------------+
| 1  | hai    | 3                |
| 2  | bai    | 0                |
| 3  | dumpty | 0                | 
+----+--------+------------------+
 3 rows in set (0.00 sec)
@@@

Interestingly, the first form of the group by clause is rejected by Postgres, which appears to restrict joins to columns in the result set.

&lt;em&gt;Edited by [Rohit Arondekar](https://rails.lighthouseapp.com/users/89656) for formating.&lt;/em&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;The SQL in the Crazy Features &amp;gt; Complex Joins section is
invalid. This is an interesting problem, because the invalid SQL
builds towards an incorrect conclusion that a subselect is needed
in the case described. Seems like more than a simple doc-patch.&lt;/p&gt;
&lt;p&gt;First the SQL to do photo counts by user has a misplaced limit 3
so it doesn't run at all.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id limit 3 group by user_id;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;should be&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by user_id;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;+----+------+------------------+
| id | name | count(photos.id) | 
+----+------+------------------+ 
| 2  | bai  | 0                |
| 1  | hai  | 3                | 
+----+------+------------------+
 2 rows in set (0.00 sec)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So that supports the example, but the group by can be better
specified as group by users.id instead of user_id, which produces
the correct results:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select users.*, count(photos.id) from users left outer join photos on users.id = photos.user_id group by users.id;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;+----+--------+------------------+
| id | name   | count(photos.id) |
+----+--------+------------------+
| 1  | hai    | 3                |
| 2  | bai    | 0                |
| 3  | dumpty | 0                | 
+----+--------+------------------+
 3 rows in set (0.00 sec)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Interestingly, the first form of the group by clause is rejected
by Postgres, which appears to restrict joins to columns in the
result set.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edited by &lt;a href=
&quot;https://rails.lighthouseapp.com/users/89656&quot;&gt;Rohit Arondekar&lt;/a&gt;
for formating.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-26T16:59:26+01:00</created-at>
      <creator-id type="integer">22437</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5468</number>
      <permalink>invalid-sql-in-arel-readme</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel documentation</tag>
      <title>Invalid SQL in AREL readme</title>
      <updated-at type="datetime">2010-08-27T14:24:25+01:00</updated-at>
      <user-id type="integer">22437</user-id>
      <version type="integer">1</version>
      <user-name>James Kebinger</user-name>
      <creator-name>James Kebinger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5468</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>James, you can edit the docs if you wish to. You'll need to ask lifo (on Github) write permission to http://github.com/lifo/docrails and then edit away. The changes will be merged with the main Rails repo later.

Do report back once you've made the changes so that I can close this ticket. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;James, you can edit the docs if you wish to. You'll need to ask
lifo (on Github) write permission to &lt;a href=
&quot;http://github.com/lifo/docrails&quot;&gt;http://github.com/lifo/docrails&lt;/a&gt;
and then edit away. The changes will be merged with the main Rails
repo later.&lt;/p&gt;
&lt;p&gt;Do report back once you've made the changes so that I can close
this ticket. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-27T14:26:45+01:00</created-at>
      <creator-id type="integer">22437</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5468</number>
      <permalink>invalid-sql-in-arel-readme</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel documentation</tag>
      <title>Invalid SQL in AREL readme</title>
      <updated-at type="datetime">2010-08-27T14:26:48+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>James Kebinger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5468</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You actually meant the AREL readme! It's here http://github.com/nkallen/arel and not part of Rails. You'll need to fork-edit that repo or make an issue there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You actually meant the AREL readme! It's here &lt;a href=
&quot;http://github.com/nkallen/arel&quot;&gt;http://github.com/nkallen/arel&lt;/a&gt;
and not part of Rails. You'll need to fork-edit that repo or make
an issue there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-14T05:12:05+01:00</created-at>
      <creator-id type="integer">22437</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5468</number>
      <permalink>invalid-sql-in-arel-readme</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>arel documentation</tag>
      <title>Invalid SQL in AREL readme</title>
      <updated-at type="datetime">2010-09-14T05:12:07+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>James Kebinger</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5468</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
