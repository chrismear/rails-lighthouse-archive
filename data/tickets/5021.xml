<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-30T15:36:53+01:00</created-at>
  <creator-id type="integer">33887</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5021</number>
  <permalink>url_for-should-not-append-current-params-when-generating-url-for-same-action</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>action_controller router routing url url_for</tag>
  <title>url_for should not append current params when generating url for same action</title>
  <updated-at type="datetime">2010-07-03T09:06:37+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Jakub Suder</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5021</url>
  <priority-name nil="true"></priority-name>
  <original-body>In an empty Rails app with such routes:

    resources :users
    match &quot;/profiles/:name&quot; =&gt; &quot;users#show&quot;, :as =&gt; :profile

... and such controller:

    class UsersController &lt; ApplicationController
      def show
        if params[:name]
          render :text =&gt; &quot;ok&quot;
        else
          redirect_to profile_path(params[:id])
        end
      end
    end

... the profile_path that's generated in the controller includes an extra parameter after a question mark; e.g. if I go to /users/123, I get redirected to /profiles/123?id=123. It should be just /profiles/123. The same helper run from the console (Rails.application.routes.url_helpers.profile_path(123)) returns &quot;/profiles/123&quot;, so this happens only in the controller, and apparently only when the target is the same action.

I'm guessing that the problem might be at this line in url_for.rb:

    _router.url_for(url_options.merge((options || {}).symbolize_keys))

The url_options that gets merged with options passed in arguments contains :_path_segments with params from current request and that probably causes the ?id=123 in the url...</original-body>
  <latest-body>In an empty Rails app with such routes:

    resources :users
    match &quot;/profiles/:name&quot; =&gt; &quot;users#show&quot;, :as =&gt; :profile

... and such controller:

    class UsersController &lt; ApplicationController
      def show
        if params[:name]
          render :text =&gt; &quot;ok&quot;
        else
          redirect_to profile_path(params[:id])
        end
      end
    end

... the profile_path that's generated in the controller includes an extra parameter after a question mark; e.g. if I go to /users/123, I get redirected to /profiles/123?id=123. It should be just /profiles/123. The same helper run from the console (Rails.application.routes.url_helpers.profile_path(123)) returns &quot;/profiles/123&quot;, so this happens only in the controller, and apparently only when the target is the same action.

I'm guessing that the problem might be at this line in url_for.rb:

    _router.url_for(url_options.merge((options || {}).symbolize_keys))

The url_options that gets merged with options passed in arguments contains :_path_segments with params from current request and that probably causes the ?id=123 in the url...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In an empty Rails app with such routes:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;resources :users
match &quot;/profiles/:name&quot; =&amp;gt; &quot;users#show&quot;, :as =&amp;gt; :profile&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;... and such controller:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class UsersController &amp;lt; ApplicationController
  def show
    if params[:name]
      render :text =&amp;gt; &quot;ok&quot;
    else
      redirect_to profile_path(params[:id])
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;... the profile_path that's generated in the controller includes
an extra parameter after a question mark; e.g. if I go to
/users/123, I get redirected to /profiles/123?id=123. It should be
just /profiles/123. The same helper run from the console
(Rails.application.routes.url_helpers.profile_path(123)) returns
&quot;/profiles/123&quot;, so this happens only in the controller, and
apparently only when the target is the same action.&lt;/p&gt;
&lt;p&gt;I'm guessing that the problem might be at this line in
url_for.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;_router.url_for(url_options.merge((options || {}).symbolize_keys))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The url_options that gets merged with options passed in
arguments contains :_path_segments with params from current request
and that probably causes the ?id=123 in the url...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In an empty Rails app with such routes:

    resources :users
    match &quot;/profiles/:name&quot; =&gt; &quot;users#show&quot;, :as =&gt; :profile

... and such controller:

    class UsersController &lt; ApplicationController
      def show
        if params[:name]
          render :text =&gt; &quot;ok&quot;
        else
          redirect_to profile_path(params[:id])
        end
      end
    end

... the profile_path that's generated in the controller includes an extra parameter after a question mark; e.g. if I go to /users/123, I get redirected to /profiles/123?id=123. It should be just /profiles/123. The same helper run from the console (Rails.application.routes.url_helpers.profile_path(123)) returns &quot;/profiles/123&quot;, so this happens only in the controller, and apparently only when the target is the same action.

I'm guessing that the problem might be at this line in url_for.rb:

    _router.url_for(url_options.merge((options || {}).symbolize_keys))

The url_options that gets merged with options passed in arguments contains :_path_segments with params from current request and that probably causes the ?id=123 in the url...</body>
      <body-html>&lt;div&gt;&lt;p&gt;In an empty Rails app with such routes:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;resources :users
match &quot;/profiles/:name&quot; =&amp;gt; &quot;users#show&quot;, :as =&amp;gt; :profile&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;... and such controller:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class UsersController &amp;lt; ApplicationController
  def show
    if params[:name]
      render :text =&amp;gt; &quot;ok&quot;
    else
      redirect_to profile_path(params[:id])
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;... the profile_path that's generated in the controller includes
an extra parameter after a question mark; e.g. if I go to
/users/123, I get redirected to /profiles/123?id=123. It should be
just /profiles/123. The same helper run from the console
(Rails.application.routes.url_helpers.profile_path(123)) returns
&quot;/profiles/123&quot;, so this happens only in the controller, and
apparently only when the target is the same action.&lt;/p&gt;
&lt;p&gt;I'm guessing that the problem might be at this line in
url_for.rb:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;_router.url_for(url_options.merge((options || {}).symbolize_keys))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The url_options that gets merged with options passed in
arguments contains :_path_segments with params from current request
and that probably causes the ?id=123 in the url...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T15:36:53+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5021</number>
      <permalink>url_for-should-not-append-current-params-when-generating-url-for-same-action</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_controller router routing url url_for</tag>
      <title>url_for should not append current params when generating url for same action</title>
      <updated-at type="datetime">2010-06-30T15:37:23+01:00</updated-at>
      <user-id type="integer">33887</user-id>
      <version type="integer">1</version>
      <user-name>Jakub Suder</user-name>
      <creator-name>Jakub Suder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5021</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Note, the url is generated correctly (without ?id=123) if I force id to be nil, i.e. profile_path(some_id, :id =&gt; nil), but I think I shouldn't have to do that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Note, the url is generated correctly (without ?id=123) if I
force id to be nil, i.e. profile_path(some_id, :id =&amp;gt; nil), but
I think I shouldn't have to do that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T15:38:29+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5021</number>
      <permalink>url_for-should-not-append-current-params-when-generating-url-for-same-action</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_controller router routing url url_for</tag>
      <title>url_for should not append current params when generating url for same action</title>
      <updated-at type="datetime">2010-06-30T15:40:10+01:00</updated-at>
      <user-id type="integer">33887</user-id>
      <version type="integer">2</version>
      <user-name>Jakub Suder</user-name>
      <creator-name>Jakub Suder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5021</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [54250a5bfe6992afaaca6357d3b414e6c49651ba]) Refactor recall parameter normalization [#5021 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/54250a5bfe6992afaaca6357d3b414e6c49651ba</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/54250a5bfe6992afaaca6357d3b414e6c49651ba&quot;
title=
&quot;Changeset [54250a5bfe6992afaaca6357d3b414e6c49651ba]&quot;&gt;[54250a5bfe6992afaaca6357d3b414e6c49651ba]&lt;/a&gt;)
Refactor recall parameter normalization [&lt;a href=
&quot;/projects/8994/tickets/5021&quot; title=&quot;Ticket #5021&quot;&gt;#5021&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/54250a5bfe6992afaaca6357d3b414e6c49651ba&quot;&gt;
http://github.com/rails/rails/commit/54250a5bfe6992afaaca6357d3b414...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-03T09:06:36+01:00</created-at>
      <creator-id type="integer">33887</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5021</number>
      <permalink>url_for-should-not-append-current-params-when-generating-url-for-same-action</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>action_controller router routing url url_for</tag>
      <title>url_for should not append current params when generating url for same action</title>
      <updated-at type="datetime">2010-07-03T09:06:37+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Jakub Suder</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5021</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
