From b029fa84bf3a809b217acb4218499c9c0fafbbe2 Mon Sep 17 00:00:00 2001
From: John Trupiano <jtrupiano@gmail.com>
Date: Sat, 26 Sep 2009 17:33:39 -0400
Subject: [PATCH 1/2] Failing test for find with hash conditions and include on has many
 through association

---
 .../has_many_through_associations_test.rb          |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/activerecord/test/cases/associations/has_many_through_associations_test.rb b/activerecord/test/cases/associations/has_many_through_associations_test.rb
index a43f876..f5ab2c2 100644
--- a/activerecord/test/cases/associations/has_many_through_associations_test.rb
+++ b/activerecord/test/cases/associations/has_many_through_associations_test.rb
@@ -17,7 +17,7 @@ require 'models/developer'
 
 class HasManyThroughAssociationsTest < ActiveRecord::TestCase
   fixtures :posts, :readers, :people, :comments, :authors, :owners, :pets, :toys,
-           :companies
+           :companies, :developers
 
   def test_associate_existing
     assert_queries(2) { posts(:thinking);people(:david) }
@@ -309,6 +309,11 @@ class HasManyThroughAssociationsTest < ActiveRecord::TestCase
     post_with_no_comments = people(:michael).posts_with_no_comments.first
     assert_equal post_with_no_comments, posts(:authorless)
   end
+  
+  def test_find_on_has_many_through_association_with_include_and_hash_conditions
+    Contract.create!(:company => companies(:first_firm), :developer => developers(:david))
+    assert_equal 1, Company.find(:all, :include => :developers, :conditions => { :'developers.salary' => 80000 }).size
+  end
 
   def test_has_many_through_has_one_reflection
     assert_equal [comments(:eager_sti_on_associations_vs_comment)], authors(:david).very_special_comments
-- 
1.6.1


From 2177d93ba43f8a01acbdb4d7b61ee2d65d3872fa Mon Sep 17 00:00:00 2001
From: John Trupiano <jtrupiano@gmail.com>
Date: Sat, 26 Sep 2009 19:52:05 -0400
Subject: [PATCH 2/2] Fix find with hash conditions with symbol keys and include on has many
 through association

---
 activerecord/lib/active_record/associations.rb |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index c739fdd..61180dd 100755
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1707,7 +1707,7 @@ module ActiveRecord
             if value.is_a?(Hash)
               key.to_s
             else
-              tables_in_string(key) if key.is_a?(String)
+              tables_in_string(key.to_s) if key.is_a?(String) || key.is_a?(Symbol)
             end
           end
           tables.flatten.compact
-- 
1.6.1

