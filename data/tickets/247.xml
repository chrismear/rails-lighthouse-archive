<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-23T19:23:50+01:00</created-at>
  <creator-id type="integer">10134</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">247</number>
  <permalink>validates_associated-detailed-validation-error-messages-on-associations</permalink>
  <priority type="integer">13916</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord</tag>
  <title>validates_associated - Detailed Validation error messages on associations</title>
  <updated-at type="datetime">2008-08-27T02:06:45+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">6</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Brian Takita</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/247</url>
  <priority-name nil="true"></priority-name>
  <original-body>When an associated object (has_one, belongs_to, has_many, etc.) has a validation error, Rails currently gives a broad error message. For example we have a User that has one Profile:
&lt;pre&gt;
class User &lt; ActiveRecord::Base
  has_one :profile
end
&lt;/pre&gt;

If there is a validation error in Profile, the User error message says &quot;Profile is invalid&quot;, instead of the actual error message in Profile.

This makes rendering form validation error messages more cumbersome.

I will be attaching a patch that adds a validates_associated method soon.</original-body>
  <latest-body>When an associated object (has_one, belongs_to, has_many, etc.) has a validation error, Rails currently gives a broad error message. For example we have a User that has one Profile:
&lt;pre&gt;
class User &lt; ActiveRecord::Base
  has_one :profile
end
&lt;/pre&gt;

If there is a validation error in Profile, the User error message says &quot;Profile is invalid&quot;, instead of the actual error message in Profile.

This makes rendering form validation error messages more cumbersome.

I will be attaching a patch that adds a validates_associated method soon.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When an associated object (has_one, belongs_to, has_many, etc.) has a validation error, Rails currently gives a broad error message. For example we have a User that has one Profile:
&lt;/p&gt;&lt;p&gt;
class User &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_one :profile
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
If there is a validation error in Profile, the User error message says &quot;Profile is invalid&quot;, instead of the actual error message in Profile.
&lt;/p&gt;&lt;p&gt;
This makes rendering form validation error messages more cumbersome.
&lt;/p&gt;&lt;p&gt;
I will be attaching a patch that adds a validates_associated method soon.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When an associated object (has_one, belongs_to, has_many, etc.) has a validation error, Rails currently gives a non-detailed error message. For example we have a User that has one Profile:
&lt;pre&gt;
class User &lt; ActiveRecord::Base
  has_one :profile
end
&lt;/pre&gt;

If there is a validation error in Profile, the User error message says &quot;Profile is invalid&quot;, instead of the actual error message in Profile.

This makes rendering form validation error messages more cumbersome.

I will be attaching a patch that adds a validates_associated method soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When an associated object (has_one, belongs_to, has_many, etc.) has a validation error, Rails currently gives a non-detailed error message. For example we have a User that has one Profile:
&lt;/p&gt;&lt;p&gt;
&lt;pre&gt;
&lt;/p&gt;&lt;p&gt;
class User &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
has_one :profile
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
&lt;/pre&gt;
&lt;/p&gt;&lt;p&gt;
If there is a validation error in Profile, the User error message says &quot;Profile is invalid&quot;, instead of the actual error message in Profile.
&lt;/p&gt;&lt;p&gt;
This makes rendering form validation error messages more cumbersome.
&lt;/p&gt;&lt;p&gt;
I will be attaching a patch that adds a validates_associated method soon.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-25T07:57:42+01:00</created-at>
      <creator-id type="integer">10134</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">247</number>
      <permalink>validates_associated-detailed-validation-error-messages-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_associated - Detailed Validation error messages on associations</title>
      <updated-at type="datetime">2008-05-25T07:57:42+01:00</updated-at>
      <user-id type="integer">10134</user-id>
      <version type="integer">1</version>
      <user-name>Brian Takita</user-name>
      <creator-name>Brian Takita</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/247</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I attached a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I attached a patch.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-23T22:47:21+01:00</created-at>
      <creator-id type="integer">10134</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">247</number>
      <permalink>validates_associated-detailed-validation-error-messages-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_associated - Detailed Validation error messages on associations</title>
      <updated-at type="datetime">2008-05-23T22:47:21+01:00</updated-at>
      <user-id type="integer">10134</user-id>
      <version type="integer">2</version>
      <user-name>Brian Takita</user-name>
      <creator-name>Brian Takita</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/247</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I used your patch. I was wondering, does user really need to know that his &quot;Profile is invalid&quot;?

In fact, I see this message twice. I don't know exactly why. Maybe it's because one of my today's hacks when I started trying to understand rails internals for the first time and make the saving of multi-model forms like a breeze.

Anyway, I uncommented this line:
@@@ ruby
record.errors.add(attr_name, ActiveRecord::Errors.default_error_messages[:invalid])
@@@

But the 1 message still stayed. It was coming from add_single_associated_save_callbacks method. So I moved a part of your code there. Now I don't even have to call validates_confirmation_of :password

@@@ ruby
diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index fb5f1f8..6a2d706 100644
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1148,7 +1148,11 @@ module ActiveRecord
           define_method(method_name) do
             association = instance_variable_get(&quot;@#{association_name}&quot;)
             if !association.nil?
-              errors.add &quot;#{association_name}&quot; unless association.target.nil? || association.valid?
+              unless association.target.nil? || association.valid?
+                association.errors.each do |error_name, error_value|
+                  errors.add(error_name, error_value)
+                end
+              end
             end
           end
@@@

So, it's not just one place where detailed validation error message is needed.

I will continue hacking. Will create a ticket and a patch just after I find it worth sharing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I used your patch. I was wondering, does user really need to know that his &quot;Profile is invalid&quot;?
&lt;/p&gt;&lt;p&gt;
In fact, I see this message twice. I don't know exactly why. Maybe it's because one of my today's hacks when I started trying to understand rails internals for the first time and make the saving of multi-model forms like a breeze.
&lt;/p&gt;&lt;p&gt;
Anyway, I uncommented this line:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;record.errors.add(attr_name, ActiveRecord::Errors.default_error_messages[:invalid])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
But the 1 message still stayed. It was coming from add_single_associated_save_callbacks method. So I moved a part of your code there. Now I don't even have to call validates_confirmation_of :password
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index fb5f1f8..6a2d706 100644
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1148,7 +1148,11 @@ module ActiveRecord
           define_method(method_name) do
             association = instance_variable_get(&amp;quot;@#{association_name}&amp;quot;)
             if !association.nil?
-              errors.add &amp;quot;#{association_name}&amp;quot; unless association.target.nil? || association.valid?
+              unless association.target.nil? || association.valid?
+                association.errors.each do |error_name, error_value|
+                  errors.add(error_name, error_value)
+                end
+              end
             end
           end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
So, it's not just one place where detailed validation error message is needed.
&lt;/p&gt;&lt;p&gt;
I will continue hacking. Will create a ticket and a patch just after I find it worth sharing.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-25T17:46:13+01:00</created-at>
      <creator-id type="integer">10134</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">247</number>
      <permalink>validates_associated-detailed-validation-error-messages-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_associated - Detailed Validation error messages on associations</title>
      <updated-at type="datetime">2008-05-25T17:46:13+01:00</updated-at>
      <user-id type="integer">21230</user-id>
      <version type="integer">3</version>
      <user-name>Anton Kuzmin</user-name>
      <creator-name>Brian Takita</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/247</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>My damn brain and linux copy-paster :) Sorry

- Anyway, I uncommented this line: 
+ Anyway, I commented this line: 

- Now I don't even have to call validates_confirmation_of :password 
+ Now I don't even have to call validates_associated :profile</body>
      <body-html>&lt;div&gt;&lt;p&gt;
My damn brain and linux copy-paster :) Sorry
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Anyway, I uncommented this line:
&lt;/li&gt;&lt;li&gt;
Anyway, I commented this line:
&lt;/li&gt;&lt;li&gt;
Now I don't even have to call validates_confirmation_of :password
&lt;/li&gt;&lt;li&gt;
Now I don't even have to call validates_associated :profile
&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-25T21:31:33+01:00</created-at>
      <creator-id type="integer">10134</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">247</number>
      <permalink>validates_associated-detailed-validation-error-messages-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_associated - Detailed Validation error messages on associations</title>
      <updated-at type="datetime">2008-05-25T21:31:33+01:00</updated-at>
      <user-id type="integer">21230</user-id>
      <version type="integer">4</version>
      <user-name>Anton Kuzmin</user-name>
      <creator-name>Brian Takita</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/247</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm in favor of not having to validates_associated.

I think that it would be useful to attach the name of the association that owns the invalid attribute because two models may have the same attribute names.

This is if the error is attached to object with the association, and not the association that is invalid. Ideally validation errors would be attached to its object and reporting on the validation errors would be recursive. However, it seems like that would be difficult.

One of the patches attached to this ticket provides an easy to implement interim solution.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm in favor of not having to validates_associated.
&lt;/p&gt;&lt;p&gt;
I think that it would be useful to attach the name of the association that owns the invalid attribute because two models may have the same attribute names.
&lt;/p&gt;&lt;p&gt;
This is if the error is attached to object with the association, and not the association that is invalid. Ideally validation errors would be attached to its object and reporting on the validation errors would be recursive. However, it seems like that would be difficult.
&lt;/p&gt;&lt;p&gt;
One of the patches attached to this ticket provides an easy to implement interim solution.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-26T02:30:30+01:00</created-at>
      <creator-id type="integer">10134</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">247</number>
      <permalink>validates_associated-detailed-validation-error-messages-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>validates_associated - Detailed Validation error messages on associations</title>
      <updated-at type="datetime">2008-05-26T02:30:30+01:00</updated-at>
      <user-id type="integer">10134</user-id>
      <version type="integer">5</version>
      <user-name>Brian Takita</user-name>
      <creator-name>Brian Takita</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/247</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-27T02:06:45+01:00</created-at>
      <creator-id type="integer">10134</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">247</number>
      <permalink>validates_associated-detailed-validation-error-messages-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord</tag>
      <title>validates_associated - Detailed Validation error messages on associations</title>
      <updated-at type="datetime">2008-08-27T02:06:45+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">6</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Brian Takita</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/247</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>85b5e1f20d2764d96508205139a0af52e9a51121</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-23T22:46:09+01:00</created-at>
      <filename>validates_associated.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">24378</id>
      <size type="integer">5398</size>
      <uploader-id type="integer">10134</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/24378/validates_associated.patch</url>
    </attachment>
  </attachments>
</ticket>
