<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-22T10:33:56+01:00</created-at>
  <creator-id type="integer">76713</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5682</number>
  <permalink>ujs-partial-possible-bug</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;illegal instruction&quot; partial ujs</tag>
  <title>UJS &amp; partial possible bug</title>
  <updated-at type="datetime">2010-09-25T18:18:40+01:00</updated-at>
  <user-id type="integer">65050</user-id>
  <version type="integer">7</version>
  <user-name>David Trasbo</user-name>
  <creator-name>Philippe Lang</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
  <priority-name>Low</priority-name>
  <original-body>Hi,

I'm new to rails, so this might be my fault instead of a bug. But at least it sounds odd. Here are a few files:

list.html.erb
-------------
@@@
&lt;table&gt;
&lt;% @boxes.each do |box| %&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;%= box.name %&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;% end %&gt;
&lt;/table&gt;
&lt;div id=&quot;add&quot;&gt;
  &lt;%=
    render :partial =&gt; &quot;list_add&quot;
  %&gt;
&lt;/div&gt;
@@@

_list_add.html.erb
------------------
@@@
&lt;%=
  link_to_function(&quot;add a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, :partial =&gt; &quot;list_new&quot;
  end
%&gt;
@@@

_list_new.html.erb
------------------
@@@
&lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;:partial =&gt; list_add&quot;
  end
%&gt;
@@@

This code crashes the WEBrick server when trying to render list.html.erb:

@@@
macbook-pro-de-philippe-lang:attikdb plang$ rails s
=&gt; Booting WEBrick
=&gt; Rails 3.0.0 application starting in development on http://0.0.0.0:3000
=&gt; Call with -d to detach
=&gt; Ctrl-C to shutdown server
[2010-09-22 11:09:56] INFO  WEBrick 1.3.1
[2010-09-22 11:09:56] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-09-22 11:09:56] INFO  WEBrick::HTTPServer#start: pid=2959 port=3000
Illegal instruction
macbook-pro-de-philippe-lang:attikdb plang$ 
@@@

Browser says:
@@@
Erreur 324 (net::ERR_EMPTY_RESPONSE) : Erreur inconnue
@@@

A small change and the server does not crash anymore:

_list_new.html.erb
------------------

@@@
&lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;rendering list_add partial here...&quot;
  end
%&gt;
@@@

It looks like rails does not like partials rendering each other through UJS.

What I'm trying to acomplish here is some kind of web 2.0 in-place editing at the bottom of a list. There might be a better way of doing that, sure!

My config: ruby 1.9.2, rails 3.0.0</original-body>
  <latest-body>Hi,

I'm new to rails, so this might be my fault instead of a bug. But at least it sounds odd. Here are a few files:

list.html.erb
-------------
@@@
&lt;table&gt;
&lt;% @boxes.each do |box| %&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;%= box.name %&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;% end %&gt;
&lt;/table&gt;
&lt;div id=&quot;add&quot;&gt;
  &lt;%=
    render :partial =&gt; &quot;list_add&quot;
  %&gt;
&lt;/div&gt;
@@@

_list_add.html.erb
------------------
@@@
&lt;%=
  link_to_function(&quot;add a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, :partial =&gt; &quot;list_new&quot;
  end
%&gt;
@@@

_list_new.html.erb
------------------
@@@
&lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;:partial =&gt; list_add&quot;
  end
%&gt;
@@@

This code crashes the WEBrick server when trying to render list.html.erb:

@@@
macbook-pro-de-philippe-lang:attikdb plang$ rails s
=&gt; Booting WEBrick
=&gt; Rails 3.0.0 application starting in development on http://0.0.0.0:3000
=&gt; Call with -d to detach
=&gt; Ctrl-C to shutdown server
[2010-09-22 11:09:56] INFO  WEBrick 1.3.1
[2010-09-22 11:09:56] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-09-22 11:09:56] INFO  WEBrick::HTTPServer#start: pid=2959 port=3000
Illegal instruction
macbook-pro-de-philippe-lang:attikdb plang$ 
@@@

Browser says:
@@@
Erreur 324 (net::ERR_EMPTY_RESPONSE) : Erreur inconnue
@@@

A small change and the server does not crash anymore:

_list_new.html.erb
------------------

@@@
&lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;rendering list_add partial here...&quot;
  end
%&gt;
@@@

It looks like rails does not like partials rendering each other through UJS.

What I'm trying to acomplish here is some kind of web 2.0 in-place editing at the bottom of a list. There might be a better way of doing that, sure!

My config: ruby 1.9.2, rails 3.0.0</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I'm new to rails, so this might be my fault instead of a bug.
But at least it sounds odd. Here are a few files:&lt;/p&gt;
&lt;h2&gt;list.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;table&amp;gt;
&amp;lt;% @boxes.each do |box| %&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;%= box.name %&amp;gt;&amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
&amp;lt;% end %&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;div id=&quot;add&quot;&amp;gt;
  &amp;lt;%=
    render :partial =&amp;gt; &quot;list_add&quot;
  %&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;_list_add.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%=
  link_to_function(&quot;add a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, :partial =&amp;gt; &quot;list_new&quot;
  end
%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;_list_new.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;:partial =&amp;gt; list_add&quot;
  end
%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This code crashes the WEBrick server when trying to render
list.html.erb:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;macbook-pro-de-philippe-lang:attikdb plang$ rails s
=&amp;gt; Booting WEBrick
=&amp;gt; Rails 3.0.0 application starting in development on http://0.0.0.0:3000
=&amp;gt; Call with -d to detach
=&amp;gt; Ctrl-C to shutdown server
[2010-09-22 11:09:56] INFO  WEBrick 1.3.1
[2010-09-22 11:09:56] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-09-22 11:09:56] INFO  WEBrick::HTTPServer#start: pid=2959 port=3000
Illegal instruction
macbook-pro-de-philippe-lang:attikdb plang$&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Browser says:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Erreur 324 (net::ERR_EMPTY_RESPONSE) : Erreur inconnue&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A small change and the server does not crash anymore:&lt;/p&gt;
&lt;h2&gt;_list_new.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;rendering list_add partial here...&quot;
  end
%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It looks like rails does not like partials rendering each other
through UJS.&lt;/p&gt;
&lt;p&gt;What I'm trying to acomplish here is some kind of web 2.0
in-place editing at the bottom of a list. There might be a better
way of doing that, sure!&lt;/p&gt;
&lt;p&gt;My config: ruby 1.9.2, rails 3.0.0&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

I'm new to rails, so this might be my fault instead of a bug. But at least it sounds odd. Here are a few files:

list.html.erb
-------------
@@@
&lt;table&gt;
&lt;% @boxes.each do |box| %&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;%= box.name %&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;% end %&gt;
&lt;/table&gt;
&lt;div id=&quot;add&quot;&gt;
  &lt;%=
    render :partial =&gt; &quot;list_add&quot;
  %&gt;
&lt;/div&gt;
@@@

_list_add.html.erb
------------------
@@@
&lt;%=
  link_to_function(&quot;add a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, :partial =&gt; &quot;list_new&quot;
  end
%&gt;
@@@

_list_new.html.erb
------------------
@@@
&lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;:partial =&gt; list_add&quot;
  end
%&gt;
@@@

This code crashes the WEBrick server when trying to render list.html.erb:

@@@
macbook-pro-de-philippe-lang:attikdb plang$ rails s
=&gt; Booting WEBrick
=&gt; Rails 3.0.0 application starting in development on http://0.0.0.0:3000
=&gt; Call with -d to detach
=&gt; Ctrl-C to shutdown server
[2010-09-22 11:09:56] INFO  WEBrick 1.3.1
[2010-09-22 11:09:56] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-09-22 11:09:56] INFO  WEBrick::HTTPServer#start: pid=2959 port=3000
Illegal instruction
macbook-pro-de-philippe-lang:attikdb plang$ 
@@@

Browser says:
@@@
Erreur 324 (net::ERR_EMPTY_RESPONSE) : Erreur inconnue
@@@

A small change and the server does not crash anymore:

_list_new.html.erb
------------------

@@@
&lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;rendering list_add partial here...&quot;
  end
%&gt;
@@@

It looks like rails does not like partials rendering each other through UJS.

What I'm trying to acomplish here is some kind of web 2.0 in-place editing at the bottom of a list. There might be a better way of doing that, sure!

My config: ruby 1.9.2, rails 3.0.0</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I'm new to rails, so this might be my fault instead of a bug.
But at least it sounds odd. Here are a few files:&lt;/p&gt;
&lt;h2&gt;list.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;table&amp;gt;
&amp;lt;% @boxes.each do |box| %&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;%= box.name %&amp;gt;&amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
&amp;lt;% end %&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;div id=&quot;add&quot;&amp;gt;
  &amp;lt;%=
    render :partial =&amp;gt; &quot;list_add&quot;
  %&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;_list_add.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%=
  link_to_function(&quot;add a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, :partial =&amp;gt; &quot;list_new&quot;
  end
%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;_list_new.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;:partial =&amp;gt; list_add&quot;
  end
%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This code crashes the WEBrick server when trying to render
list.html.erb:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;macbook-pro-de-philippe-lang:attikdb plang$ rails s
=&amp;gt; Booting WEBrick
=&amp;gt; Rails 3.0.0 application starting in development on http://0.0.0.0:3000
=&amp;gt; Call with -d to detach
=&amp;gt; Ctrl-C to shutdown server
[2010-09-22 11:09:56] INFO  WEBrick 1.3.1
[2010-09-22 11:09:56] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-09-22 11:09:56] INFO  WEBrick::HTTPServer#start: pid=2959 port=3000
Illegal instruction
macbook-pro-de-philippe-lang:attikdb plang$&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Browser says:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Erreur 324 (net::ERR_EMPTY_RESPONSE) : Erreur inconnue&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A small change and the server does not crash anymore:&lt;/p&gt;
&lt;h2&gt;_list_new.html.erb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%=
  link_to_function(&quot;finished adding a new box&quot;) do |page|
    page.replace_html &quot;add&quot;, &quot;rendering list_add partial here...&quot;
  end
%&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It looks like rails does not like partials rendering each other
through UJS.&lt;/p&gt;
&lt;p&gt;What I'm trying to acomplish here is some kind of web 2.0
in-place editing at the bottom of a list. There might be a better
way of doing that, sure!&lt;/p&gt;
&lt;p&gt;My config: ruby 1.9.2, rails 3.0.0&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-22T10:33:56+01:00</created-at>
      <creator-id type="integer">76713</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5682</number>
      <permalink>ujs-partial-possible-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;illegal response&quot; partial ujs</tag>
      <title>UJS &amp; partial possible bug</title>
      <updated-at type="datetime">2010-09-22T10:45:31+01:00</updated-at>
      <user-id type="integer">76713</user-id>
      <version type="integer">1</version>
      <user-name>Philippe Lang</user-name>
      <creator-name>Philippe Lang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well I maybe wrong but your code just enters infinite loop. `_list_add.html.erb` and `_list_new.html.erb` render each other until ruby crashes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well I maybe wrong but your code just enters infinite loop.
&lt;code&gt;_list_add.html.erb&lt;/code&gt; and &lt;code&gt;_list_new.html.erb&lt;/code&gt;
render each other until ruby crashes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-22T21:44:32+01:00</created-at>
      <creator-id type="integer">76713</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5682</number>
      <permalink>ujs-partial-possible-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;illegal response&quot; partial ujs</tag>
      <title>UJS &amp; partial possible bug</title>
      <updated-at type="datetime">2010-09-22T21:44:33+01:00</updated-at>
      <user-id type="integer">86902</user-id>
      <version type="integer">2</version>
      <user-name>Marjan Krekoten'</user-name>
      <creator-name>Philippe Lang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Marjan,

Each partial renders the other, but only after a click, since &quot;link_to_function&quot; is used. This shouldn't be a problem as far as I understand. But you are right, there must be some kind of infinite loop inside the framework.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Marjan,&lt;/p&gt;
&lt;p&gt;Each partial renders the other, but only after a click, since
&quot;link_to_function&quot; is used. This shouldn't be a problem as far as I
understand. But you are right, there must be some kind of infinite
loop inside the framework.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-23T07:04:31+01:00</created-at>
      <creator-id type="integer">76713</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;illegal response\&quot; partial ujs&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5682</number>
      <permalink>ujs-partial-possible-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;illegal instruction&quot; partial ujs</tag>
      <title>UJS &amp; partial possible bug</title>
      <updated-at type="datetime">2010-09-23T07:04:33+01:00</updated-at>
      <user-id type="integer">76713</user-id>
      <version type="integer">3</version>
      <user-name>Philippe Lang</user-name>
      <creator-name>Philippe Lang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It renders partials on server side. JS code on clients side operates with already rendered strings. So while rendering those partials are trying to render each other.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It renders partials on server side. JS code on clients side
operates with already rendered strings. So while rendering those
partials are trying to render each other.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-23T07:11:12+01:00</created-at>
      <creator-id type="integer">76713</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5682</number>
      <permalink>ujs-partial-possible-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;illegal instruction&quot; partial ujs</tag>
      <title>UJS &amp; partial possible bug</title>
      <updated-at type="datetime">2010-09-23T07:11:14+01:00</updated-at>
      <user-id type="integer">86902</user-id>
      <version type="integer">4</version>
      <user-name>Marjan Krekoten'</user-name>
      <creator-name>Philippe Lang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When rendering list.html.erb, I thought that only the _list_add.html.erb partial was rendered, with a link allowing the rendering of the next partial through UJS, and so on. Conceptually, I have to admit I still don't see exactly why this code breaks...</body>
      <body-html>&lt;div&gt;&lt;p&gt;When rendering list.html.erb, I thought that only the
_list_add.html.erb partial was rendered, with a link allowing the
rendering of the next partial through UJS, and so on. Conceptually,
I have to admit I still don't see exactly why this code
breaks...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-23T07:21:39+01:00</created-at>
      <creator-id type="integer">76713</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5682</number>
      <permalink>ujs-partial-possible-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;illegal instruction&quot; partial ujs</tag>
      <title>UJS &amp; partial possible bug</title>
      <updated-at type="datetime">2010-09-23T07:21:40+01:00</updated-at>
      <user-id type="integer">76713</user-id>
      <version type="integer">5</version>
      <user-name>Philippe Lang</user-name>
      <creator-name>Philippe Lang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hum, I think I understand better now. As you say &quot;JS code on clients side operates with already rendered strings&quot;. That means rails tries to pre-render both partials rendering each other, UJS or not, resulting in an infinite loop. I could see that with a few puts added at the top of the partials:

@@@
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
------&gt; rendering add
------&gt; rendering new
Illegal instruction
@@@

So I guess this is not a bug at all: rails certainly works like this &quot;by design&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hum, I think I understand better now. As you say &quot;JS code on
clients side operates with already rendered strings&quot;. That means
rails tries to pre-render both partials rendering each other, UJS
or not, resulting in an infinite loop. I could see that with a few
puts added at the top of the partials:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
------&amp;gt; rendering add
------&amp;gt; rendering new
Illegal instruction&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So I guess this is not a bug at all: rails certainly works like
this &quot;by design&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-23T08:50:58+01:00</created-at>
      <creator-id type="integer">76713</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5682</number>
      <permalink>ujs-partial-possible-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;illegal instruction&quot; partial ujs</tag>
      <title>UJS &amp; partial possible bug</title>
      <updated-at type="datetime">2010-09-23T08:51:00+01:00</updated-at>
      <user-id type="integer">76713</user-id>
      <version type="integer">6</version>
      <user-name>Philippe Lang</user-name>
      <creator-name>Philippe Lang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>See above.</body>
      <body-html>&lt;div&gt;&lt;p&gt;See above.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-25T18:18:39+01:00</created-at>
      <creator-id type="integer">76713</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5682</number>
      <permalink>ujs-partial-possible-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;illegal instruction&quot; partial ujs</tag>
      <title>UJS &amp; partial possible bug</title>
      <updated-at type="datetime">2010-09-25T18:18:40+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">7</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Philippe Lang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5682</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
